ARM GAS  C:\Users\essele\AppData\Local\Temp\ccnyoXQF.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m0
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 0
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"command.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.comm	toks,80,4
  20              		.global	tok_count
  21              		.bss
  22              		.align	2
  23              		.type	tok_count, %object
  24              		.size	tok_count, 4
  25              	tok_count:
  26 0000 00000000 		.space	4
  27              		.global	commands
  28              		.section	.rodata
  29              		.align	2
  30              	.LC0:
  31 0000 61646472 		.ascii	"addr\000"
  31      00
  32 0005 000000   		.align	2
  33              	.LC1:
  34 0008 436F6E66 		.ascii	"Configure or query the GPIB device address\000"
  34      69677572 
  34      65206F72 
  34      20717565 
  34      72792074 
  35 0033 00       		.align	2
  36              	.LC2:
  37 0034 6175746F 		.ascii	"auto\000"
  37      00
  38 0039 000000   		.align	2
  39              	.LC3:
  40 003c 436F6E66 		.ascii	"Configure automatic read after write\000"
  40      69677572 
  40      65206175 
  40      746F6D61 
  40      74696320 
  41 0061 000000   		.align	2
  42              	.LC4:
  43 0064 636C7200 		.ascii	"clr\000"
  44              		.align	2
  45              	.LC5:
  46 0068 53656E64 		.ascii	"Send a selected device clear (SDC) message\000"
  46      20612073 
ARM GAS  C:\Users\essele\AppData\Local\Temp\ccnyoXQF.s 			page 2


  46      656C6563 
  46      74656420 
  46      64657669 
  47 0093 00       		.align	2
  48              	.LC6:
  49 0094 656F6900 		.ascii	"eoi\000"
  50              		.align	2
  51              	.LC7:
  52 0098 41737365 		.ascii	"Assertion of EOI line with the last transmitted cha"
  52      7274696F 
  52      6E206F66 
  52      20454F49 
  52      206C696E 
  53 00cb 72616374 		.ascii	"racter\000"
  53      657200
  54 00d2 0000     		.align	2
  55              	.LC8:
  56 00d4 656F7300 		.ascii	"eos\000"
  57              		.align	2
  58              	.LC9:
  59 00d8 41707065 		.ascii	"Append specific terminator to GPIB output\000"
  59      6E642073 
  59      70656369 
  59      66696320 
  59      7465726D 
  60 0102 0000     		.align	2
  61              	.LC10:
  62 0104 656F745F 		.ascii	"eot_char\000"
  62      63686172 
  62      00
  63 010d 000000   		.align	2
  64              	.LC11:
  65 0110 43686172 		.ascii	"Character to add for EOI if eot_enable\000"
  65      61637465 
  65      7220746F 
  65      20616464 
  65      20666F72 
  66 0137 00       		.align	2
  67              	.LC12:
  68 0138 656F745F 		.ascii	"eot_enable\000"
  68      656E6162 
  68      6C6500
  69 0143 00       		.align	2
  70              	.LC13:
  71 0144 41707065 		.ascii	"Append eot_char when EOI detected\000"
  71      6E642065 
  71      6F745F63 
  71      68617220 
  71      7768656E 
  72 0166 0000     		.align	2
  73              	.LC14:
  74 0168 68656C70 		.ascii	"help\000"
  74      00
  75 016d 000000   		.align	2
  76              	.LC15:
  77 0170 44697370 		.ascii	"Display command list\000"
  77      6C617920 
ARM GAS  C:\Users\essele\AppData\Local\Temp\ccnyoXQF.s 			page 3


  77      636F6D6D 
  77      616E6420 
  77      6C697374 
  78 0185 000000   		.align	2
  79              	.LC16:
  80 0188 69666300 		.ascii	"ifc\000"
  81              		.align	2
  82              	.LC17:
  83 018c 53656E64 		.ascii	"Send an interface clear (IFC) message\000"
  83      20616E20 
  83      696E7465 
  83      72666163 
  83      6520636C 
  84 01b2 0000     		.align	2
  85              	.LC18:
  86 01b4 6C6C6F00 		.ascii	"llo\000"
  87              		.align	2
  88              	.LC19:
  89 01b8 53656E64 		.ascii	"Send a local lock out (LLO) message\000"
  89      2061206C 
  89      6F63616C 
  89      206C6F63 
  89      6B206F75 
  90              		.align	2
  91              	.LC20:
  92 01dc 6C6F6300 		.ascii	"loc\000"
  93              		.align	2
  94              	.LC21:
  95 01e0 53656E64 		.ascii	"Send a go to local (GTL) message\000"
  95      20612067 
  95      6F20746F 
  95      206C6F63 
  95      616C2028 
  96 0201 000000   		.align	2
  97              	.LC22:
  98 0204 72656164 		.ascii	"read\000"
  98      00
  99 0209 000000   		.align	2
 100              	.LC23:
 101 020c 52656164 		.ascii	"Read from the device\000"
 101      2066726F 
 101      6D207468 
 101      65206465 
 101      76696365 
 102 0221 000000   		.align	2
 103              	.LC24:
 104 0224 72656164 		.ascii	"read_tmo_ms\000"
 104      5F746D6F 
 104      5F6D7300 
 105              		.align	2
 106              	.LC25:
 107 0230 52656164 		.ascii	"Read timeout value in ms\000"
 107      2074696D 
 107      656F7574 
 107      2076616C 
 107      75652069 
 108 0249 000000   		.align	2
ARM GAS  C:\Users\essele\AppData\Local\Temp\ccnyoXQF.s 			page 4


 109              	.LC26:
 110 024c 76657200 		.ascii	"ver\000"
 111              		.align	2
 112              	.LC27:
 113 0250 52657475 		.ascii	"Return the version of the yaugi firmware\000"
 113      726E2074 
 113      68652076 
 113      65727369 
 113      6F6E206F 
 114 0279 000000   		.align	2
 115              	.LC28:
 116 027c 636F6E66 		.ascii	"config\000"
 116      696700
 117 0283 00       		.align	2
 118              	.LC29:
 119 0284 53686F77 		.ascii	"Show current configuration settings\000"
 119      20637572 
 119      72656E74 
 119      20636F6E 
 119      66696775 
 120              		.align	2
 121              	.LC30:
 122 02a8 787800   		.ascii	"xx\000"
 123 02ab 00       		.align	2
 124              	.LC31:
 125 02ac 52656164 		.ascii	"Read all pins\000"
 125      20616C6C 
 125      2070696E 
 125      7300
 126 02ba 0000     		.align	2
 127              		.type	commands, %object
 128              		.size	commands, 544
 129              	commands:
 130 02bc 00000000 		.word	.LC0
 131 02c0 00000000 		.word	cmd_uint
 132 02c4 06000000 		.word	settings+6
 133 02c8 0000     		.short	0
 134 02ca 1E00     		.short	30
 135 02cc 08000000 		.word	.LC1
 136 02d0 10000000 		.word	__compound_literal.0
 137 02d4 00000000 		.word	0
 138 02d8 00000000 		.word	0
 139 02dc 34000000 		.word	.LC2
 140 02e0 00000000 		.word	cmd_uint
 141 02e4 08000000 		.word	settings+8
 142 02e8 0000     		.short	0
 143 02ea 0200     		.short	2
 144 02ec 3C000000 		.word	.LC3
 145 02f0 1C000000 		.word	__compound_literal.1
 146 02f4 00000000 		.word	auto_means
 147 02f8 00000000 		.word	0
 148 02fc 64000000 		.word	.LC4
 149 0300 00000000 		.word	cmd_noargs
 150 0304 00000000 		.word	0
 151 0308 0000     		.short	0
 152 030a 0000     		.short	0
 153 030c 68000000 		.word	.LC5
ARM GAS  C:\Users\essele\AppData\Local\Temp\ccnyoXQF.s 			page 5


 154 0310 00000000 		.word	no_usage_args
 155 0314 00000000 		.word	0
 156 0318 00000000 		.word	helper_clr
 157 031c 94000000 		.word	.LC6
 158 0320 00000000 		.word	cmd_uint
 159 0324 08000000 		.word	settings+8
 160 0328 0000     		.short	0
 161 032a 0100     		.short	1
 162 032c 98000000 		.word	.LC7
 163 0330 00000000 		.word	enable_disable_usage
 164 0334 00000000 		.word	enable_disable_means
 165 0338 00000000 		.word	0
 166 033c D4000000 		.word	.LC8
 167 0340 00000000 		.word	cmd_uint
 168 0344 0C000000 		.word	settings+12
 169 0348 0000     		.short	0
 170 034a 0300     		.short	3
 171 034c D8000000 		.word	.LC9
 172 0350 24000000 		.word	__compound_literal.2
 173 0354 00000000 		.word	eos_means
 174 0358 00000000 		.word	0
 175 035c 04010000 		.word	.LC10
 176 0360 00000000 		.word	cmd_uint
 177 0364 0E000000 		.word	settings+14
 178 0368 0000     		.short	0
 179 036a FF00     		.short	255
 180 036c 10010000 		.word	.LC11
 181 0370 2C000000 		.word	__compound_literal.3
 182 0374 00000000 		.word	0
 183 0378 00000000 		.word	0
 184 037c 38010000 		.word	.LC12
 185 0380 00000000 		.word	cmd_uint
 186 0384 10000000 		.word	settings+16
 187 0388 0000     		.short	0
 188 038a 0100     		.short	1
 189 038c 44010000 		.word	.LC13
 190 0390 00000000 		.word	enable_disable_usage
 191 0394 00000000 		.word	enable_disable_means
 192 0398 00000000 		.word	0
 193 039c 68010000 		.word	.LC14
 194 03a0 00000000 		.word	cmd_help
 195 03a4 00000000 		.word	0
 196 03a8 0000     		.short	0
 197 03aa 0000     		.short	0
 198 03ac 70010000 		.word	.LC15
 199 03b0 38000000 		.word	__compound_literal.4
 200 03b4 00000000 		.word	0
 201 03b8 00000000 		.word	0
 202 03bc 88010000 		.word	.LC16
 203 03c0 00000000 		.word	cmd_noargs
 204 03c4 00000000 		.word	0
 205 03c8 0000     		.short	0
 206 03ca 0000     		.short	0
 207 03cc 8C010000 		.word	.LC17
 208 03d0 00000000 		.word	no_usage_args
 209 03d4 00000000 		.word	0
 210 03d8 00000000 		.word	helper_ifc
ARM GAS  C:\Users\essele\AppData\Local\Temp\ccnyoXQF.s 			page 6


 211 03dc B4010000 		.word	.LC18
 212 03e0 00000000 		.word	cmd_noargs
 213 03e4 00000000 		.word	0
 214 03e8 0000     		.short	0
 215 03ea 0000     		.short	0
 216 03ec B8010000 		.word	.LC19
 217 03f0 00000000 		.word	no_usage_args
 218 03f4 00000000 		.word	0
 219 03f8 00000000 		.word	helper_llo
 220 03fc DC010000 		.word	.LC20
 221 0400 00000000 		.word	cmd_noargs
 222 0404 00000000 		.word	0
 223 0408 0000     		.short	0
 224 040a 0000     		.short	0
 225 040c E0010000 		.word	.LC21
 226 0410 00000000 		.word	no_usage_args
 227 0414 00000000 		.word	0
 228 0418 00000000 		.word	helper_loc
 229 041c 04020000 		.word	.LC22
 230 0420 00000000 		.word	cmd_read
 231 0424 00000000 		.word	0
 232 0428 0000     		.short	0
 233 042a 0000     		.short	0
 234 042c 0C020000 		.word	.LC23
 235 0430 40000000 		.word	__compound_literal.5
 236 0434 00000000 		.word	0
 237 0438 00000000 		.word	0
 238 043c 24020000 		.word	.LC24
 239 0440 00000000 		.word	cmd_uint
 240 0444 12000000 		.word	settings+18
 241 0448 0100     		.short	1
 242 044a B80B     		.short	3000
 243 044c 30020000 		.word	.LC25
 244 0450 4C000000 		.word	__compound_literal.6
 245 0454 00000000 		.word	0
 246 0458 00000000 		.word	0
 247 045c 4C020000 		.word	.LC26
 248 0460 00000000 		.word	cmd_noargs
 249 0464 00000000 		.word	0
 250 0468 0000     		.short	0
 251 046a 0000     		.short	0
 252 046c 50020000 		.word	.LC27
 253 0470 00000000 		.word	no_usage_args
 254 0474 00000000 		.word	0
 255 0478 00000000 		.word	helper_version
 256 047c 7C020000 		.word	.LC28
 257 0480 00000000 		.word	cmd_config
 258 0484 00000000 		.word	0
 259 0488 0000     		.short	0
 260 048a 0000     		.short	0
 261 048c 84020000 		.word	.LC29
 262 0490 00000000 		.word	no_usage_args
 263 0494 00000000 		.word	0
 264 0498 00000000 		.word	0
 265 049c A8020000 		.word	.LC30
 266 04a0 00000000 		.word	cmd_noargs
 267 04a4 00000000 		.word	0
ARM GAS  C:\Users\essele\AppData\Local\Temp\ccnyoXQF.s 			page 7


 268 04a8 0000     		.short	0
 269 04aa 0000     		.short	0
 270 04ac AC020000 		.word	.LC31
 271 04b0 00000000 		.word	no_usage_args
 272 04b4 00000000 		.word	0
 273 04b8 00000000 		.word	helper_gpiball
 274 04bc 00000000 		.word	0
 275 04c0 00000000 		.word	0
 276 04c4 00000000 		.word	0
 277 04c8 0000     		.short	0
 278 04ca 0000     		.short	0
 279 04cc 00000000 		.word	0
 280 04d0 00000000 		.word	no_usage_args
 281 04d4 00000000 		.word	0
 282 04d8 00000000 		.word	0
 283              		.align	2
 284              	.LC33:
 285 04dc 200900   		.ascii	" \011\000"
 286 04df 00       		.align	2
 287              	.LC36:
 288 04e0 3C657272 		.ascii	"<error: too many tokens>\015\012\000"
 288      6F723A20 
 288      746F6F20 
 288      6D616E79 
 288      20746F6B 
 289              		.section	.text.tokenise,"ax",%progbits
 290              		.align	2
 291              		.global	tokenise
 292              		.code	16
 293              		.thumb_func
 294              		.type	tokenise, %function
 295              	tokenise:
 296              	.LFB35:
 297              		.file 1 "command.c"
   1:command.c     **** /****
   2:command.c     ****  * YAUGI -- Yet Another USB GPIB Interface
   3:command.c     ****  * 
   4:command.c     ****  * Lee Essen, 2019
   5:command.c     ****  *
   6:command.c     ****  * This work is licensed under a Creative Commons 
   7:command.c     ****  * Attribution-NonCommercial-ShareAlike 4.0 International License.
   8:command.c     ****  *
   9:command.c     ****  */
  10:command.c     **** 
  11:command.c     **** 
  12:command.c     **** #include "command.h"
  13:command.c     **** #include "serial.h"
  14:command.c     **** #include "settings.h"
  15:command.c     **** #include "gpib.h"
  16:command.c     **** #include <stdio.h>
  17:command.c     **** 
  18:command.c     **** #define MAJOR_VERSION 1
  19:command.c     **** #define MINOR_VERSION 2
  20:command.c     **** 
  21:command.c     **** 
  22:command.c     **** #define MAX_TOKS 20
  23:command.c     **** 
ARM GAS  C:\Users\essele\AppData\Local\Temp\ccnyoXQF.s 			page 8


  24:command.c     **** char    *toks[MAX_TOKS];
  25:command.c     **** int     tok_count = 0;
  26:command.c     **** 
  27:command.c     **** 
  28:command.c     **** 
  29:command.c     **** 
  30:command.c     **** /**
  31:command.c     ****  * A set or view value of uint16_t
  32:command.c     ****  */
  33:command.c     **** struct uint_based {
  34:command.c     ****     int         min;
  35:command.c     ****     int         max;
  36:command.c     ****     uint16_t    *set;
  37:command.c     **** };
  38:command.c     **** 
  39:command.c     **** /**
  40:command.c     ****  * A straight command that doesn't take any arguments
  41:command.c     ****  */
  42:command.c     **** struct no_args {
  43:command.c     **** };
  44:command.c     **** 
  45:command.c     **** /**
  46:command.c     ****  * If we have specific itemised options we can display the help and status
  47:command.c     ****  * information
  48:command.c     ****  */
  49:command.c     **** struct item_meaning {
  50:command.c     ****     int     value;
  51:command.c     ****     char    *meaning;
  52:command.c     **** };
  53:command.c     **** 
  54:command.c     **** struct cmd {
  55:command.c     ****     char                        *name;
  56:command.c     ****     int                         (*func)(char *argv[], int argc, const struct cmd *cmd);
  57:command.c     ****     uint16_t                    *setting;
  58:command.c     ****     uint16_t                    min;
  59:command.c     ****     uint16_t                    max;
  60:command.c     **** //
  61:command.c     **** //    union {
  62:command.c     **** //        struct uint_based       uint;
  63:command.c     **** //        struct no_args          noargs;
  64:command.c     **** //    } u;
  65:command.c     ****     const char                  *help;
  66:command.c     ****     const char                  **usage;
  67:command.c     ****     const struct item_meaning   *meanings;
  68:command.c     ****     int                         (*post_func)(char *argv[], int argc);
  69:command.c     **** };
  70:command.c     **** 
  71:command.c     **** 
  72:command.c     **** const struct cmd commands[];
  73:command.c     **** 
  74:command.c     **** /**
  75:command.c     ****  * Split an input string on whitespace, null in between tokens and populate the list
  76:command.c     ****  * (up to a max number of arguments)
  77:command.c     ****  */
  78:command.c     **** int tokenise(uint8_t *buf, int len) {
 298              		.loc 1 78 0
 299              		.cfi_startproc
ARM GAS  C:\Users\essele\AppData\Local\Temp\ccnyoXQF.s 			page 9


 300              		@ args = 0, pretend = 0, frame = 16
 301              		@ frame_needed = 1, uses_anonymous_args = 0
 302 0000 80B5     		push	{r7, lr}
 303              		.cfi_def_cfa_offset 8
 304              		.cfi_offset 7, -8
 305              		.cfi_offset 14, -4
 306 0002 84B0     		sub	sp, sp, #16
 307              		.cfi_def_cfa_offset 24
 308 0004 00AF     		add	r7, sp, #0
 309              		.cfi_def_cfa_register 7
 310 0006 7860     		str	r0, [r7, #4]
 311 0008 3960     		str	r1, [r7]
  79:command.c     ****     int i = 0;
 312              		.loc 1 79 0
 313 000a 0023     		movs	r3, #0
 314 000c FB60     		str	r3, [r7, #12]
  80:command.c     ****     
  81:command.c     ****     tok_count = 0;
 315              		.loc 1 81 0
 316 000e 2F4B     		ldr	r3, .L16
 317 0010 0022     		movs	r2, #0
 318 0012 1A60     		str	r2, [r3]
  82:command.c     ****     
  83:command.c     ****     while(i < len) {
 319              		.loc 1 83 0
 320 0014 50E0     		b	.L2
 321              	.L6:
  84:command.c     ****         
  85:command.c     ****         // First get past any leading whitespace...
  86:command.c     ****         while(i < len) {
  87:command.c     ****             if (strchr(" \t", *buf) == NULL) {
 322              		.loc 1 87 0
 323 0016 7B68     		ldr	r3, [r7, #4]
 324 0018 1B78     		ldrb	r3, [r3]
 325 001a 1A00     		movs	r2, r3
 326 001c 2C4B     		ldr	r3, .L16+4
 327 001e 1100     		movs	r1, r2
 328 0020 1800     		movs	r0, r3
 329 0022 FFF7FEFF 		bl	strchr
 330 0026 031E     		subs	r3, r0, #0
 331 0028 0AD0     		beq	.L14
  88:command.c     ****                 break;
  89:command.c     ****             }
  90:command.c     ****             i++;
 332              		.loc 1 90 0
 333 002a FB68     		ldr	r3, [r7, #12]
 334 002c 0133     		adds	r3, r3, #1
 335 002e FB60     		str	r3, [r7, #12]
  91:command.c     ****             buf++;
 336              		.loc 1 91 0
 337 0030 7B68     		ldr	r3, [r7, #4]
 338 0032 0133     		adds	r3, r3, #1
 339 0034 7B60     		str	r3, [r7, #4]
 340              	.L3:
  86:command.c     ****             if (strchr(" \t", *buf) == NULL) {
 341              		.loc 1 86 0
 342 0036 FA68     		ldr	r2, [r7, #12]
ARM GAS  C:\Users\essele\AppData\Local\Temp\ccnyoXQF.s 			page 10


 343 0038 3B68     		ldr	r3, [r7]
 344 003a 9A42     		cmp	r2, r3
 345 003c EBDB     		blt	.L6
 346 003e 00E0     		b	.L5
 347              	.L14:
  88:command.c     ****                 break;
 348              		.loc 1 88 0
 349 0040 C046     		nop
 350              	.L5:
  92:command.c     ****         }
  93:command.c     ****         // Could be the end of the string?
  94:command.c     ****         if (i == len) {
 351              		.loc 1 94 0
 352 0042 FA68     		ldr	r2, [r7, #12]
 353 0044 3B68     		ldr	r3, [r7]
 354 0046 9A42     		cmp	r2, r3
 355 0048 02D1     		bne	.L7
  95:command.c     ****             return tok_count;
 356              		.loc 1 95 0
 357 004a 204B     		ldr	r3, .L16
 358 004c 1B68     		ldr	r3, [r3]
 359 004e 39E0     		b	.L8
 360              	.L7:
  96:command.c     ****         }
  97:command.c     ****         
  98:command.c     ****         // Setup the token
  99:command.c     ****         toks[tok_count] = (char *)buf;
 361              		.loc 1 99 0
 362 0050 1E4B     		ldr	r3, .L16
 363 0052 1A68     		ldr	r2, [r3]
 364 0054 1F4B     		ldr	r3, .L16+8
 365 0056 9200     		lsls	r2, r2, #2
 366 0058 7968     		ldr	r1, [r7, #4]
 367 005a D150     		str	r1, [r2, r3]
 100:command.c     ****         
 101:command.c     ****         // Now get past any non-whitespace...
 102:command.c     ****         while (i < len) {
 368              		.loc 1 102 0
 369 005c 0FE0     		b	.L9
 370              	.L12:
 103:command.c     ****             if (strchr(" \t", *buf) != NULL) {
 371              		.loc 1 103 0
 372 005e 7B68     		ldr	r3, [r7, #4]
 373 0060 1B78     		ldrb	r3, [r3]
 374 0062 1A00     		movs	r2, r3
 375 0064 1A4B     		ldr	r3, .L16+4
 376 0066 1100     		movs	r1, r2
 377 0068 1800     		movs	r0, r3
 378 006a FFF7FEFF 		bl	strchr
 379 006e 031E     		subs	r3, r0, #0
 380 0070 0AD1     		bne	.L15
 104:command.c     ****                 break;
 105:command.c     ****             }
 106:command.c     ****             i++;
 381              		.loc 1 106 0
 382 0072 FB68     		ldr	r3, [r7, #12]
 383 0074 0133     		adds	r3, r3, #1
ARM GAS  C:\Users\essele\AppData\Local\Temp\ccnyoXQF.s 			page 11


 384 0076 FB60     		str	r3, [r7, #12]
 107:command.c     ****             buf++;
 385              		.loc 1 107 0
 386 0078 7B68     		ldr	r3, [r7, #4]
 387 007a 0133     		adds	r3, r3, #1
 388 007c 7B60     		str	r3, [r7, #4]
 389              	.L9:
 102:command.c     ****             if (strchr(" \t", *buf) != NULL) {
 390              		.loc 1 102 0
 391 007e FA68     		ldr	r2, [r7, #12]
 392 0080 3B68     		ldr	r3, [r7]
 393 0082 9A42     		cmp	r2, r3
 394 0084 EBDB     		blt	.L12
 395 0086 00E0     		b	.L11
 396              	.L15:
 104:command.c     ****                 break;
 397              		.loc 1 104 0
 398 0088 C046     		nop
 399              	.L11:
 108:command.c     ****         }
 109:command.c     ****         // Null terminate the token
 110:command.c     ****         *buf++ = 0;
 400              		.loc 1 110 0
 401 008a 7B68     		ldr	r3, [r7, #4]
 402 008c 5A1C     		adds	r2, r3, #1
 403 008e 7A60     		str	r2, [r7, #4]
 404 0090 0022     		movs	r2, #0
 405 0092 1A70     		strb	r2, [r3]
 111:command.c     ****         i++;
 406              		.loc 1 111 0
 407 0094 FB68     		ldr	r3, [r7, #12]
 408 0096 0133     		adds	r3, r3, #1
 409 0098 FB60     		str	r3, [r7, #12]
 112:command.c     ****         tok_count++;
 410              		.loc 1 112 0
 411 009a 0C4B     		ldr	r3, .L16
 412 009c 1B68     		ldr	r3, [r3]
 413 009e 5A1C     		adds	r2, r3, #1
 414 00a0 0A4B     		ldr	r3, .L16
 415 00a2 1A60     		str	r2, [r3]
 113:command.c     ****         
 114:command.c     ****         if (tok_count == MAX_TOKS) {
 416              		.loc 1 114 0
 417 00a4 094B     		ldr	r3, .L16
 418 00a6 1B68     		ldr	r3, [r3]
 419 00a8 142B     		cmp	r3, #20
 420 00aa 05D1     		bne	.L2
 115:command.c     ****             serial_printf("<error: too many tokens>\r\n");
 421              		.loc 1 115 0
 422 00ac 0A4B     		ldr	r3, .L16+12
 423 00ae 1800     		movs	r0, r3
 424 00b0 FFF7FEFF 		bl	serial_printf
 116:command.c     ****             return 0;
 425              		.loc 1 116 0
 426 00b4 0023     		movs	r3, #0
 427 00b6 05E0     		b	.L8
 428              	.L2:
ARM GAS  C:\Users\essele\AppData\Local\Temp\ccnyoXQF.s 			page 12


  83:command.c     ****         
 429              		.loc 1 83 0
 430 00b8 FA68     		ldr	r2, [r7, #12]
 431 00ba 3B68     		ldr	r3, [r7]
 432 00bc 9A42     		cmp	r2, r3
 433 00be BADB     		blt	.L3
 117:command.c     ****         }
 118:command.c     ****     }
 119:command.c     ****     return tok_count;
 434              		.loc 1 119 0
 435 00c0 024B     		ldr	r3, .L16
 436 00c2 1B68     		ldr	r3, [r3]
 437              	.L8:
 120:command.c     **** }
 438              		.loc 1 120 0
 439 00c4 1800     		movs	r0, r3
 440 00c6 BD46     		mov	sp, r7
 441 00c8 04B0     		add	sp, sp, #16
 442              		@ sp needed
 443 00ca 80BD     		pop	{r7, pc}
 444              	.L17:
 445              		.align	2
 446              	.L16:
 447 00cc 00000000 		.word	tok_count
 448 00d0 DC040000 		.word	.LC33
 449 00d4 00000000 		.word	toks
 450 00d8 E0040000 		.word	.LC36
 451              		.cfi_endproc
 452              	.LFE35:
 453              		.size	tokenise, .-tokenise
 454              		.section	.rodata
 455 04fb 00       		.align	2
 456              	.LC38:
 457 04fc 30313233 		.ascii	"0123456789\000"
 457      34353637 
 457      383900
 458              		.section	.text.is_int,"ax",%progbits
 459              		.align	2
 460              		.global	is_int
 461              		.code	16
 462              		.thumb_func
 463              		.type	is_int, %function
 464              	is_int:
 465              	.LFB36:
 121:command.c     **** 
 122:command.c     **** /**
 123:command.c     ****  * is_int() and to_int()
 124:command.c     ****  */
 125:command.c     **** int is_int(char *v) {
 466              		.loc 1 125 0
 467              		.cfi_startproc
 468              		@ args = 0, pretend = 0, frame = 8
 469              		@ frame_needed = 1, uses_anonymous_args = 0
 470 0000 80B5     		push	{r7, lr}
 471              		.cfi_def_cfa_offset 8
 472              		.cfi_offset 7, -8
 473              		.cfi_offset 14, -4
ARM GAS  C:\Users\essele\AppData\Local\Temp\ccnyoXQF.s 			page 13


 474 0002 82B0     		sub	sp, sp, #8
 475              		.cfi_def_cfa_offset 16
 476 0004 00AF     		add	r7, sp, #0
 477              		.cfi_def_cfa_register 7
 478 0006 7860     		str	r0, [r7, #4]
 126:command.c     ****     while(*v) {
 479              		.loc 1 126 0
 480 0008 0EE0     		b	.L19
 481              	.L22:
 127:command.c     ****         if (strchr("0123456789", *v) == NULL) {
 482              		.loc 1 127 0
 483 000a 7B68     		ldr	r3, [r7, #4]
 484 000c 1B78     		ldrb	r3, [r3]
 485 000e 1A00     		movs	r2, r3
 486 0010 0A4B     		ldr	r3, .L23
 487 0012 1100     		movs	r1, r2
 488 0014 1800     		movs	r0, r3
 489 0016 FFF7FEFF 		bl	strchr
 490 001a 031E     		subs	r3, r0, #0
 491 001c 01D1     		bne	.L20
 128:command.c     ****             return 0;
 492              		.loc 1 128 0
 493 001e 0023     		movs	r3, #0
 494 0020 07E0     		b	.L21
 495              	.L20:
 129:command.c     ****         }
 130:command.c     ****         v++;
 496              		.loc 1 130 0
 497 0022 7B68     		ldr	r3, [r7, #4]
 498 0024 0133     		adds	r3, r3, #1
 499 0026 7B60     		str	r3, [r7, #4]
 500              	.L19:
 126:command.c     ****         if (strchr("0123456789", *v) == NULL) {
 501              		.loc 1 126 0
 502 0028 7B68     		ldr	r3, [r7, #4]
 503 002a 1B78     		ldrb	r3, [r3]
 504 002c 002B     		cmp	r3, #0
 505 002e ECD1     		bne	.L22
 131:command.c     ****     }
 132:command.c     ****     return 1;
 506              		.loc 1 132 0
 507 0030 0123     		movs	r3, #1
 508              	.L21:
 133:command.c     **** }
 509              		.loc 1 133 0
 510 0032 1800     		movs	r0, r3
 511 0034 BD46     		mov	sp, r7
 512 0036 02B0     		add	sp, sp, #8
 513              		@ sp needed
 514 0038 80BD     		pop	{r7, pc}
 515              	.L24:
 516 003a C046     		.align	2
 517              	.L23:
 518 003c FC040000 		.word	.LC38
 519              		.cfi_endproc
 520              	.LFE36:
 521              		.size	is_int, .-is_int
ARM GAS  C:\Users\essele\AppData\Local\Temp\ccnyoXQF.s 			page 14


 522              		.section	.text.to_int,"ax",%progbits
 523              		.align	2
 524              		.global	to_int
 525              		.code	16
 526              		.thumb_func
 527              		.type	to_int, %function
 528              	to_int:
 529              	.LFB37:
 134:command.c     **** 
 135:command.c     **** int to_int(char *v) {
 530              		.loc 1 135 0
 531              		.cfi_startproc
 532              		@ args = 0, pretend = 0, frame = 16
 533              		@ frame_needed = 1, uses_anonymous_args = 0
 534 0000 80B5     		push	{r7, lr}
 535              		.cfi_def_cfa_offset 8
 536              		.cfi_offset 7, -8
 537              		.cfi_offset 14, -4
 538 0002 84B0     		sub	sp, sp, #16
 539              		.cfi_def_cfa_offset 24
 540 0004 00AF     		add	r7, sp, #0
 541              		.cfi_def_cfa_register 7
 542 0006 7860     		str	r0, [r7, #4]
 136:command.c     ****     int i = 0;
 543              		.loc 1 136 0
 544 0008 0023     		movs	r3, #0
 545 000a FB60     		str	r3, [r7, #12]
 137:command.c     ****     while(*v) {
 546              		.loc 1 137 0
 547 000c 0DE0     		b	.L26
 548              	.L27:
 138:command.c     ****         i *= 10;
 549              		.loc 1 138 0
 550 000e FA68     		ldr	r2, [r7, #12]
 551 0010 1300     		movs	r3, r2
 552 0012 9B00     		lsls	r3, r3, #2
 553 0014 9B18     		adds	r3, r3, r2
 554 0016 5B00     		lsls	r3, r3, #1
 555 0018 FB60     		str	r3, [r7, #12]
 139:command.c     ****         i += (*v++ - '0');
 556              		.loc 1 139 0
 557 001a 7B68     		ldr	r3, [r7, #4]
 558 001c 5A1C     		adds	r2, r3, #1
 559 001e 7A60     		str	r2, [r7, #4]
 560 0020 1B78     		ldrb	r3, [r3]
 561 0022 303B     		subs	r3, r3, #48
 562 0024 FA68     		ldr	r2, [r7, #12]
 563 0026 D318     		adds	r3, r2, r3
 564 0028 FB60     		str	r3, [r7, #12]
 565              	.L26:
 137:command.c     ****     while(*v) {
 566              		.loc 1 137 0
 567 002a 7B68     		ldr	r3, [r7, #4]
 568 002c 1B78     		ldrb	r3, [r3]
 569 002e 002B     		cmp	r3, #0
 570 0030 EDD1     		bne	.L27
 140:command.c     ****     }
ARM GAS  C:\Users\essele\AppData\Local\Temp\ccnyoXQF.s 			page 15


 141:command.c     ****     return i;
 571              		.loc 1 141 0
 572 0032 FB68     		ldr	r3, [r7, #12]
 142:command.c     **** }
 573              		.loc 1 142 0
 574 0034 1800     		movs	r0, r3
 575 0036 BD46     		mov	sp, r7
 576 0038 04B0     		add	sp, sp, #16
 577              		@ sp needed
 578 003a 80BD     		pop	{r7, pc}
 579              		.cfi_endproc
 580              	.LFE37:
 581              		.size	to_int, .-to_int
 582              		.section	.rodata
 583 0507 00       		.align	2
 584              	.LC42:
 585 0508 3C657272 		.ascii	"<error: unknown ++ command>\015\012\000"
 585      6F723A20 
 585      756E6B6E 
 585      6F776E20 
 585      2B2B2063 
 586              		.section	.text.cmd_process,"ax",%progbits
 587              		.align	2
 588              		.global	cmd_process
 589              		.code	16
 590              		.thumb_func
 591              		.type	cmd_process, %function
 592              	cmd_process:
 593              	.LFB38:
 143:command.c     **** 
 144:command.c     **** /**
 145:command.c     ****  * Take the command line and call the appropriate command function, we will be
 146:command.c     ****  * called only when the first two characters are ++, so we can skip those here
 147:command.c     ****  */
 148:command.c     **** void cmd_process(uint8_t *buf, int len) {
 594              		.loc 1 148 0
 595              		.cfi_startproc
 596              		@ args = 0, pretend = 0, frame = 16
 597              		@ frame_needed = 1, uses_anonymous_args = 0
 598 0000 80B5     		push	{r7, lr}
 599              		.cfi_def_cfa_offset 8
 600              		.cfi_offset 7, -8
 601              		.cfi_offset 14, -4
 602 0002 84B0     		sub	sp, sp, #16
 603              		.cfi_def_cfa_offset 24
 604 0004 00AF     		add	r7, sp, #0
 605              		.cfi_def_cfa_register 7
 606 0006 7860     		str	r0, [r7, #4]
 607 0008 3960     		str	r1, [r7]
 149:command.c     **** //    buf += 2;
 150:command.c     **** //    len -= 2;
 151:command.c     ****     int argc = tokenise(buf, len);
 608              		.loc 1 151 0
 609 000a 3A68     		ldr	r2, [r7]
 610 000c 7B68     		ldr	r3, [r7, #4]
 611 000e 1100     		movs	r1, r2
 612 0010 1800     		movs	r0, r3
ARM GAS  C:\Users\essele\AppData\Local\Temp\ccnyoXQF.s 			page 16


 613 0012 FFF7FEFF 		bl	tokenise
 614 0016 0300     		movs	r3, r0
 615 0018 BB60     		str	r3, [r7, #8]
 152:command.c     **** 
 153:command.c     ****     // We will always have the command a minimum, so return if 0
 154:command.c     ****     if (argc == 0) {
 616              		.loc 1 154 0
 617 001a BB68     		ldr	r3, [r7, #8]
 618 001c 002B     		cmp	r3, #0
 619 001e 29D0     		beq	.L35
 155:command.c     ****         return;
 156:command.c     ****     }
 157:command.c     ****     
 158:command.c     ****     // Find the command entry in the list...
 159:command.c     ****     int i = 0;
 620              		.loc 1 159 0
 621 0020 0023     		movs	r3, #0
 622 0022 FB60     		str	r3, [r7, #12]
 160:command.c     ****     while (commands[i].name != NULL) {
 623              		.loc 1 160 0
 624 0024 1BE0     		b	.L32
 625              	.L34:
 161:command.c     ****         if (strcmp(toks[0], commands[i].name) == 0) {
 626              		.loc 1 161 0
 627 0026 154B     		ldr	r3, .L36
 628 0028 1868     		ldr	r0, [r3]
 629 002a 154B     		ldr	r3, .L36+4
 630 002c FA68     		ldr	r2, [r7, #12]
 631 002e 5201     		lsls	r2, r2, #5
 632 0030 D358     		ldr	r3, [r2, r3]
 633 0032 1900     		movs	r1, r3
 634 0034 FFF7FEFF 		bl	strcmp
 635 0038 031E     		subs	r3, r0, #0
 636 003a 0DD1     		bne	.L33
 162:command.c     ****             commands[i].func(toks, argc, &commands[i]);
 637              		.loc 1 162 0
 638 003c 104A     		ldr	r2, .L36+4
 639 003e FB68     		ldr	r3, [r7, #12]
 640 0040 5B01     		lsls	r3, r3, #5
 641 0042 D318     		adds	r3, r2, r3
 642 0044 0433     		adds	r3, r3, #4
 643 0046 1B68     		ldr	r3, [r3]
 644 0048 FA68     		ldr	r2, [r7, #12]
 645 004a 5101     		lsls	r1, r2, #5
 646 004c 0C4A     		ldr	r2, .L36+4
 647 004e 8A18     		adds	r2, r1, r2
 648 0050 B968     		ldr	r1, [r7, #8]
 649 0052 0A48     		ldr	r0, .L36
 650 0054 9847     		blx	r3
 163:command.c     ****             return;
 651              		.loc 1 163 0
 652 0056 0EE0     		b	.L29
 653              	.L33:
 164:command.c     ****         }
 165:command.c     ****         i++;
 654              		.loc 1 165 0
 655 0058 FB68     		ldr	r3, [r7, #12]
ARM GAS  C:\Users\essele\AppData\Local\Temp\ccnyoXQF.s 			page 17


 656 005a 0133     		adds	r3, r3, #1
 657 005c FB60     		str	r3, [r7, #12]
 658              	.L32:
 160:command.c     ****         if (strcmp(toks[0], commands[i].name) == 0) {
 659              		.loc 1 160 0
 660 005e 084B     		ldr	r3, .L36+4
 661 0060 FA68     		ldr	r2, [r7, #12]
 662 0062 5201     		lsls	r2, r2, #5
 663 0064 D358     		ldr	r3, [r2, r3]
 664 0066 002B     		cmp	r3, #0
 665 0068 DDD1     		bne	.L34
 166:command.c     ****     }
 167:command.c     ****     serial_printf("<error: unknown ++ command>\r\n");
 666              		.loc 1 167 0
 667 006a 064B     		ldr	r3, .L36+8
 668 006c 1800     		movs	r0, r3
 669 006e FFF7FEFF 		bl	serial_printf
 670 0072 00E0     		b	.L29
 671              	.L35:
 155:command.c     ****     }
 672              		.loc 1 155 0
 673 0074 C046     		nop
 674              	.L29:
 168:command.c     **** }
 675              		.loc 1 168 0
 676 0076 BD46     		mov	sp, r7
 677 0078 04B0     		add	sp, sp, #16
 678              		@ sp needed
 679 007a 80BD     		pop	{r7, pc}
 680              	.L37:
 681              		.align	2
 682              	.L36:
 683 007c 00000000 		.word	toks
 684 0080 00000000 		.word	commands
 685 0084 08050000 		.word	.LC42
 686              		.cfi_endproc
 687              	.LFE38:
 688              		.size	cmd_process, .-cmd_process
 689              		.section	.rodata
 690 0526 0000     		.align	2
 691              	.LC44:
 692 0528 3C757361 		.ascii	"<usage: ++%s\000"
 692      67653A20 
 692      2B2B2573 
 692      00
 693 0535 000000   		.align	2
 694              	.LC46:
 695 0538 20257300 		.ascii	" %s\000"
 696              		.align	2
 697              	.LC48:
 698 053c 3E0D0A00 		.ascii	">\015\012\000"
 699              		.align	2
 700              	.LC50:
 701 0540 25730D0A 		.ascii	"%s\015\012\000"
 701      00
 702 0545 000000   		.align	2
 703              	.LC52:
ARM GAS  C:\Users\essele\AppData\Local\Temp\ccnyoXQF.s 			page 18


 704 0548 09256420 		.ascii	"\011%d - %s\015\012\000"
 704      2D202573 
 704      0D0A00
 705 0553 00       		.align	2
 706              	.LC54:
 707 0554 09286375 		.ascii	"\011(current setting: %d)\015\012\000"
 707      7272656E 
 707      74207365 
 707      7474696E 
 707      673A2025 
 708              		.section	.text.cmd_usage,"ax",%progbits
 709              		.align	2
 710              		.global	cmd_usage
 711              		.code	16
 712              		.thumb_func
 713              		.type	cmd_usage, %function
 714              	cmd_usage:
 715              	.LFB39:
 169:command.c     **** 
 170:command.c     **** 
 171:command.c     **** 
 172:command.c     **** void cmd_usage(char *argv[], const struct cmd *cmd) {
 716              		.loc 1 172 0
 717              		.cfi_startproc
 718              		@ args = 0, pretend = 0, frame = 24
 719              		@ frame_needed = 1, uses_anonymous_args = 0
 720 0000 80B5     		push	{r7, lr}
 721              		.cfi_def_cfa_offset 8
 722              		.cfi_offset 7, -8
 723              		.cfi_offset 14, -4
 724 0002 86B0     		sub	sp, sp, #24
 725              		.cfi_def_cfa_offset 32
 726 0004 00AF     		add	r7, sp, #0
 727              		.cfi_def_cfa_register 7
 728 0006 7860     		str	r0, [r7, #4]
 729 0008 3960     		str	r1, [r7]
 173:command.c     ****     const char **p = cmd->usage;
 730              		.loc 1 173 0
 731 000a 3B68     		ldr	r3, [r7]
 732 000c 5B69     		ldr	r3, [r3, #20]
 733 000e 7B61     		str	r3, [r7, #20]
 174:command.c     ****     serial_printf("<usage: ++%s", argv[0]);
 734              		.loc 1 174 0
 735 0010 7B68     		ldr	r3, [r7, #4]
 736 0012 1A68     		ldr	r2, [r3]
 737 0014 294B     		ldr	r3, .L46
 738 0016 1100     		movs	r1, r2
 739 0018 1800     		movs	r0, r3
 740 001a FFF7FEFF 		bl	serial_printf
 175:command.c     ****     if (**p) {
 741              		.loc 1 175 0
 742 001e 7B69     		ldr	r3, [r7, #20]
 743 0020 1B68     		ldr	r3, [r3]
 744 0022 1B78     		ldrb	r3, [r3]
 745 0024 002B     		cmp	r3, #0
 746 0026 08D0     		beq	.L39
 176:command.c     ****         serial_printf(" %s", *p++);
ARM GAS  C:\Users\essele\AppData\Local\Temp\ccnyoXQF.s 			page 19


 747              		.loc 1 176 0
 748 0028 7B69     		ldr	r3, [r7, #20]
 749 002a 1A1D     		adds	r2, r3, #4
 750 002c 7A61     		str	r2, [r7, #20]
 751 002e 1A68     		ldr	r2, [r3]
 752 0030 234B     		ldr	r3, .L46+4
 753 0032 1100     		movs	r1, r2
 754 0034 1800     		movs	r0, r3
 755 0036 FFF7FEFF 		bl	serial_printf
 756              	.L39:
 177:command.c     ****     }
 178:command.c     ****     serial_printf(">\r\n");
 757              		.loc 1 178 0
 758 003a 224B     		ldr	r3, .L46+8
 759 003c 1800     		movs	r0, r3
 760 003e FFF7FEFF 		bl	serial_printf
 179:command.c     ****     
 180:command.c     ****     // First print any additional usage instructions...
 181:command.c     ****     while(*p) {
 761              		.loc 1 181 0
 762 0042 08E0     		b	.L40
 763              	.L41:
 182:command.c     ****         serial_printf("%s\r\n", (char *)*p++);
 764              		.loc 1 182 0
 765 0044 7B69     		ldr	r3, [r7, #20]
 766 0046 1A1D     		adds	r2, r3, #4
 767 0048 7A61     		str	r2, [r7, #20]
 768 004a 1A68     		ldr	r2, [r3]
 769 004c 1E4B     		ldr	r3, .L46+12
 770 004e 1100     		movs	r1, r2
 771 0050 1800     		movs	r0, r3
 772 0052 FFF7FEFF 		bl	serial_printf
 773              	.L40:
 181:command.c     ****         serial_printf("%s\r\n", (char *)*p++);
 774              		.loc 1 181 0
 775 0056 7B69     		ldr	r3, [r7, #20]
 776 0058 1B68     		ldr	r3, [r3]
 777 005a 002B     		cmp	r3, #0
 778 005c F2D1     		bne	.L41
 183:command.c     ****     }
 184:command.c     ****     
 185:command.c     ****     // Now handle specific value meanings if they are there
 186:command.c     ****     if (cmd->meanings) {
 779              		.loc 1 186 0
 780 005e 3B68     		ldr	r3, [r7]
 781 0060 9B69     		ldr	r3, [r3, #24]
 782 0062 002B     		cmp	r3, #0
 783 0064 12D0     		beq	.L42
 784              	.LBB2:
 187:command.c     ****         const struct item_meaning *m = cmd->meanings;
 785              		.loc 1 187 0
 786 0066 3B68     		ldr	r3, [r7]
 787 0068 9B69     		ldr	r3, [r3, #24]
 788 006a 3B61     		str	r3, [r7, #16]
 188:command.c     ****         while (m->meaning != NULL) {
 789              		.loc 1 188 0
 790 006c 0AE0     		b	.L43
ARM GAS  C:\Users\essele\AppData\Local\Temp\ccnyoXQF.s 			page 20


 791              	.L44:
 189:command.c     ****             serial_printf("\t%d - %s\r\n", m->value, m->meaning);
 792              		.loc 1 189 0
 793 006e 3B69     		ldr	r3, [r7, #16]
 794 0070 1968     		ldr	r1, [r3]
 795 0072 3B69     		ldr	r3, [r7, #16]
 796 0074 5A68     		ldr	r2, [r3, #4]
 797 0076 154B     		ldr	r3, .L46+16
 798 0078 1800     		movs	r0, r3
 799 007a FFF7FEFF 		bl	serial_printf
 190:command.c     ****             m++;
 800              		.loc 1 190 0
 801 007e 3B69     		ldr	r3, [r7, #16]
 802 0080 0833     		adds	r3, r3, #8
 803 0082 3B61     		str	r3, [r7, #16]
 804              	.L43:
 188:command.c     ****         while (m->meaning != NULL) {
 805              		.loc 1 188 0
 806 0084 3B69     		ldr	r3, [r7, #16]
 807 0086 5B68     		ldr	r3, [r3, #4]
 808 0088 002B     		cmp	r3, #0
 809 008a F0D1     		bne	.L44
 810              	.L42:
 811              	.LBE2:
 191:command.c     ****         }
 192:command.c     ****     }
 193:command.c     ****     
 194:command.c     ****     // If it's a setting then we can show the current value
 195:command.c     ****     if (cmd->setting) {
 812              		.loc 1 195 0
 813 008c 3B68     		ldr	r3, [r7]
 814 008e 9B68     		ldr	r3, [r3, #8]
 815 0090 002B     		cmp	r3, #0
 816 0092 0DD0     		beq	.L45
 817              	.LBB3:
 196:command.c     ****         uint16_t value = *cmd->setting;
 818              		.loc 1 196 0
 819 0094 3B68     		ldr	r3, [r7]
 820 0096 9A68     		ldr	r2, [r3, #8]
 821 0098 0E23     		movs	r3, #14
 822 009a FB18     		adds	r3, r7, r3
 823 009c 1288     		ldrh	r2, [r2]
 824 009e 1A80     		strh	r2, [r3]
 197:command.c     ****         serial_printf("\t(current setting: %d)\r\n", value);
 825              		.loc 1 197 0
 826 00a0 0E23     		movs	r3, #14
 827 00a2 FB18     		adds	r3, r7, r3
 828 00a4 1A88     		ldrh	r2, [r3]
 829 00a6 0A4B     		ldr	r3, .L46+20
 830 00a8 1100     		movs	r1, r2
 831 00aa 1800     		movs	r0, r3
 832 00ac FFF7FEFF 		bl	serial_printf
 833              	.L45:
 834              	.LBE3:
 198:command.c     ****     }
 199:command.c     ****    
 200:command.c     ****     // Send it...
ARM GAS  C:\Users\essele\AppData\Local\Temp\ccnyoXQF.s 			page 21


 201:command.c     ****     serial_flush();
 835              		.loc 1 201 0
 836 00b0 FFF7FEFF 		bl	serial_flush
 202:command.c     **** }
 837              		.loc 1 202 0
 838 00b4 C046     		nop
 839 00b6 BD46     		mov	sp, r7
 840 00b8 06B0     		add	sp, sp, #24
 841              		@ sp needed
 842 00ba 80BD     		pop	{r7, pc}
 843              	.L47:
 844              		.align	2
 845              	.L46:
 846 00bc 28050000 		.word	.LC44
 847 00c0 38050000 		.word	.LC46
 848 00c4 3C050000 		.word	.LC48
 849 00c8 40050000 		.word	.LC50
 850 00cc 48050000 		.word	.LC52
 851 00d0 54050000 		.word	.LC54
 852              		.cfi_endproc
 853              	.LFE39:
 854              		.size	cmd_usage, .-cmd_usage
 855              		.section	.rodata
 856 056d 000000   		.align	2
 857              	.LC56:
 858 0570 25640D0A 		.ascii	"%d\015\012\000"
 858      00
 859              		.section	.text.cmd_uint,"ax",%progbits
 860              		.align	2
 861              		.global	cmd_uint
 862              		.code	16
 863              		.thumb_func
 864              		.type	cmd_uint, %function
 865              	cmd_uint:
 866              	.LFB40:
 203:command.c     **** 
 204:command.c     **** /**
 205:command.c     ****  * Process a command that sets/gets an integer argument
 206:command.c     ****  */
 207:command.c     **** int cmd_uint(char *argv[], int argc, const struct cmd *cmd) {
 867              		.loc 1 207 0
 868              		.cfi_startproc
 869              		@ args = 0, pretend = 0, frame = 24
 870              		@ frame_needed = 1, uses_anonymous_args = 0
 871 0000 80B5     		push	{r7, lr}
 872              		.cfi_def_cfa_offset 8
 873              		.cfi_offset 7, -8
 874              		.cfi_offset 14, -4
 875 0002 86B0     		sub	sp, sp, #24
 876              		.cfi_def_cfa_offset 32
 877 0004 00AF     		add	r7, sp, #0
 878              		.cfi_def_cfa_register 7
 879 0006 F860     		str	r0, [r7, #12]
 880 0008 B960     		str	r1, [r7, #8]
 881 000a 7A60     		str	r2, [r7, #4]
 208:command.c     ****     if (argc == 1) {
 882              		.loc 1 208 0
ARM GAS  C:\Users\essele\AppData\Local\Temp\ccnyoXQF.s 			page 22


 883 000c BB68     		ldr	r3, [r7, #8]
 884 000e 012B     		cmp	r3, #1
 885 0010 0AD1     		bne	.L49
 209:command.c     ****         // Get the value...
 210:command.c     ****         serial_printf("%d\r\n", *(cmd->setting));
 886              		.loc 1 210 0
 887 0012 7B68     		ldr	r3, [r7, #4]
 888 0014 9B68     		ldr	r3, [r3, #8]
 889 0016 1B88     		ldrh	r3, [r3]
 890 0018 1A00     		movs	r2, r3
 891 001a 264B     		ldr	r3, .L56
 892 001c 1100     		movs	r1, r2
 893 001e 1800     		movs	r0, r3
 894 0020 FFF7FEFF 		bl	serial_printf
 211:command.c     ****         return 0;
 895              		.loc 1 211 0
 896 0024 0023     		movs	r3, #0
 897 0026 40E0     		b	.L50
 898              	.L49:
 212:command.c     ****     }
 213:command.c     ****     if (argc != 2 || !is_int(argv[1])) {
 899              		.loc 1 213 0
 900 0028 BB68     		ldr	r3, [r7, #8]
 901 002a 022B     		cmp	r3, #2
 902 002c 07D1     		bne	.L51
 903              		.loc 1 213 0 is_stmt 0 discriminator 1
 904 002e FB68     		ldr	r3, [r7, #12]
 905 0030 0433     		adds	r3, r3, #4
 906 0032 1B68     		ldr	r3, [r3]
 907 0034 1800     		movs	r0, r3
 908 0036 FFF7FEFF 		bl	is_int
 909 003a 031E     		subs	r3, r0, #0
 910 003c 07D1     		bne	.L52
 911              	.L51:
 214:command.c     ****         cmd_usage(argv, cmd);
 912              		.loc 1 214 0 is_stmt 1
 913 003e 7A68     		ldr	r2, [r7, #4]
 914 0040 FB68     		ldr	r3, [r7, #12]
 915 0042 1100     		movs	r1, r2
 916 0044 1800     		movs	r0, r3
 917 0046 FFF7FEFF 		bl	cmd_usage
 215:command.c     ****         return 1;
 918              		.loc 1 215 0
 919 004a 0123     		movs	r3, #1
 920 004c 2DE0     		b	.L50
 921              	.L52:
 216:command.c     ****     }
 217:command.c     ****     int byte = to_int(argv[1]);
 922              		.loc 1 217 0
 923 004e FB68     		ldr	r3, [r7, #12]
 924 0050 0433     		adds	r3, r3, #4
 925 0052 1B68     		ldr	r3, [r3]
 926 0054 1800     		movs	r0, r3
 927 0056 FFF7FEFF 		bl	to_int
 928 005a 0300     		movs	r3, r0
 929 005c 7B61     		str	r3, [r7, #20]
 218:command.c     ****     if (byte < cmd->min || byte > cmd->max) {
ARM GAS  C:\Users\essele\AppData\Local\Temp\ccnyoXQF.s 			page 23


 930              		.loc 1 218 0
 931 005e 7B68     		ldr	r3, [r7, #4]
 932 0060 9B89     		ldrh	r3, [r3, #12]
 933 0062 1A00     		movs	r2, r3
 934 0064 7B69     		ldr	r3, [r7, #20]
 935 0066 9A42     		cmp	r2, r3
 936 0068 05DC     		bgt	.L53
 937              		.loc 1 218 0 is_stmt 0 discriminator 1
 938 006a 7B68     		ldr	r3, [r7, #4]
 939 006c DB89     		ldrh	r3, [r3, #14]
 940 006e 1A00     		movs	r2, r3
 941 0070 7B69     		ldr	r3, [r7, #20]
 942 0072 9A42     		cmp	r2, r3
 943 0074 07DA     		bge	.L54
 944              	.L53:
 219:command.c     ****         cmd_usage(argv, cmd);
 945              		.loc 1 219 0 is_stmt 1
 946 0076 7A68     		ldr	r2, [r7, #4]
 947 0078 FB68     		ldr	r3, [r7, #12]
 948 007a 1100     		movs	r1, r2
 949 007c 1800     		movs	r0, r3
 950 007e FFF7FEFF 		bl	cmd_usage
 220:command.c     ****         return 1;
 951              		.loc 1 220 0
 952 0082 0123     		movs	r3, #1
 953 0084 11E0     		b	.L50
 954              	.L54:
 221:command.c     ****     }
 222:command.c     ****     
 223:command.c     ****     *(cmd->setting) = (uint16_t)byte;
 955              		.loc 1 223 0
 956 0086 7B68     		ldr	r3, [r7, #4]
 957 0088 9B68     		ldr	r3, [r3, #8]
 958 008a 7A69     		ldr	r2, [r7, #20]
 959 008c 92B2     		uxth	r2, r2
 960 008e 1A80     		strh	r2, [r3]
 224:command.c     ****     
 225:command.c     ****     if (cmd->post_func != NULL) {
 961              		.loc 1 225 0
 962 0090 7B68     		ldr	r3, [r7, #4]
 963 0092 DB69     		ldr	r3, [r3, #28]
 964 0094 002B     		cmp	r3, #0
 965 0096 07D0     		beq	.L55
 226:command.c     ****         return cmd->post_func(argv, argc);
 966              		.loc 1 226 0
 967 0098 7B68     		ldr	r3, [r7, #4]
 968 009a DB69     		ldr	r3, [r3, #28]
 969 009c B968     		ldr	r1, [r7, #8]
 970 009e FA68     		ldr	r2, [r7, #12]
 971 00a0 1000     		movs	r0, r2
 972 00a2 9847     		blx	r3
 973 00a4 0300     		movs	r3, r0
 974 00a6 00E0     		b	.L50
 975              	.L55:
 227:command.c     ****     }
 228:command.c     ****     return 0;
 976              		.loc 1 228 0
ARM GAS  C:\Users\essele\AppData\Local\Temp\ccnyoXQF.s 			page 24


 977 00a8 0023     		movs	r3, #0
 978              	.L50:
 229:command.c     **** }
 979              		.loc 1 229 0
 980 00aa 1800     		movs	r0, r3
 981 00ac BD46     		mov	sp, r7
 982 00ae 06B0     		add	sp, sp, #24
 983              		@ sp needed
 984 00b0 80BD     		pop	{r7, pc}
 985              	.L57:
 986 00b2 C046     		.align	2
 987              	.L56:
 988 00b4 70050000 		.word	.LC56
 989              		.cfi_endproc
 990              	.LFE40:
 991              		.size	cmd_uint, .-cmd_uint
 992              		.section	.text.cmd_noargs,"ax",%progbits
 993              		.align	2
 994              		.global	cmd_noargs
 995              		.code	16
 996              		.thumb_func
 997              		.type	cmd_noargs, %function
 998              	cmd_noargs:
 999              	.LFB41:
 230:command.c     **** 
 231:command.c     **** /**
 232:command.c     ****  * A command that takes no arguments is really just a call to the helper function, but
 233:command.c     ****  * we will check the syntax first
 234:command.c     ****  */
 235:command.c     **** int cmd_noargs(char *argv[], int argc, const struct cmd *cmd) {
 1000              		.loc 1 235 0
 1001              		.cfi_startproc
 1002              		@ args = 0, pretend = 0, frame = 16
 1003              		@ frame_needed = 1, uses_anonymous_args = 0
 1004 0000 80B5     		push	{r7, lr}
 1005              		.cfi_def_cfa_offset 8
 1006              		.cfi_offset 7, -8
 1007              		.cfi_offset 14, -4
 1008 0002 84B0     		sub	sp, sp, #16
 1009              		.cfi_def_cfa_offset 24
 1010 0004 00AF     		add	r7, sp, #0
 1011              		.cfi_def_cfa_register 7
 1012 0006 F860     		str	r0, [r7, #12]
 1013 0008 B960     		str	r1, [r7, #8]
 1014 000a 7A60     		str	r2, [r7, #4]
 236:command.c     ****     if (argc != 1) {
 1015              		.loc 1 236 0
 1016 000c BB68     		ldr	r3, [r7, #8]
 1017 000e 012B     		cmp	r3, #1
 1018 0010 07D0     		beq	.L59
 237:command.c     ****         cmd_usage(argv, cmd);
 1019              		.loc 1 237 0
 1020 0012 7A68     		ldr	r2, [r7, #4]
 1021 0014 FB68     		ldr	r3, [r7, #12]
 1022 0016 1100     		movs	r1, r2
 1023 0018 1800     		movs	r0, r3
 1024 001a FFF7FEFF 		bl	cmd_usage
ARM GAS  C:\Users\essele\AppData\Local\Temp\ccnyoXQF.s 			page 25


 238:command.c     ****         return 1;
 1025              		.loc 1 238 0
 1026 001e 0123     		movs	r3, #1
 1027 0020 0CE0     		b	.L60
 1028              	.L59:
 239:command.c     ****     }
 240:command.c     ****     if (cmd->post_func != NULL) {
 1029              		.loc 1 240 0
 1030 0022 7B68     		ldr	r3, [r7, #4]
 1031 0024 DB69     		ldr	r3, [r3, #28]
 1032 0026 002B     		cmp	r3, #0
 1033 0028 07D0     		beq	.L61
 241:command.c     ****         return cmd->post_func(argv, argc);
 1034              		.loc 1 241 0
 1035 002a 7B68     		ldr	r3, [r7, #4]
 1036 002c DB69     		ldr	r3, [r3, #28]
 1037 002e B968     		ldr	r1, [r7, #8]
 1038 0030 FA68     		ldr	r2, [r7, #12]
 1039 0032 1000     		movs	r0, r2
 1040 0034 9847     		blx	r3
 1041 0036 0300     		movs	r3, r0
 1042 0038 00E0     		b	.L60
 1043              	.L61:
 242:command.c     ****     }
 243:command.c     ****     return 0;    
 1044              		.loc 1 243 0
 1045 003a 0023     		movs	r3, #0
 1046              	.L60:
 244:command.c     **** }
 1047              		.loc 1 244 0
 1048 003c 1800     		movs	r0, r3
 1049 003e BD46     		mov	sp, r7
 1050 0040 04B0     		add	sp, sp, #16
 1051              		@ sp needed
 1052 0042 80BD     		pop	{r7, pc}
 1053              		.cfi_endproc
 1054              	.LFE41:
 1055              		.size	cmd_noargs, .-cmd_noargs
 1056              		.section	.rodata
 1057 0575 000000   		.align	2
 1058              	.LC59:
 1059 0578 2B2B252D 		.ascii	"++%-12.12s\011%s\015\012\000"
 1059      31322E31 
 1059      32730925 
 1059      730D0A00 
 1060              		.align	2
 1061              	.LC61:
 1062 0588 3C657272 		.ascii	"<error: unknown command: %s>\015\012\000"
 1062      6F723A20 
 1062      756E6B6E 
 1062      6F776E20 
 1062      636F6D6D 
 1063              		.section	.text.cmd_help,"ax",%progbits
 1064              		.align	2
 1065              		.global	cmd_help
 1066              		.code	16
 1067              		.thumb_func
ARM GAS  C:\Users\essele\AppData\Local\Temp\ccnyoXQF.s 			page 26


 1068              		.type	cmd_help, %function
 1069              	cmd_help:
 1070              	.LFB42:
 245:command.c     **** 
 246:command.c     **** /**
 247:command.c     ****  * The help command can take zero or one arguments
 248:command.c     ****  */
 249:command.c     **** int cmd_help(char *argv[], int argc, const struct cmd *cmd) {
 1071              		.loc 1 249 0
 1072              		.cfi_startproc
 1073              		@ args = 0, pretend = 0, frame = 24
 1074              		@ frame_needed = 1, uses_anonymous_args = 0
 1075 0000 80B5     		push	{r7, lr}
 1076              		.cfi_def_cfa_offset 8
 1077              		.cfi_offset 7, -8
 1078              		.cfi_offset 14, -4
 1079 0002 86B0     		sub	sp, sp, #24
 1080              		.cfi_def_cfa_offset 32
 1081 0004 00AF     		add	r7, sp, #0
 1082              		.cfi_def_cfa_register 7
 1083 0006 F860     		str	r0, [r7, #12]
 1084 0008 B960     		str	r1, [r7, #8]
 1085 000a 7A60     		str	r2, [r7, #4]
 250:command.c     ****     // Did we even get the help command wrong?
 251:command.c     ****     if (argc > 2) {
 1086              		.loc 1 251 0
 1087 000c BB68     		ldr	r3, [r7, #8]
 1088 000e 022B     		cmp	r3, #2
 1089 0010 07DD     		ble	.L63
 252:command.c     ****         cmd_usage(argv, cmd);
 1090              		.loc 1 252 0
 1091 0012 7A68     		ldr	r2, [r7, #4]
 1092 0014 FB68     		ldr	r3, [r7, #12]
 1093 0016 1100     		movs	r1, r2
 1094 0018 1800     		movs	r0, r3
 1095 001a FFF7FEFF 		bl	cmd_usage
 253:command.c     ****         return 1;
 1096              		.loc 1 253 0
 1097 001e 0123     		movs	r3, #1
 1098 0020 4AE0     		b	.L64
 1099              	.L63:
 254:command.c     ****     }
 255:command.c     ****     // No args, means just show the list...
 256:command.c     ****     if (argc == 1) {
 1100              		.loc 1 256 0
 1101 0022 BB68     		ldr	r3, [r7, #8]
 1102 0024 012B     		cmp	r3, #1
 1103 0026 1BD1     		bne	.L65
 1104              	.LBB4:
 257:command.c     ****         int i = 0;
 1105              		.loc 1 257 0
 1106 0028 0023     		movs	r3, #0
 1107 002a 7B61     		str	r3, [r7, #20]
 258:command.c     ****         while (commands[i].name != NULL) {
 1108              		.loc 1 258 0
 1109 002c 10E0     		b	.L66
 1110              	.L67:
ARM GAS  C:\Users\essele\AppData\Local\Temp\ccnyoXQF.s 			page 27


 259:command.c     ****             serial_printf("++%-12.12s\t%s\r\n", commands[i].name, commands[i].help);
 1111              		.loc 1 259 0
 1112 002e 244B     		ldr	r3, .L71
 1113 0030 7A69     		ldr	r2, [r7, #20]
 1114 0032 5201     		lsls	r2, r2, #5
 1115 0034 D158     		ldr	r1, [r2, r3]
 1116 0036 224A     		ldr	r2, .L71
 1117 0038 7B69     		ldr	r3, [r7, #20]
 1118 003a 5B01     		lsls	r3, r3, #5
 1119 003c D318     		adds	r3, r2, r3
 1120 003e 1033     		adds	r3, r3, #16
 1121 0040 1A68     		ldr	r2, [r3]
 1122 0042 204B     		ldr	r3, .L71+4
 1123 0044 1800     		movs	r0, r3
 1124 0046 FFF7FEFF 		bl	serial_printf
 260:command.c     ****             i++;
 1125              		.loc 1 260 0
 1126 004a 7B69     		ldr	r3, [r7, #20]
 1127 004c 0133     		adds	r3, r3, #1
 1128 004e 7B61     		str	r3, [r7, #20]
 1129              	.L66:
 258:command.c     ****         while (commands[i].name != NULL) {
 1130              		.loc 1 258 0
 1131 0050 1B4B     		ldr	r3, .L71
 1132 0052 7A69     		ldr	r2, [r7, #20]
 1133 0054 5201     		lsls	r2, r2, #5
 1134 0056 D358     		ldr	r3, [r2, r3]
 1135 0058 002B     		cmp	r3, #0
 1136 005a E8D1     		bne	.L67
 261:command.c     ****         }
 262:command.c     ****         return 0;
 1137              		.loc 1 262 0
 1138 005c 0023     		movs	r3, #0
 1139 005e 2BE0     		b	.L64
 1140              	.L65:
 1141              	.LBE4:
 263:command.c     ****     }
 264:command.c     ****     // One arg, means show usage of the given command
 265:command.c     ****     int i = 0;
 1142              		.loc 1 265 0
 1143 0060 0023     		movs	r3, #0
 1144 0062 3B61     		str	r3, [r7, #16]
 266:command.c     ****     while (commands[i].name != NULL) {
 1145              		.loc 1 266 0
 1146 0064 19E0     		b	.L68
 1147              	.L70:
 267:command.c     ****         if (strcmp(argv[1], commands[i].name) == 0) {
 1148              		.loc 1 267 0
 1149 0066 FB68     		ldr	r3, [r7, #12]
 1150 0068 0433     		adds	r3, r3, #4
 1151 006a 1868     		ldr	r0, [r3]
 1152 006c 144B     		ldr	r3, .L71
 1153 006e 3A69     		ldr	r2, [r7, #16]
 1154 0070 5201     		lsls	r2, r2, #5
 1155 0072 D358     		ldr	r3, [r2, r3]
 1156 0074 1900     		movs	r1, r3
 1157 0076 FFF7FEFF 		bl	strcmp
ARM GAS  C:\Users\essele\AppData\Local\Temp\ccnyoXQF.s 			page 28


 1158 007a 031E     		subs	r3, r0, #0
 1159 007c 0AD1     		bne	.L69
 268:command.c     ****             cmd_usage(&argv[1], &commands[i]);
 1160              		.loc 1 268 0
 1161 007e FB68     		ldr	r3, [r7, #12]
 1162 0080 181D     		adds	r0, r3, #4
 1163 0082 3B69     		ldr	r3, [r7, #16]
 1164 0084 5A01     		lsls	r2, r3, #5
 1165 0086 0E4B     		ldr	r3, .L71
 1166 0088 D318     		adds	r3, r2, r3
 1167 008a 1900     		movs	r1, r3
 1168 008c FFF7FEFF 		bl	cmd_usage
 269:command.c     ****             return 0;
 1169              		.loc 1 269 0
 1170 0090 0023     		movs	r3, #0
 1171 0092 11E0     		b	.L64
 1172              	.L69:
 270:command.c     ****         }
 271:command.c     ****         i++;
 1173              		.loc 1 271 0
 1174 0094 3B69     		ldr	r3, [r7, #16]
 1175 0096 0133     		adds	r3, r3, #1
 1176 0098 3B61     		str	r3, [r7, #16]
 1177              	.L68:
 266:command.c     ****         if (strcmp(argv[1], commands[i].name) == 0) {
 1178              		.loc 1 266 0
 1179 009a 094B     		ldr	r3, .L71
 1180 009c 3A69     		ldr	r2, [r7, #16]
 1181 009e 5201     		lsls	r2, r2, #5
 1182 00a0 D358     		ldr	r3, [r2, r3]
 1183 00a2 002B     		cmp	r3, #0
 1184 00a4 DFD1     		bne	.L70
 272:command.c     ****     }
 273:command.c     ****     serial_printf("<error: unknown command: %s>\r\n", argv[1]);
 1185              		.loc 1 273 0
 1186 00a6 FB68     		ldr	r3, [r7, #12]
 1187 00a8 0433     		adds	r3, r3, #4
 1188 00aa 1A68     		ldr	r2, [r3]
 1189 00ac 064B     		ldr	r3, .L71+8
 1190 00ae 1100     		movs	r1, r2
 1191 00b0 1800     		movs	r0, r3
 1192 00b2 FFF7FEFF 		bl	serial_printf
 274:command.c     ****     return 0;
 1193              		.loc 1 274 0
 1194 00b6 0023     		movs	r3, #0
 1195              	.L64:
 275:command.c     **** }
 1196              		.loc 1 275 0
 1197 00b8 1800     		movs	r0, r3
 1198 00ba BD46     		mov	sp, r7
 1199 00bc 06B0     		add	sp, sp, #24
 1200              		@ sp needed
 1201 00be 80BD     		pop	{r7, pc}
 1202              	.L72:
 1203              		.align	2
 1204              	.L71:
 1205 00c0 00000000 		.word	commands
ARM GAS  C:\Users\essele\AppData\Local\Temp\ccnyoXQF.s 			page 29


 1206 00c4 78050000 		.word	.LC59
 1207 00c8 88050000 		.word	.LC61
 1208              		.cfi_endproc
 1209              	.LFE42:
 1210              		.size	cmd_help, .-cmd_help
 1211              		.section	.rodata
 1212 05a7 00       		.align	2
 1213              	.LC65:
 1214 05a8 474F543A 		.ascii	"GOT: \000"
 1214      2000
 1215 05ae 0000     		.align	2
 1216              	.LC67:
 1217 05b0 0D0A00   		.ascii	"\015\012\000"
 1218              		.section	.text.cmd_read,"ax",%progbits
 1219              		.align	2
 1220              		.global	cmd_read
 1221              		.code	16
 1222              		.thumb_func
 1223              		.type	cmd_read, %function
 1224              	cmd_read:
 1225              	.LFB43:
 276:command.c     **** 
 277:command.c     **** /**
 278:command.c     ****  * Read from the GPIB bus
 279:command.c     ****  */
 280:command.c     **** int cmd_read(char *argv[], int argc, const struct cmd *cmd) {
 1226              		.loc 1 280 0
 1227              		.cfi_startproc
 1228              		@ args = 0, pretend = 0, frame = 40
 1229              		@ frame_needed = 1, uses_anonymous_args = 0
 1230 0000 80B5     		push	{r7, lr}
 1231              		.cfi_def_cfa_offset 8
 1232              		.cfi_offset 7, -8
 1233              		.cfi_offset 14, -4
 1234 0002 8AB0     		sub	sp, sp, #40
 1235              		.cfi_def_cfa_offset 48
 1236 0004 00AF     		add	r7, sp, #0
 1237              		.cfi_def_cfa_register 7
 1238 0006 F860     		str	r0, [r7, #12]
 1239 0008 B960     		str	r1, [r7, #8]
 1240 000a 7A60     		str	r2, [r7, #4]
 281:command.c     ****     int until = GPIB_TIMEOUT;
 1241              		.loc 1 281 0
 1242 000c 0223     		movs	r3, #2
 1243 000e FF33     		adds	r3, r3, #255
 1244 0010 7B62     		str	r3, [r7, #36]
 282:command.c     ****     uint8_t *buf = gpib_get_buffer();
 1245              		.loc 1 282 0
 1246 0012 FFF7FEFF 		bl	gpib_get_buffer
 1247 0016 0300     		movs	r3, r0
 1248 0018 3B62     		str	r3, [r7, #32]
 283:command.c     ****     int     len;
 284:command.c     ****     int     ended;
 285:command.c     ****     
 286:command.c     ****     if (argc > 2) {
 1249              		.loc 1 286 0
 1250 001a BB68     		ldr	r3, [r7, #8]
ARM GAS  C:\Users\essele\AppData\Local\Temp\ccnyoXQF.s 			page 30


 1251 001c 022B     		cmp	r3, #2
 1252 001e 07DD     		ble	.L74
 287:command.c     ****         cmd_usage(argv, cmd);
 1253              		.loc 1 287 0
 1254 0020 7A68     		ldr	r2, [r7, #4]
 1255 0022 FB68     		ldr	r3, [r7, #12]
 1256 0024 1100     		movs	r1, r2
 1257 0026 1800     		movs	r0, r3
 1258 0028 FFF7FEFF 		bl	cmd_usage
 288:command.c     ****         return 1;
 1259              		.loc 1 288 0
 1260 002c 0123     		movs	r3, #1
 1261 002e 5BE0     		b	.L82
 1262              	.L74:
 289:command.c     ****     }
 290:command.c     ****     if (argc == 2) {
 1263              		.loc 1 290 0
 1264 0030 BB68     		ldr	r3, [r7, #8]
 1265 0032 022B     		cmp	r3, #2
 1266 0034 35D1     		bne	.L76
 291:command.c     ****         if (strcmp(argv[1], "eoi") == 0) {
 1267              		.loc 1 291 0
 1268 0036 FB68     		ldr	r3, [r7, #12]
 1269 0038 0433     		adds	r3, r3, #4
 1270 003a 1B68     		ldr	r3, [r3]
 1271 003c 2C4A     		ldr	r2, .L83
 1272 003e 1100     		movs	r1, r2
 1273 0040 1800     		movs	r0, r3
 1274 0042 FFF7FEFF 		bl	strcmp
 1275 0046 031E     		subs	r3, r0, #0
 1276 0048 03D1     		bne	.L77
 292:command.c     ****             until = GPIB_EOI;
 1277              		.loc 1 292 0
 1278 004a 8023     		movs	r3, #128
 1279 004c 5B00     		lsls	r3, r3, #1
 1280 004e 7B62     		str	r3, [r7, #36]
 1281 0050 27E0     		b	.L76
 1282              	.L77:
 293:command.c     ****         } else if (!is_int(argv[1])) {
 1283              		.loc 1 293 0
 1284 0052 FB68     		ldr	r3, [r7, #12]
 1285 0054 0433     		adds	r3, r3, #4
 1286 0056 1B68     		ldr	r3, [r3]
 1287 0058 1800     		movs	r0, r3
 1288 005a FFF7FEFF 		bl	is_int
 1289 005e 031E     		subs	r3, r0, #0
 1290 0060 07D1     		bne	.L78
 294:command.c     ****             cmd_usage(argv, cmd);
 1291              		.loc 1 294 0
 1292 0062 7A68     		ldr	r2, [r7, #4]
 1293 0064 FB68     		ldr	r3, [r7, #12]
 1294 0066 1100     		movs	r1, r2
 1295 0068 1800     		movs	r0, r3
 1296 006a FFF7FEFF 		bl	cmd_usage
 295:command.c     ****             return 1;
 1297              		.loc 1 295 0
 1298 006e 0123     		movs	r3, #1
ARM GAS  C:\Users\essele\AppData\Local\Temp\ccnyoXQF.s 			page 31


 1299 0070 3AE0     		b	.L82
 1300              	.L78:
 1301              	.LBB5:
 296:command.c     ****         } else {
 297:command.c     ****             int ch = to_int(argv[1]);
 1302              		.loc 1 297 0
 1303 0072 FB68     		ldr	r3, [r7, #12]
 1304 0074 0433     		adds	r3, r3, #4
 1305 0076 1B68     		ldr	r3, [r3]
 1306 0078 1800     		movs	r0, r3
 1307 007a FFF7FEFF 		bl	to_int
 1308 007e 0300     		movs	r3, r0
 1309 0080 FB61     		str	r3, [r7, #28]
 298:command.c     ****             if (ch < 0 || ch > 255) {
 1310              		.loc 1 298 0
 1311 0082 FB69     		ldr	r3, [r7, #28]
 1312 0084 002B     		cmp	r3, #0
 1313 0086 02DB     		blt	.L79
 1314              		.loc 1 298 0 is_stmt 0 discriminator 1
 1315 0088 FB69     		ldr	r3, [r7, #28]
 1316 008a FF2B     		cmp	r3, #255
 1317 008c 07DD     		ble	.L80
 1318              	.L79:
 299:command.c     ****                 cmd_usage(argv, cmd);
 1319              		.loc 1 299 0 is_stmt 1
 1320 008e 7A68     		ldr	r2, [r7, #4]
 1321 0090 FB68     		ldr	r3, [r7, #12]
 1322 0092 1100     		movs	r1, r2
 1323 0094 1800     		movs	r0, r3
 1324 0096 FFF7FEFF 		bl	cmd_usage
 300:command.c     ****                 return 1;
 1325              		.loc 1 300 0
 1326 009a 0123     		movs	r3, #1
 1327 009c 24E0     		b	.L82
 1328              	.L80:
 301:command.c     ****             }
 302:command.c     ****             until = ch;
 1329              		.loc 1 302 0
 1330 009e FB69     		ldr	r3, [r7, #28]
 1331 00a0 7B62     		str	r3, [r7, #36]
 1332              	.L76:
 1333              	.LBE5:
 303:command.c     ****         }
 304:command.c     ****     }
 305:command.c     ****     
 306:command.c     ****     gpib_address_talker(settings.address);
 1334              		.loc 1 306 0
 1335 00a2 144B     		ldr	r3, .L83+4
 1336 00a4 DB88     		ldrh	r3, [r3, #6]
 1337 00a6 DBB2     		uxtb	r3, r3
 1338 00a8 1800     		movs	r0, r3
 1339 00aa FFF7FEFF 		bl	gpib_address_talker
 1340              	.L81:
 307:command.c     ****     
 308:command.c     ****     do {
 309:command.c     ****         len = gpib_read(until, &ended);
 1341              		.loc 1 309 0 discriminator 1
ARM GAS  C:\Users\essele\AppData\Local\Temp\ccnyoXQF.s 			page 32


 1342 00ae 1423     		movs	r3, #20
 1343 00b0 FA18     		adds	r2, r7, r3
 1344 00b2 7B6A     		ldr	r3, [r7, #36]
 1345 00b4 1100     		movs	r1, r2
 1346 00b6 1800     		movs	r0, r3
 1347 00b8 FFF7FEFF 		bl	gpib_read
 1348 00bc 0300     		movs	r3, r0
 1349 00be BB61     		str	r3, [r7, #24]
 310:command.c     ****         serial_add_string("GOT: ");
 1350              		.loc 1 310 0 discriminator 1
 1351 00c0 0D4B     		ldr	r3, .L83+8
 1352 00c2 1800     		movs	r0, r3
 1353 00c4 FFF7FEFF 		bl	serial_add_string
 311:command.c     ****         serial_add(buf, len);
 1354              		.loc 1 311 0 discriminator 1
 1355 00c8 BA69     		ldr	r2, [r7, #24]
 1356 00ca 3B6A     		ldr	r3, [r7, #32]
 1357 00cc 1100     		movs	r1, r2
 1358 00ce 1800     		movs	r0, r3
 1359 00d0 FFF7FEFF 		bl	serial_add
 312:command.c     ****         serial_add_string("\r\n");
 1360              		.loc 1 312 0 discriminator 1
 1361 00d4 094B     		ldr	r3, .L83+12
 1362 00d6 1800     		movs	r0, r3
 1363 00d8 FFF7FEFF 		bl	serial_add_string
 313:command.c     ****     } while (ended == GPIB_NOT_ENDED);
 1364              		.loc 1 313 0 discriminator 1
 1365 00dc 7B69     		ldr	r3, [r7, #20]
 1366 00de 002B     		cmp	r3, #0
 1367 00e0 E5D0     		beq	.L81
 314:command.c     ****     serial_flush();
 1368              		.loc 1 314 0
 1369 00e2 FFF7FEFF 		bl	serial_flush
 315:command.c     ****     return 0;
 1370              		.loc 1 315 0
 1371 00e6 0023     		movs	r3, #0
 1372              	.L82:
 316:command.c     **** }
 1373              		.loc 1 316 0 discriminator 1
 1374 00e8 1800     		movs	r0, r3
 1375 00ea BD46     		mov	sp, r7
 1376 00ec 0AB0     		add	sp, sp, #40
 1377              		@ sp needed
 1378 00ee 80BD     		pop	{r7, pc}
 1379              	.L84:
 1380              		.align	2
 1381              	.L83:
 1382 00f0 94000000 		.word	.LC6
 1383 00f4 00000000 		.word	settings
 1384 00f8 A8050000 		.word	.LC65
 1385 00fc B0050000 		.word	.LC67
 1386              		.cfi_endproc
 1387              	.LFE43:
 1388              		.size	cmd_read, .-cmd_read
 1389              		.section	.rodata
 1390 05b3 00       		.align	2
 1391              	.LC70:
ARM GAS  C:\Users\essele\AppData\Local\Temp\ccnyoXQF.s 			page 33


 1392 05b4 252D3130 		.ascii	"%-10.10s = %d\000"
 1392      2E313073 
 1392      203D2025 
 1392      6400
 1393 05c2 0000     		.align	2
 1394              	.LC72:
 1395 05c4 20282573 		.ascii	" (%s)\000"
 1395      2900
 1396              		.section	.text.cmd_config,"ax",%progbits
 1397              		.align	2
 1398              		.global	cmd_config
 1399              		.code	16
 1400              		.thumb_func
 1401              		.type	cmd_config, %function
 1402              	cmd_config:
 1403              	.LFB44:
 317:command.c     **** 
 318:command.c     **** /**
 319:command.c     ****  * List out all items of settings that can be set by commands
 320:command.c     ****  */
 321:command.c     **** int cmd_config(char *argv[], int argc, const struct cmd *cmd) {
 1404              		.loc 1 321 0
 1405              		.cfi_startproc
 1406              		@ args = 0, pretend = 0, frame = 32
 1407              		@ frame_needed = 1, uses_anonymous_args = 0
 1408 0000 80B5     		push	{r7, lr}
 1409              		.cfi_def_cfa_offset 8
 1410              		.cfi_offset 7, -8
 1411              		.cfi_offset 14, -4
 1412 0002 88B0     		sub	sp, sp, #32
 1413              		.cfi_def_cfa_offset 40
 1414 0004 00AF     		add	r7, sp, #0
 1415              		.cfi_def_cfa_register 7
 1416 0006 F860     		str	r0, [r7, #12]
 1417 0008 B960     		str	r1, [r7, #8]
 1418 000a 7A60     		str	r2, [r7, #4]
 322:command.c     ****     if (argc != 1) {
 1419              		.loc 1 322 0
 1420 000c BB68     		ldr	r3, [r7, #8]
 1421 000e 012B     		cmp	r3, #1
 1422 0010 07D0     		beq	.L86
 323:command.c     ****         cmd_usage(argv, cmd);
 1423              		.loc 1 323 0
 1424 0012 7A68     		ldr	r2, [r7, #4]
 1425 0014 FB68     		ldr	r3, [r7, #12]
 1426 0016 1100     		movs	r1, r2
 1427 0018 1800     		movs	r0, r3
 1428 001a FFF7FEFF 		bl	cmd_usage
 324:command.c     ****         return 1;
 1429              		.loc 1 324 0
 1430 001e 0123     		movs	r3, #1
 1431 0020 5AE0     		b	.L87
 1432              	.L86:
 325:command.c     ****     }
 326:command.c     ****     // Now look through the commands, finding ones referencing the config
 327:command.c     ****     int i = 0;
 1433              		.loc 1 327 0
ARM GAS  C:\Users\essele\AppData\Local\Temp\ccnyoXQF.s 			page 34


 1434 0022 0023     		movs	r3, #0
 1435 0024 FB61     		str	r3, [r7, #28]
 328:command.c     ****     while (commands[i].name != NULL) {
 1436              		.loc 1 328 0
 1437 0026 50E0     		b	.L88
 1438              	.L95:
 329:command.c     ****         if (commands[i].setting != NULL) {
 1439              		.loc 1 329 0
 1440 0028 2D4A     		ldr	r2, .L96
 1441 002a FB69     		ldr	r3, [r7, #28]
 1442 002c 5B01     		lsls	r3, r3, #5
 1443 002e D318     		adds	r3, r2, r3
 1444 0030 0833     		adds	r3, r3, #8
 1445 0032 1B68     		ldr	r3, [r3]
 1446 0034 002B     		cmp	r3, #0
 1447 0036 45D0     		beq	.L89
 1448              	.LBB6:
 330:command.c     ****             uint16_t value = *(commands[i].setting);
 1449              		.loc 1 330 0
 1450 0038 294A     		ldr	r2, .L96
 1451 003a FB69     		ldr	r3, [r7, #28]
 1452 003c 5B01     		lsls	r3, r3, #5
 1453 003e D318     		adds	r3, r2, r3
 1454 0040 0833     		adds	r3, r3, #8
 1455 0042 1A68     		ldr	r2, [r3]
 1456 0044 1223     		movs	r3, #18
 1457 0046 FB18     		adds	r3, r7, r3
 1458 0048 1288     		ldrh	r2, [r2]
 1459 004a 1A80     		strh	r2, [r3]
 331:command.c     ****             char    *meaning = NULL;
 1460              		.loc 1 331 0
 1461 004c 0023     		movs	r3, #0
 1462 004e BB61     		str	r3, [r7, #24]
 332:command.c     ****             
 333:command.c     ****             if (commands[i].meanings != NULL) {
 1463              		.loc 1 333 0
 1464 0050 234A     		ldr	r2, .L96
 1465 0052 FB69     		ldr	r3, [r7, #28]
 1466 0054 5B01     		lsls	r3, r3, #5
 1467 0056 D318     		adds	r3, r2, r3
 1468 0058 1833     		adds	r3, r3, #24
 1469 005a 1B68     		ldr	r3, [r3]
 1470 005c 002B     		cmp	r3, #0
 1471 005e 19D0     		beq	.L90
 1472              	.LBB7:
 334:command.c     ****                 const struct item_meaning *m = commands[i].meanings;
 1473              		.loc 1 334 0
 1474 0060 1F4A     		ldr	r2, .L96
 1475 0062 FB69     		ldr	r3, [r7, #28]
 1476 0064 5B01     		lsls	r3, r3, #5
 1477 0066 D318     		adds	r3, r2, r3
 1478 0068 1833     		adds	r3, r3, #24
 1479 006a 1B68     		ldr	r3, [r3]
 1480 006c 7B61     		str	r3, [r7, #20]
 335:command.c     ****                 while (m->meaning != NULL) {
 1481              		.loc 1 335 0
 1482 006e 0DE0     		b	.L91
ARM GAS  C:\Users\essele\AppData\Local\Temp\ccnyoXQF.s 			page 35


 1483              	.L93:
 336:command.c     ****                     if (m->value == value) {
 1484              		.loc 1 336 0
 1485 0070 7B69     		ldr	r3, [r7, #20]
 1486 0072 1A68     		ldr	r2, [r3]
 1487 0074 1223     		movs	r3, #18
 1488 0076 FB18     		adds	r3, r7, r3
 1489 0078 1B88     		ldrh	r3, [r3]
 1490 007a 9A42     		cmp	r2, r3
 1491 007c 03D1     		bne	.L92
 337:command.c     ****                         meaning = m->meaning;
 1492              		.loc 1 337 0
 1493 007e 7B69     		ldr	r3, [r7, #20]
 1494 0080 5B68     		ldr	r3, [r3, #4]
 1495 0082 BB61     		str	r3, [r7, #24]
 338:command.c     ****                         break;
 1496              		.loc 1 338 0
 1497 0084 06E0     		b	.L90
 1498              	.L92:
 339:command.c     ****                     }
 340:command.c     ****                     m++;
 1499              		.loc 1 340 0
 1500 0086 7B69     		ldr	r3, [r7, #20]
 1501 0088 0833     		adds	r3, r3, #8
 1502 008a 7B61     		str	r3, [r7, #20]
 1503              	.L91:
 335:command.c     ****                     if (m->value == value) {
 1504              		.loc 1 335 0
 1505 008c 7B69     		ldr	r3, [r7, #20]
 1506 008e 5B68     		ldr	r3, [r3, #4]
 1507 0090 002B     		cmp	r3, #0
 1508 0092 EDD1     		bne	.L93
 1509              	.L90:
 1510              	.LBE7:
 341:command.c     ****                 }
 342:command.c     ****             }
 343:command.c     ****             serial_printf("%-10.10s = %d", commands[i].name, value);
 1511              		.loc 1 343 0
 1512 0094 124B     		ldr	r3, .L96
 1513 0096 FA69     		ldr	r2, [r7, #28]
 1514 0098 5201     		lsls	r2, r2, #5
 1515 009a D158     		ldr	r1, [r2, r3]
 1516 009c 1223     		movs	r3, #18
 1517 009e FB18     		adds	r3, r7, r3
 1518 00a0 1A88     		ldrh	r2, [r3]
 1519 00a2 104B     		ldr	r3, .L96+4
 1520 00a4 1800     		movs	r0, r3
 1521 00a6 FFF7FEFF 		bl	serial_printf
 344:command.c     ****             if (meaning) {
 1522              		.loc 1 344 0
 1523 00aa BB69     		ldr	r3, [r7, #24]
 1524 00ac 002B     		cmp	r3, #0
 1525 00ae 05D0     		beq	.L94
 345:command.c     ****                 serial_printf(" (%s)", meaning);
 1526              		.loc 1 345 0
 1527 00b0 BA69     		ldr	r2, [r7, #24]
 1528 00b2 0D4B     		ldr	r3, .L96+8
ARM GAS  C:\Users\essele\AppData\Local\Temp\ccnyoXQF.s 			page 36


 1529 00b4 1100     		movs	r1, r2
 1530 00b6 1800     		movs	r0, r3
 1531 00b8 FFF7FEFF 		bl	serial_printf
 1532              	.L94:
 346:command.c     ****             }
 347:command.c     ****             serial_printf("\r\n");
 1533              		.loc 1 347 0
 1534 00bc 0B4B     		ldr	r3, .L96+12
 1535 00be 1800     		movs	r0, r3
 1536 00c0 FFF7FEFF 		bl	serial_printf
 1537              	.L89:
 1538              	.LBE6:
 348:command.c     ****         }
 349:command.c     ****         i++;
 1539              		.loc 1 349 0
 1540 00c4 FB69     		ldr	r3, [r7, #28]
 1541 00c6 0133     		adds	r3, r3, #1
 1542 00c8 FB61     		str	r3, [r7, #28]
 1543              	.L88:
 328:command.c     ****         if (commands[i].setting != NULL) {
 1544              		.loc 1 328 0
 1545 00ca 054B     		ldr	r3, .L96
 1546 00cc FA69     		ldr	r2, [r7, #28]
 1547 00ce 5201     		lsls	r2, r2, #5
 1548 00d0 D358     		ldr	r3, [r2, r3]
 1549 00d2 002B     		cmp	r3, #0
 1550 00d4 A8D1     		bne	.L95
 350:command.c     ****     }   
 351:command.c     ****     return 0;
 1551              		.loc 1 351 0
 1552 00d6 0023     		movs	r3, #0
 1553              	.L87:
 352:command.c     **** }
 1554              		.loc 1 352 0
 1555 00d8 1800     		movs	r0, r3
 1556 00da BD46     		mov	sp, r7
 1557 00dc 08B0     		add	sp, sp, #32
 1558              		@ sp needed
 1559 00de 80BD     		pop	{r7, pc}
 1560              	.L97:
 1561              		.align	2
 1562              	.L96:
 1563 00e0 00000000 		.word	commands
 1564 00e4 B4050000 		.word	.LC70
 1565 00e8 C4050000 		.word	.LC72
 1566 00ec B0050000 		.word	.LC67
 1567              		.cfi_endproc
 1568              	.LFE44:
 1569              		.size	cmd_config, .-cmd_config
 1570              		.section	.rodata
 1571 05ca 0000     		.align	2
 1572              	.LC75:
 1573 05cc 79617567 		.ascii	"yaugi %d.%d by Lee Essen\015\012\000"
 1573      69202564 
 1573      2E256420 
 1573      6279204C 
 1573      65652045 
ARM GAS  C:\Users\essele\AppData\Local\Temp\ccnyoXQF.s 			page 37


 1574              		.section	.text.helper_version,"ax",%progbits
 1575              		.align	2
 1576              		.global	helper_version
 1577              		.code	16
 1578              		.thumb_func
 1579              		.type	helper_version, %function
 1580              	helper_version:
 1581              	.LFB45:
 353:command.c     **** 
 354:command.c     **** 
 355:command.c     **** int helper_version() {
 1582              		.loc 1 355 0
 1583              		.cfi_startproc
 1584              		@ args = 0, pretend = 0, frame = 0
 1585              		@ frame_needed = 1, uses_anonymous_args = 0
 1586 0000 80B5     		push	{r7, lr}
 1587              		.cfi_def_cfa_offset 8
 1588              		.cfi_offset 7, -8
 1589              		.cfi_offset 14, -4
 1590 0002 00AF     		add	r7, sp, #0
 1591              		.cfi_def_cfa_register 7
 356:command.c     ****     serial_printf("yaugi %d.%d by Lee Essen\r\n", MAJOR_VERSION, MINOR_VERSION);
 1592              		.loc 1 356 0
 1593 0004 044B     		ldr	r3, .L100
 1594 0006 0222     		movs	r2, #2
 1595 0008 0121     		movs	r1, #1
 1596 000a 1800     		movs	r0, r3
 1597 000c FFF7FEFF 		bl	serial_printf
 357:command.c     ****     return 0;
 1598              		.loc 1 357 0
 1599 0010 0023     		movs	r3, #0
 358:command.c     **** }
 1600              		.loc 1 358 0
 1601 0012 1800     		movs	r0, r3
 1602 0014 BD46     		mov	sp, r7
 1603              		@ sp needed
 1604 0016 80BD     		pop	{r7, pc}
 1605              	.L101:
 1606              		.align	2
 1607              	.L100:
 1608 0018 CC050000 		.word	.LC75
 1609              		.cfi_endproc
 1610              	.LFE45:
 1611              		.size	helper_version, .-helper_version
 1612              		.section	.rodata
 1613 05e7 00       		.align	2
 1614              	.LC77:
 1615 05e8 70696E20 		.ascii	"pin status = %04x\015\012\000"
 1615      73746174 
 1615      7573203D 
 1615      20253034 
 1615      780D0A00 
 1616              		.section	.text.helper_gpiball,"ax",%progbits
 1617              		.align	2
 1618              		.global	helper_gpiball
 1619              		.code	16
 1620              		.thumb_func
ARM GAS  C:\Users\essele\AppData\Local\Temp\ccnyoXQF.s 			page 38


 1621              		.type	helper_gpiball, %function
 1622              	helper_gpiball:
 1623              	.LFB46:
 359:command.c     ****  
 360:command.c     **** 
 361:command.c     **** int helper_gpiball() {
 1624              		.loc 1 361 0
 1625              		.cfi_startproc
 1626              		@ args = 0, pretend = 0, frame = 8
 1627              		@ frame_needed = 1, uses_anonymous_args = 0
 1628 0000 90B5     		push	{r4, r7, lr}
 1629              		.cfi_def_cfa_offset 12
 1630              		.cfi_offset 4, -12
 1631              		.cfi_offset 7, -8
 1632              		.cfi_offset 14, -4
 1633 0002 83B0     		sub	sp, sp, #12
 1634              		.cfi_def_cfa_offset 24
 1635 0004 00AF     		add	r7, sp, #0
 1636              		.cfi_def_cfa_register 7
 362:command.c     ****     uint16_t v = gpib_readall();
 1637              		.loc 1 362 0
 1638 0006 BC1D     		adds	r4, r7, #6
 1639 0008 FFF7FEFF 		bl	gpib_readall
 1640 000c 0300     		movs	r3, r0
 1641 000e 2380     		strh	r3, [r4]
 363:command.c     ****     serial_printf("pin status = %04x\r\n", v);
 1642              		.loc 1 363 0
 1643 0010 BB1D     		adds	r3, r7, #6
 1644 0012 1A88     		ldrh	r2, [r3]
 1645 0014 044B     		ldr	r3, .L104
 1646 0016 1100     		movs	r1, r2
 1647 0018 1800     		movs	r0, r3
 1648 001a FFF7FEFF 		bl	serial_printf
 364:command.c     ****     return 0;
 1649              		.loc 1 364 0
 1650 001e 0023     		movs	r3, #0
 365:command.c     **** }
 1651              		.loc 1 365 0
 1652 0020 1800     		movs	r0, r3
 1653 0022 BD46     		mov	sp, r7
 1654 0024 03B0     		add	sp, sp, #12
 1655              		@ sp needed
 1656 0026 90BD     		pop	{r4, r7, pc}
 1657              	.L105:
 1658              		.align	2
 1659              	.L104:
 1660 0028 E8050000 		.word	.LC77
 1661              		.cfi_endproc
 1662              	.LFE46:
 1663              		.size	helper_gpiball, .-helper_gpiball
 1664              		.section	.text.helper_clr,"ax",%progbits
 1665              		.align	2
 1666              		.global	helper_clr
 1667              		.code	16
 1668              		.thumb_func
 1669              		.type	helper_clr, %function
 1670              	helper_clr:
ARM GAS  C:\Users\essele\AppData\Local\Temp\ccnyoXQF.s 			page 39


 1671              	.LFB47:
 366:command.c     **** 
 367:command.c     **** /**
 368:command.c     ****  * Send the selected device clear command (needs to be tested)
 369:command.c     ****  */
 370:command.c     **** int helper_clr() {
 1672              		.loc 1 370 0
 1673              		.cfi_startproc
 1674              		@ args = 0, pretend = 0, frame = 0
 1675              		@ frame_needed = 1, uses_anonymous_args = 0
 1676 0000 80B5     		push	{r7, lr}
 1677              		.cfi_def_cfa_offset 8
 1678              		.cfi_offset 7, -8
 1679              		.cfi_offset 14, -4
 1680 0002 00AF     		add	r7, sp, #0
 1681              		.cfi_def_cfa_register 7
 371:command.c     ****     gpib_send_SDC();
 1682              		.loc 1 371 0
 1683 0004 FFF7FEFF 		bl	gpib_send_SDC
 372:command.c     ****     return 0;
 1684              		.loc 1 372 0
 1685 0008 0023     		movs	r3, #0
 373:command.c     **** }
 1686              		.loc 1 373 0
 1687 000a 1800     		movs	r0, r3
 1688 000c BD46     		mov	sp, r7
 1689              		@ sp needed
 1690 000e 80BD     		pop	{r7, pc}
 1691              		.cfi_endproc
 1692              	.LFE47:
 1693              		.size	helper_clr, .-helper_clr
 1694              		.section	.text.helper_ifc,"ax",%progbits
 1695              		.align	2
 1696              		.global	helper_ifc
 1697              		.code	16
 1698              		.thumb_func
 1699              		.type	helper_ifc, %function
 1700              	helper_ifc:
 1701              	.LFB48:
 374:command.c     **** int helper_ifc() {
 1702              		.loc 1 374 0
 1703              		.cfi_startproc
 1704              		@ args = 0, pretend = 0, frame = 0
 1705              		@ frame_needed = 1, uses_anonymous_args = 0
 1706 0000 80B5     		push	{r7, lr}
 1707              		.cfi_def_cfa_offset 8
 1708              		.cfi_offset 7, -8
 1709              		.cfi_offset 14, -4
 1710 0002 00AF     		add	r7, sp, #0
 1711              		.cfi_def_cfa_register 7
 375:command.c     ****     gpib_interface_clear();
 1712              		.loc 1 375 0
 1713 0004 FFF7FEFF 		bl	gpib_interface_clear
 376:command.c     ****     return 0;
 1714              		.loc 1 376 0
 1715 0008 0023     		movs	r3, #0
 377:command.c     **** }
ARM GAS  C:\Users\essele\AppData\Local\Temp\ccnyoXQF.s 			page 40


 1716              		.loc 1 377 0
 1717 000a 1800     		movs	r0, r3
 1718 000c BD46     		mov	sp, r7
 1719              		@ sp needed
 1720 000e 80BD     		pop	{r7, pc}
 1721              		.cfi_endproc
 1722              	.LFE48:
 1723              		.size	helper_ifc, .-helper_ifc
 1724              		.section	.text.helper_llo,"ax",%progbits
 1725              		.align	2
 1726              		.global	helper_llo
 1727              		.code	16
 1728              		.thumb_func
 1729              		.type	helper_llo, %function
 1730              	helper_llo:
 1731              	.LFB49:
 378:command.c     **** int helper_llo() {
 1732              		.loc 1 378 0
 1733              		.cfi_startproc
 1734              		@ args = 0, pretend = 0, frame = 0
 1735              		@ frame_needed = 1, uses_anonymous_args = 0
 1736 0000 80B5     		push	{r7, lr}
 1737              		.cfi_def_cfa_offset 8
 1738              		.cfi_offset 7, -8
 1739              		.cfi_offset 14, -4
 1740 0002 00AF     		add	r7, sp, #0
 1741              		.cfi_def_cfa_register 7
 379:command.c     ****     gpib_send_LLO();
 1742              		.loc 1 379 0
 1743 0004 FFF7FEFF 		bl	gpib_send_LLO
 380:command.c     ****     return 0;
 1744              		.loc 1 380 0
 1745 0008 0023     		movs	r3, #0
 381:command.c     **** }
 1746              		.loc 1 381 0
 1747 000a 1800     		movs	r0, r3
 1748 000c BD46     		mov	sp, r7
 1749              		@ sp needed
 1750 000e 80BD     		pop	{r7, pc}
 1751              		.cfi_endproc
 1752              	.LFE49:
 1753              		.size	helper_llo, .-helper_llo
 1754              		.section	.text.helper_loc,"ax",%progbits
 1755              		.align	2
 1756              		.global	helper_loc
 1757              		.code	16
 1758              		.thumb_func
 1759              		.type	helper_loc, %function
 1760              	helper_loc:
 1761              	.LFB50:
 382:command.c     **** int helper_loc() {
 1762              		.loc 1 382 0
 1763              		.cfi_startproc
 1764              		@ args = 0, pretend = 0, frame = 0
 1765              		@ frame_needed = 1, uses_anonymous_args = 0
 1766 0000 80B5     		push	{r7, lr}
 1767              		.cfi_def_cfa_offset 8
ARM GAS  C:\Users\essele\AppData\Local\Temp\ccnyoXQF.s 			page 41


 1768              		.cfi_offset 7, -8
 1769              		.cfi_offset 14, -4
 1770 0002 00AF     		add	r7, sp, #0
 1771              		.cfi_def_cfa_register 7
 383:command.c     ****     gpib_send_GTL();
 1772              		.loc 1 383 0
 1773 0004 FFF7FEFF 		bl	gpib_send_GTL
 384:command.c     ****     return 0;
 1774              		.loc 1 384 0
 1775 0008 0023     		movs	r3, #0
 385:command.c     **** }
 1776              		.loc 1 385 0
 1777 000a 1800     		movs	r0, r3
 1778 000c BD46     		mov	sp, r7
 1779              		@ sp needed
 1780 000e 80BD     		pop	{r7, pc}
 1781              		.cfi_endproc
 1782              	.LFE50:
 1783              		.size	helper_loc, .-helper_loc
 1784              		.global	no_usage_args
 1785              		.section	.rodata
 1786              		.align	2
 1787              	.LC79:
 1788 05fc 00       		.ascii	"\000"
 1789              		.data
 1790              		.align	2
 1791              		.type	no_usage_args, %object
 1792              		.size	no_usage_args, 8
 1793              	no_usage_args:
 1794 0000 FC050000 		.word	.LC79
 1795 0004 00000000 		.word	0
 1796              		.global	auto_means
 1797              		.section	.rodata
 1798 05fd 000000   		.align	2
 1799              	.LC80:
 1800 0600 72656164 		.ascii	"read-after-write disabled\000"
 1800      2D616674 
 1800      65722D77 
 1800      72697465 
 1800      20646973 
 1801 061a 0000     		.align	2
 1802              	.LC81:
 1803 061c 72656164 		.ascii	"read-after-write always\000"
 1803      2D616674 
 1803      65722D77 
 1803      72697465 
 1803      20616C77 
 1804              		.align	2
 1805              	.LC82:
 1806 0634 72656164 		.ascii	"read-after-write if write contained ?\000"
 1806      2D616674 
 1806      65722D77 
 1806      72697465 
 1806      20696620 
 1807 065a 0000     		.align	2
 1808              		.type	auto_means, %object
 1809              		.size	auto_means, 32
ARM GAS  C:\Users\essele\AppData\Local\Temp\ccnyoXQF.s 			page 42


 1810              	auto_means:
 1811 065c 00000000 		.word	0
 1812 0660 00060000 		.word	.LC80
 1813 0664 01000000 		.word	1
 1814 0668 1C060000 		.word	.LC81
 1815 066c 02000000 		.word	2
 1816 0670 34060000 		.word	.LC82
 1817 0674 00000000 		.word	0
 1818 0678 00000000 		.word	0
 1819              		.global	enable_disable_means
 1820              		.align	2
 1821              	.LC83:
 1822 067c 64697361 		.ascii	"disabled\000"
 1822      626C6564 
 1822      00
 1823 0685 000000   		.align	2
 1824              	.LC84:
 1825 0688 656E6162 		.ascii	"enabled\000"
 1825      6C656400 
 1826              		.align	2
 1827              		.type	enable_disable_means, %object
 1828              		.size	enable_disable_means, 24
 1829              	enable_disable_means:
 1830 0690 00000000 		.word	0
 1831 0694 7C060000 		.word	.LC83
 1832 0698 01000000 		.word	1
 1833 069c 88060000 		.word	.LC84
 1834 06a0 00000000 		.word	0
 1835 06a4 00000000 		.word	0
 1836              		.global	eos_means
 1837              		.align	2
 1838              	.LC85:
 1839 06a8 61707065 		.ascii	"append CR+LF to GPIB output\000"
 1839      6E642043 
 1839      522B4C46 
 1839      20746F20 
 1839      47504942 
 1840              		.align	2
 1841              	.LC86:
 1842 06c4 61707065 		.ascii	"append CR to GPIB output\000"
 1842      6E642043 
 1842      5220746F 
 1842      20475049 
 1842      42206F75 
 1843 06dd 000000   		.align	2
 1844              	.LC87:
 1845 06e0 61707065 		.ascii	"append LF to GPIB output\000"
 1845      6E64204C 
 1845      4620746F 
 1845      20475049 
 1845      42206F75 
 1846 06f9 000000   		.align	2
 1847              	.LC88:
 1848 06fc 646F206E 		.ascii	"do not append to GPIB output\000"
 1848      6F742061 
 1848      7070656E 
 1848      6420746F 
ARM GAS  C:\Users\essele\AppData\Local\Temp\ccnyoXQF.s 			page 43


 1848      20475049 
 1849 0719 000000   		.align	2
 1850              		.type	eos_means, %object
 1851              		.size	eos_means, 40
 1852              	eos_means:
 1853 071c 00000000 		.word	0
 1854 0720 A8060000 		.word	.LC85
 1855 0724 01000000 		.word	1
 1856 0728 C4060000 		.word	.LC86
 1857 072c 02000000 		.word	2
 1858 0730 E0060000 		.word	.LC87
 1859 0734 03000000 		.word	3
 1860 0738 FC060000 		.word	.LC88
 1861 073c 00000000 		.word	0
 1862 0740 00000000 		.word	0
 1863              		.global	enable_disable_usage
 1864              		.align	2
 1865              	.LC89:
 1866 0744 5B307C31 		.ascii	"[0|1]\000"
 1866      5D00
 1867              		.data
 1868              		.align	2
 1869              		.type	enable_disable_usage, %object
 1870              		.size	enable_disable_usage, 8
 1871              	enable_disable_usage:
 1872 0008 44070000 		.word	.LC89
 1873 000c 00000000 		.word	0
 1874              		.section	.rodata
 1875 074a 0000     		.align	2
 1876              	.LC90:
 1877 074c 5B504144 		.ascii	"[PAD]\000"
 1877      5D00
 1878 0752 0000     		.align	2
 1879              	.LC91:
 1880 0754 09776865 		.ascii	"\011where PAD is between 0 and 30\000"
 1880      72652050 
 1880      41442069 
 1880      73206265 
 1880      74776565 
 1881              		.data
 1882              		.align	2
 1883              		.type	__compound_literal.0, %object
 1884              		.size	__compound_literal.0, 12
 1885              	__compound_literal.0:
 1886 0010 4C070000 		.word	.LC90
 1887 0014 54070000 		.word	.LC91
 1888 0018 00000000 		.word	0
 1889              		.section	.rodata
 1890 0773 00       		.align	2
 1891              	.LC92:
 1892 0774 5B307C31 		.ascii	"[0|1|2]\000"
 1892      7C325D00 
 1893              		.data
 1894              		.align	2
 1895              		.type	__compound_literal.1, %object
 1896              		.size	__compound_literal.1, 8
 1897              	__compound_literal.1:
ARM GAS  C:\Users\essele\AppData\Local\Temp\ccnyoXQF.s 			page 44


 1898 001c 74070000 		.word	.LC92
 1899 0020 00000000 		.word	0
 1900              		.section	.rodata
 1901              		.align	2
 1902              	.LC93:
 1903 077c 5B307C31 		.ascii	"[0|1|2|3]\000"
 1903      7C327C33 
 1903      5D00
 1904              		.data
 1905              		.align	2
 1906              		.type	__compound_literal.2, %object
 1907              		.size	__compound_literal.2, 8
 1908              	__compound_literal.2:
 1909 0024 7C070000 		.word	.LC93
 1910 0028 00000000 		.word	0
 1911              		.section	.rodata
 1912 0786 0000     		.align	2
 1913              	.LC94:
 1914 0788 5B636861 		.ascii	"[char]\000"
 1914      725D00
 1915 078f 00       		.align	2
 1916              	.LC95:
 1917 0790 09776865 		.ascii	"\011where char is between 0 and 255\000"
 1917      72652063 
 1917      68617220 
 1917      69732062 
 1917      65747765 
 1918              		.data
 1919              		.align	2
 1920              		.type	__compound_literal.3, %object
 1921              		.size	__compound_literal.3, 12
 1922              	__compound_literal.3:
 1923 002c 88070000 		.word	.LC94
 1924 0030 90070000 		.word	.LC95
 1925 0034 00000000 		.word	0
 1926              		.section	.rodata
 1927 07b1 000000   		.align	2
 1928              	.LC96:
 1929 07b4 5B636F6D 		.ascii	"[command]\000"
 1929      6D616E64 
 1929      5D00
 1930              		.data
 1931              		.align	2
 1932              		.type	__compound_literal.4, %object
 1933              		.size	__compound_literal.4, 8
 1934              	__compound_literal.4:
 1935 0038 B4070000 		.word	.LC96
 1936 003c 00000000 		.word	0
 1937              		.section	.rodata
 1938 07be 0000     		.align	2
 1939              	.LC97:
 1940 07c0 5B454F49 		.ascii	"[EOI | char]\000"
 1940      207C2063 
 1940      6861725D 
 1940      00
 1941              		.data
 1942              		.align	2
ARM GAS  C:\Users\essele\AppData\Local\Temp\ccnyoXQF.s 			page 45


 1943              		.type	__compound_literal.5, %object
 1944              		.size	__compound_literal.5, 12
 1945              	__compound_literal.5:
 1946 0040 C0070000 		.word	.LC97
 1947 0044 90070000 		.word	.LC95
 1948 0048 00000000 		.word	0
 1949              		.section	.rodata
 1950 07cd 000000   		.align	2
 1951              	.LC98:
 1952 07d0 5B74696D 		.ascii	"[time]\000"
 1952      655D00
 1953 07d7 00       		.align	2
 1954              	.LC99:
 1955 07d8 09776865 		.ascii	"\011where time is between 1 and 3000\000"
 1955      72652074 
 1955      696D6520 
 1955      69732062 
 1955      65747765 
 1956              		.data
 1957              		.align	2
 1958              		.type	__compound_literal.6, %object
 1959              		.size	__compound_literal.6, 12
 1960              	__compound_literal.6:
 1961 004c D0070000 		.word	.LC98
 1962 0050 D8070000 		.word	.LC99
 1963 0054 00000000 		.word	0
 1964              		.text
 1965              	.Letext0:
 1966              		.file 2 "c:\\program files (x86)\\cypress\\psoc creator\\4.2\\psoc creator\\import\\gnu\\arm\\5.4.
 1967              		.file 3 "c:\\program files (x86)\\cypress\\psoc creator\\4.2\\psoc creator\\import\\gnu\\arm\\5.4.
 1968              		.file 4 "settings.h"
 1969              		.section	.debug_info,"",%progbits
 1970              	.Ldebug_info0:
 1971 0000 83070000 		.4byte	0x783
 1972 0004 0400     		.2byte	0x4
 1973 0006 00000000 		.4byte	.Ldebug_abbrev0
 1974 000a 04       		.byte	0x4
 1975 000b 01       		.uleb128 0x1
 1976 000c 61010000 		.4byte	.LASF67
 1977 0010 0C       		.byte	0xc
 1978 0011 38030000 		.4byte	.LASF68
 1979 0015 55000000 		.4byte	.LASF69
 1980 0019 00000000 		.4byte	.Ldebug_ranges0+0
 1981 001d 00000000 		.4byte	0
 1982 0021 00000000 		.4byte	.Ldebug_line0
 1983 0025 02       		.uleb128 0x2
 1984 0026 01       		.byte	0x1
 1985 0027 06       		.byte	0x6
 1986 0028 22020000 		.4byte	.LASF0
 1987 002c 03       		.uleb128 0x3
 1988 002d 3B010000 		.4byte	.LASF3
 1989 0031 02       		.byte	0x2
 1990 0032 1D       		.byte	0x1d
 1991 0033 37000000 		.4byte	0x37
 1992 0037 02       		.uleb128 0x2
 1993 0038 01       		.byte	0x1
 1994 0039 08       		.byte	0x8
ARM GAS  C:\Users\essele\AppData\Local\Temp\ccnyoXQF.s 			page 46


 1995 003a 53010000 		.4byte	.LASF1
 1996 003e 02       		.uleb128 0x2
 1997 003f 02       		.byte	0x2
 1998 0040 05       		.byte	0x5
 1999 0041 21000000 		.4byte	.LASF2
 2000 0045 03       		.uleb128 0x3
 2001 0046 96000000 		.4byte	.LASF4
 2002 004a 02       		.byte	0x2
 2003 004b 2B       		.byte	0x2b
 2004 004c 50000000 		.4byte	0x50
 2005 0050 02       		.uleb128 0x2
 2006 0051 02       		.byte	0x2
 2007 0052 07       		.byte	0x7
 2008 0053 78020000 		.4byte	.LASF5
 2009 0057 02       		.uleb128 0x2
 2010 0058 04       		.byte	0x4
 2011 0059 05       		.byte	0x5
 2012 005a 08010000 		.4byte	.LASF6
 2013 005e 03       		.uleb128 0x3
 2014 005f 13030000 		.4byte	.LASF7
 2015 0063 02       		.byte	0x2
 2016 0064 41       		.byte	0x41
 2017 0065 69000000 		.4byte	0x69
 2018 0069 02       		.uleb128 0x2
 2019 006a 04       		.byte	0x4
 2020 006b 07       		.byte	0x7
 2021 006c FA020000 		.4byte	.LASF8
 2022 0070 02       		.uleb128 0x2
 2023 0071 08       		.byte	0x8
 2024 0072 05       		.byte	0x5
 2025 0073 E4000000 		.4byte	.LASF9
 2026 0077 02       		.uleb128 0x2
 2027 0078 08       		.byte	0x8
 2028 0079 07       		.byte	0x7
 2029 007a 2E020000 		.4byte	.LASF10
 2030 007e 04       		.uleb128 0x4
 2031 007f 04       		.byte	0x4
 2032 0080 05       		.byte	0x5
 2033 0081 696E7400 		.ascii	"int\000"
 2034 0085 02       		.uleb128 0x2
 2035 0086 04       		.byte	0x4
 2036 0087 07       		.byte	0x7
 2037 0088 4E020000 		.4byte	.LASF11
 2038 008c 03       		.uleb128 0x3
 2039 008d AC000000 		.4byte	.LASF12
 2040 0091 03       		.byte	0x3
 2041 0092 18       		.byte	0x18
 2042 0093 2C000000 		.4byte	0x2c
 2043 0097 03       		.uleb128 0x3
 2044 0098 5B020000 		.4byte	.LASF13
 2045 009c 03       		.byte	0x3
 2046 009d 24       		.byte	0x24
 2047 009e 45000000 		.4byte	0x45
 2048 00a2 03       		.uleb128 0x3
 2049 00a3 45020000 		.4byte	.LASF14
 2050 00a7 03       		.byte	0x3
 2051 00a8 30       		.byte	0x30
ARM GAS  C:\Users\essele\AppData\Local\Temp\ccnyoXQF.s 			page 47


 2052 00a9 5E000000 		.4byte	0x5e
 2053 00ad 02       		.uleb128 0x2
 2054 00ae 04       		.byte	0x4
 2055 00af 04       		.byte	0x4
 2056 00b0 D9020000 		.4byte	.LASF15
 2057 00b4 02       		.uleb128 0x2
 2058 00b5 08       		.byte	0x8
 2059 00b6 04       		.byte	0x4
 2060 00b7 0C030000 		.4byte	.LASF16
 2061 00bb 02       		.uleb128 0x2
 2062 00bc 01       		.byte	0x1
 2063 00bd 08       		.byte	0x8
 2064 00be A0020000 		.4byte	.LASF17
 2065 00c2 02       		.uleb128 0x2
 2066 00c3 08       		.byte	0x8
 2067 00c4 04       		.byte	0x4
 2068 00c5 FF010000 		.4byte	.LASF18
 2069 00c9 02       		.uleb128 0x2
 2070 00ca 04       		.byte	0x4
 2071 00cb 07       		.byte	0x7
 2072 00cc 46000000 		.4byte	.LASF19
 2073 00d0 05       		.uleb128 0x5
 2074 00d1 04       		.byte	0x4
 2075 00d2 BB000000 		.4byte	0xbb
 2076 00d6 05       		.uleb128 0x5
 2077 00d7 04       		.byte	0x4
 2078 00d8 DC000000 		.4byte	0xdc
 2079 00dc 06       		.uleb128 0x6
 2080 00dd BB000000 		.4byte	0xbb
 2081 00e1 07       		.uleb128 0x7
 2082 00e2 D6000000 		.4byte	.LASF27
 2083 00e6 14       		.byte	0x14
 2084 00e7 04       		.byte	0x4
 2085 00e8 0D       		.byte	0xd
 2086 00e9 5A010000 		.4byte	0x15a
 2087 00ed 08       		.uleb128 0x8
 2088 00ee 2E030000 		.4byte	.LASF20
 2089 00f2 04       		.byte	0x4
 2090 00f3 0E       		.byte	0xe
 2091 00f4 A2000000 		.4byte	0xa2
 2092 00f8 00       		.byte	0
 2093 00f9 08       		.uleb128 0x8
 2094 00fa 00000000 		.4byte	.LASF21
 2095 00fe 04       		.byte	0x4
 2096 00ff 0F       		.byte	0xf
 2097 0100 97000000 		.4byte	0x97
 2098 0104 04       		.byte	0x4
 2099 0105 08       		.uleb128 0x8
 2100 0106 26010000 		.4byte	.LASF22
 2101 010a 04       		.byte	0x4
 2102 010b 10       		.byte	0x10
 2103 010c 97000000 		.4byte	0x97
 2104 0110 06       		.byte	0x6
 2105 0111 08       		.uleb128 0x8
 2106 0112 C4000000 		.4byte	.LASF23
 2107 0116 04       		.byte	0x4
 2108 0117 11       		.byte	0x11
ARM GAS  C:\Users\essele\AppData\Local\Temp\ccnyoXQF.s 			page 48


 2109 0118 97000000 		.4byte	0x97
 2110 011c 08       		.byte	0x8
 2111 011d 09       		.uleb128 0x9
 2112 011e 656F6900 		.ascii	"eoi\000"
 2113 0122 04       		.byte	0x4
 2114 0123 12       		.byte	0x12
 2115 0124 97000000 		.4byte	0x97
 2116 0128 0A       		.byte	0xa
 2117 0129 09       		.uleb128 0x9
 2118 012a 656F7300 		.ascii	"eos\000"
 2119 012e 04       		.byte	0x4
 2120 012f 13       		.byte	0x13
 2121 0130 97000000 		.4byte	0x97
 2122 0134 0C       		.byte	0xc
 2123 0135 08       		.uleb128 0x8
 2124 0136 0B020000 		.4byte	.LASF24
 2125 013a 04       		.byte	0x4
 2126 013b 14       		.byte	0x14
 2127 013c 97000000 		.4byte	0x97
 2128 0140 0E       		.byte	0xe
 2129 0141 08       		.uleb128 0x8
 2130 0142 8B020000 		.4byte	.LASF25
 2131 0146 04       		.byte	0x4
 2132 0147 15       		.byte	0x15
 2133 0148 97000000 		.4byte	0x97
 2134 014c 10       		.byte	0x10
 2135 014d 08       		.uleb128 0x8
 2136 014e F2000000 		.4byte	.LASF26
 2137 0152 04       		.byte	0x4
 2138 0153 16       		.byte	0x16
 2139 0154 97000000 		.4byte	0x97
 2140 0158 12       		.byte	0x12
 2141 0159 00       		.byte	0
 2142 015a 05       		.uleb128 0x5
 2143 015b 04       		.byte	0x4
 2144 015c 97000000 		.4byte	0x97
 2145 0160 07       		.uleb128 0x7
 2146 0161 2E010000 		.4byte	.LASF28
 2147 0165 08       		.byte	0x8
 2148 0166 01       		.byte	0x1
 2149 0167 31       		.byte	0x31
 2150 0168 85010000 		.4byte	0x185
 2151 016c 08       		.uleb128 0x8
 2152 016d A1000000 		.4byte	.LASF29
 2153 0171 01       		.byte	0x1
 2154 0172 32       		.byte	0x32
 2155 0173 7E000000 		.4byte	0x7e
 2156 0177 00       		.byte	0
 2157 0178 08       		.uleb128 0x8
 2158 0179 2B000000 		.4byte	.LASF30
 2159 017d 01       		.byte	0x1
 2160 017e 33       		.byte	0x33
 2161 017f D0000000 		.4byte	0xd0
 2162 0183 04       		.byte	0x4
 2163 0184 00       		.byte	0
 2164 0185 0A       		.uleb128 0xa
 2165 0186 636D6400 		.ascii	"cmd\000"
ARM GAS  C:\Users\essele\AppData\Local\Temp\ccnyoXQF.s 			page 49


 2166 018a 20       		.byte	0x20
 2167 018b 01       		.byte	0x1
 2168 018c 36       		.byte	0x36
 2169 018d FE010000 		.4byte	0x1fe
 2170 0191 08       		.uleb128 0x8
 2171 0192 EF010000 		.4byte	.LASF31
 2172 0196 01       		.byte	0x1
 2173 0197 37       		.byte	0x37
 2174 0198 D0000000 		.4byte	0xd0
 2175 019c 00       		.byte	0
 2176 019d 08       		.uleb128 0x8
 2177 019e DF000000 		.4byte	.LASF32
 2178 01a2 01       		.byte	0x1
 2179 01a3 38       		.byte	0x38
 2180 01a4 28020000 		.4byte	0x228
 2181 01a8 04       		.byte	0x4
 2182 01a9 08       		.uleb128 0x8
 2183 01aa 19000000 		.4byte	.LASF33
 2184 01ae 01       		.byte	0x1
 2185 01af 39       		.byte	0x39
 2186 01b0 5A010000 		.4byte	0x15a
 2187 01b4 08       		.byte	0x8
 2188 01b5 09       		.uleb128 0x9
 2189 01b6 6D696E00 		.ascii	"min\000"
 2190 01ba 01       		.byte	0x1
 2191 01bb 3A       		.byte	0x3a
 2192 01bc 97000000 		.4byte	0x97
 2193 01c0 0C       		.byte	0xc
 2194 01c1 09       		.uleb128 0x9
 2195 01c2 6D617800 		.ascii	"max\000"
 2196 01c6 01       		.byte	0x1
 2197 01c7 3B       		.byte	0x3b
 2198 01c8 97000000 		.4byte	0x97
 2199 01cc 0E       		.byte	0xe
 2200 01cd 08       		.uleb128 0x8
 2201 01ce A7000000 		.4byte	.LASF34
 2202 01d2 01       		.byte	0x1
 2203 01d3 41       		.byte	0x41
 2204 01d4 D6000000 		.4byte	0xd6
 2205 01d8 10       		.byte	0x10
 2206 01d9 08       		.uleb128 0x8
 2207 01da 13000000 		.4byte	.LASF35
 2208 01de 01       		.byte	0x1
 2209 01df 42       		.byte	0x42
 2210 01e0 2E020000 		.4byte	0x22e
 2211 01e4 14       		.byte	0x14
 2212 01e5 08       		.uleb128 0x8
 2213 01e6 CD000000 		.4byte	.LASF36
 2214 01ea 01       		.byte	0x1
 2215 01eb 43       		.byte	0x43
 2216 01ec 34020000 		.4byte	0x234
 2217 01f0 18       		.byte	0x18
 2218 01f1 08       		.uleb128 0x8
 2219 01f2 FE000000 		.4byte	.LASF37
 2220 01f6 01       		.byte	0x1
 2221 01f7 44       		.byte	0x44
 2222 01f8 53020000 		.4byte	0x253
ARM GAS  C:\Users\essele\AppData\Local\Temp\ccnyoXQF.s 			page 50


 2223 01fc 1C       		.byte	0x1c
 2224 01fd 00       		.byte	0
 2225 01fe 0B       		.uleb128 0xb
 2226 01ff 7E000000 		.4byte	0x7e
 2227 0203 17020000 		.4byte	0x217
 2228 0207 0C       		.uleb128 0xc
 2229 0208 17020000 		.4byte	0x217
 2230 020c 0C       		.uleb128 0xc
 2231 020d 7E000000 		.4byte	0x7e
 2232 0211 0C       		.uleb128 0xc
 2233 0212 1D020000 		.4byte	0x21d
 2234 0216 00       		.byte	0
 2235 0217 05       		.uleb128 0x5
 2236 0218 04       		.byte	0x4
 2237 0219 D0000000 		.4byte	0xd0
 2238 021d 05       		.uleb128 0x5
 2239 021e 04       		.byte	0x4
 2240 021f 23020000 		.4byte	0x223
 2241 0223 06       		.uleb128 0x6
 2242 0224 85010000 		.4byte	0x185
 2243 0228 05       		.uleb128 0x5
 2244 0229 04       		.byte	0x4
 2245 022a FE010000 		.4byte	0x1fe
 2246 022e 05       		.uleb128 0x5
 2247 022f 04       		.byte	0x4
 2248 0230 D6000000 		.4byte	0xd6
 2249 0234 05       		.uleb128 0x5
 2250 0235 04       		.byte	0x4
 2251 0236 3A020000 		.4byte	0x23a
 2252 023a 06       		.uleb128 0x6
 2253 023b 60010000 		.4byte	0x160
 2254 023f 0B       		.uleb128 0xb
 2255 0240 7E000000 		.4byte	0x7e
 2256 0244 53020000 		.4byte	0x253
 2257 0248 0C       		.uleb128 0xc
 2258 0249 17020000 		.4byte	0x217
 2259 024d 0C       		.uleb128 0xc
 2260 024e 7E000000 		.4byte	0x7e
 2261 0252 00       		.byte	0
 2262 0253 05       		.uleb128 0x5
 2263 0254 04       		.byte	0x4
 2264 0255 3F020000 		.4byte	0x23f
 2265 0259 0D       		.uleb128 0xd
 2266 025a 45010000 		.4byte	.LASF38
 2267 025e 01       		.byte	0x1
 2268 025f 4E       		.byte	0x4e
 2269 0260 7E000000 		.4byte	0x7e
 2270 0264 00000000 		.4byte	.LFB35
 2271 0268 DC000000 		.4byte	.LFE35-.LFB35
 2272 026c 01       		.uleb128 0x1
 2273 026d 9C       		.byte	0x9c
 2274 026e 9B020000 		.4byte	0x29b
 2275 0272 0E       		.uleb128 0xe
 2276 0273 62756600 		.ascii	"buf\000"
 2277 0277 01       		.byte	0x1
 2278 0278 4E       		.byte	0x4e
 2279 0279 9B020000 		.4byte	0x29b
ARM GAS  C:\Users\essele\AppData\Local\Temp\ccnyoXQF.s 			page 51


 2280 027d 02       		.uleb128 0x2
 2281 027e 91       		.byte	0x91
 2282 027f 6C       		.sleb128 -20
 2283 0280 0E       		.uleb128 0xe
 2284 0281 6C656E00 		.ascii	"len\000"
 2285 0285 01       		.byte	0x1
 2286 0286 4E       		.byte	0x4e
 2287 0287 7E000000 		.4byte	0x7e
 2288 028b 02       		.uleb128 0x2
 2289 028c 91       		.byte	0x91
 2290 028d 68       		.sleb128 -24
 2291 028e 0F       		.uleb128 0xf
 2292 028f 6900     		.ascii	"i\000"
 2293 0291 01       		.byte	0x1
 2294 0292 4F       		.byte	0x4f
 2295 0293 7E000000 		.4byte	0x7e
 2296 0297 02       		.uleb128 0x2
 2297 0298 91       		.byte	0x91
 2298 0299 74       		.sleb128 -12
 2299 029a 00       		.byte	0
 2300 029b 05       		.uleb128 0x5
 2301 029c 04       		.byte	0x4
 2302 029d 8C000000 		.4byte	0x8c
 2303 02a1 0D       		.uleb128 0xd
 2304 02a2 D2020000 		.4byte	.LASF39
 2305 02a6 01       		.byte	0x1
 2306 02a7 7D       		.byte	0x7d
 2307 02a8 7E000000 		.4byte	0x7e
 2308 02ac 00000000 		.4byte	.LFB36
 2309 02b0 40000000 		.4byte	.LFE36-.LFB36
 2310 02b4 01       		.uleb128 0x1
 2311 02b5 9C       		.byte	0x9c
 2312 02b6 C7020000 		.4byte	0x2c7
 2313 02ba 0E       		.uleb128 0xe
 2314 02bb 7600     		.ascii	"v\000"
 2315 02bd 01       		.byte	0x1
 2316 02be 7D       		.byte	0x7d
 2317 02bf D0000000 		.4byte	0xd0
 2318 02c3 02       		.uleb128 0x2
 2319 02c4 91       		.byte	0x91
 2320 02c5 74       		.sleb128 -12
 2321 02c6 00       		.byte	0
 2322 02c7 10       		.uleb128 0x10
 2323 02c8 B4000000 		.4byte	.LASF40
 2324 02cc 01       		.byte	0x1
 2325 02cd 87       		.byte	0x87
 2326 02ce 7E000000 		.4byte	0x7e
 2327 02d2 00000000 		.4byte	.LFB37
 2328 02d6 3C000000 		.4byte	.LFE37-.LFB37
 2329 02da 01       		.uleb128 0x1
 2330 02db 9C       		.byte	0x9c
 2331 02dc F9020000 		.4byte	0x2f9
 2332 02e0 0E       		.uleb128 0xe
 2333 02e1 7600     		.ascii	"v\000"
 2334 02e3 01       		.byte	0x1
 2335 02e4 87       		.byte	0x87
 2336 02e5 D0000000 		.4byte	0xd0
ARM GAS  C:\Users\essele\AppData\Local\Temp\ccnyoXQF.s 			page 52


 2337 02e9 02       		.uleb128 0x2
 2338 02ea 91       		.byte	0x91
 2339 02eb 6C       		.sleb128 -20
 2340 02ec 0F       		.uleb128 0xf
 2341 02ed 6900     		.ascii	"i\000"
 2342 02ef 01       		.byte	0x1
 2343 02f0 88       		.byte	0x88
 2344 02f1 7E000000 		.4byte	0x7e
 2345 02f5 02       		.uleb128 0x2
 2346 02f6 91       		.byte	0x91
 2347 02f7 74       		.sleb128 -12
 2348 02f8 00       		.byte	0
 2349 02f9 11       		.uleb128 0x11
 2350 02fa A5020000 		.4byte	.LASF42
 2351 02fe 01       		.byte	0x1
 2352 02ff 94       		.byte	0x94
 2353 0300 00000000 		.4byte	.LFB38
 2354 0304 88000000 		.4byte	.LFE38-.LFB38
 2355 0308 01       		.uleb128 0x1
 2356 0309 9C       		.byte	0x9c
 2357 030a 45030000 		.4byte	0x345
 2358 030e 0E       		.uleb128 0xe
 2359 030f 62756600 		.ascii	"buf\000"
 2360 0313 01       		.byte	0x1
 2361 0314 94       		.byte	0x94
 2362 0315 9B020000 		.4byte	0x29b
 2363 0319 02       		.uleb128 0x2
 2364 031a 91       		.byte	0x91
 2365 031b 6C       		.sleb128 -20
 2366 031c 0E       		.uleb128 0xe
 2367 031d 6C656E00 		.ascii	"len\000"
 2368 0321 01       		.byte	0x1
 2369 0322 94       		.byte	0x94
 2370 0323 7E000000 		.4byte	0x7e
 2371 0327 02       		.uleb128 0x2
 2372 0328 91       		.byte	0x91
 2373 0329 68       		.sleb128 -24
 2374 032a 12       		.uleb128 0x12
 2375 032b 1D020000 		.4byte	.LASF41
 2376 032f 01       		.byte	0x1
 2377 0330 97       		.byte	0x97
 2378 0331 7E000000 		.4byte	0x7e
 2379 0335 02       		.uleb128 0x2
 2380 0336 91       		.byte	0x91
 2381 0337 70       		.sleb128 -16
 2382 0338 0F       		.uleb128 0xf
 2383 0339 6900     		.ascii	"i\000"
 2384 033b 01       		.byte	0x1
 2385 033c 9F       		.byte	0x9f
 2386 033d 7E000000 		.4byte	0x7e
 2387 0341 02       		.uleb128 0x2
 2388 0342 91       		.byte	0x91
 2389 0343 74       		.sleb128 -12
 2390 0344 00       		.byte	0
 2391 0345 11       		.uleb128 0x11
 2392 0346 E5020000 		.4byte	.LASF43
 2393 034a 01       		.byte	0x1
ARM GAS  C:\Users\essele\AppData\Local\Temp\ccnyoXQF.s 			page 53


 2394 034b AC       		.byte	0xac
 2395 034c 00000000 		.4byte	.LFB39
 2396 0350 D4000000 		.4byte	.LFE39-.LFB39
 2397 0354 01       		.uleb128 0x1
 2398 0355 9C       		.byte	0x9c
 2399 0356 B5030000 		.4byte	0x3b5
 2400 035a 13       		.uleb128 0x13
 2401 035b 64020000 		.4byte	.LASF44
 2402 035f 01       		.byte	0x1
 2403 0360 AC       		.byte	0xac
 2404 0361 17020000 		.4byte	0x217
 2405 0365 02       		.uleb128 0x2
 2406 0366 91       		.byte	0x91
 2407 0367 64       		.sleb128 -28
 2408 0368 0E       		.uleb128 0xe
 2409 0369 636D6400 		.ascii	"cmd\000"
 2410 036d 01       		.byte	0x1
 2411 036e AC       		.byte	0xac
 2412 036f 1D020000 		.4byte	0x21d
 2413 0373 02       		.uleb128 0x2
 2414 0374 91       		.byte	0x91
 2415 0375 60       		.sleb128 -32
 2416 0376 0F       		.uleb128 0xf
 2417 0377 7000     		.ascii	"p\000"
 2418 0379 01       		.byte	0x1
 2419 037a AD       		.byte	0xad
 2420 037b 2E020000 		.4byte	0x22e
 2421 037f 02       		.uleb128 0x2
 2422 0380 91       		.byte	0x91
 2423 0381 74       		.sleb128 -12
 2424 0382 14       		.uleb128 0x14
 2425 0383 66000000 		.4byte	.LBB2
 2426 0387 26000000 		.4byte	.LBE2-.LBB2
 2427 038b 9C030000 		.4byte	0x39c
 2428 038f 0F       		.uleb128 0xf
 2429 0390 6D00     		.ascii	"m\000"
 2430 0392 01       		.byte	0x1
 2431 0393 BB       		.byte	0xbb
 2432 0394 34020000 		.4byte	0x234
 2433 0398 02       		.uleb128 0x2
 2434 0399 91       		.byte	0x91
 2435 039a 70       		.sleb128 -16
 2436 039b 00       		.byte	0
 2437 039c 15       		.uleb128 0x15
 2438 039d 94000000 		.4byte	.LBB3
 2439 03a1 1C000000 		.4byte	.LBE3-.LBB3
 2440 03a5 12       		.uleb128 0x12
 2441 03a6 A1000000 		.4byte	.LASF29
 2442 03aa 01       		.byte	0x1
 2443 03ab C4       		.byte	0xc4
 2444 03ac 97000000 		.4byte	0x97
 2445 03b0 02       		.uleb128 0x2
 2446 03b1 91       		.byte	0x91
 2447 03b2 6E       		.sleb128 -18
 2448 03b3 00       		.byte	0
 2449 03b4 00       		.byte	0
 2450 03b5 0D       		.uleb128 0xd
ARM GAS  C:\Users\essele\AppData\Local\Temp\ccnyoXQF.s 			page 54


 2451 03b6 66030000 		.4byte	.LASF45
 2452 03ba 01       		.byte	0x1
 2453 03bb CF       		.byte	0xcf
 2454 03bc 7E000000 		.4byte	0x7e
 2455 03c0 00000000 		.4byte	.LFB40
 2456 03c4 B8000000 		.4byte	.LFE40-.LFB40
 2457 03c8 01       		.uleb128 0x1
 2458 03c9 9C       		.byte	0x9c
 2459 03ca 07040000 		.4byte	0x407
 2460 03ce 13       		.uleb128 0x13
 2461 03cf 64020000 		.4byte	.LASF44
 2462 03d3 01       		.byte	0x1
 2463 03d4 CF       		.byte	0xcf
 2464 03d5 17020000 		.4byte	0x217
 2465 03d9 02       		.uleb128 0x2
 2466 03da 91       		.byte	0x91
 2467 03db 6C       		.sleb128 -20
 2468 03dc 13       		.uleb128 0x13
 2469 03dd 1D020000 		.4byte	.LASF41
 2470 03e1 01       		.byte	0x1
 2471 03e2 CF       		.byte	0xcf
 2472 03e3 7E000000 		.4byte	0x7e
 2473 03e7 02       		.uleb128 0x2
 2474 03e8 91       		.byte	0x91
 2475 03e9 68       		.sleb128 -24
 2476 03ea 0E       		.uleb128 0xe
 2477 03eb 636D6400 		.ascii	"cmd\000"
 2478 03ef 01       		.byte	0x1
 2479 03f0 CF       		.byte	0xcf
 2480 03f1 1D020000 		.4byte	0x21d
 2481 03f5 02       		.uleb128 0x2
 2482 03f6 91       		.byte	0x91
 2483 03f7 64       		.sleb128 -28
 2484 03f8 12       		.uleb128 0x12
 2485 03f9 1E030000 		.4byte	.LASF46
 2486 03fd 01       		.byte	0x1
 2487 03fe D9       		.byte	0xd9
 2488 03ff 7E000000 		.4byte	0x7e
 2489 0403 02       		.uleb128 0x2
 2490 0404 91       		.byte	0x91
 2491 0405 74       		.sleb128 -12
 2492 0406 00       		.byte	0
 2493 0407 0D       		.uleb128 0xd
 2494 0408 B1020000 		.4byte	.LASF47
 2495 040c 01       		.byte	0x1
 2496 040d EB       		.byte	0xeb
 2497 040e 7E000000 		.4byte	0x7e
 2498 0412 00000000 		.4byte	.LFB41
 2499 0416 44000000 		.4byte	.LFE41-.LFB41
 2500 041a 01       		.uleb128 0x1
 2501 041b 9C       		.byte	0x9c
 2502 041c 4B040000 		.4byte	0x44b
 2503 0420 13       		.uleb128 0x13
 2504 0421 64020000 		.4byte	.LASF44
 2505 0425 01       		.byte	0x1
 2506 0426 EB       		.byte	0xeb
 2507 0427 17020000 		.4byte	0x217
ARM GAS  C:\Users\essele\AppData\Local\Temp\ccnyoXQF.s 			page 55


 2508 042b 02       		.uleb128 0x2
 2509 042c 91       		.byte	0x91
 2510 042d 74       		.sleb128 -12
 2511 042e 13       		.uleb128 0x13
 2512 042f 1D020000 		.4byte	.LASF41
 2513 0433 01       		.byte	0x1
 2514 0434 EB       		.byte	0xeb
 2515 0435 7E000000 		.4byte	0x7e
 2516 0439 02       		.uleb128 0x2
 2517 043a 91       		.byte	0x91
 2518 043b 70       		.sleb128 -16
 2519 043c 0E       		.uleb128 0xe
 2520 043d 636D6400 		.ascii	"cmd\000"
 2521 0441 01       		.byte	0x1
 2522 0442 EB       		.byte	0xeb
 2523 0443 1D020000 		.4byte	0x21d
 2524 0447 02       		.uleb128 0x2
 2525 0448 91       		.byte	0x91
 2526 0449 6C       		.sleb128 -20
 2527 044a 00       		.byte	0
 2528 044b 0D       		.uleb128 0xd
 2529 044c 14020000 		.4byte	.LASF48
 2530 0450 01       		.byte	0x1
 2531 0451 F9       		.byte	0xf9
 2532 0452 7E000000 		.4byte	0x7e
 2533 0456 00000000 		.4byte	.LFB42
 2534 045a CC000000 		.4byte	.LFE42-.LFB42
 2535 045e 01       		.uleb128 0x1
 2536 045f 9C       		.byte	0x9c
 2537 0460 B3040000 		.4byte	0x4b3
 2538 0464 13       		.uleb128 0x13
 2539 0465 64020000 		.4byte	.LASF44
 2540 0469 01       		.byte	0x1
 2541 046a F9       		.byte	0xf9
 2542 046b 17020000 		.4byte	0x217
 2543 046f 02       		.uleb128 0x2
 2544 0470 91       		.byte	0x91
 2545 0471 6C       		.sleb128 -20
 2546 0472 13       		.uleb128 0x13
 2547 0473 1D020000 		.4byte	.LASF41
 2548 0477 01       		.byte	0x1
 2549 0478 F9       		.byte	0xf9
 2550 0479 7E000000 		.4byte	0x7e
 2551 047d 02       		.uleb128 0x2
 2552 047e 91       		.byte	0x91
 2553 047f 68       		.sleb128 -24
 2554 0480 0E       		.uleb128 0xe
 2555 0481 636D6400 		.ascii	"cmd\000"
 2556 0485 01       		.byte	0x1
 2557 0486 F9       		.byte	0xf9
 2558 0487 1D020000 		.4byte	0x21d
 2559 048b 02       		.uleb128 0x2
 2560 048c 91       		.byte	0x91
 2561 048d 64       		.sleb128 -28
 2562 048e 16       		.uleb128 0x16
 2563 048f 6900     		.ascii	"i\000"
 2564 0491 01       		.byte	0x1
ARM GAS  C:\Users\essele\AppData\Local\Temp\ccnyoXQF.s 			page 56


 2565 0492 0901     		.2byte	0x109
 2566 0494 7E000000 		.4byte	0x7e
 2567 0498 02       		.uleb128 0x2
 2568 0499 91       		.byte	0x91
 2569 049a 70       		.sleb128 -16
 2570 049b 15       		.uleb128 0x15
 2571 049c 28000000 		.4byte	.LBB4
 2572 04a0 38000000 		.4byte	.LBE4-.LBB4
 2573 04a4 16       		.uleb128 0x16
 2574 04a5 6900     		.ascii	"i\000"
 2575 04a7 01       		.byte	0x1
 2576 04a8 0101     		.2byte	0x101
 2577 04aa 7E000000 		.4byte	0x7e
 2578 04ae 02       		.uleb128 0x2
 2579 04af 91       		.byte	0x91
 2580 04b0 74       		.sleb128 -12
 2581 04b1 00       		.byte	0
 2582 04b2 00       		.byte	0
 2583 04b3 17       		.uleb128 0x17
 2584 04b4 3D000000 		.4byte	.LASF49
 2585 04b8 01       		.byte	0x1
 2586 04b9 1801     		.2byte	0x118
 2587 04bb 7E000000 		.4byte	0x7e
 2588 04bf 00000000 		.4byte	.LFB43
 2589 04c3 00010000 		.4byte	.LFE43-.LFB43
 2590 04c7 01       		.uleb128 0x1
 2591 04c8 9C       		.byte	0x9c
 2592 04c9 4F050000 		.4byte	0x54f
 2593 04cd 18       		.uleb128 0x18
 2594 04ce 64020000 		.4byte	.LASF44
 2595 04d2 01       		.byte	0x1
 2596 04d3 1801     		.2byte	0x118
 2597 04d5 17020000 		.4byte	0x217
 2598 04d9 02       		.uleb128 0x2
 2599 04da 91       		.byte	0x91
 2600 04db 5C       		.sleb128 -36
 2601 04dc 18       		.uleb128 0x18
 2602 04dd 1D020000 		.4byte	.LASF41
 2603 04e1 01       		.byte	0x1
 2604 04e2 1801     		.2byte	0x118
 2605 04e4 7E000000 		.4byte	0x7e
 2606 04e8 02       		.uleb128 0x2
 2607 04e9 91       		.byte	0x91
 2608 04ea 58       		.sleb128 -40
 2609 04eb 19       		.uleb128 0x19
 2610 04ec 636D6400 		.ascii	"cmd\000"
 2611 04f0 01       		.byte	0x1
 2612 04f1 1801     		.2byte	0x118
 2613 04f3 1D020000 		.4byte	0x21d
 2614 04f7 02       		.uleb128 0x2
 2615 04f8 91       		.byte	0x91
 2616 04f9 54       		.sleb128 -44
 2617 04fa 1A       		.uleb128 0x1a
 2618 04fb 4F000000 		.4byte	.LASF50
 2619 04ff 01       		.byte	0x1
 2620 0500 1901     		.2byte	0x119
 2621 0502 7E000000 		.4byte	0x7e
ARM GAS  C:\Users\essele\AppData\Local\Temp\ccnyoXQF.s 			page 57


 2622 0506 02       		.uleb128 0x2
 2623 0507 91       		.byte	0x91
 2624 0508 74       		.sleb128 -12
 2625 0509 16       		.uleb128 0x16
 2626 050a 62756600 		.ascii	"buf\000"
 2627 050e 01       		.byte	0x1
 2628 050f 1A01     		.2byte	0x11a
 2629 0511 9B020000 		.4byte	0x29b
 2630 0515 02       		.uleb128 0x2
 2631 0516 91       		.byte	0x91
 2632 0517 70       		.sleb128 -16
 2633 0518 16       		.uleb128 0x16
 2634 0519 6C656E00 		.ascii	"len\000"
 2635 051d 01       		.byte	0x1
 2636 051e 1B01     		.2byte	0x11b
 2637 0520 7E000000 		.4byte	0x7e
 2638 0524 02       		.uleb128 0x2
 2639 0525 91       		.byte	0x91
 2640 0526 68       		.sleb128 -24
 2641 0527 1A       		.uleb128 0x1a
 2642 0528 DF020000 		.4byte	.LASF51
 2643 052c 01       		.byte	0x1
 2644 052d 1C01     		.2byte	0x11c
 2645 052f 7E000000 		.4byte	0x7e
 2646 0533 02       		.uleb128 0x2
 2647 0534 91       		.byte	0x91
 2648 0535 64       		.sleb128 -28
 2649 0536 15       		.uleb128 0x15
 2650 0537 72000000 		.4byte	.LBB5
 2651 053b 30000000 		.4byte	.LBE5-.LBB5
 2652 053f 16       		.uleb128 0x16
 2653 0540 636800   		.ascii	"ch\000"
 2654 0543 01       		.byte	0x1
 2655 0544 2901     		.2byte	0x129
 2656 0546 7E000000 		.4byte	0x7e
 2657 054a 02       		.uleb128 0x2
 2658 054b 91       		.byte	0x91
 2659 054c 6C       		.sleb128 -20
 2660 054d 00       		.byte	0
 2661 054e 00       		.byte	0
 2662 054f 17       		.uleb128 0x17
 2663 0550 C7020000 		.4byte	.LASF52
 2664 0554 01       		.byte	0x1
 2665 0555 4101     		.2byte	0x141
 2666 0557 7E000000 		.4byte	0x7e
 2667 055b 00000000 		.4byte	.LFB44
 2668 055f F0000000 		.4byte	.LFE44-.LFB44
 2669 0563 01       		.uleb128 0x1
 2670 0564 9C       		.byte	0x9c
 2671 0565 E3050000 		.4byte	0x5e3
 2672 0569 18       		.uleb128 0x18
 2673 056a 64020000 		.4byte	.LASF44
 2674 056e 01       		.byte	0x1
 2675 056f 4101     		.2byte	0x141
 2676 0571 17020000 		.4byte	0x217
 2677 0575 02       		.uleb128 0x2
 2678 0576 91       		.byte	0x91
ARM GAS  C:\Users\essele\AppData\Local\Temp\ccnyoXQF.s 			page 58


 2679 0577 64       		.sleb128 -28
 2680 0578 18       		.uleb128 0x18
 2681 0579 1D020000 		.4byte	.LASF41
 2682 057d 01       		.byte	0x1
 2683 057e 4101     		.2byte	0x141
 2684 0580 7E000000 		.4byte	0x7e
 2685 0584 02       		.uleb128 0x2
 2686 0585 91       		.byte	0x91
 2687 0586 60       		.sleb128 -32
 2688 0587 19       		.uleb128 0x19
 2689 0588 636D6400 		.ascii	"cmd\000"
 2690 058c 01       		.byte	0x1
 2691 058d 4101     		.2byte	0x141
 2692 058f 1D020000 		.4byte	0x21d
 2693 0593 02       		.uleb128 0x2
 2694 0594 91       		.byte	0x91
 2695 0595 5C       		.sleb128 -36
 2696 0596 16       		.uleb128 0x16
 2697 0597 6900     		.ascii	"i\000"
 2698 0599 01       		.byte	0x1
 2699 059a 4701     		.2byte	0x147
 2700 059c 7E000000 		.4byte	0x7e
 2701 05a0 02       		.uleb128 0x2
 2702 05a1 91       		.byte	0x91
 2703 05a2 74       		.sleb128 -12
 2704 05a3 15       		.uleb128 0x15
 2705 05a4 38000000 		.4byte	.LBB6
 2706 05a8 8C000000 		.4byte	.LBE6-.LBB6
 2707 05ac 1A       		.uleb128 0x1a
 2708 05ad A1000000 		.4byte	.LASF29
 2709 05b1 01       		.byte	0x1
 2710 05b2 4A01     		.2byte	0x14a
 2711 05b4 97000000 		.4byte	0x97
 2712 05b8 02       		.uleb128 0x2
 2713 05b9 91       		.byte	0x91
 2714 05ba 6A       		.sleb128 -22
 2715 05bb 1A       		.uleb128 0x1a
 2716 05bc 2B000000 		.4byte	.LASF30
 2717 05c0 01       		.byte	0x1
 2718 05c1 4B01     		.2byte	0x14b
 2719 05c3 D0000000 		.4byte	0xd0
 2720 05c7 02       		.uleb128 0x2
 2721 05c8 91       		.byte	0x91
 2722 05c9 70       		.sleb128 -16
 2723 05ca 15       		.uleb128 0x15
 2724 05cb 60000000 		.4byte	.LBB7
 2725 05cf 34000000 		.4byte	.LBE7-.LBB7
 2726 05d3 16       		.uleb128 0x16
 2727 05d4 6D00     		.ascii	"m\000"
 2728 05d6 01       		.byte	0x1
 2729 05d7 4E01     		.2byte	0x14e
 2730 05d9 34020000 		.4byte	0x234
 2731 05dd 02       		.uleb128 0x2
 2732 05de 91       		.byte	0x91
 2733 05df 6C       		.sleb128 -20
 2734 05e0 00       		.byte	0
 2735 05e1 00       		.byte	0
ARM GAS  C:\Users\essele\AppData\Local\Temp\ccnyoXQF.s 			page 59


 2736 05e2 00       		.byte	0
 2737 05e3 1B       		.uleb128 0x1b
 2738 05e4 69020000 		.4byte	.LASF54
 2739 05e8 01       		.byte	0x1
 2740 05e9 6301     		.2byte	0x163
 2741 05eb 7E000000 		.4byte	0x7e
 2742 05ef 00000000 		.4byte	.LFB45
 2743 05f3 1C000000 		.4byte	.LFE45-.LFB45
 2744 05f7 01       		.uleb128 0x1
 2745 05f8 9C       		.byte	0x9c
 2746 05f9 1C       		.uleb128 0x1c
 2747 05fa 57030000 		.4byte	.LASF53
 2748 05fe 01       		.byte	0x1
 2749 05ff 6901     		.2byte	0x169
 2750 0601 7E000000 		.4byte	0x7e
 2751 0605 00000000 		.4byte	.LFB46
 2752 0609 2C000000 		.4byte	.LFE46-.LFB46
 2753 060d 01       		.uleb128 0x1
 2754 060e 9C       		.byte	0x9c
 2755 060f 21060000 		.4byte	0x621
 2756 0613 16       		.uleb128 0x16
 2757 0614 7600     		.ascii	"v\000"
 2758 0616 01       		.byte	0x1
 2759 0617 6A01     		.2byte	0x16a
 2760 0619 97000000 		.4byte	0x97
 2761 061d 02       		.uleb128 0x2
 2762 061e 91       		.byte	0x91
 2763 061f 6E       		.sleb128 -18
 2764 0620 00       		.byte	0
 2765 0621 1B       		.uleb128 0x1b
 2766 0622 EF020000 		.4byte	.LASF55
 2767 0626 01       		.byte	0x1
 2768 0627 7201     		.2byte	0x172
 2769 0629 7E000000 		.4byte	0x7e
 2770 062d 00000000 		.4byte	.LFB47
 2771 0631 10000000 		.4byte	.LFE47-.LFB47
 2772 0635 01       		.uleb128 0x1
 2773 0636 9C       		.byte	0x9c
 2774 0637 1B       		.uleb128 0x1b
 2775 0638 08000000 		.4byte	.LASF56
 2776 063c 01       		.byte	0x1
 2777 063d 7601     		.2byte	0x176
 2778 063f 7E000000 		.4byte	0x7e
 2779 0643 00000000 		.4byte	.LFB48
 2780 0647 10000000 		.4byte	.LFE48-.LFB48
 2781 064b 01       		.uleb128 0x1
 2782 064c 9C       		.byte	0x9c
 2783 064d 1B       		.uleb128 0x1b
 2784 064e BC020000 		.4byte	.LASF57
 2785 0652 01       		.byte	0x1
 2786 0653 7A01     		.2byte	0x17a
 2787 0655 7E000000 		.4byte	0x7e
 2788 0659 00000000 		.4byte	.LFB49
 2789 065d 10000000 		.4byte	.LFE49-.LFB49
 2790 0661 01       		.uleb128 0x1
 2791 0662 9C       		.byte	0x9c
 2792 0663 1B       		.uleb128 0x1b
ARM GAS  C:\Users\essele\AppData\Local\Temp\ccnyoXQF.s 			page 60


 2793 0664 F4010000 		.4byte	.LASF58
 2794 0668 01       		.byte	0x1
 2795 0669 7E01     		.2byte	0x17e
 2796 066b 7E000000 		.4byte	0x7e
 2797 066f 00000000 		.4byte	.LFB50
 2798 0673 10000000 		.4byte	.LFE50-.LFB50
 2799 0677 01       		.uleb128 0x1
 2800 0678 9C       		.byte	0x9c
 2801 0679 1D       		.uleb128 0x1d
 2802 067a D6000000 		.4byte	.LASF27
 2803 067e 04       		.byte	0x4
 2804 067f 1A       		.byte	0x1a
 2805 0680 E1000000 		.4byte	0xe1
 2806 0684 1E       		.uleb128 0x1e
 2807 0685 D0000000 		.4byte	0xd0
 2808 0689 94060000 		.4byte	0x694
 2809 068d 1F       		.uleb128 0x1f
 2810 068e C9000000 		.4byte	0xc9
 2811 0692 13       		.byte	0x13
 2812 0693 00       		.byte	0
 2813 0694 20       		.uleb128 0x20
 2814 0695 4E010000 		.4byte	.LASF59
 2815 0699 01       		.byte	0x1
 2816 069a 18       		.byte	0x18
 2817 069b 84060000 		.4byte	0x684
 2818 069f 05       		.uleb128 0x5
 2819 06a0 03       		.byte	0x3
 2820 06a1 00000000 		.4byte	toks
 2821 06a5 20       		.uleb128 0x20
 2822 06a6 33000000 		.4byte	.LASF60
 2823 06aa 01       		.byte	0x1
 2824 06ab 19       		.byte	0x19
 2825 06ac 7E000000 		.4byte	0x7e
 2826 06b0 05       		.uleb128 0x5
 2827 06b1 03       		.byte	0x3
 2828 06b2 00000000 		.4byte	tok_count
 2829 06b6 1E       		.uleb128 0x1e
 2830 06b7 23020000 		.4byte	0x223
 2831 06bb C6060000 		.4byte	0x6c6
 2832 06bf 1F       		.uleb128 0x1f
 2833 06c0 C9000000 		.4byte	0xc9
 2834 06c4 10       		.byte	0x10
 2835 06c5 00       		.byte	0
 2836 06c6 21       		.uleb128 0x21
 2837 06c7 BB000000 		.4byte	.LASF61
 2838 06cb 01       		.byte	0x1
 2839 06cc B201     		.2byte	0x1b2
 2840 06ce D8060000 		.4byte	0x6d8
 2841 06d2 05       		.uleb128 0x5
 2842 06d3 03       		.byte	0x3
 2843 06d4 00000000 		.4byte	commands
 2844 06d8 06       		.uleb128 0x6
 2845 06d9 B6060000 		.4byte	0x6b6
 2846 06dd 1E       		.uleb128 0x1e
 2847 06de D6000000 		.4byte	0xd6
 2848 06e2 ED060000 		.4byte	0x6ed
 2849 06e6 1F       		.uleb128 0x1f
ARM GAS  C:\Users\essele\AppData\Local\Temp\ccnyoXQF.s 			page 61


 2850 06e7 C9000000 		.4byte	0xc9
 2851 06eb 01       		.byte	0x1
 2852 06ec 00       		.byte	0
 2853 06ed 21       		.uleb128 0x21
 2854 06ee 6F030000 		.4byte	.LASF62
 2855 06f2 01       		.byte	0x1
 2856 06f3 9001     		.2byte	0x190
 2857 06f5 DD060000 		.4byte	0x6dd
 2858 06f9 05       		.uleb128 0x5
 2859 06fa 03       		.byte	0x3
 2860 06fb 00000000 		.4byte	no_usage_args
 2861 06ff 1E       		.uleb128 0x1e
 2862 0700 3A020000 		.4byte	0x23a
 2863 0704 0F070000 		.4byte	0x70f
 2864 0708 1F       		.uleb128 0x1f
 2865 0709 C9000000 		.4byte	0xc9
 2866 070d 03       		.byte	0x3
 2867 070e 00       		.byte	0
 2868 070f 21       		.uleb128 0x21
 2869 0710 23030000 		.4byte	.LASF63
 2870 0714 01       		.byte	0x1
 2871 0715 9601     		.2byte	0x196
 2872 0717 21070000 		.4byte	0x721
 2873 071b 05       		.uleb128 0x5
 2874 071c 03       		.byte	0x3
 2875 071d 00000000 		.4byte	auto_means
 2876 0721 06       		.uleb128 0x6
 2877 0722 FF060000 		.4byte	0x6ff
 2878 0726 1E       		.uleb128 0x1e
 2879 0727 3A020000 		.4byte	0x23a
 2880 072b 36070000 		.4byte	0x736
 2881 072f 1F       		.uleb128 0x1f
 2882 0730 C9000000 		.4byte	0xc9
 2883 0734 02       		.byte	0x2
 2884 0735 00       		.byte	0
 2885 0736 21       		.uleb128 0x21
 2886 0737 11010000 		.4byte	.LASF64
 2887 073b 01       		.byte	0x1
 2888 073c 9D01     		.2byte	0x19d
 2889 073e 48070000 		.4byte	0x748
 2890 0742 05       		.uleb128 0x5
 2891 0743 03       		.byte	0x3
 2892 0744 00000000 		.4byte	enable_disable_means
 2893 0748 06       		.uleb128 0x6
 2894 0749 26070000 		.4byte	0x726
 2895 074d 1E       		.uleb128 0x1e
 2896 074e 3A020000 		.4byte	0x23a
 2897 0752 5D070000 		.4byte	0x75d
 2898 0756 1F       		.uleb128 0x1f
 2899 0757 C9000000 		.4byte	0xc9
 2900 075b 04       		.byte	0x4
 2901 075c 00       		.byte	0
 2902 075d 21       		.uleb128 0x21
 2903 075e 96020000 		.4byte	.LASF65
 2904 0762 01       		.byte	0x1
 2905 0763 A301     		.2byte	0x1a3
 2906 0765 6F070000 		.4byte	0x76f
ARM GAS  C:\Users\essele\AppData\Local\Temp\ccnyoXQF.s 			page 62


 2907 0769 05       		.uleb128 0x5
 2908 076a 03       		.byte	0x3
 2909 076b 00000000 		.4byte	eos_means
 2910 076f 06       		.uleb128 0x6
 2911 0770 4D070000 		.4byte	0x74d
 2912 0774 21       		.uleb128 0x21
 2913 0775 42030000 		.4byte	.LASF66
 2914 0779 01       		.byte	0x1
 2915 077a AC01     		.2byte	0x1ac
 2916 077c DD060000 		.4byte	0x6dd
 2917 0780 05       		.uleb128 0x5
 2918 0781 03       		.byte	0x3
 2919 0782 00000000 		.4byte	enable_disable_usage
 2920 0786 00       		.byte	0
 2921              		.section	.debug_abbrev,"",%progbits
 2922              	.Ldebug_abbrev0:
 2923 0000 01       		.uleb128 0x1
 2924 0001 11       		.uleb128 0x11
 2925 0002 01       		.byte	0x1
 2926 0003 25       		.uleb128 0x25
 2927 0004 0E       		.uleb128 0xe
 2928 0005 13       		.uleb128 0x13
 2929 0006 0B       		.uleb128 0xb
 2930 0007 03       		.uleb128 0x3
 2931 0008 0E       		.uleb128 0xe
 2932 0009 1B       		.uleb128 0x1b
 2933 000a 0E       		.uleb128 0xe
 2934 000b 55       		.uleb128 0x55
 2935 000c 17       		.uleb128 0x17
 2936 000d 11       		.uleb128 0x11
 2937 000e 01       		.uleb128 0x1
 2938 000f 10       		.uleb128 0x10
 2939 0010 17       		.uleb128 0x17
 2940 0011 00       		.byte	0
 2941 0012 00       		.byte	0
 2942 0013 02       		.uleb128 0x2
 2943 0014 24       		.uleb128 0x24
 2944 0015 00       		.byte	0
 2945 0016 0B       		.uleb128 0xb
 2946 0017 0B       		.uleb128 0xb
 2947 0018 3E       		.uleb128 0x3e
 2948 0019 0B       		.uleb128 0xb
 2949 001a 03       		.uleb128 0x3
 2950 001b 0E       		.uleb128 0xe
 2951 001c 00       		.byte	0
 2952 001d 00       		.byte	0
 2953 001e 03       		.uleb128 0x3
 2954 001f 16       		.uleb128 0x16
 2955 0020 00       		.byte	0
 2956 0021 03       		.uleb128 0x3
 2957 0022 0E       		.uleb128 0xe
 2958 0023 3A       		.uleb128 0x3a
 2959 0024 0B       		.uleb128 0xb
 2960 0025 3B       		.uleb128 0x3b
 2961 0026 0B       		.uleb128 0xb
 2962 0027 49       		.uleb128 0x49
 2963 0028 13       		.uleb128 0x13
ARM GAS  C:\Users\essele\AppData\Local\Temp\ccnyoXQF.s 			page 63


 2964 0029 00       		.byte	0
 2965 002a 00       		.byte	0
 2966 002b 04       		.uleb128 0x4
 2967 002c 24       		.uleb128 0x24
 2968 002d 00       		.byte	0
 2969 002e 0B       		.uleb128 0xb
 2970 002f 0B       		.uleb128 0xb
 2971 0030 3E       		.uleb128 0x3e
 2972 0031 0B       		.uleb128 0xb
 2973 0032 03       		.uleb128 0x3
 2974 0033 08       		.uleb128 0x8
 2975 0034 00       		.byte	0
 2976 0035 00       		.byte	0
 2977 0036 05       		.uleb128 0x5
 2978 0037 0F       		.uleb128 0xf
 2979 0038 00       		.byte	0
 2980 0039 0B       		.uleb128 0xb
 2981 003a 0B       		.uleb128 0xb
 2982 003b 49       		.uleb128 0x49
 2983 003c 13       		.uleb128 0x13
 2984 003d 00       		.byte	0
 2985 003e 00       		.byte	0
 2986 003f 06       		.uleb128 0x6
 2987 0040 26       		.uleb128 0x26
 2988 0041 00       		.byte	0
 2989 0042 49       		.uleb128 0x49
 2990 0043 13       		.uleb128 0x13
 2991 0044 00       		.byte	0
 2992 0045 00       		.byte	0
 2993 0046 07       		.uleb128 0x7
 2994 0047 13       		.uleb128 0x13
 2995 0048 01       		.byte	0x1
 2996 0049 03       		.uleb128 0x3
 2997 004a 0E       		.uleb128 0xe
 2998 004b 0B       		.uleb128 0xb
 2999 004c 0B       		.uleb128 0xb
 3000 004d 3A       		.uleb128 0x3a
 3001 004e 0B       		.uleb128 0xb
 3002 004f 3B       		.uleb128 0x3b
 3003 0050 0B       		.uleb128 0xb
 3004 0051 01       		.uleb128 0x1
 3005 0052 13       		.uleb128 0x13
 3006 0053 00       		.byte	0
 3007 0054 00       		.byte	0
 3008 0055 08       		.uleb128 0x8
 3009 0056 0D       		.uleb128 0xd
 3010 0057 00       		.byte	0
 3011 0058 03       		.uleb128 0x3
 3012 0059 0E       		.uleb128 0xe
 3013 005a 3A       		.uleb128 0x3a
 3014 005b 0B       		.uleb128 0xb
 3015 005c 3B       		.uleb128 0x3b
 3016 005d 0B       		.uleb128 0xb
 3017 005e 49       		.uleb128 0x49
 3018 005f 13       		.uleb128 0x13
 3019 0060 38       		.uleb128 0x38
 3020 0061 0B       		.uleb128 0xb
ARM GAS  C:\Users\essele\AppData\Local\Temp\ccnyoXQF.s 			page 64


 3021 0062 00       		.byte	0
 3022 0063 00       		.byte	0
 3023 0064 09       		.uleb128 0x9
 3024 0065 0D       		.uleb128 0xd
 3025 0066 00       		.byte	0
 3026 0067 03       		.uleb128 0x3
 3027 0068 08       		.uleb128 0x8
 3028 0069 3A       		.uleb128 0x3a
 3029 006a 0B       		.uleb128 0xb
 3030 006b 3B       		.uleb128 0x3b
 3031 006c 0B       		.uleb128 0xb
 3032 006d 49       		.uleb128 0x49
 3033 006e 13       		.uleb128 0x13
 3034 006f 38       		.uleb128 0x38
 3035 0070 0B       		.uleb128 0xb
 3036 0071 00       		.byte	0
 3037 0072 00       		.byte	0
 3038 0073 0A       		.uleb128 0xa
 3039 0074 13       		.uleb128 0x13
 3040 0075 01       		.byte	0x1
 3041 0076 03       		.uleb128 0x3
 3042 0077 08       		.uleb128 0x8
 3043 0078 0B       		.uleb128 0xb
 3044 0079 0B       		.uleb128 0xb
 3045 007a 3A       		.uleb128 0x3a
 3046 007b 0B       		.uleb128 0xb
 3047 007c 3B       		.uleb128 0x3b
 3048 007d 0B       		.uleb128 0xb
 3049 007e 01       		.uleb128 0x1
 3050 007f 13       		.uleb128 0x13
 3051 0080 00       		.byte	0
 3052 0081 00       		.byte	0
 3053 0082 0B       		.uleb128 0xb
 3054 0083 15       		.uleb128 0x15
 3055 0084 01       		.byte	0x1
 3056 0085 27       		.uleb128 0x27
 3057 0086 19       		.uleb128 0x19
 3058 0087 49       		.uleb128 0x49
 3059 0088 13       		.uleb128 0x13
 3060 0089 01       		.uleb128 0x1
 3061 008a 13       		.uleb128 0x13
 3062 008b 00       		.byte	0
 3063 008c 00       		.byte	0
 3064 008d 0C       		.uleb128 0xc
 3065 008e 05       		.uleb128 0x5
 3066 008f 00       		.byte	0
 3067 0090 49       		.uleb128 0x49
 3068 0091 13       		.uleb128 0x13
 3069 0092 00       		.byte	0
 3070 0093 00       		.byte	0
 3071 0094 0D       		.uleb128 0xd
 3072 0095 2E       		.uleb128 0x2e
 3073 0096 01       		.byte	0x1
 3074 0097 3F       		.uleb128 0x3f
 3075 0098 19       		.uleb128 0x19
 3076 0099 03       		.uleb128 0x3
 3077 009a 0E       		.uleb128 0xe
ARM GAS  C:\Users\essele\AppData\Local\Temp\ccnyoXQF.s 			page 65


 3078 009b 3A       		.uleb128 0x3a
 3079 009c 0B       		.uleb128 0xb
 3080 009d 3B       		.uleb128 0x3b
 3081 009e 0B       		.uleb128 0xb
 3082 009f 27       		.uleb128 0x27
 3083 00a0 19       		.uleb128 0x19
 3084 00a1 49       		.uleb128 0x49
 3085 00a2 13       		.uleb128 0x13
 3086 00a3 11       		.uleb128 0x11
 3087 00a4 01       		.uleb128 0x1
 3088 00a5 12       		.uleb128 0x12
 3089 00a6 06       		.uleb128 0x6
 3090 00a7 40       		.uleb128 0x40
 3091 00a8 18       		.uleb128 0x18
 3092 00a9 9642     		.uleb128 0x2116
 3093 00ab 19       		.uleb128 0x19
 3094 00ac 01       		.uleb128 0x1
 3095 00ad 13       		.uleb128 0x13
 3096 00ae 00       		.byte	0
 3097 00af 00       		.byte	0
 3098 00b0 0E       		.uleb128 0xe
 3099 00b1 05       		.uleb128 0x5
 3100 00b2 00       		.byte	0
 3101 00b3 03       		.uleb128 0x3
 3102 00b4 08       		.uleb128 0x8
 3103 00b5 3A       		.uleb128 0x3a
 3104 00b6 0B       		.uleb128 0xb
 3105 00b7 3B       		.uleb128 0x3b
 3106 00b8 0B       		.uleb128 0xb
 3107 00b9 49       		.uleb128 0x49
 3108 00ba 13       		.uleb128 0x13
 3109 00bb 02       		.uleb128 0x2
 3110 00bc 18       		.uleb128 0x18
 3111 00bd 00       		.byte	0
 3112 00be 00       		.byte	0
 3113 00bf 0F       		.uleb128 0xf
 3114 00c0 34       		.uleb128 0x34
 3115 00c1 00       		.byte	0
 3116 00c2 03       		.uleb128 0x3
 3117 00c3 08       		.uleb128 0x8
 3118 00c4 3A       		.uleb128 0x3a
 3119 00c5 0B       		.uleb128 0xb
 3120 00c6 3B       		.uleb128 0x3b
 3121 00c7 0B       		.uleb128 0xb
 3122 00c8 49       		.uleb128 0x49
 3123 00c9 13       		.uleb128 0x13
 3124 00ca 02       		.uleb128 0x2
 3125 00cb 18       		.uleb128 0x18
 3126 00cc 00       		.byte	0
 3127 00cd 00       		.byte	0
 3128 00ce 10       		.uleb128 0x10
 3129 00cf 2E       		.uleb128 0x2e
 3130 00d0 01       		.byte	0x1
 3131 00d1 3F       		.uleb128 0x3f
 3132 00d2 19       		.uleb128 0x19
 3133 00d3 03       		.uleb128 0x3
 3134 00d4 0E       		.uleb128 0xe
ARM GAS  C:\Users\essele\AppData\Local\Temp\ccnyoXQF.s 			page 66


 3135 00d5 3A       		.uleb128 0x3a
 3136 00d6 0B       		.uleb128 0xb
 3137 00d7 3B       		.uleb128 0x3b
 3138 00d8 0B       		.uleb128 0xb
 3139 00d9 27       		.uleb128 0x27
 3140 00da 19       		.uleb128 0x19
 3141 00db 49       		.uleb128 0x49
 3142 00dc 13       		.uleb128 0x13
 3143 00dd 11       		.uleb128 0x11
 3144 00de 01       		.uleb128 0x1
 3145 00df 12       		.uleb128 0x12
 3146 00e0 06       		.uleb128 0x6
 3147 00e1 40       		.uleb128 0x40
 3148 00e2 18       		.uleb128 0x18
 3149 00e3 9742     		.uleb128 0x2117
 3150 00e5 19       		.uleb128 0x19
 3151 00e6 01       		.uleb128 0x1
 3152 00e7 13       		.uleb128 0x13
 3153 00e8 00       		.byte	0
 3154 00e9 00       		.byte	0
 3155 00ea 11       		.uleb128 0x11
 3156 00eb 2E       		.uleb128 0x2e
 3157 00ec 01       		.byte	0x1
 3158 00ed 3F       		.uleb128 0x3f
 3159 00ee 19       		.uleb128 0x19
 3160 00ef 03       		.uleb128 0x3
 3161 00f0 0E       		.uleb128 0xe
 3162 00f1 3A       		.uleb128 0x3a
 3163 00f2 0B       		.uleb128 0xb
 3164 00f3 3B       		.uleb128 0x3b
 3165 00f4 0B       		.uleb128 0xb
 3166 00f5 27       		.uleb128 0x27
 3167 00f6 19       		.uleb128 0x19
 3168 00f7 11       		.uleb128 0x11
 3169 00f8 01       		.uleb128 0x1
 3170 00f9 12       		.uleb128 0x12
 3171 00fa 06       		.uleb128 0x6
 3172 00fb 40       		.uleb128 0x40
 3173 00fc 18       		.uleb128 0x18
 3174 00fd 9642     		.uleb128 0x2116
 3175 00ff 19       		.uleb128 0x19
 3176 0100 01       		.uleb128 0x1
 3177 0101 13       		.uleb128 0x13
 3178 0102 00       		.byte	0
 3179 0103 00       		.byte	0
 3180 0104 12       		.uleb128 0x12
 3181 0105 34       		.uleb128 0x34
 3182 0106 00       		.byte	0
 3183 0107 03       		.uleb128 0x3
 3184 0108 0E       		.uleb128 0xe
 3185 0109 3A       		.uleb128 0x3a
 3186 010a 0B       		.uleb128 0xb
 3187 010b 3B       		.uleb128 0x3b
 3188 010c 0B       		.uleb128 0xb
 3189 010d 49       		.uleb128 0x49
 3190 010e 13       		.uleb128 0x13
 3191 010f 02       		.uleb128 0x2
ARM GAS  C:\Users\essele\AppData\Local\Temp\ccnyoXQF.s 			page 67


 3192 0110 18       		.uleb128 0x18
 3193 0111 00       		.byte	0
 3194 0112 00       		.byte	0
 3195 0113 13       		.uleb128 0x13
 3196 0114 05       		.uleb128 0x5
 3197 0115 00       		.byte	0
 3198 0116 03       		.uleb128 0x3
 3199 0117 0E       		.uleb128 0xe
 3200 0118 3A       		.uleb128 0x3a
 3201 0119 0B       		.uleb128 0xb
 3202 011a 3B       		.uleb128 0x3b
 3203 011b 0B       		.uleb128 0xb
 3204 011c 49       		.uleb128 0x49
 3205 011d 13       		.uleb128 0x13
 3206 011e 02       		.uleb128 0x2
 3207 011f 18       		.uleb128 0x18
 3208 0120 00       		.byte	0
 3209 0121 00       		.byte	0
 3210 0122 14       		.uleb128 0x14
 3211 0123 0B       		.uleb128 0xb
 3212 0124 01       		.byte	0x1
 3213 0125 11       		.uleb128 0x11
 3214 0126 01       		.uleb128 0x1
 3215 0127 12       		.uleb128 0x12
 3216 0128 06       		.uleb128 0x6
 3217 0129 01       		.uleb128 0x1
 3218 012a 13       		.uleb128 0x13
 3219 012b 00       		.byte	0
 3220 012c 00       		.byte	0
 3221 012d 15       		.uleb128 0x15
 3222 012e 0B       		.uleb128 0xb
 3223 012f 01       		.byte	0x1
 3224 0130 11       		.uleb128 0x11
 3225 0131 01       		.uleb128 0x1
 3226 0132 12       		.uleb128 0x12
 3227 0133 06       		.uleb128 0x6
 3228 0134 00       		.byte	0
 3229 0135 00       		.byte	0
 3230 0136 16       		.uleb128 0x16
 3231 0137 34       		.uleb128 0x34
 3232 0138 00       		.byte	0
 3233 0139 03       		.uleb128 0x3
 3234 013a 08       		.uleb128 0x8
 3235 013b 3A       		.uleb128 0x3a
 3236 013c 0B       		.uleb128 0xb
 3237 013d 3B       		.uleb128 0x3b
 3238 013e 05       		.uleb128 0x5
 3239 013f 49       		.uleb128 0x49
 3240 0140 13       		.uleb128 0x13
 3241 0141 02       		.uleb128 0x2
 3242 0142 18       		.uleb128 0x18
 3243 0143 00       		.byte	0
 3244 0144 00       		.byte	0
 3245 0145 17       		.uleb128 0x17
 3246 0146 2E       		.uleb128 0x2e
 3247 0147 01       		.byte	0x1
 3248 0148 3F       		.uleb128 0x3f
ARM GAS  C:\Users\essele\AppData\Local\Temp\ccnyoXQF.s 			page 68


 3249 0149 19       		.uleb128 0x19
 3250 014a 03       		.uleb128 0x3
 3251 014b 0E       		.uleb128 0xe
 3252 014c 3A       		.uleb128 0x3a
 3253 014d 0B       		.uleb128 0xb
 3254 014e 3B       		.uleb128 0x3b
 3255 014f 05       		.uleb128 0x5
 3256 0150 27       		.uleb128 0x27
 3257 0151 19       		.uleb128 0x19
 3258 0152 49       		.uleb128 0x49
 3259 0153 13       		.uleb128 0x13
 3260 0154 11       		.uleb128 0x11
 3261 0155 01       		.uleb128 0x1
 3262 0156 12       		.uleb128 0x12
 3263 0157 06       		.uleb128 0x6
 3264 0158 40       		.uleb128 0x40
 3265 0159 18       		.uleb128 0x18
 3266 015a 9642     		.uleb128 0x2116
 3267 015c 19       		.uleb128 0x19
 3268 015d 01       		.uleb128 0x1
 3269 015e 13       		.uleb128 0x13
 3270 015f 00       		.byte	0
 3271 0160 00       		.byte	0
 3272 0161 18       		.uleb128 0x18
 3273 0162 05       		.uleb128 0x5
 3274 0163 00       		.byte	0
 3275 0164 03       		.uleb128 0x3
 3276 0165 0E       		.uleb128 0xe
 3277 0166 3A       		.uleb128 0x3a
 3278 0167 0B       		.uleb128 0xb
 3279 0168 3B       		.uleb128 0x3b
 3280 0169 05       		.uleb128 0x5
 3281 016a 49       		.uleb128 0x49
 3282 016b 13       		.uleb128 0x13
 3283 016c 02       		.uleb128 0x2
 3284 016d 18       		.uleb128 0x18
 3285 016e 00       		.byte	0
 3286 016f 00       		.byte	0
 3287 0170 19       		.uleb128 0x19
 3288 0171 05       		.uleb128 0x5
 3289 0172 00       		.byte	0
 3290 0173 03       		.uleb128 0x3
 3291 0174 08       		.uleb128 0x8
 3292 0175 3A       		.uleb128 0x3a
 3293 0176 0B       		.uleb128 0xb
 3294 0177 3B       		.uleb128 0x3b
 3295 0178 05       		.uleb128 0x5
 3296 0179 49       		.uleb128 0x49
 3297 017a 13       		.uleb128 0x13
 3298 017b 02       		.uleb128 0x2
 3299 017c 18       		.uleb128 0x18
 3300 017d 00       		.byte	0
 3301 017e 00       		.byte	0
 3302 017f 1A       		.uleb128 0x1a
 3303 0180 34       		.uleb128 0x34
 3304 0181 00       		.byte	0
 3305 0182 03       		.uleb128 0x3
ARM GAS  C:\Users\essele\AppData\Local\Temp\ccnyoXQF.s 			page 69


 3306 0183 0E       		.uleb128 0xe
 3307 0184 3A       		.uleb128 0x3a
 3308 0185 0B       		.uleb128 0xb
 3309 0186 3B       		.uleb128 0x3b
 3310 0187 05       		.uleb128 0x5
 3311 0188 49       		.uleb128 0x49
 3312 0189 13       		.uleb128 0x13
 3313 018a 02       		.uleb128 0x2
 3314 018b 18       		.uleb128 0x18
 3315 018c 00       		.byte	0
 3316 018d 00       		.byte	0
 3317 018e 1B       		.uleb128 0x1b
 3318 018f 2E       		.uleb128 0x2e
 3319 0190 00       		.byte	0
 3320 0191 3F       		.uleb128 0x3f
 3321 0192 19       		.uleb128 0x19
 3322 0193 03       		.uleb128 0x3
 3323 0194 0E       		.uleb128 0xe
 3324 0195 3A       		.uleb128 0x3a
 3325 0196 0B       		.uleb128 0xb
 3326 0197 3B       		.uleb128 0x3b
 3327 0198 05       		.uleb128 0x5
 3328 0199 49       		.uleb128 0x49
 3329 019a 13       		.uleb128 0x13
 3330 019b 11       		.uleb128 0x11
 3331 019c 01       		.uleb128 0x1
 3332 019d 12       		.uleb128 0x12
 3333 019e 06       		.uleb128 0x6
 3334 019f 40       		.uleb128 0x40
 3335 01a0 18       		.uleb128 0x18
 3336 01a1 9642     		.uleb128 0x2116
 3337 01a3 19       		.uleb128 0x19
 3338 01a4 00       		.byte	0
 3339 01a5 00       		.byte	0
 3340 01a6 1C       		.uleb128 0x1c
 3341 01a7 2E       		.uleb128 0x2e
 3342 01a8 01       		.byte	0x1
 3343 01a9 3F       		.uleb128 0x3f
 3344 01aa 19       		.uleb128 0x19
 3345 01ab 03       		.uleb128 0x3
 3346 01ac 0E       		.uleb128 0xe
 3347 01ad 3A       		.uleb128 0x3a
 3348 01ae 0B       		.uleb128 0xb
 3349 01af 3B       		.uleb128 0x3b
 3350 01b0 05       		.uleb128 0x5
 3351 01b1 49       		.uleb128 0x49
 3352 01b2 13       		.uleb128 0x13
 3353 01b3 11       		.uleb128 0x11
 3354 01b4 01       		.uleb128 0x1
 3355 01b5 12       		.uleb128 0x12
 3356 01b6 06       		.uleb128 0x6
 3357 01b7 40       		.uleb128 0x40
 3358 01b8 18       		.uleb128 0x18
 3359 01b9 9642     		.uleb128 0x2116
 3360 01bb 19       		.uleb128 0x19
 3361 01bc 01       		.uleb128 0x1
 3362 01bd 13       		.uleb128 0x13
ARM GAS  C:\Users\essele\AppData\Local\Temp\ccnyoXQF.s 			page 70


 3363 01be 00       		.byte	0
 3364 01bf 00       		.byte	0
 3365 01c0 1D       		.uleb128 0x1d
 3366 01c1 34       		.uleb128 0x34
 3367 01c2 00       		.byte	0
 3368 01c3 03       		.uleb128 0x3
 3369 01c4 0E       		.uleb128 0xe
 3370 01c5 3A       		.uleb128 0x3a
 3371 01c6 0B       		.uleb128 0xb
 3372 01c7 3B       		.uleb128 0x3b
 3373 01c8 0B       		.uleb128 0xb
 3374 01c9 49       		.uleb128 0x49
 3375 01ca 13       		.uleb128 0x13
 3376 01cb 3F       		.uleb128 0x3f
 3377 01cc 19       		.uleb128 0x19
 3378 01cd 3C       		.uleb128 0x3c
 3379 01ce 19       		.uleb128 0x19
 3380 01cf 00       		.byte	0
 3381 01d0 00       		.byte	0
 3382 01d1 1E       		.uleb128 0x1e
 3383 01d2 01       		.uleb128 0x1
 3384 01d3 01       		.byte	0x1
 3385 01d4 49       		.uleb128 0x49
 3386 01d5 13       		.uleb128 0x13
 3387 01d6 01       		.uleb128 0x1
 3388 01d7 13       		.uleb128 0x13
 3389 01d8 00       		.byte	0
 3390 01d9 00       		.byte	0
 3391 01da 1F       		.uleb128 0x1f
 3392 01db 21       		.uleb128 0x21
 3393 01dc 00       		.byte	0
 3394 01dd 49       		.uleb128 0x49
 3395 01de 13       		.uleb128 0x13
 3396 01df 2F       		.uleb128 0x2f
 3397 01e0 0B       		.uleb128 0xb
 3398 01e1 00       		.byte	0
 3399 01e2 00       		.byte	0
 3400 01e3 20       		.uleb128 0x20
 3401 01e4 34       		.uleb128 0x34
 3402 01e5 00       		.byte	0
 3403 01e6 03       		.uleb128 0x3
 3404 01e7 0E       		.uleb128 0xe
 3405 01e8 3A       		.uleb128 0x3a
 3406 01e9 0B       		.uleb128 0xb
 3407 01ea 3B       		.uleb128 0x3b
 3408 01eb 0B       		.uleb128 0xb
 3409 01ec 49       		.uleb128 0x49
 3410 01ed 13       		.uleb128 0x13
 3411 01ee 3F       		.uleb128 0x3f
 3412 01ef 19       		.uleb128 0x19
 3413 01f0 02       		.uleb128 0x2
 3414 01f1 18       		.uleb128 0x18
 3415 01f2 00       		.byte	0
 3416 01f3 00       		.byte	0
 3417 01f4 21       		.uleb128 0x21
 3418 01f5 34       		.uleb128 0x34
 3419 01f6 00       		.byte	0
ARM GAS  C:\Users\essele\AppData\Local\Temp\ccnyoXQF.s 			page 71


 3420 01f7 03       		.uleb128 0x3
 3421 01f8 0E       		.uleb128 0xe
 3422 01f9 3A       		.uleb128 0x3a
 3423 01fa 0B       		.uleb128 0xb
 3424 01fb 3B       		.uleb128 0x3b
 3425 01fc 05       		.uleb128 0x5
 3426 01fd 49       		.uleb128 0x49
 3427 01fe 13       		.uleb128 0x13
 3428 01ff 3F       		.uleb128 0x3f
 3429 0200 19       		.uleb128 0x19
 3430 0201 02       		.uleb128 0x2
 3431 0202 18       		.uleb128 0x18
 3432 0203 00       		.byte	0
 3433 0204 00       		.byte	0
 3434 0205 00       		.byte	0
 3435              		.section	.debug_aranges,"",%progbits
 3436 0000 94000000 		.4byte	0x94
 3437 0004 0200     		.2byte	0x2
 3438 0006 00000000 		.4byte	.Ldebug_info0
 3439 000a 04       		.byte	0x4
 3440 000b 00       		.byte	0
 3441 000c 0000     		.2byte	0
 3442 000e 0000     		.2byte	0
 3443 0010 00000000 		.4byte	.LFB35
 3444 0014 DC000000 		.4byte	.LFE35-.LFB35
 3445 0018 00000000 		.4byte	.LFB36
 3446 001c 40000000 		.4byte	.LFE36-.LFB36
 3447 0020 00000000 		.4byte	.LFB37
 3448 0024 3C000000 		.4byte	.LFE37-.LFB37
 3449 0028 00000000 		.4byte	.LFB38
 3450 002c 88000000 		.4byte	.LFE38-.LFB38
 3451 0030 00000000 		.4byte	.LFB39
 3452 0034 D4000000 		.4byte	.LFE39-.LFB39
 3453 0038 00000000 		.4byte	.LFB40
 3454 003c B8000000 		.4byte	.LFE40-.LFB40
 3455 0040 00000000 		.4byte	.LFB41
 3456 0044 44000000 		.4byte	.LFE41-.LFB41
 3457 0048 00000000 		.4byte	.LFB42
 3458 004c CC000000 		.4byte	.LFE42-.LFB42
 3459 0050 00000000 		.4byte	.LFB43
 3460 0054 00010000 		.4byte	.LFE43-.LFB43
 3461 0058 00000000 		.4byte	.LFB44
 3462 005c F0000000 		.4byte	.LFE44-.LFB44
 3463 0060 00000000 		.4byte	.LFB45
 3464 0064 1C000000 		.4byte	.LFE45-.LFB45
 3465 0068 00000000 		.4byte	.LFB46
 3466 006c 2C000000 		.4byte	.LFE46-.LFB46
 3467 0070 00000000 		.4byte	.LFB47
 3468 0074 10000000 		.4byte	.LFE47-.LFB47
 3469 0078 00000000 		.4byte	.LFB48
 3470 007c 10000000 		.4byte	.LFE48-.LFB48
 3471 0080 00000000 		.4byte	.LFB49
 3472 0084 10000000 		.4byte	.LFE49-.LFB49
 3473 0088 00000000 		.4byte	.LFB50
 3474 008c 10000000 		.4byte	.LFE50-.LFB50
 3475 0090 00000000 		.4byte	0
 3476 0094 00000000 		.4byte	0
ARM GAS  C:\Users\essele\AppData\Local\Temp\ccnyoXQF.s 			page 72


 3477              		.section	.debug_ranges,"",%progbits
 3478              	.Ldebug_ranges0:
 3479 0000 00000000 		.4byte	.LFB35
 3480 0004 DC000000 		.4byte	.LFE35
 3481 0008 00000000 		.4byte	.LFB36
 3482 000c 40000000 		.4byte	.LFE36
 3483 0010 00000000 		.4byte	.LFB37
 3484 0014 3C000000 		.4byte	.LFE37
 3485 0018 00000000 		.4byte	.LFB38
 3486 001c 88000000 		.4byte	.LFE38
 3487 0020 00000000 		.4byte	.LFB39
 3488 0024 D4000000 		.4byte	.LFE39
 3489 0028 00000000 		.4byte	.LFB40
 3490 002c B8000000 		.4byte	.LFE40
 3491 0030 00000000 		.4byte	.LFB41
 3492 0034 44000000 		.4byte	.LFE41
 3493 0038 00000000 		.4byte	.LFB42
 3494 003c CC000000 		.4byte	.LFE42
 3495 0040 00000000 		.4byte	.LFB43
 3496 0044 00010000 		.4byte	.LFE43
 3497 0048 00000000 		.4byte	.LFB44
 3498 004c F0000000 		.4byte	.LFE44
 3499 0050 00000000 		.4byte	.LFB45
 3500 0054 1C000000 		.4byte	.LFE45
 3501 0058 00000000 		.4byte	.LFB46
 3502 005c 2C000000 		.4byte	.LFE46
 3503 0060 00000000 		.4byte	.LFB47
 3504 0064 10000000 		.4byte	.LFE47
 3505 0068 00000000 		.4byte	.LFB48
 3506 006c 10000000 		.4byte	.LFE48
 3507 0070 00000000 		.4byte	.LFB49
 3508 0074 10000000 		.4byte	.LFE49
 3509 0078 00000000 		.4byte	.LFB50
 3510 007c 10000000 		.4byte	.LFE50
 3511 0080 00000000 		.4byte	0
 3512 0084 00000000 		.4byte	0
 3513              		.section	.debug_line,"",%progbits
 3514              	.Ldebug_line0:
 3515 0000 1F030000 		.section	.debug_str,"MS",%progbits,1
 3515      02002B01 
 3515      00000201 
 3515      FB0E0D00 
 3515      01010101 
 3516              	.LASF21:
 3517 0000 76657273 		.ascii	"version\000"
 3517      696F6E00 
 3518              	.LASF56:
 3519 0008 68656C70 		.ascii	"helper_ifc\000"
 3519      65725F69 
 3519      666300
 3520              	.LASF35:
 3521 0013 75736167 		.ascii	"usage\000"
 3521      6500
 3522              	.LASF33:
 3523 0019 73657474 		.ascii	"setting\000"
 3523      696E6700 
 3524              	.LASF2:
ARM GAS  C:\Users\essele\AppData\Local\Temp\ccnyoXQF.s 			page 73


 3525 0021 73686F72 		.ascii	"short int\000"
 3525      7420696E 
 3525      7400
 3526              	.LASF30:
 3527 002b 6D65616E 		.ascii	"meaning\000"
 3527      696E6700 
 3528              	.LASF60:
 3529 0033 746F6B5F 		.ascii	"tok_count\000"
 3529      636F756E 
 3529      7400
 3530              	.LASF49:
 3531 003d 636D645F 		.ascii	"cmd_read\000"
 3531      72656164 
 3531      00
 3532              	.LASF19:
 3533 0046 73697A65 		.ascii	"sizetype\000"
 3533      74797065 
 3533      00
 3534              	.LASF50:
 3535 004f 756E7469 		.ascii	"until\000"
 3535      6C00
 3536              	.LASF69:
 3537 0055 5C5C4D61 		.ascii	"\\\\Mac\\Home\\Documents\\dev\\yaugi\\GPIB USB Adap"
 3537      635C486F 
 3537      6D655C44 
 3537      6F63756D 
 3537      656E7473 
 3538 0081 7465725C 		.ascii	"ter\\GPIB USB 1.cydsn\000"
 3538      47504942 
 3538      20555342 
 3538      20312E63 
 3538      7964736E 
 3539              	.LASF4:
 3540 0096 5F5F7569 		.ascii	"__uint16_t\000"
 3540      6E743136 
 3540      5F7400
 3541              	.LASF29:
 3542 00a1 76616C75 		.ascii	"value\000"
 3542      6500
 3543              	.LASF34:
 3544 00a7 68656C70 		.ascii	"help\000"
 3544      00
 3545              	.LASF12:
 3546 00ac 75696E74 		.ascii	"uint8_t\000"
 3546      385F7400 
 3547              	.LASF40:
 3548 00b4 746F5F69 		.ascii	"to_int\000"
 3548      6E7400
 3549              	.LASF61:
 3550 00bb 636F6D6D 		.ascii	"commands\000"
 3550      616E6473 
 3550      00
 3551              	.LASF23:
 3552 00c4 6175746F 		.ascii	"autoread\000"
 3552      72656164 
 3552      00
 3553              	.LASF36:
ARM GAS  C:\Users\essele\AppData\Local\Temp\ccnyoXQF.s 			page 74


 3554 00cd 6D65616E 		.ascii	"meanings\000"
 3554      696E6773 
 3554      00
 3555              	.LASF27:
 3556 00d6 73657474 		.ascii	"settings\000"
 3556      696E6773 
 3556      00
 3557              	.LASF32:
 3558 00df 66756E63 		.ascii	"func\000"
 3558      00
 3559              	.LASF9:
 3560 00e4 6C6F6E67 		.ascii	"long long int\000"
 3560      206C6F6E 
 3560      6720696E 
 3560      7400
 3561              	.LASF26:
 3562 00f2 72656164 		.ascii	"read_tmo_ms\000"
 3562      5F746D6F 
 3562      5F6D7300 
 3563              	.LASF37:
 3564 00fe 706F7374 		.ascii	"post_func\000"
 3564      5F66756E 
 3564      6300
 3565              	.LASF6:
 3566 0108 6C6F6E67 		.ascii	"long int\000"
 3566      20696E74 
 3566      00
 3567              	.LASF64:
 3568 0111 656E6162 		.ascii	"enable_disable_means\000"
 3568      6C655F64 
 3568      69736162 
 3568      6C655F6D 
 3568      65616E73 
 3569              	.LASF22:
 3570 0126 61646472 		.ascii	"address\000"
 3570      65737300 
 3571              	.LASF28:
 3572 012e 6974656D 		.ascii	"item_meaning\000"
 3572      5F6D6561 
 3572      6E696E67 
 3572      00
 3573              	.LASF3:
 3574 013b 5F5F7569 		.ascii	"__uint8_t\000"
 3574      6E74385F 
 3574      7400
 3575              	.LASF38:
 3576 0145 746F6B65 		.ascii	"tokenise\000"
 3576      6E697365 
 3576      00
 3577              	.LASF59:
 3578 014e 746F6B73 		.ascii	"toks\000"
 3578      00
 3579              	.LASF1:
 3580 0153 756E7369 		.ascii	"unsigned char\000"
 3580      676E6564 
 3580      20636861 
 3580      7200
ARM GAS  C:\Users\essele\AppData\Local\Temp\ccnyoXQF.s 			page 75


 3581              	.LASF67:
 3582 0161 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 3582      43313120 
 3582      352E342E 
 3582      31203230 
 3582      31363036 
 3583 0194 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m0 -mthumb -g -O"
 3583      20726576 
 3583      6973696F 
 3583      6E203233 
 3583      37373135 
 3584 01c7 30202D66 		.ascii	"0 -ffunction-sections -ffat-lto-objects\000"
 3584      66756E63 
 3584      74696F6E 
 3584      2D736563 
 3584      74696F6E 
 3585              	.LASF31:
 3586 01ef 6E616D65 		.ascii	"name\000"
 3586      00
 3587              	.LASF58:
 3588 01f4 68656C70 		.ascii	"helper_loc\000"
 3588      65725F6C 
 3588      6F6300
 3589              	.LASF18:
 3590 01ff 6C6F6E67 		.ascii	"long double\000"
 3590      20646F75 
 3590      626C6500 
 3591              	.LASF24:
 3592 020b 656F745F 		.ascii	"eot_char\000"
 3592      63686172 
 3592      00
 3593              	.LASF48:
 3594 0214 636D645F 		.ascii	"cmd_help\000"
 3594      68656C70 
 3594      00
 3595              	.LASF41:
 3596 021d 61726763 		.ascii	"argc\000"
 3596      00
 3597              	.LASF0:
 3598 0222 7369676E 		.ascii	"signed char\000"
 3598      65642063 
 3598      68617200 
 3599              	.LASF10:
 3600 022e 6C6F6E67 		.ascii	"long long unsigned int\000"
 3600      206C6F6E 
 3600      6720756E 
 3600      7369676E 
 3600      65642069 
 3601              	.LASF14:
 3602 0245 75696E74 		.ascii	"uint32_t\000"
 3602      33325F74 
 3602      00
 3603              	.LASF11:
 3604 024e 756E7369 		.ascii	"unsigned int\000"
 3604      676E6564 
 3604      20696E74 
 3604      00
ARM GAS  C:\Users\essele\AppData\Local\Temp\ccnyoXQF.s 			page 76


 3605              	.LASF13:
 3606 025b 75696E74 		.ascii	"uint16_t\000"
 3606      31365F74 
 3606      00
 3607              	.LASF44:
 3608 0264 61726776 		.ascii	"argv\000"
 3608      00
 3609              	.LASF54:
 3610 0269 68656C70 		.ascii	"helper_version\000"
 3610      65725F76 
 3610      65727369 
 3610      6F6E00
 3611              	.LASF5:
 3612 0278 73686F72 		.ascii	"short unsigned int\000"
 3612      7420756E 
 3612      7369676E 
 3612      65642069 
 3612      6E7400
 3613              	.LASF25:
 3614 028b 656F745F 		.ascii	"eot_enable\000"
 3614      656E6162 
 3614      6C6500
 3615              	.LASF65:
 3616 0296 656F735F 		.ascii	"eos_means\000"
 3616      6D65616E 
 3616      7300
 3617              	.LASF17:
 3618 02a0 63686172 		.ascii	"char\000"
 3618      00
 3619              	.LASF42:
 3620 02a5 636D645F 		.ascii	"cmd_process\000"
 3620      70726F63 
 3620      65737300 
 3621              	.LASF47:
 3622 02b1 636D645F 		.ascii	"cmd_noargs\000"
 3622      6E6F6172 
 3622      677300
 3623              	.LASF57:
 3624 02bc 68656C70 		.ascii	"helper_llo\000"
 3624      65725F6C 
 3624      6C6F00
 3625              	.LASF52:
 3626 02c7 636D645F 		.ascii	"cmd_config\000"
 3626      636F6E66 
 3626      696700
 3627              	.LASF39:
 3628 02d2 69735F69 		.ascii	"is_int\000"
 3628      6E7400
 3629              	.LASF15:
 3630 02d9 666C6F61 		.ascii	"float\000"
 3630      7400
 3631              	.LASF51:
 3632 02df 656E6465 		.ascii	"ended\000"
 3632      6400
 3633              	.LASF43:
 3634 02e5 636D645F 		.ascii	"cmd_usage\000"
 3634      75736167 
ARM GAS  C:\Users\essele\AppData\Local\Temp\ccnyoXQF.s 			page 77


 3634      6500
 3635              	.LASF55:
 3636 02ef 68656C70 		.ascii	"helper_clr\000"
 3636      65725F63 
 3636      6C7200
 3637              	.LASF8:
 3638 02fa 6C6F6E67 		.ascii	"long unsigned int\000"
 3638      20756E73 
 3638      69676E65 
 3638      6420696E 
 3638      7400
 3639              	.LASF16:
 3640 030c 646F7562 		.ascii	"double\000"
 3640      6C6500
 3641              	.LASF7:
 3642 0313 5F5F7569 		.ascii	"__uint32_t\000"
 3642      6E743332 
 3642      5F7400
 3643              	.LASF46:
 3644 031e 62797465 		.ascii	"byte\000"
 3644      00
 3645              	.LASF63:
 3646 0323 6175746F 		.ascii	"auto_means\000"
 3646      5F6D6561 
 3646      6E7300
 3647              	.LASF20:
 3648 032e 7369676E 		.ascii	"signature\000"
 3648      61747572 
 3648      6500
 3649              	.LASF68:
 3650 0338 636F6D6D 		.ascii	"command.c\000"
 3650      616E642E 
 3650      6300
 3651              	.LASF66:
 3652 0342 656E6162 		.ascii	"enable_disable_usage\000"
 3652      6C655F64 
 3652      69736162 
 3652      6C655F75 
 3652      73616765 
 3653              	.LASF53:
 3654 0357 68656C70 		.ascii	"helper_gpiball\000"
 3654      65725F67 
 3654      70696261 
 3654      6C6C00
 3655              	.LASF45:
 3656 0366 636D645F 		.ascii	"cmd_uint\000"
 3656      75696E74 
 3656      00
 3657              	.LASF62:
 3658 036f 6E6F5F75 		.ascii	"no_usage_args\000"
 3658      73616765 
 3658      5F617267 
 3658      7300
 3659              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
