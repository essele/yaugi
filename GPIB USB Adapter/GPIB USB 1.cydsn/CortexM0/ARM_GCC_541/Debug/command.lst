ARM GAS  C:\Users\essele\AppData\Local\Temp\cckarkCe.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m0
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 0
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"command.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.comm	toks,80,4
  20              		.global	tok_count
  21              		.bss
  22              		.align	2
  23              		.type	tok_count, %object
  24              		.size	tok_count, 4
  25              	tok_count:
  26 0000 00000000 		.space	4
  27              		.global	commands
  28              		.section	.rodata
  29              		.align	2
  30              	.LC0:
  31 0000 61646472 		.ascii	"addr\000"
  31      00
  32 0005 000000   		.align	2
  33              	.LC1:
  34 0008 436F6E66 		.ascii	"Configure or query the GPIB device address\000"
  34      69677572 
  34      65206F72 
  34      20717565 
  34      72792074 
  35 0033 00       		.align	2
  36              	.LC2:
  37 0034 6175746F 		.ascii	"auto\000"
  37      00
  38 0039 000000   		.align	2
  39              	.LC3:
  40 003c 436F6E66 		.ascii	"Configure automatic read after write\000"
  40      69677572 
  40      65206175 
  40      746F6D61 
  40      74696320 
  41 0061 000000   		.align	2
  42              	.LC4:
  43 0064 636C7200 		.ascii	"clr\000"
  44              		.align	2
  45              	.LC5:
  46 0068 53656E64 		.ascii	"Send a selected device clear (SDC) message\000"
  46      20612073 
ARM GAS  C:\Users\essele\AppData\Local\Temp\cckarkCe.s 			page 2


  46      656C6563 
  46      74656420 
  46      64657669 
  47 0093 00       		.align	2
  48              	.LC6:
  49 0094 656F6900 		.ascii	"eoi\000"
  50              		.align	2
  51              	.LC7:
  52 0098 41737365 		.ascii	"Assertion of EOI line with the last transmitted cha"
  52      7274696F 
  52      6E206F66 
  52      20454F49 
  52      206C696E 
  53 00cb 72616374 		.ascii	"racter\000"
  53      657200
  54 00d2 0000     		.align	2
  55              	.LC8:
  56 00d4 656F7300 		.ascii	"eos\000"
  57              		.align	2
  58              	.LC9:
  59 00d8 41707065 		.ascii	"Append specific terminator to GPIB output\000"
  59      6E642073 
  59      70656369 
  59      66696320 
  59      7465726D 
  60 0102 0000     		.align	2
  61              	.LC10:
  62 0104 656F745F 		.ascii	"eot_char\000"
  62      63686172 
  62      00
  63 010d 000000   		.align	2
  64              	.LC11:
  65 0110 43686172 		.ascii	"Character to add for EOI if eot_enable\000"
  65      61637465 
  65      7220746F 
  65      20616464 
  65      20666F72 
  66 0137 00       		.align	2
  67              	.LC12:
  68 0138 656F745F 		.ascii	"eot_enable\000"
  68      656E6162 
  68      6C6500
  69 0143 00       		.align	2
  70              	.LC13:
  71 0144 41707065 		.ascii	"Append eot_char when EOI detected\000"
  71      6E642065 
  71      6F745F63 
  71      68617220 
  71      7768656E 
  72 0166 0000     		.align	2
  73              	.LC14:
  74 0168 68656C70 		.ascii	"help\000"
  74      00
  75 016d 000000   		.align	2
  76              	.LC15:
  77 0170 44697370 		.ascii	"Display command list\000"
  77      6C617920 
ARM GAS  C:\Users\essele\AppData\Local\Temp\cckarkCe.s 			page 3


  77      636F6D6D 
  77      616E6420 
  77      6C697374 
  78 0185 000000   		.align	2
  79              	.LC16:
  80 0188 69666300 		.ascii	"ifc\000"
  81              		.align	2
  82              	.LC17:
  83 018c 53656E64 		.ascii	"Send an interface clear (IFC) message\000"
  83      20616E20 
  83      696E7465 
  83      72666163 
  83      6520636C 
  84 01b2 0000     		.align	2
  85              	.LC18:
  86 01b4 6C6C6F00 		.ascii	"llo\000"
  87              		.align	2
  88              	.LC19:
  89 01b8 53656E64 		.ascii	"Send a local lock out (LLO) message\000"
  89      2061206C 
  89      6F63616C 
  89      206C6F63 
  89      6B206F75 
  90              		.align	2
  91              	.LC20:
  92 01dc 6C6F6300 		.ascii	"loc\000"
  93              		.align	2
  94              	.LC21:
  95 01e0 53656E64 		.ascii	"Send a go to local (GTL) message\000"
  95      20612067 
  95      6F20746F 
  95      206C6F63 
  95      616C2028 
  96 0201 000000   		.align	2
  97              	.LC22:
  98 0204 72656164 		.ascii	"read\000"
  98      00
  99 0209 000000   		.align	2
 100              	.LC23:
 101 020c 52656164 		.ascii	"Read from the device\000"
 101      2066726F 
 101      6D207468 
 101      65206465 
 101      76696365 
 102 0221 000000   		.align	2
 103              	.LC24:
 104 0224 72656164 		.ascii	"read_tmo_ms\000"
 104      5F746D6F 
 104      5F6D7300 
 105              		.align	2
 106              	.LC25:
 107 0230 52656164 		.ascii	"Read timeout value in ms\000"
 107      2074696D 
 107      656F7574 
 107      2076616C 
 107      75652069 
 108 0249 000000   		.align	2
ARM GAS  C:\Users\essele\AppData\Local\Temp\cckarkCe.s 			page 4


 109              	.LC26:
 110 024c 76657200 		.ascii	"ver\000"
 111              		.align	2
 112              	.LC27:
 113 0250 52657475 		.ascii	"Return the version of the yaugi firmware\000"
 113      726E2074 
 113      68652076 
 113      65727369 
 113      6F6E206F 
 114 0279 000000   		.align	2
 115              	.LC28:
 116 027c 636F6E66 		.ascii	"config\000"
 116      696700
 117 0283 00       		.align	2
 118              	.LC29:
 119 0284 53686F77 		.ascii	"Show current configuration settings\000"
 119      20637572 
 119      72656E74 
 119      20636F6E 
 119      66696775 
 120              		.align	2
 121              	.LC30:
 122 02a8 787800   		.ascii	"xx\000"
 123 02ab 00       		.align	2
 124              	.LC31:
 125 02ac 52656164 		.ascii	"Read all pins\000"
 125      20616C6C 
 125      2070696E 
 125      7300
 126 02ba 0000     		.align	2
 127              		.type	commands, %object
 128              		.size	commands, 544
 129              	commands:
 130 02bc 00000000 		.word	.LC0
 131 02c0 00000000 		.word	cmd_uint
 132 02c4 06000000 		.word	settings+6
 133 02c8 0000     		.short	0
 134 02ca 1E00     		.short	30
 135 02cc 08000000 		.word	.LC1
 136 02d0 10000000 		.word	__compound_literal.0
 137 02d4 00000000 		.word	0
 138 02d8 00000000 		.word	0
 139 02dc 34000000 		.word	.LC2
 140 02e0 00000000 		.word	cmd_uint
 141 02e4 08000000 		.word	settings+8
 142 02e8 0000     		.short	0
 143 02ea 0200     		.short	2
 144 02ec 3C000000 		.word	.LC3
 145 02f0 1C000000 		.word	__compound_literal.1
 146 02f4 00000000 		.word	auto_means
 147 02f8 00000000 		.word	0
 148 02fc 64000000 		.word	.LC4
 149 0300 00000000 		.word	cmd_noargs
 150 0304 00000000 		.word	0
 151 0308 0000     		.short	0
 152 030a 0000     		.short	0
 153 030c 68000000 		.word	.LC5
ARM GAS  C:\Users\essele\AppData\Local\Temp\cckarkCe.s 			page 5


 154 0310 00000000 		.word	no_usage_args
 155 0314 00000000 		.word	0
 156 0318 00000000 		.word	helper_clr
 157 031c 94000000 		.word	.LC6
 158 0320 00000000 		.word	cmd_uint
 159 0324 08000000 		.word	settings+8
 160 0328 0000     		.short	0
 161 032a 0100     		.short	1
 162 032c 98000000 		.word	.LC7
 163 0330 00000000 		.word	enable_disable_usage
 164 0334 00000000 		.word	enable_disable_means
 165 0338 00000000 		.word	0
 166 033c D4000000 		.word	.LC8
 167 0340 00000000 		.word	cmd_uint
 168 0344 0C000000 		.word	settings+12
 169 0348 0000     		.short	0
 170 034a 0300     		.short	3
 171 034c D8000000 		.word	.LC9
 172 0350 24000000 		.word	__compound_literal.2
 173 0354 00000000 		.word	eos_means
 174 0358 00000000 		.word	0
 175 035c 04010000 		.word	.LC10
 176 0360 00000000 		.word	cmd_uint
 177 0364 0E000000 		.word	settings+14
 178 0368 0000     		.short	0
 179 036a FF00     		.short	255
 180 036c 10010000 		.word	.LC11
 181 0370 2C000000 		.word	__compound_literal.3
 182 0374 00000000 		.word	0
 183 0378 00000000 		.word	0
 184 037c 38010000 		.word	.LC12
 185 0380 00000000 		.word	cmd_uint
 186 0384 10000000 		.word	settings+16
 187 0388 0000     		.short	0
 188 038a 0100     		.short	1
 189 038c 44010000 		.word	.LC13
 190 0390 00000000 		.word	enable_disable_usage
 191 0394 00000000 		.word	enable_disable_means
 192 0398 00000000 		.word	0
 193 039c 68010000 		.word	.LC14
 194 03a0 00000000 		.word	cmd_help
 195 03a4 00000000 		.word	0
 196 03a8 0000     		.short	0
 197 03aa 0000     		.short	0
 198 03ac 70010000 		.word	.LC15
 199 03b0 38000000 		.word	__compound_literal.4
 200 03b4 00000000 		.word	0
 201 03b8 00000000 		.word	0
 202 03bc 88010000 		.word	.LC16
 203 03c0 00000000 		.word	cmd_noargs
 204 03c4 00000000 		.word	0
 205 03c8 0000     		.short	0
 206 03ca 0000     		.short	0
 207 03cc 8C010000 		.word	.LC17
 208 03d0 00000000 		.word	no_usage_args
 209 03d4 00000000 		.word	0
 210 03d8 00000000 		.word	helper_ifc
ARM GAS  C:\Users\essele\AppData\Local\Temp\cckarkCe.s 			page 6


 211 03dc B4010000 		.word	.LC18
 212 03e0 00000000 		.word	cmd_noargs
 213 03e4 00000000 		.word	0
 214 03e8 0000     		.short	0
 215 03ea 0000     		.short	0
 216 03ec B8010000 		.word	.LC19
 217 03f0 00000000 		.word	no_usage_args
 218 03f4 00000000 		.word	0
 219 03f8 00000000 		.word	helper_llo
 220 03fc DC010000 		.word	.LC20
 221 0400 00000000 		.word	cmd_noargs
 222 0404 00000000 		.word	0
 223 0408 0000     		.short	0
 224 040a 0000     		.short	0
 225 040c E0010000 		.word	.LC21
 226 0410 00000000 		.word	no_usage_args
 227 0414 00000000 		.word	0
 228 0418 00000000 		.word	helper_loc
 229 041c 04020000 		.word	.LC22
 230 0420 00000000 		.word	cmd_read
 231 0424 00000000 		.word	0
 232 0428 0000     		.short	0
 233 042a 0000     		.short	0
 234 042c 0C020000 		.word	.LC23
 235 0430 40000000 		.word	__compound_literal.5
 236 0434 00000000 		.word	0
 237 0438 00000000 		.word	0
 238 043c 24020000 		.word	.LC24
 239 0440 00000000 		.word	cmd_uint
 240 0444 12000000 		.word	settings+18
 241 0448 0100     		.short	1
 242 044a B80B     		.short	3000
 243 044c 30020000 		.word	.LC25
 244 0450 4C000000 		.word	__compound_literal.6
 245 0454 00000000 		.word	0
 246 0458 00000000 		.word	0
 247 045c 4C020000 		.word	.LC26
 248 0460 00000000 		.word	cmd_noargs
 249 0464 00000000 		.word	0
 250 0468 0000     		.short	0
 251 046a 0000     		.short	0
 252 046c 50020000 		.word	.LC27
 253 0470 00000000 		.word	no_usage_args
 254 0474 00000000 		.word	0
 255 0478 00000000 		.word	helper_version
 256 047c 7C020000 		.word	.LC28
 257 0480 00000000 		.word	cmd_config
 258 0484 00000000 		.word	0
 259 0488 0000     		.short	0
 260 048a 0000     		.short	0
 261 048c 84020000 		.word	.LC29
 262 0490 00000000 		.word	no_usage_args
 263 0494 00000000 		.word	0
 264 0498 00000000 		.word	0
 265 049c A8020000 		.word	.LC30
 266 04a0 00000000 		.word	cmd_noargs
 267 04a4 00000000 		.word	0
ARM GAS  C:\Users\essele\AppData\Local\Temp\cckarkCe.s 			page 7


 268 04a8 0000     		.short	0
 269 04aa 0000     		.short	0
 270 04ac AC020000 		.word	.LC31
 271 04b0 00000000 		.word	no_usage_args
 272 04b4 00000000 		.word	0
 273 04b8 00000000 		.word	helper_gpiball
 274 04bc 00000000 		.word	0
 275 04c0 00000000 		.word	0
 276 04c4 00000000 		.word	0
 277 04c8 0000     		.short	0
 278 04ca 0000     		.short	0
 279 04cc 00000000 		.word	0
 280 04d0 00000000 		.word	no_usage_args
 281 04d4 00000000 		.word	0
 282 04d8 00000000 		.word	0
 283              		.align	2
 284              	.LC33:
 285 04dc 200900   		.ascii	" \011\000"
 286 04df 00       		.align	2
 287              	.LC36:
 288 04e0 3C657272 		.ascii	"<error: too many tokens>\015\012\000"
 288      6F723A20 
 288      746F6F20 
 288      6D616E79 
 288      20746F6B 
 289              		.section	.text.tokenise,"ax",%progbits
 290              		.align	2
 291              		.global	tokenise
 292              		.code	16
 293              		.thumb_func
 294              		.type	tokenise, %function
 295              	tokenise:
 296              	.LFB35:
 297              		.file 1 "command.c"
   1:command.c     **** /****
   2:command.c     ****  * YAUGI -- Yet Another USB GPIB Interface
   3:command.c     ****  * 
   4:command.c     ****  * Lee Essen, 2019
   5:command.c     ****  *
   6:command.c     ****  * This work is licensed under a Creative Commons 
   7:command.c     ****  * Attribution-NonCommercial-ShareAlike 4.0 International License.
   8:command.c     ****  *
   9:command.c     ****  */
  10:command.c     **** 
  11:command.c     **** 
  12:command.c     **** #include "command.h"
  13:command.c     **** #include "serial.h"
  14:command.c     **** #include "settings.h"
  15:command.c     **** #include "gpib.h"
  16:command.c     **** #include <stdio.h>
  17:command.c     **** 
  18:command.c     **** #define MAJOR_VERSION 1
  19:command.c     **** #define MINOR_VERSION 2
  20:command.c     **** 
  21:command.c     **** 
  22:command.c     **** #define MAX_TOKS 20
  23:command.c     **** 
ARM GAS  C:\Users\essele\AppData\Local\Temp\cckarkCe.s 			page 8


  24:command.c     **** char    *toks[MAX_TOKS];
  25:command.c     **** int     tok_count = 0;
  26:command.c     **** 
  27:command.c     **** 
  28:command.c     **** 
  29:command.c     **** 
  30:command.c     **** /**
  31:command.c     ****  * A set or view value of uint16_t
  32:command.c     ****  */
  33:command.c     **** struct uint_based {
  34:command.c     ****     int         min;
  35:command.c     ****     int         max;
  36:command.c     ****     uint16_t    *set;
  37:command.c     **** };
  38:command.c     **** 
  39:command.c     **** /**
  40:command.c     ****  * A straight command that doesn't take any arguments
  41:command.c     ****  */
  42:command.c     **** struct no_args {
  43:command.c     **** };
  44:command.c     **** 
  45:command.c     **** /**
  46:command.c     ****  * If we have specific itemised options we can display the help and status
  47:command.c     ****  * information
  48:command.c     ****  */
  49:command.c     **** struct item_meaning {
  50:command.c     ****     int     value;
  51:command.c     ****     char    *meaning;
  52:command.c     **** };
  53:command.c     **** 
  54:command.c     **** struct cmd {
  55:command.c     ****     char                        *name;
  56:command.c     ****     int                         (*func)(char *argv[], int argc, const struct cmd *cmd);
  57:command.c     ****     uint16_t                    *setting;
  58:command.c     ****     uint16_t                    min;
  59:command.c     ****     uint16_t                    max;
  60:command.c     **** //
  61:command.c     **** //    union {
  62:command.c     **** //        struct uint_based       uint;
  63:command.c     **** //        struct no_args          noargs;
  64:command.c     **** //    } u;
  65:command.c     ****     const char                  *help;
  66:command.c     ****     const char                  **usage;
  67:command.c     ****     const struct item_meaning   *meanings;
  68:command.c     ****     int                         (*post_func)(char *argv[], int argc);
  69:command.c     **** };
  70:command.c     **** 
  71:command.c     **** 
  72:command.c     **** const struct cmd commands[];
  73:command.c     **** 
  74:command.c     **** /**
  75:command.c     ****  * Split an input string on whitespace, null in between tokens and populate the list
  76:command.c     ****  * (up to a max number of arguments)
  77:command.c     ****  */
  78:command.c     **** int tokenise(uint8_t *buf, int len) {
 298              		.loc 1 78 0
 299              		.cfi_startproc
ARM GAS  C:\Users\essele\AppData\Local\Temp\cckarkCe.s 			page 9


 300              		@ args = 0, pretend = 0, frame = 16
 301              		@ frame_needed = 1, uses_anonymous_args = 0
 302 0000 80B5     		push	{r7, lr}
 303              		.cfi_def_cfa_offset 8
 304              		.cfi_offset 7, -8
 305              		.cfi_offset 14, -4
 306 0002 84B0     		sub	sp, sp, #16
 307              		.cfi_def_cfa_offset 24
 308 0004 00AF     		add	r7, sp, #0
 309              		.cfi_def_cfa_register 7
 310 0006 7860     		str	r0, [r7, #4]
 311 0008 3960     		str	r1, [r7]
  79:command.c     ****     int i = 0;
 312              		.loc 1 79 0
 313 000a 0023     		movs	r3, #0
 314 000c FB60     		str	r3, [r7, #12]
  80:command.c     ****     
  81:command.c     ****     tok_count = 0;
 315              		.loc 1 81 0
 316 000e 2F4B     		ldr	r3, .L16
 317 0010 0022     		movs	r2, #0
 318 0012 1A60     		str	r2, [r3]
  82:command.c     ****     
  83:command.c     ****     while(i < len) {
 319              		.loc 1 83 0
 320 0014 50E0     		b	.L2
 321              	.L6:
  84:command.c     ****         
  85:command.c     ****         // First get past any leading whitespace...
  86:command.c     ****         while(i < len) {
  87:command.c     ****             if (strchr(" \t", *buf) == NULL) {
 322              		.loc 1 87 0
 323 0016 7B68     		ldr	r3, [r7, #4]
 324 0018 1B78     		ldrb	r3, [r3]
 325 001a 1A00     		movs	r2, r3
 326 001c 2C4B     		ldr	r3, .L16+4
 327 001e 1100     		movs	r1, r2
 328 0020 1800     		movs	r0, r3
 329 0022 FFF7FEFF 		bl	strchr
 330 0026 031E     		subs	r3, r0, #0
 331 0028 0AD0     		beq	.L14
  88:command.c     ****                 break;
  89:command.c     ****             }
  90:command.c     ****             i++;
 332              		.loc 1 90 0
 333 002a FB68     		ldr	r3, [r7, #12]
 334 002c 0133     		adds	r3, r3, #1
 335 002e FB60     		str	r3, [r7, #12]
  91:command.c     ****             buf++;
 336              		.loc 1 91 0
 337 0030 7B68     		ldr	r3, [r7, #4]
 338 0032 0133     		adds	r3, r3, #1
 339 0034 7B60     		str	r3, [r7, #4]
 340              	.L3:
  86:command.c     ****             if (strchr(" \t", *buf) == NULL) {
 341              		.loc 1 86 0
 342 0036 FA68     		ldr	r2, [r7, #12]
ARM GAS  C:\Users\essele\AppData\Local\Temp\cckarkCe.s 			page 10


 343 0038 3B68     		ldr	r3, [r7]
 344 003a 9A42     		cmp	r2, r3
 345 003c EBDB     		blt	.L6
 346 003e 00E0     		b	.L5
 347              	.L14:
  88:command.c     ****                 break;
 348              		.loc 1 88 0
 349 0040 C046     		nop
 350              	.L5:
  92:command.c     ****         }
  93:command.c     ****         // Could be the end of the string?
  94:command.c     ****         if (i == len) {
 351              		.loc 1 94 0
 352 0042 FA68     		ldr	r2, [r7, #12]
 353 0044 3B68     		ldr	r3, [r7]
 354 0046 9A42     		cmp	r2, r3
 355 0048 02D1     		bne	.L7
  95:command.c     ****             return tok_count;
 356              		.loc 1 95 0
 357 004a 204B     		ldr	r3, .L16
 358 004c 1B68     		ldr	r3, [r3]
 359 004e 39E0     		b	.L8
 360              	.L7:
  96:command.c     ****         }
  97:command.c     ****         
  98:command.c     ****         // Setup the token
  99:command.c     ****         toks[tok_count] = (char *)buf;
 361              		.loc 1 99 0
 362 0050 1E4B     		ldr	r3, .L16
 363 0052 1A68     		ldr	r2, [r3]
 364 0054 1F4B     		ldr	r3, .L16+8
 365 0056 9200     		lsls	r2, r2, #2
 366 0058 7968     		ldr	r1, [r7, #4]
 367 005a D150     		str	r1, [r2, r3]
 100:command.c     ****         
 101:command.c     ****         // Now get past any non-whitespace...
 102:command.c     ****         while (i < len) {
 368              		.loc 1 102 0
 369 005c 0FE0     		b	.L9
 370              	.L12:
 103:command.c     ****             if (strchr(" \t", *buf) != NULL) {
 371              		.loc 1 103 0
 372 005e 7B68     		ldr	r3, [r7, #4]
 373 0060 1B78     		ldrb	r3, [r3]
 374 0062 1A00     		movs	r2, r3
 375 0064 1A4B     		ldr	r3, .L16+4
 376 0066 1100     		movs	r1, r2
 377 0068 1800     		movs	r0, r3
 378 006a FFF7FEFF 		bl	strchr
 379 006e 031E     		subs	r3, r0, #0
 380 0070 0AD1     		bne	.L15
 104:command.c     ****                 break;
 105:command.c     ****             }
 106:command.c     ****             i++;
 381              		.loc 1 106 0
 382 0072 FB68     		ldr	r3, [r7, #12]
 383 0074 0133     		adds	r3, r3, #1
ARM GAS  C:\Users\essele\AppData\Local\Temp\cckarkCe.s 			page 11


 384 0076 FB60     		str	r3, [r7, #12]
 107:command.c     ****             buf++;
 385              		.loc 1 107 0
 386 0078 7B68     		ldr	r3, [r7, #4]
 387 007a 0133     		adds	r3, r3, #1
 388 007c 7B60     		str	r3, [r7, #4]
 389              	.L9:
 102:command.c     ****             if (strchr(" \t", *buf) != NULL) {
 390              		.loc 1 102 0
 391 007e FA68     		ldr	r2, [r7, #12]
 392 0080 3B68     		ldr	r3, [r7]
 393 0082 9A42     		cmp	r2, r3
 394 0084 EBDB     		blt	.L12
 395 0086 00E0     		b	.L11
 396              	.L15:
 104:command.c     ****                 break;
 397              		.loc 1 104 0
 398 0088 C046     		nop
 399              	.L11:
 108:command.c     ****         }
 109:command.c     ****         // Null terminate the token
 110:command.c     ****         *buf++ = 0;
 400              		.loc 1 110 0
 401 008a 7B68     		ldr	r3, [r7, #4]
 402 008c 5A1C     		adds	r2, r3, #1
 403 008e 7A60     		str	r2, [r7, #4]
 404 0090 0022     		movs	r2, #0
 405 0092 1A70     		strb	r2, [r3]
 111:command.c     ****         i++;
 406              		.loc 1 111 0
 407 0094 FB68     		ldr	r3, [r7, #12]
 408 0096 0133     		adds	r3, r3, #1
 409 0098 FB60     		str	r3, [r7, #12]
 112:command.c     ****         tok_count++;
 410              		.loc 1 112 0
 411 009a 0C4B     		ldr	r3, .L16
 412 009c 1B68     		ldr	r3, [r3]
 413 009e 5A1C     		adds	r2, r3, #1
 414 00a0 0A4B     		ldr	r3, .L16
 415 00a2 1A60     		str	r2, [r3]
 113:command.c     ****         
 114:command.c     ****         if (tok_count == MAX_TOKS) {
 416              		.loc 1 114 0
 417 00a4 094B     		ldr	r3, .L16
 418 00a6 1B68     		ldr	r3, [r3]
 419 00a8 142B     		cmp	r3, #20
 420 00aa 05D1     		bne	.L2
 115:command.c     ****             serial_printf("<error: too many tokens>\r\n");
 421              		.loc 1 115 0
 422 00ac 0A4B     		ldr	r3, .L16+12
 423 00ae 1800     		movs	r0, r3
 424 00b0 FFF7FEFF 		bl	serial_printf
 116:command.c     ****             return 0;
 425              		.loc 1 116 0
 426 00b4 0023     		movs	r3, #0
 427 00b6 05E0     		b	.L8
 428              	.L2:
ARM GAS  C:\Users\essele\AppData\Local\Temp\cckarkCe.s 			page 12


  83:command.c     ****         
 429              		.loc 1 83 0
 430 00b8 FA68     		ldr	r2, [r7, #12]
 431 00ba 3B68     		ldr	r3, [r7]
 432 00bc 9A42     		cmp	r2, r3
 433 00be BADB     		blt	.L3
 117:command.c     ****         }
 118:command.c     ****     }
 119:command.c     ****     return tok_count;
 434              		.loc 1 119 0
 435 00c0 024B     		ldr	r3, .L16
 436 00c2 1B68     		ldr	r3, [r3]
 437              	.L8:
 120:command.c     **** }
 438              		.loc 1 120 0
 439 00c4 1800     		movs	r0, r3
 440 00c6 BD46     		mov	sp, r7
 441 00c8 04B0     		add	sp, sp, #16
 442              		@ sp needed
 443 00ca 80BD     		pop	{r7, pc}
 444              	.L17:
 445              		.align	2
 446              	.L16:
 447 00cc 00000000 		.word	tok_count
 448 00d0 DC040000 		.word	.LC33
 449 00d4 00000000 		.word	toks
 450 00d8 E0040000 		.word	.LC36
 451              		.cfi_endproc
 452              	.LFE35:
 453              		.size	tokenise, .-tokenise
 454              		.section	.rodata
 455 04fb 00       		.align	2
 456              	.LC38:
 457 04fc 30313233 		.ascii	"0123456789\000"
 457      34353637 
 457      383900
 458              		.section	.text.is_int,"ax",%progbits
 459              		.align	2
 460              		.global	is_int
 461              		.code	16
 462              		.thumb_func
 463              		.type	is_int, %function
 464              	is_int:
 465              	.LFB36:
 121:command.c     **** 
 122:command.c     **** /**
 123:command.c     ****  * is_int() and to_int()
 124:command.c     ****  */
 125:command.c     **** int is_int(char *v) {
 466              		.loc 1 125 0
 467              		.cfi_startproc
 468              		@ args = 0, pretend = 0, frame = 8
 469              		@ frame_needed = 1, uses_anonymous_args = 0
 470 0000 80B5     		push	{r7, lr}
 471              		.cfi_def_cfa_offset 8
 472              		.cfi_offset 7, -8
 473              		.cfi_offset 14, -4
ARM GAS  C:\Users\essele\AppData\Local\Temp\cckarkCe.s 			page 13


 474 0002 82B0     		sub	sp, sp, #8
 475              		.cfi_def_cfa_offset 16
 476 0004 00AF     		add	r7, sp, #0
 477              		.cfi_def_cfa_register 7
 478 0006 7860     		str	r0, [r7, #4]
 126:command.c     ****     while(*v) {
 479              		.loc 1 126 0
 480 0008 0EE0     		b	.L19
 481              	.L22:
 127:command.c     ****         if (strchr("0123456789", *v) == NULL) {
 482              		.loc 1 127 0
 483 000a 7B68     		ldr	r3, [r7, #4]
 484 000c 1B78     		ldrb	r3, [r3]
 485 000e 1A00     		movs	r2, r3
 486 0010 0A4B     		ldr	r3, .L23
 487 0012 1100     		movs	r1, r2
 488 0014 1800     		movs	r0, r3
 489 0016 FFF7FEFF 		bl	strchr
 490 001a 031E     		subs	r3, r0, #0
 491 001c 01D1     		bne	.L20
 128:command.c     ****             return 0;
 492              		.loc 1 128 0
 493 001e 0023     		movs	r3, #0
 494 0020 07E0     		b	.L21
 495              	.L20:
 129:command.c     ****         }
 130:command.c     ****         v++;
 496              		.loc 1 130 0
 497 0022 7B68     		ldr	r3, [r7, #4]
 498 0024 0133     		adds	r3, r3, #1
 499 0026 7B60     		str	r3, [r7, #4]
 500              	.L19:
 126:command.c     ****         if (strchr("0123456789", *v) == NULL) {
 501              		.loc 1 126 0
 502 0028 7B68     		ldr	r3, [r7, #4]
 503 002a 1B78     		ldrb	r3, [r3]
 504 002c 002B     		cmp	r3, #0
 505 002e ECD1     		bne	.L22
 131:command.c     ****     }
 132:command.c     ****     return 1;
 506              		.loc 1 132 0
 507 0030 0123     		movs	r3, #1
 508              	.L21:
 133:command.c     **** }
 509              		.loc 1 133 0
 510 0032 1800     		movs	r0, r3
 511 0034 BD46     		mov	sp, r7
 512 0036 02B0     		add	sp, sp, #8
 513              		@ sp needed
 514 0038 80BD     		pop	{r7, pc}
 515              	.L24:
 516 003a C046     		.align	2
 517              	.L23:
 518 003c FC040000 		.word	.LC38
 519              		.cfi_endproc
 520              	.LFE36:
 521              		.size	is_int, .-is_int
ARM GAS  C:\Users\essele\AppData\Local\Temp\cckarkCe.s 			page 14


 522              		.section	.text.to_int,"ax",%progbits
 523              		.align	2
 524              		.global	to_int
 525              		.code	16
 526              		.thumb_func
 527              		.type	to_int, %function
 528              	to_int:
 529              	.LFB37:
 134:command.c     **** 
 135:command.c     **** int to_int(char *v) {
 530              		.loc 1 135 0
 531              		.cfi_startproc
 532              		@ args = 0, pretend = 0, frame = 16
 533              		@ frame_needed = 1, uses_anonymous_args = 0
 534 0000 80B5     		push	{r7, lr}
 535              		.cfi_def_cfa_offset 8
 536              		.cfi_offset 7, -8
 537              		.cfi_offset 14, -4
 538 0002 84B0     		sub	sp, sp, #16
 539              		.cfi_def_cfa_offset 24
 540 0004 00AF     		add	r7, sp, #0
 541              		.cfi_def_cfa_register 7
 542 0006 7860     		str	r0, [r7, #4]
 136:command.c     ****     int i = 0;
 543              		.loc 1 136 0
 544 0008 0023     		movs	r3, #0
 545 000a FB60     		str	r3, [r7, #12]
 137:command.c     ****     while(*v) {
 546              		.loc 1 137 0
 547 000c 0DE0     		b	.L26
 548              	.L27:
 138:command.c     ****         i *= 10;
 549              		.loc 1 138 0
 550 000e FA68     		ldr	r2, [r7, #12]
 551 0010 1300     		movs	r3, r2
 552 0012 9B00     		lsls	r3, r3, #2
 553 0014 9B18     		adds	r3, r3, r2
 554 0016 5B00     		lsls	r3, r3, #1
 555 0018 FB60     		str	r3, [r7, #12]
 139:command.c     ****         i += (*v++ - '0');
 556              		.loc 1 139 0
 557 001a 7B68     		ldr	r3, [r7, #4]
 558 001c 5A1C     		adds	r2, r3, #1
 559 001e 7A60     		str	r2, [r7, #4]
 560 0020 1B78     		ldrb	r3, [r3]
 561 0022 303B     		subs	r3, r3, #48
 562 0024 FA68     		ldr	r2, [r7, #12]
 563 0026 D318     		adds	r3, r2, r3
 564 0028 FB60     		str	r3, [r7, #12]
 565              	.L26:
 137:command.c     ****     while(*v) {
 566              		.loc 1 137 0
 567 002a 7B68     		ldr	r3, [r7, #4]
 568 002c 1B78     		ldrb	r3, [r3]
 569 002e 002B     		cmp	r3, #0
 570 0030 EDD1     		bne	.L27
 140:command.c     ****     }
ARM GAS  C:\Users\essele\AppData\Local\Temp\cckarkCe.s 			page 15


 141:command.c     ****     return i;
 571              		.loc 1 141 0
 572 0032 FB68     		ldr	r3, [r7, #12]
 142:command.c     **** }
 573              		.loc 1 142 0
 574 0034 1800     		movs	r0, r3
 575 0036 BD46     		mov	sp, r7
 576 0038 04B0     		add	sp, sp, #16
 577              		@ sp needed
 578 003a 80BD     		pop	{r7, pc}
 579              		.cfi_endproc
 580              	.LFE37:
 581              		.size	to_int, .-to_int
 582              		.section	.rodata
 583 0507 00       		.align	2
 584              	.LC42:
 585 0508 3C657272 		.ascii	"<error: unknown ++ command>\015\012\000"
 585      6F723A20 
 585      756E6B6E 
 585      6F776E20 
 585      2B2B2063 
 586              		.section	.text.cmd_process,"ax",%progbits
 587              		.align	2
 588              		.global	cmd_process
 589              		.code	16
 590              		.thumb_func
 591              		.type	cmd_process, %function
 592              	cmd_process:
 593              	.LFB38:
 143:command.c     **** 
 144:command.c     **** /**
 145:command.c     ****  * Take the command line and call the appropriate command function, we will be
 146:command.c     ****  * called only when the first two characters are ++, so we can skip those here
 147:command.c     ****  */
 148:command.c     **** void cmd_process(uint8_t *buf, int len) {
 594              		.loc 1 148 0
 595              		.cfi_startproc
 596              		@ args = 0, pretend = 0, frame = 16
 597              		@ frame_needed = 1, uses_anonymous_args = 0
 598 0000 80B5     		push	{r7, lr}
 599              		.cfi_def_cfa_offset 8
 600              		.cfi_offset 7, -8
 601              		.cfi_offset 14, -4
 602 0002 84B0     		sub	sp, sp, #16
 603              		.cfi_def_cfa_offset 24
 604 0004 00AF     		add	r7, sp, #0
 605              		.cfi_def_cfa_register 7
 606 0006 7860     		str	r0, [r7, #4]
 607 0008 3960     		str	r1, [r7]
 149:command.c     ****     buf += 2;
 608              		.loc 1 149 0
 609 000a 7B68     		ldr	r3, [r7, #4]
 610 000c 0233     		adds	r3, r3, #2
 611 000e 7B60     		str	r3, [r7, #4]
 150:command.c     ****     len -= 2;
 612              		.loc 1 150 0
 613 0010 3B68     		ldr	r3, [r7]
ARM GAS  C:\Users\essele\AppData\Local\Temp\cckarkCe.s 			page 16


 614 0012 023B     		subs	r3, r3, #2
 615 0014 3B60     		str	r3, [r7]
 151:command.c     ****     int argc = tokenise(buf, len);
 616              		.loc 1 151 0
 617 0016 3A68     		ldr	r2, [r7]
 618 0018 7B68     		ldr	r3, [r7, #4]
 619 001a 1100     		movs	r1, r2
 620 001c 1800     		movs	r0, r3
 621 001e FFF7FEFF 		bl	tokenise
 622 0022 0300     		movs	r3, r0
 623 0024 BB60     		str	r3, [r7, #8]
 152:command.c     **** 
 153:command.c     ****     // We will always have the command a minimum, so return if 0
 154:command.c     ****     if (argc == 0) {
 624              		.loc 1 154 0
 625 0026 BB68     		ldr	r3, [r7, #8]
 626 0028 002B     		cmp	r3, #0
 627 002a 29D0     		beq	.L35
 155:command.c     ****         return;
 156:command.c     ****     }
 157:command.c     ****     
 158:command.c     ****     // Find the command entry in the list...
 159:command.c     ****     int i = 0;
 628              		.loc 1 159 0
 629 002c 0023     		movs	r3, #0
 630 002e FB60     		str	r3, [r7, #12]
 160:command.c     ****     while (commands[i].name != NULL) {
 631              		.loc 1 160 0
 632 0030 1BE0     		b	.L32
 633              	.L34:
 161:command.c     ****         if (strcmp(toks[0], commands[i].name) == 0) {
 634              		.loc 1 161 0
 635 0032 154B     		ldr	r3, .L36
 636 0034 1868     		ldr	r0, [r3]
 637 0036 154B     		ldr	r3, .L36+4
 638 0038 FA68     		ldr	r2, [r7, #12]
 639 003a 5201     		lsls	r2, r2, #5
 640 003c D358     		ldr	r3, [r2, r3]
 641 003e 1900     		movs	r1, r3
 642 0040 FFF7FEFF 		bl	strcmp
 643 0044 031E     		subs	r3, r0, #0
 644 0046 0DD1     		bne	.L33
 162:command.c     ****             commands[i].func(toks, argc, &commands[i]);
 645              		.loc 1 162 0
 646 0048 104A     		ldr	r2, .L36+4
 647 004a FB68     		ldr	r3, [r7, #12]
 648 004c 5B01     		lsls	r3, r3, #5
 649 004e D318     		adds	r3, r2, r3
 650 0050 0433     		adds	r3, r3, #4
 651 0052 1B68     		ldr	r3, [r3]
 652 0054 FA68     		ldr	r2, [r7, #12]
 653 0056 5101     		lsls	r1, r2, #5
 654 0058 0C4A     		ldr	r2, .L36+4
 655 005a 8A18     		adds	r2, r1, r2
 656 005c B968     		ldr	r1, [r7, #8]
 657 005e 0A48     		ldr	r0, .L36
 658 0060 9847     		blx	r3
ARM GAS  C:\Users\essele\AppData\Local\Temp\cckarkCe.s 			page 17


 163:command.c     ****             return;
 659              		.loc 1 163 0
 660 0062 0EE0     		b	.L29
 661              	.L33:
 164:command.c     ****         }
 165:command.c     ****         i++;
 662              		.loc 1 165 0
 663 0064 FB68     		ldr	r3, [r7, #12]
 664 0066 0133     		adds	r3, r3, #1
 665 0068 FB60     		str	r3, [r7, #12]
 666              	.L32:
 160:command.c     ****         if (strcmp(toks[0], commands[i].name) == 0) {
 667              		.loc 1 160 0
 668 006a 084B     		ldr	r3, .L36+4
 669 006c FA68     		ldr	r2, [r7, #12]
 670 006e 5201     		lsls	r2, r2, #5
 671 0070 D358     		ldr	r3, [r2, r3]
 672 0072 002B     		cmp	r3, #0
 673 0074 DDD1     		bne	.L34
 166:command.c     ****     }
 167:command.c     ****     serial_printf("<error: unknown ++ command>\r\n");
 674              		.loc 1 167 0
 675 0076 064B     		ldr	r3, .L36+8
 676 0078 1800     		movs	r0, r3
 677 007a FFF7FEFF 		bl	serial_printf
 678 007e 00E0     		b	.L29
 679              	.L35:
 155:command.c     ****     }
 680              		.loc 1 155 0
 681 0080 C046     		nop
 682              	.L29:
 168:command.c     **** }
 683              		.loc 1 168 0
 684 0082 BD46     		mov	sp, r7
 685 0084 04B0     		add	sp, sp, #16
 686              		@ sp needed
 687 0086 80BD     		pop	{r7, pc}
 688              	.L37:
 689              		.align	2
 690              	.L36:
 691 0088 00000000 		.word	toks
 692 008c 00000000 		.word	commands
 693 0090 08050000 		.word	.LC42
 694              		.cfi_endproc
 695              	.LFE38:
 696              		.size	cmd_process, .-cmd_process
 697              		.section	.rodata
 698 0526 0000     		.align	2
 699              	.LC44:
 700 0528 3C757361 		.ascii	"<usage: ++%s\000"
 700      67653A20 
 700      2B2B2573 
 700      00
 701 0535 000000   		.align	2
 702              	.LC46:
 703 0538 20257300 		.ascii	" %s\000"
 704              		.align	2
ARM GAS  C:\Users\essele\AppData\Local\Temp\cckarkCe.s 			page 18


 705              	.LC48:
 706 053c 3E0D0A00 		.ascii	">\015\012\000"
 707              		.align	2
 708              	.LC50:
 709 0540 25730D0A 		.ascii	"%s\015\012\000"
 709      00
 710 0545 000000   		.align	2
 711              	.LC52:
 712 0548 09256420 		.ascii	"\011%d - %s\015\012\000"
 712      2D202573 
 712      0D0A00
 713 0553 00       		.align	2
 714              	.LC54:
 715 0554 09286375 		.ascii	"\011(current setting: %d)\015\012\000"
 715      7272656E 
 715      74207365 
 715      7474696E 
 715      673A2025 
 716              		.section	.text.cmd_usage,"ax",%progbits
 717              		.align	2
 718              		.global	cmd_usage
 719              		.code	16
 720              		.thumb_func
 721              		.type	cmd_usage, %function
 722              	cmd_usage:
 723              	.LFB39:
 169:command.c     **** 
 170:command.c     **** 
 171:command.c     **** 
 172:command.c     **** void cmd_usage(char *argv[], const struct cmd *cmd) {
 724              		.loc 1 172 0
 725              		.cfi_startproc
 726              		@ args = 0, pretend = 0, frame = 24
 727              		@ frame_needed = 1, uses_anonymous_args = 0
 728 0000 80B5     		push	{r7, lr}
 729              		.cfi_def_cfa_offset 8
 730              		.cfi_offset 7, -8
 731              		.cfi_offset 14, -4
 732 0002 86B0     		sub	sp, sp, #24
 733              		.cfi_def_cfa_offset 32
 734 0004 00AF     		add	r7, sp, #0
 735              		.cfi_def_cfa_register 7
 736 0006 7860     		str	r0, [r7, #4]
 737 0008 3960     		str	r1, [r7]
 173:command.c     ****     const char **p = cmd->usage;
 738              		.loc 1 173 0
 739 000a 3B68     		ldr	r3, [r7]
 740 000c 5B69     		ldr	r3, [r3, #20]
 741 000e 7B61     		str	r3, [r7, #20]
 174:command.c     ****     serial_printf("<usage: ++%s", argv[0]);
 742              		.loc 1 174 0
 743 0010 7B68     		ldr	r3, [r7, #4]
 744 0012 1A68     		ldr	r2, [r3]
 745 0014 294B     		ldr	r3, .L46
 746 0016 1100     		movs	r1, r2
 747 0018 1800     		movs	r0, r3
 748 001a FFF7FEFF 		bl	serial_printf
ARM GAS  C:\Users\essele\AppData\Local\Temp\cckarkCe.s 			page 19


 175:command.c     ****     if (**p) {
 749              		.loc 1 175 0
 750 001e 7B69     		ldr	r3, [r7, #20]
 751 0020 1B68     		ldr	r3, [r3]
 752 0022 1B78     		ldrb	r3, [r3]
 753 0024 002B     		cmp	r3, #0
 754 0026 08D0     		beq	.L39
 176:command.c     ****         serial_printf(" %s", *p++);
 755              		.loc 1 176 0
 756 0028 7B69     		ldr	r3, [r7, #20]
 757 002a 1A1D     		adds	r2, r3, #4
 758 002c 7A61     		str	r2, [r7, #20]
 759 002e 1A68     		ldr	r2, [r3]
 760 0030 234B     		ldr	r3, .L46+4
 761 0032 1100     		movs	r1, r2
 762 0034 1800     		movs	r0, r3
 763 0036 FFF7FEFF 		bl	serial_printf
 764              	.L39:
 177:command.c     ****     }
 178:command.c     ****     serial_printf(">\r\n");
 765              		.loc 1 178 0
 766 003a 224B     		ldr	r3, .L46+8
 767 003c 1800     		movs	r0, r3
 768 003e FFF7FEFF 		bl	serial_printf
 179:command.c     ****     
 180:command.c     ****     // First print any additional usage instructions...
 181:command.c     ****     while(*p) {
 769              		.loc 1 181 0
 770 0042 08E0     		b	.L40
 771              	.L41:
 182:command.c     ****         serial_printf("%s\r\n", (char *)*p++);
 772              		.loc 1 182 0
 773 0044 7B69     		ldr	r3, [r7, #20]
 774 0046 1A1D     		adds	r2, r3, #4
 775 0048 7A61     		str	r2, [r7, #20]
 776 004a 1A68     		ldr	r2, [r3]
 777 004c 1E4B     		ldr	r3, .L46+12
 778 004e 1100     		movs	r1, r2
 779 0050 1800     		movs	r0, r3
 780 0052 FFF7FEFF 		bl	serial_printf
 781              	.L40:
 181:command.c     ****         serial_printf("%s\r\n", (char *)*p++);
 782              		.loc 1 181 0
 783 0056 7B69     		ldr	r3, [r7, #20]
 784 0058 1B68     		ldr	r3, [r3]
 785 005a 002B     		cmp	r3, #0
 786 005c F2D1     		bne	.L41
 183:command.c     ****     }
 184:command.c     ****     
 185:command.c     ****     // Now handle specific value meanings if they are there
 186:command.c     ****     if (cmd->meanings) {
 787              		.loc 1 186 0
 788 005e 3B68     		ldr	r3, [r7]
 789 0060 9B69     		ldr	r3, [r3, #24]
 790 0062 002B     		cmp	r3, #0
 791 0064 12D0     		beq	.L42
 792              	.LBB2:
ARM GAS  C:\Users\essele\AppData\Local\Temp\cckarkCe.s 			page 20


 187:command.c     ****         const struct item_meaning *m = cmd->meanings;
 793              		.loc 1 187 0
 794 0066 3B68     		ldr	r3, [r7]
 795 0068 9B69     		ldr	r3, [r3, #24]
 796 006a 3B61     		str	r3, [r7, #16]
 188:command.c     ****         while (m->meaning != NULL) {
 797              		.loc 1 188 0
 798 006c 0AE0     		b	.L43
 799              	.L44:
 189:command.c     ****             serial_printf("\t%d - %s\r\n", m->value, m->meaning);
 800              		.loc 1 189 0
 801 006e 3B69     		ldr	r3, [r7, #16]
 802 0070 1968     		ldr	r1, [r3]
 803 0072 3B69     		ldr	r3, [r7, #16]
 804 0074 5A68     		ldr	r2, [r3, #4]
 805 0076 154B     		ldr	r3, .L46+16
 806 0078 1800     		movs	r0, r3
 807 007a FFF7FEFF 		bl	serial_printf
 190:command.c     ****             m++;
 808              		.loc 1 190 0
 809 007e 3B69     		ldr	r3, [r7, #16]
 810 0080 0833     		adds	r3, r3, #8
 811 0082 3B61     		str	r3, [r7, #16]
 812              	.L43:
 188:command.c     ****         while (m->meaning != NULL) {
 813              		.loc 1 188 0
 814 0084 3B69     		ldr	r3, [r7, #16]
 815 0086 5B68     		ldr	r3, [r3, #4]
 816 0088 002B     		cmp	r3, #0
 817 008a F0D1     		bne	.L44
 818              	.L42:
 819              	.LBE2:
 191:command.c     ****         }
 192:command.c     ****     }
 193:command.c     ****     
 194:command.c     ****     // If it's a setting then we can show the current value
 195:command.c     ****     if (cmd->setting) {
 820              		.loc 1 195 0
 821 008c 3B68     		ldr	r3, [r7]
 822 008e 9B68     		ldr	r3, [r3, #8]
 823 0090 002B     		cmp	r3, #0
 824 0092 0DD0     		beq	.L45
 825              	.LBB3:
 196:command.c     ****         uint16_t value = *cmd->setting;
 826              		.loc 1 196 0
 827 0094 3B68     		ldr	r3, [r7]
 828 0096 9A68     		ldr	r2, [r3, #8]
 829 0098 0E23     		movs	r3, #14
 830 009a FB18     		adds	r3, r7, r3
 831 009c 1288     		ldrh	r2, [r2]
 832 009e 1A80     		strh	r2, [r3]
 197:command.c     ****         serial_printf("\t(current setting: %d)\r\n", value);
 833              		.loc 1 197 0
 834 00a0 0E23     		movs	r3, #14
 835 00a2 FB18     		adds	r3, r7, r3
 836 00a4 1A88     		ldrh	r2, [r3]
 837 00a6 0A4B     		ldr	r3, .L46+20
ARM GAS  C:\Users\essele\AppData\Local\Temp\cckarkCe.s 			page 21


 838 00a8 1100     		movs	r1, r2
 839 00aa 1800     		movs	r0, r3
 840 00ac FFF7FEFF 		bl	serial_printf
 841              	.L45:
 842              	.LBE3:
 198:command.c     ****     }
 199:command.c     ****    
 200:command.c     ****     // Send it...
 201:command.c     ****     serial_flush();
 843              		.loc 1 201 0
 844 00b0 FFF7FEFF 		bl	serial_flush
 202:command.c     **** }
 845              		.loc 1 202 0
 846 00b4 C046     		nop
 847 00b6 BD46     		mov	sp, r7
 848 00b8 06B0     		add	sp, sp, #24
 849              		@ sp needed
 850 00ba 80BD     		pop	{r7, pc}
 851              	.L47:
 852              		.align	2
 853              	.L46:
 854 00bc 28050000 		.word	.LC44
 855 00c0 38050000 		.word	.LC46
 856 00c4 3C050000 		.word	.LC48
 857 00c8 40050000 		.word	.LC50
 858 00cc 48050000 		.word	.LC52
 859 00d0 54050000 		.word	.LC54
 860              		.cfi_endproc
 861              	.LFE39:
 862              		.size	cmd_usage, .-cmd_usage
 863              		.section	.rodata
 864 056d 000000   		.align	2
 865              	.LC56:
 866 0570 25640D0A 		.ascii	"%d\015\012\000"
 866      00
 867              		.section	.text.cmd_uint,"ax",%progbits
 868              		.align	2
 869              		.global	cmd_uint
 870              		.code	16
 871              		.thumb_func
 872              		.type	cmd_uint, %function
 873              	cmd_uint:
 874              	.LFB40:
 203:command.c     **** 
 204:command.c     **** /**
 205:command.c     ****  * Process a command that sets/gets an integer argument
 206:command.c     ****  */
 207:command.c     **** int cmd_uint(char *argv[], int argc, const struct cmd *cmd) {
 875              		.loc 1 207 0
 876              		.cfi_startproc
 877              		@ args = 0, pretend = 0, frame = 24
 878              		@ frame_needed = 1, uses_anonymous_args = 0
 879 0000 80B5     		push	{r7, lr}
 880              		.cfi_def_cfa_offset 8
 881              		.cfi_offset 7, -8
 882              		.cfi_offset 14, -4
 883 0002 86B0     		sub	sp, sp, #24
ARM GAS  C:\Users\essele\AppData\Local\Temp\cckarkCe.s 			page 22


 884              		.cfi_def_cfa_offset 32
 885 0004 00AF     		add	r7, sp, #0
 886              		.cfi_def_cfa_register 7
 887 0006 F860     		str	r0, [r7, #12]
 888 0008 B960     		str	r1, [r7, #8]
 889 000a 7A60     		str	r2, [r7, #4]
 208:command.c     ****     if (argc == 1) {
 890              		.loc 1 208 0
 891 000c BB68     		ldr	r3, [r7, #8]
 892 000e 012B     		cmp	r3, #1
 893 0010 0AD1     		bne	.L49
 209:command.c     ****         // Get the value...
 210:command.c     ****         serial_printf("%d\r\n", *(cmd->setting));
 894              		.loc 1 210 0
 895 0012 7B68     		ldr	r3, [r7, #4]
 896 0014 9B68     		ldr	r3, [r3, #8]
 897 0016 1B88     		ldrh	r3, [r3]
 898 0018 1A00     		movs	r2, r3
 899 001a 264B     		ldr	r3, .L56
 900 001c 1100     		movs	r1, r2
 901 001e 1800     		movs	r0, r3
 902 0020 FFF7FEFF 		bl	serial_printf
 211:command.c     ****         return 0;
 903              		.loc 1 211 0
 904 0024 0023     		movs	r3, #0
 905 0026 40E0     		b	.L50
 906              	.L49:
 212:command.c     ****     }
 213:command.c     ****     if (argc != 2 || !is_int(argv[1])) {
 907              		.loc 1 213 0
 908 0028 BB68     		ldr	r3, [r7, #8]
 909 002a 022B     		cmp	r3, #2
 910 002c 07D1     		bne	.L51
 911              		.loc 1 213 0 is_stmt 0 discriminator 1
 912 002e FB68     		ldr	r3, [r7, #12]
 913 0030 0433     		adds	r3, r3, #4
 914 0032 1B68     		ldr	r3, [r3]
 915 0034 1800     		movs	r0, r3
 916 0036 FFF7FEFF 		bl	is_int
 917 003a 031E     		subs	r3, r0, #0
 918 003c 07D1     		bne	.L52
 919              	.L51:
 214:command.c     ****         cmd_usage(argv, cmd);
 920              		.loc 1 214 0 is_stmt 1
 921 003e 7A68     		ldr	r2, [r7, #4]
 922 0040 FB68     		ldr	r3, [r7, #12]
 923 0042 1100     		movs	r1, r2
 924 0044 1800     		movs	r0, r3
 925 0046 FFF7FEFF 		bl	cmd_usage
 215:command.c     ****         return 1;
 926              		.loc 1 215 0
 927 004a 0123     		movs	r3, #1
 928 004c 2DE0     		b	.L50
 929              	.L52:
 216:command.c     ****     }
 217:command.c     ****     int byte = to_int(argv[1]);
 930              		.loc 1 217 0
ARM GAS  C:\Users\essele\AppData\Local\Temp\cckarkCe.s 			page 23


 931 004e FB68     		ldr	r3, [r7, #12]
 932 0050 0433     		adds	r3, r3, #4
 933 0052 1B68     		ldr	r3, [r3]
 934 0054 1800     		movs	r0, r3
 935 0056 FFF7FEFF 		bl	to_int
 936 005a 0300     		movs	r3, r0
 937 005c 7B61     		str	r3, [r7, #20]
 218:command.c     ****     if (byte < cmd->min || byte > cmd->max) {
 938              		.loc 1 218 0
 939 005e 7B68     		ldr	r3, [r7, #4]
 940 0060 9B89     		ldrh	r3, [r3, #12]
 941 0062 1A00     		movs	r2, r3
 942 0064 7B69     		ldr	r3, [r7, #20]
 943 0066 9A42     		cmp	r2, r3
 944 0068 05DC     		bgt	.L53
 945              		.loc 1 218 0 is_stmt 0 discriminator 1
 946 006a 7B68     		ldr	r3, [r7, #4]
 947 006c DB89     		ldrh	r3, [r3, #14]
 948 006e 1A00     		movs	r2, r3
 949 0070 7B69     		ldr	r3, [r7, #20]
 950 0072 9A42     		cmp	r2, r3
 951 0074 07DA     		bge	.L54
 952              	.L53:
 219:command.c     ****         cmd_usage(argv, cmd);
 953              		.loc 1 219 0 is_stmt 1
 954 0076 7A68     		ldr	r2, [r7, #4]
 955 0078 FB68     		ldr	r3, [r7, #12]
 956 007a 1100     		movs	r1, r2
 957 007c 1800     		movs	r0, r3
 958 007e FFF7FEFF 		bl	cmd_usage
 220:command.c     ****         return 1;
 959              		.loc 1 220 0
 960 0082 0123     		movs	r3, #1
 961 0084 11E0     		b	.L50
 962              	.L54:
 221:command.c     ****     }
 222:command.c     ****     
 223:command.c     ****     *(cmd->setting) = (uint16_t)byte;
 963              		.loc 1 223 0
 964 0086 7B68     		ldr	r3, [r7, #4]
 965 0088 9B68     		ldr	r3, [r3, #8]
 966 008a 7A69     		ldr	r2, [r7, #20]
 967 008c 92B2     		uxth	r2, r2
 968 008e 1A80     		strh	r2, [r3]
 224:command.c     ****     
 225:command.c     ****     if (cmd->post_func != NULL) {
 969              		.loc 1 225 0
 970 0090 7B68     		ldr	r3, [r7, #4]
 971 0092 DB69     		ldr	r3, [r3, #28]
 972 0094 002B     		cmp	r3, #0
 973 0096 07D0     		beq	.L55
 226:command.c     ****         return cmd->post_func(argv, argc);
 974              		.loc 1 226 0
 975 0098 7B68     		ldr	r3, [r7, #4]
 976 009a DB69     		ldr	r3, [r3, #28]
 977 009c B968     		ldr	r1, [r7, #8]
 978 009e FA68     		ldr	r2, [r7, #12]
ARM GAS  C:\Users\essele\AppData\Local\Temp\cckarkCe.s 			page 24


 979 00a0 1000     		movs	r0, r2
 980 00a2 9847     		blx	r3
 981 00a4 0300     		movs	r3, r0
 982 00a6 00E0     		b	.L50
 983              	.L55:
 227:command.c     ****     }
 228:command.c     ****     return 0;
 984              		.loc 1 228 0
 985 00a8 0023     		movs	r3, #0
 986              	.L50:
 229:command.c     **** }
 987              		.loc 1 229 0
 988 00aa 1800     		movs	r0, r3
 989 00ac BD46     		mov	sp, r7
 990 00ae 06B0     		add	sp, sp, #24
 991              		@ sp needed
 992 00b0 80BD     		pop	{r7, pc}
 993              	.L57:
 994 00b2 C046     		.align	2
 995              	.L56:
 996 00b4 70050000 		.word	.LC56
 997              		.cfi_endproc
 998              	.LFE40:
 999              		.size	cmd_uint, .-cmd_uint
 1000              		.section	.text.cmd_noargs,"ax",%progbits
 1001              		.align	2
 1002              		.global	cmd_noargs
 1003              		.code	16
 1004              		.thumb_func
 1005              		.type	cmd_noargs, %function
 1006              	cmd_noargs:
 1007              	.LFB41:
 230:command.c     **** 
 231:command.c     **** /**
 232:command.c     ****  * A command that takes no arguments is really just a call to the helper function, but
 233:command.c     ****  * we will check the syntax first
 234:command.c     ****  */
 235:command.c     **** int cmd_noargs(char *argv[], int argc, const struct cmd *cmd) {
 1008              		.loc 1 235 0
 1009              		.cfi_startproc
 1010              		@ args = 0, pretend = 0, frame = 16
 1011              		@ frame_needed = 1, uses_anonymous_args = 0
 1012 0000 80B5     		push	{r7, lr}
 1013              		.cfi_def_cfa_offset 8
 1014              		.cfi_offset 7, -8
 1015              		.cfi_offset 14, -4
 1016 0002 84B0     		sub	sp, sp, #16
 1017              		.cfi_def_cfa_offset 24
 1018 0004 00AF     		add	r7, sp, #0
 1019              		.cfi_def_cfa_register 7
 1020 0006 F860     		str	r0, [r7, #12]
 1021 0008 B960     		str	r1, [r7, #8]
 1022 000a 7A60     		str	r2, [r7, #4]
 236:command.c     ****     if (argc != 1) {
 1023              		.loc 1 236 0
 1024 000c BB68     		ldr	r3, [r7, #8]
 1025 000e 012B     		cmp	r3, #1
ARM GAS  C:\Users\essele\AppData\Local\Temp\cckarkCe.s 			page 25


 1026 0010 07D0     		beq	.L59
 237:command.c     ****         cmd_usage(argv, cmd);
 1027              		.loc 1 237 0
 1028 0012 7A68     		ldr	r2, [r7, #4]
 1029 0014 FB68     		ldr	r3, [r7, #12]
 1030 0016 1100     		movs	r1, r2
 1031 0018 1800     		movs	r0, r3
 1032 001a FFF7FEFF 		bl	cmd_usage
 238:command.c     ****         return 1;
 1033              		.loc 1 238 0
 1034 001e 0123     		movs	r3, #1
 1035 0020 0CE0     		b	.L60
 1036              	.L59:
 239:command.c     ****     }
 240:command.c     ****     if (cmd->post_func != NULL) {
 1037              		.loc 1 240 0
 1038 0022 7B68     		ldr	r3, [r7, #4]
 1039 0024 DB69     		ldr	r3, [r3, #28]
 1040 0026 002B     		cmp	r3, #0
 1041 0028 07D0     		beq	.L61
 241:command.c     ****         return cmd->post_func(argv, argc);
 1042              		.loc 1 241 0
 1043 002a 7B68     		ldr	r3, [r7, #4]
 1044 002c DB69     		ldr	r3, [r3, #28]
 1045 002e B968     		ldr	r1, [r7, #8]
 1046 0030 FA68     		ldr	r2, [r7, #12]
 1047 0032 1000     		movs	r0, r2
 1048 0034 9847     		blx	r3
 1049 0036 0300     		movs	r3, r0
 1050 0038 00E0     		b	.L60
 1051              	.L61:
 242:command.c     ****     }
 243:command.c     ****     return 0;    
 1052              		.loc 1 243 0
 1053 003a 0023     		movs	r3, #0
 1054              	.L60:
 244:command.c     **** }
 1055              		.loc 1 244 0
 1056 003c 1800     		movs	r0, r3
 1057 003e BD46     		mov	sp, r7
 1058 0040 04B0     		add	sp, sp, #16
 1059              		@ sp needed
 1060 0042 80BD     		pop	{r7, pc}
 1061              		.cfi_endproc
 1062              	.LFE41:
 1063              		.size	cmd_noargs, .-cmd_noargs
 1064              		.section	.rodata
 1065 0575 000000   		.align	2
 1066              	.LC59:
 1067 0578 2B2B252D 		.ascii	"++%-12.12s\011%s\015\012\000"
 1067      31322E31 
 1067      32730925 
 1067      730D0A00 
 1068              		.align	2
 1069              	.LC61:
 1070 0588 3C657272 		.ascii	"<error: unknown command: %s>\015\012\000"
 1070      6F723A20 
ARM GAS  C:\Users\essele\AppData\Local\Temp\cckarkCe.s 			page 26


 1070      756E6B6E 
 1070      6F776E20 
 1070      636F6D6D 
 1071              		.section	.text.cmd_help,"ax",%progbits
 1072              		.align	2
 1073              		.global	cmd_help
 1074              		.code	16
 1075              		.thumb_func
 1076              		.type	cmd_help, %function
 1077              	cmd_help:
 1078              	.LFB42:
 245:command.c     **** 
 246:command.c     **** /**
 247:command.c     ****  * The help command can take zero or one arguments
 248:command.c     ****  */
 249:command.c     **** int cmd_help(char *argv[], int argc, const struct cmd *cmd) {
 1079              		.loc 1 249 0
 1080              		.cfi_startproc
 1081              		@ args = 0, pretend = 0, frame = 24
 1082              		@ frame_needed = 1, uses_anonymous_args = 0
 1083 0000 80B5     		push	{r7, lr}
 1084              		.cfi_def_cfa_offset 8
 1085              		.cfi_offset 7, -8
 1086              		.cfi_offset 14, -4
 1087 0002 86B0     		sub	sp, sp, #24
 1088              		.cfi_def_cfa_offset 32
 1089 0004 00AF     		add	r7, sp, #0
 1090              		.cfi_def_cfa_register 7
 1091 0006 F860     		str	r0, [r7, #12]
 1092 0008 B960     		str	r1, [r7, #8]
 1093 000a 7A60     		str	r2, [r7, #4]
 250:command.c     ****     // Did we even get the help command wrong?
 251:command.c     ****     if (argc > 2) {
 1094              		.loc 1 251 0
 1095 000c BB68     		ldr	r3, [r7, #8]
 1096 000e 022B     		cmp	r3, #2
 1097 0010 07DD     		ble	.L63
 252:command.c     ****         cmd_usage(argv, cmd);
 1098              		.loc 1 252 0
 1099 0012 7A68     		ldr	r2, [r7, #4]
 1100 0014 FB68     		ldr	r3, [r7, #12]
 1101 0016 1100     		movs	r1, r2
 1102 0018 1800     		movs	r0, r3
 1103 001a FFF7FEFF 		bl	cmd_usage
 253:command.c     ****         return 1;
 1104              		.loc 1 253 0
 1105 001e 0123     		movs	r3, #1
 1106 0020 4AE0     		b	.L64
 1107              	.L63:
 254:command.c     ****     }
 255:command.c     ****     // No args, means just show the list...
 256:command.c     ****     if (argc == 1) {
 1108              		.loc 1 256 0
 1109 0022 BB68     		ldr	r3, [r7, #8]
 1110 0024 012B     		cmp	r3, #1
 1111 0026 1BD1     		bne	.L65
 1112              	.LBB4:
ARM GAS  C:\Users\essele\AppData\Local\Temp\cckarkCe.s 			page 27


 257:command.c     ****         int i = 0;
 1113              		.loc 1 257 0
 1114 0028 0023     		movs	r3, #0
 1115 002a 7B61     		str	r3, [r7, #20]
 258:command.c     ****         while (commands[i].name != NULL) {
 1116              		.loc 1 258 0
 1117 002c 10E0     		b	.L66
 1118              	.L67:
 259:command.c     ****             serial_printf("++%-12.12s\t%s\r\n", commands[i].name, commands[i].help);
 1119              		.loc 1 259 0
 1120 002e 244B     		ldr	r3, .L71
 1121 0030 7A69     		ldr	r2, [r7, #20]
 1122 0032 5201     		lsls	r2, r2, #5
 1123 0034 D158     		ldr	r1, [r2, r3]
 1124 0036 224A     		ldr	r2, .L71
 1125 0038 7B69     		ldr	r3, [r7, #20]
 1126 003a 5B01     		lsls	r3, r3, #5
 1127 003c D318     		adds	r3, r2, r3
 1128 003e 1033     		adds	r3, r3, #16
 1129 0040 1A68     		ldr	r2, [r3]
 1130 0042 204B     		ldr	r3, .L71+4
 1131 0044 1800     		movs	r0, r3
 1132 0046 FFF7FEFF 		bl	serial_printf
 260:command.c     ****             i++;
 1133              		.loc 1 260 0
 1134 004a 7B69     		ldr	r3, [r7, #20]
 1135 004c 0133     		adds	r3, r3, #1
 1136 004e 7B61     		str	r3, [r7, #20]
 1137              	.L66:
 258:command.c     ****         while (commands[i].name != NULL) {
 1138              		.loc 1 258 0
 1139 0050 1B4B     		ldr	r3, .L71
 1140 0052 7A69     		ldr	r2, [r7, #20]
 1141 0054 5201     		lsls	r2, r2, #5
 1142 0056 D358     		ldr	r3, [r2, r3]
 1143 0058 002B     		cmp	r3, #0
 1144 005a E8D1     		bne	.L67
 261:command.c     ****         }
 262:command.c     ****         return 0;
 1145              		.loc 1 262 0
 1146 005c 0023     		movs	r3, #0
 1147 005e 2BE0     		b	.L64
 1148              	.L65:
 1149              	.LBE4:
 263:command.c     ****     }
 264:command.c     ****     // One arg, means show usage of the given command
 265:command.c     ****     int i = 0;
 1150              		.loc 1 265 0
 1151 0060 0023     		movs	r3, #0
 1152 0062 3B61     		str	r3, [r7, #16]
 266:command.c     ****     while (commands[i].name != NULL) {
 1153              		.loc 1 266 0
 1154 0064 19E0     		b	.L68
 1155              	.L70:
 267:command.c     ****         if (strcmp(argv[1], commands[i].name) == 0) {
 1156              		.loc 1 267 0
 1157 0066 FB68     		ldr	r3, [r7, #12]
ARM GAS  C:\Users\essele\AppData\Local\Temp\cckarkCe.s 			page 28


 1158 0068 0433     		adds	r3, r3, #4
 1159 006a 1868     		ldr	r0, [r3]
 1160 006c 144B     		ldr	r3, .L71
 1161 006e 3A69     		ldr	r2, [r7, #16]
 1162 0070 5201     		lsls	r2, r2, #5
 1163 0072 D358     		ldr	r3, [r2, r3]
 1164 0074 1900     		movs	r1, r3
 1165 0076 FFF7FEFF 		bl	strcmp
 1166 007a 031E     		subs	r3, r0, #0
 1167 007c 0AD1     		bne	.L69
 268:command.c     ****             cmd_usage(&argv[1], &commands[i]);
 1168              		.loc 1 268 0
 1169 007e FB68     		ldr	r3, [r7, #12]
 1170 0080 181D     		adds	r0, r3, #4
 1171 0082 3B69     		ldr	r3, [r7, #16]
 1172 0084 5A01     		lsls	r2, r3, #5
 1173 0086 0E4B     		ldr	r3, .L71
 1174 0088 D318     		adds	r3, r2, r3
 1175 008a 1900     		movs	r1, r3
 1176 008c FFF7FEFF 		bl	cmd_usage
 269:command.c     ****             return 0;
 1177              		.loc 1 269 0
 1178 0090 0023     		movs	r3, #0
 1179 0092 11E0     		b	.L64
 1180              	.L69:
 270:command.c     ****         }
 271:command.c     ****         i++;
 1181              		.loc 1 271 0
 1182 0094 3B69     		ldr	r3, [r7, #16]
 1183 0096 0133     		adds	r3, r3, #1
 1184 0098 3B61     		str	r3, [r7, #16]
 1185              	.L68:
 266:command.c     ****         if (strcmp(argv[1], commands[i].name) == 0) {
 1186              		.loc 1 266 0
 1187 009a 094B     		ldr	r3, .L71
 1188 009c 3A69     		ldr	r2, [r7, #16]
 1189 009e 5201     		lsls	r2, r2, #5
 1190 00a0 D358     		ldr	r3, [r2, r3]
 1191 00a2 002B     		cmp	r3, #0
 1192 00a4 DFD1     		bne	.L70
 272:command.c     ****     }
 273:command.c     ****     serial_printf("<error: unknown command: %s>\r\n", argv[1]);
 1193              		.loc 1 273 0
 1194 00a6 FB68     		ldr	r3, [r7, #12]
 1195 00a8 0433     		adds	r3, r3, #4
 1196 00aa 1A68     		ldr	r2, [r3]
 1197 00ac 064B     		ldr	r3, .L71+8
 1198 00ae 1100     		movs	r1, r2
 1199 00b0 1800     		movs	r0, r3
 1200 00b2 FFF7FEFF 		bl	serial_printf
 274:command.c     ****     return 0;
 1201              		.loc 1 274 0
 1202 00b6 0023     		movs	r3, #0
 1203              	.L64:
 275:command.c     **** }
 1204              		.loc 1 275 0
 1205 00b8 1800     		movs	r0, r3
ARM GAS  C:\Users\essele\AppData\Local\Temp\cckarkCe.s 			page 29


 1206 00ba BD46     		mov	sp, r7
 1207 00bc 06B0     		add	sp, sp, #24
 1208              		@ sp needed
 1209 00be 80BD     		pop	{r7, pc}
 1210              	.L72:
 1211              		.align	2
 1212              	.L71:
 1213 00c0 00000000 		.word	commands
 1214 00c4 78050000 		.word	.LC59
 1215 00c8 88050000 		.word	.LC61
 1216              		.cfi_endproc
 1217              	.LFE42:
 1218              		.size	cmd_help, .-cmd_help
 1219              		.section	.rodata
 1220 05a7 00       		.align	2
 1221              	.LC65:
 1222 05a8 474F543A 		.ascii	"GOT: \000"
 1222      2000
 1223 05ae 0000     		.align	2
 1224              	.LC67:
 1225 05b0 0D0A00   		.ascii	"\015\012\000"
 1226              		.section	.text.cmd_read,"ax",%progbits
 1227              		.align	2
 1228              		.global	cmd_read
 1229              		.code	16
 1230              		.thumb_func
 1231              		.type	cmd_read, %function
 1232              	cmd_read:
 1233              	.LFB43:
 276:command.c     **** 
 277:command.c     **** /**
 278:command.c     ****  * Read from the GPIB bus
 279:command.c     ****  */
 280:command.c     **** int cmd_read(char *argv[], int argc, const struct cmd *cmd) {
 1234              		.loc 1 280 0
 1235              		.cfi_startproc
 1236              		@ args = 0, pretend = 0, frame = 40
 1237              		@ frame_needed = 1, uses_anonymous_args = 0
 1238 0000 80B5     		push	{r7, lr}
 1239              		.cfi_def_cfa_offset 8
 1240              		.cfi_offset 7, -8
 1241              		.cfi_offset 14, -4
 1242 0002 8AB0     		sub	sp, sp, #40
 1243              		.cfi_def_cfa_offset 48
 1244 0004 00AF     		add	r7, sp, #0
 1245              		.cfi_def_cfa_register 7
 1246 0006 F860     		str	r0, [r7, #12]
 1247 0008 B960     		str	r1, [r7, #8]
 1248 000a 7A60     		str	r2, [r7, #4]
 281:command.c     ****     int until = GPIB_TIMEOUT;
 1249              		.loc 1 281 0
 1250 000c 0223     		movs	r3, #2
 1251 000e FF33     		adds	r3, r3, #255
 1252 0010 7B62     		str	r3, [r7, #36]
 282:command.c     ****     uint8_t *buf = gpib_get_buffer();
 1253              		.loc 1 282 0
 1254 0012 FFF7FEFF 		bl	gpib_get_buffer
ARM GAS  C:\Users\essele\AppData\Local\Temp\cckarkCe.s 			page 30


 1255 0016 0300     		movs	r3, r0
 1256 0018 3B62     		str	r3, [r7, #32]
 283:command.c     ****     int     len;
 284:command.c     ****     int     ended;
 285:command.c     ****     
 286:command.c     ****     if (argc > 2) {
 1257              		.loc 1 286 0
 1258 001a BB68     		ldr	r3, [r7, #8]
 1259 001c 022B     		cmp	r3, #2
 1260 001e 07DD     		ble	.L74
 287:command.c     ****         cmd_usage(argv, cmd);
 1261              		.loc 1 287 0
 1262 0020 7A68     		ldr	r2, [r7, #4]
 1263 0022 FB68     		ldr	r3, [r7, #12]
 1264 0024 1100     		movs	r1, r2
 1265 0026 1800     		movs	r0, r3
 1266 0028 FFF7FEFF 		bl	cmd_usage
 288:command.c     ****         return 1;
 1267              		.loc 1 288 0
 1268 002c 0123     		movs	r3, #1
 1269 002e 5BE0     		b	.L82
 1270              	.L74:
 289:command.c     ****     }
 290:command.c     ****     if (argc == 2) {
 1271              		.loc 1 290 0
 1272 0030 BB68     		ldr	r3, [r7, #8]
 1273 0032 022B     		cmp	r3, #2
 1274 0034 35D1     		bne	.L76
 291:command.c     ****         if (strcmp(argv[1], "eoi") == 0) {
 1275              		.loc 1 291 0
 1276 0036 FB68     		ldr	r3, [r7, #12]
 1277 0038 0433     		adds	r3, r3, #4
 1278 003a 1B68     		ldr	r3, [r3]
 1279 003c 2C4A     		ldr	r2, .L83
 1280 003e 1100     		movs	r1, r2
 1281 0040 1800     		movs	r0, r3
 1282 0042 FFF7FEFF 		bl	strcmp
 1283 0046 031E     		subs	r3, r0, #0
 1284 0048 03D1     		bne	.L77
 292:command.c     ****             until = GPIB_EOI;
 1285              		.loc 1 292 0
 1286 004a 8023     		movs	r3, #128
 1287 004c 5B00     		lsls	r3, r3, #1
 1288 004e 7B62     		str	r3, [r7, #36]
 1289 0050 27E0     		b	.L76
 1290              	.L77:
 293:command.c     ****         } else if (!is_int(argv[1])) {
 1291              		.loc 1 293 0
 1292 0052 FB68     		ldr	r3, [r7, #12]
 1293 0054 0433     		adds	r3, r3, #4
 1294 0056 1B68     		ldr	r3, [r3]
 1295 0058 1800     		movs	r0, r3
 1296 005a FFF7FEFF 		bl	is_int
 1297 005e 031E     		subs	r3, r0, #0
 1298 0060 07D1     		bne	.L78
 294:command.c     ****             cmd_usage(argv, cmd);
 1299              		.loc 1 294 0
ARM GAS  C:\Users\essele\AppData\Local\Temp\cckarkCe.s 			page 31


 1300 0062 7A68     		ldr	r2, [r7, #4]
 1301 0064 FB68     		ldr	r3, [r7, #12]
 1302 0066 1100     		movs	r1, r2
 1303 0068 1800     		movs	r0, r3
 1304 006a FFF7FEFF 		bl	cmd_usage
 295:command.c     ****             return 1;
 1305              		.loc 1 295 0
 1306 006e 0123     		movs	r3, #1
 1307 0070 3AE0     		b	.L82
 1308              	.L78:
 1309              	.LBB5:
 296:command.c     ****         } else {
 297:command.c     ****             int ch = to_int(argv[1]);
 1310              		.loc 1 297 0
 1311 0072 FB68     		ldr	r3, [r7, #12]
 1312 0074 0433     		adds	r3, r3, #4
 1313 0076 1B68     		ldr	r3, [r3]
 1314 0078 1800     		movs	r0, r3
 1315 007a FFF7FEFF 		bl	to_int
 1316 007e 0300     		movs	r3, r0
 1317 0080 FB61     		str	r3, [r7, #28]
 298:command.c     ****             if (ch < 0 || ch > 255) {
 1318              		.loc 1 298 0
 1319 0082 FB69     		ldr	r3, [r7, #28]
 1320 0084 002B     		cmp	r3, #0
 1321 0086 02DB     		blt	.L79
 1322              		.loc 1 298 0 is_stmt 0 discriminator 1
 1323 0088 FB69     		ldr	r3, [r7, #28]
 1324 008a FF2B     		cmp	r3, #255
 1325 008c 07DD     		ble	.L80
 1326              	.L79:
 299:command.c     ****                 cmd_usage(argv, cmd);
 1327              		.loc 1 299 0 is_stmt 1
 1328 008e 7A68     		ldr	r2, [r7, #4]
 1329 0090 FB68     		ldr	r3, [r7, #12]
 1330 0092 1100     		movs	r1, r2
 1331 0094 1800     		movs	r0, r3
 1332 0096 FFF7FEFF 		bl	cmd_usage
 300:command.c     ****                 return 1;
 1333              		.loc 1 300 0
 1334 009a 0123     		movs	r3, #1
 1335 009c 24E0     		b	.L82
 1336              	.L80:
 301:command.c     ****             }
 302:command.c     ****             until = ch;
 1337              		.loc 1 302 0
 1338 009e FB69     		ldr	r3, [r7, #28]
 1339 00a0 7B62     		str	r3, [r7, #36]
 1340              	.L76:
 1341              	.LBE5:
 303:command.c     ****         }
 304:command.c     ****     }
 305:command.c     ****     
 306:command.c     ****     gpib_address_talker(settings.address);
 1342              		.loc 1 306 0
 1343 00a2 144B     		ldr	r3, .L83+4
 1344 00a4 DB88     		ldrh	r3, [r3, #6]
ARM GAS  C:\Users\essele\AppData\Local\Temp\cckarkCe.s 			page 32


 1345 00a6 DBB2     		uxtb	r3, r3
 1346 00a8 1800     		movs	r0, r3
 1347 00aa FFF7FEFF 		bl	gpib_address_talker
 1348              	.L81:
 307:command.c     ****     
 308:command.c     ****     do {
 309:command.c     ****         len = gpib_read(until, &ended);
 1349              		.loc 1 309 0 discriminator 1
 1350 00ae 1423     		movs	r3, #20
 1351 00b0 FA18     		adds	r2, r7, r3
 1352 00b2 7B6A     		ldr	r3, [r7, #36]
 1353 00b4 1100     		movs	r1, r2
 1354 00b6 1800     		movs	r0, r3
 1355 00b8 FFF7FEFF 		bl	gpib_read
 1356 00bc 0300     		movs	r3, r0
 1357 00be BB61     		str	r3, [r7, #24]
 310:command.c     ****         serial_add_string("GOT: ");
 1358              		.loc 1 310 0 discriminator 1
 1359 00c0 0D4B     		ldr	r3, .L83+8
 1360 00c2 1800     		movs	r0, r3
 1361 00c4 FFF7FEFF 		bl	serial_add_string
 311:command.c     ****         serial_add(buf, len);
 1362              		.loc 1 311 0 discriminator 1
 1363 00c8 BA69     		ldr	r2, [r7, #24]
 1364 00ca 3B6A     		ldr	r3, [r7, #32]
 1365 00cc 1100     		movs	r1, r2
 1366 00ce 1800     		movs	r0, r3
 1367 00d0 FFF7FEFF 		bl	serial_add
 312:command.c     ****         serial_add_string("\r\n");
 1368              		.loc 1 312 0 discriminator 1
 1369 00d4 094B     		ldr	r3, .L83+12
 1370 00d6 1800     		movs	r0, r3
 1371 00d8 FFF7FEFF 		bl	serial_add_string
 313:command.c     ****     } while (ended == GPIB_NOT_ENDED);
 1372              		.loc 1 313 0 discriminator 1
 1373 00dc 7B69     		ldr	r3, [r7, #20]
 1374 00de 002B     		cmp	r3, #0
 1375 00e0 E5D0     		beq	.L81
 314:command.c     ****     serial_flush();
 1376              		.loc 1 314 0
 1377 00e2 FFF7FEFF 		bl	serial_flush
 315:command.c     ****     return 0;
 1378              		.loc 1 315 0
 1379 00e6 0023     		movs	r3, #0
 1380              	.L82:
 316:command.c     **** }
 1381              		.loc 1 316 0 discriminator 1
 1382 00e8 1800     		movs	r0, r3
 1383 00ea BD46     		mov	sp, r7
 1384 00ec 0AB0     		add	sp, sp, #40
 1385              		@ sp needed
 1386 00ee 80BD     		pop	{r7, pc}
 1387              	.L84:
 1388              		.align	2
 1389              	.L83:
 1390 00f0 94000000 		.word	.LC6
 1391 00f4 00000000 		.word	settings
ARM GAS  C:\Users\essele\AppData\Local\Temp\cckarkCe.s 			page 33


 1392 00f8 A8050000 		.word	.LC65
 1393 00fc B0050000 		.word	.LC67
 1394              		.cfi_endproc
 1395              	.LFE43:
 1396              		.size	cmd_read, .-cmd_read
 1397              		.section	.rodata
 1398 05b3 00       		.align	2
 1399              	.LC70:
 1400 05b4 252D3130 		.ascii	"%-10.10s = %d\000"
 1400      2E313073 
 1400      203D2025 
 1400      6400
 1401 05c2 0000     		.align	2
 1402              	.LC72:
 1403 05c4 20282573 		.ascii	" (%s)\000"
 1403      2900
 1404              		.section	.text.cmd_config,"ax",%progbits
 1405              		.align	2
 1406              		.global	cmd_config
 1407              		.code	16
 1408              		.thumb_func
 1409              		.type	cmd_config, %function
 1410              	cmd_config:
 1411              	.LFB44:
 317:command.c     **** 
 318:command.c     **** /**
 319:command.c     ****  * List out all items of settings that can be set by commands
 320:command.c     ****  */
 321:command.c     **** int cmd_config(char *argv[], int argc, const struct cmd *cmd) {
 1412              		.loc 1 321 0
 1413              		.cfi_startproc
 1414              		@ args = 0, pretend = 0, frame = 32
 1415              		@ frame_needed = 1, uses_anonymous_args = 0
 1416 0000 80B5     		push	{r7, lr}
 1417              		.cfi_def_cfa_offset 8
 1418              		.cfi_offset 7, -8
 1419              		.cfi_offset 14, -4
 1420 0002 88B0     		sub	sp, sp, #32
 1421              		.cfi_def_cfa_offset 40
 1422 0004 00AF     		add	r7, sp, #0
 1423              		.cfi_def_cfa_register 7
 1424 0006 F860     		str	r0, [r7, #12]
 1425 0008 B960     		str	r1, [r7, #8]
 1426 000a 7A60     		str	r2, [r7, #4]
 322:command.c     ****     if (argc != 1) {
 1427              		.loc 1 322 0
 1428 000c BB68     		ldr	r3, [r7, #8]
 1429 000e 012B     		cmp	r3, #1
 1430 0010 07D0     		beq	.L86
 323:command.c     ****         cmd_usage(argv, cmd);
 1431              		.loc 1 323 0
 1432 0012 7A68     		ldr	r2, [r7, #4]
 1433 0014 FB68     		ldr	r3, [r7, #12]
 1434 0016 1100     		movs	r1, r2
 1435 0018 1800     		movs	r0, r3
 1436 001a FFF7FEFF 		bl	cmd_usage
 324:command.c     ****         return 1;
ARM GAS  C:\Users\essele\AppData\Local\Temp\cckarkCe.s 			page 34


 1437              		.loc 1 324 0
 1438 001e 0123     		movs	r3, #1
 1439 0020 5AE0     		b	.L87
 1440              	.L86:
 325:command.c     ****     }
 326:command.c     ****     // Now look through the commands, finding ones referencing the config
 327:command.c     ****     int i = 0;
 1441              		.loc 1 327 0
 1442 0022 0023     		movs	r3, #0
 1443 0024 FB61     		str	r3, [r7, #28]
 328:command.c     ****     while (commands[i].name != NULL) {
 1444              		.loc 1 328 0
 1445 0026 50E0     		b	.L88
 1446              	.L95:
 329:command.c     ****         if (commands[i].setting != NULL) {
 1447              		.loc 1 329 0
 1448 0028 2D4A     		ldr	r2, .L96
 1449 002a FB69     		ldr	r3, [r7, #28]
 1450 002c 5B01     		lsls	r3, r3, #5
 1451 002e D318     		adds	r3, r2, r3
 1452 0030 0833     		adds	r3, r3, #8
 1453 0032 1B68     		ldr	r3, [r3]
 1454 0034 002B     		cmp	r3, #0
 1455 0036 45D0     		beq	.L89
 1456              	.LBB6:
 330:command.c     ****             uint16_t value = *(commands[i].setting);
 1457              		.loc 1 330 0
 1458 0038 294A     		ldr	r2, .L96
 1459 003a FB69     		ldr	r3, [r7, #28]
 1460 003c 5B01     		lsls	r3, r3, #5
 1461 003e D318     		adds	r3, r2, r3
 1462 0040 0833     		adds	r3, r3, #8
 1463 0042 1A68     		ldr	r2, [r3]
 1464 0044 1223     		movs	r3, #18
 1465 0046 FB18     		adds	r3, r7, r3
 1466 0048 1288     		ldrh	r2, [r2]
 1467 004a 1A80     		strh	r2, [r3]
 331:command.c     ****             char    *meaning = NULL;
 1468              		.loc 1 331 0
 1469 004c 0023     		movs	r3, #0
 1470 004e BB61     		str	r3, [r7, #24]
 332:command.c     ****             
 333:command.c     ****             if (commands[i].meanings != NULL) {
 1471              		.loc 1 333 0
 1472 0050 234A     		ldr	r2, .L96
 1473 0052 FB69     		ldr	r3, [r7, #28]
 1474 0054 5B01     		lsls	r3, r3, #5
 1475 0056 D318     		adds	r3, r2, r3
 1476 0058 1833     		adds	r3, r3, #24
 1477 005a 1B68     		ldr	r3, [r3]
 1478 005c 002B     		cmp	r3, #0
 1479 005e 19D0     		beq	.L90
 1480              	.LBB7:
 334:command.c     ****                 const struct item_meaning *m = commands[i].meanings;
 1481              		.loc 1 334 0
 1482 0060 1F4A     		ldr	r2, .L96
 1483 0062 FB69     		ldr	r3, [r7, #28]
ARM GAS  C:\Users\essele\AppData\Local\Temp\cckarkCe.s 			page 35


 1484 0064 5B01     		lsls	r3, r3, #5
 1485 0066 D318     		adds	r3, r2, r3
 1486 0068 1833     		adds	r3, r3, #24
 1487 006a 1B68     		ldr	r3, [r3]
 1488 006c 7B61     		str	r3, [r7, #20]
 335:command.c     ****                 while (m->meaning != NULL) {
 1489              		.loc 1 335 0
 1490 006e 0DE0     		b	.L91
 1491              	.L93:
 336:command.c     ****                     if (m->value == value) {
 1492              		.loc 1 336 0
 1493 0070 7B69     		ldr	r3, [r7, #20]
 1494 0072 1A68     		ldr	r2, [r3]
 1495 0074 1223     		movs	r3, #18
 1496 0076 FB18     		adds	r3, r7, r3
 1497 0078 1B88     		ldrh	r3, [r3]
 1498 007a 9A42     		cmp	r2, r3
 1499 007c 03D1     		bne	.L92
 337:command.c     ****                         meaning = m->meaning;
 1500              		.loc 1 337 0
 1501 007e 7B69     		ldr	r3, [r7, #20]
 1502 0080 5B68     		ldr	r3, [r3, #4]
 1503 0082 BB61     		str	r3, [r7, #24]
 338:command.c     ****                         break;
 1504              		.loc 1 338 0
 1505 0084 06E0     		b	.L90
 1506              	.L92:
 339:command.c     ****                     }
 340:command.c     ****                     m++;
 1507              		.loc 1 340 0
 1508 0086 7B69     		ldr	r3, [r7, #20]
 1509 0088 0833     		adds	r3, r3, #8
 1510 008a 7B61     		str	r3, [r7, #20]
 1511              	.L91:
 335:command.c     ****                     if (m->value == value) {
 1512              		.loc 1 335 0
 1513 008c 7B69     		ldr	r3, [r7, #20]
 1514 008e 5B68     		ldr	r3, [r3, #4]
 1515 0090 002B     		cmp	r3, #0
 1516 0092 EDD1     		bne	.L93
 1517              	.L90:
 1518              	.LBE7:
 341:command.c     ****                 }
 342:command.c     ****             }
 343:command.c     ****             serial_printf("%-10.10s = %d", commands[i].name, value);
 1519              		.loc 1 343 0
 1520 0094 124B     		ldr	r3, .L96
 1521 0096 FA69     		ldr	r2, [r7, #28]
 1522 0098 5201     		lsls	r2, r2, #5
 1523 009a D158     		ldr	r1, [r2, r3]
 1524 009c 1223     		movs	r3, #18
 1525 009e FB18     		adds	r3, r7, r3
 1526 00a0 1A88     		ldrh	r2, [r3]
 1527 00a2 104B     		ldr	r3, .L96+4
 1528 00a4 1800     		movs	r0, r3
 1529 00a6 FFF7FEFF 		bl	serial_printf
 344:command.c     ****             if (meaning) {
ARM GAS  C:\Users\essele\AppData\Local\Temp\cckarkCe.s 			page 36


 1530              		.loc 1 344 0
 1531 00aa BB69     		ldr	r3, [r7, #24]
 1532 00ac 002B     		cmp	r3, #0
 1533 00ae 05D0     		beq	.L94
 345:command.c     ****                 serial_printf(" (%s)", meaning);
 1534              		.loc 1 345 0
 1535 00b0 BA69     		ldr	r2, [r7, #24]
 1536 00b2 0D4B     		ldr	r3, .L96+8
 1537 00b4 1100     		movs	r1, r2
 1538 00b6 1800     		movs	r0, r3
 1539 00b8 FFF7FEFF 		bl	serial_printf
 1540              	.L94:
 346:command.c     ****             }
 347:command.c     ****             serial_printf("\r\n");
 1541              		.loc 1 347 0
 1542 00bc 0B4B     		ldr	r3, .L96+12
 1543 00be 1800     		movs	r0, r3
 1544 00c0 FFF7FEFF 		bl	serial_printf
 1545              	.L89:
 1546              	.LBE6:
 348:command.c     ****         }
 349:command.c     ****         i++;
 1547              		.loc 1 349 0
 1548 00c4 FB69     		ldr	r3, [r7, #28]
 1549 00c6 0133     		adds	r3, r3, #1
 1550 00c8 FB61     		str	r3, [r7, #28]
 1551              	.L88:
 328:command.c     ****         if (commands[i].setting != NULL) {
 1552              		.loc 1 328 0
 1553 00ca 054B     		ldr	r3, .L96
 1554 00cc FA69     		ldr	r2, [r7, #28]
 1555 00ce 5201     		lsls	r2, r2, #5
 1556 00d0 D358     		ldr	r3, [r2, r3]
 1557 00d2 002B     		cmp	r3, #0
 1558 00d4 A8D1     		bne	.L95
 350:command.c     ****     }   
 351:command.c     ****     return 0;
 1559              		.loc 1 351 0
 1560 00d6 0023     		movs	r3, #0
 1561              	.L87:
 352:command.c     **** }
 1562              		.loc 1 352 0
 1563 00d8 1800     		movs	r0, r3
 1564 00da BD46     		mov	sp, r7
 1565 00dc 08B0     		add	sp, sp, #32
 1566              		@ sp needed
 1567 00de 80BD     		pop	{r7, pc}
 1568              	.L97:
 1569              		.align	2
 1570              	.L96:
 1571 00e0 00000000 		.word	commands
 1572 00e4 B4050000 		.word	.LC70
 1573 00e8 C4050000 		.word	.LC72
 1574 00ec B0050000 		.word	.LC67
 1575              		.cfi_endproc
 1576              	.LFE44:
 1577              		.size	cmd_config, .-cmd_config
ARM GAS  C:\Users\essele\AppData\Local\Temp\cckarkCe.s 			page 37


 1578              		.section	.rodata
 1579 05ca 0000     		.align	2
 1580              	.LC75:
 1581 05cc 79617567 		.ascii	"yaugi %d.%d by Lee Essen\015\012\000"
 1581      69202564 
 1581      2E256420 
 1581      6279204C 
 1581      65652045 
 1582              		.section	.text.helper_version,"ax",%progbits
 1583              		.align	2
 1584              		.global	helper_version
 1585              		.code	16
 1586              		.thumb_func
 1587              		.type	helper_version, %function
 1588              	helper_version:
 1589              	.LFB45:
 353:command.c     **** 
 354:command.c     **** 
 355:command.c     **** int helper_version() {
 1590              		.loc 1 355 0
 1591              		.cfi_startproc
 1592              		@ args = 0, pretend = 0, frame = 0
 1593              		@ frame_needed = 1, uses_anonymous_args = 0
 1594 0000 80B5     		push	{r7, lr}
 1595              		.cfi_def_cfa_offset 8
 1596              		.cfi_offset 7, -8
 1597              		.cfi_offset 14, -4
 1598 0002 00AF     		add	r7, sp, #0
 1599              		.cfi_def_cfa_register 7
 356:command.c     ****     serial_printf("yaugi %d.%d by Lee Essen\r\n", MAJOR_VERSION, MINOR_VERSION);
 1600              		.loc 1 356 0
 1601 0004 044B     		ldr	r3, .L100
 1602 0006 0222     		movs	r2, #2
 1603 0008 0121     		movs	r1, #1
 1604 000a 1800     		movs	r0, r3
 1605 000c FFF7FEFF 		bl	serial_printf
 357:command.c     ****     return 0;
 1606              		.loc 1 357 0
 1607 0010 0023     		movs	r3, #0
 358:command.c     **** }
 1608              		.loc 1 358 0
 1609 0012 1800     		movs	r0, r3
 1610 0014 BD46     		mov	sp, r7
 1611              		@ sp needed
 1612 0016 80BD     		pop	{r7, pc}
 1613              	.L101:
 1614              		.align	2
 1615              	.L100:
 1616 0018 CC050000 		.word	.LC75
 1617              		.cfi_endproc
 1618              	.LFE45:
 1619              		.size	helper_version, .-helper_version
 1620              		.section	.rodata
 1621 05e7 00       		.align	2
 1622              	.LC77:
 1623 05e8 70696E20 		.ascii	"pin status = %04x\015\012\000"
 1623      73746174 
ARM GAS  C:\Users\essele\AppData\Local\Temp\cckarkCe.s 			page 38


 1623      7573203D 
 1623      20253034 
 1623      780D0A00 
 1624              		.section	.text.helper_gpiball,"ax",%progbits
 1625              		.align	2
 1626              		.global	helper_gpiball
 1627              		.code	16
 1628              		.thumb_func
 1629              		.type	helper_gpiball, %function
 1630              	helper_gpiball:
 1631              	.LFB46:
 359:command.c     ****  
 360:command.c     **** 
 361:command.c     **** int helper_gpiball() {
 1632              		.loc 1 361 0
 1633              		.cfi_startproc
 1634              		@ args = 0, pretend = 0, frame = 8
 1635              		@ frame_needed = 1, uses_anonymous_args = 0
 1636 0000 90B5     		push	{r4, r7, lr}
 1637              		.cfi_def_cfa_offset 12
 1638              		.cfi_offset 4, -12
 1639              		.cfi_offset 7, -8
 1640              		.cfi_offset 14, -4
 1641 0002 83B0     		sub	sp, sp, #12
 1642              		.cfi_def_cfa_offset 24
 1643 0004 00AF     		add	r7, sp, #0
 1644              		.cfi_def_cfa_register 7
 362:command.c     ****     uint16_t v = gpib_readall();
 1645              		.loc 1 362 0
 1646 0006 BC1D     		adds	r4, r7, #6
 1647 0008 FFF7FEFF 		bl	gpib_readall
 1648 000c 0300     		movs	r3, r0
 1649 000e 2380     		strh	r3, [r4]
 363:command.c     ****     serial_printf("pin status = %04x\r\n", v);
 1650              		.loc 1 363 0
 1651 0010 BB1D     		adds	r3, r7, #6
 1652 0012 1A88     		ldrh	r2, [r3]
 1653 0014 044B     		ldr	r3, .L104
 1654 0016 1100     		movs	r1, r2
 1655 0018 1800     		movs	r0, r3
 1656 001a FFF7FEFF 		bl	serial_printf
 364:command.c     ****     return 0;
 1657              		.loc 1 364 0
 1658 001e 0023     		movs	r3, #0
 365:command.c     **** }
 1659              		.loc 1 365 0
 1660 0020 1800     		movs	r0, r3
 1661 0022 BD46     		mov	sp, r7
 1662 0024 03B0     		add	sp, sp, #12
 1663              		@ sp needed
 1664 0026 90BD     		pop	{r4, r7, pc}
 1665              	.L105:
 1666              		.align	2
 1667              	.L104:
 1668 0028 E8050000 		.word	.LC77
 1669              		.cfi_endproc
 1670              	.LFE46:
ARM GAS  C:\Users\essele\AppData\Local\Temp\cckarkCe.s 			page 39


 1671              		.size	helper_gpiball, .-helper_gpiball
 1672              		.section	.text.helper_clr,"ax",%progbits
 1673              		.align	2
 1674              		.global	helper_clr
 1675              		.code	16
 1676              		.thumb_func
 1677              		.type	helper_clr, %function
 1678              	helper_clr:
 1679              	.LFB47:
 366:command.c     **** 
 367:command.c     **** /**
 368:command.c     ****  * Send the selected device clear command (needs to be tested)
 369:command.c     ****  */
 370:command.c     **** int helper_clr() {
 1680              		.loc 1 370 0
 1681              		.cfi_startproc
 1682              		@ args = 0, pretend = 0, frame = 0
 1683              		@ frame_needed = 1, uses_anonymous_args = 0
 1684 0000 80B5     		push	{r7, lr}
 1685              		.cfi_def_cfa_offset 8
 1686              		.cfi_offset 7, -8
 1687              		.cfi_offset 14, -4
 1688 0002 00AF     		add	r7, sp, #0
 1689              		.cfi_def_cfa_register 7
 371:command.c     ****     gpib_send_SDC();
 1690              		.loc 1 371 0
 1691 0004 FFF7FEFF 		bl	gpib_send_SDC
 372:command.c     ****     return 0;
 1692              		.loc 1 372 0
 1693 0008 0023     		movs	r3, #0
 373:command.c     **** }
 1694              		.loc 1 373 0
 1695 000a 1800     		movs	r0, r3
 1696 000c BD46     		mov	sp, r7
 1697              		@ sp needed
 1698 000e 80BD     		pop	{r7, pc}
 1699              		.cfi_endproc
 1700              	.LFE47:
 1701              		.size	helper_clr, .-helper_clr
 1702              		.section	.text.helper_ifc,"ax",%progbits
 1703              		.align	2
 1704              		.global	helper_ifc
 1705              		.code	16
 1706              		.thumb_func
 1707              		.type	helper_ifc, %function
 1708              	helper_ifc:
 1709              	.LFB48:
 374:command.c     **** int helper_ifc() {
 1710              		.loc 1 374 0
 1711              		.cfi_startproc
 1712              		@ args = 0, pretend = 0, frame = 0
 1713              		@ frame_needed = 1, uses_anonymous_args = 0
 1714 0000 80B5     		push	{r7, lr}
 1715              		.cfi_def_cfa_offset 8
 1716              		.cfi_offset 7, -8
 1717              		.cfi_offset 14, -4
 1718 0002 00AF     		add	r7, sp, #0
ARM GAS  C:\Users\essele\AppData\Local\Temp\cckarkCe.s 			page 40


 1719              		.cfi_def_cfa_register 7
 375:command.c     ****     gpib_interface_clear();
 1720              		.loc 1 375 0
 1721 0004 FFF7FEFF 		bl	gpib_interface_clear
 376:command.c     ****     return 0;
 1722              		.loc 1 376 0
 1723 0008 0023     		movs	r3, #0
 377:command.c     **** }
 1724              		.loc 1 377 0
 1725 000a 1800     		movs	r0, r3
 1726 000c BD46     		mov	sp, r7
 1727              		@ sp needed
 1728 000e 80BD     		pop	{r7, pc}
 1729              		.cfi_endproc
 1730              	.LFE48:
 1731              		.size	helper_ifc, .-helper_ifc
 1732              		.section	.text.helper_llo,"ax",%progbits
 1733              		.align	2
 1734              		.global	helper_llo
 1735              		.code	16
 1736              		.thumb_func
 1737              		.type	helper_llo, %function
 1738              	helper_llo:
 1739              	.LFB49:
 378:command.c     **** int helper_llo() {
 1740              		.loc 1 378 0
 1741              		.cfi_startproc
 1742              		@ args = 0, pretend = 0, frame = 0
 1743              		@ frame_needed = 1, uses_anonymous_args = 0
 1744 0000 80B5     		push	{r7, lr}
 1745              		.cfi_def_cfa_offset 8
 1746              		.cfi_offset 7, -8
 1747              		.cfi_offset 14, -4
 1748 0002 00AF     		add	r7, sp, #0
 1749              		.cfi_def_cfa_register 7
 379:command.c     ****     gpib_send_LLO();
 1750              		.loc 1 379 0
 1751 0004 FFF7FEFF 		bl	gpib_send_LLO
 380:command.c     ****     return 0;
 1752              		.loc 1 380 0
 1753 0008 0023     		movs	r3, #0
 381:command.c     **** }
 1754              		.loc 1 381 0
 1755 000a 1800     		movs	r0, r3
 1756 000c BD46     		mov	sp, r7
 1757              		@ sp needed
 1758 000e 80BD     		pop	{r7, pc}
 1759              		.cfi_endproc
 1760              	.LFE49:
 1761              		.size	helper_llo, .-helper_llo
 1762              		.section	.text.helper_loc,"ax",%progbits
 1763              		.align	2
 1764              		.global	helper_loc
 1765              		.code	16
 1766              		.thumb_func
 1767              		.type	helper_loc, %function
 1768              	helper_loc:
ARM GAS  C:\Users\essele\AppData\Local\Temp\cckarkCe.s 			page 41


 1769              	.LFB50:
 382:command.c     **** int helper_loc() {
 1770              		.loc 1 382 0
 1771              		.cfi_startproc
 1772              		@ args = 0, pretend = 0, frame = 0
 1773              		@ frame_needed = 1, uses_anonymous_args = 0
 1774 0000 80B5     		push	{r7, lr}
 1775              		.cfi_def_cfa_offset 8
 1776              		.cfi_offset 7, -8
 1777              		.cfi_offset 14, -4
 1778 0002 00AF     		add	r7, sp, #0
 1779              		.cfi_def_cfa_register 7
 383:command.c     ****     gpib_send_GTL();
 1780              		.loc 1 383 0
 1781 0004 FFF7FEFF 		bl	gpib_send_GTL
 384:command.c     ****     return 0;
 1782              		.loc 1 384 0
 1783 0008 0023     		movs	r3, #0
 385:command.c     **** }
 1784              		.loc 1 385 0
 1785 000a 1800     		movs	r0, r3
 1786 000c BD46     		mov	sp, r7
 1787              		@ sp needed
 1788 000e 80BD     		pop	{r7, pc}
 1789              		.cfi_endproc
 1790              	.LFE50:
 1791              		.size	helper_loc, .-helper_loc
 1792              		.global	no_usage_args
 1793              		.section	.rodata
 1794              		.align	2
 1795              	.LC79:
 1796 05fc 00       		.ascii	"\000"
 1797              		.data
 1798              		.align	2
 1799              		.type	no_usage_args, %object
 1800              		.size	no_usage_args, 8
 1801              	no_usage_args:
 1802 0000 FC050000 		.word	.LC79
 1803 0004 00000000 		.word	0
 1804              		.global	auto_means
 1805              		.section	.rodata
 1806 05fd 000000   		.align	2
 1807              	.LC80:
 1808 0600 72656164 		.ascii	"read-after-write disabled\000"
 1808      2D616674 
 1808      65722D77 
 1808      72697465 
 1808      20646973 
 1809 061a 0000     		.align	2
 1810              	.LC81:
 1811 061c 72656164 		.ascii	"read-after-write always\000"
 1811      2D616674 
 1811      65722D77 
 1811      72697465 
 1811      20616C77 
 1812              		.align	2
 1813              	.LC82:
ARM GAS  C:\Users\essele\AppData\Local\Temp\cckarkCe.s 			page 42


 1814 0634 72656164 		.ascii	"read-after-write if write contained ?\000"
 1814      2D616674 
 1814      65722D77 
 1814      72697465 
 1814      20696620 
 1815 065a 0000     		.align	2
 1816              		.type	auto_means, %object
 1817              		.size	auto_means, 32
 1818              	auto_means:
 1819 065c 00000000 		.word	0
 1820 0660 00060000 		.word	.LC80
 1821 0664 01000000 		.word	1
 1822 0668 1C060000 		.word	.LC81
 1823 066c 02000000 		.word	2
 1824 0670 34060000 		.word	.LC82
 1825 0674 00000000 		.word	0
 1826 0678 00000000 		.word	0
 1827              		.global	enable_disable_means
 1828              		.align	2
 1829              	.LC83:
 1830 067c 64697361 		.ascii	"disabled\000"
 1830      626C6564 
 1830      00
 1831 0685 000000   		.align	2
 1832              	.LC84:
 1833 0688 656E6162 		.ascii	"enabled\000"
 1833      6C656400 
 1834              		.align	2
 1835              		.type	enable_disable_means, %object
 1836              		.size	enable_disable_means, 24
 1837              	enable_disable_means:
 1838 0690 00000000 		.word	0
 1839 0694 7C060000 		.word	.LC83
 1840 0698 01000000 		.word	1
 1841 069c 88060000 		.word	.LC84
 1842 06a0 00000000 		.word	0
 1843 06a4 00000000 		.word	0
 1844              		.global	eos_means
 1845              		.align	2
 1846              	.LC85:
 1847 06a8 61707065 		.ascii	"append CR+LF to GPIB output\000"
 1847      6E642043 
 1847      522B4C46 
 1847      20746F20 
 1847      47504942 
 1848              		.align	2
 1849              	.LC86:
 1850 06c4 61707065 		.ascii	"append CR to GPIB output\000"
 1850      6E642043 
 1850      5220746F 
 1850      20475049 
 1850      42206F75 
 1851 06dd 000000   		.align	2
 1852              	.LC87:
 1853 06e0 61707065 		.ascii	"append LF to GPIB output\000"
 1853      6E64204C 
 1853      4620746F 
ARM GAS  C:\Users\essele\AppData\Local\Temp\cckarkCe.s 			page 43


 1853      20475049 
 1853      42206F75 
 1854 06f9 000000   		.align	2
 1855              	.LC88:
 1856 06fc 646F206E 		.ascii	"do not append to GPIB output\000"
 1856      6F742061 
 1856      7070656E 
 1856      6420746F 
 1856      20475049 
 1857 0719 000000   		.align	2
 1858              		.type	eos_means, %object
 1859              		.size	eos_means, 40
 1860              	eos_means:
 1861 071c 00000000 		.word	0
 1862 0720 A8060000 		.word	.LC85
 1863 0724 01000000 		.word	1
 1864 0728 C4060000 		.word	.LC86
 1865 072c 02000000 		.word	2
 1866 0730 E0060000 		.word	.LC87
 1867 0734 03000000 		.word	3
 1868 0738 FC060000 		.word	.LC88
 1869 073c 00000000 		.word	0
 1870 0740 00000000 		.word	0
 1871              		.global	enable_disable_usage
 1872              		.align	2
 1873              	.LC89:
 1874 0744 5B307C31 		.ascii	"[0|1]\000"
 1874      5D00
 1875              		.data
 1876              		.align	2
 1877              		.type	enable_disable_usage, %object
 1878              		.size	enable_disable_usage, 8
 1879              	enable_disable_usage:
 1880 0008 44070000 		.word	.LC89
 1881 000c 00000000 		.word	0
 1882              		.section	.rodata
 1883 074a 0000     		.align	2
 1884              	.LC90:
 1885 074c 5B504144 		.ascii	"[PAD]\000"
 1885      5D00
 1886 0752 0000     		.align	2
 1887              	.LC91:
 1888 0754 09776865 		.ascii	"\011where PAD is between 0 and 30\000"
 1888      72652050 
 1888      41442069 
 1888      73206265 
 1888      74776565 
 1889              		.data
 1890              		.align	2
 1891              		.type	__compound_literal.0, %object
 1892              		.size	__compound_literal.0, 12
 1893              	__compound_literal.0:
 1894 0010 4C070000 		.word	.LC90
 1895 0014 54070000 		.word	.LC91
 1896 0018 00000000 		.word	0
 1897              		.section	.rodata
 1898 0773 00       		.align	2
ARM GAS  C:\Users\essele\AppData\Local\Temp\cckarkCe.s 			page 44


 1899              	.LC92:
 1900 0774 5B307C31 		.ascii	"[0|1|2]\000"
 1900      7C325D00 
 1901              		.data
 1902              		.align	2
 1903              		.type	__compound_literal.1, %object
 1904              		.size	__compound_literal.1, 8
 1905              	__compound_literal.1:
 1906 001c 74070000 		.word	.LC92
 1907 0020 00000000 		.word	0
 1908              		.section	.rodata
 1909              		.align	2
 1910              	.LC93:
 1911 077c 5B307C31 		.ascii	"[0|1|2|3]\000"
 1911      7C327C33 
 1911      5D00
 1912              		.data
 1913              		.align	2
 1914              		.type	__compound_literal.2, %object
 1915              		.size	__compound_literal.2, 8
 1916              	__compound_literal.2:
 1917 0024 7C070000 		.word	.LC93
 1918 0028 00000000 		.word	0
 1919              		.section	.rodata
 1920 0786 0000     		.align	2
 1921              	.LC94:
 1922 0788 5B636861 		.ascii	"[char]\000"
 1922      725D00
 1923 078f 00       		.align	2
 1924              	.LC95:
 1925 0790 09776865 		.ascii	"\011where char is between 0 and 255\000"
 1925      72652063 
 1925      68617220 
 1925      69732062 
 1925      65747765 
 1926              		.data
 1927              		.align	2
 1928              		.type	__compound_literal.3, %object
 1929              		.size	__compound_literal.3, 12
 1930              	__compound_literal.3:
 1931 002c 88070000 		.word	.LC94
 1932 0030 90070000 		.word	.LC95
 1933 0034 00000000 		.word	0
 1934              		.section	.rodata
 1935 07b1 000000   		.align	2
 1936              	.LC96:
 1937 07b4 5B636F6D 		.ascii	"[command]\000"
 1937      6D616E64 
 1937      5D00
 1938              		.data
 1939              		.align	2
 1940              		.type	__compound_literal.4, %object
 1941              		.size	__compound_literal.4, 8
 1942              	__compound_literal.4:
 1943 0038 B4070000 		.word	.LC96
 1944 003c 00000000 		.word	0
 1945              		.section	.rodata
ARM GAS  C:\Users\essele\AppData\Local\Temp\cckarkCe.s 			page 45


 1946 07be 0000     		.align	2
 1947              	.LC97:
 1948 07c0 5B454F49 		.ascii	"[EOI | char]\000"
 1948      207C2063 
 1948      6861725D 
 1948      00
 1949              		.data
 1950              		.align	2
 1951              		.type	__compound_literal.5, %object
 1952              		.size	__compound_literal.5, 12
 1953              	__compound_literal.5:
 1954 0040 C0070000 		.word	.LC97
 1955 0044 90070000 		.word	.LC95
 1956 0048 00000000 		.word	0
 1957              		.section	.rodata
 1958 07cd 000000   		.align	2
 1959              	.LC98:
 1960 07d0 5B74696D 		.ascii	"[time]\000"
 1960      655D00
 1961 07d7 00       		.align	2
 1962              	.LC99:
 1963 07d8 09776865 		.ascii	"\011where time is between 1 and 3000\000"
 1963      72652074 
 1963      696D6520 
 1963      69732062 
 1963      65747765 
 1964              		.data
 1965              		.align	2
 1966              		.type	__compound_literal.6, %object
 1967              		.size	__compound_literal.6, 12
 1968              	__compound_literal.6:
 1969 004c D0070000 		.word	.LC98
 1970 0050 D8070000 		.word	.LC99
 1971 0054 00000000 		.word	0
 1972              		.text
 1973              	.Letext0:
 1974              		.file 2 "c:\\program files (x86)\\cypress\\psoc creator\\4.2\\psoc creator\\import\\gnu\\arm\\5.4.
 1975              		.file 3 "c:\\program files (x86)\\cypress\\psoc creator\\4.2\\psoc creator\\import\\gnu\\arm\\5.4.
 1976              		.file 4 "settings.h"
 1977              		.section	.debug_info,"",%progbits
 1978              	.Ldebug_info0:
 1979 0000 83070000 		.4byte	0x783
 1980 0004 0400     		.2byte	0x4
 1981 0006 00000000 		.4byte	.Ldebug_abbrev0
 1982 000a 04       		.byte	0x4
 1983 000b 01       		.uleb128 0x1
 1984 000c 61010000 		.4byte	.LASF67
 1985 0010 0C       		.byte	0xc
 1986 0011 38030000 		.4byte	.LASF68
 1987 0015 55000000 		.4byte	.LASF69
 1988 0019 00000000 		.4byte	.Ldebug_ranges0+0
 1989 001d 00000000 		.4byte	0
 1990 0021 00000000 		.4byte	.Ldebug_line0
 1991 0025 02       		.uleb128 0x2
 1992 0026 01       		.byte	0x1
 1993 0027 06       		.byte	0x6
 1994 0028 22020000 		.4byte	.LASF0
ARM GAS  C:\Users\essele\AppData\Local\Temp\cckarkCe.s 			page 46


 1995 002c 03       		.uleb128 0x3
 1996 002d 3B010000 		.4byte	.LASF3
 1997 0031 02       		.byte	0x2
 1998 0032 1D       		.byte	0x1d
 1999 0033 37000000 		.4byte	0x37
 2000 0037 02       		.uleb128 0x2
 2001 0038 01       		.byte	0x1
 2002 0039 08       		.byte	0x8
 2003 003a 53010000 		.4byte	.LASF1
 2004 003e 02       		.uleb128 0x2
 2005 003f 02       		.byte	0x2
 2006 0040 05       		.byte	0x5
 2007 0041 21000000 		.4byte	.LASF2
 2008 0045 03       		.uleb128 0x3
 2009 0046 96000000 		.4byte	.LASF4
 2010 004a 02       		.byte	0x2
 2011 004b 2B       		.byte	0x2b
 2012 004c 50000000 		.4byte	0x50
 2013 0050 02       		.uleb128 0x2
 2014 0051 02       		.byte	0x2
 2015 0052 07       		.byte	0x7
 2016 0053 78020000 		.4byte	.LASF5
 2017 0057 02       		.uleb128 0x2
 2018 0058 04       		.byte	0x4
 2019 0059 05       		.byte	0x5
 2020 005a 08010000 		.4byte	.LASF6
 2021 005e 03       		.uleb128 0x3
 2022 005f 13030000 		.4byte	.LASF7
 2023 0063 02       		.byte	0x2
 2024 0064 41       		.byte	0x41
 2025 0065 69000000 		.4byte	0x69
 2026 0069 02       		.uleb128 0x2
 2027 006a 04       		.byte	0x4
 2028 006b 07       		.byte	0x7
 2029 006c FA020000 		.4byte	.LASF8
 2030 0070 02       		.uleb128 0x2
 2031 0071 08       		.byte	0x8
 2032 0072 05       		.byte	0x5
 2033 0073 E4000000 		.4byte	.LASF9
 2034 0077 02       		.uleb128 0x2
 2035 0078 08       		.byte	0x8
 2036 0079 07       		.byte	0x7
 2037 007a 2E020000 		.4byte	.LASF10
 2038 007e 04       		.uleb128 0x4
 2039 007f 04       		.byte	0x4
 2040 0080 05       		.byte	0x5
 2041 0081 696E7400 		.ascii	"int\000"
 2042 0085 02       		.uleb128 0x2
 2043 0086 04       		.byte	0x4
 2044 0087 07       		.byte	0x7
 2045 0088 4E020000 		.4byte	.LASF11
 2046 008c 03       		.uleb128 0x3
 2047 008d AC000000 		.4byte	.LASF12
 2048 0091 03       		.byte	0x3
 2049 0092 18       		.byte	0x18
 2050 0093 2C000000 		.4byte	0x2c
 2051 0097 03       		.uleb128 0x3
ARM GAS  C:\Users\essele\AppData\Local\Temp\cckarkCe.s 			page 47


 2052 0098 5B020000 		.4byte	.LASF13
 2053 009c 03       		.byte	0x3
 2054 009d 24       		.byte	0x24
 2055 009e 45000000 		.4byte	0x45
 2056 00a2 03       		.uleb128 0x3
 2057 00a3 45020000 		.4byte	.LASF14
 2058 00a7 03       		.byte	0x3
 2059 00a8 30       		.byte	0x30
 2060 00a9 5E000000 		.4byte	0x5e
 2061 00ad 02       		.uleb128 0x2
 2062 00ae 04       		.byte	0x4
 2063 00af 04       		.byte	0x4
 2064 00b0 D9020000 		.4byte	.LASF15
 2065 00b4 02       		.uleb128 0x2
 2066 00b5 08       		.byte	0x8
 2067 00b6 04       		.byte	0x4
 2068 00b7 0C030000 		.4byte	.LASF16
 2069 00bb 02       		.uleb128 0x2
 2070 00bc 01       		.byte	0x1
 2071 00bd 08       		.byte	0x8
 2072 00be A0020000 		.4byte	.LASF17
 2073 00c2 02       		.uleb128 0x2
 2074 00c3 08       		.byte	0x8
 2075 00c4 04       		.byte	0x4
 2076 00c5 FF010000 		.4byte	.LASF18
 2077 00c9 02       		.uleb128 0x2
 2078 00ca 04       		.byte	0x4
 2079 00cb 07       		.byte	0x7
 2080 00cc 46000000 		.4byte	.LASF19
 2081 00d0 05       		.uleb128 0x5
 2082 00d1 04       		.byte	0x4
 2083 00d2 BB000000 		.4byte	0xbb
 2084 00d6 05       		.uleb128 0x5
 2085 00d7 04       		.byte	0x4
 2086 00d8 DC000000 		.4byte	0xdc
 2087 00dc 06       		.uleb128 0x6
 2088 00dd BB000000 		.4byte	0xbb
 2089 00e1 07       		.uleb128 0x7
 2090 00e2 D6000000 		.4byte	.LASF27
 2091 00e6 14       		.byte	0x14
 2092 00e7 04       		.byte	0x4
 2093 00e8 0D       		.byte	0xd
 2094 00e9 5A010000 		.4byte	0x15a
 2095 00ed 08       		.uleb128 0x8
 2096 00ee 2E030000 		.4byte	.LASF20
 2097 00f2 04       		.byte	0x4
 2098 00f3 0E       		.byte	0xe
 2099 00f4 A2000000 		.4byte	0xa2
 2100 00f8 00       		.byte	0
 2101 00f9 08       		.uleb128 0x8
 2102 00fa 00000000 		.4byte	.LASF21
 2103 00fe 04       		.byte	0x4
 2104 00ff 0F       		.byte	0xf
 2105 0100 97000000 		.4byte	0x97
 2106 0104 04       		.byte	0x4
 2107 0105 08       		.uleb128 0x8
 2108 0106 26010000 		.4byte	.LASF22
ARM GAS  C:\Users\essele\AppData\Local\Temp\cckarkCe.s 			page 48


 2109 010a 04       		.byte	0x4
 2110 010b 10       		.byte	0x10
 2111 010c 97000000 		.4byte	0x97
 2112 0110 06       		.byte	0x6
 2113 0111 08       		.uleb128 0x8
 2114 0112 C4000000 		.4byte	.LASF23
 2115 0116 04       		.byte	0x4
 2116 0117 11       		.byte	0x11
 2117 0118 97000000 		.4byte	0x97
 2118 011c 08       		.byte	0x8
 2119 011d 09       		.uleb128 0x9
 2120 011e 656F6900 		.ascii	"eoi\000"
 2121 0122 04       		.byte	0x4
 2122 0123 12       		.byte	0x12
 2123 0124 97000000 		.4byte	0x97
 2124 0128 0A       		.byte	0xa
 2125 0129 09       		.uleb128 0x9
 2126 012a 656F7300 		.ascii	"eos\000"
 2127 012e 04       		.byte	0x4
 2128 012f 13       		.byte	0x13
 2129 0130 97000000 		.4byte	0x97
 2130 0134 0C       		.byte	0xc
 2131 0135 08       		.uleb128 0x8
 2132 0136 0B020000 		.4byte	.LASF24
 2133 013a 04       		.byte	0x4
 2134 013b 14       		.byte	0x14
 2135 013c 97000000 		.4byte	0x97
 2136 0140 0E       		.byte	0xe
 2137 0141 08       		.uleb128 0x8
 2138 0142 8B020000 		.4byte	.LASF25
 2139 0146 04       		.byte	0x4
 2140 0147 15       		.byte	0x15
 2141 0148 97000000 		.4byte	0x97
 2142 014c 10       		.byte	0x10
 2143 014d 08       		.uleb128 0x8
 2144 014e F2000000 		.4byte	.LASF26
 2145 0152 04       		.byte	0x4
 2146 0153 16       		.byte	0x16
 2147 0154 97000000 		.4byte	0x97
 2148 0158 12       		.byte	0x12
 2149 0159 00       		.byte	0
 2150 015a 05       		.uleb128 0x5
 2151 015b 04       		.byte	0x4
 2152 015c 97000000 		.4byte	0x97
 2153 0160 07       		.uleb128 0x7
 2154 0161 2E010000 		.4byte	.LASF28
 2155 0165 08       		.byte	0x8
 2156 0166 01       		.byte	0x1
 2157 0167 31       		.byte	0x31
 2158 0168 85010000 		.4byte	0x185
 2159 016c 08       		.uleb128 0x8
 2160 016d A1000000 		.4byte	.LASF29
 2161 0171 01       		.byte	0x1
 2162 0172 32       		.byte	0x32
 2163 0173 7E000000 		.4byte	0x7e
 2164 0177 00       		.byte	0
 2165 0178 08       		.uleb128 0x8
ARM GAS  C:\Users\essele\AppData\Local\Temp\cckarkCe.s 			page 49


 2166 0179 2B000000 		.4byte	.LASF30
 2167 017d 01       		.byte	0x1
 2168 017e 33       		.byte	0x33
 2169 017f D0000000 		.4byte	0xd0
 2170 0183 04       		.byte	0x4
 2171 0184 00       		.byte	0
 2172 0185 0A       		.uleb128 0xa
 2173 0186 636D6400 		.ascii	"cmd\000"
 2174 018a 20       		.byte	0x20
 2175 018b 01       		.byte	0x1
 2176 018c 36       		.byte	0x36
 2177 018d FE010000 		.4byte	0x1fe
 2178 0191 08       		.uleb128 0x8
 2179 0192 EF010000 		.4byte	.LASF31
 2180 0196 01       		.byte	0x1
 2181 0197 37       		.byte	0x37
 2182 0198 D0000000 		.4byte	0xd0
 2183 019c 00       		.byte	0
 2184 019d 08       		.uleb128 0x8
 2185 019e DF000000 		.4byte	.LASF32
 2186 01a2 01       		.byte	0x1
 2187 01a3 38       		.byte	0x38
 2188 01a4 28020000 		.4byte	0x228
 2189 01a8 04       		.byte	0x4
 2190 01a9 08       		.uleb128 0x8
 2191 01aa 19000000 		.4byte	.LASF33
 2192 01ae 01       		.byte	0x1
 2193 01af 39       		.byte	0x39
 2194 01b0 5A010000 		.4byte	0x15a
 2195 01b4 08       		.byte	0x8
 2196 01b5 09       		.uleb128 0x9
 2197 01b6 6D696E00 		.ascii	"min\000"
 2198 01ba 01       		.byte	0x1
 2199 01bb 3A       		.byte	0x3a
 2200 01bc 97000000 		.4byte	0x97
 2201 01c0 0C       		.byte	0xc
 2202 01c1 09       		.uleb128 0x9
 2203 01c2 6D617800 		.ascii	"max\000"
 2204 01c6 01       		.byte	0x1
 2205 01c7 3B       		.byte	0x3b
 2206 01c8 97000000 		.4byte	0x97
 2207 01cc 0E       		.byte	0xe
 2208 01cd 08       		.uleb128 0x8
 2209 01ce A7000000 		.4byte	.LASF34
 2210 01d2 01       		.byte	0x1
 2211 01d3 41       		.byte	0x41
 2212 01d4 D6000000 		.4byte	0xd6
 2213 01d8 10       		.byte	0x10
 2214 01d9 08       		.uleb128 0x8
 2215 01da 13000000 		.4byte	.LASF35
 2216 01de 01       		.byte	0x1
 2217 01df 42       		.byte	0x42
 2218 01e0 2E020000 		.4byte	0x22e
 2219 01e4 14       		.byte	0x14
 2220 01e5 08       		.uleb128 0x8
 2221 01e6 CD000000 		.4byte	.LASF36
 2222 01ea 01       		.byte	0x1
ARM GAS  C:\Users\essele\AppData\Local\Temp\cckarkCe.s 			page 50


 2223 01eb 43       		.byte	0x43
 2224 01ec 34020000 		.4byte	0x234
 2225 01f0 18       		.byte	0x18
 2226 01f1 08       		.uleb128 0x8
 2227 01f2 FE000000 		.4byte	.LASF37
 2228 01f6 01       		.byte	0x1
 2229 01f7 44       		.byte	0x44
 2230 01f8 53020000 		.4byte	0x253
 2231 01fc 1C       		.byte	0x1c
 2232 01fd 00       		.byte	0
 2233 01fe 0B       		.uleb128 0xb
 2234 01ff 7E000000 		.4byte	0x7e
 2235 0203 17020000 		.4byte	0x217
 2236 0207 0C       		.uleb128 0xc
 2237 0208 17020000 		.4byte	0x217
 2238 020c 0C       		.uleb128 0xc
 2239 020d 7E000000 		.4byte	0x7e
 2240 0211 0C       		.uleb128 0xc
 2241 0212 1D020000 		.4byte	0x21d
 2242 0216 00       		.byte	0
 2243 0217 05       		.uleb128 0x5
 2244 0218 04       		.byte	0x4
 2245 0219 D0000000 		.4byte	0xd0
 2246 021d 05       		.uleb128 0x5
 2247 021e 04       		.byte	0x4
 2248 021f 23020000 		.4byte	0x223
 2249 0223 06       		.uleb128 0x6
 2250 0224 85010000 		.4byte	0x185
 2251 0228 05       		.uleb128 0x5
 2252 0229 04       		.byte	0x4
 2253 022a FE010000 		.4byte	0x1fe
 2254 022e 05       		.uleb128 0x5
 2255 022f 04       		.byte	0x4
 2256 0230 D6000000 		.4byte	0xd6
 2257 0234 05       		.uleb128 0x5
 2258 0235 04       		.byte	0x4
 2259 0236 3A020000 		.4byte	0x23a
 2260 023a 06       		.uleb128 0x6
 2261 023b 60010000 		.4byte	0x160
 2262 023f 0B       		.uleb128 0xb
 2263 0240 7E000000 		.4byte	0x7e
 2264 0244 53020000 		.4byte	0x253
 2265 0248 0C       		.uleb128 0xc
 2266 0249 17020000 		.4byte	0x217
 2267 024d 0C       		.uleb128 0xc
 2268 024e 7E000000 		.4byte	0x7e
 2269 0252 00       		.byte	0
 2270 0253 05       		.uleb128 0x5
 2271 0254 04       		.byte	0x4
 2272 0255 3F020000 		.4byte	0x23f
 2273 0259 0D       		.uleb128 0xd
 2274 025a 45010000 		.4byte	.LASF38
 2275 025e 01       		.byte	0x1
 2276 025f 4E       		.byte	0x4e
 2277 0260 7E000000 		.4byte	0x7e
 2278 0264 00000000 		.4byte	.LFB35
 2279 0268 DC000000 		.4byte	.LFE35-.LFB35
ARM GAS  C:\Users\essele\AppData\Local\Temp\cckarkCe.s 			page 51


 2280 026c 01       		.uleb128 0x1
 2281 026d 9C       		.byte	0x9c
 2282 026e 9B020000 		.4byte	0x29b
 2283 0272 0E       		.uleb128 0xe
 2284 0273 62756600 		.ascii	"buf\000"
 2285 0277 01       		.byte	0x1
 2286 0278 4E       		.byte	0x4e
 2287 0279 9B020000 		.4byte	0x29b
 2288 027d 02       		.uleb128 0x2
 2289 027e 91       		.byte	0x91
 2290 027f 6C       		.sleb128 -20
 2291 0280 0E       		.uleb128 0xe
 2292 0281 6C656E00 		.ascii	"len\000"
 2293 0285 01       		.byte	0x1
 2294 0286 4E       		.byte	0x4e
 2295 0287 7E000000 		.4byte	0x7e
 2296 028b 02       		.uleb128 0x2
 2297 028c 91       		.byte	0x91
 2298 028d 68       		.sleb128 -24
 2299 028e 0F       		.uleb128 0xf
 2300 028f 6900     		.ascii	"i\000"
 2301 0291 01       		.byte	0x1
 2302 0292 4F       		.byte	0x4f
 2303 0293 7E000000 		.4byte	0x7e
 2304 0297 02       		.uleb128 0x2
 2305 0298 91       		.byte	0x91
 2306 0299 74       		.sleb128 -12
 2307 029a 00       		.byte	0
 2308 029b 05       		.uleb128 0x5
 2309 029c 04       		.byte	0x4
 2310 029d 8C000000 		.4byte	0x8c
 2311 02a1 0D       		.uleb128 0xd
 2312 02a2 D2020000 		.4byte	.LASF39
 2313 02a6 01       		.byte	0x1
 2314 02a7 7D       		.byte	0x7d
 2315 02a8 7E000000 		.4byte	0x7e
 2316 02ac 00000000 		.4byte	.LFB36
 2317 02b0 40000000 		.4byte	.LFE36-.LFB36
 2318 02b4 01       		.uleb128 0x1
 2319 02b5 9C       		.byte	0x9c
 2320 02b6 C7020000 		.4byte	0x2c7
 2321 02ba 0E       		.uleb128 0xe
 2322 02bb 7600     		.ascii	"v\000"
 2323 02bd 01       		.byte	0x1
 2324 02be 7D       		.byte	0x7d
 2325 02bf D0000000 		.4byte	0xd0
 2326 02c3 02       		.uleb128 0x2
 2327 02c4 91       		.byte	0x91
 2328 02c5 74       		.sleb128 -12
 2329 02c6 00       		.byte	0
 2330 02c7 10       		.uleb128 0x10
 2331 02c8 B4000000 		.4byte	.LASF40
 2332 02cc 01       		.byte	0x1
 2333 02cd 87       		.byte	0x87
 2334 02ce 7E000000 		.4byte	0x7e
 2335 02d2 00000000 		.4byte	.LFB37
 2336 02d6 3C000000 		.4byte	.LFE37-.LFB37
ARM GAS  C:\Users\essele\AppData\Local\Temp\cckarkCe.s 			page 52


 2337 02da 01       		.uleb128 0x1
 2338 02db 9C       		.byte	0x9c
 2339 02dc F9020000 		.4byte	0x2f9
 2340 02e0 0E       		.uleb128 0xe
 2341 02e1 7600     		.ascii	"v\000"
 2342 02e3 01       		.byte	0x1
 2343 02e4 87       		.byte	0x87
 2344 02e5 D0000000 		.4byte	0xd0
 2345 02e9 02       		.uleb128 0x2
 2346 02ea 91       		.byte	0x91
 2347 02eb 6C       		.sleb128 -20
 2348 02ec 0F       		.uleb128 0xf
 2349 02ed 6900     		.ascii	"i\000"
 2350 02ef 01       		.byte	0x1
 2351 02f0 88       		.byte	0x88
 2352 02f1 7E000000 		.4byte	0x7e
 2353 02f5 02       		.uleb128 0x2
 2354 02f6 91       		.byte	0x91
 2355 02f7 74       		.sleb128 -12
 2356 02f8 00       		.byte	0
 2357 02f9 11       		.uleb128 0x11
 2358 02fa A5020000 		.4byte	.LASF42
 2359 02fe 01       		.byte	0x1
 2360 02ff 94       		.byte	0x94
 2361 0300 00000000 		.4byte	.LFB38
 2362 0304 94000000 		.4byte	.LFE38-.LFB38
 2363 0308 01       		.uleb128 0x1
 2364 0309 9C       		.byte	0x9c
 2365 030a 45030000 		.4byte	0x345
 2366 030e 0E       		.uleb128 0xe
 2367 030f 62756600 		.ascii	"buf\000"
 2368 0313 01       		.byte	0x1
 2369 0314 94       		.byte	0x94
 2370 0315 9B020000 		.4byte	0x29b
 2371 0319 02       		.uleb128 0x2
 2372 031a 91       		.byte	0x91
 2373 031b 6C       		.sleb128 -20
 2374 031c 0E       		.uleb128 0xe
 2375 031d 6C656E00 		.ascii	"len\000"
 2376 0321 01       		.byte	0x1
 2377 0322 94       		.byte	0x94
 2378 0323 7E000000 		.4byte	0x7e
 2379 0327 02       		.uleb128 0x2
 2380 0328 91       		.byte	0x91
 2381 0329 68       		.sleb128 -24
 2382 032a 12       		.uleb128 0x12
 2383 032b 1D020000 		.4byte	.LASF41
 2384 032f 01       		.byte	0x1
 2385 0330 97       		.byte	0x97
 2386 0331 7E000000 		.4byte	0x7e
 2387 0335 02       		.uleb128 0x2
 2388 0336 91       		.byte	0x91
 2389 0337 70       		.sleb128 -16
 2390 0338 0F       		.uleb128 0xf
 2391 0339 6900     		.ascii	"i\000"
 2392 033b 01       		.byte	0x1
 2393 033c 9F       		.byte	0x9f
ARM GAS  C:\Users\essele\AppData\Local\Temp\cckarkCe.s 			page 53


 2394 033d 7E000000 		.4byte	0x7e
 2395 0341 02       		.uleb128 0x2
 2396 0342 91       		.byte	0x91
 2397 0343 74       		.sleb128 -12
 2398 0344 00       		.byte	0
 2399 0345 11       		.uleb128 0x11
 2400 0346 E5020000 		.4byte	.LASF43
 2401 034a 01       		.byte	0x1
 2402 034b AC       		.byte	0xac
 2403 034c 00000000 		.4byte	.LFB39
 2404 0350 D4000000 		.4byte	.LFE39-.LFB39
 2405 0354 01       		.uleb128 0x1
 2406 0355 9C       		.byte	0x9c
 2407 0356 B5030000 		.4byte	0x3b5
 2408 035a 13       		.uleb128 0x13
 2409 035b 64020000 		.4byte	.LASF44
 2410 035f 01       		.byte	0x1
 2411 0360 AC       		.byte	0xac
 2412 0361 17020000 		.4byte	0x217
 2413 0365 02       		.uleb128 0x2
 2414 0366 91       		.byte	0x91
 2415 0367 64       		.sleb128 -28
 2416 0368 0E       		.uleb128 0xe
 2417 0369 636D6400 		.ascii	"cmd\000"
 2418 036d 01       		.byte	0x1
 2419 036e AC       		.byte	0xac
 2420 036f 1D020000 		.4byte	0x21d
 2421 0373 02       		.uleb128 0x2
 2422 0374 91       		.byte	0x91
 2423 0375 60       		.sleb128 -32
 2424 0376 0F       		.uleb128 0xf
 2425 0377 7000     		.ascii	"p\000"
 2426 0379 01       		.byte	0x1
 2427 037a AD       		.byte	0xad
 2428 037b 2E020000 		.4byte	0x22e
 2429 037f 02       		.uleb128 0x2
 2430 0380 91       		.byte	0x91
 2431 0381 74       		.sleb128 -12
 2432 0382 14       		.uleb128 0x14
 2433 0383 66000000 		.4byte	.LBB2
 2434 0387 26000000 		.4byte	.LBE2-.LBB2
 2435 038b 9C030000 		.4byte	0x39c
 2436 038f 0F       		.uleb128 0xf
 2437 0390 6D00     		.ascii	"m\000"
 2438 0392 01       		.byte	0x1
 2439 0393 BB       		.byte	0xbb
 2440 0394 34020000 		.4byte	0x234
 2441 0398 02       		.uleb128 0x2
 2442 0399 91       		.byte	0x91
 2443 039a 70       		.sleb128 -16
 2444 039b 00       		.byte	0
 2445 039c 15       		.uleb128 0x15
 2446 039d 94000000 		.4byte	.LBB3
 2447 03a1 1C000000 		.4byte	.LBE3-.LBB3
 2448 03a5 12       		.uleb128 0x12
 2449 03a6 A1000000 		.4byte	.LASF29
 2450 03aa 01       		.byte	0x1
ARM GAS  C:\Users\essele\AppData\Local\Temp\cckarkCe.s 			page 54


 2451 03ab C4       		.byte	0xc4
 2452 03ac 97000000 		.4byte	0x97
 2453 03b0 02       		.uleb128 0x2
 2454 03b1 91       		.byte	0x91
 2455 03b2 6E       		.sleb128 -18
 2456 03b3 00       		.byte	0
 2457 03b4 00       		.byte	0
 2458 03b5 0D       		.uleb128 0xd
 2459 03b6 66030000 		.4byte	.LASF45
 2460 03ba 01       		.byte	0x1
 2461 03bb CF       		.byte	0xcf
 2462 03bc 7E000000 		.4byte	0x7e
 2463 03c0 00000000 		.4byte	.LFB40
 2464 03c4 B8000000 		.4byte	.LFE40-.LFB40
 2465 03c8 01       		.uleb128 0x1
 2466 03c9 9C       		.byte	0x9c
 2467 03ca 07040000 		.4byte	0x407
 2468 03ce 13       		.uleb128 0x13
 2469 03cf 64020000 		.4byte	.LASF44
 2470 03d3 01       		.byte	0x1
 2471 03d4 CF       		.byte	0xcf
 2472 03d5 17020000 		.4byte	0x217
 2473 03d9 02       		.uleb128 0x2
 2474 03da 91       		.byte	0x91
 2475 03db 6C       		.sleb128 -20
 2476 03dc 13       		.uleb128 0x13
 2477 03dd 1D020000 		.4byte	.LASF41
 2478 03e1 01       		.byte	0x1
 2479 03e2 CF       		.byte	0xcf
 2480 03e3 7E000000 		.4byte	0x7e
 2481 03e7 02       		.uleb128 0x2
 2482 03e8 91       		.byte	0x91
 2483 03e9 68       		.sleb128 -24
 2484 03ea 0E       		.uleb128 0xe
 2485 03eb 636D6400 		.ascii	"cmd\000"
 2486 03ef 01       		.byte	0x1
 2487 03f0 CF       		.byte	0xcf
 2488 03f1 1D020000 		.4byte	0x21d
 2489 03f5 02       		.uleb128 0x2
 2490 03f6 91       		.byte	0x91
 2491 03f7 64       		.sleb128 -28
 2492 03f8 12       		.uleb128 0x12
 2493 03f9 1E030000 		.4byte	.LASF46
 2494 03fd 01       		.byte	0x1
 2495 03fe D9       		.byte	0xd9
 2496 03ff 7E000000 		.4byte	0x7e
 2497 0403 02       		.uleb128 0x2
 2498 0404 91       		.byte	0x91
 2499 0405 74       		.sleb128 -12
 2500 0406 00       		.byte	0
 2501 0407 0D       		.uleb128 0xd
 2502 0408 B1020000 		.4byte	.LASF47
 2503 040c 01       		.byte	0x1
 2504 040d EB       		.byte	0xeb
 2505 040e 7E000000 		.4byte	0x7e
 2506 0412 00000000 		.4byte	.LFB41
 2507 0416 44000000 		.4byte	.LFE41-.LFB41
ARM GAS  C:\Users\essele\AppData\Local\Temp\cckarkCe.s 			page 55


 2508 041a 01       		.uleb128 0x1
 2509 041b 9C       		.byte	0x9c
 2510 041c 4B040000 		.4byte	0x44b
 2511 0420 13       		.uleb128 0x13
 2512 0421 64020000 		.4byte	.LASF44
 2513 0425 01       		.byte	0x1
 2514 0426 EB       		.byte	0xeb
 2515 0427 17020000 		.4byte	0x217
 2516 042b 02       		.uleb128 0x2
 2517 042c 91       		.byte	0x91
 2518 042d 74       		.sleb128 -12
 2519 042e 13       		.uleb128 0x13
 2520 042f 1D020000 		.4byte	.LASF41
 2521 0433 01       		.byte	0x1
 2522 0434 EB       		.byte	0xeb
 2523 0435 7E000000 		.4byte	0x7e
 2524 0439 02       		.uleb128 0x2
 2525 043a 91       		.byte	0x91
 2526 043b 70       		.sleb128 -16
 2527 043c 0E       		.uleb128 0xe
 2528 043d 636D6400 		.ascii	"cmd\000"
 2529 0441 01       		.byte	0x1
 2530 0442 EB       		.byte	0xeb
 2531 0443 1D020000 		.4byte	0x21d
 2532 0447 02       		.uleb128 0x2
 2533 0448 91       		.byte	0x91
 2534 0449 6C       		.sleb128 -20
 2535 044a 00       		.byte	0
 2536 044b 0D       		.uleb128 0xd
 2537 044c 14020000 		.4byte	.LASF48
 2538 0450 01       		.byte	0x1
 2539 0451 F9       		.byte	0xf9
 2540 0452 7E000000 		.4byte	0x7e
 2541 0456 00000000 		.4byte	.LFB42
 2542 045a CC000000 		.4byte	.LFE42-.LFB42
 2543 045e 01       		.uleb128 0x1
 2544 045f 9C       		.byte	0x9c
 2545 0460 B3040000 		.4byte	0x4b3
 2546 0464 13       		.uleb128 0x13
 2547 0465 64020000 		.4byte	.LASF44
 2548 0469 01       		.byte	0x1
 2549 046a F9       		.byte	0xf9
 2550 046b 17020000 		.4byte	0x217
 2551 046f 02       		.uleb128 0x2
 2552 0470 91       		.byte	0x91
 2553 0471 6C       		.sleb128 -20
 2554 0472 13       		.uleb128 0x13
 2555 0473 1D020000 		.4byte	.LASF41
 2556 0477 01       		.byte	0x1
 2557 0478 F9       		.byte	0xf9
 2558 0479 7E000000 		.4byte	0x7e
 2559 047d 02       		.uleb128 0x2
 2560 047e 91       		.byte	0x91
 2561 047f 68       		.sleb128 -24
 2562 0480 0E       		.uleb128 0xe
 2563 0481 636D6400 		.ascii	"cmd\000"
 2564 0485 01       		.byte	0x1
ARM GAS  C:\Users\essele\AppData\Local\Temp\cckarkCe.s 			page 56


 2565 0486 F9       		.byte	0xf9
 2566 0487 1D020000 		.4byte	0x21d
 2567 048b 02       		.uleb128 0x2
 2568 048c 91       		.byte	0x91
 2569 048d 64       		.sleb128 -28
 2570 048e 16       		.uleb128 0x16
 2571 048f 6900     		.ascii	"i\000"
 2572 0491 01       		.byte	0x1
 2573 0492 0901     		.2byte	0x109
 2574 0494 7E000000 		.4byte	0x7e
 2575 0498 02       		.uleb128 0x2
 2576 0499 91       		.byte	0x91
 2577 049a 70       		.sleb128 -16
 2578 049b 15       		.uleb128 0x15
 2579 049c 28000000 		.4byte	.LBB4
 2580 04a0 38000000 		.4byte	.LBE4-.LBB4
 2581 04a4 16       		.uleb128 0x16
 2582 04a5 6900     		.ascii	"i\000"
 2583 04a7 01       		.byte	0x1
 2584 04a8 0101     		.2byte	0x101
 2585 04aa 7E000000 		.4byte	0x7e
 2586 04ae 02       		.uleb128 0x2
 2587 04af 91       		.byte	0x91
 2588 04b0 74       		.sleb128 -12
 2589 04b1 00       		.byte	0
 2590 04b2 00       		.byte	0
 2591 04b3 17       		.uleb128 0x17
 2592 04b4 3D000000 		.4byte	.LASF49
 2593 04b8 01       		.byte	0x1
 2594 04b9 1801     		.2byte	0x118
 2595 04bb 7E000000 		.4byte	0x7e
 2596 04bf 00000000 		.4byte	.LFB43
 2597 04c3 00010000 		.4byte	.LFE43-.LFB43
 2598 04c7 01       		.uleb128 0x1
 2599 04c8 9C       		.byte	0x9c
 2600 04c9 4F050000 		.4byte	0x54f
 2601 04cd 18       		.uleb128 0x18
 2602 04ce 64020000 		.4byte	.LASF44
 2603 04d2 01       		.byte	0x1
 2604 04d3 1801     		.2byte	0x118
 2605 04d5 17020000 		.4byte	0x217
 2606 04d9 02       		.uleb128 0x2
 2607 04da 91       		.byte	0x91
 2608 04db 5C       		.sleb128 -36
 2609 04dc 18       		.uleb128 0x18
 2610 04dd 1D020000 		.4byte	.LASF41
 2611 04e1 01       		.byte	0x1
 2612 04e2 1801     		.2byte	0x118
 2613 04e4 7E000000 		.4byte	0x7e
 2614 04e8 02       		.uleb128 0x2
 2615 04e9 91       		.byte	0x91
 2616 04ea 58       		.sleb128 -40
 2617 04eb 19       		.uleb128 0x19
 2618 04ec 636D6400 		.ascii	"cmd\000"
 2619 04f0 01       		.byte	0x1
 2620 04f1 1801     		.2byte	0x118
 2621 04f3 1D020000 		.4byte	0x21d
ARM GAS  C:\Users\essele\AppData\Local\Temp\cckarkCe.s 			page 57


 2622 04f7 02       		.uleb128 0x2
 2623 04f8 91       		.byte	0x91
 2624 04f9 54       		.sleb128 -44
 2625 04fa 1A       		.uleb128 0x1a
 2626 04fb 4F000000 		.4byte	.LASF50
 2627 04ff 01       		.byte	0x1
 2628 0500 1901     		.2byte	0x119
 2629 0502 7E000000 		.4byte	0x7e
 2630 0506 02       		.uleb128 0x2
 2631 0507 91       		.byte	0x91
 2632 0508 74       		.sleb128 -12
 2633 0509 16       		.uleb128 0x16
 2634 050a 62756600 		.ascii	"buf\000"
 2635 050e 01       		.byte	0x1
 2636 050f 1A01     		.2byte	0x11a
 2637 0511 9B020000 		.4byte	0x29b
 2638 0515 02       		.uleb128 0x2
 2639 0516 91       		.byte	0x91
 2640 0517 70       		.sleb128 -16
 2641 0518 16       		.uleb128 0x16
 2642 0519 6C656E00 		.ascii	"len\000"
 2643 051d 01       		.byte	0x1
 2644 051e 1B01     		.2byte	0x11b
 2645 0520 7E000000 		.4byte	0x7e
 2646 0524 02       		.uleb128 0x2
 2647 0525 91       		.byte	0x91
 2648 0526 68       		.sleb128 -24
 2649 0527 1A       		.uleb128 0x1a
 2650 0528 DF020000 		.4byte	.LASF51
 2651 052c 01       		.byte	0x1
 2652 052d 1C01     		.2byte	0x11c
 2653 052f 7E000000 		.4byte	0x7e
 2654 0533 02       		.uleb128 0x2
 2655 0534 91       		.byte	0x91
 2656 0535 64       		.sleb128 -28
 2657 0536 15       		.uleb128 0x15
 2658 0537 72000000 		.4byte	.LBB5
 2659 053b 30000000 		.4byte	.LBE5-.LBB5
 2660 053f 16       		.uleb128 0x16
 2661 0540 636800   		.ascii	"ch\000"
 2662 0543 01       		.byte	0x1
 2663 0544 2901     		.2byte	0x129
 2664 0546 7E000000 		.4byte	0x7e
 2665 054a 02       		.uleb128 0x2
 2666 054b 91       		.byte	0x91
 2667 054c 6C       		.sleb128 -20
 2668 054d 00       		.byte	0
 2669 054e 00       		.byte	0
 2670 054f 17       		.uleb128 0x17
 2671 0550 C7020000 		.4byte	.LASF52
 2672 0554 01       		.byte	0x1
 2673 0555 4101     		.2byte	0x141
 2674 0557 7E000000 		.4byte	0x7e
 2675 055b 00000000 		.4byte	.LFB44
 2676 055f F0000000 		.4byte	.LFE44-.LFB44
 2677 0563 01       		.uleb128 0x1
 2678 0564 9C       		.byte	0x9c
ARM GAS  C:\Users\essele\AppData\Local\Temp\cckarkCe.s 			page 58


 2679 0565 E3050000 		.4byte	0x5e3
 2680 0569 18       		.uleb128 0x18
 2681 056a 64020000 		.4byte	.LASF44
 2682 056e 01       		.byte	0x1
 2683 056f 4101     		.2byte	0x141
 2684 0571 17020000 		.4byte	0x217
 2685 0575 02       		.uleb128 0x2
 2686 0576 91       		.byte	0x91
 2687 0577 64       		.sleb128 -28
 2688 0578 18       		.uleb128 0x18
 2689 0579 1D020000 		.4byte	.LASF41
 2690 057d 01       		.byte	0x1
 2691 057e 4101     		.2byte	0x141
 2692 0580 7E000000 		.4byte	0x7e
 2693 0584 02       		.uleb128 0x2
 2694 0585 91       		.byte	0x91
 2695 0586 60       		.sleb128 -32
 2696 0587 19       		.uleb128 0x19
 2697 0588 636D6400 		.ascii	"cmd\000"
 2698 058c 01       		.byte	0x1
 2699 058d 4101     		.2byte	0x141
 2700 058f 1D020000 		.4byte	0x21d
 2701 0593 02       		.uleb128 0x2
 2702 0594 91       		.byte	0x91
 2703 0595 5C       		.sleb128 -36
 2704 0596 16       		.uleb128 0x16
 2705 0597 6900     		.ascii	"i\000"
 2706 0599 01       		.byte	0x1
 2707 059a 4701     		.2byte	0x147
 2708 059c 7E000000 		.4byte	0x7e
 2709 05a0 02       		.uleb128 0x2
 2710 05a1 91       		.byte	0x91
 2711 05a2 74       		.sleb128 -12
 2712 05a3 15       		.uleb128 0x15
 2713 05a4 38000000 		.4byte	.LBB6
 2714 05a8 8C000000 		.4byte	.LBE6-.LBB6
 2715 05ac 1A       		.uleb128 0x1a
 2716 05ad A1000000 		.4byte	.LASF29
 2717 05b1 01       		.byte	0x1
 2718 05b2 4A01     		.2byte	0x14a
 2719 05b4 97000000 		.4byte	0x97
 2720 05b8 02       		.uleb128 0x2
 2721 05b9 91       		.byte	0x91
 2722 05ba 6A       		.sleb128 -22
 2723 05bb 1A       		.uleb128 0x1a
 2724 05bc 2B000000 		.4byte	.LASF30
 2725 05c0 01       		.byte	0x1
 2726 05c1 4B01     		.2byte	0x14b
 2727 05c3 D0000000 		.4byte	0xd0
 2728 05c7 02       		.uleb128 0x2
 2729 05c8 91       		.byte	0x91
 2730 05c9 70       		.sleb128 -16
 2731 05ca 15       		.uleb128 0x15
 2732 05cb 60000000 		.4byte	.LBB7
 2733 05cf 34000000 		.4byte	.LBE7-.LBB7
 2734 05d3 16       		.uleb128 0x16
 2735 05d4 6D00     		.ascii	"m\000"
ARM GAS  C:\Users\essele\AppData\Local\Temp\cckarkCe.s 			page 59


 2736 05d6 01       		.byte	0x1
 2737 05d7 4E01     		.2byte	0x14e
 2738 05d9 34020000 		.4byte	0x234
 2739 05dd 02       		.uleb128 0x2
 2740 05de 91       		.byte	0x91
 2741 05df 6C       		.sleb128 -20
 2742 05e0 00       		.byte	0
 2743 05e1 00       		.byte	0
 2744 05e2 00       		.byte	0
 2745 05e3 1B       		.uleb128 0x1b
 2746 05e4 69020000 		.4byte	.LASF54
 2747 05e8 01       		.byte	0x1
 2748 05e9 6301     		.2byte	0x163
 2749 05eb 7E000000 		.4byte	0x7e
 2750 05ef 00000000 		.4byte	.LFB45
 2751 05f3 1C000000 		.4byte	.LFE45-.LFB45
 2752 05f7 01       		.uleb128 0x1
 2753 05f8 9C       		.byte	0x9c
 2754 05f9 1C       		.uleb128 0x1c
 2755 05fa 57030000 		.4byte	.LASF53
 2756 05fe 01       		.byte	0x1
 2757 05ff 6901     		.2byte	0x169
 2758 0601 7E000000 		.4byte	0x7e
 2759 0605 00000000 		.4byte	.LFB46
 2760 0609 2C000000 		.4byte	.LFE46-.LFB46
 2761 060d 01       		.uleb128 0x1
 2762 060e 9C       		.byte	0x9c
 2763 060f 21060000 		.4byte	0x621
 2764 0613 16       		.uleb128 0x16
 2765 0614 7600     		.ascii	"v\000"
 2766 0616 01       		.byte	0x1
 2767 0617 6A01     		.2byte	0x16a
 2768 0619 97000000 		.4byte	0x97
 2769 061d 02       		.uleb128 0x2
 2770 061e 91       		.byte	0x91
 2771 061f 6E       		.sleb128 -18
 2772 0620 00       		.byte	0
 2773 0621 1B       		.uleb128 0x1b
 2774 0622 EF020000 		.4byte	.LASF55
 2775 0626 01       		.byte	0x1
 2776 0627 7201     		.2byte	0x172
 2777 0629 7E000000 		.4byte	0x7e
 2778 062d 00000000 		.4byte	.LFB47
 2779 0631 10000000 		.4byte	.LFE47-.LFB47
 2780 0635 01       		.uleb128 0x1
 2781 0636 9C       		.byte	0x9c
 2782 0637 1B       		.uleb128 0x1b
 2783 0638 08000000 		.4byte	.LASF56
 2784 063c 01       		.byte	0x1
 2785 063d 7601     		.2byte	0x176
 2786 063f 7E000000 		.4byte	0x7e
 2787 0643 00000000 		.4byte	.LFB48
 2788 0647 10000000 		.4byte	.LFE48-.LFB48
 2789 064b 01       		.uleb128 0x1
 2790 064c 9C       		.byte	0x9c
 2791 064d 1B       		.uleb128 0x1b
 2792 064e BC020000 		.4byte	.LASF57
ARM GAS  C:\Users\essele\AppData\Local\Temp\cckarkCe.s 			page 60


 2793 0652 01       		.byte	0x1
 2794 0653 7A01     		.2byte	0x17a
 2795 0655 7E000000 		.4byte	0x7e
 2796 0659 00000000 		.4byte	.LFB49
 2797 065d 10000000 		.4byte	.LFE49-.LFB49
 2798 0661 01       		.uleb128 0x1
 2799 0662 9C       		.byte	0x9c
 2800 0663 1B       		.uleb128 0x1b
 2801 0664 F4010000 		.4byte	.LASF58
 2802 0668 01       		.byte	0x1
 2803 0669 7E01     		.2byte	0x17e
 2804 066b 7E000000 		.4byte	0x7e
 2805 066f 00000000 		.4byte	.LFB50
 2806 0673 10000000 		.4byte	.LFE50-.LFB50
 2807 0677 01       		.uleb128 0x1
 2808 0678 9C       		.byte	0x9c
 2809 0679 1D       		.uleb128 0x1d
 2810 067a D6000000 		.4byte	.LASF27
 2811 067e 04       		.byte	0x4
 2812 067f 1A       		.byte	0x1a
 2813 0680 E1000000 		.4byte	0xe1
 2814 0684 1E       		.uleb128 0x1e
 2815 0685 D0000000 		.4byte	0xd0
 2816 0689 94060000 		.4byte	0x694
 2817 068d 1F       		.uleb128 0x1f
 2818 068e C9000000 		.4byte	0xc9
 2819 0692 13       		.byte	0x13
 2820 0693 00       		.byte	0
 2821 0694 20       		.uleb128 0x20
 2822 0695 4E010000 		.4byte	.LASF59
 2823 0699 01       		.byte	0x1
 2824 069a 18       		.byte	0x18
 2825 069b 84060000 		.4byte	0x684
 2826 069f 05       		.uleb128 0x5
 2827 06a0 03       		.byte	0x3
 2828 06a1 00000000 		.4byte	toks
 2829 06a5 20       		.uleb128 0x20
 2830 06a6 33000000 		.4byte	.LASF60
 2831 06aa 01       		.byte	0x1
 2832 06ab 19       		.byte	0x19
 2833 06ac 7E000000 		.4byte	0x7e
 2834 06b0 05       		.uleb128 0x5
 2835 06b1 03       		.byte	0x3
 2836 06b2 00000000 		.4byte	tok_count
 2837 06b6 1E       		.uleb128 0x1e
 2838 06b7 23020000 		.4byte	0x223
 2839 06bb C6060000 		.4byte	0x6c6
 2840 06bf 1F       		.uleb128 0x1f
 2841 06c0 C9000000 		.4byte	0xc9
 2842 06c4 10       		.byte	0x10
 2843 06c5 00       		.byte	0
 2844 06c6 21       		.uleb128 0x21
 2845 06c7 BB000000 		.4byte	.LASF61
 2846 06cb 01       		.byte	0x1
 2847 06cc B201     		.2byte	0x1b2
 2848 06ce D8060000 		.4byte	0x6d8
 2849 06d2 05       		.uleb128 0x5
ARM GAS  C:\Users\essele\AppData\Local\Temp\cckarkCe.s 			page 61


 2850 06d3 03       		.byte	0x3
 2851 06d4 00000000 		.4byte	commands
 2852 06d8 06       		.uleb128 0x6
 2853 06d9 B6060000 		.4byte	0x6b6
 2854 06dd 1E       		.uleb128 0x1e
 2855 06de D6000000 		.4byte	0xd6
 2856 06e2 ED060000 		.4byte	0x6ed
 2857 06e6 1F       		.uleb128 0x1f
 2858 06e7 C9000000 		.4byte	0xc9
 2859 06eb 01       		.byte	0x1
 2860 06ec 00       		.byte	0
 2861 06ed 21       		.uleb128 0x21
 2862 06ee 6F030000 		.4byte	.LASF62
 2863 06f2 01       		.byte	0x1
 2864 06f3 9001     		.2byte	0x190
 2865 06f5 DD060000 		.4byte	0x6dd
 2866 06f9 05       		.uleb128 0x5
 2867 06fa 03       		.byte	0x3
 2868 06fb 00000000 		.4byte	no_usage_args
 2869 06ff 1E       		.uleb128 0x1e
 2870 0700 3A020000 		.4byte	0x23a
 2871 0704 0F070000 		.4byte	0x70f
 2872 0708 1F       		.uleb128 0x1f
 2873 0709 C9000000 		.4byte	0xc9
 2874 070d 03       		.byte	0x3
 2875 070e 00       		.byte	0
 2876 070f 21       		.uleb128 0x21
 2877 0710 23030000 		.4byte	.LASF63
 2878 0714 01       		.byte	0x1
 2879 0715 9601     		.2byte	0x196
 2880 0717 21070000 		.4byte	0x721
 2881 071b 05       		.uleb128 0x5
 2882 071c 03       		.byte	0x3
 2883 071d 00000000 		.4byte	auto_means
 2884 0721 06       		.uleb128 0x6
 2885 0722 FF060000 		.4byte	0x6ff
 2886 0726 1E       		.uleb128 0x1e
 2887 0727 3A020000 		.4byte	0x23a
 2888 072b 36070000 		.4byte	0x736
 2889 072f 1F       		.uleb128 0x1f
 2890 0730 C9000000 		.4byte	0xc9
 2891 0734 02       		.byte	0x2
 2892 0735 00       		.byte	0
 2893 0736 21       		.uleb128 0x21
 2894 0737 11010000 		.4byte	.LASF64
 2895 073b 01       		.byte	0x1
 2896 073c 9D01     		.2byte	0x19d
 2897 073e 48070000 		.4byte	0x748
 2898 0742 05       		.uleb128 0x5
 2899 0743 03       		.byte	0x3
 2900 0744 00000000 		.4byte	enable_disable_means
 2901 0748 06       		.uleb128 0x6
 2902 0749 26070000 		.4byte	0x726
 2903 074d 1E       		.uleb128 0x1e
 2904 074e 3A020000 		.4byte	0x23a
 2905 0752 5D070000 		.4byte	0x75d
 2906 0756 1F       		.uleb128 0x1f
ARM GAS  C:\Users\essele\AppData\Local\Temp\cckarkCe.s 			page 62


 2907 0757 C9000000 		.4byte	0xc9
 2908 075b 04       		.byte	0x4
 2909 075c 00       		.byte	0
 2910 075d 21       		.uleb128 0x21
 2911 075e 96020000 		.4byte	.LASF65
 2912 0762 01       		.byte	0x1
 2913 0763 A301     		.2byte	0x1a3
 2914 0765 6F070000 		.4byte	0x76f
 2915 0769 05       		.uleb128 0x5
 2916 076a 03       		.byte	0x3
 2917 076b 00000000 		.4byte	eos_means
 2918 076f 06       		.uleb128 0x6
 2919 0770 4D070000 		.4byte	0x74d
 2920 0774 21       		.uleb128 0x21
 2921 0775 42030000 		.4byte	.LASF66
 2922 0779 01       		.byte	0x1
 2923 077a AC01     		.2byte	0x1ac
 2924 077c DD060000 		.4byte	0x6dd
 2925 0780 05       		.uleb128 0x5
 2926 0781 03       		.byte	0x3
 2927 0782 00000000 		.4byte	enable_disable_usage
 2928 0786 00       		.byte	0
 2929              		.section	.debug_abbrev,"",%progbits
 2930              	.Ldebug_abbrev0:
 2931 0000 01       		.uleb128 0x1
 2932 0001 11       		.uleb128 0x11
 2933 0002 01       		.byte	0x1
 2934 0003 25       		.uleb128 0x25
 2935 0004 0E       		.uleb128 0xe
 2936 0005 13       		.uleb128 0x13
 2937 0006 0B       		.uleb128 0xb
 2938 0007 03       		.uleb128 0x3
 2939 0008 0E       		.uleb128 0xe
 2940 0009 1B       		.uleb128 0x1b
 2941 000a 0E       		.uleb128 0xe
 2942 000b 55       		.uleb128 0x55
 2943 000c 17       		.uleb128 0x17
 2944 000d 11       		.uleb128 0x11
 2945 000e 01       		.uleb128 0x1
 2946 000f 10       		.uleb128 0x10
 2947 0010 17       		.uleb128 0x17
 2948 0011 00       		.byte	0
 2949 0012 00       		.byte	0
 2950 0013 02       		.uleb128 0x2
 2951 0014 24       		.uleb128 0x24
 2952 0015 00       		.byte	0
 2953 0016 0B       		.uleb128 0xb
 2954 0017 0B       		.uleb128 0xb
 2955 0018 3E       		.uleb128 0x3e
 2956 0019 0B       		.uleb128 0xb
 2957 001a 03       		.uleb128 0x3
 2958 001b 0E       		.uleb128 0xe
 2959 001c 00       		.byte	0
 2960 001d 00       		.byte	0
 2961 001e 03       		.uleb128 0x3
 2962 001f 16       		.uleb128 0x16
 2963 0020 00       		.byte	0
ARM GAS  C:\Users\essele\AppData\Local\Temp\cckarkCe.s 			page 63


 2964 0021 03       		.uleb128 0x3
 2965 0022 0E       		.uleb128 0xe
 2966 0023 3A       		.uleb128 0x3a
 2967 0024 0B       		.uleb128 0xb
 2968 0025 3B       		.uleb128 0x3b
 2969 0026 0B       		.uleb128 0xb
 2970 0027 49       		.uleb128 0x49
 2971 0028 13       		.uleb128 0x13
 2972 0029 00       		.byte	0
 2973 002a 00       		.byte	0
 2974 002b 04       		.uleb128 0x4
 2975 002c 24       		.uleb128 0x24
 2976 002d 00       		.byte	0
 2977 002e 0B       		.uleb128 0xb
 2978 002f 0B       		.uleb128 0xb
 2979 0030 3E       		.uleb128 0x3e
 2980 0031 0B       		.uleb128 0xb
 2981 0032 03       		.uleb128 0x3
 2982 0033 08       		.uleb128 0x8
 2983 0034 00       		.byte	0
 2984 0035 00       		.byte	0
 2985 0036 05       		.uleb128 0x5
 2986 0037 0F       		.uleb128 0xf
 2987 0038 00       		.byte	0
 2988 0039 0B       		.uleb128 0xb
 2989 003a 0B       		.uleb128 0xb
 2990 003b 49       		.uleb128 0x49
 2991 003c 13       		.uleb128 0x13
 2992 003d 00       		.byte	0
 2993 003e 00       		.byte	0
 2994 003f 06       		.uleb128 0x6
 2995 0040 26       		.uleb128 0x26
 2996 0041 00       		.byte	0
 2997 0042 49       		.uleb128 0x49
 2998 0043 13       		.uleb128 0x13
 2999 0044 00       		.byte	0
 3000 0045 00       		.byte	0
 3001 0046 07       		.uleb128 0x7
 3002 0047 13       		.uleb128 0x13
 3003 0048 01       		.byte	0x1
 3004 0049 03       		.uleb128 0x3
 3005 004a 0E       		.uleb128 0xe
 3006 004b 0B       		.uleb128 0xb
 3007 004c 0B       		.uleb128 0xb
 3008 004d 3A       		.uleb128 0x3a
 3009 004e 0B       		.uleb128 0xb
 3010 004f 3B       		.uleb128 0x3b
 3011 0050 0B       		.uleb128 0xb
 3012 0051 01       		.uleb128 0x1
 3013 0052 13       		.uleb128 0x13
 3014 0053 00       		.byte	0
 3015 0054 00       		.byte	0
 3016 0055 08       		.uleb128 0x8
 3017 0056 0D       		.uleb128 0xd
 3018 0057 00       		.byte	0
 3019 0058 03       		.uleb128 0x3
 3020 0059 0E       		.uleb128 0xe
ARM GAS  C:\Users\essele\AppData\Local\Temp\cckarkCe.s 			page 64


 3021 005a 3A       		.uleb128 0x3a
 3022 005b 0B       		.uleb128 0xb
 3023 005c 3B       		.uleb128 0x3b
 3024 005d 0B       		.uleb128 0xb
 3025 005e 49       		.uleb128 0x49
 3026 005f 13       		.uleb128 0x13
 3027 0060 38       		.uleb128 0x38
 3028 0061 0B       		.uleb128 0xb
 3029 0062 00       		.byte	0
 3030 0063 00       		.byte	0
 3031 0064 09       		.uleb128 0x9
 3032 0065 0D       		.uleb128 0xd
 3033 0066 00       		.byte	0
 3034 0067 03       		.uleb128 0x3
 3035 0068 08       		.uleb128 0x8
 3036 0069 3A       		.uleb128 0x3a
 3037 006a 0B       		.uleb128 0xb
 3038 006b 3B       		.uleb128 0x3b
 3039 006c 0B       		.uleb128 0xb
 3040 006d 49       		.uleb128 0x49
 3041 006e 13       		.uleb128 0x13
 3042 006f 38       		.uleb128 0x38
 3043 0070 0B       		.uleb128 0xb
 3044 0071 00       		.byte	0
 3045 0072 00       		.byte	0
 3046 0073 0A       		.uleb128 0xa
 3047 0074 13       		.uleb128 0x13
 3048 0075 01       		.byte	0x1
 3049 0076 03       		.uleb128 0x3
 3050 0077 08       		.uleb128 0x8
 3051 0078 0B       		.uleb128 0xb
 3052 0079 0B       		.uleb128 0xb
 3053 007a 3A       		.uleb128 0x3a
 3054 007b 0B       		.uleb128 0xb
 3055 007c 3B       		.uleb128 0x3b
 3056 007d 0B       		.uleb128 0xb
 3057 007e 01       		.uleb128 0x1
 3058 007f 13       		.uleb128 0x13
 3059 0080 00       		.byte	0
 3060 0081 00       		.byte	0
 3061 0082 0B       		.uleb128 0xb
 3062 0083 15       		.uleb128 0x15
 3063 0084 01       		.byte	0x1
 3064 0085 27       		.uleb128 0x27
 3065 0086 19       		.uleb128 0x19
 3066 0087 49       		.uleb128 0x49
 3067 0088 13       		.uleb128 0x13
 3068 0089 01       		.uleb128 0x1
 3069 008a 13       		.uleb128 0x13
 3070 008b 00       		.byte	0
 3071 008c 00       		.byte	0
 3072 008d 0C       		.uleb128 0xc
 3073 008e 05       		.uleb128 0x5
 3074 008f 00       		.byte	0
 3075 0090 49       		.uleb128 0x49
 3076 0091 13       		.uleb128 0x13
 3077 0092 00       		.byte	0
ARM GAS  C:\Users\essele\AppData\Local\Temp\cckarkCe.s 			page 65


 3078 0093 00       		.byte	0
 3079 0094 0D       		.uleb128 0xd
 3080 0095 2E       		.uleb128 0x2e
 3081 0096 01       		.byte	0x1
 3082 0097 3F       		.uleb128 0x3f
 3083 0098 19       		.uleb128 0x19
 3084 0099 03       		.uleb128 0x3
 3085 009a 0E       		.uleb128 0xe
 3086 009b 3A       		.uleb128 0x3a
 3087 009c 0B       		.uleb128 0xb
 3088 009d 3B       		.uleb128 0x3b
 3089 009e 0B       		.uleb128 0xb
 3090 009f 27       		.uleb128 0x27
 3091 00a0 19       		.uleb128 0x19
 3092 00a1 49       		.uleb128 0x49
 3093 00a2 13       		.uleb128 0x13
 3094 00a3 11       		.uleb128 0x11
 3095 00a4 01       		.uleb128 0x1
 3096 00a5 12       		.uleb128 0x12
 3097 00a6 06       		.uleb128 0x6
 3098 00a7 40       		.uleb128 0x40
 3099 00a8 18       		.uleb128 0x18
 3100 00a9 9642     		.uleb128 0x2116
 3101 00ab 19       		.uleb128 0x19
 3102 00ac 01       		.uleb128 0x1
 3103 00ad 13       		.uleb128 0x13
 3104 00ae 00       		.byte	0
 3105 00af 00       		.byte	0
 3106 00b0 0E       		.uleb128 0xe
 3107 00b1 05       		.uleb128 0x5
 3108 00b2 00       		.byte	0
 3109 00b3 03       		.uleb128 0x3
 3110 00b4 08       		.uleb128 0x8
 3111 00b5 3A       		.uleb128 0x3a
 3112 00b6 0B       		.uleb128 0xb
 3113 00b7 3B       		.uleb128 0x3b
 3114 00b8 0B       		.uleb128 0xb
 3115 00b9 49       		.uleb128 0x49
 3116 00ba 13       		.uleb128 0x13
 3117 00bb 02       		.uleb128 0x2
 3118 00bc 18       		.uleb128 0x18
 3119 00bd 00       		.byte	0
 3120 00be 00       		.byte	0
 3121 00bf 0F       		.uleb128 0xf
 3122 00c0 34       		.uleb128 0x34
 3123 00c1 00       		.byte	0
 3124 00c2 03       		.uleb128 0x3
 3125 00c3 08       		.uleb128 0x8
 3126 00c4 3A       		.uleb128 0x3a
 3127 00c5 0B       		.uleb128 0xb
 3128 00c6 3B       		.uleb128 0x3b
 3129 00c7 0B       		.uleb128 0xb
 3130 00c8 49       		.uleb128 0x49
 3131 00c9 13       		.uleb128 0x13
 3132 00ca 02       		.uleb128 0x2
 3133 00cb 18       		.uleb128 0x18
 3134 00cc 00       		.byte	0
ARM GAS  C:\Users\essele\AppData\Local\Temp\cckarkCe.s 			page 66


 3135 00cd 00       		.byte	0
 3136 00ce 10       		.uleb128 0x10
 3137 00cf 2E       		.uleb128 0x2e
 3138 00d0 01       		.byte	0x1
 3139 00d1 3F       		.uleb128 0x3f
 3140 00d2 19       		.uleb128 0x19
 3141 00d3 03       		.uleb128 0x3
 3142 00d4 0E       		.uleb128 0xe
 3143 00d5 3A       		.uleb128 0x3a
 3144 00d6 0B       		.uleb128 0xb
 3145 00d7 3B       		.uleb128 0x3b
 3146 00d8 0B       		.uleb128 0xb
 3147 00d9 27       		.uleb128 0x27
 3148 00da 19       		.uleb128 0x19
 3149 00db 49       		.uleb128 0x49
 3150 00dc 13       		.uleb128 0x13
 3151 00dd 11       		.uleb128 0x11
 3152 00de 01       		.uleb128 0x1
 3153 00df 12       		.uleb128 0x12
 3154 00e0 06       		.uleb128 0x6
 3155 00e1 40       		.uleb128 0x40
 3156 00e2 18       		.uleb128 0x18
 3157 00e3 9742     		.uleb128 0x2117
 3158 00e5 19       		.uleb128 0x19
 3159 00e6 01       		.uleb128 0x1
 3160 00e7 13       		.uleb128 0x13
 3161 00e8 00       		.byte	0
 3162 00e9 00       		.byte	0
 3163 00ea 11       		.uleb128 0x11
 3164 00eb 2E       		.uleb128 0x2e
 3165 00ec 01       		.byte	0x1
 3166 00ed 3F       		.uleb128 0x3f
 3167 00ee 19       		.uleb128 0x19
 3168 00ef 03       		.uleb128 0x3
 3169 00f0 0E       		.uleb128 0xe
 3170 00f1 3A       		.uleb128 0x3a
 3171 00f2 0B       		.uleb128 0xb
 3172 00f3 3B       		.uleb128 0x3b
 3173 00f4 0B       		.uleb128 0xb
 3174 00f5 27       		.uleb128 0x27
 3175 00f6 19       		.uleb128 0x19
 3176 00f7 11       		.uleb128 0x11
 3177 00f8 01       		.uleb128 0x1
 3178 00f9 12       		.uleb128 0x12
 3179 00fa 06       		.uleb128 0x6
 3180 00fb 40       		.uleb128 0x40
 3181 00fc 18       		.uleb128 0x18
 3182 00fd 9642     		.uleb128 0x2116
 3183 00ff 19       		.uleb128 0x19
 3184 0100 01       		.uleb128 0x1
 3185 0101 13       		.uleb128 0x13
 3186 0102 00       		.byte	0
 3187 0103 00       		.byte	0
 3188 0104 12       		.uleb128 0x12
 3189 0105 34       		.uleb128 0x34
 3190 0106 00       		.byte	0
 3191 0107 03       		.uleb128 0x3
ARM GAS  C:\Users\essele\AppData\Local\Temp\cckarkCe.s 			page 67


 3192 0108 0E       		.uleb128 0xe
 3193 0109 3A       		.uleb128 0x3a
 3194 010a 0B       		.uleb128 0xb
 3195 010b 3B       		.uleb128 0x3b
 3196 010c 0B       		.uleb128 0xb
 3197 010d 49       		.uleb128 0x49
 3198 010e 13       		.uleb128 0x13
 3199 010f 02       		.uleb128 0x2
 3200 0110 18       		.uleb128 0x18
 3201 0111 00       		.byte	0
 3202 0112 00       		.byte	0
 3203 0113 13       		.uleb128 0x13
 3204 0114 05       		.uleb128 0x5
 3205 0115 00       		.byte	0
 3206 0116 03       		.uleb128 0x3
 3207 0117 0E       		.uleb128 0xe
 3208 0118 3A       		.uleb128 0x3a
 3209 0119 0B       		.uleb128 0xb
 3210 011a 3B       		.uleb128 0x3b
 3211 011b 0B       		.uleb128 0xb
 3212 011c 49       		.uleb128 0x49
 3213 011d 13       		.uleb128 0x13
 3214 011e 02       		.uleb128 0x2
 3215 011f 18       		.uleb128 0x18
 3216 0120 00       		.byte	0
 3217 0121 00       		.byte	0
 3218 0122 14       		.uleb128 0x14
 3219 0123 0B       		.uleb128 0xb
 3220 0124 01       		.byte	0x1
 3221 0125 11       		.uleb128 0x11
 3222 0126 01       		.uleb128 0x1
 3223 0127 12       		.uleb128 0x12
 3224 0128 06       		.uleb128 0x6
 3225 0129 01       		.uleb128 0x1
 3226 012a 13       		.uleb128 0x13
 3227 012b 00       		.byte	0
 3228 012c 00       		.byte	0
 3229 012d 15       		.uleb128 0x15
 3230 012e 0B       		.uleb128 0xb
 3231 012f 01       		.byte	0x1
 3232 0130 11       		.uleb128 0x11
 3233 0131 01       		.uleb128 0x1
 3234 0132 12       		.uleb128 0x12
 3235 0133 06       		.uleb128 0x6
 3236 0134 00       		.byte	0
 3237 0135 00       		.byte	0
 3238 0136 16       		.uleb128 0x16
 3239 0137 34       		.uleb128 0x34
 3240 0138 00       		.byte	0
 3241 0139 03       		.uleb128 0x3
 3242 013a 08       		.uleb128 0x8
 3243 013b 3A       		.uleb128 0x3a
 3244 013c 0B       		.uleb128 0xb
 3245 013d 3B       		.uleb128 0x3b
 3246 013e 05       		.uleb128 0x5
 3247 013f 49       		.uleb128 0x49
 3248 0140 13       		.uleb128 0x13
ARM GAS  C:\Users\essele\AppData\Local\Temp\cckarkCe.s 			page 68


 3249 0141 02       		.uleb128 0x2
 3250 0142 18       		.uleb128 0x18
 3251 0143 00       		.byte	0
 3252 0144 00       		.byte	0
 3253 0145 17       		.uleb128 0x17
 3254 0146 2E       		.uleb128 0x2e
 3255 0147 01       		.byte	0x1
 3256 0148 3F       		.uleb128 0x3f
 3257 0149 19       		.uleb128 0x19
 3258 014a 03       		.uleb128 0x3
 3259 014b 0E       		.uleb128 0xe
 3260 014c 3A       		.uleb128 0x3a
 3261 014d 0B       		.uleb128 0xb
 3262 014e 3B       		.uleb128 0x3b
 3263 014f 05       		.uleb128 0x5
 3264 0150 27       		.uleb128 0x27
 3265 0151 19       		.uleb128 0x19
 3266 0152 49       		.uleb128 0x49
 3267 0153 13       		.uleb128 0x13
 3268 0154 11       		.uleb128 0x11
 3269 0155 01       		.uleb128 0x1
 3270 0156 12       		.uleb128 0x12
 3271 0157 06       		.uleb128 0x6
 3272 0158 40       		.uleb128 0x40
 3273 0159 18       		.uleb128 0x18
 3274 015a 9642     		.uleb128 0x2116
 3275 015c 19       		.uleb128 0x19
 3276 015d 01       		.uleb128 0x1
 3277 015e 13       		.uleb128 0x13
 3278 015f 00       		.byte	0
 3279 0160 00       		.byte	0
 3280 0161 18       		.uleb128 0x18
 3281 0162 05       		.uleb128 0x5
 3282 0163 00       		.byte	0
 3283 0164 03       		.uleb128 0x3
 3284 0165 0E       		.uleb128 0xe
 3285 0166 3A       		.uleb128 0x3a
 3286 0167 0B       		.uleb128 0xb
 3287 0168 3B       		.uleb128 0x3b
 3288 0169 05       		.uleb128 0x5
 3289 016a 49       		.uleb128 0x49
 3290 016b 13       		.uleb128 0x13
 3291 016c 02       		.uleb128 0x2
 3292 016d 18       		.uleb128 0x18
 3293 016e 00       		.byte	0
 3294 016f 00       		.byte	0
 3295 0170 19       		.uleb128 0x19
 3296 0171 05       		.uleb128 0x5
 3297 0172 00       		.byte	0
 3298 0173 03       		.uleb128 0x3
 3299 0174 08       		.uleb128 0x8
 3300 0175 3A       		.uleb128 0x3a
 3301 0176 0B       		.uleb128 0xb
 3302 0177 3B       		.uleb128 0x3b
 3303 0178 05       		.uleb128 0x5
 3304 0179 49       		.uleb128 0x49
 3305 017a 13       		.uleb128 0x13
ARM GAS  C:\Users\essele\AppData\Local\Temp\cckarkCe.s 			page 69


 3306 017b 02       		.uleb128 0x2
 3307 017c 18       		.uleb128 0x18
 3308 017d 00       		.byte	0
 3309 017e 00       		.byte	0
 3310 017f 1A       		.uleb128 0x1a
 3311 0180 34       		.uleb128 0x34
 3312 0181 00       		.byte	0
 3313 0182 03       		.uleb128 0x3
 3314 0183 0E       		.uleb128 0xe
 3315 0184 3A       		.uleb128 0x3a
 3316 0185 0B       		.uleb128 0xb
 3317 0186 3B       		.uleb128 0x3b
 3318 0187 05       		.uleb128 0x5
 3319 0188 49       		.uleb128 0x49
 3320 0189 13       		.uleb128 0x13
 3321 018a 02       		.uleb128 0x2
 3322 018b 18       		.uleb128 0x18
 3323 018c 00       		.byte	0
 3324 018d 00       		.byte	0
 3325 018e 1B       		.uleb128 0x1b
 3326 018f 2E       		.uleb128 0x2e
 3327 0190 00       		.byte	0
 3328 0191 3F       		.uleb128 0x3f
 3329 0192 19       		.uleb128 0x19
 3330 0193 03       		.uleb128 0x3
 3331 0194 0E       		.uleb128 0xe
 3332 0195 3A       		.uleb128 0x3a
 3333 0196 0B       		.uleb128 0xb
 3334 0197 3B       		.uleb128 0x3b
 3335 0198 05       		.uleb128 0x5
 3336 0199 49       		.uleb128 0x49
 3337 019a 13       		.uleb128 0x13
 3338 019b 11       		.uleb128 0x11
 3339 019c 01       		.uleb128 0x1
 3340 019d 12       		.uleb128 0x12
 3341 019e 06       		.uleb128 0x6
 3342 019f 40       		.uleb128 0x40
 3343 01a0 18       		.uleb128 0x18
 3344 01a1 9642     		.uleb128 0x2116
 3345 01a3 19       		.uleb128 0x19
 3346 01a4 00       		.byte	0
 3347 01a5 00       		.byte	0
 3348 01a6 1C       		.uleb128 0x1c
 3349 01a7 2E       		.uleb128 0x2e
 3350 01a8 01       		.byte	0x1
 3351 01a9 3F       		.uleb128 0x3f
 3352 01aa 19       		.uleb128 0x19
 3353 01ab 03       		.uleb128 0x3
 3354 01ac 0E       		.uleb128 0xe
 3355 01ad 3A       		.uleb128 0x3a
 3356 01ae 0B       		.uleb128 0xb
 3357 01af 3B       		.uleb128 0x3b
 3358 01b0 05       		.uleb128 0x5
 3359 01b1 49       		.uleb128 0x49
 3360 01b2 13       		.uleb128 0x13
 3361 01b3 11       		.uleb128 0x11
 3362 01b4 01       		.uleb128 0x1
ARM GAS  C:\Users\essele\AppData\Local\Temp\cckarkCe.s 			page 70


 3363 01b5 12       		.uleb128 0x12
 3364 01b6 06       		.uleb128 0x6
 3365 01b7 40       		.uleb128 0x40
 3366 01b8 18       		.uleb128 0x18
 3367 01b9 9642     		.uleb128 0x2116
 3368 01bb 19       		.uleb128 0x19
 3369 01bc 01       		.uleb128 0x1
 3370 01bd 13       		.uleb128 0x13
 3371 01be 00       		.byte	0
 3372 01bf 00       		.byte	0
 3373 01c0 1D       		.uleb128 0x1d
 3374 01c1 34       		.uleb128 0x34
 3375 01c2 00       		.byte	0
 3376 01c3 03       		.uleb128 0x3
 3377 01c4 0E       		.uleb128 0xe
 3378 01c5 3A       		.uleb128 0x3a
 3379 01c6 0B       		.uleb128 0xb
 3380 01c7 3B       		.uleb128 0x3b
 3381 01c8 0B       		.uleb128 0xb
 3382 01c9 49       		.uleb128 0x49
 3383 01ca 13       		.uleb128 0x13
 3384 01cb 3F       		.uleb128 0x3f
 3385 01cc 19       		.uleb128 0x19
 3386 01cd 3C       		.uleb128 0x3c
 3387 01ce 19       		.uleb128 0x19
 3388 01cf 00       		.byte	0
 3389 01d0 00       		.byte	0
 3390 01d1 1E       		.uleb128 0x1e
 3391 01d2 01       		.uleb128 0x1
 3392 01d3 01       		.byte	0x1
 3393 01d4 49       		.uleb128 0x49
 3394 01d5 13       		.uleb128 0x13
 3395 01d6 01       		.uleb128 0x1
 3396 01d7 13       		.uleb128 0x13
 3397 01d8 00       		.byte	0
 3398 01d9 00       		.byte	0
 3399 01da 1F       		.uleb128 0x1f
 3400 01db 21       		.uleb128 0x21
 3401 01dc 00       		.byte	0
 3402 01dd 49       		.uleb128 0x49
 3403 01de 13       		.uleb128 0x13
 3404 01df 2F       		.uleb128 0x2f
 3405 01e0 0B       		.uleb128 0xb
 3406 01e1 00       		.byte	0
 3407 01e2 00       		.byte	0
 3408 01e3 20       		.uleb128 0x20
 3409 01e4 34       		.uleb128 0x34
 3410 01e5 00       		.byte	0
 3411 01e6 03       		.uleb128 0x3
 3412 01e7 0E       		.uleb128 0xe
 3413 01e8 3A       		.uleb128 0x3a
 3414 01e9 0B       		.uleb128 0xb
 3415 01ea 3B       		.uleb128 0x3b
 3416 01eb 0B       		.uleb128 0xb
 3417 01ec 49       		.uleb128 0x49
 3418 01ed 13       		.uleb128 0x13
 3419 01ee 3F       		.uleb128 0x3f
ARM GAS  C:\Users\essele\AppData\Local\Temp\cckarkCe.s 			page 71


 3420 01ef 19       		.uleb128 0x19
 3421 01f0 02       		.uleb128 0x2
 3422 01f1 18       		.uleb128 0x18
 3423 01f2 00       		.byte	0
 3424 01f3 00       		.byte	0
 3425 01f4 21       		.uleb128 0x21
 3426 01f5 34       		.uleb128 0x34
 3427 01f6 00       		.byte	0
 3428 01f7 03       		.uleb128 0x3
 3429 01f8 0E       		.uleb128 0xe
 3430 01f9 3A       		.uleb128 0x3a
 3431 01fa 0B       		.uleb128 0xb
 3432 01fb 3B       		.uleb128 0x3b
 3433 01fc 05       		.uleb128 0x5
 3434 01fd 49       		.uleb128 0x49
 3435 01fe 13       		.uleb128 0x13
 3436 01ff 3F       		.uleb128 0x3f
 3437 0200 19       		.uleb128 0x19
 3438 0201 02       		.uleb128 0x2
 3439 0202 18       		.uleb128 0x18
 3440 0203 00       		.byte	0
 3441 0204 00       		.byte	0
 3442 0205 00       		.byte	0
 3443              		.section	.debug_aranges,"",%progbits
 3444 0000 94000000 		.4byte	0x94
 3445 0004 0200     		.2byte	0x2
 3446 0006 00000000 		.4byte	.Ldebug_info0
 3447 000a 04       		.byte	0x4
 3448 000b 00       		.byte	0
 3449 000c 0000     		.2byte	0
 3450 000e 0000     		.2byte	0
 3451 0010 00000000 		.4byte	.LFB35
 3452 0014 DC000000 		.4byte	.LFE35-.LFB35
 3453 0018 00000000 		.4byte	.LFB36
 3454 001c 40000000 		.4byte	.LFE36-.LFB36
 3455 0020 00000000 		.4byte	.LFB37
 3456 0024 3C000000 		.4byte	.LFE37-.LFB37
 3457 0028 00000000 		.4byte	.LFB38
 3458 002c 94000000 		.4byte	.LFE38-.LFB38
 3459 0030 00000000 		.4byte	.LFB39
 3460 0034 D4000000 		.4byte	.LFE39-.LFB39
 3461 0038 00000000 		.4byte	.LFB40
 3462 003c B8000000 		.4byte	.LFE40-.LFB40
 3463 0040 00000000 		.4byte	.LFB41
 3464 0044 44000000 		.4byte	.LFE41-.LFB41
 3465 0048 00000000 		.4byte	.LFB42
 3466 004c CC000000 		.4byte	.LFE42-.LFB42
 3467 0050 00000000 		.4byte	.LFB43
 3468 0054 00010000 		.4byte	.LFE43-.LFB43
 3469 0058 00000000 		.4byte	.LFB44
 3470 005c F0000000 		.4byte	.LFE44-.LFB44
 3471 0060 00000000 		.4byte	.LFB45
 3472 0064 1C000000 		.4byte	.LFE45-.LFB45
 3473 0068 00000000 		.4byte	.LFB46
 3474 006c 2C000000 		.4byte	.LFE46-.LFB46
 3475 0070 00000000 		.4byte	.LFB47
 3476 0074 10000000 		.4byte	.LFE47-.LFB47
ARM GAS  C:\Users\essele\AppData\Local\Temp\cckarkCe.s 			page 72


 3477 0078 00000000 		.4byte	.LFB48
 3478 007c 10000000 		.4byte	.LFE48-.LFB48
 3479 0080 00000000 		.4byte	.LFB49
 3480 0084 10000000 		.4byte	.LFE49-.LFB49
 3481 0088 00000000 		.4byte	.LFB50
 3482 008c 10000000 		.4byte	.LFE50-.LFB50
 3483 0090 00000000 		.4byte	0
 3484 0094 00000000 		.4byte	0
 3485              		.section	.debug_ranges,"",%progbits
 3486              	.Ldebug_ranges0:
 3487 0000 00000000 		.4byte	.LFB35
 3488 0004 DC000000 		.4byte	.LFE35
 3489 0008 00000000 		.4byte	.LFB36
 3490 000c 40000000 		.4byte	.LFE36
 3491 0010 00000000 		.4byte	.LFB37
 3492 0014 3C000000 		.4byte	.LFE37
 3493 0018 00000000 		.4byte	.LFB38
 3494 001c 94000000 		.4byte	.LFE38
 3495 0020 00000000 		.4byte	.LFB39
 3496 0024 D4000000 		.4byte	.LFE39
 3497 0028 00000000 		.4byte	.LFB40
 3498 002c B8000000 		.4byte	.LFE40
 3499 0030 00000000 		.4byte	.LFB41
 3500 0034 44000000 		.4byte	.LFE41
 3501 0038 00000000 		.4byte	.LFB42
 3502 003c CC000000 		.4byte	.LFE42
 3503 0040 00000000 		.4byte	.LFB43
 3504 0044 00010000 		.4byte	.LFE43
 3505 0048 00000000 		.4byte	.LFB44
 3506 004c F0000000 		.4byte	.LFE44
 3507 0050 00000000 		.4byte	.LFB45
 3508 0054 1C000000 		.4byte	.LFE45
 3509 0058 00000000 		.4byte	.LFB46
 3510 005c 2C000000 		.4byte	.LFE46
 3511 0060 00000000 		.4byte	.LFB47
 3512 0064 10000000 		.4byte	.LFE47
 3513 0068 00000000 		.4byte	.LFB48
 3514 006c 10000000 		.4byte	.LFE48
 3515 0070 00000000 		.4byte	.LFB49
 3516 0074 10000000 		.4byte	.LFE49
 3517 0078 00000000 		.4byte	.LFB50
 3518 007c 10000000 		.4byte	.LFE50
 3519 0080 00000000 		.4byte	0
 3520 0084 00000000 		.4byte	0
 3521              		.section	.debug_line,"",%progbits
 3522              	.Ldebug_line0:
 3523 0000 21030000 		.section	.debug_str,"MS",%progbits,1
 3523      02002B01 
 3523      00000201 
 3523      FB0E0D00 
 3523      01010101 
 3524              	.LASF21:
 3525 0000 76657273 		.ascii	"version\000"
 3525      696F6E00 
 3526              	.LASF56:
 3527 0008 68656C70 		.ascii	"helper_ifc\000"
 3527      65725F69 
ARM GAS  C:\Users\essele\AppData\Local\Temp\cckarkCe.s 			page 73


 3527      666300
 3528              	.LASF35:
 3529 0013 75736167 		.ascii	"usage\000"
 3529      6500
 3530              	.LASF33:
 3531 0019 73657474 		.ascii	"setting\000"
 3531      696E6700 
 3532              	.LASF2:
 3533 0021 73686F72 		.ascii	"short int\000"
 3533      7420696E 
 3533      7400
 3534              	.LASF30:
 3535 002b 6D65616E 		.ascii	"meaning\000"
 3535      696E6700 
 3536              	.LASF60:
 3537 0033 746F6B5F 		.ascii	"tok_count\000"
 3537      636F756E 
 3537      7400
 3538              	.LASF49:
 3539 003d 636D645F 		.ascii	"cmd_read\000"
 3539      72656164 
 3539      00
 3540              	.LASF19:
 3541 0046 73697A65 		.ascii	"sizetype\000"
 3541      74797065 
 3541      00
 3542              	.LASF50:
 3543 004f 756E7469 		.ascii	"until\000"
 3543      6C00
 3544              	.LASF69:
 3545 0055 5C5C4D61 		.ascii	"\\\\Mac\\Home\\Documents\\dev\\yaugi\\GPIB USB Adap"
 3545      635C486F 
 3545      6D655C44 
 3545      6F63756D 
 3545      656E7473 
 3546 0081 7465725C 		.ascii	"ter\\GPIB USB 1.cydsn\000"
 3546      47504942 
 3546      20555342 
 3546      20312E63 
 3546      7964736E 
 3547              	.LASF4:
 3548 0096 5F5F7569 		.ascii	"__uint16_t\000"
 3548      6E743136 
 3548      5F7400
 3549              	.LASF29:
 3550 00a1 76616C75 		.ascii	"value\000"
 3550      6500
 3551              	.LASF34:
 3552 00a7 68656C70 		.ascii	"help\000"
 3552      00
 3553              	.LASF12:
 3554 00ac 75696E74 		.ascii	"uint8_t\000"
 3554      385F7400 
 3555              	.LASF40:
 3556 00b4 746F5F69 		.ascii	"to_int\000"
 3556      6E7400
 3557              	.LASF61:
ARM GAS  C:\Users\essele\AppData\Local\Temp\cckarkCe.s 			page 74


 3558 00bb 636F6D6D 		.ascii	"commands\000"
 3558      616E6473 
 3558      00
 3559              	.LASF23:
 3560 00c4 6175746F 		.ascii	"autoread\000"
 3560      72656164 
 3560      00
 3561              	.LASF36:
 3562 00cd 6D65616E 		.ascii	"meanings\000"
 3562      696E6773 
 3562      00
 3563              	.LASF27:
 3564 00d6 73657474 		.ascii	"settings\000"
 3564      696E6773 
 3564      00
 3565              	.LASF32:
 3566 00df 66756E63 		.ascii	"func\000"
 3566      00
 3567              	.LASF9:
 3568 00e4 6C6F6E67 		.ascii	"long long int\000"
 3568      206C6F6E 
 3568      6720696E 
 3568      7400
 3569              	.LASF26:
 3570 00f2 72656164 		.ascii	"read_tmo_ms\000"
 3570      5F746D6F 
 3570      5F6D7300 
 3571              	.LASF37:
 3572 00fe 706F7374 		.ascii	"post_func\000"
 3572      5F66756E 
 3572      6300
 3573              	.LASF6:
 3574 0108 6C6F6E67 		.ascii	"long int\000"
 3574      20696E74 
 3574      00
 3575              	.LASF64:
 3576 0111 656E6162 		.ascii	"enable_disable_means\000"
 3576      6C655F64 
 3576      69736162 
 3576      6C655F6D 
 3576      65616E73 
 3577              	.LASF22:
 3578 0126 61646472 		.ascii	"address\000"
 3578      65737300 
 3579              	.LASF28:
 3580 012e 6974656D 		.ascii	"item_meaning\000"
 3580      5F6D6561 
 3580      6E696E67 
 3580      00
 3581              	.LASF3:
 3582 013b 5F5F7569 		.ascii	"__uint8_t\000"
 3582      6E74385F 
 3582      7400
 3583              	.LASF38:
 3584 0145 746F6B65 		.ascii	"tokenise\000"
 3584      6E697365 
 3584      00
ARM GAS  C:\Users\essele\AppData\Local\Temp\cckarkCe.s 			page 75


 3585              	.LASF59:
 3586 014e 746F6B73 		.ascii	"toks\000"
 3586      00
 3587              	.LASF1:
 3588 0153 756E7369 		.ascii	"unsigned char\000"
 3588      676E6564 
 3588      20636861 
 3588      7200
 3589              	.LASF67:
 3590 0161 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 3590      43313120 
 3590      352E342E 
 3590      31203230 
 3590      31363036 
 3591 0194 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m0 -mthumb -g -O"
 3591      20726576 
 3591      6973696F 
 3591      6E203233 
 3591      37373135 
 3592 01c7 30202D66 		.ascii	"0 -ffunction-sections -ffat-lto-objects\000"
 3592      66756E63 
 3592      74696F6E 
 3592      2D736563 
 3592      74696F6E 
 3593              	.LASF31:
 3594 01ef 6E616D65 		.ascii	"name\000"
 3594      00
 3595              	.LASF58:
 3596 01f4 68656C70 		.ascii	"helper_loc\000"
 3596      65725F6C 
 3596      6F6300
 3597              	.LASF18:
 3598 01ff 6C6F6E67 		.ascii	"long double\000"
 3598      20646F75 
 3598      626C6500 
 3599              	.LASF24:
 3600 020b 656F745F 		.ascii	"eot_char\000"
 3600      63686172 
 3600      00
 3601              	.LASF48:
 3602 0214 636D645F 		.ascii	"cmd_help\000"
 3602      68656C70 
 3602      00
 3603              	.LASF41:
 3604 021d 61726763 		.ascii	"argc\000"
 3604      00
 3605              	.LASF0:
 3606 0222 7369676E 		.ascii	"signed char\000"
 3606      65642063 
 3606      68617200 
 3607              	.LASF10:
 3608 022e 6C6F6E67 		.ascii	"long long unsigned int\000"
 3608      206C6F6E 
 3608      6720756E 
 3608      7369676E 
 3608      65642069 
 3609              	.LASF14:
ARM GAS  C:\Users\essele\AppData\Local\Temp\cckarkCe.s 			page 76


 3610 0245 75696E74 		.ascii	"uint32_t\000"
 3610      33325F74 
 3610      00
 3611              	.LASF11:
 3612 024e 756E7369 		.ascii	"unsigned int\000"
 3612      676E6564 
 3612      20696E74 
 3612      00
 3613              	.LASF13:
 3614 025b 75696E74 		.ascii	"uint16_t\000"
 3614      31365F74 
 3614      00
 3615              	.LASF44:
 3616 0264 61726776 		.ascii	"argv\000"
 3616      00
 3617              	.LASF54:
 3618 0269 68656C70 		.ascii	"helper_version\000"
 3618      65725F76 
 3618      65727369 
 3618      6F6E00
 3619              	.LASF5:
 3620 0278 73686F72 		.ascii	"short unsigned int\000"
 3620      7420756E 
 3620      7369676E 
 3620      65642069 
 3620      6E7400
 3621              	.LASF25:
 3622 028b 656F745F 		.ascii	"eot_enable\000"
 3622      656E6162 
 3622      6C6500
 3623              	.LASF65:
 3624 0296 656F735F 		.ascii	"eos_means\000"
 3624      6D65616E 
 3624      7300
 3625              	.LASF17:
 3626 02a0 63686172 		.ascii	"char\000"
 3626      00
 3627              	.LASF42:
 3628 02a5 636D645F 		.ascii	"cmd_process\000"
 3628      70726F63 
 3628      65737300 
 3629              	.LASF47:
 3630 02b1 636D645F 		.ascii	"cmd_noargs\000"
 3630      6E6F6172 
 3630      677300
 3631              	.LASF57:
 3632 02bc 68656C70 		.ascii	"helper_llo\000"
 3632      65725F6C 
 3632      6C6F00
 3633              	.LASF52:
 3634 02c7 636D645F 		.ascii	"cmd_config\000"
 3634      636F6E66 
 3634      696700
 3635              	.LASF39:
 3636 02d2 69735F69 		.ascii	"is_int\000"
 3636      6E7400
 3637              	.LASF15:
ARM GAS  C:\Users\essele\AppData\Local\Temp\cckarkCe.s 			page 77


 3638 02d9 666C6F61 		.ascii	"float\000"
 3638      7400
 3639              	.LASF51:
 3640 02df 656E6465 		.ascii	"ended\000"
 3640      6400
 3641              	.LASF43:
 3642 02e5 636D645F 		.ascii	"cmd_usage\000"
 3642      75736167 
 3642      6500
 3643              	.LASF55:
 3644 02ef 68656C70 		.ascii	"helper_clr\000"
 3644      65725F63 
 3644      6C7200
 3645              	.LASF8:
 3646 02fa 6C6F6E67 		.ascii	"long unsigned int\000"
 3646      20756E73 
 3646      69676E65 
 3646      6420696E 
 3646      7400
 3647              	.LASF16:
 3648 030c 646F7562 		.ascii	"double\000"
 3648      6C6500
 3649              	.LASF7:
 3650 0313 5F5F7569 		.ascii	"__uint32_t\000"
 3650      6E743332 
 3650      5F7400
 3651              	.LASF46:
 3652 031e 62797465 		.ascii	"byte\000"
 3652      00
 3653              	.LASF63:
 3654 0323 6175746F 		.ascii	"auto_means\000"
 3654      5F6D6561 
 3654      6E7300
 3655              	.LASF20:
 3656 032e 7369676E 		.ascii	"signature\000"
 3656      61747572 
 3656      6500
 3657              	.LASF68:
 3658 0338 636F6D6D 		.ascii	"command.c\000"
 3658      616E642E 
 3658      6300
 3659              	.LASF66:
 3660 0342 656E6162 		.ascii	"enable_disable_usage\000"
 3660      6C655F64 
 3660      69736162 
 3660      6C655F75 
 3660      73616765 
 3661              	.LASF53:
 3662 0357 68656C70 		.ascii	"helper_gpiball\000"
 3662      65725F67 
 3662      70696261 
 3662      6C6C00
 3663              	.LASF45:
 3664 0366 636D645F 		.ascii	"cmd_uint\000"
 3664      75696E74 
 3664      00
 3665              	.LASF62:
ARM GAS  C:\Users\essele\AppData\Local\Temp\cckarkCe.s 			page 78


 3666 036f 6E6F5F75 		.ascii	"no_usage_args\000"
 3666      73616765 
 3666      5F617267 
 3666      7300
 3667              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
