ARM GAS  C:\Users\essele\AppData\Local\Temp\cci7Wywd.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m0
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 0
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"command.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.comm	toks,80,4
  20              		.global	tok_count
  21              		.bss
  22              		.align	2
  23              		.type	tok_count, %object
  24              		.size	tok_count, 4
  25              	tok_count:
  26 0000 00000000 		.space	4
  27              		.global	commands
  28              		.section	.rodata
  29              		.align	2
  30              	.LC0:
  31 0000 61646472 		.ascii	"addr\000"
  31      00
  32 0005 000000   		.align	2
  33              	.LC1:
  34 0008 436F6E66 		.ascii	"Configure or query the GPIB device address\000"
  34      69677572 
  34      65206F72 
  34      20717565 
  34      72792074 
  35 0033 00       		.align	2
  36              	.LC2:
  37 0034 6175746F 		.ascii	"auto\000"
  37      00
  38 0039 000000   		.align	2
  39              	.LC3:
  40 003c 436F6E66 		.ascii	"Configure automatic read after write\000"
  40      69677572 
  40      65206175 
  40      746F6D61 
  40      74696320 
  41 0061 000000   		.align	2
  42              	.LC4:
  43 0064 636C7200 		.ascii	"clr\000"
  44              		.align	2
  45              	.LC5:
  46 0068 53656E64 		.ascii	"Send a selected device clear (SDC) message\000"
  46      20612073 
ARM GAS  C:\Users\essele\AppData\Local\Temp\cci7Wywd.s 			page 2


  46      656C6563 
  46      74656420 
  46      64657669 
  47 0093 00       		.align	2
  48              	.LC6:
  49 0094 656F6900 		.ascii	"eoi\000"
  50              		.align	2
  51              	.LC7:
  52 0098 41737365 		.ascii	"Assertion of EOI line with the last transmitted cha"
  52      7274696F 
  52      6E206F66 
  52      20454F49 
  52      206C696E 
  53 00cb 72616374 		.ascii	"racter\000"
  53      657200
  54 00d2 0000     		.align	2
  55              	.LC8:
  56 00d4 656F7300 		.ascii	"eos\000"
  57              		.align	2
  58              	.LC9:
  59 00d8 41707065 		.ascii	"Append specific terminator to GPIB output\000"
  59      6E642073 
  59      70656369 
  59      66696320 
  59      7465726D 
  60 0102 0000     		.align	2
  61              	.LC10:
  62 0104 656F745F 		.ascii	"eot_char\000"
  62      63686172 
  62      00
  63 010d 000000   		.align	2
  64              	.LC11:
  65 0110 43686172 		.ascii	"Character to add for EOI if eot_enable\000"
  65      61637465 
  65      7220746F 
  65      20616464 
  65      20666F72 
  66 0137 00       		.align	2
  67              	.LC12:
  68 0138 656F745F 		.ascii	"eot_enable\000"
  68      656E6162 
  68      6C6500
  69 0143 00       		.align	2
  70              	.LC13:
  71 0144 41707065 		.ascii	"Append eot_char when EOI detected\000"
  71      6E642065 
  71      6F745F63 
  71      68617220 
  71      7768656E 
  72 0166 0000     		.align	2
  73              	.LC14:
  74 0168 68656C70 		.ascii	"help\000"
  74      00
  75 016d 000000   		.align	2
  76              	.LC15:
  77 0170 44697370 		.ascii	"Display command list\000"
  77      6C617920 
ARM GAS  C:\Users\essele\AppData\Local\Temp\cci7Wywd.s 			page 3


  77      636F6D6D 
  77      616E6420 
  77      6C697374 
  78 0185 000000   		.align	2
  79              	.LC16:
  80 0188 69666300 		.ascii	"ifc\000"
  81              		.align	2
  82              	.LC17:
  83 018c 53656E64 		.ascii	"Send an interface clear (IFC) message\000"
  83      20616E20 
  83      696E7465 
  83      72666163 
  83      6520636C 
  84 01b2 0000     		.align	2
  85              	.LC18:
  86 01b4 696E7465 		.ascii	"interact\000"
  86      72616374 
  86      00
  87 01bd 000000   		.align	2
  88              	.LC19:
  89 01c0 55736520 		.ascii	"Use interactive input mode\000"
  89      696E7465 
  89      72616374 
  89      69766520 
  89      696E7075 
  90 01db 00       		.align	2
  91              	.LC20:
  92 01dc 6C6C6F00 		.ascii	"llo\000"
  93              		.align	2
  94              	.LC21:
  95 01e0 53656E64 		.ascii	"Send a local lock out (LLO) message\000"
  95      2061206C 
  95      6F63616C 
  95      206C6F63 
  95      6B206F75 
  96              		.align	2
  97              	.LC22:
  98 0204 6C6F6300 		.ascii	"loc\000"
  99              		.align	2
 100              	.LC23:
 101 0208 53656E64 		.ascii	"Send a go to local (GTL) message\000"
 101      20612067 
 101      6F20746F 
 101      206C6F63 
 101      616C2028 
 102 0229 000000   		.align	2
 103              	.LC24:
 104 022c 72656164 		.ascii	"read\000"
 104      00
 105 0231 000000   		.align	2
 106              	.LC25:
 107 0234 52656164 		.ascii	"Read from the device\000"
 107      2066726F 
 107      6D207468 
 107      65206465 
 107      76696365 
 108 0249 000000   		.align	2
ARM GAS  C:\Users\essele\AppData\Local\Temp\cci7Wywd.s 			page 4


 109              	.LC26:
 110 024c 72656164 		.ascii	"read_tmo_ms\000"
 110      5F746D6F 
 110      5F6D7300 
 111              		.align	2
 112              	.LC27:
 113 0258 52656164 		.ascii	"Read timeout value in ms\000"
 113      2074696D 
 113      656F7574 
 113      2076616C 
 113      75652069 
 114 0271 000000   		.align	2
 115              	.LC28:
 116 0274 73706F6C 		.ascii	"spoll\000"
 116      6C00
 117 027a 0000     		.align	2
 118              	.LC29:
 119 027c 53656E64 		.ascii	"Send a serial poll request to the current address\000"
 119      20612073 
 119      65726961 
 119      6C20706F 
 119      6C6C2072 
 120 02ae 0000     		.align	2
 121              	.LC30:
 122 02b0 76657200 		.ascii	"ver\000"
 123              		.align	2
 124              	.LC31:
 125 02b4 52657475 		.ascii	"Return the version of the yaugi firmware\000"
 125      726E2074 
 125      68652076 
 125      65727369 
 125      6F6E206F 
 126 02dd 000000   		.align	2
 127              	.LC32:
 128 02e0 636F6E66 		.ascii	"config\000"
 128      696700
 129 02e7 00       		.align	2
 130              	.LC33:
 131 02e8 53686F77 		.ascii	"Show current configuration settings\000"
 131      20637572 
 131      72656E74 
 131      20636F6E 
 131      66696775 
 132              		.align	2
 133              	.LC34:
 134 030c 787800   		.ascii	"xx\000"
 135 030f 00       		.align	2
 136              	.LC35:
 137 0310 52656164 		.ascii	"Read all pins\000"
 137      20616C6C 
 137      2070696E 
 137      7300
 138 031e 0000     		.align	2
 139              		.type	commands, %object
 140              		.size	commands, 608
 141              	commands:
 142 0320 00000000 		.word	.LC0
ARM GAS  C:\Users\essele\AppData\Local\Temp\cci7Wywd.s 			page 5


 143 0324 00000000 		.word	cmd_uint
 144 0328 06000000 		.word	settings+6
 145 032c 0000     		.short	0
 146 032e 1E00     		.short	30
 147 0330 08000000 		.word	.LC1
 148 0334 10000000 		.word	__compound_literal.0
 149 0338 00000000 		.word	0
 150 033c 00000000 		.word	0
 151 0340 34000000 		.word	.LC2
 152 0344 00000000 		.word	cmd_uint
 153 0348 08000000 		.word	settings+8
 154 034c 0000     		.short	0
 155 034e 0200     		.short	2
 156 0350 3C000000 		.word	.LC3
 157 0354 1C000000 		.word	__compound_literal.1
 158 0358 00000000 		.word	auto_means
 159 035c 00000000 		.word	0
 160 0360 64000000 		.word	.LC4
 161 0364 00000000 		.word	cmd_noargs
 162 0368 00000000 		.word	0
 163 036c 0000     		.short	0
 164 036e 0000     		.short	0
 165 0370 68000000 		.word	.LC5
 166 0374 00000000 		.word	no_usage_args
 167 0378 00000000 		.word	0
 168 037c 00000000 		.word	helper_clr
 169 0380 94000000 		.word	.LC6
 170 0384 00000000 		.word	cmd_uint
 171 0388 08000000 		.word	settings+8
 172 038c 0000     		.short	0
 173 038e 0100     		.short	1
 174 0390 98000000 		.word	.LC7
 175 0394 00000000 		.word	enable_disable_usage
 176 0398 00000000 		.word	enable_disable_means
 177 039c 00000000 		.word	0
 178 03a0 D4000000 		.word	.LC8
 179 03a4 00000000 		.word	cmd_uint
 180 03a8 0C000000 		.word	settings+12
 181 03ac 0000     		.short	0
 182 03ae 0300     		.short	3
 183 03b0 D8000000 		.word	.LC9
 184 03b4 24000000 		.word	__compound_literal.2
 185 03b8 00000000 		.word	eos_means
 186 03bc 00000000 		.word	0
 187 03c0 04010000 		.word	.LC10
 188 03c4 00000000 		.word	cmd_uint
 189 03c8 0E000000 		.word	settings+14
 190 03cc 0000     		.short	0
 191 03ce FF00     		.short	255
 192 03d0 10010000 		.word	.LC11
 193 03d4 2C000000 		.word	__compound_literal.3
 194 03d8 00000000 		.word	0
 195 03dc 00000000 		.word	0
 196 03e0 38010000 		.word	.LC12
 197 03e4 00000000 		.word	cmd_uint
 198 03e8 10000000 		.word	settings+16
 199 03ec 0000     		.short	0
ARM GAS  C:\Users\essele\AppData\Local\Temp\cci7Wywd.s 			page 6


 200 03ee 0100     		.short	1
 201 03f0 44010000 		.word	.LC13
 202 03f4 00000000 		.word	enable_disable_usage
 203 03f8 00000000 		.word	enable_disable_means
 204 03fc 00000000 		.word	0
 205 0400 68010000 		.word	.LC14
 206 0404 00000000 		.word	cmd_help
 207 0408 00000000 		.word	0
 208 040c 0000     		.short	0
 209 040e 0000     		.short	0
 210 0410 70010000 		.word	.LC15
 211 0414 38000000 		.word	__compound_literal.4
 212 0418 00000000 		.word	0
 213 041c 00000000 		.word	0
 214 0420 88010000 		.word	.LC16
 215 0424 00000000 		.word	cmd_noargs
 216 0428 00000000 		.word	0
 217 042c 0000     		.short	0
 218 042e 0000     		.short	0
 219 0430 8C010000 		.word	.LC17
 220 0434 00000000 		.word	no_usage_args
 221 0438 00000000 		.word	0
 222 043c 00000000 		.word	helper_ifc
 223 0440 B4010000 		.word	.LC18
 224 0444 00000000 		.word	cmd_uint
 225 0448 14000000 		.word	settings+20
 226 044c 0000     		.short	0
 227 044e 0100     		.short	1
 228 0450 C0010000 		.word	.LC19
 229 0454 00000000 		.word	enable_disable_usage
 230 0458 00000000 		.word	enable_disable_means
 231 045c 00000000 		.word	0
 232 0460 DC010000 		.word	.LC20
 233 0464 00000000 		.word	cmd_noargs
 234 0468 00000000 		.word	0
 235 046c 0000     		.short	0
 236 046e 0000     		.short	0
 237 0470 E0010000 		.word	.LC21
 238 0474 00000000 		.word	no_usage_args
 239 0478 00000000 		.word	0
 240 047c 00000000 		.word	helper_llo
 241 0480 04020000 		.word	.LC22
 242 0484 00000000 		.word	cmd_noargs
 243 0488 00000000 		.word	0
 244 048c 0000     		.short	0
 245 048e 0000     		.short	0
 246 0490 08020000 		.word	.LC23
 247 0494 00000000 		.word	no_usage_args
 248 0498 00000000 		.word	0
 249 049c 00000000 		.word	helper_loc
 250 04a0 2C020000 		.word	.LC24
 251 04a4 00000000 		.word	cmd_read
 252 04a8 00000000 		.word	0
 253 04ac 0000     		.short	0
 254 04ae 0000     		.short	0
 255 04b0 34020000 		.word	.LC25
 256 04b4 40000000 		.word	__compound_literal.5
ARM GAS  C:\Users\essele\AppData\Local\Temp\cci7Wywd.s 			page 7


 257 04b8 00000000 		.word	0
 258 04bc 00000000 		.word	0
 259 04c0 4C020000 		.word	.LC26
 260 04c4 00000000 		.word	cmd_uint
 261 04c8 12000000 		.word	settings+18
 262 04cc 0100     		.short	1
 263 04ce B80B     		.short	3000
 264 04d0 58020000 		.word	.LC27
 265 04d4 4C000000 		.word	__compound_literal.6
 266 04d8 00000000 		.word	0
 267 04dc 00000000 		.word	0
 268 04e0 74020000 		.word	.LC28
 269 04e4 00000000 		.word	cmd_noargs
 270 04e8 00000000 		.word	0
 271 04ec 0000     		.short	0
 272 04ee 0000     		.short	0
 273 04f0 7C020000 		.word	.LC29
 274 04f4 00000000 		.word	no_usage_args
 275 04f8 00000000 		.word	0
 276 04fc 00000000 		.word	helper_spoll
 277 0500 B0020000 		.word	.LC30
 278 0504 00000000 		.word	cmd_noargs
 279 0508 00000000 		.word	0
 280 050c 0000     		.short	0
 281 050e 0000     		.short	0
 282 0510 B4020000 		.word	.LC31
 283 0514 00000000 		.word	no_usage_args
 284 0518 00000000 		.word	0
 285 051c 00000000 		.word	helper_version
 286 0520 E0020000 		.word	.LC32
 287 0524 00000000 		.word	cmd_config
 288 0528 00000000 		.word	0
 289 052c 0000     		.short	0
 290 052e 0000     		.short	0
 291 0530 E8020000 		.word	.LC33
 292 0534 00000000 		.word	no_usage_args
 293 0538 00000000 		.word	0
 294 053c 00000000 		.word	0
 295 0540 0C030000 		.word	.LC34
 296 0544 00000000 		.word	cmd_noargs
 297 0548 00000000 		.word	0
 298 054c 0000     		.short	0
 299 054e 0000     		.short	0
 300 0550 10030000 		.word	.LC35
 301 0554 00000000 		.word	no_usage_args
 302 0558 00000000 		.word	0
 303 055c 00000000 		.word	helper_gpiball
 304 0560 00000000 		.word	0
 305 0564 00000000 		.word	0
 306 0568 00000000 		.word	0
 307 056c 0000     		.short	0
 308 056e 0000     		.short	0
 309 0570 00000000 		.word	0
 310 0574 00000000 		.word	no_usage_args
 311 0578 00000000 		.word	0
 312 057c 00000000 		.word	0
 313              		.align	2
ARM GAS  C:\Users\essele\AppData\Local\Temp\cci7Wywd.s 			page 8


 314              	.LC37:
 315 0580 200900   		.ascii	" \011\000"
 316 0583 00       		.align	2
 317              	.LC40:
 318 0584 3C657272 		.ascii	"<error: too many tokens>\015\012\000"
 318      6F723A20 
 318      746F6F20 
 318      6D616E79 
 318      20746F6B 
 319              		.section	.text.tokenise,"ax",%progbits
 320              		.align	2
 321              		.global	tokenise
 322              		.code	16
 323              		.thumb_func
 324              		.type	tokenise, %function
 325              	tokenise:
 326              	.LFB35:
 327              		.file 1 "command.c"
   1:command.c     **** /****
   2:command.c     ****  * YAUGI -- Yet Another USB GPIB Interface
   3:command.c     ****  * 
   4:command.c     ****  * Lee Essen, 2019
   5:command.c     ****  *
   6:command.c     ****  * This work is licensed under a Creative Commons 
   7:command.c     ****  * Attribution-NonCommercial-ShareAlike 4.0 International License.
   8:command.c     ****  *
   9:command.c     ****  */
  10:command.c     **** 
  11:command.c     **** 
  12:command.c     **** #include "command.h"
  13:command.c     **** #include "serial.h"
  14:command.c     **** #include "settings.h"
  15:command.c     **** #include "gpib.h"
  16:command.c     **** #include "utils.h"
  17:command.c     **** #include <stdio.h>
  18:command.c     **** 
  19:command.c     **** #define MAJOR_VERSION 1
  20:command.c     **** #define MINOR_VERSION 2
  21:command.c     **** 
  22:command.c     **** 
  23:command.c     **** #define MAX_TOKS 20
  24:command.c     **** 
  25:command.c     **** char    *toks[MAX_TOKS];
  26:command.c     **** int     tok_count = 0;
  27:command.c     **** 
  28:command.c     **** 
  29:command.c     **** 
  30:command.c     **** 
  31:command.c     **** /**
  32:command.c     ****  * A set or view value of uint16_t
  33:command.c     ****  */
  34:command.c     **** struct uint_based {
  35:command.c     ****     int         min;
  36:command.c     ****     int         max;
  37:command.c     ****     uint16_t    *set;
  38:command.c     **** };
  39:command.c     **** 
ARM GAS  C:\Users\essele\AppData\Local\Temp\cci7Wywd.s 			page 9


  40:command.c     **** /**
  41:command.c     ****  * A straight command that doesn't take any arguments
  42:command.c     ****  */
  43:command.c     **** struct no_args {
  44:command.c     **** };
  45:command.c     **** 
  46:command.c     **** /**
  47:command.c     ****  * If we have specific itemised options we can display the help and status
  48:command.c     ****  * information
  49:command.c     ****  */
  50:command.c     **** struct item_meaning {
  51:command.c     ****     int     value;
  52:command.c     ****     char    *meaning;
  53:command.c     **** };
  54:command.c     **** 
  55:command.c     **** struct cmd {
  56:command.c     ****     char                        *name;
  57:command.c     ****     int                         (*func)(char *argv[], int argc, const struct cmd *cmd);
  58:command.c     ****     uint16_t                    *setting;
  59:command.c     ****     uint16_t                    min;
  60:command.c     ****     uint16_t                    max;
  61:command.c     **** //
  62:command.c     **** //    union {
  63:command.c     **** //        struct uint_based       uint;
  64:command.c     **** //        struct no_args          noargs;
  65:command.c     **** //    } u;
  66:command.c     ****     const char                  *help;
  67:command.c     ****     const char                  **usage;
  68:command.c     ****     const struct item_meaning   *meanings;
  69:command.c     ****     int                         (*post_func)(char *argv[], int argc);
  70:command.c     **** };
  71:command.c     **** 
  72:command.c     **** 
  73:command.c     **** const struct cmd commands[];
  74:command.c     **** 
  75:command.c     **** /**
  76:command.c     ****  * Split an input string on whitespace, null in between tokens and populate the list
  77:command.c     ****  * (up to a max number of arguments)
  78:command.c     ****  */
  79:command.c     **** int tokenise(uint8_t *buf, int len) {
 328              		.loc 1 79 0
 329              		.cfi_startproc
 330              		@ args = 0, pretend = 0, frame = 16
 331              		@ frame_needed = 1, uses_anonymous_args = 0
 332 0000 80B5     		push	{r7, lr}
 333              		.cfi_def_cfa_offset 8
 334              		.cfi_offset 7, -8
 335              		.cfi_offset 14, -4
 336 0002 84B0     		sub	sp, sp, #16
 337              		.cfi_def_cfa_offset 24
 338 0004 00AF     		add	r7, sp, #0
 339              		.cfi_def_cfa_register 7
 340 0006 7860     		str	r0, [r7, #4]
 341 0008 3960     		str	r1, [r7]
  80:command.c     ****     int i = 0;
 342              		.loc 1 80 0
 343 000a 0023     		movs	r3, #0
ARM GAS  C:\Users\essele\AppData\Local\Temp\cci7Wywd.s 			page 10


 344 000c FB60     		str	r3, [r7, #12]
  81:command.c     ****     
  82:command.c     ****     tok_count = 0;
 345              		.loc 1 82 0
 346 000e 2F4B     		ldr	r3, .L16
 347 0010 0022     		movs	r2, #0
 348 0012 1A60     		str	r2, [r3]
  83:command.c     ****     
  84:command.c     ****     while(i < len) {
 349              		.loc 1 84 0
 350 0014 50E0     		b	.L2
 351              	.L6:
  85:command.c     ****         
  86:command.c     ****         // First get past any leading whitespace...
  87:command.c     ****         while(i < len) {
  88:command.c     ****             if (strchr(" \t", *buf) == NULL) {
 352              		.loc 1 88 0
 353 0016 7B68     		ldr	r3, [r7, #4]
 354 0018 1B78     		ldrb	r3, [r3]
 355 001a 1A00     		movs	r2, r3
 356 001c 2C4B     		ldr	r3, .L16+4
 357 001e 1100     		movs	r1, r2
 358 0020 1800     		movs	r0, r3
 359 0022 FFF7FEFF 		bl	strchr
 360 0026 031E     		subs	r3, r0, #0
 361 0028 0AD0     		beq	.L14
  89:command.c     ****                 break;
  90:command.c     ****             }
  91:command.c     ****             i++;
 362              		.loc 1 91 0
 363 002a FB68     		ldr	r3, [r7, #12]
 364 002c 0133     		adds	r3, r3, #1
 365 002e FB60     		str	r3, [r7, #12]
  92:command.c     ****             buf++;
 366              		.loc 1 92 0
 367 0030 7B68     		ldr	r3, [r7, #4]
 368 0032 0133     		adds	r3, r3, #1
 369 0034 7B60     		str	r3, [r7, #4]
 370              	.L3:
  87:command.c     ****             if (strchr(" \t", *buf) == NULL) {
 371              		.loc 1 87 0
 372 0036 FA68     		ldr	r2, [r7, #12]
 373 0038 3B68     		ldr	r3, [r7]
 374 003a 9A42     		cmp	r2, r3
 375 003c EBDB     		blt	.L6
 376 003e 00E0     		b	.L5
 377              	.L14:
  89:command.c     ****                 break;
 378              		.loc 1 89 0
 379 0040 C046     		nop
 380              	.L5:
  93:command.c     ****         }
  94:command.c     ****         // Could be the end of the string?
  95:command.c     ****         if (i == len) {
 381              		.loc 1 95 0
 382 0042 FA68     		ldr	r2, [r7, #12]
 383 0044 3B68     		ldr	r3, [r7]
ARM GAS  C:\Users\essele\AppData\Local\Temp\cci7Wywd.s 			page 11


 384 0046 9A42     		cmp	r2, r3
 385 0048 02D1     		bne	.L7
  96:command.c     ****             return tok_count;
 386              		.loc 1 96 0
 387 004a 204B     		ldr	r3, .L16
 388 004c 1B68     		ldr	r3, [r3]
 389 004e 39E0     		b	.L8
 390              	.L7:
  97:command.c     ****         }
  98:command.c     ****         
  99:command.c     ****         // Setup the token
 100:command.c     ****         toks[tok_count] = (char *)buf;
 391              		.loc 1 100 0
 392 0050 1E4B     		ldr	r3, .L16
 393 0052 1A68     		ldr	r2, [r3]
 394 0054 1F4B     		ldr	r3, .L16+8
 395 0056 9200     		lsls	r2, r2, #2
 396 0058 7968     		ldr	r1, [r7, #4]
 397 005a D150     		str	r1, [r2, r3]
 101:command.c     ****         
 102:command.c     ****         // Now get past any non-whitespace...
 103:command.c     ****         while (i < len) {
 398              		.loc 1 103 0
 399 005c 0FE0     		b	.L9
 400              	.L12:
 104:command.c     ****             if (strchr(" \t", *buf) != NULL) {
 401              		.loc 1 104 0
 402 005e 7B68     		ldr	r3, [r7, #4]
 403 0060 1B78     		ldrb	r3, [r3]
 404 0062 1A00     		movs	r2, r3
 405 0064 1A4B     		ldr	r3, .L16+4
 406 0066 1100     		movs	r1, r2
 407 0068 1800     		movs	r0, r3
 408 006a FFF7FEFF 		bl	strchr
 409 006e 031E     		subs	r3, r0, #0
 410 0070 0AD1     		bne	.L15
 105:command.c     ****                 break;
 106:command.c     ****             }
 107:command.c     ****             i++;
 411              		.loc 1 107 0
 412 0072 FB68     		ldr	r3, [r7, #12]
 413 0074 0133     		adds	r3, r3, #1
 414 0076 FB60     		str	r3, [r7, #12]
 108:command.c     ****             buf++;
 415              		.loc 1 108 0
 416 0078 7B68     		ldr	r3, [r7, #4]
 417 007a 0133     		adds	r3, r3, #1
 418 007c 7B60     		str	r3, [r7, #4]
 419              	.L9:
 103:command.c     ****             if (strchr(" \t", *buf) != NULL) {
 420              		.loc 1 103 0
 421 007e FA68     		ldr	r2, [r7, #12]
 422 0080 3B68     		ldr	r3, [r7]
 423 0082 9A42     		cmp	r2, r3
 424 0084 EBDB     		blt	.L12
 425 0086 00E0     		b	.L11
 426              	.L15:
ARM GAS  C:\Users\essele\AppData\Local\Temp\cci7Wywd.s 			page 12


 105:command.c     ****                 break;
 427              		.loc 1 105 0
 428 0088 C046     		nop
 429              	.L11:
 109:command.c     ****         }
 110:command.c     ****         // Null terminate the token
 111:command.c     ****         *buf++ = 0;
 430              		.loc 1 111 0
 431 008a 7B68     		ldr	r3, [r7, #4]
 432 008c 5A1C     		adds	r2, r3, #1
 433 008e 7A60     		str	r2, [r7, #4]
 434 0090 0022     		movs	r2, #0
 435 0092 1A70     		strb	r2, [r3]
 112:command.c     ****         i++;
 436              		.loc 1 112 0
 437 0094 FB68     		ldr	r3, [r7, #12]
 438 0096 0133     		adds	r3, r3, #1
 439 0098 FB60     		str	r3, [r7, #12]
 113:command.c     ****         tok_count++;
 440              		.loc 1 113 0
 441 009a 0C4B     		ldr	r3, .L16
 442 009c 1B68     		ldr	r3, [r3]
 443 009e 5A1C     		adds	r2, r3, #1
 444 00a0 0A4B     		ldr	r3, .L16
 445 00a2 1A60     		str	r2, [r3]
 114:command.c     ****         
 115:command.c     ****         if (tok_count == MAX_TOKS) {
 446              		.loc 1 115 0
 447 00a4 094B     		ldr	r3, .L16
 448 00a6 1B68     		ldr	r3, [r3]
 449 00a8 142B     		cmp	r3, #20
 450 00aa 05D1     		bne	.L2
 116:command.c     ****             serial_printf("<error: too many tokens>\r\n");
 451              		.loc 1 116 0
 452 00ac 0A4B     		ldr	r3, .L16+12
 453 00ae 1800     		movs	r0, r3
 454 00b0 FFF7FEFF 		bl	serial_printf
 117:command.c     ****             return 0;
 455              		.loc 1 117 0
 456 00b4 0023     		movs	r3, #0
 457 00b6 05E0     		b	.L8
 458              	.L2:
  84:command.c     ****         
 459              		.loc 1 84 0
 460 00b8 FA68     		ldr	r2, [r7, #12]
 461 00ba 3B68     		ldr	r3, [r7]
 462 00bc 9A42     		cmp	r2, r3
 463 00be BADB     		blt	.L3
 118:command.c     ****         }
 119:command.c     ****     }
 120:command.c     ****     return tok_count;
 464              		.loc 1 120 0
 465 00c0 024B     		ldr	r3, .L16
 466 00c2 1B68     		ldr	r3, [r3]
 467              	.L8:
 121:command.c     **** }
 468              		.loc 1 121 0
ARM GAS  C:\Users\essele\AppData\Local\Temp\cci7Wywd.s 			page 13


 469 00c4 1800     		movs	r0, r3
 470 00c6 BD46     		mov	sp, r7
 471 00c8 04B0     		add	sp, sp, #16
 472              		@ sp needed
 473 00ca 80BD     		pop	{r7, pc}
 474              	.L17:
 475              		.align	2
 476              	.L16:
 477 00cc 00000000 		.word	tok_count
 478 00d0 80050000 		.word	.LC37
 479 00d4 00000000 		.word	toks
 480 00d8 84050000 		.word	.LC40
 481              		.cfi_endproc
 482              	.LFE35:
 483              		.size	tokenise, .-tokenise
 484              		.section	.rodata
 485 059f 00       		.align	2
 486              	.LC42:
 487 05a0 30313233 		.ascii	"0123456789\000"
 487      34353637 
 487      383900
 488              		.section	.text.is_int,"ax",%progbits
 489              		.align	2
 490              		.global	is_int
 491              		.code	16
 492              		.thumb_func
 493              		.type	is_int, %function
 494              	is_int:
 495              	.LFB36:
 122:command.c     **** 
 123:command.c     **** /**
 124:command.c     ****  * is_int() and to_int()
 125:command.c     ****  */
 126:command.c     **** int is_int(char *v) {
 496              		.loc 1 126 0
 497              		.cfi_startproc
 498              		@ args = 0, pretend = 0, frame = 8
 499              		@ frame_needed = 1, uses_anonymous_args = 0
 500 0000 80B5     		push	{r7, lr}
 501              		.cfi_def_cfa_offset 8
 502              		.cfi_offset 7, -8
 503              		.cfi_offset 14, -4
 504 0002 82B0     		sub	sp, sp, #8
 505              		.cfi_def_cfa_offset 16
 506 0004 00AF     		add	r7, sp, #0
 507              		.cfi_def_cfa_register 7
 508 0006 7860     		str	r0, [r7, #4]
 127:command.c     ****     while(*v) {
 509              		.loc 1 127 0
 510 0008 0EE0     		b	.L19
 511              	.L22:
 128:command.c     ****         if (strchr("0123456789", *v) == NULL) {
 512              		.loc 1 128 0
 513 000a 7B68     		ldr	r3, [r7, #4]
 514 000c 1B78     		ldrb	r3, [r3]
 515 000e 1A00     		movs	r2, r3
 516 0010 0A4B     		ldr	r3, .L23
ARM GAS  C:\Users\essele\AppData\Local\Temp\cci7Wywd.s 			page 14


 517 0012 1100     		movs	r1, r2
 518 0014 1800     		movs	r0, r3
 519 0016 FFF7FEFF 		bl	strchr
 520 001a 031E     		subs	r3, r0, #0
 521 001c 01D1     		bne	.L20
 129:command.c     ****             return 0;
 522              		.loc 1 129 0
 523 001e 0023     		movs	r3, #0
 524 0020 07E0     		b	.L21
 525              	.L20:
 130:command.c     ****         }
 131:command.c     ****         v++;
 526              		.loc 1 131 0
 527 0022 7B68     		ldr	r3, [r7, #4]
 528 0024 0133     		adds	r3, r3, #1
 529 0026 7B60     		str	r3, [r7, #4]
 530              	.L19:
 127:command.c     ****         if (strchr("0123456789", *v) == NULL) {
 531              		.loc 1 127 0
 532 0028 7B68     		ldr	r3, [r7, #4]
 533 002a 1B78     		ldrb	r3, [r3]
 534 002c 002B     		cmp	r3, #0
 535 002e ECD1     		bne	.L22
 132:command.c     ****     }
 133:command.c     ****     return 1;
 536              		.loc 1 133 0
 537 0030 0123     		movs	r3, #1
 538              	.L21:
 134:command.c     **** }
 539              		.loc 1 134 0
 540 0032 1800     		movs	r0, r3
 541 0034 BD46     		mov	sp, r7
 542 0036 02B0     		add	sp, sp, #8
 543              		@ sp needed
 544 0038 80BD     		pop	{r7, pc}
 545              	.L24:
 546 003a C046     		.align	2
 547              	.L23:
 548 003c A0050000 		.word	.LC42
 549              		.cfi_endproc
 550              	.LFE36:
 551              		.size	is_int, .-is_int
 552              		.section	.text.to_int,"ax",%progbits
 553              		.align	2
 554              		.global	to_int
 555              		.code	16
 556              		.thumb_func
 557              		.type	to_int, %function
 558              	to_int:
 559              	.LFB37:
 135:command.c     **** 
 136:command.c     **** int to_int(char *v) {
 560              		.loc 1 136 0
 561              		.cfi_startproc
 562              		@ args = 0, pretend = 0, frame = 16
 563              		@ frame_needed = 1, uses_anonymous_args = 0
 564 0000 80B5     		push	{r7, lr}
ARM GAS  C:\Users\essele\AppData\Local\Temp\cci7Wywd.s 			page 15


 565              		.cfi_def_cfa_offset 8
 566              		.cfi_offset 7, -8
 567              		.cfi_offset 14, -4
 568 0002 84B0     		sub	sp, sp, #16
 569              		.cfi_def_cfa_offset 24
 570 0004 00AF     		add	r7, sp, #0
 571              		.cfi_def_cfa_register 7
 572 0006 7860     		str	r0, [r7, #4]
 137:command.c     ****     int i = 0;
 573              		.loc 1 137 0
 574 0008 0023     		movs	r3, #0
 575 000a FB60     		str	r3, [r7, #12]
 138:command.c     ****     while(*v) {
 576              		.loc 1 138 0
 577 000c 0DE0     		b	.L26
 578              	.L27:
 139:command.c     ****         i *= 10;
 579              		.loc 1 139 0
 580 000e FA68     		ldr	r2, [r7, #12]
 581 0010 1300     		movs	r3, r2
 582 0012 9B00     		lsls	r3, r3, #2
 583 0014 9B18     		adds	r3, r3, r2
 584 0016 5B00     		lsls	r3, r3, #1
 585 0018 FB60     		str	r3, [r7, #12]
 140:command.c     ****         i += (*v++ - '0');
 586              		.loc 1 140 0
 587 001a 7B68     		ldr	r3, [r7, #4]
 588 001c 5A1C     		adds	r2, r3, #1
 589 001e 7A60     		str	r2, [r7, #4]
 590 0020 1B78     		ldrb	r3, [r3]
 591 0022 303B     		subs	r3, r3, #48
 592 0024 FA68     		ldr	r2, [r7, #12]
 593 0026 D318     		adds	r3, r2, r3
 594 0028 FB60     		str	r3, [r7, #12]
 595              	.L26:
 138:command.c     ****     while(*v) {
 596              		.loc 1 138 0
 597 002a 7B68     		ldr	r3, [r7, #4]
 598 002c 1B78     		ldrb	r3, [r3]
 599 002e 002B     		cmp	r3, #0
 600 0030 EDD1     		bne	.L27
 141:command.c     ****     }
 142:command.c     ****     return i;
 601              		.loc 1 142 0
 602 0032 FB68     		ldr	r3, [r7, #12]
 143:command.c     **** }
 603              		.loc 1 143 0
 604 0034 1800     		movs	r0, r3
 605 0036 BD46     		mov	sp, r7
 606 0038 04B0     		add	sp, sp, #16
 607              		@ sp needed
 608 003a 80BD     		pop	{r7, pc}
 609              		.cfi_endproc
 610              	.LFE37:
 611              		.size	to_int, .-to_int
 612              		.section	.rodata
 613 05ab 00       		.align	2
ARM GAS  C:\Users\essele\AppData\Local\Temp\cci7Wywd.s 			page 16


 614              	.LC46:
 615 05ac 3C657272 		.ascii	"<error: unknown ++ command>\015\012\000"
 615      6F723A20 
 615      756E6B6E 
 615      6F776E20 
 615      2B2B2063 
 616              		.section	.text.cmd_process,"ax",%progbits
 617              		.align	2
 618              		.global	cmd_process
 619              		.code	16
 620              		.thumb_func
 621              		.type	cmd_process, %function
 622              	cmd_process:
 623              	.LFB38:
 144:command.c     **** 
 145:command.c     **** /**
 146:command.c     ****  * Take the command line and call the appropriate command function, we will be
 147:command.c     ****  * called only when the first two characters are ++, so we can skip those here
 148:command.c     ****  */
 149:command.c     **** void cmd_process(uint8_t *buf, int len) {
 624              		.loc 1 149 0
 625              		.cfi_startproc
 626              		@ args = 0, pretend = 0, frame = 16
 627              		@ frame_needed = 1, uses_anonymous_args = 0
 628 0000 80B5     		push	{r7, lr}
 629              		.cfi_def_cfa_offset 8
 630              		.cfi_offset 7, -8
 631              		.cfi_offset 14, -4
 632 0002 84B0     		sub	sp, sp, #16
 633              		.cfi_def_cfa_offset 24
 634 0004 00AF     		add	r7, sp, #0
 635              		.cfi_def_cfa_register 7
 636 0006 7860     		str	r0, [r7, #4]
 637 0008 3960     		str	r1, [r7]
 150:command.c     ****     int argc = tokenise(buf, len);
 638              		.loc 1 150 0
 639 000a 3A68     		ldr	r2, [r7]
 640 000c 7B68     		ldr	r3, [r7, #4]
 641 000e 1100     		movs	r1, r2
 642 0010 1800     		movs	r0, r3
 643 0012 FFF7FEFF 		bl	tokenise
 644 0016 0300     		movs	r3, r0
 645 0018 BB60     		str	r3, [r7, #8]
 151:command.c     **** 
 152:command.c     ****     // We will always have the command a minimum, so return if 0
 153:command.c     ****     if (argc == 0) {
 646              		.loc 1 153 0
 647 001a BB68     		ldr	r3, [r7, #8]
 648 001c 002B     		cmp	r3, #0
 649 001e 29D0     		beq	.L35
 154:command.c     ****         return;
 155:command.c     ****     }
 156:command.c     ****     
 157:command.c     ****     // Find the command entry in the list...
 158:command.c     ****     int i = 0;
 650              		.loc 1 158 0
 651 0020 0023     		movs	r3, #0
ARM GAS  C:\Users\essele\AppData\Local\Temp\cci7Wywd.s 			page 17


 652 0022 FB60     		str	r3, [r7, #12]
 159:command.c     ****     while (commands[i].name != NULL) {
 653              		.loc 1 159 0
 654 0024 1BE0     		b	.L32
 655              	.L34:
 160:command.c     ****         if (strcmp(toks[0], commands[i].name) == 0) {
 656              		.loc 1 160 0
 657 0026 154B     		ldr	r3, .L36
 658 0028 1868     		ldr	r0, [r3]
 659 002a 154B     		ldr	r3, .L36+4
 660 002c FA68     		ldr	r2, [r7, #12]
 661 002e 5201     		lsls	r2, r2, #5
 662 0030 D358     		ldr	r3, [r2, r3]
 663 0032 1900     		movs	r1, r3
 664 0034 FFF7FEFF 		bl	strcmp
 665 0038 031E     		subs	r3, r0, #0
 666 003a 0DD1     		bne	.L33
 161:command.c     ****             commands[i].func(toks, argc, &commands[i]);
 667              		.loc 1 161 0
 668 003c 104A     		ldr	r2, .L36+4
 669 003e FB68     		ldr	r3, [r7, #12]
 670 0040 5B01     		lsls	r3, r3, #5
 671 0042 D318     		adds	r3, r2, r3
 672 0044 0433     		adds	r3, r3, #4
 673 0046 1B68     		ldr	r3, [r3]
 674 0048 FA68     		ldr	r2, [r7, #12]
 675 004a 5101     		lsls	r1, r2, #5
 676 004c 0C4A     		ldr	r2, .L36+4
 677 004e 8A18     		adds	r2, r1, r2
 678 0050 B968     		ldr	r1, [r7, #8]
 679 0052 0A48     		ldr	r0, .L36
 680 0054 9847     		blx	r3
 162:command.c     ****             return;
 681              		.loc 1 162 0
 682 0056 0EE0     		b	.L29
 683              	.L33:
 163:command.c     ****         }
 164:command.c     ****         i++;
 684              		.loc 1 164 0
 685 0058 FB68     		ldr	r3, [r7, #12]
 686 005a 0133     		adds	r3, r3, #1
 687 005c FB60     		str	r3, [r7, #12]
 688              	.L32:
 159:command.c     ****         if (strcmp(toks[0], commands[i].name) == 0) {
 689              		.loc 1 159 0
 690 005e 084B     		ldr	r3, .L36+4
 691 0060 FA68     		ldr	r2, [r7, #12]
 692 0062 5201     		lsls	r2, r2, #5
 693 0064 D358     		ldr	r3, [r2, r3]
 694 0066 002B     		cmp	r3, #0
 695 0068 DDD1     		bne	.L34
 165:command.c     ****     }
 166:command.c     ****     serial_printf("<error: unknown ++ command>\r\n");
 696              		.loc 1 166 0
 697 006a 064B     		ldr	r3, .L36+8
 698 006c 1800     		movs	r0, r3
 699 006e FFF7FEFF 		bl	serial_printf
ARM GAS  C:\Users\essele\AppData\Local\Temp\cci7Wywd.s 			page 18


 700 0072 00E0     		b	.L29
 701              	.L35:
 154:command.c     ****     }
 702              		.loc 1 154 0
 703 0074 C046     		nop
 704              	.L29:
 167:command.c     **** }
 705              		.loc 1 167 0
 706 0076 BD46     		mov	sp, r7
 707 0078 04B0     		add	sp, sp, #16
 708              		@ sp needed
 709 007a 80BD     		pop	{r7, pc}
 710              	.L37:
 711              		.align	2
 712              	.L36:
 713 007c 00000000 		.word	toks
 714 0080 00000000 		.word	commands
 715 0084 AC050000 		.word	.LC46
 716              		.cfi_endproc
 717              	.LFE38:
 718              		.size	cmd_process, .-cmd_process
 719              		.section	.rodata
 720 05ca 0000     		.align	2
 721              	.LC48:
 722 05cc 3C757361 		.ascii	"<usage: ++%s\000"
 722      67653A20 
 722      2B2B2573 
 722      00
 723 05d9 000000   		.align	2
 724              	.LC50:
 725 05dc 20257300 		.ascii	" %s\000"
 726              		.align	2
 727              	.LC52:
 728 05e0 3E0D0A00 		.ascii	">\015\012\000"
 729              		.align	2
 730              	.LC54:
 731 05e4 25730D0A 		.ascii	"%s\015\012\000"
 731      00
 732 05e9 000000   		.align	2
 733              	.LC56:
 734 05ec 09256420 		.ascii	"\011%d - %s\015\012\000"
 734      2D202573 
 734      0D0A00
 735 05f7 00       		.align	2
 736              	.LC58:
 737 05f8 09286375 		.ascii	"\011(current setting: %d)\015\012\000"
 737      7272656E 
 737      74207365 
 737      7474696E 
 737      673A2025 
 738              		.section	.text.cmd_usage,"ax",%progbits
 739              		.align	2
 740              		.global	cmd_usage
 741              		.code	16
 742              		.thumb_func
 743              		.type	cmd_usage, %function
 744              	cmd_usage:
ARM GAS  C:\Users\essele\AppData\Local\Temp\cci7Wywd.s 			page 19


 745              	.LFB39:
 168:command.c     **** 
 169:command.c     **** 
 170:command.c     **** 
 171:command.c     **** void cmd_usage(char *argv[], const struct cmd *cmd) {
 746              		.loc 1 171 0
 747              		.cfi_startproc
 748              		@ args = 0, pretend = 0, frame = 24
 749              		@ frame_needed = 1, uses_anonymous_args = 0
 750 0000 80B5     		push	{r7, lr}
 751              		.cfi_def_cfa_offset 8
 752              		.cfi_offset 7, -8
 753              		.cfi_offset 14, -4
 754 0002 86B0     		sub	sp, sp, #24
 755              		.cfi_def_cfa_offset 32
 756 0004 00AF     		add	r7, sp, #0
 757              		.cfi_def_cfa_register 7
 758 0006 7860     		str	r0, [r7, #4]
 759 0008 3960     		str	r1, [r7]
 172:command.c     ****     const char **p = cmd->usage;
 760              		.loc 1 172 0
 761 000a 3B68     		ldr	r3, [r7]
 762 000c 5B69     		ldr	r3, [r3, #20]
 763 000e 7B61     		str	r3, [r7, #20]
 173:command.c     ****     serial_printf("<usage: ++%s", argv[0]);
 764              		.loc 1 173 0
 765 0010 7B68     		ldr	r3, [r7, #4]
 766 0012 1A68     		ldr	r2, [r3]
 767 0014 294B     		ldr	r3, .L46
 768 0016 1100     		movs	r1, r2
 769 0018 1800     		movs	r0, r3
 770 001a FFF7FEFF 		bl	serial_printf
 174:command.c     ****     if (**p) {
 771              		.loc 1 174 0
 772 001e 7B69     		ldr	r3, [r7, #20]
 773 0020 1B68     		ldr	r3, [r3]
 774 0022 1B78     		ldrb	r3, [r3]
 775 0024 002B     		cmp	r3, #0
 776 0026 08D0     		beq	.L39
 175:command.c     ****         serial_printf(" %s", *p++);
 777              		.loc 1 175 0
 778 0028 7B69     		ldr	r3, [r7, #20]
 779 002a 1A1D     		adds	r2, r3, #4
 780 002c 7A61     		str	r2, [r7, #20]
 781 002e 1A68     		ldr	r2, [r3]
 782 0030 234B     		ldr	r3, .L46+4
 783 0032 1100     		movs	r1, r2
 784 0034 1800     		movs	r0, r3
 785 0036 FFF7FEFF 		bl	serial_printf
 786              	.L39:
 176:command.c     ****     }
 177:command.c     ****     serial_printf(">\r\n");
 787              		.loc 1 177 0
 788 003a 224B     		ldr	r3, .L46+8
 789 003c 1800     		movs	r0, r3
 790 003e FFF7FEFF 		bl	serial_printf
 178:command.c     ****     
ARM GAS  C:\Users\essele\AppData\Local\Temp\cci7Wywd.s 			page 20


 179:command.c     ****     // First print any additional usage instructions...
 180:command.c     ****     while(*p) {
 791              		.loc 1 180 0
 792 0042 08E0     		b	.L40
 793              	.L41:
 181:command.c     ****         serial_printf("%s\r\n", (char *)*p++);
 794              		.loc 1 181 0
 795 0044 7B69     		ldr	r3, [r7, #20]
 796 0046 1A1D     		adds	r2, r3, #4
 797 0048 7A61     		str	r2, [r7, #20]
 798 004a 1A68     		ldr	r2, [r3]
 799 004c 1E4B     		ldr	r3, .L46+12
 800 004e 1100     		movs	r1, r2
 801 0050 1800     		movs	r0, r3
 802 0052 FFF7FEFF 		bl	serial_printf
 803              	.L40:
 180:command.c     ****         serial_printf("%s\r\n", (char *)*p++);
 804              		.loc 1 180 0
 805 0056 7B69     		ldr	r3, [r7, #20]
 806 0058 1B68     		ldr	r3, [r3]
 807 005a 002B     		cmp	r3, #0
 808 005c F2D1     		bne	.L41
 182:command.c     ****     }
 183:command.c     ****     
 184:command.c     ****     // Now handle specific value meanings if they are there
 185:command.c     ****     if (cmd->meanings) {
 809              		.loc 1 185 0
 810 005e 3B68     		ldr	r3, [r7]
 811 0060 9B69     		ldr	r3, [r3, #24]
 812 0062 002B     		cmp	r3, #0
 813 0064 12D0     		beq	.L42
 814              	.LBB2:
 186:command.c     ****         const struct item_meaning *m = cmd->meanings;
 815              		.loc 1 186 0
 816 0066 3B68     		ldr	r3, [r7]
 817 0068 9B69     		ldr	r3, [r3, #24]
 818 006a 3B61     		str	r3, [r7, #16]
 187:command.c     ****         while (m->meaning != NULL) {
 819              		.loc 1 187 0
 820 006c 0AE0     		b	.L43
 821              	.L44:
 188:command.c     ****             serial_printf("\t%d - %s\r\n", m->value, m->meaning);
 822              		.loc 1 188 0
 823 006e 3B69     		ldr	r3, [r7, #16]
 824 0070 1968     		ldr	r1, [r3]
 825 0072 3B69     		ldr	r3, [r7, #16]
 826 0074 5A68     		ldr	r2, [r3, #4]
 827 0076 154B     		ldr	r3, .L46+16
 828 0078 1800     		movs	r0, r3
 829 007a FFF7FEFF 		bl	serial_printf
 189:command.c     ****             m++;
 830              		.loc 1 189 0
 831 007e 3B69     		ldr	r3, [r7, #16]
 832 0080 0833     		adds	r3, r3, #8
 833 0082 3B61     		str	r3, [r7, #16]
 834              	.L43:
 187:command.c     ****         while (m->meaning != NULL) {
ARM GAS  C:\Users\essele\AppData\Local\Temp\cci7Wywd.s 			page 21


 835              		.loc 1 187 0
 836 0084 3B69     		ldr	r3, [r7, #16]
 837 0086 5B68     		ldr	r3, [r3, #4]
 838 0088 002B     		cmp	r3, #0
 839 008a F0D1     		bne	.L44
 840              	.L42:
 841              	.LBE2:
 190:command.c     ****         }
 191:command.c     ****     }
 192:command.c     ****     
 193:command.c     ****     // If it's a setting then we can show the current value
 194:command.c     ****     if (cmd->setting) {
 842              		.loc 1 194 0
 843 008c 3B68     		ldr	r3, [r7]
 844 008e 9B68     		ldr	r3, [r3, #8]
 845 0090 002B     		cmp	r3, #0
 846 0092 0DD0     		beq	.L45
 847              	.LBB3:
 195:command.c     ****         uint16_t value = *cmd->setting;
 848              		.loc 1 195 0
 849 0094 3B68     		ldr	r3, [r7]
 850 0096 9A68     		ldr	r2, [r3, #8]
 851 0098 0E23     		movs	r3, #14
 852 009a FB18     		adds	r3, r7, r3
 853 009c 1288     		ldrh	r2, [r2]
 854 009e 1A80     		strh	r2, [r3]
 196:command.c     ****         serial_printf("\t(current setting: %d)\r\n", value);
 855              		.loc 1 196 0
 856 00a0 0E23     		movs	r3, #14
 857 00a2 FB18     		adds	r3, r7, r3
 858 00a4 1A88     		ldrh	r2, [r3]
 859 00a6 0A4B     		ldr	r3, .L46+20
 860 00a8 1100     		movs	r1, r2
 861 00aa 1800     		movs	r0, r3
 862 00ac FFF7FEFF 		bl	serial_printf
 863              	.L45:
 864              	.LBE3:
 197:command.c     ****     }
 198:command.c     ****    
 199:command.c     ****     // Send it...
 200:command.c     ****     serial_flush();
 865              		.loc 1 200 0
 866 00b0 FFF7FEFF 		bl	serial_flush
 201:command.c     **** }
 867              		.loc 1 201 0
 868 00b4 C046     		nop
 869 00b6 BD46     		mov	sp, r7
 870 00b8 06B0     		add	sp, sp, #24
 871              		@ sp needed
 872 00ba 80BD     		pop	{r7, pc}
 873              	.L47:
 874              		.align	2
 875              	.L46:
 876 00bc CC050000 		.word	.LC48
 877 00c0 DC050000 		.word	.LC50
 878 00c4 E0050000 		.word	.LC52
 879 00c8 E4050000 		.word	.LC54
ARM GAS  C:\Users\essele\AppData\Local\Temp\cci7Wywd.s 			page 22


 880 00cc EC050000 		.word	.LC56
 881 00d0 F8050000 		.word	.LC58
 882              		.cfi_endproc
 883              	.LFE39:
 884              		.size	cmd_usage, .-cmd_usage
 885              		.section	.rodata
 886 0611 000000   		.align	2
 887              	.LC60:
 888 0614 25640D0A 		.ascii	"%d\015\012\000"
 888      00
 889              		.section	.text.cmd_uint,"ax",%progbits
 890              		.align	2
 891              		.global	cmd_uint
 892              		.code	16
 893              		.thumb_func
 894              		.type	cmd_uint, %function
 895              	cmd_uint:
 896              	.LFB40:
 202:command.c     **** 
 203:command.c     **** /**
 204:command.c     ****  * Process a command that sets/gets an integer argument
 205:command.c     ****  */
 206:command.c     **** int cmd_uint(char *argv[], int argc, const struct cmd *cmd) {
 897              		.loc 1 206 0
 898              		.cfi_startproc
 899              		@ args = 0, pretend = 0, frame = 24
 900              		@ frame_needed = 1, uses_anonymous_args = 0
 901 0000 80B5     		push	{r7, lr}
 902              		.cfi_def_cfa_offset 8
 903              		.cfi_offset 7, -8
 904              		.cfi_offset 14, -4
 905 0002 86B0     		sub	sp, sp, #24
 906              		.cfi_def_cfa_offset 32
 907 0004 00AF     		add	r7, sp, #0
 908              		.cfi_def_cfa_register 7
 909 0006 F860     		str	r0, [r7, #12]
 910 0008 B960     		str	r1, [r7, #8]
 911 000a 7A60     		str	r2, [r7, #4]
 207:command.c     ****     if (argc == 1) {
 912              		.loc 1 207 0
 913 000c BB68     		ldr	r3, [r7, #8]
 914 000e 012B     		cmp	r3, #1
 915 0010 0AD1     		bne	.L49
 208:command.c     ****         // Get the value...
 209:command.c     ****         serial_printf("%d\r\n", *(cmd->setting));
 916              		.loc 1 209 0
 917 0012 7B68     		ldr	r3, [r7, #4]
 918 0014 9B68     		ldr	r3, [r3, #8]
 919 0016 1B88     		ldrh	r3, [r3]
 920 0018 1A00     		movs	r2, r3
 921 001a 264B     		ldr	r3, .L56
 922 001c 1100     		movs	r1, r2
 923 001e 1800     		movs	r0, r3
 924 0020 FFF7FEFF 		bl	serial_printf
 210:command.c     ****         return 0;
 925              		.loc 1 210 0
 926 0024 0023     		movs	r3, #0
ARM GAS  C:\Users\essele\AppData\Local\Temp\cci7Wywd.s 			page 23


 927 0026 40E0     		b	.L50
 928              	.L49:
 211:command.c     ****     }
 212:command.c     ****     if (argc != 2 || !is_int(argv[1])) {
 929              		.loc 1 212 0
 930 0028 BB68     		ldr	r3, [r7, #8]
 931 002a 022B     		cmp	r3, #2
 932 002c 07D1     		bne	.L51
 933              		.loc 1 212 0 is_stmt 0 discriminator 1
 934 002e FB68     		ldr	r3, [r7, #12]
 935 0030 0433     		adds	r3, r3, #4
 936 0032 1B68     		ldr	r3, [r3]
 937 0034 1800     		movs	r0, r3
 938 0036 FFF7FEFF 		bl	is_int
 939 003a 031E     		subs	r3, r0, #0
 940 003c 07D1     		bne	.L52
 941              	.L51:
 213:command.c     ****         cmd_usage(argv, cmd);
 942              		.loc 1 213 0 is_stmt 1
 943 003e 7A68     		ldr	r2, [r7, #4]
 944 0040 FB68     		ldr	r3, [r7, #12]
 945 0042 1100     		movs	r1, r2
 946 0044 1800     		movs	r0, r3
 947 0046 FFF7FEFF 		bl	cmd_usage
 214:command.c     ****         return 1;
 948              		.loc 1 214 0
 949 004a 0123     		movs	r3, #1
 950 004c 2DE0     		b	.L50
 951              	.L52:
 215:command.c     ****     }
 216:command.c     ****     int byte = to_int(argv[1]);
 952              		.loc 1 216 0
 953 004e FB68     		ldr	r3, [r7, #12]
 954 0050 0433     		adds	r3, r3, #4
 955 0052 1B68     		ldr	r3, [r3]
 956 0054 1800     		movs	r0, r3
 957 0056 FFF7FEFF 		bl	to_int
 958 005a 0300     		movs	r3, r0
 959 005c 7B61     		str	r3, [r7, #20]
 217:command.c     ****     if (byte < cmd->min || byte > cmd->max) {
 960              		.loc 1 217 0
 961 005e 7B68     		ldr	r3, [r7, #4]
 962 0060 9B89     		ldrh	r3, [r3, #12]
 963 0062 1A00     		movs	r2, r3
 964 0064 7B69     		ldr	r3, [r7, #20]
 965 0066 9A42     		cmp	r2, r3
 966 0068 05DC     		bgt	.L53
 967              		.loc 1 217 0 is_stmt 0 discriminator 1
 968 006a 7B68     		ldr	r3, [r7, #4]
 969 006c DB89     		ldrh	r3, [r3, #14]
 970 006e 1A00     		movs	r2, r3
 971 0070 7B69     		ldr	r3, [r7, #20]
 972 0072 9A42     		cmp	r2, r3
 973 0074 07DA     		bge	.L54
 974              	.L53:
 218:command.c     ****         cmd_usage(argv, cmd);
 975              		.loc 1 218 0 is_stmt 1
ARM GAS  C:\Users\essele\AppData\Local\Temp\cci7Wywd.s 			page 24


 976 0076 7A68     		ldr	r2, [r7, #4]
 977 0078 FB68     		ldr	r3, [r7, #12]
 978 007a 1100     		movs	r1, r2
 979 007c 1800     		movs	r0, r3
 980 007e FFF7FEFF 		bl	cmd_usage
 219:command.c     ****         return 1;
 981              		.loc 1 219 0
 982 0082 0123     		movs	r3, #1
 983 0084 11E0     		b	.L50
 984              	.L54:
 220:command.c     ****     }
 221:command.c     ****     
 222:command.c     ****     *(cmd->setting) = (uint16_t)byte;
 985              		.loc 1 222 0
 986 0086 7B68     		ldr	r3, [r7, #4]
 987 0088 9B68     		ldr	r3, [r3, #8]
 988 008a 7A69     		ldr	r2, [r7, #20]
 989 008c 92B2     		uxth	r2, r2
 990 008e 1A80     		strh	r2, [r3]
 223:command.c     ****     
 224:command.c     ****     if (cmd->post_func != NULL) {
 991              		.loc 1 224 0
 992 0090 7B68     		ldr	r3, [r7, #4]
 993 0092 DB69     		ldr	r3, [r3, #28]
 994 0094 002B     		cmp	r3, #0
 995 0096 07D0     		beq	.L55
 225:command.c     ****         return cmd->post_func(argv, argc);
 996              		.loc 1 225 0
 997 0098 7B68     		ldr	r3, [r7, #4]
 998 009a DB69     		ldr	r3, [r3, #28]
 999 009c B968     		ldr	r1, [r7, #8]
 1000 009e FA68     		ldr	r2, [r7, #12]
 1001 00a0 1000     		movs	r0, r2
 1002 00a2 9847     		blx	r3
 1003 00a4 0300     		movs	r3, r0
 1004 00a6 00E0     		b	.L50
 1005              	.L55:
 226:command.c     ****     }
 227:command.c     ****     return 0;
 1006              		.loc 1 227 0
 1007 00a8 0023     		movs	r3, #0
 1008              	.L50:
 228:command.c     **** }
 1009              		.loc 1 228 0
 1010 00aa 1800     		movs	r0, r3
 1011 00ac BD46     		mov	sp, r7
 1012 00ae 06B0     		add	sp, sp, #24
 1013              		@ sp needed
 1014 00b0 80BD     		pop	{r7, pc}
 1015              	.L57:
 1016 00b2 C046     		.align	2
 1017              	.L56:
 1018 00b4 14060000 		.word	.LC60
 1019              		.cfi_endproc
 1020              	.LFE40:
 1021              		.size	cmd_uint, .-cmd_uint
 1022              		.section	.text.cmd_noargs,"ax",%progbits
ARM GAS  C:\Users\essele\AppData\Local\Temp\cci7Wywd.s 			page 25


 1023              		.align	2
 1024              		.global	cmd_noargs
 1025              		.code	16
 1026              		.thumb_func
 1027              		.type	cmd_noargs, %function
 1028              	cmd_noargs:
 1029              	.LFB41:
 229:command.c     **** 
 230:command.c     **** /**
 231:command.c     ****  * A command that takes no arguments is really just a call to the helper function, but
 232:command.c     ****  * we will check the syntax first
 233:command.c     ****  */
 234:command.c     **** int cmd_noargs(char *argv[], int argc, const struct cmd *cmd) {
 1030              		.loc 1 234 0
 1031              		.cfi_startproc
 1032              		@ args = 0, pretend = 0, frame = 16
 1033              		@ frame_needed = 1, uses_anonymous_args = 0
 1034 0000 80B5     		push	{r7, lr}
 1035              		.cfi_def_cfa_offset 8
 1036              		.cfi_offset 7, -8
 1037              		.cfi_offset 14, -4
 1038 0002 84B0     		sub	sp, sp, #16
 1039              		.cfi_def_cfa_offset 24
 1040 0004 00AF     		add	r7, sp, #0
 1041              		.cfi_def_cfa_register 7
 1042 0006 F860     		str	r0, [r7, #12]
 1043 0008 B960     		str	r1, [r7, #8]
 1044 000a 7A60     		str	r2, [r7, #4]
 235:command.c     ****     if (argc != 1) {
 1045              		.loc 1 235 0
 1046 000c BB68     		ldr	r3, [r7, #8]
 1047 000e 012B     		cmp	r3, #1
 1048 0010 07D0     		beq	.L59
 236:command.c     ****         cmd_usage(argv, cmd);
 1049              		.loc 1 236 0
 1050 0012 7A68     		ldr	r2, [r7, #4]
 1051 0014 FB68     		ldr	r3, [r7, #12]
 1052 0016 1100     		movs	r1, r2
 1053 0018 1800     		movs	r0, r3
 1054 001a FFF7FEFF 		bl	cmd_usage
 237:command.c     ****         return 1;
 1055              		.loc 1 237 0
 1056 001e 0123     		movs	r3, #1
 1057 0020 0CE0     		b	.L60
 1058              	.L59:
 238:command.c     ****     }
 239:command.c     ****     if (cmd->post_func != NULL) {
 1059              		.loc 1 239 0
 1060 0022 7B68     		ldr	r3, [r7, #4]
 1061 0024 DB69     		ldr	r3, [r3, #28]
 1062 0026 002B     		cmp	r3, #0
 1063 0028 07D0     		beq	.L61
 240:command.c     ****         return cmd->post_func(argv, argc);
 1064              		.loc 1 240 0
 1065 002a 7B68     		ldr	r3, [r7, #4]
 1066 002c DB69     		ldr	r3, [r3, #28]
 1067 002e B968     		ldr	r1, [r7, #8]
ARM GAS  C:\Users\essele\AppData\Local\Temp\cci7Wywd.s 			page 26


 1068 0030 FA68     		ldr	r2, [r7, #12]
 1069 0032 1000     		movs	r0, r2
 1070 0034 9847     		blx	r3
 1071 0036 0300     		movs	r3, r0
 1072 0038 00E0     		b	.L60
 1073              	.L61:
 241:command.c     ****     }
 242:command.c     ****     return 0;    
 1074              		.loc 1 242 0
 1075 003a 0023     		movs	r3, #0
 1076              	.L60:
 243:command.c     **** }
 1077              		.loc 1 243 0
 1078 003c 1800     		movs	r0, r3
 1079 003e BD46     		mov	sp, r7
 1080 0040 04B0     		add	sp, sp, #16
 1081              		@ sp needed
 1082 0042 80BD     		pop	{r7, pc}
 1083              		.cfi_endproc
 1084              	.LFE41:
 1085              		.size	cmd_noargs, .-cmd_noargs
 1086              		.section	.rodata
 1087 0619 000000   		.align	2
 1088              	.LC63:
 1089 061c 2B2B252D 		.ascii	"++%-12.12s\011%s\015\012\000"
 1089      31322E31 
 1089      32730925 
 1089      730D0A00 
 1090              		.align	2
 1091              	.LC65:
 1092 062c 3C657272 		.ascii	"<error: unknown command: %s>\015\012\000"
 1092      6F723A20 
 1092      756E6B6E 
 1092      6F776E20 
 1092      636F6D6D 
 1093              		.section	.text.cmd_help,"ax",%progbits
 1094              		.align	2
 1095              		.global	cmd_help
 1096              		.code	16
 1097              		.thumb_func
 1098              		.type	cmd_help, %function
 1099              	cmd_help:
 1100              	.LFB42:
 244:command.c     **** 
 245:command.c     **** /**
 246:command.c     ****  * The help command can take zero or one arguments
 247:command.c     ****  */
 248:command.c     **** int cmd_help(char *argv[], int argc, const struct cmd *cmd) {
 1101              		.loc 1 248 0
 1102              		.cfi_startproc
 1103              		@ args = 0, pretend = 0, frame = 24
 1104              		@ frame_needed = 1, uses_anonymous_args = 0
 1105 0000 80B5     		push	{r7, lr}
 1106              		.cfi_def_cfa_offset 8
 1107              		.cfi_offset 7, -8
 1108              		.cfi_offset 14, -4
 1109 0002 86B0     		sub	sp, sp, #24
ARM GAS  C:\Users\essele\AppData\Local\Temp\cci7Wywd.s 			page 27


 1110              		.cfi_def_cfa_offset 32
 1111 0004 00AF     		add	r7, sp, #0
 1112              		.cfi_def_cfa_register 7
 1113 0006 F860     		str	r0, [r7, #12]
 1114 0008 B960     		str	r1, [r7, #8]
 1115 000a 7A60     		str	r2, [r7, #4]
 249:command.c     ****     // Did we even get the help command wrong?
 250:command.c     ****     if (argc > 2) {
 1116              		.loc 1 250 0
 1117 000c BB68     		ldr	r3, [r7, #8]
 1118 000e 022B     		cmp	r3, #2
 1119 0010 07DD     		ble	.L63
 251:command.c     ****         cmd_usage(argv, cmd);
 1120              		.loc 1 251 0
 1121 0012 7A68     		ldr	r2, [r7, #4]
 1122 0014 FB68     		ldr	r3, [r7, #12]
 1123 0016 1100     		movs	r1, r2
 1124 0018 1800     		movs	r0, r3
 1125 001a FFF7FEFF 		bl	cmd_usage
 252:command.c     ****         return 1;
 1126              		.loc 1 252 0
 1127 001e 0123     		movs	r3, #1
 1128 0020 4AE0     		b	.L64
 1129              	.L63:
 253:command.c     ****     }
 254:command.c     ****     // No args, means just show the list...
 255:command.c     ****     if (argc == 1) {
 1130              		.loc 1 255 0
 1131 0022 BB68     		ldr	r3, [r7, #8]
 1132 0024 012B     		cmp	r3, #1
 1133 0026 1BD1     		bne	.L65
 1134              	.LBB4:
 256:command.c     ****         int i = 0;
 1135              		.loc 1 256 0
 1136 0028 0023     		movs	r3, #0
 1137 002a 7B61     		str	r3, [r7, #20]
 257:command.c     ****         while (commands[i].name != NULL) {
 1138              		.loc 1 257 0
 1139 002c 10E0     		b	.L66
 1140              	.L67:
 258:command.c     ****             serial_printf("++%-12.12s\t%s\r\n", commands[i].name, commands[i].help);
 1141              		.loc 1 258 0
 1142 002e 244B     		ldr	r3, .L71
 1143 0030 7A69     		ldr	r2, [r7, #20]
 1144 0032 5201     		lsls	r2, r2, #5
 1145 0034 D158     		ldr	r1, [r2, r3]
 1146 0036 224A     		ldr	r2, .L71
 1147 0038 7B69     		ldr	r3, [r7, #20]
 1148 003a 5B01     		lsls	r3, r3, #5
 1149 003c D318     		adds	r3, r2, r3
 1150 003e 1033     		adds	r3, r3, #16
 1151 0040 1A68     		ldr	r2, [r3]
 1152 0042 204B     		ldr	r3, .L71+4
 1153 0044 1800     		movs	r0, r3
 1154 0046 FFF7FEFF 		bl	serial_printf
 259:command.c     ****             i++;
 1155              		.loc 1 259 0
ARM GAS  C:\Users\essele\AppData\Local\Temp\cci7Wywd.s 			page 28


 1156 004a 7B69     		ldr	r3, [r7, #20]
 1157 004c 0133     		adds	r3, r3, #1
 1158 004e 7B61     		str	r3, [r7, #20]
 1159              	.L66:
 257:command.c     ****         while (commands[i].name != NULL) {
 1160              		.loc 1 257 0
 1161 0050 1B4B     		ldr	r3, .L71
 1162 0052 7A69     		ldr	r2, [r7, #20]
 1163 0054 5201     		lsls	r2, r2, #5
 1164 0056 D358     		ldr	r3, [r2, r3]
 1165 0058 002B     		cmp	r3, #0
 1166 005a E8D1     		bne	.L67
 260:command.c     ****         }
 261:command.c     ****         return 0;
 1167              		.loc 1 261 0
 1168 005c 0023     		movs	r3, #0
 1169 005e 2BE0     		b	.L64
 1170              	.L65:
 1171              	.LBE4:
 262:command.c     ****     }
 263:command.c     ****     // One arg, means show usage of the given command
 264:command.c     ****     int i = 0;
 1172              		.loc 1 264 0
 1173 0060 0023     		movs	r3, #0
 1174 0062 3B61     		str	r3, [r7, #16]
 265:command.c     ****     while (commands[i].name != NULL) {
 1175              		.loc 1 265 0
 1176 0064 19E0     		b	.L68
 1177              	.L70:
 266:command.c     ****         if (strcmp(argv[1], commands[i].name) == 0) {
 1178              		.loc 1 266 0
 1179 0066 FB68     		ldr	r3, [r7, #12]
 1180 0068 0433     		adds	r3, r3, #4
 1181 006a 1868     		ldr	r0, [r3]
 1182 006c 144B     		ldr	r3, .L71
 1183 006e 3A69     		ldr	r2, [r7, #16]
 1184 0070 5201     		lsls	r2, r2, #5
 1185 0072 D358     		ldr	r3, [r2, r3]
 1186 0074 1900     		movs	r1, r3
 1187 0076 FFF7FEFF 		bl	strcmp
 1188 007a 031E     		subs	r3, r0, #0
 1189 007c 0AD1     		bne	.L69
 267:command.c     ****             cmd_usage(&argv[1], &commands[i]);
 1190              		.loc 1 267 0
 1191 007e FB68     		ldr	r3, [r7, #12]
 1192 0080 181D     		adds	r0, r3, #4
 1193 0082 3B69     		ldr	r3, [r7, #16]
 1194 0084 5A01     		lsls	r2, r3, #5
 1195 0086 0E4B     		ldr	r3, .L71
 1196 0088 D318     		adds	r3, r2, r3
 1197 008a 1900     		movs	r1, r3
 1198 008c FFF7FEFF 		bl	cmd_usage
 268:command.c     ****             return 0;
 1199              		.loc 1 268 0
 1200 0090 0023     		movs	r3, #0
 1201 0092 11E0     		b	.L64
 1202              	.L69:
ARM GAS  C:\Users\essele\AppData\Local\Temp\cci7Wywd.s 			page 29


 269:command.c     ****         }
 270:command.c     ****         i++;
 1203              		.loc 1 270 0
 1204 0094 3B69     		ldr	r3, [r7, #16]
 1205 0096 0133     		adds	r3, r3, #1
 1206 0098 3B61     		str	r3, [r7, #16]
 1207              	.L68:
 265:command.c     ****         if (strcmp(argv[1], commands[i].name) == 0) {
 1208              		.loc 1 265 0
 1209 009a 094B     		ldr	r3, .L71
 1210 009c 3A69     		ldr	r2, [r7, #16]
 1211 009e 5201     		lsls	r2, r2, #5
 1212 00a0 D358     		ldr	r3, [r2, r3]
 1213 00a2 002B     		cmp	r3, #0
 1214 00a4 DFD1     		bne	.L70
 271:command.c     ****     }
 272:command.c     ****     serial_printf("<error: unknown command: %s>\r\n", argv[1]);
 1215              		.loc 1 272 0
 1216 00a6 FB68     		ldr	r3, [r7, #12]
 1217 00a8 0433     		adds	r3, r3, #4
 1218 00aa 1A68     		ldr	r2, [r3]
 1219 00ac 064B     		ldr	r3, .L71+8
 1220 00ae 1100     		movs	r1, r2
 1221 00b0 1800     		movs	r0, r3
 1222 00b2 FFF7FEFF 		bl	serial_printf
 273:command.c     ****     return 0;
 1223              		.loc 1 273 0
 1224 00b6 0023     		movs	r3, #0
 1225              	.L64:
 274:command.c     **** }
 1226              		.loc 1 274 0
 1227 00b8 1800     		movs	r0, r3
 1228 00ba BD46     		mov	sp, r7
 1229 00bc 06B0     		add	sp, sp, #24
 1230              		@ sp needed
 1231 00be 80BD     		pop	{r7, pc}
 1232              	.L72:
 1233              		.align	2
 1234              	.L71:
 1235 00c0 00000000 		.word	commands
 1236 00c4 1C060000 		.word	.LC63
 1237 00c8 2C060000 		.word	.LC65
 1238              		.cfi_endproc
 1239              	.LFE42:
 1240              		.size	cmd_help, .-cmd_help
 1241              		.section	.rodata
 1242 064b 00       		.align	2
 1243              	.LC69:
 1244 064c 0D0A00   		.ascii	"\015\012\000"
 1245              		.section	.text.cmd_read,"ax",%progbits
 1246              		.align	2
 1247              		.global	cmd_read
 1248              		.code	16
 1249              		.thumb_func
 1250              		.type	cmd_read, %function
 1251              	cmd_read:
 1252              	.LFB43:
ARM GAS  C:\Users\essele\AppData\Local\Temp\cci7Wywd.s 			page 30


 275:command.c     **** 
 276:command.c     **** /**
 277:command.c     ****  * Read from the GPIB bus
 278:command.c     ****  */
 279:command.c     **** int cmd_read(char *argv[], int argc, const struct cmd *cmd) {
 1253              		.loc 1 279 0
 1254              		.cfi_startproc
 1255              		@ args = 0, pretend = 0, frame = 48
 1256              		@ frame_needed = 1, uses_anonymous_args = 0
 1257 0000 80B5     		push	{r7, lr}
 1258              		.cfi_def_cfa_offset 8
 1259              		.cfi_offset 7, -8
 1260              		.cfi_offset 14, -4
 1261 0002 8CB0     		sub	sp, sp, #48
 1262              		.cfi_def_cfa_offset 56
 1263 0004 00AF     		add	r7, sp, #0
 1264              		.cfi_def_cfa_register 7
 1265 0006 F860     		str	r0, [r7, #12]
 1266 0008 B960     		str	r1, [r7, #8]
 1267 000a 7A60     		str	r2, [r7, #4]
 280:command.c     ****     int until = GPIB_TIMEOUT;
 1268              		.loc 1 280 0
 1269 000c 0223     		movs	r3, #2
 1270 000e FF33     		adds	r3, r3, #255
 1271 0010 BB62     		str	r3, [r7, #40]
 281:command.c     **** //    uint8_t *buf = gpib_get_buffer();
 282:command.c     **** //    int     len;
 283:command.c     ****     uint8_t buf[16];
 284:command.c     ****     int     ended;
 285:command.c     ****     
 286:command.c     ****     if (argc > 2) {
 1272              		.loc 1 286 0
 1273 0012 BB68     		ldr	r3, [r7, #8]
 1274 0014 022B     		cmp	r3, #2
 1275 0016 07DD     		ble	.L74
 287:command.c     ****         cmd_usage(argv, cmd);
 1276              		.loc 1 287 0
 1277 0018 7A68     		ldr	r2, [r7, #4]
 1278 001a FB68     		ldr	r3, [r7, #12]
 1279 001c 1100     		movs	r1, r2
 1280 001e 1800     		movs	r0, r3
 1281 0020 FFF7FEFF 		bl	cmd_usage
 288:command.c     ****         return 1;
 1282              		.loc 1 288 0
 1283 0024 0123     		movs	r3, #1
 1284 0026 6AE0     		b	.L84
 1285              	.L74:
 289:command.c     ****     }
 290:command.c     ****     if (argc == 2) {
 1286              		.loc 1 290 0
 1287 0028 BB68     		ldr	r3, [r7, #8]
 1288 002a 022B     		cmp	r3, #2
 1289 002c 35D1     		bne	.L76
 291:command.c     ****         if (strcmp(argv[1], "eoi") == 0) {
 1290              		.loc 1 291 0
 1291 002e FB68     		ldr	r3, [r7, #12]
 1292 0030 0433     		adds	r3, r3, #4
ARM GAS  C:\Users\essele\AppData\Local\Temp\cci7Wywd.s 			page 31


 1293 0032 1B68     		ldr	r3, [r3]
 1294 0034 344A     		ldr	r2, .L85
 1295 0036 1100     		movs	r1, r2
 1296 0038 1800     		movs	r0, r3
 1297 003a FFF7FEFF 		bl	strcmp
 1298 003e 031E     		subs	r3, r0, #0
 1299 0040 03D1     		bne	.L77
 292:command.c     ****             until = GPIB_EOI;
 1300              		.loc 1 292 0
 1301 0042 8023     		movs	r3, #128
 1302 0044 5B00     		lsls	r3, r3, #1
 1303 0046 BB62     		str	r3, [r7, #40]
 1304 0048 27E0     		b	.L76
 1305              	.L77:
 293:command.c     ****         } else if (!is_int(argv[1])) {
 1306              		.loc 1 293 0
 1307 004a FB68     		ldr	r3, [r7, #12]
 1308 004c 0433     		adds	r3, r3, #4
 1309 004e 1B68     		ldr	r3, [r3]
 1310 0050 1800     		movs	r0, r3
 1311 0052 FFF7FEFF 		bl	is_int
 1312 0056 031E     		subs	r3, r0, #0
 1313 0058 07D1     		bne	.L78
 294:command.c     ****             cmd_usage(argv, cmd);
 1314              		.loc 1 294 0
 1315 005a 7A68     		ldr	r2, [r7, #4]
 1316 005c FB68     		ldr	r3, [r7, #12]
 1317 005e 1100     		movs	r1, r2
 1318 0060 1800     		movs	r0, r3
 1319 0062 FFF7FEFF 		bl	cmd_usage
 295:command.c     ****             return 1;
 1320              		.loc 1 295 0
 1321 0066 0123     		movs	r3, #1
 1322 0068 49E0     		b	.L84
 1323              	.L78:
 1324              	.LBB5:
 296:command.c     ****         } else {
 297:command.c     ****             int ch = to_int(argv[1]);
 1325              		.loc 1 297 0
 1326 006a FB68     		ldr	r3, [r7, #12]
 1327 006c 0433     		adds	r3, r3, #4
 1328 006e 1B68     		ldr	r3, [r3]
 1329 0070 1800     		movs	r0, r3
 1330 0072 FFF7FEFF 		bl	to_int
 1331 0076 0300     		movs	r3, r0
 1332 0078 7B62     		str	r3, [r7, #36]
 298:command.c     ****             if (ch < 0 || ch > 255) {
 1333              		.loc 1 298 0
 1334 007a 7B6A     		ldr	r3, [r7, #36]
 1335 007c 002B     		cmp	r3, #0
 1336 007e 02DB     		blt	.L79
 1337              		.loc 1 298 0 is_stmt 0 discriminator 1
 1338 0080 7B6A     		ldr	r3, [r7, #36]
 1339 0082 FF2B     		cmp	r3, #255
 1340 0084 07DD     		ble	.L80
 1341              	.L79:
 299:command.c     ****                 cmd_usage(argv, cmd);
ARM GAS  C:\Users\essele\AppData\Local\Temp\cci7Wywd.s 			page 32


 1342              		.loc 1 299 0 is_stmt 1
 1343 0086 7A68     		ldr	r2, [r7, #4]
 1344 0088 FB68     		ldr	r3, [r7, #12]
 1345 008a 1100     		movs	r1, r2
 1346 008c 1800     		movs	r0, r3
 1347 008e FFF7FEFF 		bl	cmd_usage
 300:command.c     ****                 return 1;
 1348              		.loc 1 300 0
 1349 0092 0123     		movs	r3, #1
 1350 0094 33E0     		b	.L84
 1351              	.L80:
 301:command.c     ****             }
 302:command.c     ****             until = ch;
 1352              		.loc 1 302 0
 1353 0096 7B6A     		ldr	r3, [r7, #36]
 1354 0098 BB62     		str	r3, [r7, #40]
 1355              	.L76:
 1356              	.LBE5:
 303:command.c     ****         }
 304:command.c     ****     }
 305:command.c     ****     
 306:command.c     ****     gpib_address_talker(settings.address);
 1357              		.loc 1 306 0
 1358 009a 1C4B     		ldr	r3, .L85+4
 1359 009c DB88     		ldrh	r3, [r3, #6]
 1360 009e DBB2     		uxtb	r3, r3
 1361 00a0 1800     		movs	r0, r3
 1362 00a2 FFF7FEFF 		bl	gpib_address_talker
 1363              	.L82:
 1364              	.LBB6:
 307:command.c     ****     
 308:command.c     ****     do {
 309:command.c     ****         int len = gpib_read_bytes(buf, 16, &ended);
 1365              		.loc 1 309 0
 1366 00a6 1023     		movs	r3, #16
 1367 00a8 FA18     		adds	r2, r7, r3
 1368 00aa 1423     		movs	r3, #20
 1369 00ac FB18     		adds	r3, r7, r3
 1370 00ae 1021     		movs	r1, #16
 1371 00b0 1800     		movs	r0, r3
 1372 00b2 FFF7FEFF 		bl	gpib_read_bytes
 1373 00b6 0300     		movs	r3, r0
 1374 00b8 FB62     		str	r3, [r7, #44]
 310:command.c     ****         if (settings.interact) {
 1375              		.loc 1 310 0
 1376 00ba 144B     		ldr	r3, .L85+4
 1377 00bc 9B8A     		ldrh	r3, [r3, #20]
 1378 00be 002B     		cmp	r3, #0
 1379 00c0 08D0     		beq	.L81
 311:command.c     ****             len = chomp(buf, len);   
 1380              		.loc 1 311 0
 1381 00c2 FA6A     		ldr	r2, [r7, #44]
 1382 00c4 1423     		movs	r3, #20
 1383 00c6 FB18     		adds	r3, r7, r3
 1384 00c8 1100     		movs	r1, r2
 1385 00ca 1800     		movs	r0, r3
 1386 00cc FFF7FEFF 		bl	chomp
ARM GAS  C:\Users\essele\AppData\Local\Temp\cci7Wywd.s 			page 33


 1387 00d0 0300     		movs	r3, r0
 1388 00d2 FB62     		str	r3, [r7, #44]
 1389              	.L81:
 312:command.c     ****         }
 313:command.c     ****         serial_add(buf, len);
 1390              		.loc 1 313 0
 1391 00d4 FA6A     		ldr	r2, [r7, #44]
 1392 00d6 1423     		movs	r3, #20
 1393 00d8 FB18     		adds	r3, r7, r3
 1394 00da 1100     		movs	r1, r2
 1395 00dc 1800     		movs	r0, r3
 1396 00de FFF7FEFF 		bl	serial_add
 1397              	.LBE6:
 314:command.c     ****     } while (ended == GPIB_NOT_ENDED);
 1398              		.loc 1 314 0
 1399 00e2 3B69     		ldr	r3, [r7, #16]
 1400 00e4 002B     		cmp	r3, #0
 1401 00e6 DED0     		beq	.L82
 315:command.c     ****     if (settings.interact) {
 1402              		.loc 1 315 0
 1403 00e8 084B     		ldr	r3, .L85+4
 1404 00ea 9B8A     		ldrh	r3, [r3, #20]
 1405 00ec 002B     		cmp	r3, #0
 1406 00ee 03D0     		beq	.L83
 316:command.c     ****         serial_add_string("\r\n");
 1407              		.loc 1 316 0
 1408 00f0 074B     		ldr	r3, .L85+8
 1409 00f2 1800     		movs	r0, r3
 1410 00f4 FFF7FEFF 		bl	serial_add_string
 1411              	.L83:
 317:command.c     ****     }
 318:command.c     ****     serial_flush();
 1412              		.loc 1 318 0
 1413 00f8 FFF7FEFF 		bl	serial_flush
 319:command.c     ****     return 0;
 1414              		.loc 1 319 0
 1415 00fc 0023     		movs	r3, #0
 1416              	.L84:
 320:command.c     **** }
 1417              		.loc 1 320 0 discriminator 1
 1418 00fe 1800     		movs	r0, r3
 1419 0100 BD46     		mov	sp, r7
 1420 0102 0CB0     		add	sp, sp, #48
 1421              		@ sp needed
 1422 0104 80BD     		pop	{r7, pc}
 1423              	.L86:
 1424 0106 C046     		.align	2
 1425              	.L85:
 1426 0108 94000000 		.word	.LC6
 1427 010c 00000000 		.word	settings
 1428 0110 4C060000 		.word	.LC69
 1429              		.cfi_endproc
 1430              	.LFE43:
 1431              		.size	cmd_read, .-cmd_read
 1432              		.section	.rodata
 1433 064f 00       		.align	2
 1434              	.LC72:
ARM GAS  C:\Users\essele\AppData\Local\Temp\cci7Wywd.s 			page 34


 1435 0650 252D3130 		.ascii	"%-10.10s = %d\000"
 1435      2E313073 
 1435      203D2025 
 1435      6400
 1436 065e 0000     		.align	2
 1437              	.LC74:
 1438 0660 20282573 		.ascii	" (%s)\000"
 1438      2900
 1439              		.section	.text.cmd_config,"ax",%progbits
 1440              		.align	2
 1441              		.global	cmd_config
 1442              		.code	16
 1443              		.thumb_func
 1444              		.type	cmd_config, %function
 1445              	cmd_config:
 1446              	.LFB44:
 321:command.c     **** 
 322:command.c     **** /**
 323:command.c     ****  * List out all items of settings that can be set by commands
 324:command.c     ****  */
 325:command.c     **** int cmd_config(char *argv[], int argc, const struct cmd *cmd) {
 1447              		.loc 1 325 0
 1448              		.cfi_startproc
 1449              		@ args = 0, pretend = 0, frame = 32
 1450              		@ frame_needed = 1, uses_anonymous_args = 0
 1451 0000 80B5     		push	{r7, lr}
 1452              		.cfi_def_cfa_offset 8
 1453              		.cfi_offset 7, -8
 1454              		.cfi_offset 14, -4
 1455 0002 88B0     		sub	sp, sp, #32
 1456              		.cfi_def_cfa_offset 40
 1457 0004 00AF     		add	r7, sp, #0
 1458              		.cfi_def_cfa_register 7
 1459 0006 F860     		str	r0, [r7, #12]
 1460 0008 B960     		str	r1, [r7, #8]
 1461 000a 7A60     		str	r2, [r7, #4]
 326:command.c     ****     if (argc != 1) {
 1462              		.loc 1 326 0
 1463 000c BB68     		ldr	r3, [r7, #8]
 1464 000e 012B     		cmp	r3, #1
 1465 0010 07D0     		beq	.L88
 327:command.c     ****         cmd_usage(argv, cmd);
 1466              		.loc 1 327 0
 1467 0012 7A68     		ldr	r2, [r7, #4]
 1468 0014 FB68     		ldr	r3, [r7, #12]
 1469 0016 1100     		movs	r1, r2
 1470 0018 1800     		movs	r0, r3
 1471 001a FFF7FEFF 		bl	cmd_usage
 328:command.c     ****         return 1;
 1472              		.loc 1 328 0
 1473 001e 0123     		movs	r3, #1
 1474 0020 5AE0     		b	.L89
 1475              	.L88:
 329:command.c     ****     }
 330:command.c     ****     // Now look through the commands, finding ones referencing the config
 331:command.c     ****     int i = 0;
 1476              		.loc 1 331 0
ARM GAS  C:\Users\essele\AppData\Local\Temp\cci7Wywd.s 			page 35


 1477 0022 0023     		movs	r3, #0
 1478 0024 FB61     		str	r3, [r7, #28]
 332:command.c     ****     while (commands[i].name != NULL) {
 1479              		.loc 1 332 0
 1480 0026 50E0     		b	.L90
 1481              	.L97:
 333:command.c     ****         if (commands[i].setting != NULL) {
 1482              		.loc 1 333 0
 1483 0028 2D4A     		ldr	r2, .L98
 1484 002a FB69     		ldr	r3, [r7, #28]
 1485 002c 5B01     		lsls	r3, r3, #5
 1486 002e D318     		adds	r3, r2, r3
 1487 0030 0833     		adds	r3, r3, #8
 1488 0032 1B68     		ldr	r3, [r3]
 1489 0034 002B     		cmp	r3, #0
 1490 0036 45D0     		beq	.L91
 1491              	.LBB7:
 334:command.c     ****             uint16_t value = *(commands[i].setting);
 1492              		.loc 1 334 0
 1493 0038 294A     		ldr	r2, .L98
 1494 003a FB69     		ldr	r3, [r7, #28]
 1495 003c 5B01     		lsls	r3, r3, #5
 1496 003e D318     		adds	r3, r2, r3
 1497 0040 0833     		adds	r3, r3, #8
 1498 0042 1A68     		ldr	r2, [r3]
 1499 0044 1223     		movs	r3, #18
 1500 0046 FB18     		adds	r3, r7, r3
 1501 0048 1288     		ldrh	r2, [r2]
 1502 004a 1A80     		strh	r2, [r3]
 335:command.c     ****             char    *meaning = NULL;
 1503              		.loc 1 335 0
 1504 004c 0023     		movs	r3, #0
 1505 004e BB61     		str	r3, [r7, #24]
 336:command.c     ****             
 337:command.c     ****             if (commands[i].meanings != NULL) {
 1506              		.loc 1 337 0
 1507 0050 234A     		ldr	r2, .L98
 1508 0052 FB69     		ldr	r3, [r7, #28]
 1509 0054 5B01     		lsls	r3, r3, #5
 1510 0056 D318     		adds	r3, r2, r3
 1511 0058 1833     		adds	r3, r3, #24
 1512 005a 1B68     		ldr	r3, [r3]
 1513 005c 002B     		cmp	r3, #0
 1514 005e 19D0     		beq	.L92
 1515              	.LBB8:
 338:command.c     ****                 const struct item_meaning *m = commands[i].meanings;
 1516              		.loc 1 338 0
 1517 0060 1F4A     		ldr	r2, .L98
 1518 0062 FB69     		ldr	r3, [r7, #28]
 1519 0064 5B01     		lsls	r3, r3, #5
 1520 0066 D318     		adds	r3, r2, r3
 1521 0068 1833     		adds	r3, r3, #24
 1522 006a 1B68     		ldr	r3, [r3]
 1523 006c 7B61     		str	r3, [r7, #20]
 339:command.c     ****                 while (m->meaning != NULL) {
 1524              		.loc 1 339 0
 1525 006e 0DE0     		b	.L93
ARM GAS  C:\Users\essele\AppData\Local\Temp\cci7Wywd.s 			page 36


 1526              	.L95:
 340:command.c     ****                     if (m->value == value) {
 1527              		.loc 1 340 0
 1528 0070 7B69     		ldr	r3, [r7, #20]
 1529 0072 1A68     		ldr	r2, [r3]
 1530 0074 1223     		movs	r3, #18
 1531 0076 FB18     		adds	r3, r7, r3
 1532 0078 1B88     		ldrh	r3, [r3]
 1533 007a 9A42     		cmp	r2, r3
 1534 007c 03D1     		bne	.L94
 341:command.c     ****                         meaning = m->meaning;
 1535              		.loc 1 341 0
 1536 007e 7B69     		ldr	r3, [r7, #20]
 1537 0080 5B68     		ldr	r3, [r3, #4]
 1538 0082 BB61     		str	r3, [r7, #24]
 342:command.c     ****                         break;
 1539              		.loc 1 342 0
 1540 0084 06E0     		b	.L92
 1541              	.L94:
 343:command.c     ****                     }
 344:command.c     ****                     m++;
 1542              		.loc 1 344 0
 1543 0086 7B69     		ldr	r3, [r7, #20]
 1544 0088 0833     		adds	r3, r3, #8
 1545 008a 7B61     		str	r3, [r7, #20]
 1546              	.L93:
 339:command.c     ****                     if (m->value == value) {
 1547              		.loc 1 339 0
 1548 008c 7B69     		ldr	r3, [r7, #20]
 1549 008e 5B68     		ldr	r3, [r3, #4]
 1550 0090 002B     		cmp	r3, #0
 1551 0092 EDD1     		bne	.L95
 1552              	.L92:
 1553              	.LBE8:
 345:command.c     ****                 }
 346:command.c     ****             }
 347:command.c     ****             serial_printf("%-10.10s = %d", commands[i].name, value);
 1554              		.loc 1 347 0
 1555 0094 124B     		ldr	r3, .L98
 1556 0096 FA69     		ldr	r2, [r7, #28]
 1557 0098 5201     		lsls	r2, r2, #5
 1558 009a D158     		ldr	r1, [r2, r3]
 1559 009c 1223     		movs	r3, #18
 1560 009e FB18     		adds	r3, r7, r3
 1561 00a0 1A88     		ldrh	r2, [r3]
 1562 00a2 104B     		ldr	r3, .L98+4
 1563 00a4 1800     		movs	r0, r3
 1564 00a6 FFF7FEFF 		bl	serial_printf
 348:command.c     ****             if (meaning) {
 1565              		.loc 1 348 0
 1566 00aa BB69     		ldr	r3, [r7, #24]
 1567 00ac 002B     		cmp	r3, #0
 1568 00ae 05D0     		beq	.L96
 349:command.c     ****                 serial_printf(" (%s)", meaning);
 1569              		.loc 1 349 0
 1570 00b0 BA69     		ldr	r2, [r7, #24]
 1571 00b2 0D4B     		ldr	r3, .L98+8
ARM GAS  C:\Users\essele\AppData\Local\Temp\cci7Wywd.s 			page 37


 1572 00b4 1100     		movs	r1, r2
 1573 00b6 1800     		movs	r0, r3
 1574 00b8 FFF7FEFF 		bl	serial_printf
 1575              	.L96:
 350:command.c     ****             }
 351:command.c     ****             serial_printf("\r\n");
 1576              		.loc 1 351 0
 1577 00bc 0B4B     		ldr	r3, .L98+12
 1578 00be 1800     		movs	r0, r3
 1579 00c0 FFF7FEFF 		bl	serial_printf
 1580              	.L91:
 1581              	.LBE7:
 352:command.c     ****         }
 353:command.c     ****         i++;
 1582              		.loc 1 353 0
 1583 00c4 FB69     		ldr	r3, [r7, #28]
 1584 00c6 0133     		adds	r3, r3, #1
 1585 00c8 FB61     		str	r3, [r7, #28]
 1586              	.L90:
 332:command.c     ****         if (commands[i].setting != NULL) {
 1587              		.loc 1 332 0
 1588 00ca 054B     		ldr	r3, .L98
 1589 00cc FA69     		ldr	r2, [r7, #28]
 1590 00ce 5201     		lsls	r2, r2, #5
 1591 00d0 D358     		ldr	r3, [r2, r3]
 1592 00d2 002B     		cmp	r3, #0
 1593 00d4 A8D1     		bne	.L97
 354:command.c     ****     }   
 355:command.c     ****     return 0;
 1594              		.loc 1 355 0
 1595 00d6 0023     		movs	r3, #0
 1596              	.L89:
 356:command.c     **** }
 1597              		.loc 1 356 0
 1598 00d8 1800     		movs	r0, r3
 1599 00da BD46     		mov	sp, r7
 1600 00dc 08B0     		add	sp, sp, #32
 1601              		@ sp needed
 1602 00de 80BD     		pop	{r7, pc}
 1603              	.L99:
 1604              		.align	2
 1605              	.L98:
 1606 00e0 00000000 		.word	commands
 1607 00e4 50060000 		.word	.LC72
 1608 00e8 60060000 		.word	.LC74
 1609 00ec 4C060000 		.word	.LC69
 1610              		.cfi_endproc
 1611              	.LFE44:
 1612              		.size	cmd_config, .-cmd_config
 1613              		.section	.rodata
 1614 0666 0000     		.align	2
 1615              	.LC77:
 1616 0668 79617567 		.ascii	"yaugi %d.%d by Lee Essen\015\012\000"
 1616      69202564 
 1616      2E256420 
 1616      6279204C 
 1616      65652045 
ARM GAS  C:\Users\essele\AppData\Local\Temp\cci7Wywd.s 			page 38


 1617              		.section	.text.helper_version,"ax",%progbits
 1618              		.align	2
 1619              		.global	helper_version
 1620              		.code	16
 1621              		.thumb_func
 1622              		.type	helper_version, %function
 1623              	helper_version:
 1624              	.LFB45:
 357:command.c     **** 
 358:command.c     **** 
 359:command.c     **** int helper_version() {
 1625              		.loc 1 359 0
 1626              		.cfi_startproc
 1627              		@ args = 0, pretend = 0, frame = 0
 1628              		@ frame_needed = 1, uses_anonymous_args = 0
 1629 0000 80B5     		push	{r7, lr}
 1630              		.cfi_def_cfa_offset 8
 1631              		.cfi_offset 7, -8
 1632              		.cfi_offset 14, -4
 1633 0002 00AF     		add	r7, sp, #0
 1634              		.cfi_def_cfa_register 7
 360:command.c     ****     serial_printf("yaugi %d.%d by Lee Essen\r\n", MAJOR_VERSION, MINOR_VERSION);
 1635              		.loc 1 360 0
 1636 0004 044B     		ldr	r3, .L102
 1637 0006 0222     		movs	r2, #2
 1638 0008 0121     		movs	r1, #1
 1639 000a 1800     		movs	r0, r3
 1640 000c FFF7FEFF 		bl	serial_printf
 361:command.c     ****     return 0;
 1641              		.loc 1 361 0
 1642 0010 0023     		movs	r3, #0
 362:command.c     **** }
 1643              		.loc 1 362 0
 1644 0012 1800     		movs	r0, r3
 1645 0014 BD46     		mov	sp, r7
 1646              		@ sp needed
 1647 0016 80BD     		pop	{r7, pc}
 1648              	.L103:
 1649              		.align	2
 1650              	.L102:
 1651 0018 68060000 		.word	.LC77
 1652              		.cfi_endproc
 1653              	.LFE45:
 1654              		.size	helper_version, .-helper_version
 1655              		.section	.rodata
 1656 0683 00       		.align	2
 1657              	.LC79:
 1658 0684 70696E20 		.ascii	"pin status = %04x\015\012\000"
 1658      73746174 
 1658      7573203D 
 1658      20253034 
 1658      780D0A00 
 1659              		.section	.text.helper_gpiball,"ax",%progbits
 1660              		.align	2
 1661              		.global	helper_gpiball
 1662              		.code	16
 1663              		.thumb_func
ARM GAS  C:\Users\essele\AppData\Local\Temp\cci7Wywd.s 			page 39


 1664              		.type	helper_gpiball, %function
 1665              	helper_gpiball:
 1666              	.LFB46:
 363:command.c     ****  
 364:command.c     **** 
 365:command.c     **** int helper_gpiball() {
 1667              		.loc 1 365 0
 1668              		.cfi_startproc
 1669              		@ args = 0, pretend = 0, frame = 8
 1670              		@ frame_needed = 1, uses_anonymous_args = 0
 1671 0000 90B5     		push	{r4, r7, lr}
 1672              		.cfi_def_cfa_offset 12
 1673              		.cfi_offset 4, -12
 1674              		.cfi_offset 7, -8
 1675              		.cfi_offset 14, -4
 1676 0002 83B0     		sub	sp, sp, #12
 1677              		.cfi_def_cfa_offset 24
 1678 0004 00AF     		add	r7, sp, #0
 1679              		.cfi_def_cfa_register 7
 366:command.c     ****     uint16_t v = gpib_readall();
 1680              		.loc 1 366 0
 1681 0006 BC1D     		adds	r4, r7, #6
 1682 0008 FFF7FEFF 		bl	gpib_readall
 1683 000c 0300     		movs	r3, r0
 1684 000e 2380     		strh	r3, [r4]
 367:command.c     ****     serial_printf("pin status = %04x\r\n", v);
 1685              		.loc 1 367 0
 1686 0010 BB1D     		adds	r3, r7, #6
 1687 0012 1A88     		ldrh	r2, [r3]
 1688 0014 044B     		ldr	r3, .L106
 1689 0016 1100     		movs	r1, r2
 1690 0018 1800     		movs	r0, r3
 1691 001a FFF7FEFF 		bl	serial_printf
 368:command.c     ****     return 0;
 1692              		.loc 1 368 0
 1693 001e 0023     		movs	r3, #0
 369:command.c     **** }
 1694              		.loc 1 369 0
 1695 0020 1800     		movs	r0, r3
 1696 0022 BD46     		mov	sp, r7
 1697 0024 03B0     		add	sp, sp, #12
 1698              		@ sp needed
 1699 0026 90BD     		pop	{r4, r7, pc}
 1700              	.L107:
 1701              		.align	2
 1702              	.L106:
 1703 0028 84060000 		.word	.LC79
 1704              		.cfi_endproc
 1705              	.LFE46:
 1706              		.size	helper_gpiball, .-helper_gpiball
 1707              		.section	.text.helper_clr,"ax",%progbits
 1708              		.align	2
 1709              		.global	helper_clr
 1710              		.code	16
 1711              		.thumb_func
 1712              		.type	helper_clr, %function
 1713              	helper_clr:
ARM GAS  C:\Users\essele\AppData\Local\Temp\cci7Wywd.s 			page 40


 1714              	.LFB47:
 370:command.c     **** 
 371:command.c     **** /**
 372:command.c     ****  * Send the selected device clear command (needs to be tested)
 373:command.c     ****  */
 374:command.c     **** int helper_clr() {
 1715              		.loc 1 374 0
 1716              		.cfi_startproc
 1717              		@ args = 0, pretend = 0, frame = 0
 1718              		@ frame_needed = 1, uses_anonymous_args = 0
 1719 0000 80B5     		push	{r7, lr}
 1720              		.cfi_def_cfa_offset 8
 1721              		.cfi_offset 7, -8
 1722              		.cfi_offset 14, -4
 1723 0002 00AF     		add	r7, sp, #0
 1724              		.cfi_def_cfa_register 7
 375:command.c     ****     gpib_send_SDC();
 1725              		.loc 1 375 0
 1726 0004 FFF7FEFF 		bl	gpib_send_SDC
 376:command.c     ****     return 0;
 1727              		.loc 1 376 0
 1728 0008 0023     		movs	r3, #0
 377:command.c     **** }
 1729              		.loc 1 377 0
 1730 000a 1800     		movs	r0, r3
 1731 000c BD46     		mov	sp, r7
 1732              		@ sp needed
 1733 000e 80BD     		pop	{r7, pc}
 1734              		.cfi_endproc
 1735              	.LFE47:
 1736              		.size	helper_clr, .-helper_clr
 1737              		.section	.text.helper_ifc,"ax",%progbits
 1738              		.align	2
 1739              		.global	helper_ifc
 1740              		.code	16
 1741              		.thumb_func
 1742              		.type	helper_ifc, %function
 1743              	helper_ifc:
 1744              	.LFB48:
 378:command.c     **** int helper_ifc() {
 1745              		.loc 1 378 0
 1746              		.cfi_startproc
 1747              		@ args = 0, pretend = 0, frame = 0
 1748              		@ frame_needed = 1, uses_anonymous_args = 0
 1749 0000 80B5     		push	{r7, lr}
 1750              		.cfi_def_cfa_offset 8
 1751              		.cfi_offset 7, -8
 1752              		.cfi_offset 14, -4
 1753 0002 00AF     		add	r7, sp, #0
 1754              		.cfi_def_cfa_register 7
 379:command.c     ****     gpib_interface_clear();
 1755              		.loc 1 379 0
 1756 0004 FFF7FEFF 		bl	gpib_interface_clear
 380:command.c     ****     return 0;
 1757              		.loc 1 380 0
 1758 0008 0023     		movs	r3, #0
 381:command.c     **** }
ARM GAS  C:\Users\essele\AppData\Local\Temp\cci7Wywd.s 			page 41


 1759              		.loc 1 381 0
 1760 000a 1800     		movs	r0, r3
 1761 000c BD46     		mov	sp, r7
 1762              		@ sp needed
 1763 000e 80BD     		pop	{r7, pc}
 1764              		.cfi_endproc
 1765              	.LFE48:
 1766              		.size	helper_ifc, .-helper_ifc
 1767              		.section	.text.helper_llo,"ax",%progbits
 1768              		.align	2
 1769              		.global	helper_llo
 1770              		.code	16
 1771              		.thumb_func
 1772              		.type	helper_llo, %function
 1773              	helper_llo:
 1774              	.LFB49:
 382:command.c     **** int helper_llo() {
 1775              		.loc 1 382 0
 1776              		.cfi_startproc
 1777              		@ args = 0, pretend = 0, frame = 0
 1778              		@ frame_needed = 1, uses_anonymous_args = 0
 1779 0000 80B5     		push	{r7, lr}
 1780              		.cfi_def_cfa_offset 8
 1781              		.cfi_offset 7, -8
 1782              		.cfi_offset 14, -4
 1783 0002 00AF     		add	r7, sp, #0
 1784              		.cfi_def_cfa_register 7
 383:command.c     ****     gpib_send_LLO();
 1785              		.loc 1 383 0
 1786 0004 FFF7FEFF 		bl	gpib_send_LLO
 384:command.c     ****     return 0;
 1787              		.loc 1 384 0
 1788 0008 0023     		movs	r3, #0
 385:command.c     **** }
 1789              		.loc 1 385 0
 1790 000a 1800     		movs	r0, r3
 1791 000c BD46     		mov	sp, r7
 1792              		@ sp needed
 1793 000e 80BD     		pop	{r7, pc}
 1794              		.cfi_endproc
 1795              	.LFE49:
 1796              		.size	helper_llo, .-helper_llo
 1797              		.section	.text.helper_loc,"ax",%progbits
 1798              		.align	2
 1799              		.global	helper_loc
 1800              		.code	16
 1801              		.thumb_func
 1802              		.type	helper_loc, %function
 1803              	helper_loc:
 1804              	.LFB50:
 386:command.c     **** int helper_loc() {
 1805              		.loc 1 386 0
 1806              		.cfi_startproc
 1807              		@ args = 0, pretend = 0, frame = 0
 1808              		@ frame_needed = 1, uses_anonymous_args = 0
 1809 0000 80B5     		push	{r7, lr}
 1810              		.cfi_def_cfa_offset 8
ARM GAS  C:\Users\essele\AppData\Local\Temp\cci7Wywd.s 			page 42


 1811              		.cfi_offset 7, -8
 1812              		.cfi_offset 14, -4
 1813 0002 00AF     		add	r7, sp, #0
 1814              		.cfi_def_cfa_register 7
 387:command.c     ****     gpib_send_GTL();
 1815              		.loc 1 387 0
 1816 0004 FFF7FEFF 		bl	gpib_send_GTL
 388:command.c     ****     return 0;
 1817              		.loc 1 388 0
 1818 0008 0023     		movs	r3, #0
 389:command.c     **** }
 1819              		.loc 1 389 0
 1820 000a 1800     		movs	r0, r3
 1821 000c BD46     		mov	sp, r7
 1822              		@ sp needed
 1823 000e 80BD     		pop	{r7, pc}
 1824              		.cfi_endproc
 1825              	.LFE50:
 1826              		.size	helper_loc, .-helper_loc
 1827              		.section	.rodata
 1828              		.align	2
 1829              	.LC81:
 1830 0698 676F7420 		.ascii	"got poll=%d\015\012\000"
 1830      706F6C6C 
 1830      3D25640D 
 1830      0A00
 1831              		.section	.text.helper_spoll,"ax",%progbits
 1832              		.align	2
 1833              		.global	helper_spoll
 1834              		.code	16
 1835              		.thumb_func
 1836              		.type	helper_spoll, %function
 1837              	helper_spoll:
 1838              	.LFB51:
 390:command.c     **** int helper_spoll() {
 1839              		.loc 1 390 0
 1840              		.cfi_startproc
 1841              		@ args = 0, pretend = 0, frame = 8
 1842              		@ frame_needed = 1, uses_anonymous_args = 0
 1843 0000 90B5     		push	{r4, r7, lr}
 1844              		.cfi_def_cfa_offset 12
 1845              		.cfi_offset 4, -12
 1846              		.cfi_offset 7, -8
 1847              		.cfi_offset 14, -4
 1848 0002 83B0     		sub	sp, sp, #12
 1849              		.cfi_def_cfa_offset 24
 1850 0004 00AF     		add	r7, sp, #0
 1851              		.cfi_def_cfa_register 7
 391:command.c     ****     uint8_t v = gpib_serial_poll();
 1852              		.loc 1 391 0
 1853 0006 FC1D     		adds	r4, r7, #7
 1854 0008 FFF7FEFF 		bl	gpib_serial_poll
 1855 000c 0300     		movs	r3, r0
 1856 000e 2370     		strb	r3, [r4]
 392:command.c     ****     serial_printf("got poll=%d\r\n", v);
 1857              		.loc 1 392 0
 1858 0010 FB1D     		adds	r3, r7, #7
ARM GAS  C:\Users\essele\AppData\Local\Temp\cci7Wywd.s 			page 43


 1859 0012 1A78     		ldrb	r2, [r3]
 1860 0014 044B     		ldr	r3, .L118
 1861 0016 1100     		movs	r1, r2
 1862 0018 1800     		movs	r0, r3
 1863 001a FFF7FEFF 		bl	serial_printf
 393:command.c     ****     return 0;
 1864              		.loc 1 393 0
 1865 001e 0023     		movs	r3, #0
 394:command.c     **** }
 1866              		.loc 1 394 0
 1867 0020 1800     		movs	r0, r3
 1868 0022 BD46     		mov	sp, r7
 1869 0024 03B0     		add	sp, sp, #12
 1870              		@ sp needed
 1871 0026 90BD     		pop	{r4, r7, pc}
 1872              	.L119:
 1873              		.align	2
 1874              	.L118:
 1875 0028 98060000 		.word	.LC81
 1876              		.cfi_endproc
 1877              	.LFE51:
 1878              		.size	helper_spoll, .-helper_spoll
 1879              		.global	no_usage_args
 1880              		.section	.rodata
 1881 06a6 0000     		.align	2
 1882              	.LC83:
 1883 06a8 00       		.ascii	"\000"
 1884              		.data
 1885              		.align	2
 1886              		.type	no_usage_args, %object
 1887              		.size	no_usage_args, 8
 1888              	no_usage_args:
 1889 0000 A8060000 		.word	.LC83
 1890 0004 00000000 		.word	0
 1891              		.global	auto_means
 1892              		.section	.rodata
 1893 06a9 000000   		.align	2
 1894              	.LC84:
 1895 06ac 72656164 		.ascii	"read-after-write disabled\000"
 1895      2D616674 
 1895      65722D77 
 1895      72697465 
 1895      20646973 
 1896 06c6 0000     		.align	2
 1897              	.LC85:
 1898 06c8 72656164 		.ascii	"read-after-write always\000"
 1898      2D616674 
 1898      65722D77 
 1898      72697465 
 1898      20616C77 
 1899              		.align	2
 1900              	.LC86:
 1901 06e0 72656164 		.ascii	"read-after-write if write contained ?\000"
 1901      2D616674 
 1901      65722D77 
 1901      72697465 
 1901      20696620 
ARM GAS  C:\Users\essele\AppData\Local\Temp\cci7Wywd.s 			page 44


 1902 0706 0000     		.align	2
 1903              		.type	auto_means, %object
 1904              		.size	auto_means, 32
 1905              	auto_means:
 1906 0708 00000000 		.word	0
 1907 070c AC060000 		.word	.LC84
 1908 0710 01000000 		.word	1
 1909 0714 C8060000 		.word	.LC85
 1910 0718 02000000 		.word	2
 1911 071c E0060000 		.word	.LC86
 1912 0720 00000000 		.word	0
 1913 0724 00000000 		.word	0
 1914              		.global	enable_disable_means
 1915              		.align	2
 1916              	.LC87:
 1917 0728 64697361 		.ascii	"disabled\000"
 1917      626C6564 
 1917      00
 1918 0731 000000   		.align	2
 1919              	.LC88:
 1920 0734 656E6162 		.ascii	"enabled\000"
 1920      6C656400 
 1921              		.align	2
 1922              		.type	enable_disable_means, %object
 1923              		.size	enable_disable_means, 24
 1924              	enable_disable_means:
 1925 073c 00000000 		.word	0
 1926 0740 28070000 		.word	.LC87
 1927 0744 01000000 		.word	1
 1928 0748 34070000 		.word	.LC88
 1929 074c 00000000 		.word	0
 1930 0750 00000000 		.word	0
 1931              		.global	eos_means
 1932              		.align	2
 1933              	.LC89:
 1934 0754 61707065 		.ascii	"append CR+LF to GPIB output\000"
 1934      6E642043 
 1934      522B4C46 
 1934      20746F20 
 1934      47504942 
 1935              		.align	2
 1936              	.LC90:
 1937 0770 61707065 		.ascii	"append CR to GPIB output\000"
 1937      6E642043 
 1937      5220746F 
 1937      20475049 
 1937      42206F75 
 1938 0789 000000   		.align	2
 1939              	.LC91:
 1940 078c 61707065 		.ascii	"append LF to GPIB output\000"
 1940      6E64204C 
 1940      4620746F 
 1940      20475049 
 1940      42206F75 
 1941 07a5 000000   		.align	2
 1942              	.LC92:
 1943 07a8 646F206E 		.ascii	"do not append to GPIB output\000"
ARM GAS  C:\Users\essele\AppData\Local\Temp\cci7Wywd.s 			page 45


 1943      6F742061 
 1943      7070656E 
 1943      6420746F 
 1943      20475049 
 1944 07c5 000000   		.align	2
 1945              		.type	eos_means, %object
 1946              		.size	eos_means, 40
 1947              	eos_means:
 1948 07c8 00000000 		.word	0
 1949 07cc 54070000 		.word	.LC89
 1950 07d0 01000000 		.word	1
 1951 07d4 70070000 		.word	.LC90
 1952 07d8 02000000 		.word	2
 1953 07dc 8C070000 		.word	.LC91
 1954 07e0 03000000 		.word	3
 1955 07e4 A8070000 		.word	.LC92
 1956 07e8 00000000 		.word	0
 1957 07ec 00000000 		.word	0
 1958              		.global	enable_disable_usage
 1959              		.align	2
 1960              	.LC93:
 1961 07f0 5B307C31 		.ascii	"[0|1]\000"
 1961      5D00
 1962              		.data
 1963              		.align	2
 1964              		.type	enable_disable_usage, %object
 1965              		.size	enable_disable_usage, 8
 1966              	enable_disable_usage:
 1967 0008 F0070000 		.word	.LC93
 1968 000c 00000000 		.word	0
 1969              		.section	.rodata
 1970 07f6 0000     		.align	2
 1971              	.LC94:
 1972 07f8 5B504144 		.ascii	"[PAD]\000"
 1972      5D00
 1973 07fe 0000     		.align	2
 1974              	.LC95:
 1975 0800 09776865 		.ascii	"\011where PAD is between 0 and 30\000"
 1975      72652050 
 1975      41442069 
 1975      73206265 
 1975      74776565 
 1976              		.data
 1977              		.align	2
 1978              		.type	__compound_literal.0, %object
 1979              		.size	__compound_literal.0, 12
 1980              	__compound_literal.0:
 1981 0010 F8070000 		.word	.LC94
 1982 0014 00080000 		.word	.LC95
 1983 0018 00000000 		.word	0
 1984              		.section	.rodata
 1985 081f 00       		.align	2
 1986              	.LC96:
 1987 0820 5B307C31 		.ascii	"[0|1|2]\000"
 1987      7C325D00 
 1988              		.data
 1989              		.align	2
ARM GAS  C:\Users\essele\AppData\Local\Temp\cci7Wywd.s 			page 46


 1990              		.type	__compound_literal.1, %object
 1991              		.size	__compound_literal.1, 8
 1992              	__compound_literal.1:
 1993 001c 20080000 		.word	.LC96
 1994 0020 00000000 		.word	0
 1995              		.section	.rodata
 1996              		.align	2
 1997              	.LC97:
 1998 0828 5B307C31 		.ascii	"[0|1|2|3]\000"
 1998      7C327C33 
 1998      5D00
 1999              		.data
 2000              		.align	2
 2001              		.type	__compound_literal.2, %object
 2002              		.size	__compound_literal.2, 8
 2003              	__compound_literal.2:
 2004 0024 28080000 		.word	.LC97
 2005 0028 00000000 		.word	0
 2006              		.section	.rodata
 2007 0832 0000     		.align	2
 2008              	.LC98:
 2009 0834 5B636861 		.ascii	"[char]\000"
 2009      725D00
 2010 083b 00       		.align	2
 2011              	.LC99:
 2012 083c 09776865 		.ascii	"\011where char is between 0 and 255\000"
 2012      72652063 
 2012      68617220 
 2012      69732062 
 2012      65747765 
 2013              		.data
 2014              		.align	2
 2015              		.type	__compound_literal.3, %object
 2016              		.size	__compound_literal.3, 12
 2017              	__compound_literal.3:
 2018 002c 34080000 		.word	.LC98
 2019 0030 3C080000 		.word	.LC99
 2020 0034 00000000 		.word	0
 2021              		.section	.rodata
 2022 085d 000000   		.align	2
 2023              	.LC100:
 2024 0860 5B636F6D 		.ascii	"[command]\000"
 2024      6D616E64 
 2024      5D00
 2025              		.data
 2026              		.align	2
 2027              		.type	__compound_literal.4, %object
 2028              		.size	__compound_literal.4, 8
 2029              	__compound_literal.4:
 2030 0038 60080000 		.word	.LC100
 2031 003c 00000000 		.word	0
 2032              		.section	.rodata
 2033 086a 0000     		.align	2
 2034              	.LC101:
 2035 086c 5B454F49 		.ascii	"[EOI | char]\000"
 2035      207C2063 
 2035      6861725D 
ARM GAS  C:\Users\essele\AppData\Local\Temp\cci7Wywd.s 			page 47


 2035      00
 2036              		.data
 2037              		.align	2
 2038              		.type	__compound_literal.5, %object
 2039              		.size	__compound_literal.5, 12
 2040              	__compound_literal.5:
 2041 0040 6C080000 		.word	.LC101
 2042 0044 3C080000 		.word	.LC99
 2043 0048 00000000 		.word	0
 2044              		.section	.rodata
 2045 0879 000000   		.align	2
 2046              	.LC102:
 2047 087c 5B74696D 		.ascii	"[time]\000"
 2047      655D00
 2048 0883 00       		.align	2
 2049              	.LC103:
 2050 0884 09776865 		.ascii	"\011where time is between 1 and 3000\000"
 2050      72652074 
 2050      696D6520 
 2050      69732062 
 2050      65747765 
 2051              		.data
 2052              		.align	2
 2053              		.type	__compound_literal.6, %object
 2054              		.size	__compound_literal.6, 12
 2055              	__compound_literal.6:
 2056 004c 7C080000 		.word	.LC102
 2057 0050 84080000 		.word	.LC103
 2058 0054 00000000 		.word	0
 2059              		.text
 2060              	.Letext0:
 2061              		.file 2 "c:\\program files (x86)\\cypress\\psoc creator\\4.2\\psoc creator\\import\\gnu\\arm\\5.4.
 2062              		.file 3 "c:\\program files (x86)\\cypress\\psoc creator\\4.2\\psoc creator\\import\\gnu\\arm\\5.4.
 2063              		.file 4 "settings.h"
 2064              		.section	.debug_info,"",%progbits
 2065              	.Ldebug_info0:
 2066 0000 D5070000 		.4byte	0x7d5
 2067 0004 0400     		.2byte	0x4
 2068 0006 00000000 		.4byte	.Ldebug_abbrev0
 2069 000a 04       		.byte	0x4
 2070 000b 01       		.uleb128 0x1
 2071 000c 6E010000 		.4byte	.LASF69
 2072 0010 0C       		.byte	0xc
 2073 0011 4E030000 		.4byte	.LASF70
 2074 0015 55000000 		.4byte	.LASF71
 2075 0019 00000000 		.4byte	.Ldebug_ranges0+0
 2076 001d 00000000 		.4byte	0
 2077 0021 00000000 		.4byte	.Ldebug_line0
 2078 0025 02       		.uleb128 0x2
 2079 0026 01       		.byte	0x1
 2080 0027 06       		.byte	0x6
 2081 0028 2F020000 		.4byte	.LASF0
 2082 002c 03       		.uleb128 0x3
 2083 002d 48010000 		.4byte	.LASF3
 2084 0031 02       		.byte	0x2
 2085 0032 1D       		.byte	0x1d
 2086 0033 37000000 		.4byte	0x37
ARM GAS  C:\Users\essele\AppData\Local\Temp\cci7Wywd.s 			page 48


 2087 0037 02       		.uleb128 0x2
 2088 0038 01       		.byte	0x1
 2089 0039 08       		.byte	0x8
 2090 003a 60010000 		.4byte	.LASF1
 2091 003e 02       		.uleb128 0x2
 2092 003f 02       		.byte	0x2
 2093 0040 05       		.byte	0x5
 2094 0041 21000000 		.4byte	.LASF2
 2095 0045 03       		.uleb128 0x3
 2096 0046 A3000000 		.4byte	.LASF4
 2097 004a 02       		.byte	0x2
 2098 004b 2B       		.byte	0x2b
 2099 004c 50000000 		.4byte	0x50
 2100 0050 02       		.uleb128 0x2
 2101 0051 02       		.byte	0x2
 2102 0052 07       		.byte	0x7
 2103 0053 85020000 		.4byte	.LASF5
 2104 0057 02       		.uleb128 0x2
 2105 0058 04       		.byte	0x4
 2106 0059 05       		.byte	0x5
 2107 005a 15010000 		.4byte	.LASF6
 2108 005e 03       		.uleb128 0x3
 2109 005f 29030000 		.4byte	.LASF7
 2110 0063 02       		.byte	0x2
 2111 0064 41       		.byte	0x41
 2112 0065 69000000 		.4byte	0x69
 2113 0069 02       		.uleb128 0x2
 2114 006a 04       		.byte	0x4
 2115 006b 07       		.byte	0x7
 2116 006c 07030000 		.4byte	.LASF8
 2117 0070 02       		.uleb128 0x2
 2118 0071 08       		.byte	0x8
 2119 0072 05       		.byte	0x5
 2120 0073 F1000000 		.4byte	.LASF9
 2121 0077 02       		.uleb128 0x2
 2122 0078 08       		.byte	0x8
 2123 0079 07       		.byte	0x7
 2124 007a 3B020000 		.4byte	.LASF10
 2125 007e 04       		.uleb128 0x4
 2126 007f 04       		.byte	0x4
 2127 0080 05       		.byte	0x5
 2128 0081 696E7400 		.ascii	"int\000"
 2129 0085 02       		.uleb128 0x2
 2130 0086 04       		.byte	0x4
 2131 0087 07       		.byte	0x7
 2132 0088 5B020000 		.4byte	.LASF11
 2133 008c 03       		.uleb128 0x3
 2134 008d B9000000 		.4byte	.LASF12
 2135 0091 03       		.byte	0x3
 2136 0092 18       		.byte	0x18
 2137 0093 2C000000 		.4byte	0x2c
 2138 0097 03       		.uleb128 0x3
 2139 0098 68020000 		.4byte	.LASF13
 2140 009c 03       		.byte	0x3
 2141 009d 24       		.byte	0x24
 2142 009e 45000000 		.4byte	0x45
 2143 00a2 03       		.uleb128 0x3
ARM GAS  C:\Users\essele\AppData\Local\Temp\cci7Wywd.s 			page 49


 2144 00a3 52020000 		.4byte	.LASF14
 2145 00a7 03       		.byte	0x3
 2146 00a8 30       		.byte	0x30
 2147 00a9 5E000000 		.4byte	0x5e
 2148 00ad 02       		.uleb128 0x2
 2149 00ae 04       		.byte	0x4
 2150 00af 04       		.byte	0x4
 2151 00b0 E6020000 		.4byte	.LASF15
 2152 00b4 02       		.uleb128 0x2
 2153 00b5 08       		.byte	0x8
 2154 00b6 04       		.byte	0x4
 2155 00b7 19030000 		.4byte	.LASF16
 2156 00bb 02       		.uleb128 0x2
 2157 00bc 01       		.byte	0x1
 2158 00bd 08       		.byte	0x8
 2159 00be AD020000 		.4byte	.LASF17
 2160 00c2 02       		.uleb128 0x2
 2161 00c3 08       		.byte	0x8
 2162 00c4 04       		.byte	0x4
 2163 00c5 0C020000 		.4byte	.LASF18
 2164 00c9 02       		.uleb128 0x2
 2165 00ca 04       		.byte	0x4
 2166 00cb 07       		.byte	0x7
 2167 00cc 46000000 		.4byte	.LASF19
 2168 00d0 05       		.uleb128 0x5
 2169 00d1 04       		.byte	0x4
 2170 00d2 BB000000 		.4byte	0xbb
 2171 00d6 05       		.uleb128 0x5
 2172 00d7 04       		.byte	0x4
 2173 00d8 DC000000 		.4byte	0xdc
 2174 00dc 06       		.uleb128 0x6
 2175 00dd BB000000 		.4byte	0xbb
 2176 00e1 07       		.uleb128 0x7
 2177 00e2 E3000000 		.4byte	.LASF28
 2178 00e6 18       		.byte	0x18
 2179 00e7 04       		.byte	0x4
 2180 00e8 0D       		.byte	0xd
 2181 00e9 66010000 		.4byte	0x166
 2182 00ed 08       		.uleb128 0x8
 2183 00ee 44030000 		.4byte	.LASF20
 2184 00f2 04       		.byte	0x4
 2185 00f3 0E       		.byte	0xe
 2186 00f4 A2000000 		.4byte	0xa2
 2187 00f8 00       		.byte	0
 2188 00f9 08       		.uleb128 0x8
 2189 00fa 00000000 		.4byte	.LASF21
 2190 00fe 04       		.byte	0x4
 2191 00ff 0F       		.byte	0xf
 2192 0100 97000000 		.4byte	0x97
 2193 0104 04       		.byte	0x4
 2194 0105 08       		.uleb128 0x8
 2195 0106 33010000 		.4byte	.LASF22
 2196 010a 04       		.byte	0x4
 2197 010b 10       		.byte	0x10
 2198 010c 97000000 		.4byte	0x97
 2199 0110 06       		.byte	0x6
 2200 0111 08       		.uleb128 0x8
ARM GAS  C:\Users\essele\AppData\Local\Temp\cci7Wywd.s 			page 50


 2201 0112 D1000000 		.4byte	.LASF23
 2202 0116 04       		.byte	0x4
 2203 0117 11       		.byte	0x11
 2204 0118 97000000 		.4byte	0x97
 2205 011c 08       		.byte	0x8
 2206 011d 09       		.uleb128 0x9
 2207 011e 656F6900 		.ascii	"eoi\000"
 2208 0122 04       		.byte	0x4
 2209 0123 12       		.byte	0x12
 2210 0124 97000000 		.4byte	0x97
 2211 0128 0A       		.byte	0xa
 2212 0129 09       		.uleb128 0x9
 2213 012a 656F7300 		.ascii	"eos\000"
 2214 012e 04       		.byte	0x4
 2215 012f 13       		.byte	0x13
 2216 0130 97000000 		.4byte	0x97
 2217 0134 0C       		.byte	0xc
 2218 0135 08       		.uleb128 0x8
 2219 0136 18020000 		.4byte	.LASF24
 2220 013a 04       		.byte	0x4
 2221 013b 14       		.byte	0x14
 2222 013c 97000000 		.4byte	0x97
 2223 0140 0E       		.byte	0xe
 2224 0141 08       		.uleb128 0x8
 2225 0142 98020000 		.4byte	.LASF25
 2226 0146 04       		.byte	0x4
 2227 0147 15       		.byte	0x15
 2228 0148 97000000 		.4byte	0x97
 2229 014c 10       		.byte	0x10
 2230 014d 08       		.uleb128 0x8
 2231 014e FF000000 		.4byte	.LASF26
 2232 0152 04       		.byte	0x4
 2233 0153 16       		.byte	0x16
 2234 0154 97000000 		.4byte	0x97
 2235 0158 12       		.byte	0x12
 2236 0159 08       		.uleb128 0x8
 2237 015a 20030000 		.4byte	.LASF27
 2238 015e 04       		.byte	0x4
 2239 015f 19       		.byte	0x19
 2240 0160 97000000 		.4byte	0x97
 2241 0164 14       		.byte	0x14
 2242 0165 00       		.byte	0
 2243 0166 05       		.uleb128 0x5
 2244 0167 04       		.byte	0x4
 2245 0168 97000000 		.4byte	0x97
 2246 016c 07       		.uleb128 0x7
 2247 016d 3B010000 		.4byte	.LASF29
 2248 0171 08       		.byte	0x8
 2249 0172 01       		.byte	0x1
 2250 0173 32       		.byte	0x32
 2251 0174 91010000 		.4byte	0x191
 2252 0178 08       		.uleb128 0x8
 2253 0179 AE000000 		.4byte	.LASF30
 2254 017d 01       		.byte	0x1
 2255 017e 33       		.byte	0x33
 2256 017f 7E000000 		.4byte	0x7e
 2257 0183 00       		.byte	0
ARM GAS  C:\Users\essele\AppData\Local\Temp\cci7Wywd.s 			page 51


 2258 0184 08       		.uleb128 0x8
 2259 0185 2B000000 		.4byte	.LASF31
 2260 0189 01       		.byte	0x1
 2261 018a 34       		.byte	0x34
 2262 018b D0000000 		.4byte	0xd0
 2263 018f 04       		.byte	0x4
 2264 0190 00       		.byte	0
 2265 0191 0A       		.uleb128 0xa
 2266 0192 636D6400 		.ascii	"cmd\000"
 2267 0196 20       		.byte	0x20
 2268 0197 01       		.byte	0x1
 2269 0198 37       		.byte	0x37
 2270 0199 0A020000 		.4byte	0x20a
 2271 019d 08       		.uleb128 0x8
 2272 019e FC010000 		.4byte	.LASF32
 2273 01a2 01       		.byte	0x1
 2274 01a3 38       		.byte	0x38
 2275 01a4 D0000000 		.4byte	0xd0
 2276 01a8 00       		.byte	0
 2277 01a9 08       		.uleb128 0x8
 2278 01aa EC000000 		.4byte	.LASF33
 2279 01ae 01       		.byte	0x1
 2280 01af 39       		.byte	0x39
 2281 01b0 34020000 		.4byte	0x234
 2282 01b4 04       		.byte	0x4
 2283 01b5 08       		.uleb128 0x8
 2284 01b6 19000000 		.4byte	.LASF34
 2285 01ba 01       		.byte	0x1
 2286 01bb 3A       		.byte	0x3a
 2287 01bc 66010000 		.4byte	0x166
 2288 01c0 08       		.byte	0x8
 2289 01c1 09       		.uleb128 0x9
 2290 01c2 6D696E00 		.ascii	"min\000"
 2291 01c6 01       		.byte	0x1
 2292 01c7 3B       		.byte	0x3b
 2293 01c8 97000000 		.4byte	0x97
 2294 01cc 0C       		.byte	0xc
 2295 01cd 09       		.uleb128 0x9
 2296 01ce 6D617800 		.ascii	"max\000"
 2297 01d2 01       		.byte	0x1
 2298 01d3 3C       		.byte	0x3c
 2299 01d4 97000000 		.4byte	0x97
 2300 01d8 0E       		.byte	0xe
 2301 01d9 08       		.uleb128 0x8
 2302 01da B4000000 		.4byte	.LASF35
 2303 01de 01       		.byte	0x1
 2304 01df 42       		.byte	0x42
 2305 01e0 D6000000 		.4byte	0xd6
 2306 01e4 10       		.byte	0x10
 2307 01e5 08       		.uleb128 0x8
 2308 01e6 13000000 		.4byte	.LASF36
 2309 01ea 01       		.byte	0x1
 2310 01eb 43       		.byte	0x43
 2311 01ec 3A020000 		.4byte	0x23a
 2312 01f0 14       		.byte	0x14
 2313 01f1 08       		.uleb128 0x8
 2314 01f2 DA000000 		.4byte	.LASF37
ARM GAS  C:\Users\essele\AppData\Local\Temp\cci7Wywd.s 			page 52


 2315 01f6 01       		.byte	0x1
 2316 01f7 44       		.byte	0x44
 2317 01f8 40020000 		.4byte	0x240
 2318 01fc 18       		.byte	0x18
 2319 01fd 08       		.uleb128 0x8
 2320 01fe 0B010000 		.4byte	.LASF38
 2321 0202 01       		.byte	0x1
 2322 0203 45       		.byte	0x45
 2323 0204 5F020000 		.4byte	0x25f
 2324 0208 1C       		.byte	0x1c
 2325 0209 00       		.byte	0
 2326 020a 0B       		.uleb128 0xb
 2327 020b 7E000000 		.4byte	0x7e
 2328 020f 23020000 		.4byte	0x223
 2329 0213 0C       		.uleb128 0xc
 2330 0214 23020000 		.4byte	0x223
 2331 0218 0C       		.uleb128 0xc
 2332 0219 7E000000 		.4byte	0x7e
 2333 021d 0C       		.uleb128 0xc
 2334 021e 29020000 		.4byte	0x229
 2335 0222 00       		.byte	0
 2336 0223 05       		.uleb128 0x5
 2337 0224 04       		.byte	0x4
 2338 0225 D0000000 		.4byte	0xd0
 2339 0229 05       		.uleb128 0x5
 2340 022a 04       		.byte	0x4
 2341 022b 2F020000 		.4byte	0x22f
 2342 022f 06       		.uleb128 0x6
 2343 0230 91010000 		.4byte	0x191
 2344 0234 05       		.uleb128 0x5
 2345 0235 04       		.byte	0x4
 2346 0236 0A020000 		.4byte	0x20a
 2347 023a 05       		.uleb128 0x5
 2348 023b 04       		.byte	0x4
 2349 023c D6000000 		.4byte	0xd6
 2350 0240 05       		.uleb128 0x5
 2351 0241 04       		.byte	0x4
 2352 0242 46020000 		.4byte	0x246
 2353 0246 06       		.uleb128 0x6
 2354 0247 6C010000 		.4byte	0x16c
 2355 024b 0B       		.uleb128 0xb
 2356 024c 7E000000 		.4byte	0x7e
 2357 0250 5F020000 		.4byte	0x25f
 2358 0254 0C       		.uleb128 0xc
 2359 0255 23020000 		.4byte	0x223
 2360 0259 0C       		.uleb128 0xc
 2361 025a 7E000000 		.4byte	0x7e
 2362 025e 00       		.byte	0
 2363 025f 05       		.uleb128 0x5
 2364 0260 04       		.byte	0x4
 2365 0261 4B020000 		.4byte	0x24b
 2366 0265 0D       		.uleb128 0xd
 2367 0266 52010000 		.4byte	.LASF39
 2368 026a 01       		.byte	0x1
 2369 026b 4F       		.byte	0x4f
 2370 026c 7E000000 		.4byte	0x7e
 2371 0270 00000000 		.4byte	.LFB35
ARM GAS  C:\Users\essele\AppData\Local\Temp\cci7Wywd.s 			page 53


 2372 0274 DC000000 		.4byte	.LFE35-.LFB35
 2373 0278 01       		.uleb128 0x1
 2374 0279 9C       		.byte	0x9c
 2375 027a A7020000 		.4byte	0x2a7
 2376 027e 0E       		.uleb128 0xe
 2377 027f 62756600 		.ascii	"buf\000"
 2378 0283 01       		.byte	0x1
 2379 0284 4F       		.byte	0x4f
 2380 0285 A7020000 		.4byte	0x2a7
 2381 0289 02       		.uleb128 0x2
 2382 028a 91       		.byte	0x91
 2383 028b 6C       		.sleb128 -20
 2384 028c 0E       		.uleb128 0xe
 2385 028d 6C656E00 		.ascii	"len\000"
 2386 0291 01       		.byte	0x1
 2387 0292 4F       		.byte	0x4f
 2388 0293 7E000000 		.4byte	0x7e
 2389 0297 02       		.uleb128 0x2
 2390 0298 91       		.byte	0x91
 2391 0299 68       		.sleb128 -24
 2392 029a 0F       		.uleb128 0xf
 2393 029b 6900     		.ascii	"i\000"
 2394 029d 01       		.byte	0x1
 2395 029e 50       		.byte	0x50
 2396 029f 7E000000 		.4byte	0x7e
 2397 02a3 02       		.uleb128 0x2
 2398 02a4 91       		.byte	0x91
 2399 02a5 74       		.sleb128 -12
 2400 02a6 00       		.byte	0
 2401 02a7 05       		.uleb128 0x5
 2402 02a8 04       		.byte	0x4
 2403 02a9 8C000000 		.4byte	0x8c
 2404 02ad 0D       		.uleb128 0xd
 2405 02ae DF020000 		.4byte	.LASF40
 2406 02b2 01       		.byte	0x1
 2407 02b3 7E       		.byte	0x7e
 2408 02b4 7E000000 		.4byte	0x7e
 2409 02b8 00000000 		.4byte	.LFB36
 2410 02bc 40000000 		.4byte	.LFE36-.LFB36
 2411 02c0 01       		.uleb128 0x1
 2412 02c1 9C       		.byte	0x9c
 2413 02c2 D3020000 		.4byte	0x2d3
 2414 02c6 0E       		.uleb128 0xe
 2415 02c7 7600     		.ascii	"v\000"
 2416 02c9 01       		.byte	0x1
 2417 02ca 7E       		.byte	0x7e
 2418 02cb D0000000 		.4byte	0xd0
 2419 02cf 02       		.uleb128 0x2
 2420 02d0 91       		.byte	0x91
 2421 02d1 74       		.sleb128 -12
 2422 02d2 00       		.byte	0
 2423 02d3 10       		.uleb128 0x10
 2424 02d4 C1000000 		.4byte	.LASF41
 2425 02d8 01       		.byte	0x1
 2426 02d9 88       		.byte	0x88
 2427 02da 7E000000 		.4byte	0x7e
 2428 02de 00000000 		.4byte	.LFB37
ARM GAS  C:\Users\essele\AppData\Local\Temp\cci7Wywd.s 			page 54


 2429 02e2 3C000000 		.4byte	.LFE37-.LFB37
 2430 02e6 01       		.uleb128 0x1
 2431 02e7 9C       		.byte	0x9c
 2432 02e8 05030000 		.4byte	0x305
 2433 02ec 0E       		.uleb128 0xe
 2434 02ed 7600     		.ascii	"v\000"
 2435 02ef 01       		.byte	0x1
 2436 02f0 88       		.byte	0x88
 2437 02f1 D0000000 		.4byte	0xd0
 2438 02f5 02       		.uleb128 0x2
 2439 02f6 91       		.byte	0x91
 2440 02f7 6C       		.sleb128 -20
 2441 02f8 0F       		.uleb128 0xf
 2442 02f9 6900     		.ascii	"i\000"
 2443 02fb 01       		.byte	0x1
 2444 02fc 89       		.byte	0x89
 2445 02fd 7E000000 		.4byte	0x7e
 2446 0301 02       		.uleb128 0x2
 2447 0302 91       		.byte	0x91
 2448 0303 74       		.sleb128 -12
 2449 0304 00       		.byte	0
 2450 0305 11       		.uleb128 0x11
 2451 0306 B2020000 		.4byte	.LASF43
 2452 030a 01       		.byte	0x1
 2453 030b 95       		.byte	0x95
 2454 030c 00000000 		.4byte	.LFB38
 2455 0310 88000000 		.4byte	.LFE38-.LFB38
 2456 0314 01       		.uleb128 0x1
 2457 0315 9C       		.byte	0x9c
 2458 0316 51030000 		.4byte	0x351
 2459 031a 0E       		.uleb128 0xe
 2460 031b 62756600 		.ascii	"buf\000"
 2461 031f 01       		.byte	0x1
 2462 0320 95       		.byte	0x95
 2463 0321 A7020000 		.4byte	0x2a7
 2464 0325 02       		.uleb128 0x2
 2465 0326 91       		.byte	0x91
 2466 0327 6C       		.sleb128 -20
 2467 0328 0E       		.uleb128 0xe
 2468 0329 6C656E00 		.ascii	"len\000"
 2469 032d 01       		.byte	0x1
 2470 032e 95       		.byte	0x95
 2471 032f 7E000000 		.4byte	0x7e
 2472 0333 02       		.uleb128 0x2
 2473 0334 91       		.byte	0x91
 2474 0335 68       		.sleb128 -24
 2475 0336 12       		.uleb128 0x12
 2476 0337 2A020000 		.4byte	.LASF42
 2477 033b 01       		.byte	0x1
 2478 033c 96       		.byte	0x96
 2479 033d 7E000000 		.4byte	0x7e
 2480 0341 02       		.uleb128 0x2
 2481 0342 91       		.byte	0x91
 2482 0343 70       		.sleb128 -16
 2483 0344 0F       		.uleb128 0xf
 2484 0345 6900     		.ascii	"i\000"
 2485 0347 01       		.byte	0x1
ARM GAS  C:\Users\essele\AppData\Local\Temp\cci7Wywd.s 			page 55


 2486 0348 9E       		.byte	0x9e
 2487 0349 7E000000 		.4byte	0x7e
 2488 034d 02       		.uleb128 0x2
 2489 034e 91       		.byte	0x91
 2490 034f 74       		.sleb128 -12
 2491 0350 00       		.byte	0
 2492 0351 11       		.uleb128 0x11
 2493 0352 F2020000 		.4byte	.LASF44
 2494 0356 01       		.byte	0x1
 2495 0357 AB       		.byte	0xab
 2496 0358 00000000 		.4byte	.LFB39
 2497 035c D4000000 		.4byte	.LFE39-.LFB39
 2498 0360 01       		.uleb128 0x1
 2499 0361 9C       		.byte	0x9c
 2500 0362 C1030000 		.4byte	0x3c1
 2501 0366 13       		.uleb128 0x13
 2502 0367 71020000 		.4byte	.LASF45
 2503 036b 01       		.byte	0x1
 2504 036c AB       		.byte	0xab
 2505 036d 23020000 		.4byte	0x223
 2506 0371 02       		.uleb128 0x2
 2507 0372 91       		.byte	0x91
 2508 0373 64       		.sleb128 -28
 2509 0374 0E       		.uleb128 0xe
 2510 0375 636D6400 		.ascii	"cmd\000"
 2511 0379 01       		.byte	0x1
 2512 037a AB       		.byte	0xab
 2513 037b 29020000 		.4byte	0x229
 2514 037f 02       		.uleb128 0x2
 2515 0380 91       		.byte	0x91
 2516 0381 60       		.sleb128 -32
 2517 0382 0F       		.uleb128 0xf
 2518 0383 7000     		.ascii	"p\000"
 2519 0385 01       		.byte	0x1
 2520 0386 AC       		.byte	0xac
 2521 0387 3A020000 		.4byte	0x23a
 2522 038b 02       		.uleb128 0x2
 2523 038c 91       		.byte	0x91
 2524 038d 74       		.sleb128 -12
 2525 038e 14       		.uleb128 0x14
 2526 038f 66000000 		.4byte	.LBB2
 2527 0393 26000000 		.4byte	.LBE2-.LBB2
 2528 0397 A8030000 		.4byte	0x3a8
 2529 039b 0F       		.uleb128 0xf
 2530 039c 6D00     		.ascii	"m\000"
 2531 039e 01       		.byte	0x1
 2532 039f BA       		.byte	0xba
 2533 03a0 40020000 		.4byte	0x240
 2534 03a4 02       		.uleb128 0x2
 2535 03a5 91       		.byte	0x91
 2536 03a6 70       		.sleb128 -16
 2537 03a7 00       		.byte	0
 2538 03a8 15       		.uleb128 0x15
 2539 03a9 94000000 		.4byte	.LBB3
 2540 03ad 1C000000 		.4byte	.LBE3-.LBB3
 2541 03b1 12       		.uleb128 0x12
 2542 03b2 AE000000 		.4byte	.LASF30
ARM GAS  C:\Users\essele\AppData\Local\Temp\cci7Wywd.s 			page 56


 2543 03b6 01       		.byte	0x1
 2544 03b7 C3       		.byte	0xc3
 2545 03b8 97000000 		.4byte	0x97
 2546 03bc 02       		.uleb128 0x2
 2547 03bd 91       		.byte	0x91
 2548 03be 6E       		.sleb128 -18
 2549 03bf 00       		.byte	0
 2550 03c0 00       		.byte	0
 2551 03c1 0D       		.uleb128 0xd
 2552 03c2 7C030000 		.4byte	.LASF46
 2553 03c6 01       		.byte	0x1
 2554 03c7 CE       		.byte	0xce
 2555 03c8 7E000000 		.4byte	0x7e
 2556 03cc 00000000 		.4byte	.LFB40
 2557 03d0 B8000000 		.4byte	.LFE40-.LFB40
 2558 03d4 01       		.uleb128 0x1
 2559 03d5 9C       		.byte	0x9c
 2560 03d6 13040000 		.4byte	0x413
 2561 03da 13       		.uleb128 0x13
 2562 03db 71020000 		.4byte	.LASF45
 2563 03df 01       		.byte	0x1
 2564 03e0 CE       		.byte	0xce
 2565 03e1 23020000 		.4byte	0x223
 2566 03e5 02       		.uleb128 0x2
 2567 03e6 91       		.byte	0x91
 2568 03e7 6C       		.sleb128 -20
 2569 03e8 13       		.uleb128 0x13
 2570 03e9 2A020000 		.4byte	.LASF42
 2571 03ed 01       		.byte	0x1
 2572 03ee CE       		.byte	0xce
 2573 03ef 7E000000 		.4byte	0x7e
 2574 03f3 02       		.uleb128 0x2
 2575 03f4 91       		.byte	0x91
 2576 03f5 68       		.sleb128 -24
 2577 03f6 0E       		.uleb128 0xe
 2578 03f7 636D6400 		.ascii	"cmd\000"
 2579 03fb 01       		.byte	0x1
 2580 03fc CE       		.byte	0xce
 2581 03fd 29020000 		.4byte	0x229
 2582 0401 02       		.uleb128 0x2
 2583 0402 91       		.byte	0x91
 2584 0403 64       		.sleb128 -28
 2585 0404 12       		.uleb128 0x12
 2586 0405 34030000 		.4byte	.LASF47
 2587 0409 01       		.byte	0x1
 2588 040a D8       		.byte	0xd8
 2589 040b 7E000000 		.4byte	0x7e
 2590 040f 02       		.uleb128 0x2
 2591 0410 91       		.byte	0x91
 2592 0411 74       		.sleb128 -12
 2593 0412 00       		.byte	0
 2594 0413 0D       		.uleb128 0xd
 2595 0414 BE020000 		.4byte	.LASF48
 2596 0418 01       		.byte	0x1
 2597 0419 EA       		.byte	0xea
 2598 041a 7E000000 		.4byte	0x7e
 2599 041e 00000000 		.4byte	.LFB41
ARM GAS  C:\Users\essele\AppData\Local\Temp\cci7Wywd.s 			page 57


 2600 0422 44000000 		.4byte	.LFE41-.LFB41
 2601 0426 01       		.uleb128 0x1
 2602 0427 9C       		.byte	0x9c
 2603 0428 57040000 		.4byte	0x457
 2604 042c 13       		.uleb128 0x13
 2605 042d 71020000 		.4byte	.LASF45
 2606 0431 01       		.byte	0x1
 2607 0432 EA       		.byte	0xea
 2608 0433 23020000 		.4byte	0x223
 2609 0437 02       		.uleb128 0x2
 2610 0438 91       		.byte	0x91
 2611 0439 74       		.sleb128 -12
 2612 043a 13       		.uleb128 0x13
 2613 043b 2A020000 		.4byte	.LASF42
 2614 043f 01       		.byte	0x1
 2615 0440 EA       		.byte	0xea
 2616 0441 7E000000 		.4byte	0x7e
 2617 0445 02       		.uleb128 0x2
 2618 0446 91       		.byte	0x91
 2619 0447 70       		.sleb128 -16
 2620 0448 0E       		.uleb128 0xe
 2621 0449 636D6400 		.ascii	"cmd\000"
 2622 044d 01       		.byte	0x1
 2623 044e EA       		.byte	0xea
 2624 044f 29020000 		.4byte	0x229
 2625 0453 02       		.uleb128 0x2
 2626 0454 91       		.byte	0x91
 2627 0455 6C       		.sleb128 -20
 2628 0456 00       		.byte	0
 2629 0457 0D       		.uleb128 0xd
 2630 0458 21020000 		.4byte	.LASF49
 2631 045c 01       		.byte	0x1
 2632 045d F8       		.byte	0xf8
 2633 045e 7E000000 		.4byte	0x7e
 2634 0462 00000000 		.4byte	.LFB42
 2635 0466 CC000000 		.4byte	.LFE42-.LFB42
 2636 046a 01       		.uleb128 0x1
 2637 046b 9C       		.byte	0x9c
 2638 046c BF040000 		.4byte	0x4bf
 2639 0470 13       		.uleb128 0x13
 2640 0471 71020000 		.4byte	.LASF45
 2641 0475 01       		.byte	0x1
 2642 0476 F8       		.byte	0xf8
 2643 0477 23020000 		.4byte	0x223
 2644 047b 02       		.uleb128 0x2
 2645 047c 91       		.byte	0x91
 2646 047d 6C       		.sleb128 -20
 2647 047e 13       		.uleb128 0x13
 2648 047f 2A020000 		.4byte	.LASF42
 2649 0483 01       		.byte	0x1
 2650 0484 F8       		.byte	0xf8
 2651 0485 7E000000 		.4byte	0x7e
 2652 0489 02       		.uleb128 0x2
 2653 048a 91       		.byte	0x91
 2654 048b 68       		.sleb128 -24
 2655 048c 0E       		.uleb128 0xe
 2656 048d 636D6400 		.ascii	"cmd\000"
ARM GAS  C:\Users\essele\AppData\Local\Temp\cci7Wywd.s 			page 58


 2657 0491 01       		.byte	0x1
 2658 0492 F8       		.byte	0xf8
 2659 0493 29020000 		.4byte	0x229
 2660 0497 02       		.uleb128 0x2
 2661 0498 91       		.byte	0x91
 2662 0499 64       		.sleb128 -28
 2663 049a 16       		.uleb128 0x16
 2664 049b 6900     		.ascii	"i\000"
 2665 049d 01       		.byte	0x1
 2666 049e 0801     		.2byte	0x108
 2667 04a0 7E000000 		.4byte	0x7e
 2668 04a4 02       		.uleb128 0x2
 2669 04a5 91       		.byte	0x91
 2670 04a6 70       		.sleb128 -16
 2671 04a7 15       		.uleb128 0x15
 2672 04a8 28000000 		.4byte	.LBB4
 2673 04ac 38000000 		.4byte	.LBE4-.LBB4
 2674 04b0 16       		.uleb128 0x16
 2675 04b1 6900     		.ascii	"i\000"
 2676 04b3 01       		.byte	0x1
 2677 04b4 0001     		.2byte	0x100
 2678 04b6 7E000000 		.4byte	0x7e
 2679 04ba 02       		.uleb128 0x2
 2680 04bb 91       		.byte	0x91
 2681 04bc 74       		.sleb128 -12
 2682 04bd 00       		.byte	0
 2683 04be 00       		.byte	0
 2684 04bf 17       		.uleb128 0x17
 2685 04c0 3D000000 		.4byte	.LASF50
 2686 04c4 01       		.byte	0x1
 2687 04c5 1701     		.2byte	0x117
 2688 04c7 7E000000 		.4byte	0x7e
 2689 04cb 00000000 		.4byte	.LFB43
 2690 04cf 14010000 		.4byte	.LFE43-.LFB43
 2691 04d3 01       		.uleb128 0x1
 2692 04d4 9C       		.byte	0x9c
 2693 04d5 69050000 		.4byte	0x569
 2694 04d9 18       		.uleb128 0x18
 2695 04da 71020000 		.4byte	.LASF45
 2696 04de 01       		.byte	0x1
 2697 04df 1701     		.2byte	0x117
 2698 04e1 23020000 		.4byte	0x223
 2699 04e5 02       		.uleb128 0x2
 2700 04e6 91       		.byte	0x91
 2701 04e7 54       		.sleb128 -44
 2702 04e8 18       		.uleb128 0x18
 2703 04e9 2A020000 		.4byte	.LASF42
 2704 04ed 01       		.byte	0x1
 2705 04ee 1701     		.2byte	0x117
 2706 04f0 7E000000 		.4byte	0x7e
 2707 04f4 02       		.uleb128 0x2
 2708 04f5 91       		.byte	0x91
 2709 04f6 50       		.sleb128 -48
 2710 04f7 19       		.uleb128 0x19
 2711 04f8 636D6400 		.ascii	"cmd\000"
 2712 04fc 01       		.byte	0x1
 2713 04fd 1701     		.2byte	0x117
ARM GAS  C:\Users\essele\AppData\Local\Temp\cci7Wywd.s 			page 59


 2714 04ff 29020000 		.4byte	0x229
 2715 0503 02       		.uleb128 0x2
 2716 0504 91       		.byte	0x91
 2717 0505 4C       		.sleb128 -52
 2718 0506 1A       		.uleb128 0x1a
 2719 0507 4F000000 		.4byte	.LASF51
 2720 050b 01       		.byte	0x1
 2721 050c 1801     		.2byte	0x118
 2722 050e 7E000000 		.4byte	0x7e
 2723 0512 02       		.uleb128 0x2
 2724 0513 91       		.byte	0x91
 2725 0514 70       		.sleb128 -16
 2726 0515 16       		.uleb128 0x16
 2727 0516 62756600 		.ascii	"buf\000"
 2728 051a 01       		.byte	0x1
 2729 051b 1B01     		.2byte	0x11b
 2730 051d 69050000 		.4byte	0x569
 2731 0521 02       		.uleb128 0x2
 2732 0522 91       		.byte	0x91
 2733 0523 5C       		.sleb128 -36
 2734 0524 1A       		.uleb128 0x1a
 2735 0525 EC020000 		.4byte	.LASF52
 2736 0529 01       		.byte	0x1
 2737 052a 1C01     		.2byte	0x11c
 2738 052c 7E000000 		.4byte	0x7e
 2739 0530 02       		.uleb128 0x2
 2740 0531 91       		.byte	0x91
 2741 0532 58       		.sleb128 -40
 2742 0533 14       		.uleb128 0x14
 2743 0534 6A000000 		.4byte	.LBB5
 2744 0538 30000000 		.4byte	.LBE5-.LBB5
 2745 053c 4F050000 		.4byte	0x54f
 2746 0540 16       		.uleb128 0x16
 2747 0541 636800   		.ascii	"ch\000"
 2748 0544 01       		.byte	0x1
 2749 0545 2901     		.2byte	0x129
 2750 0547 7E000000 		.4byte	0x7e
 2751 054b 02       		.uleb128 0x2
 2752 054c 91       		.byte	0x91
 2753 054d 6C       		.sleb128 -20
 2754 054e 00       		.byte	0
 2755 054f 15       		.uleb128 0x15
 2756 0550 A6000000 		.4byte	.LBB6
 2757 0554 3C000000 		.4byte	.LBE6-.LBB6
 2758 0558 16       		.uleb128 0x16
 2759 0559 6C656E00 		.ascii	"len\000"
 2760 055d 01       		.byte	0x1
 2761 055e 3501     		.2byte	0x135
 2762 0560 7E000000 		.4byte	0x7e
 2763 0564 02       		.uleb128 0x2
 2764 0565 91       		.byte	0x91
 2765 0566 74       		.sleb128 -12
 2766 0567 00       		.byte	0
 2767 0568 00       		.byte	0
 2768 0569 1B       		.uleb128 0x1b
 2769 056a 8C000000 		.4byte	0x8c
 2770 056e 79050000 		.4byte	0x579
ARM GAS  C:\Users\essele\AppData\Local\Temp\cci7Wywd.s 			page 60


 2771 0572 1C       		.uleb128 0x1c
 2772 0573 C9000000 		.4byte	0xc9
 2773 0577 0F       		.byte	0xf
 2774 0578 00       		.byte	0
 2775 0579 17       		.uleb128 0x17
 2776 057a D4020000 		.4byte	.LASF53
 2777 057e 01       		.byte	0x1
 2778 057f 4501     		.2byte	0x145
 2779 0581 7E000000 		.4byte	0x7e
 2780 0585 00000000 		.4byte	.LFB44
 2781 0589 F0000000 		.4byte	.LFE44-.LFB44
 2782 058d 01       		.uleb128 0x1
 2783 058e 9C       		.byte	0x9c
 2784 058f 0D060000 		.4byte	0x60d
 2785 0593 18       		.uleb128 0x18
 2786 0594 71020000 		.4byte	.LASF45
 2787 0598 01       		.byte	0x1
 2788 0599 4501     		.2byte	0x145
 2789 059b 23020000 		.4byte	0x223
 2790 059f 02       		.uleb128 0x2
 2791 05a0 91       		.byte	0x91
 2792 05a1 64       		.sleb128 -28
 2793 05a2 18       		.uleb128 0x18
 2794 05a3 2A020000 		.4byte	.LASF42
 2795 05a7 01       		.byte	0x1
 2796 05a8 4501     		.2byte	0x145
 2797 05aa 7E000000 		.4byte	0x7e
 2798 05ae 02       		.uleb128 0x2
 2799 05af 91       		.byte	0x91
 2800 05b0 60       		.sleb128 -32
 2801 05b1 19       		.uleb128 0x19
 2802 05b2 636D6400 		.ascii	"cmd\000"
 2803 05b6 01       		.byte	0x1
 2804 05b7 4501     		.2byte	0x145
 2805 05b9 29020000 		.4byte	0x229
 2806 05bd 02       		.uleb128 0x2
 2807 05be 91       		.byte	0x91
 2808 05bf 5C       		.sleb128 -36
 2809 05c0 16       		.uleb128 0x16
 2810 05c1 6900     		.ascii	"i\000"
 2811 05c3 01       		.byte	0x1
 2812 05c4 4B01     		.2byte	0x14b
 2813 05c6 7E000000 		.4byte	0x7e
 2814 05ca 02       		.uleb128 0x2
 2815 05cb 91       		.byte	0x91
 2816 05cc 74       		.sleb128 -12
 2817 05cd 15       		.uleb128 0x15
 2818 05ce 38000000 		.4byte	.LBB7
 2819 05d2 8C000000 		.4byte	.LBE7-.LBB7
 2820 05d6 1A       		.uleb128 0x1a
 2821 05d7 AE000000 		.4byte	.LASF30
 2822 05db 01       		.byte	0x1
 2823 05dc 4E01     		.2byte	0x14e
 2824 05de 97000000 		.4byte	0x97
 2825 05e2 02       		.uleb128 0x2
 2826 05e3 91       		.byte	0x91
 2827 05e4 6A       		.sleb128 -22
ARM GAS  C:\Users\essele\AppData\Local\Temp\cci7Wywd.s 			page 61


 2828 05e5 1A       		.uleb128 0x1a
 2829 05e6 2B000000 		.4byte	.LASF31
 2830 05ea 01       		.byte	0x1
 2831 05eb 4F01     		.2byte	0x14f
 2832 05ed D0000000 		.4byte	0xd0
 2833 05f1 02       		.uleb128 0x2
 2834 05f2 91       		.byte	0x91
 2835 05f3 70       		.sleb128 -16
 2836 05f4 15       		.uleb128 0x15
 2837 05f5 60000000 		.4byte	.LBB8
 2838 05f9 34000000 		.4byte	.LBE8-.LBB8
 2839 05fd 16       		.uleb128 0x16
 2840 05fe 6D00     		.ascii	"m\000"
 2841 0600 01       		.byte	0x1
 2842 0601 5201     		.2byte	0x152
 2843 0603 40020000 		.4byte	0x240
 2844 0607 02       		.uleb128 0x2
 2845 0608 91       		.byte	0x91
 2846 0609 6C       		.sleb128 -20
 2847 060a 00       		.byte	0
 2848 060b 00       		.byte	0
 2849 060c 00       		.byte	0
 2850 060d 1D       		.uleb128 0x1d
 2851 060e 76020000 		.4byte	.LASF55
 2852 0612 01       		.byte	0x1
 2853 0613 6701     		.2byte	0x167
 2854 0615 7E000000 		.4byte	0x7e
 2855 0619 00000000 		.4byte	.LFB45
 2856 061d 1C000000 		.4byte	.LFE45-.LFB45
 2857 0621 01       		.uleb128 0x1
 2858 0622 9C       		.byte	0x9c
 2859 0623 1E       		.uleb128 0x1e
 2860 0624 6D030000 		.4byte	.LASF54
 2861 0628 01       		.byte	0x1
 2862 0629 6D01     		.2byte	0x16d
 2863 062b 7E000000 		.4byte	0x7e
 2864 062f 00000000 		.4byte	.LFB46
 2865 0633 2C000000 		.4byte	.LFE46-.LFB46
 2866 0637 01       		.uleb128 0x1
 2867 0638 9C       		.byte	0x9c
 2868 0639 4B060000 		.4byte	0x64b
 2869 063d 16       		.uleb128 0x16
 2870 063e 7600     		.ascii	"v\000"
 2871 0640 01       		.byte	0x1
 2872 0641 6E01     		.2byte	0x16e
 2873 0643 97000000 		.4byte	0x97
 2874 0647 02       		.uleb128 0x2
 2875 0648 91       		.byte	0x91
 2876 0649 6E       		.sleb128 -18
 2877 064a 00       		.byte	0
 2878 064b 1D       		.uleb128 0x1d
 2879 064c FC020000 		.4byte	.LASF56
 2880 0650 01       		.byte	0x1
 2881 0651 7601     		.2byte	0x176
 2882 0653 7E000000 		.4byte	0x7e
 2883 0657 00000000 		.4byte	.LFB47
 2884 065b 10000000 		.4byte	.LFE47-.LFB47
ARM GAS  C:\Users\essele\AppData\Local\Temp\cci7Wywd.s 			page 62


 2885 065f 01       		.uleb128 0x1
 2886 0660 9C       		.byte	0x9c
 2887 0661 1D       		.uleb128 0x1d
 2888 0662 08000000 		.4byte	.LASF57
 2889 0666 01       		.byte	0x1
 2890 0667 7A01     		.2byte	0x17a
 2891 0669 7E000000 		.4byte	0x7e
 2892 066d 00000000 		.4byte	.LFB48
 2893 0671 10000000 		.4byte	.LFE48-.LFB48
 2894 0675 01       		.uleb128 0x1
 2895 0676 9C       		.byte	0x9c
 2896 0677 1D       		.uleb128 0x1d
 2897 0678 C9020000 		.4byte	.LASF58
 2898 067c 01       		.byte	0x1
 2899 067d 7E01     		.2byte	0x17e
 2900 067f 7E000000 		.4byte	0x7e
 2901 0683 00000000 		.4byte	.LFB49
 2902 0687 10000000 		.4byte	.LFE49-.LFB49
 2903 068b 01       		.uleb128 0x1
 2904 068c 9C       		.byte	0x9c
 2905 068d 1D       		.uleb128 0x1d
 2906 068e 01020000 		.4byte	.LASF59
 2907 0692 01       		.byte	0x1
 2908 0693 8201     		.2byte	0x182
 2909 0695 7E000000 		.4byte	0x7e
 2910 0699 00000000 		.4byte	.LFB50
 2911 069d 10000000 		.4byte	.LFE50-.LFB50
 2912 06a1 01       		.uleb128 0x1
 2913 06a2 9C       		.byte	0x9c
 2914 06a3 1E       		.uleb128 0x1e
 2915 06a4 96000000 		.4byte	.LASF60
 2916 06a8 01       		.byte	0x1
 2917 06a9 8601     		.2byte	0x186
 2918 06ab 7E000000 		.4byte	0x7e
 2919 06af 00000000 		.4byte	.LFB51
 2920 06b3 2C000000 		.4byte	.LFE51-.LFB51
 2921 06b7 01       		.uleb128 0x1
 2922 06b8 9C       		.byte	0x9c
 2923 06b9 CB060000 		.4byte	0x6cb
 2924 06bd 16       		.uleb128 0x16
 2925 06be 7600     		.ascii	"v\000"
 2926 06c0 01       		.byte	0x1
 2927 06c1 8701     		.2byte	0x187
 2928 06c3 8C000000 		.4byte	0x8c
 2929 06c7 02       		.uleb128 0x2
 2930 06c8 91       		.byte	0x91
 2931 06c9 6F       		.sleb128 -17
 2932 06ca 00       		.byte	0
 2933 06cb 1F       		.uleb128 0x1f
 2934 06cc E3000000 		.4byte	.LASF28
 2935 06d0 04       		.byte	0x4
 2936 06d1 1D       		.byte	0x1d
 2937 06d2 E1000000 		.4byte	0xe1
 2938 06d6 1B       		.uleb128 0x1b
 2939 06d7 D0000000 		.4byte	0xd0
 2940 06db E6060000 		.4byte	0x6e6
 2941 06df 1C       		.uleb128 0x1c
ARM GAS  C:\Users\essele\AppData\Local\Temp\cci7Wywd.s 			page 63


 2942 06e0 C9000000 		.4byte	0xc9
 2943 06e4 13       		.byte	0x13
 2944 06e5 00       		.byte	0
 2945 06e6 20       		.uleb128 0x20
 2946 06e7 5B010000 		.4byte	.LASF61
 2947 06eb 01       		.byte	0x1
 2948 06ec 19       		.byte	0x19
 2949 06ed D6060000 		.4byte	0x6d6
 2950 06f1 05       		.uleb128 0x5
 2951 06f2 03       		.byte	0x3
 2952 06f3 00000000 		.4byte	toks
 2953 06f7 20       		.uleb128 0x20
 2954 06f8 33000000 		.4byte	.LASF62
 2955 06fc 01       		.byte	0x1
 2956 06fd 1A       		.byte	0x1a
 2957 06fe 7E000000 		.4byte	0x7e
 2958 0702 05       		.uleb128 0x5
 2959 0703 03       		.byte	0x3
 2960 0704 00000000 		.4byte	tok_count
 2961 0708 1B       		.uleb128 0x1b
 2962 0709 2F020000 		.4byte	0x22f
 2963 070d 18070000 		.4byte	0x718
 2964 0711 1C       		.uleb128 0x1c
 2965 0712 C9000000 		.4byte	0xc9
 2966 0716 12       		.byte	0x12
 2967 0717 00       		.byte	0
 2968 0718 21       		.uleb128 0x21
 2969 0719 C8000000 		.4byte	.LASF63
 2970 071d 01       		.byte	0x1
 2971 071e BB01     		.2byte	0x1bb
 2972 0720 2A070000 		.4byte	0x72a
 2973 0724 05       		.uleb128 0x5
 2974 0725 03       		.byte	0x3
 2975 0726 00000000 		.4byte	commands
 2976 072a 06       		.uleb128 0x6
 2977 072b 08070000 		.4byte	0x708
 2978 072f 1B       		.uleb128 0x1b
 2979 0730 D6000000 		.4byte	0xd6
 2980 0734 3F070000 		.4byte	0x73f
 2981 0738 1C       		.uleb128 0x1c
 2982 0739 C9000000 		.4byte	0xc9
 2983 073d 01       		.byte	0x1
 2984 073e 00       		.byte	0
 2985 073f 21       		.uleb128 0x21
 2986 0740 85030000 		.4byte	.LASF64
 2987 0744 01       		.byte	0x1
 2988 0745 9901     		.2byte	0x199
 2989 0747 2F070000 		.4byte	0x72f
 2990 074b 05       		.uleb128 0x5
 2991 074c 03       		.byte	0x3
 2992 074d 00000000 		.4byte	no_usage_args
 2993 0751 1B       		.uleb128 0x1b
 2994 0752 46020000 		.4byte	0x246
 2995 0756 61070000 		.4byte	0x761
 2996 075a 1C       		.uleb128 0x1c
 2997 075b C9000000 		.4byte	0xc9
 2998 075f 03       		.byte	0x3
ARM GAS  C:\Users\essele\AppData\Local\Temp\cci7Wywd.s 			page 64


 2999 0760 00       		.byte	0
 3000 0761 21       		.uleb128 0x21
 3001 0762 39030000 		.4byte	.LASF65
 3002 0766 01       		.byte	0x1
 3003 0767 9F01     		.2byte	0x19f
 3004 0769 73070000 		.4byte	0x773
 3005 076d 05       		.uleb128 0x5
 3006 076e 03       		.byte	0x3
 3007 076f 00000000 		.4byte	auto_means
 3008 0773 06       		.uleb128 0x6
 3009 0774 51070000 		.4byte	0x751
 3010 0778 1B       		.uleb128 0x1b
 3011 0779 46020000 		.4byte	0x246
 3012 077d 88070000 		.4byte	0x788
 3013 0781 1C       		.uleb128 0x1c
 3014 0782 C9000000 		.4byte	0xc9
 3015 0786 02       		.byte	0x2
 3016 0787 00       		.byte	0
 3017 0788 21       		.uleb128 0x21
 3018 0789 1E010000 		.4byte	.LASF66
 3019 078d 01       		.byte	0x1
 3020 078e A601     		.2byte	0x1a6
 3021 0790 9A070000 		.4byte	0x79a
 3022 0794 05       		.uleb128 0x5
 3023 0795 03       		.byte	0x3
 3024 0796 00000000 		.4byte	enable_disable_means
 3025 079a 06       		.uleb128 0x6
 3026 079b 78070000 		.4byte	0x778
 3027 079f 1B       		.uleb128 0x1b
 3028 07a0 46020000 		.4byte	0x246
 3029 07a4 AF070000 		.4byte	0x7af
 3030 07a8 1C       		.uleb128 0x1c
 3031 07a9 C9000000 		.4byte	0xc9
 3032 07ad 04       		.byte	0x4
 3033 07ae 00       		.byte	0
 3034 07af 21       		.uleb128 0x21
 3035 07b0 A3020000 		.4byte	.LASF67
 3036 07b4 01       		.byte	0x1
 3037 07b5 AC01     		.2byte	0x1ac
 3038 07b7 C1070000 		.4byte	0x7c1
 3039 07bb 05       		.uleb128 0x5
 3040 07bc 03       		.byte	0x3
 3041 07bd 00000000 		.4byte	eos_means
 3042 07c1 06       		.uleb128 0x6
 3043 07c2 9F070000 		.4byte	0x79f
 3044 07c6 21       		.uleb128 0x21
 3045 07c7 58030000 		.4byte	.LASF68
 3046 07cb 01       		.byte	0x1
 3047 07cc B501     		.2byte	0x1b5
 3048 07ce 2F070000 		.4byte	0x72f
 3049 07d2 05       		.uleb128 0x5
 3050 07d3 03       		.byte	0x3
 3051 07d4 00000000 		.4byte	enable_disable_usage
 3052 07d8 00       		.byte	0
 3053              		.section	.debug_abbrev,"",%progbits
 3054              	.Ldebug_abbrev0:
 3055 0000 01       		.uleb128 0x1
ARM GAS  C:\Users\essele\AppData\Local\Temp\cci7Wywd.s 			page 65


 3056 0001 11       		.uleb128 0x11
 3057 0002 01       		.byte	0x1
 3058 0003 25       		.uleb128 0x25
 3059 0004 0E       		.uleb128 0xe
 3060 0005 13       		.uleb128 0x13
 3061 0006 0B       		.uleb128 0xb
 3062 0007 03       		.uleb128 0x3
 3063 0008 0E       		.uleb128 0xe
 3064 0009 1B       		.uleb128 0x1b
 3065 000a 0E       		.uleb128 0xe
 3066 000b 55       		.uleb128 0x55
 3067 000c 17       		.uleb128 0x17
 3068 000d 11       		.uleb128 0x11
 3069 000e 01       		.uleb128 0x1
 3070 000f 10       		.uleb128 0x10
 3071 0010 17       		.uleb128 0x17
 3072 0011 00       		.byte	0
 3073 0012 00       		.byte	0
 3074 0013 02       		.uleb128 0x2
 3075 0014 24       		.uleb128 0x24
 3076 0015 00       		.byte	0
 3077 0016 0B       		.uleb128 0xb
 3078 0017 0B       		.uleb128 0xb
 3079 0018 3E       		.uleb128 0x3e
 3080 0019 0B       		.uleb128 0xb
 3081 001a 03       		.uleb128 0x3
 3082 001b 0E       		.uleb128 0xe
 3083 001c 00       		.byte	0
 3084 001d 00       		.byte	0
 3085 001e 03       		.uleb128 0x3
 3086 001f 16       		.uleb128 0x16
 3087 0020 00       		.byte	0
 3088 0021 03       		.uleb128 0x3
 3089 0022 0E       		.uleb128 0xe
 3090 0023 3A       		.uleb128 0x3a
 3091 0024 0B       		.uleb128 0xb
 3092 0025 3B       		.uleb128 0x3b
 3093 0026 0B       		.uleb128 0xb
 3094 0027 49       		.uleb128 0x49
 3095 0028 13       		.uleb128 0x13
 3096 0029 00       		.byte	0
 3097 002a 00       		.byte	0
 3098 002b 04       		.uleb128 0x4
 3099 002c 24       		.uleb128 0x24
 3100 002d 00       		.byte	0
 3101 002e 0B       		.uleb128 0xb
 3102 002f 0B       		.uleb128 0xb
 3103 0030 3E       		.uleb128 0x3e
 3104 0031 0B       		.uleb128 0xb
 3105 0032 03       		.uleb128 0x3
 3106 0033 08       		.uleb128 0x8
 3107 0034 00       		.byte	0
 3108 0035 00       		.byte	0
 3109 0036 05       		.uleb128 0x5
 3110 0037 0F       		.uleb128 0xf
 3111 0038 00       		.byte	0
 3112 0039 0B       		.uleb128 0xb
ARM GAS  C:\Users\essele\AppData\Local\Temp\cci7Wywd.s 			page 66


 3113 003a 0B       		.uleb128 0xb
 3114 003b 49       		.uleb128 0x49
 3115 003c 13       		.uleb128 0x13
 3116 003d 00       		.byte	0
 3117 003e 00       		.byte	0
 3118 003f 06       		.uleb128 0x6
 3119 0040 26       		.uleb128 0x26
 3120 0041 00       		.byte	0
 3121 0042 49       		.uleb128 0x49
 3122 0043 13       		.uleb128 0x13
 3123 0044 00       		.byte	0
 3124 0045 00       		.byte	0
 3125 0046 07       		.uleb128 0x7
 3126 0047 13       		.uleb128 0x13
 3127 0048 01       		.byte	0x1
 3128 0049 03       		.uleb128 0x3
 3129 004a 0E       		.uleb128 0xe
 3130 004b 0B       		.uleb128 0xb
 3131 004c 0B       		.uleb128 0xb
 3132 004d 3A       		.uleb128 0x3a
 3133 004e 0B       		.uleb128 0xb
 3134 004f 3B       		.uleb128 0x3b
 3135 0050 0B       		.uleb128 0xb
 3136 0051 01       		.uleb128 0x1
 3137 0052 13       		.uleb128 0x13
 3138 0053 00       		.byte	0
 3139 0054 00       		.byte	0
 3140 0055 08       		.uleb128 0x8
 3141 0056 0D       		.uleb128 0xd
 3142 0057 00       		.byte	0
 3143 0058 03       		.uleb128 0x3
 3144 0059 0E       		.uleb128 0xe
 3145 005a 3A       		.uleb128 0x3a
 3146 005b 0B       		.uleb128 0xb
 3147 005c 3B       		.uleb128 0x3b
 3148 005d 0B       		.uleb128 0xb
 3149 005e 49       		.uleb128 0x49
 3150 005f 13       		.uleb128 0x13
 3151 0060 38       		.uleb128 0x38
 3152 0061 0B       		.uleb128 0xb
 3153 0062 00       		.byte	0
 3154 0063 00       		.byte	0
 3155 0064 09       		.uleb128 0x9
 3156 0065 0D       		.uleb128 0xd
 3157 0066 00       		.byte	0
 3158 0067 03       		.uleb128 0x3
 3159 0068 08       		.uleb128 0x8
 3160 0069 3A       		.uleb128 0x3a
 3161 006a 0B       		.uleb128 0xb
 3162 006b 3B       		.uleb128 0x3b
 3163 006c 0B       		.uleb128 0xb
 3164 006d 49       		.uleb128 0x49
 3165 006e 13       		.uleb128 0x13
 3166 006f 38       		.uleb128 0x38
 3167 0070 0B       		.uleb128 0xb
 3168 0071 00       		.byte	0
 3169 0072 00       		.byte	0
ARM GAS  C:\Users\essele\AppData\Local\Temp\cci7Wywd.s 			page 67


 3170 0073 0A       		.uleb128 0xa
 3171 0074 13       		.uleb128 0x13
 3172 0075 01       		.byte	0x1
 3173 0076 03       		.uleb128 0x3
 3174 0077 08       		.uleb128 0x8
 3175 0078 0B       		.uleb128 0xb
 3176 0079 0B       		.uleb128 0xb
 3177 007a 3A       		.uleb128 0x3a
 3178 007b 0B       		.uleb128 0xb
 3179 007c 3B       		.uleb128 0x3b
 3180 007d 0B       		.uleb128 0xb
 3181 007e 01       		.uleb128 0x1
 3182 007f 13       		.uleb128 0x13
 3183 0080 00       		.byte	0
 3184 0081 00       		.byte	0
 3185 0082 0B       		.uleb128 0xb
 3186 0083 15       		.uleb128 0x15
 3187 0084 01       		.byte	0x1
 3188 0085 27       		.uleb128 0x27
 3189 0086 19       		.uleb128 0x19
 3190 0087 49       		.uleb128 0x49
 3191 0088 13       		.uleb128 0x13
 3192 0089 01       		.uleb128 0x1
 3193 008a 13       		.uleb128 0x13
 3194 008b 00       		.byte	0
 3195 008c 00       		.byte	0
 3196 008d 0C       		.uleb128 0xc
 3197 008e 05       		.uleb128 0x5
 3198 008f 00       		.byte	0
 3199 0090 49       		.uleb128 0x49
 3200 0091 13       		.uleb128 0x13
 3201 0092 00       		.byte	0
 3202 0093 00       		.byte	0
 3203 0094 0D       		.uleb128 0xd
 3204 0095 2E       		.uleb128 0x2e
 3205 0096 01       		.byte	0x1
 3206 0097 3F       		.uleb128 0x3f
 3207 0098 19       		.uleb128 0x19
 3208 0099 03       		.uleb128 0x3
 3209 009a 0E       		.uleb128 0xe
 3210 009b 3A       		.uleb128 0x3a
 3211 009c 0B       		.uleb128 0xb
 3212 009d 3B       		.uleb128 0x3b
 3213 009e 0B       		.uleb128 0xb
 3214 009f 27       		.uleb128 0x27
 3215 00a0 19       		.uleb128 0x19
 3216 00a1 49       		.uleb128 0x49
 3217 00a2 13       		.uleb128 0x13
 3218 00a3 11       		.uleb128 0x11
 3219 00a4 01       		.uleb128 0x1
 3220 00a5 12       		.uleb128 0x12
 3221 00a6 06       		.uleb128 0x6
 3222 00a7 40       		.uleb128 0x40
 3223 00a8 18       		.uleb128 0x18
 3224 00a9 9642     		.uleb128 0x2116
 3225 00ab 19       		.uleb128 0x19
 3226 00ac 01       		.uleb128 0x1
ARM GAS  C:\Users\essele\AppData\Local\Temp\cci7Wywd.s 			page 68


 3227 00ad 13       		.uleb128 0x13
 3228 00ae 00       		.byte	0
 3229 00af 00       		.byte	0
 3230 00b0 0E       		.uleb128 0xe
 3231 00b1 05       		.uleb128 0x5
 3232 00b2 00       		.byte	0
 3233 00b3 03       		.uleb128 0x3
 3234 00b4 08       		.uleb128 0x8
 3235 00b5 3A       		.uleb128 0x3a
 3236 00b6 0B       		.uleb128 0xb
 3237 00b7 3B       		.uleb128 0x3b
 3238 00b8 0B       		.uleb128 0xb
 3239 00b9 49       		.uleb128 0x49
 3240 00ba 13       		.uleb128 0x13
 3241 00bb 02       		.uleb128 0x2
 3242 00bc 18       		.uleb128 0x18
 3243 00bd 00       		.byte	0
 3244 00be 00       		.byte	0
 3245 00bf 0F       		.uleb128 0xf
 3246 00c0 34       		.uleb128 0x34
 3247 00c1 00       		.byte	0
 3248 00c2 03       		.uleb128 0x3
 3249 00c3 08       		.uleb128 0x8
 3250 00c4 3A       		.uleb128 0x3a
 3251 00c5 0B       		.uleb128 0xb
 3252 00c6 3B       		.uleb128 0x3b
 3253 00c7 0B       		.uleb128 0xb
 3254 00c8 49       		.uleb128 0x49
 3255 00c9 13       		.uleb128 0x13
 3256 00ca 02       		.uleb128 0x2
 3257 00cb 18       		.uleb128 0x18
 3258 00cc 00       		.byte	0
 3259 00cd 00       		.byte	0
 3260 00ce 10       		.uleb128 0x10
 3261 00cf 2E       		.uleb128 0x2e
 3262 00d0 01       		.byte	0x1
 3263 00d1 3F       		.uleb128 0x3f
 3264 00d2 19       		.uleb128 0x19
 3265 00d3 03       		.uleb128 0x3
 3266 00d4 0E       		.uleb128 0xe
 3267 00d5 3A       		.uleb128 0x3a
 3268 00d6 0B       		.uleb128 0xb
 3269 00d7 3B       		.uleb128 0x3b
 3270 00d8 0B       		.uleb128 0xb
 3271 00d9 27       		.uleb128 0x27
 3272 00da 19       		.uleb128 0x19
 3273 00db 49       		.uleb128 0x49
 3274 00dc 13       		.uleb128 0x13
 3275 00dd 11       		.uleb128 0x11
 3276 00de 01       		.uleb128 0x1
 3277 00df 12       		.uleb128 0x12
 3278 00e0 06       		.uleb128 0x6
 3279 00e1 40       		.uleb128 0x40
 3280 00e2 18       		.uleb128 0x18
 3281 00e3 9742     		.uleb128 0x2117
 3282 00e5 19       		.uleb128 0x19
 3283 00e6 01       		.uleb128 0x1
ARM GAS  C:\Users\essele\AppData\Local\Temp\cci7Wywd.s 			page 69


 3284 00e7 13       		.uleb128 0x13
 3285 00e8 00       		.byte	0
 3286 00e9 00       		.byte	0
 3287 00ea 11       		.uleb128 0x11
 3288 00eb 2E       		.uleb128 0x2e
 3289 00ec 01       		.byte	0x1
 3290 00ed 3F       		.uleb128 0x3f
 3291 00ee 19       		.uleb128 0x19
 3292 00ef 03       		.uleb128 0x3
 3293 00f0 0E       		.uleb128 0xe
 3294 00f1 3A       		.uleb128 0x3a
 3295 00f2 0B       		.uleb128 0xb
 3296 00f3 3B       		.uleb128 0x3b
 3297 00f4 0B       		.uleb128 0xb
 3298 00f5 27       		.uleb128 0x27
 3299 00f6 19       		.uleb128 0x19
 3300 00f7 11       		.uleb128 0x11
 3301 00f8 01       		.uleb128 0x1
 3302 00f9 12       		.uleb128 0x12
 3303 00fa 06       		.uleb128 0x6
 3304 00fb 40       		.uleb128 0x40
 3305 00fc 18       		.uleb128 0x18
 3306 00fd 9642     		.uleb128 0x2116
 3307 00ff 19       		.uleb128 0x19
 3308 0100 01       		.uleb128 0x1
 3309 0101 13       		.uleb128 0x13
 3310 0102 00       		.byte	0
 3311 0103 00       		.byte	0
 3312 0104 12       		.uleb128 0x12
 3313 0105 34       		.uleb128 0x34
 3314 0106 00       		.byte	0
 3315 0107 03       		.uleb128 0x3
 3316 0108 0E       		.uleb128 0xe
 3317 0109 3A       		.uleb128 0x3a
 3318 010a 0B       		.uleb128 0xb
 3319 010b 3B       		.uleb128 0x3b
 3320 010c 0B       		.uleb128 0xb
 3321 010d 49       		.uleb128 0x49
 3322 010e 13       		.uleb128 0x13
 3323 010f 02       		.uleb128 0x2
 3324 0110 18       		.uleb128 0x18
 3325 0111 00       		.byte	0
 3326 0112 00       		.byte	0
 3327 0113 13       		.uleb128 0x13
 3328 0114 05       		.uleb128 0x5
 3329 0115 00       		.byte	0
 3330 0116 03       		.uleb128 0x3
 3331 0117 0E       		.uleb128 0xe
 3332 0118 3A       		.uleb128 0x3a
 3333 0119 0B       		.uleb128 0xb
 3334 011a 3B       		.uleb128 0x3b
 3335 011b 0B       		.uleb128 0xb
 3336 011c 49       		.uleb128 0x49
 3337 011d 13       		.uleb128 0x13
 3338 011e 02       		.uleb128 0x2
 3339 011f 18       		.uleb128 0x18
 3340 0120 00       		.byte	0
ARM GAS  C:\Users\essele\AppData\Local\Temp\cci7Wywd.s 			page 70


 3341 0121 00       		.byte	0
 3342 0122 14       		.uleb128 0x14
 3343 0123 0B       		.uleb128 0xb
 3344 0124 01       		.byte	0x1
 3345 0125 11       		.uleb128 0x11
 3346 0126 01       		.uleb128 0x1
 3347 0127 12       		.uleb128 0x12
 3348 0128 06       		.uleb128 0x6
 3349 0129 01       		.uleb128 0x1
 3350 012a 13       		.uleb128 0x13
 3351 012b 00       		.byte	0
 3352 012c 00       		.byte	0
 3353 012d 15       		.uleb128 0x15
 3354 012e 0B       		.uleb128 0xb
 3355 012f 01       		.byte	0x1
 3356 0130 11       		.uleb128 0x11
 3357 0131 01       		.uleb128 0x1
 3358 0132 12       		.uleb128 0x12
 3359 0133 06       		.uleb128 0x6
 3360 0134 00       		.byte	0
 3361 0135 00       		.byte	0
 3362 0136 16       		.uleb128 0x16
 3363 0137 34       		.uleb128 0x34
 3364 0138 00       		.byte	0
 3365 0139 03       		.uleb128 0x3
 3366 013a 08       		.uleb128 0x8
 3367 013b 3A       		.uleb128 0x3a
 3368 013c 0B       		.uleb128 0xb
 3369 013d 3B       		.uleb128 0x3b
 3370 013e 05       		.uleb128 0x5
 3371 013f 49       		.uleb128 0x49
 3372 0140 13       		.uleb128 0x13
 3373 0141 02       		.uleb128 0x2
 3374 0142 18       		.uleb128 0x18
 3375 0143 00       		.byte	0
 3376 0144 00       		.byte	0
 3377 0145 17       		.uleb128 0x17
 3378 0146 2E       		.uleb128 0x2e
 3379 0147 01       		.byte	0x1
 3380 0148 3F       		.uleb128 0x3f
 3381 0149 19       		.uleb128 0x19
 3382 014a 03       		.uleb128 0x3
 3383 014b 0E       		.uleb128 0xe
 3384 014c 3A       		.uleb128 0x3a
 3385 014d 0B       		.uleb128 0xb
 3386 014e 3B       		.uleb128 0x3b
 3387 014f 05       		.uleb128 0x5
 3388 0150 27       		.uleb128 0x27
 3389 0151 19       		.uleb128 0x19
 3390 0152 49       		.uleb128 0x49
 3391 0153 13       		.uleb128 0x13
 3392 0154 11       		.uleb128 0x11
 3393 0155 01       		.uleb128 0x1
 3394 0156 12       		.uleb128 0x12
 3395 0157 06       		.uleb128 0x6
 3396 0158 40       		.uleb128 0x40
 3397 0159 18       		.uleb128 0x18
ARM GAS  C:\Users\essele\AppData\Local\Temp\cci7Wywd.s 			page 71


 3398 015a 9642     		.uleb128 0x2116
 3399 015c 19       		.uleb128 0x19
 3400 015d 01       		.uleb128 0x1
 3401 015e 13       		.uleb128 0x13
 3402 015f 00       		.byte	0
 3403 0160 00       		.byte	0
 3404 0161 18       		.uleb128 0x18
 3405 0162 05       		.uleb128 0x5
 3406 0163 00       		.byte	0
 3407 0164 03       		.uleb128 0x3
 3408 0165 0E       		.uleb128 0xe
 3409 0166 3A       		.uleb128 0x3a
 3410 0167 0B       		.uleb128 0xb
 3411 0168 3B       		.uleb128 0x3b
 3412 0169 05       		.uleb128 0x5
 3413 016a 49       		.uleb128 0x49
 3414 016b 13       		.uleb128 0x13
 3415 016c 02       		.uleb128 0x2
 3416 016d 18       		.uleb128 0x18
 3417 016e 00       		.byte	0
 3418 016f 00       		.byte	0
 3419 0170 19       		.uleb128 0x19
 3420 0171 05       		.uleb128 0x5
 3421 0172 00       		.byte	0
 3422 0173 03       		.uleb128 0x3
 3423 0174 08       		.uleb128 0x8
 3424 0175 3A       		.uleb128 0x3a
 3425 0176 0B       		.uleb128 0xb
 3426 0177 3B       		.uleb128 0x3b
 3427 0178 05       		.uleb128 0x5
 3428 0179 49       		.uleb128 0x49
 3429 017a 13       		.uleb128 0x13
 3430 017b 02       		.uleb128 0x2
 3431 017c 18       		.uleb128 0x18
 3432 017d 00       		.byte	0
 3433 017e 00       		.byte	0
 3434 017f 1A       		.uleb128 0x1a
 3435 0180 34       		.uleb128 0x34
 3436 0181 00       		.byte	0
 3437 0182 03       		.uleb128 0x3
 3438 0183 0E       		.uleb128 0xe
 3439 0184 3A       		.uleb128 0x3a
 3440 0185 0B       		.uleb128 0xb
 3441 0186 3B       		.uleb128 0x3b
 3442 0187 05       		.uleb128 0x5
 3443 0188 49       		.uleb128 0x49
 3444 0189 13       		.uleb128 0x13
 3445 018a 02       		.uleb128 0x2
 3446 018b 18       		.uleb128 0x18
 3447 018c 00       		.byte	0
 3448 018d 00       		.byte	0
 3449 018e 1B       		.uleb128 0x1b
 3450 018f 01       		.uleb128 0x1
 3451 0190 01       		.byte	0x1
 3452 0191 49       		.uleb128 0x49
 3453 0192 13       		.uleb128 0x13
 3454 0193 01       		.uleb128 0x1
ARM GAS  C:\Users\essele\AppData\Local\Temp\cci7Wywd.s 			page 72


 3455 0194 13       		.uleb128 0x13
 3456 0195 00       		.byte	0
 3457 0196 00       		.byte	0
 3458 0197 1C       		.uleb128 0x1c
 3459 0198 21       		.uleb128 0x21
 3460 0199 00       		.byte	0
 3461 019a 49       		.uleb128 0x49
 3462 019b 13       		.uleb128 0x13
 3463 019c 2F       		.uleb128 0x2f
 3464 019d 0B       		.uleb128 0xb
 3465 019e 00       		.byte	0
 3466 019f 00       		.byte	0
 3467 01a0 1D       		.uleb128 0x1d
 3468 01a1 2E       		.uleb128 0x2e
 3469 01a2 00       		.byte	0
 3470 01a3 3F       		.uleb128 0x3f
 3471 01a4 19       		.uleb128 0x19
 3472 01a5 03       		.uleb128 0x3
 3473 01a6 0E       		.uleb128 0xe
 3474 01a7 3A       		.uleb128 0x3a
 3475 01a8 0B       		.uleb128 0xb
 3476 01a9 3B       		.uleb128 0x3b
 3477 01aa 05       		.uleb128 0x5
 3478 01ab 49       		.uleb128 0x49
 3479 01ac 13       		.uleb128 0x13
 3480 01ad 11       		.uleb128 0x11
 3481 01ae 01       		.uleb128 0x1
 3482 01af 12       		.uleb128 0x12
 3483 01b0 06       		.uleb128 0x6
 3484 01b1 40       		.uleb128 0x40
 3485 01b2 18       		.uleb128 0x18
 3486 01b3 9642     		.uleb128 0x2116
 3487 01b5 19       		.uleb128 0x19
 3488 01b6 00       		.byte	0
 3489 01b7 00       		.byte	0
 3490 01b8 1E       		.uleb128 0x1e
 3491 01b9 2E       		.uleb128 0x2e
 3492 01ba 01       		.byte	0x1
 3493 01bb 3F       		.uleb128 0x3f
 3494 01bc 19       		.uleb128 0x19
 3495 01bd 03       		.uleb128 0x3
 3496 01be 0E       		.uleb128 0xe
 3497 01bf 3A       		.uleb128 0x3a
 3498 01c0 0B       		.uleb128 0xb
 3499 01c1 3B       		.uleb128 0x3b
 3500 01c2 05       		.uleb128 0x5
 3501 01c3 49       		.uleb128 0x49
 3502 01c4 13       		.uleb128 0x13
 3503 01c5 11       		.uleb128 0x11
 3504 01c6 01       		.uleb128 0x1
 3505 01c7 12       		.uleb128 0x12
 3506 01c8 06       		.uleb128 0x6
 3507 01c9 40       		.uleb128 0x40
 3508 01ca 18       		.uleb128 0x18
 3509 01cb 9642     		.uleb128 0x2116
 3510 01cd 19       		.uleb128 0x19
 3511 01ce 01       		.uleb128 0x1
ARM GAS  C:\Users\essele\AppData\Local\Temp\cci7Wywd.s 			page 73


 3512 01cf 13       		.uleb128 0x13
 3513 01d0 00       		.byte	0
 3514 01d1 00       		.byte	0
 3515 01d2 1F       		.uleb128 0x1f
 3516 01d3 34       		.uleb128 0x34
 3517 01d4 00       		.byte	0
 3518 01d5 03       		.uleb128 0x3
 3519 01d6 0E       		.uleb128 0xe
 3520 01d7 3A       		.uleb128 0x3a
 3521 01d8 0B       		.uleb128 0xb
 3522 01d9 3B       		.uleb128 0x3b
 3523 01da 0B       		.uleb128 0xb
 3524 01db 49       		.uleb128 0x49
 3525 01dc 13       		.uleb128 0x13
 3526 01dd 3F       		.uleb128 0x3f
 3527 01de 19       		.uleb128 0x19
 3528 01df 3C       		.uleb128 0x3c
 3529 01e0 19       		.uleb128 0x19
 3530 01e1 00       		.byte	0
 3531 01e2 00       		.byte	0
 3532 01e3 20       		.uleb128 0x20
 3533 01e4 34       		.uleb128 0x34
 3534 01e5 00       		.byte	0
 3535 01e6 03       		.uleb128 0x3
 3536 01e7 0E       		.uleb128 0xe
 3537 01e8 3A       		.uleb128 0x3a
 3538 01e9 0B       		.uleb128 0xb
 3539 01ea 3B       		.uleb128 0x3b
 3540 01eb 0B       		.uleb128 0xb
 3541 01ec 49       		.uleb128 0x49
 3542 01ed 13       		.uleb128 0x13
 3543 01ee 3F       		.uleb128 0x3f
 3544 01ef 19       		.uleb128 0x19
 3545 01f0 02       		.uleb128 0x2
 3546 01f1 18       		.uleb128 0x18
 3547 01f2 00       		.byte	0
 3548 01f3 00       		.byte	0
 3549 01f4 21       		.uleb128 0x21
 3550 01f5 34       		.uleb128 0x34
 3551 01f6 00       		.byte	0
 3552 01f7 03       		.uleb128 0x3
 3553 01f8 0E       		.uleb128 0xe
 3554 01f9 3A       		.uleb128 0x3a
 3555 01fa 0B       		.uleb128 0xb
 3556 01fb 3B       		.uleb128 0x3b
 3557 01fc 05       		.uleb128 0x5
 3558 01fd 49       		.uleb128 0x49
 3559 01fe 13       		.uleb128 0x13
 3560 01ff 3F       		.uleb128 0x3f
 3561 0200 19       		.uleb128 0x19
 3562 0201 02       		.uleb128 0x2
 3563 0202 18       		.uleb128 0x18
 3564 0203 00       		.byte	0
 3565 0204 00       		.byte	0
 3566 0205 00       		.byte	0
 3567              		.section	.debug_aranges,"",%progbits
 3568 0000 9C000000 		.4byte	0x9c
ARM GAS  C:\Users\essele\AppData\Local\Temp\cci7Wywd.s 			page 74


 3569 0004 0200     		.2byte	0x2
 3570 0006 00000000 		.4byte	.Ldebug_info0
 3571 000a 04       		.byte	0x4
 3572 000b 00       		.byte	0
 3573 000c 0000     		.2byte	0
 3574 000e 0000     		.2byte	0
 3575 0010 00000000 		.4byte	.LFB35
 3576 0014 DC000000 		.4byte	.LFE35-.LFB35
 3577 0018 00000000 		.4byte	.LFB36
 3578 001c 40000000 		.4byte	.LFE36-.LFB36
 3579 0020 00000000 		.4byte	.LFB37
 3580 0024 3C000000 		.4byte	.LFE37-.LFB37
 3581 0028 00000000 		.4byte	.LFB38
 3582 002c 88000000 		.4byte	.LFE38-.LFB38
 3583 0030 00000000 		.4byte	.LFB39
 3584 0034 D4000000 		.4byte	.LFE39-.LFB39
 3585 0038 00000000 		.4byte	.LFB40
 3586 003c B8000000 		.4byte	.LFE40-.LFB40
 3587 0040 00000000 		.4byte	.LFB41
 3588 0044 44000000 		.4byte	.LFE41-.LFB41
 3589 0048 00000000 		.4byte	.LFB42
 3590 004c CC000000 		.4byte	.LFE42-.LFB42
 3591 0050 00000000 		.4byte	.LFB43
 3592 0054 14010000 		.4byte	.LFE43-.LFB43
 3593 0058 00000000 		.4byte	.LFB44
 3594 005c F0000000 		.4byte	.LFE44-.LFB44
 3595 0060 00000000 		.4byte	.LFB45
 3596 0064 1C000000 		.4byte	.LFE45-.LFB45
 3597 0068 00000000 		.4byte	.LFB46
 3598 006c 2C000000 		.4byte	.LFE46-.LFB46
 3599 0070 00000000 		.4byte	.LFB47
 3600 0074 10000000 		.4byte	.LFE47-.LFB47
 3601 0078 00000000 		.4byte	.LFB48
 3602 007c 10000000 		.4byte	.LFE48-.LFB48
 3603 0080 00000000 		.4byte	.LFB49
 3604 0084 10000000 		.4byte	.LFE49-.LFB49
 3605 0088 00000000 		.4byte	.LFB50
 3606 008c 10000000 		.4byte	.LFE50-.LFB50
 3607 0090 00000000 		.4byte	.LFB51
 3608 0094 2C000000 		.4byte	.LFE51-.LFB51
 3609 0098 00000000 		.4byte	0
 3610 009c 00000000 		.4byte	0
 3611              		.section	.debug_ranges,"",%progbits
 3612              	.Ldebug_ranges0:
 3613 0000 00000000 		.4byte	.LFB35
 3614 0004 DC000000 		.4byte	.LFE35
 3615 0008 00000000 		.4byte	.LFB36
 3616 000c 40000000 		.4byte	.LFE36
 3617 0010 00000000 		.4byte	.LFB37
 3618 0014 3C000000 		.4byte	.LFE37
 3619 0018 00000000 		.4byte	.LFB38
 3620 001c 88000000 		.4byte	.LFE38
 3621 0020 00000000 		.4byte	.LFB39
 3622 0024 D4000000 		.4byte	.LFE39
 3623 0028 00000000 		.4byte	.LFB40
 3624 002c B8000000 		.4byte	.LFE40
 3625 0030 00000000 		.4byte	.LFB41
ARM GAS  C:\Users\essele\AppData\Local\Temp\cci7Wywd.s 			page 75


 3626 0034 44000000 		.4byte	.LFE41
 3627 0038 00000000 		.4byte	.LFB42
 3628 003c CC000000 		.4byte	.LFE42
 3629 0040 00000000 		.4byte	.LFB43
 3630 0044 14010000 		.4byte	.LFE43
 3631 0048 00000000 		.4byte	.LFB44
 3632 004c F0000000 		.4byte	.LFE44
 3633 0050 00000000 		.4byte	.LFB45
 3634 0054 1C000000 		.4byte	.LFE45
 3635 0058 00000000 		.4byte	.LFB46
 3636 005c 2C000000 		.4byte	.LFE46
 3637 0060 00000000 		.4byte	.LFB47
 3638 0064 10000000 		.4byte	.LFE47
 3639 0068 00000000 		.4byte	.LFB48
 3640 006c 10000000 		.4byte	.LFE48
 3641 0070 00000000 		.4byte	.LFB49
 3642 0074 10000000 		.4byte	.LFE49
 3643 0078 00000000 		.4byte	.LFB50
 3644 007c 10000000 		.4byte	.LFE50
 3645 0080 00000000 		.4byte	.LFB51
 3646 0084 2C000000 		.4byte	.LFE51
 3647 0088 00000000 		.4byte	0
 3648 008c 00000000 		.4byte	0
 3649              		.section	.debug_line,"",%progbits
 3650              	.Ldebug_line0:
 3651 0000 20030000 		.section	.debug_str,"MS",%progbits,1
 3651      02002B01 
 3651      00000201 
 3651      FB0E0D00 
 3651      01010101 
 3652              	.LASF21:
 3653 0000 76657273 		.ascii	"version\000"
 3653      696F6E00 
 3654              	.LASF57:
 3655 0008 68656C70 		.ascii	"helper_ifc\000"
 3655      65725F69 
 3655      666300
 3656              	.LASF36:
 3657 0013 75736167 		.ascii	"usage\000"
 3657      6500
 3658              	.LASF34:
 3659 0019 73657474 		.ascii	"setting\000"
 3659      696E6700 
 3660              	.LASF2:
 3661 0021 73686F72 		.ascii	"short int\000"
 3661      7420696E 
 3661      7400
 3662              	.LASF31:
 3663 002b 6D65616E 		.ascii	"meaning\000"
 3663      696E6700 
 3664              	.LASF62:
 3665 0033 746F6B5F 		.ascii	"tok_count\000"
 3665      636F756E 
 3665      7400
 3666              	.LASF50:
 3667 003d 636D645F 		.ascii	"cmd_read\000"
 3667      72656164 
ARM GAS  C:\Users\essele\AppData\Local\Temp\cci7Wywd.s 			page 76


 3667      00
 3668              	.LASF19:
 3669 0046 73697A65 		.ascii	"sizetype\000"
 3669      74797065 
 3669      00
 3670              	.LASF51:
 3671 004f 756E7469 		.ascii	"until\000"
 3671      6C00
 3672              	.LASF71:
 3673 0055 5C5C4D61 		.ascii	"\\\\Mac\\Home\\Documents\\dev\\yaugi\\GPIB USB Adap"
 3673      635C486F 
 3673      6D655C44 
 3673      6F63756D 
 3673      656E7473 
 3674 0081 7465725C 		.ascii	"ter\\GPIB USB 1.cydsn\000"
 3674      47504942 
 3674      20555342 
 3674      20312E63 
 3674      7964736E 
 3675              	.LASF60:
 3676 0096 68656C70 		.ascii	"helper_spoll\000"
 3676      65725F73 
 3676      706F6C6C 
 3676      00
 3677              	.LASF4:
 3678 00a3 5F5F7569 		.ascii	"__uint16_t\000"
 3678      6E743136 
 3678      5F7400
 3679              	.LASF30:
 3680 00ae 76616C75 		.ascii	"value\000"
 3680      6500
 3681              	.LASF35:
 3682 00b4 68656C70 		.ascii	"help\000"
 3682      00
 3683              	.LASF12:
 3684 00b9 75696E74 		.ascii	"uint8_t\000"
 3684      385F7400 
 3685              	.LASF41:
 3686 00c1 746F5F69 		.ascii	"to_int\000"
 3686      6E7400
 3687              	.LASF63:
 3688 00c8 636F6D6D 		.ascii	"commands\000"
 3688      616E6473 
 3688      00
 3689              	.LASF23:
 3690 00d1 6175746F 		.ascii	"autoread\000"
 3690      72656164 
 3690      00
 3691              	.LASF37:
 3692 00da 6D65616E 		.ascii	"meanings\000"
 3692      696E6773 
 3692      00
 3693              	.LASF28:
 3694 00e3 73657474 		.ascii	"settings\000"
 3694      696E6773 
 3694      00
 3695              	.LASF33:
ARM GAS  C:\Users\essele\AppData\Local\Temp\cci7Wywd.s 			page 77


 3696 00ec 66756E63 		.ascii	"func\000"
 3696      00
 3697              	.LASF9:
 3698 00f1 6C6F6E67 		.ascii	"long long int\000"
 3698      206C6F6E 
 3698      6720696E 
 3698      7400
 3699              	.LASF26:
 3700 00ff 72656164 		.ascii	"read_tmo_ms\000"
 3700      5F746D6F 
 3700      5F6D7300 
 3701              	.LASF38:
 3702 010b 706F7374 		.ascii	"post_func\000"
 3702      5F66756E 
 3702      6300
 3703              	.LASF6:
 3704 0115 6C6F6E67 		.ascii	"long int\000"
 3704      20696E74 
 3704      00
 3705              	.LASF66:
 3706 011e 656E6162 		.ascii	"enable_disable_means\000"
 3706      6C655F64 
 3706      69736162 
 3706      6C655F6D 
 3706      65616E73 
 3707              	.LASF22:
 3708 0133 61646472 		.ascii	"address\000"
 3708      65737300 
 3709              	.LASF29:
 3710 013b 6974656D 		.ascii	"item_meaning\000"
 3710      5F6D6561 
 3710      6E696E67 
 3710      00
 3711              	.LASF3:
 3712 0148 5F5F7569 		.ascii	"__uint8_t\000"
 3712      6E74385F 
 3712      7400
 3713              	.LASF39:
 3714 0152 746F6B65 		.ascii	"tokenise\000"
 3714      6E697365 
 3714      00
 3715              	.LASF61:
 3716 015b 746F6B73 		.ascii	"toks\000"
 3716      00
 3717              	.LASF1:
 3718 0160 756E7369 		.ascii	"unsigned char\000"
 3718      676E6564 
 3718      20636861 
 3718      7200
 3719              	.LASF69:
 3720 016e 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 3720      43313120 
 3720      352E342E 
 3720      31203230 
 3720      31363036 
 3721 01a1 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m0 -mthumb -g -O"
 3721      20726576 
ARM GAS  C:\Users\essele\AppData\Local\Temp\cci7Wywd.s 			page 78


 3721      6973696F 
 3721      6E203233 
 3721      37373135 
 3722 01d4 30202D66 		.ascii	"0 -ffunction-sections -ffat-lto-objects\000"
 3722      66756E63 
 3722      74696F6E 
 3722      2D736563 
 3722      74696F6E 
 3723              	.LASF32:
 3724 01fc 6E616D65 		.ascii	"name\000"
 3724      00
 3725              	.LASF59:
 3726 0201 68656C70 		.ascii	"helper_loc\000"
 3726      65725F6C 
 3726      6F6300
 3727              	.LASF18:
 3728 020c 6C6F6E67 		.ascii	"long double\000"
 3728      20646F75 
 3728      626C6500 
 3729              	.LASF24:
 3730 0218 656F745F 		.ascii	"eot_char\000"
 3730      63686172 
 3730      00
 3731              	.LASF49:
 3732 0221 636D645F 		.ascii	"cmd_help\000"
 3732      68656C70 
 3732      00
 3733              	.LASF42:
 3734 022a 61726763 		.ascii	"argc\000"
 3734      00
 3735              	.LASF0:
 3736 022f 7369676E 		.ascii	"signed char\000"
 3736      65642063 
 3736      68617200 
 3737              	.LASF10:
 3738 023b 6C6F6E67 		.ascii	"long long unsigned int\000"
 3738      206C6F6E 
 3738      6720756E 
 3738      7369676E 
 3738      65642069 
 3739              	.LASF14:
 3740 0252 75696E74 		.ascii	"uint32_t\000"
 3740      33325F74 
 3740      00
 3741              	.LASF11:
 3742 025b 756E7369 		.ascii	"unsigned int\000"
 3742      676E6564 
 3742      20696E74 
 3742      00
 3743              	.LASF13:
 3744 0268 75696E74 		.ascii	"uint16_t\000"
 3744      31365F74 
 3744      00
 3745              	.LASF45:
 3746 0271 61726776 		.ascii	"argv\000"
 3746      00
 3747              	.LASF55:
ARM GAS  C:\Users\essele\AppData\Local\Temp\cci7Wywd.s 			page 79


 3748 0276 68656C70 		.ascii	"helper_version\000"
 3748      65725F76 
 3748      65727369 
 3748      6F6E00
 3749              	.LASF5:
 3750 0285 73686F72 		.ascii	"short unsigned int\000"
 3750      7420756E 
 3750      7369676E 
 3750      65642069 
 3750      6E7400
 3751              	.LASF25:
 3752 0298 656F745F 		.ascii	"eot_enable\000"
 3752      656E6162 
 3752      6C6500
 3753              	.LASF67:
 3754 02a3 656F735F 		.ascii	"eos_means\000"
 3754      6D65616E 
 3754      7300
 3755              	.LASF17:
 3756 02ad 63686172 		.ascii	"char\000"
 3756      00
 3757              	.LASF43:
 3758 02b2 636D645F 		.ascii	"cmd_process\000"
 3758      70726F63 
 3758      65737300 
 3759              	.LASF48:
 3760 02be 636D645F 		.ascii	"cmd_noargs\000"
 3760      6E6F6172 
 3760      677300
 3761              	.LASF58:
 3762 02c9 68656C70 		.ascii	"helper_llo\000"
 3762      65725F6C 
 3762      6C6F00
 3763              	.LASF53:
 3764 02d4 636D645F 		.ascii	"cmd_config\000"
 3764      636F6E66 
 3764      696700
 3765              	.LASF40:
 3766 02df 69735F69 		.ascii	"is_int\000"
 3766      6E7400
 3767              	.LASF15:
 3768 02e6 666C6F61 		.ascii	"float\000"
 3768      7400
 3769              	.LASF52:
 3770 02ec 656E6465 		.ascii	"ended\000"
 3770      6400
 3771              	.LASF44:
 3772 02f2 636D645F 		.ascii	"cmd_usage\000"
 3772      75736167 
 3772      6500
 3773              	.LASF56:
 3774 02fc 68656C70 		.ascii	"helper_clr\000"
 3774      65725F63 
 3774      6C7200
 3775              	.LASF8:
 3776 0307 6C6F6E67 		.ascii	"long unsigned int\000"
 3776      20756E73 
ARM GAS  C:\Users\essele\AppData\Local\Temp\cci7Wywd.s 			page 80


 3776      69676E65 
 3776      6420696E 
 3776      7400
 3777              	.LASF16:
 3778 0319 646F7562 		.ascii	"double\000"
 3778      6C6500
 3779              	.LASF27:
 3780 0320 696E7465 		.ascii	"interact\000"
 3780      72616374 
 3780      00
 3781              	.LASF7:
 3782 0329 5F5F7569 		.ascii	"__uint32_t\000"
 3782      6E743332 
 3782      5F7400
 3783              	.LASF47:
 3784 0334 62797465 		.ascii	"byte\000"
 3784      00
 3785              	.LASF65:
 3786 0339 6175746F 		.ascii	"auto_means\000"
 3786      5F6D6561 
 3786      6E7300
 3787              	.LASF20:
 3788 0344 7369676E 		.ascii	"signature\000"
 3788      61747572 
 3788      6500
 3789              	.LASF70:
 3790 034e 636F6D6D 		.ascii	"command.c\000"
 3790      616E642E 
 3790      6300
 3791              	.LASF68:
 3792 0358 656E6162 		.ascii	"enable_disable_usage\000"
 3792      6C655F64 
 3792      69736162 
 3792      6C655F75 
 3792      73616765 
 3793              	.LASF54:
 3794 036d 68656C70 		.ascii	"helper_gpiball\000"
 3794      65725F67 
 3794      70696261 
 3794      6C6C00
 3795              	.LASF46:
 3796 037c 636D645F 		.ascii	"cmd_uint\000"
 3796      75696E74 
 3796      00
 3797              	.LASF64:
 3798 0385 6E6F5F75 		.ascii	"no_usage_args\000"
 3798      73616765 
 3798      5F617267 
 3798      7300
 3799              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
