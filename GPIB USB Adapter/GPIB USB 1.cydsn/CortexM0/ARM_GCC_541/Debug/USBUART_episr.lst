ARM GAS  C:\Users\essele\AppData\Local\Temp\cc4YPBQv.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m0
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 0
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"USBUART_episr.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.USBUART_EP_1_ISR,"ax",%progbits
  20              		.align	2
  21              		.global	USBUART_EP_1_ISR
  22              		.code	16
  23              		.thumb_func
  24              		.type	USBUART_EP_1_ISR, %function
  25              	USBUART_EP_1_ISR:
  26              	.LFB1:
  27              		.file 1 "Generated_Source\\PSoC4\\USBUART_episr.c"
   1:Generated_Source\PSoC4/USBUART_episr.c **** /***************************************************************************//**
   2:Generated_Source\PSoC4/USBUART_episr.c **** * \file USBUART_episr.c
   3:Generated_Source\PSoC4/USBUART_episr.c **** * \version 3.20
   4:Generated_Source\PSoC4/USBUART_episr.c **** *
   5:Generated_Source\PSoC4/USBUART_episr.c **** * \brief
   6:Generated_Source\PSoC4/USBUART_episr.c **** *  This file contains the Data endpoint Interrupt Service Routines.
   7:Generated_Source\PSoC4/USBUART_episr.c **** *
   8:Generated_Source\PSoC4/USBUART_episr.c **** ********************************************************************************
   9:Generated_Source\PSoC4/USBUART_episr.c **** * \copyright
  10:Generated_Source\PSoC4/USBUART_episr.c **** * Copyright 2008-2016, Cypress Semiconductor Corporation.  All rights reserved.
  11:Generated_Source\PSoC4/USBUART_episr.c **** * You may use this file only in accordance with the license, terms, conditions,
  12:Generated_Source\PSoC4/USBUART_episr.c **** * disclaimers, and limitations in the end user license agreement accompanying
  13:Generated_Source\PSoC4/USBUART_episr.c **** * the software package with which this file was provided.
  14:Generated_Source\PSoC4/USBUART_episr.c **** *******************************************************************************/
  15:Generated_Source\PSoC4/USBUART_episr.c **** 
  16:Generated_Source\PSoC4/USBUART_episr.c **** #include "USBUART_pvt.h"
  17:Generated_Source\PSoC4/USBUART_episr.c **** #include "USBUART_cydmac.h"
  18:Generated_Source\PSoC4/USBUART_episr.c **** #include "cyapicallbacks.h"
  19:Generated_Source\PSoC4/USBUART_episr.c **** 
  20:Generated_Source\PSoC4/USBUART_episr.c **** 
  21:Generated_Source\PSoC4/USBUART_episr.c **** /***************************************
  22:Generated_Source\PSoC4/USBUART_episr.c **** * Custom Declarations
  23:Generated_Source\PSoC4/USBUART_episr.c **** ***************************************/
  24:Generated_Source\PSoC4/USBUART_episr.c **** /* `#START CUSTOM_DECLARATIONS` Place your declaration here */
  25:Generated_Source\PSoC4/USBUART_episr.c **** 
  26:Generated_Source\PSoC4/USBUART_episr.c **** /* `#END` */
  27:Generated_Source\PSoC4/USBUART_episr.c **** 
  28:Generated_Source\PSoC4/USBUART_episr.c **** 
  29:Generated_Source\PSoC4/USBUART_episr.c **** #if (USBUART_EP1_ISR_ACTIVE)
  30:Generated_Source\PSoC4/USBUART_episr.c ****     /******************************************************************************
ARM GAS  C:\Users\essele\AppData\Local\Temp\cc4YPBQv.s 			page 2


  31:Generated_Source\PSoC4/USBUART_episr.c ****     * Function Name: USBUART_EP_1_ISR
  32:Generated_Source\PSoC4/USBUART_episr.c ****     ***************************************************************************//**
  33:Generated_Source\PSoC4/USBUART_episr.c ****     *
  34:Generated_Source\PSoC4/USBUART_episr.c ****     *  Endpoint 1 Interrupt Service Routine
  35:Generated_Source\PSoC4/USBUART_episr.c ****     *
  36:Generated_Source\PSoC4/USBUART_episr.c ****     ******************************************************************************/
  37:Generated_Source\PSoC4/USBUART_episr.c ****     CY_ISR(USBUART_EP_1_ISR)
  38:Generated_Source\PSoC4/USBUART_episr.c ****     {
  28              		.loc 1 38 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32              		@ link register save eliminated.
  39:Generated_Source\PSoC4/USBUART_episr.c **** 
  40:Generated_Source\PSoC4/USBUART_episr.c ****     #ifdef USBUART_EP_1_ISR_ENTRY_CALLBACK
  41:Generated_Source\PSoC4/USBUART_episr.c ****         USBUART_EP_1_ISR_EntryCallback();
  42:Generated_Source\PSoC4/USBUART_episr.c ****     #endif /* (USBUART_EP_1_ISR_ENTRY_CALLBACK) */
  43:Generated_Source\PSoC4/USBUART_episr.c **** 
  44:Generated_Source\PSoC4/USBUART_episr.c ****         /* `#START EP1_USER_CODE` Place your code here */
  45:Generated_Source\PSoC4/USBUART_episr.c **** 
  46:Generated_Source\PSoC4/USBUART_episr.c ****         /* `#END` */
  47:Generated_Source\PSoC4/USBUART_episr.c **** 
  48:Generated_Source\PSoC4/USBUART_episr.c ****     #if (CY_PSOC3 && defined(USBUART_ENABLE_MIDI_STREAMING) && \
  49:Generated_Source\PSoC4/USBUART_episr.c ****         !defined(USBUART_MAIN_SERVICE_MIDI_OUT) && USBUART_ISR_SERVICE_MIDI_OUT)
  50:Generated_Source\PSoC4/USBUART_episr.c ****         {
  51:Generated_Source\PSoC4/USBUART_episr.c ****             uint8 intEn = EA;
  52:Generated_Source\PSoC4/USBUART_episr.c ****             CyGlobalIntEnable;  /* Enable nested interrupts. */
  53:Generated_Source\PSoC4/USBUART_episr.c ****     #endif /* (CY_PSOC3 && USBUART_ISR_SERVICE_MIDI_OUT) */
  54:Generated_Source\PSoC4/USBUART_episr.c ****     
  55:Generated_Source\PSoC4/USBUART_episr.c ****         USBUART_ClearSieEpInterruptSource(USBUART_SIE_INT_EP1_INTR);
  33              		.loc 1 55 0
  34 0000 0122     		movs	r2, #1
  35 0002 0A4B     		ldr	r3, .L3
  36 0004 1A60     		str	r2, [r3]
  56:Generated_Source\PSoC4/USBUART_episr.c ****             
  57:Generated_Source\PSoC4/USBUART_episr.c ****         /* Notifies user that transfer IN or OUT transfer is completed.
  58:Generated_Source\PSoC4/USBUART_episr.c ****         * IN endpoint: endpoint buffer can be reloaded, Host is read data.
  59:Generated_Source\PSoC4/USBUART_episr.c ****         * OUT endpoint: data is ready to be read from endpoint buffer. 
  60:Generated_Source\PSoC4/USBUART_episr.c ****         */
  61:Generated_Source\PSoC4/USBUART_episr.c ****     #if (CY_PSOC4 && USBUART_EP_MANAGEMENT_DMA_AUTO)
  62:Generated_Source\PSoC4/USBUART_episr.c ****         if (0u != (USBUART_EP[USBUART_EP1].addr & USBUART_DIR_IN))
  63:Generated_Source\PSoC4/USBUART_episr.c ****     #endif /* (CY_PSOC4 && USBUART_EP_MANAGEMENT_DMA_AUTO) */
  64:Generated_Source\PSoC4/USBUART_episr.c ****         {
  65:Generated_Source\PSoC4/USBUART_episr.c ****             /* Read CR0 register to clear SIE lock. */
  66:Generated_Source\PSoC4/USBUART_episr.c ****             (void) USBUART_SIE_EP_BASE.sieEp[USBUART_EP1].epCr0;
  37              		.loc 1 66 0
  38 0006 0A4B     		ldr	r3, .L3+4
  39 0008 9B6C     		ldr	r3, [r3, #72]
  67:Generated_Source\PSoC4/USBUART_episr.c ****             
  68:Generated_Source\PSoC4/USBUART_episr.c ****             /* Toggle all endpoint types except ISOC. */
  69:Generated_Source\PSoC4/USBUART_episr.c ****             if (USBUART_GET_EP_TYPE(USBUART_EP1) != USBUART_EP_TYPE_ISOC)
  40              		.loc 1 69 0
  41 000a 0A4B     		ldr	r3, .L3+8
  42 000c 1A7B     		ldrb	r2, [r3, #12]
  43 000e 0323     		movs	r3, #3
  44 0010 1340     		ands	r3, r2
  45 0012 012B     		cmp	r3, #1
ARM GAS  C:\Users\essele\AppData\Local\Temp\cc4YPBQv.s 			page 3


  46 0014 06D0     		beq	.L2
  70:Generated_Source\PSoC4/USBUART_episr.c ****             {
  71:Generated_Source\PSoC4/USBUART_episr.c ****                 USBUART_EP[USBUART_EP1].epToggle ^= USBUART_EPX_CNT_DATA_TOGGLE;
  47              		.loc 1 71 0
  48 0016 074A     		ldr	r2, .L3+8
  49 0018 D17B     		ldrb	r1, [r2, #15]
  50 001a 8023     		movs	r3, #128
  51 001c 5B42     		rsbs	r3, r3, #0
  52 001e 4B40     		eors	r3, r1
  53 0020 DBB2     		uxtb	r3, r3
  54 0022 D373     		strb	r3, [r2, #15]
  55              	.L2:
  72:Generated_Source\PSoC4/USBUART_episr.c ****             }
  73:Generated_Source\PSoC4/USBUART_episr.c **** 
  74:Generated_Source\PSoC4/USBUART_episr.c ****             /* EP_MANAGEMENT_DMA_AUTO (Ticket ID# 214187): For OUT endpoint this event is used to n
  75:Generated_Source\PSoC4/USBUART_episr.c ****             * user that DMA has completed copying data from OUT endpoint which is not completely tr
  76:Generated_Source\PSoC4/USBUART_episr.c ****             * Because last chunk of data is being copied.
  77:Generated_Source\PSoC4/USBUART_episr.c ****             * For CY_PSOC 3/5LP: it is acceptable as DMA is really fast.
  78:Generated_Source\PSoC4/USBUART_episr.c ****             * For CY_PSOC4: this event is set in Arbiter interrupt (source is DMA_TERMIN).
  79:Generated_Source\PSoC4/USBUART_episr.c ****             */
  80:Generated_Source\PSoC4/USBUART_episr.c ****             USBUART_EP[USBUART_EP1].apiEpState = USBUART_EVENT_PENDING;
  56              		.loc 1 80 0
  57 0024 0122     		movs	r2, #1
  58 0026 034B     		ldr	r3, .L3+8
  59 0028 5A73     		strb	r2, [r3, #13]
  81:Generated_Source\PSoC4/USBUART_episr.c ****         }
  82:Generated_Source\PSoC4/USBUART_episr.c **** 
  83:Generated_Source\PSoC4/USBUART_episr.c ****     #if (!(CY_PSOC4 && USBUART_EP_MANAGEMENT_DMA_AUTO))
  84:Generated_Source\PSoC4/USBUART_episr.c ****         #if (defined(USBUART_ENABLE_MIDI_STREAMING) && \
  85:Generated_Source\PSoC4/USBUART_episr.c ****             !defined(USBUART_MAIN_SERVICE_MIDI_OUT) && USBUART_ISR_SERVICE_MIDI_OUT)
  86:Generated_Source\PSoC4/USBUART_episr.c ****             if (USBUART_midi_out_ep == USBUART_EP1)
  87:Generated_Source\PSoC4/USBUART_episr.c ****             {
  88:Generated_Source\PSoC4/USBUART_episr.c ****                 USBUART_MIDI_OUT_Service();
  89:Generated_Source\PSoC4/USBUART_episr.c ****             }
  90:Generated_Source\PSoC4/USBUART_episr.c ****         #endif /* (USBUART_ISR_SERVICE_MIDI_OUT) */
  91:Generated_Source\PSoC4/USBUART_episr.c ****     #endif /* (!(CY_PSOC4 && USBUART_EP_MANAGEMENT_DMA_AUTO)) */
  92:Generated_Source\PSoC4/USBUART_episr.c ****     
  93:Generated_Source\PSoC4/USBUART_episr.c ****         /* `#START EP1_END_USER_CODE` Place your code here */
  94:Generated_Source\PSoC4/USBUART_episr.c **** 
  95:Generated_Source\PSoC4/USBUART_episr.c ****         /* `#END` */
  96:Generated_Source\PSoC4/USBUART_episr.c **** 
  97:Generated_Source\PSoC4/USBUART_episr.c ****     #ifdef USBUART_EP_1_ISR_EXIT_CALLBACK
  98:Generated_Source\PSoC4/USBUART_episr.c ****         USBUART_EP_1_ISR_ExitCallback();
  99:Generated_Source\PSoC4/USBUART_episr.c ****     #endif /* (USBUART_EP_1_ISR_EXIT_CALLBACK) */
 100:Generated_Source\PSoC4/USBUART_episr.c **** 
 101:Generated_Source\PSoC4/USBUART_episr.c ****     #if (CY_PSOC3 && defined(USBUART_ENABLE_MIDI_STREAMING) && \
 102:Generated_Source\PSoC4/USBUART_episr.c ****         !defined(USBUART_MAIN_SERVICE_MIDI_OUT) && USBUART_ISR_SERVICE_MIDI_OUT)
 103:Generated_Source\PSoC4/USBUART_episr.c ****         
 104:Generated_Source\PSoC4/USBUART_episr.c ****             EA = intEn; /* Restore nested interrupt configuration. */
 105:Generated_Source\PSoC4/USBUART_episr.c ****         }
 106:Generated_Source\PSoC4/USBUART_episr.c ****     #endif /* (CY_PSOC3 && USBUART_ISR_SERVICE_MIDI_OUT) */
 107:Generated_Source\PSoC4/USBUART_episr.c ****     }
  60              		.loc 1 107 0
  61              		@ sp needed
  62 002a 7047     		bx	lr
  63              	.L4:
  64              		.align	2
ARM GAS  C:\Users\essele\AppData\Local\Temp\cc4YPBQv.s 			page 4


  65              	.L3:
  66 002c 2C002C40 		.word	1076625452
  67 0030 F0FF2B40 		.word	1076625392
  68 0034 00000000 		.word	USBUART_EP
  69              		.cfi_endproc
  70              	.LFE1:
  71              		.size	USBUART_EP_1_ISR, .-USBUART_EP_1_ISR
  72              		.section	.text.USBUART_EP_2_ISR,"ax",%progbits
  73              		.align	2
  74              		.global	USBUART_EP_2_ISR
  75              		.code	16
  76              		.thumb_func
  77              		.type	USBUART_EP_2_ISR, %function
  78              	USBUART_EP_2_ISR:
  79              	.LFB2:
 108:Generated_Source\PSoC4/USBUART_episr.c **** 
 109:Generated_Source\PSoC4/USBUART_episr.c **** #endif /* (USBUART_EP1_ISR_ACTIVE) */
 110:Generated_Source\PSoC4/USBUART_episr.c **** 
 111:Generated_Source\PSoC4/USBUART_episr.c **** 
 112:Generated_Source\PSoC4/USBUART_episr.c **** #if (USBUART_EP2_ISR_ACTIVE)
 113:Generated_Source\PSoC4/USBUART_episr.c ****     /*******************************************************************************
 114:Generated_Source\PSoC4/USBUART_episr.c ****     * Function Name: USBUART_EP_2_ISR
 115:Generated_Source\PSoC4/USBUART_episr.c ****     ****************************************************************************//**
 116:Generated_Source\PSoC4/USBUART_episr.c ****     *
 117:Generated_Source\PSoC4/USBUART_episr.c ****     *  Endpoint 2 Interrupt Service Routine.
 118:Generated_Source\PSoC4/USBUART_episr.c ****     *
 119:Generated_Source\PSoC4/USBUART_episr.c ****     *******************************************************************************/
 120:Generated_Source\PSoC4/USBUART_episr.c ****     CY_ISR(USBUART_EP_2_ISR)
 121:Generated_Source\PSoC4/USBUART_episr.c ****     {
  80              		.loc 1 121 0
  81              		.cfi_startproc
  82              		@ args = 0, pretend = 0, frame = 0
  83              		@ frame_needed = 0, uses_anonymous_args = 0
  84              		@ link register save eliminated.
 122:Generated_Source\PSoC4/USBUART_episr.c ****     #ifdef USBUART_EP_2_ISR_ENTRY_CALLBACK
 123:Generated_Source\PSoC4/USBUART_episr.c ****         USBUART_EP_2_ISR_EntryCallback();
 124:Generated_Source\PSoC4/USBUART_episr.c ****     #endif /* (USBUART_EP_2_ISR_ENTRY_CALLBACK) */
 125:Generated_Source\PSoC4/USBUART_episr.c **** 
 126:Generated_Source\PSoC4/USBUART_episr.c ****         /* `#START EP2_USER_CODE` Place your code here */
 127:Generated_Source\PSoC4/USBUART_episr.c **** 
 128:Generated_Source\PSoC4/USBUART_episr.c ****         /* `#END` */
 129:Generated_Source\PSoC4/USBUART_episr.c **** 
 130:Generated_Source\PSoC4/USBUART_episr.c ****     #if (CY_PSOC3 && defined(USBUART_ENABLE_MIDI_STREAMING) && \
 131:Generated_Source\PSoC4/USBUART_episr.c ****         !defined(USBUART_MAIN_SERVICE_MIDI_OUT) && USBUART_ISR_SERVICE_MIDI_OUT)
 132:Generated_Source\PSoC4/USBUART_episr.c ****         {
 133:Generated_Source\PSoC4/USBUART_episr.c ****             uint8 intEn = EA;
 134:Generated_Source\PSoC4/USBUART_episr.c ****             CyGlobalIntEnable;  /* Enable nested interrupts. */
 135:Generated_Source\PSoC4/USBUART_episr.c ****     #endif /* (CY_PSOC3 && USBUART_ISR_SERVICE_MIDI_OUT) */
 136:Generated_Source\PSoC4/USBUART_episr.c **** 
 137:Generated_Source\PSoC4/USBUART_episr.c ****         USBUART_ClearSieEpInterruptSource(USBUART_SIE_INT_EP2_INTR);
  85              		.loc 1 137 0
  86 0000 0222     		movs	r2, #2
  87 0002 0B4B     		ldr	r3, .L7
  88 0004 1A60     		str	r2, [r3]
 138:Generated_Source\PSoC4/USBUART_episr.c **** 
 139:Generated_Source\PSoC4/USBUART_episr.c ****         /* Notifies user that transfer IN or OUT transfer is completed.
 140:Generated_Source\PSoC4/USBUART_episr.c ****         * IN endpoint: endpoint buffer can be reloaded, Host is read data.
ARM GAS  C:\Users\essele\AppData\Local\Temp\cc4YPBQv.s 			page 5


 141:Generated_Source\PSoC4/USBUART_episr.c ****         * OUT endpoint: data is ready to be read from endpoint buffer. 
 142:Generated_Source\PSoC4/USBUART_episr.c ****         */
 143:Generated_Source\PSoC4/USBUART_episr.c ****     #if (CY_PSOC4 && USBUART_EP_MANAGEMENT_DMA_AUTO)
 144:Generated_Source\PSoC4/USBUART_episr.c ****         if (0u != (USBUART_EP[USBUART_EP2].addr & USBUART_DIR_IN))
 145:Generated_Source\PSoC4/USBUART_episr.c ****     #endif /* (CY_PSOC4 && USBUART_EP_MANAGEMENT_DMA_AUTO) */
 146:Generated_Source\PSoC4/USBUART_episr.c ****         {            
 147:Generated_Source\PSoC4/USBUART_episr.c ****             /* Read CR0 register to clear SIE lock. */
 148:Generated_Source\PSoC4/USBUART_episr.c ****             (void) USBUART_SIE_EP_BASE.sieEp[USBUART_EP2].epCr0;
  89              		.loc 1 148 0
  90 0006 8823     		movs	r3, #136
  91 0008 0A4A     		ldr	r2, .L7+4
  92 000a D358     		ldr	r3, [r2, r3]
 149:Generated_Source\PSoC4/USBUART_episr.c ****             
 150:Generated_Source\PSoC4/USBUART_episr.c ****             /* Toggle all endpoint types except ISOC. */
 151:Generated_Source\PSoC4/USBUART_episr.c ****             if (USBUART_GET_EP_TYPE(USBUART_EP2) != USBUART_EP_TYPE_ISOC)
  93              		.loc 1 151 0
  94 000c 0A4B     		ldr	r3, .L7+8
  95 000e 1A7E     		ldrb	r2, [r3, #24]
  96 0010 0323     		movs	r3, #3
  97 0012 1340     		ands	r3, r2
  98 0014 012B     		cmp	r3, #1
  99 0016 06D0     		beq	.L6
 152:Generated_Source\PSoC4/USBUART_episr.c ****             {
 153:Generated_Source\PSoC4/USBUART_episr.c ****                 USBUART_EP[USBUART_EP2].epToggle ^= USBUART_EPX_CNT_DATA_TOGGLE;
 100              		.loc 1 153 0
 101 0018 074A     		ldr	r2, .L7+8
 102 001a D17E     		ldrb	r1, [r2, #27]
 103 001c 8023     		movs	r3, #128
 104 001e 5B42     		rsbs	r3, r3, #0
 105 0020 4B40     		eors	r3, r1
 106 0022 DBB2     		uxtb	r3, r3
 107 0024 D376     		strb	r3, [r2, #27]
 108              	.L6:
 154:Generated_Source\PSoC4/USBUART_episr.c ****             }
 155:Generated_Source\PSoC4/USBUART_episr.c **** 
 156:Generated_Source\PSoC4/USBUART_episr.c ****             /* EP_MANAGEMENT_DMA_AUTO (Ticket ID# 214187): For OUT endpoint this event is used to n
 157:Generated_Source\PSoC4/USBUART_episr.c ****             * user that DMA has completed copying data from OUT endpoint which is not completely tr
 158:Generated_Source\PSoC4/USBUART_episr.c ****             * Because last chunk of data is being copied.
 159:Generated_Source\PSoC4/USBUART_episr.c ****             * For CY_PSOC 3/5LP: it is acceptable as DMA is really fast.
 160:Generated_Source\PSoC4/USBUART_episr.c ****             * For CY_PSOC4: this event is set in Arbiter interrupt (source is DMA_TERMIN).
 161:Generated_Source\PSoC4/USBUART_episr.c ****             */
 162:Generated_Source\PSoC4/USBUART_episr.c ****             USBUART_EP[USBUART_EP2].apiEpState = USBUART_EVENT_PENDING;
 109              		.loc 1 162 0
 110 0026 0122     		movs	r2, #1
 111 0028 034B     		ldr	r3, .L7+8
 112 002a 5A76     		strb	r2, [r3, #25]
 163:Generated_Source\PSoC4/USBUART_episr.c ****         }
 164:Generated_Source\PSoC4/USBUART_episr.c **** 
 165:Generated_Source\PSoC4/USBUART_episr.c ****     #if (!(CY_PSOC4 && USBUART_EP_MANAGEMENT_DMA_AUTO))
 166:Generated_Source\PSoC4/USBUART_episr.c ****         #if (defined(USBUART_ENABLE_MIDI_STREAMING) && \
 167:Generated_Source\PSoC4/USBUART_episr.c ****             !defined(USBUART_MAIN_SERVICE_MIDI_OUT) && USBUART_ISR_SERVICE_MIDI_OUT)
 168:Generated_Source\PSoC4/USBUART_episr.c ****             if (USBUART_midi_out_ep == USBUART_EP2)
 169:Generated_Source\PSoC4/USBUART_episr.c ****             {
 170:Generated_Source\PSoC4/USBUART_episr.c ****                 USBUART_MIDI_OUT_Service();
 171:Generated_Source\PSoC4/USBUART_episr.c ****             }
 172:Generated_Source\PSoC4/USBUART_episr.c ****         #endif /* (USBUART_ISR_SERVICE_MIDI_OUT) */
 173:Generated_Source\PSoC4/USBUART_episr.c ****     #endif /* (!(CY_PSOC4 && USBUART_EP_MANAGEMENT_DMA_AUTO)) */        
ARM GAS  C:\Users\essele\AppData\Local\Temp\cc4YPBQv.s 			page 6


 174:Generated_Source\PSoC4/USBUART_episr.c ****     
 175:Generated_Source\PSoC4/USBUART_episr.c ****         /* `#START EP2_END_USER_CODE` Place your code here */
 176:Generated_Source\PSoC4/USBUART_episr.c **** 
 177:Generated_Source\PSoC4/USBUART_episr.c ****         /* `#END` */
 178:Generated_Source\PSoC4/USBUART_episr.c **** 
 179:Generated_Source\PSoC4/USBUART_episr.c ****     #ifdef USBUART_EP_2_ISR_EXIT_CALLBACK
 180:Generated_Source\PSoC4/USBUART_episr.c ****         USBUART_EP_2_ISR_ExitCallback();
 181:Generated_Source\PSoC4/USBUART_episr.c ****     #endif /* (USBUART_EP_2_ISR_EXIT_CALLBACK) */
 182:Generated_Source\PSoC4/USBUART_episr.c **** 
 183:Generated_Source\PSoC4/USBUART_episr.c ****     #if (CY_PSOC3 && defined(USBUART_ENABLE_MIDI_STREAMING) && \
 184:Generated_Source\PSoC4/USBUART_episr.c ****         !defined(USBUART_MAIN_SERVICE_MIDI_OUT) && USBUART_ISR_SERVICE_MIDI_OUT)
 185:Generated_Source\PSoC4/USBUART_episr.c ****         
 186:Generated_Source\PSoC4/USBUART_episr.c ****             EA = intEn; /* Restore nested interrupt configuration. */
 187:Generated_Source\PSoC4/USBUART_episr.c ****         }
 188:Generated_Source\PSoC4/USBUART_episr.c ****     #endif /* (CY_PSOC3 && USBUART_ISR_SERVICE_MIDI_OUT) */
 189:Generated_Source\PSoC4/USBUART_episr.c ****     }
 113              		.loc 1 189 0
 114              		@ sp needed
 115 002c 7047     		bx	lr
 116              	.L8:
 117 002e C046     		.align	2
 118              	.L7:
 119 0030 2C002C40 		.word	1076625452
 120 0034 F0FF2B40 		.word	1076625392
 121 0038 00000000 		.word	USBUART_EP
 122              		.cfi_endproc
 123              	.LFE2:
 124              		.size	USBUART_EP_2_ISR, .-USBUART_EP_2_ISR
 125              		.section	.text.USBUART_EP_3_ISR,"ax",%progbits
 126              		.align	2
 127              		.global	USBUART_EP_3_ISR
 128              		.code	16
 129              		.thumb_func
 130              		.type	USBUART_EP_3_ISR, %function
 131              	USBUART_EP_3_ISR:
 132              	.LFB3:
 190:Generated_Source\PSoC4/USBUART_episr.c **** #endif /* (USBUART_EP2_ISR_ACTIVE) */
 191:Generated_Source\PSoC4/USBUART_episr.c **** 
 192:Generated_Source\PSoC4/USBUART_episr.c **** 
 193:Generated_Source\PSoC4/USBUART_episr.c **** #if (USBUART_EP3_ISR_ACTIVE)
 194:Generated_Source\PSoC4/USBUART_episr.c ****     /*******************************************************************************
 195:Generated_Source\PSoC4/USBUART_episr.c ****     * Function Name: USBUART_EP_3_ISR
 196:Generated_Source\PSoC4/USBUART_episr.c ****     ****************************************************************************//**
 197:Generated_Source\PSoC4/USBUART_episr.c ****     *
 198:Generated_Source\PSoC4/USBUART_episr.c ****     *  Endpoint 3 Interrupt Service Routine.
 199:Generated_Source\PSoC4/USBUART_episr.c ****     *
 200:Generated_Source\PSoC4/USBUART_episr.c ****     *******************************************************************************/
 201:Generated_Source\PSoC4/USBUART_episr.c ****     CY_ISR(USBUART_EP_3_ISR)
 202:Generated_Source\PSoC4/USBUART_episr.c ****     {
 133              		.loc 1 202 0
 134              		.cfi_startproc
 135              		@ args = 0, pretend = 0, frame = 0
 136              		@ frame_needed = 0, uses_anonymous_args = 0
 137              		@ link register save eliminated.
 203:Generated_Source\PSoC4/USBUART_episr.c ****     #ifdef USBUART_EP_3_ISR_ENTRY_CALLBACK
 204:Generated_Source\PSoC4/USBUART_episr.c ****         USBUART_EP_3_ISR_EntryCallback();
 205:Generated_Source\PSoC4/USBUART_episr.c ****     #endif /* (USBUART_EP_3_ISR_ENTRY_CALLBACK) */
ARM GAS  C:\Users\essele\AppData\Local\Temp\cc4YPBQv.s 			page 7


 206:Generated_Source\PSoC4/USBUART_episr.c **** 
 207:Generated_Source\PSoC4/USBUART_episr.c ****         /* `#START EP3_USER_CODE` Place your code here */
 208:Generated_Source\PSoC4/USBUART_episr.c **** 
 209:Generated_Source\PSoC4/USBUART_episr.c ****         /* `#END` */
 210:Generated_Source\PSoC4/USBUART_episr.c **** 
 211:Generated_Source\PSoC4/USBUART_episr.c ****     #if (CY_PSOC3 && defined(USBUART_ENABLE_MIDI_STREAMING) && \
 212:Generated_Source\PSoC4/USBUART_episr.c ****         !defined(USBUART_MAIN_SERVICE_MIDI_OUT) && USBUART_ISR_SERVICE_MIDI_OUT)
 213:Generated_Source\PSoC4/USBUART_episr.c ****         {
 214:Generated_Source\PSoC4/USBUART_episr.c ****             uint8 intEn = EA;
 215:Generated_Source\PSoC4/USBUART_episr.c ****             CyGlobalIntEnable;  /* Enable nested interrupts. */
 216:Generated_Source\PSoC4/USBUART_episr.c ****     #endif /* (CY_PSOC3 && USBUART_ISR_SERVICE_MIDI_OUT) */
 217:Generated_Source\PSoC4/USBUART_episr.c **** 
 218:Generated_Source\PSoC4/USBUART_episr.c ****         USBUART_ClearSieEpInterruptSource(USBUART_SIE_INT_EP3_INTR);    
 138              		.loc 1 218 0
 139 0000 0422     		movs	r2, #4
 140 0002 0C4B     		ldr	r3, .L11
 141 0004 1A60     		str	r2, [r3]
 219:Generated_Source\PSoC4/USBUART_episr.c **** 
 220:Generated_Source\PSoC4/USBUART_episr.c ****         /* Notifies user that transfer IN or OUT transfer is completed.
 221:Generated_Source\PSoC4/USBUART_episr.c ****         * IN endpoint: endpoint buffer can be reloaded, Host is read data.
 222:Generated_Source\PSoC4/USBUART_episr.c ****         * OUT endpoint: data is ready to be read from endpoint buffer. 
 223:Generated_Source\PSoC4/USBUART_episr.c ****         */
 224:Generated_Source\PSoC4/USBUART_episr.c ****     #if (CY_PSOC4 && USBUART_EP_MANAGEMENT_DMA_AUTO)
 225:Generated_Source\PSoC4/USBUART_episr.c ****         if (0u != (USBUART_EP[USBUART_EP3].addr & USBUART_DIR_IN))
 226:Generated_Source\PSoC4/USBUART_episr.c ****     #endif /* (USBUART_EP_MANAGEMENT_DMA_AUTO) */
 227:Generated_Source\PSoC4/USBUART_episr.c ****         {            
 228:Generated_Source\PSoC4/USBUART_episr.c ****             /* Read CR0 register to clear SIE lock. */
 229:Generated_Source\PSoC4/USBUART_episr.c ****             (void) USBUART_SIE_EP_BASE.sieEp[USBUART_EP3].epCr0;
 142              		.loc 1 229 0
 143 0006 C823     		movs	r3, #200
 144 0008 0B4A     		ldr	r2, .L11+4
 145 000a D358     		ldr	r3, [r2, r3]
 230:Generated_Source\PSoC4/USBUART_episr.c **** 
 231:Generated_Source\PSoC4/USBUART_episr.c ****             /* Toggle all endpoint types except ISOC. */
 232:Generated_Source\PSoC4/USBUART_episr.c ****             if (USBUART_GET_EP_TYPE(USBUART_EP3) != USBUART_EP_TYPE_ISOC)
 146              		.loc 1 232 0
 147 000c 2423     		movs	r3, #36
 148 000e 0B4A     		ldr	r2, .L11+8
 149 0010 D25C     		ldrb	r2, [r2, r3]
 150 0012 213B     		subs	r3, r3, #33
 151 0014 1340     		ands	r3, r2
 152 0016 012B     		cmp	r3, #1
 153 0018 07D0     		beq	.L10
 233:Generated_Source\PSoC4/USBUART_episr.c ****             {
 234:Generated_Source\PSoC4/USBUART_episr.c ****                 USBUART_EP[USBUART_EP3].epToggle ^= USBUART_EPX_CNT_DATA_TOGGLE;
 154              		.loc 1 234 0
 155 001a 0849     		ldr	r1, .L11+8
 156 001c 2722     		movs	r2, #39
 157 001e 885C     		ldrb	r0, [r1, r2]
 158 0020 8023     		movs	r3, #128
 159 0022 5B42     		rsbs	r3, r3, #0
 160 0024 4340     		eors	r3, r0
 161 0026 DBB2     		uxtb	r3, r3
 162 0028 8B54     		strb	r3, [r1, r2]
 163              	.L10:
 235:Generated_Source\PSoC4/USBUART_episr.c ****             }
 236:Generated_Source\PSoC4/USBUART_episr.c **** 
ARM GAS  C:\Users\essele\AppData\Local\Temp\cc4YPBQv.s 			page 8


 237:Generated_Source\PSoC4/USBUART_episr.c ****             /* EP_MANAGEMENT_DMA_AUTO (Ticket ID# 214187): For OUT endpoint this event is used to n
 238:Generated_Source\PSoC4/USBUART_episr.c ****             * user that DMA has completed copying data from OUT endpoint which is not completely tr
 239:Generated_Source\PSoC4/USBUART_episr.c ****             * Because last chunk of data is being copied.
 240:Generated_Source\PSoC4/USBUART_episr.c ****             * For CY_PSOC 3/5LP: it is acceptable as DMA is really fast.
 241:Generated_Source\PSoC4/USBUART_episr.c ****             * For CY_PSOC4: this event is set in Arbiter interrupt (source is DMA_TERMIN).
 242:Generated_Source\PSoC4/USBUART_episr.c ****             */
 243:Generated_Source\PSoC4/USBUART_episr.c ****             USBUART_EP[USBUART_EP3].apiEpState = USBUART_EVENT_PENDING;
 164              		.loc 1 243 0
 165 002a 0121     		movs	r1, #1
 166 002c 2523     		movs	r3, #37
 167 002e 034A     		ldr	r2, .L11+8
 168 0030 D154     		strb	r1, [r2, r3]
 244:Generated_Source\PSoC4/USBUART_episr.c ****         }
 245:Generated_Source\PSoC4/USBUART_episr.c **** 
 246:Generated_Source\PSoC4/USBUART_episr.c ****     #if (!(CY_PSOC4 && USBUART_EP_MANAGEMENT_DMA_AUTO))
 247:Generated_Source\PSoC4/USBUART_episr.c ****         #if (defined(USBUART_ENABLE_MIDI_STREAMING) && \
 248:Generated_Source\PSoC4/USBUART_episr.c ****             !defined(USBUART_MAIN_SERVICE_MIDI_OUT) && USBUART_ISR_SERVICE_MIDI_OUT)
 249:Generated_Source\PSoC4/USBUART_episr.c ****             if (USBUART_midi_out_ep == USBUART_EP3)
 250:Generated_Source\PSoC4/USBUART_episr.c ****             {
 251:Generated_Source\PSoC4/USBUART_episr.c ****                 USBUART_MIDI_OUT_Service();
 252:Generated_Source\PSoC4/USBUART_episr.c ****             }
 253:Generated_Source\PSoC4/USBUART_episr.c ****         #endif /* (USBUART_ISR_SERVICE_MIDI_OUT) */
 254:Generated_Source\PSoC4/USBUART_episr.c ****     #endif /* (!(CY_PSOC4 && USBUART_EP_MANAGEMENT_DMA_AUTO)) */        
 255:Generated_Source\PSoC4/USBUART_episr.c **** 
 256:Generated_Source\PSoC4/USBUART_episr.c ****         /* `#START EP3_END_USER_CODE` Place your code here */
 257:Generated_Source\PSoC4/USBUART_episr.c **** 
 258:Generated_Source\PSoC4/USBUART_episr.c ****         /* `#END` */
 259:Generated_Source\PSoC4/USBUART_episr.c **** 
 260:Generated_Source\PSoC4/USBUART_episr.c ****     #ifdef USBUART_EP_3_ISR_EXIT_CALLBACK
 261:Generated_Source\PSoC4/USBUART_episr.c ****         USBUART_EP_3_ISR_ExitCallback();
 262:Generated_Source\PSoC4/USBUART_episr.c ****     #endif /* (USBUART_EP_3_ISR_EXIT_CALLBACK) */
 263:Generated_Source\PSoC4/USBUART_episr.c **** 
 264:Generated_Source\PSoC4/USBUART_episr.c ****     #if (CY_PSOC3 && defined(USBUART_ENABLE_MIDI_STREAMING) && \
 265:Generated_Source\PSoC4/USBUART_episr.c ****         !defined(USBUART_MAIN_SERVICE_MIDI_OUT) && USBUART_ISR_SERVICE_MIDI_OUT)
 266:Generated_Source\PSoC4/USBUART_episr.c ****         
 267:Generated_Source\PSoC4/USBUART_episr.c ****             EA = intEn; /* Restore nested interrupt configuration. */
 268:Generated_Source\PSoC4/USBUART_episr.c ****         }
 269:Generated_Source\PSoC4/USBUART_episr.c ****     #endif /* (CY_PSOC3 && USBUART_ISR_SERVICE_MIDI_OUT) */
 270:Generated_Source\PSoC4/USBUART_episr.c ****     }
 169              		.loc 1 270 0
 170              		@ sp needed
 171 0032 7047     		bx	lr
 172              	.L12:
 173              		.align	2
 174              	.L11:
 175 0034 2C002C40 		.word	1076625452
 176 0038 F0FF2B40 		.word	1076625392
 177 003c 00000000 		.word	USBUART_EP
 178              		.cfi_endproc
 179              	.LFE3:
 180              		.size	USBUART_EP_3_ISR, .-USBUART_EP_3_ISR
 181              		.section	.text.USBUART_SOF_ISR,"ax",%progbits
 182              		.align	2
 183              		.global	USBUART_SOF_ISR
 184              		.code	16
 185              		.thumb_func
 186              		.type	USBUART_SOF_ISR, %function
ARM GAS  C:\Users\essele\AppData\Local\Temp\cc4YPBQv.s 			page 9


 187              	USBUART_SOF_ISR:
 188              	.LFB4:
 271:Generated_Source\PSoC4/USBUART_episr.c **** #endif /* (USBUART_EP3_ISR_ACTIVE) */
 272:Generated_Source\PSoC4/USBUART_episr.c **** 
 273:Generated_Source\PSoC4/USBUART_episr.c **** 
 274:Generated_Source\PSoC4/USBUART_episr.c **** #if (USBUART_EP4_ISR_ACTIVE)
 275:Generated_Source\PSoC4/USBUART_episr.c ****     /*******************************************************************************
 276:Generated_Source\PSoC4/USBUART_episr.c ****     * Function Name: USBUART_EP_4_ISR
 277:Generated_Source\PSoC4/USBUART_episr.c ****     ****************************************************************************//**
 278:Generated_Source\PSoC4/USBUART_episr.c ****     *
 279:Generated_Source\PSoC4/USBUART_episr.c ****     *  Endpoint 4 Interrupt Service Routine.
 280:Generated_Source\PSoC4/USBUART_episr.c ****     *
 281:Generated_Source\PSoC4/USBUART_episr.c ****     *******************************************************************************/
 282:Generated_Source\PSoC4/USBUART_episr.c ****     CY_ISR(USBUART_EP_4_ISR)
 283:Generated_Source\PSoC4/USBUART_episr.c ****     {
 284:Generated_Source\PSoC4/USBUART_episr.c ****     #ifdef USBUART_EP_4_ISR_ENTRY_CALLBACK
 285:Generated_Source\PSoC4/USBUART_episr.c ****         USBUART_EP_4_ISR_EntryCallback();
 286:Generated_Source\PSoC4/USBUART_episr.c ****     #endif /* (USBUART_EP_4_ISR_ENTRY_CALLBACK) */
 287:Generated_Source\PSoC4/USBUART_episr.c **** 
 288:Generated_Source\PSoC4/USBUART_episr.c ****         /* `#START EP4_USER_CODE` Place your code here */
 289:Generated_Source\PSoC4/USBUART_episr.c **** 
 290:Generated_Source\PSoC4/USBUART_episr.c ****         /* `#END` */
 291:Generated_Source\PSoC4/USBUART_episr.c **** 
 292:Generated_Source\PSoC4/USBUART_episr.c ****     #if (CY_PSOC3 && defined(USBUART_ENABLE_MIDI_STREAMING) && \
 293:Generated_Source\PSoC4/USBUART_episr.c ****         !defined(USBUART_MAIN_SERVICE_MIDI_OUT) && USBUART_ISR_SERVICE_MIDI_OUT)
 294:Generated_Source\PSoC4/USBUART_episr.c ****         {
 295:Generated_Source\PSoC4/USBUART_episr.c ****             uint8 intEn = EA;
 296:Generated_Source\PSoC4/USBUART_episr.c ****             CyGlobalIntEnable;  /* Enable nested interrupts. */
 297:Generated_Source\PSoC4/USBUART_episr.c ****     #endif /* (CY_PSOC3 && USBUART_ISR_SERVICE_MIDI_OUT) */
 298:Generated_Source\PSoC4/USBUART_episr.c **** 
 299:Generated_Source\PSoC4/USBUART_episr.c ****         USBUART_ClearSieEpInterruptSource(USBUART_SIE_INT_EP4_INTR);
 300:Generated_Source\PSoC4/USBUART_episr.c ****         
 301:Generated_Source\PSoC4/USBUART_episr.c ****         /* Notifies user that transfer IN or OUT transfer is completed.
 302:Generated_Source\PSoC4/USBUART_episr.c ****         * IN endpoint: endpoint buffer can be reloaded, Host is read data.
 303:Generated_Source\PSoC4/USBUART_episr.c ****         * OUT endpoint: data is ready to read from endpoint buffer. 
 304:Generated_Source\PSoC4/USBUART_episr.c ****         */
 305:Generated_Source\PSoC4/USBUART_episr.c ****     #if (CY_PSOC4 && USBUART_EP_MANAGEMENT_DMA_AUTO)
 306:Generated_Source\PSoC4/USBUART_episr.c ****         if (0u != (USBUART_EP[USBUART_EP4].addr & USBUART_DIR_IN))
 307:Generated_Source\PSoC4/USBUART_episr.c ****     #endif /* (USBUART_EP_MANAGEMENT_DMA_AUTO) */
 308:Generated_Source\PSoC4/USBUART_episr.c ****         {
 309:Generated_Source\PSoC4/USBUART_episr.c ****             /* Read CR0 register to clear SIE lock. */
 310:Generated_Source\PSoC4/USBUART_episr.c ****             (void) USBUART_SIE_EP_BASE.sieEp[USBUART_EP4].epCr0;
 311:Generated_Source\PSoC4/USBUART_episr.c **** 
 312:Generated_Source\PSoC4/USBUART_episr.c ****             /* Toggle all endpoint types except ISOC. */
 313:Generated_Source\PSoC4/USBUART_episr.c ****             if (USBUART_GET_EP_TYPE(USBUART_EP4) != USBUART_EP_TYPE_ISOC)
 314:Generated_Source\PSoC4/USBUART_episr.c ****             {
 315:Generated_Source\PSoC4/USBUART_episr.c ****                 USBUART_EP[USBUART_EP4].epToggle ^= USBUART_EPX_CNT_DATA_TOGGLE;
 316:Generated_Source\PSoC4/USBUART_episr.c ****             }
 317:Generated_Source\PSoC4/USBUART_episr.c **** 
 318:Generated_Source\PSoC4/USBUART_episr.c ****             /* EP_MANAGEMENT_DMA_AUTO (Ticket ID# 214187): For OUT endpoint this event is used to n
 319:Generated_Source\PSoC4/USBUART_episr.c ****             * user that DMA has completed copying data from OUT endpoint which is not completely tr
 320:Generated_Source\PSoC4/USBUART_episr.c ****             * Because last chunk of data is being copied.
 321:Generated_Source\PSoC4/USBUART_episr.c ****             * For CY_PSOC 3/5LP: it is acceptable as DMA is really fast.
 322:Generated_Source\PSoC4/USBUART_episr.c ****             * For CY_PSOC4: this event is set in Arbiter interrupt (source is DMA_TERMIN).
 323:Generated_Source\PSoC4/USBUART_episr.c ****             */
 324:Generated_Source\PSoC4/USBUART_episr.c ****             USBUART_EP[USBUART_EP4].apiEpState = USBUART_EVENT_PENDING;
 325:Generated_Source\PSoC4/USBUART_episr.c ****         }
ARM GAS  C:\Users\essele\AppData\Local\Temp\cc4YPBQv.s 			page 10


 326:Generated_Source\PSoC4/USBUART_episr.c **** 
 327:Generated_Source\PSoC4/USBUART_episr.c ****     #if (!(CY_PSOC4 && USBUART_EP_MANAGEMENT_DMA_AUTO))
 328:Generated_Source\PSoC4/USBUART_episr.c ****         #if (defined(USBUART_ENABLE_MIDI_STREAMING) && \
 329:Generated_Source\PSoC4/USBUART_episr.c ****             !defined(USBUART_MAIN_SERVICE_MIDI_OUT) && USBUART_ISR_SERVICE_MIDI_OUT)
 330:Generated_Source\PSoC4/USBUART_episr.c ****             if(USBUART_midi_out_ep == USBUART_EP4)
 331:Generated_Source\PSoC4/USBUART_episr.c ****             {
 332:Generated_Source\PSoC4/USBUART_episr.c ****                 USBUART_MIDI_OUT_Service();
 333:Generated_Source\PSoC4/USBUART_episr.c ****             }
 334:Generated_Source\PSoC4/USBUART_episr.c ****         #endif /* (USBUART_ISR_SERVICE_MIDI_OUT) */
 335:Generated_Source\PSoC4/USBUART_episr.c ****     #endif /* (!(CY_PSOC4 && USBUART_EP_MANAGEMENT_DMA_AUTO)) */        
 336:Generated_Source\PSoC4/USBUART_episr.c **** 
 337:Generated_Source\PSoC4/USBUART_episr.c ****         /* `#START EP4_END_USER_CODE` Place your code here */
 338:Generated_Source\PSoC4/USBUART_episr.c **** 
 339:Generated_Source\PSoC4/USBUART_episr.c ****         /* `#END` */
 340:Generated_Source\PSoC4/USBUART_episr.c **** 
 341:Generated_Source\PSoC4/USBUART_episr.c ****     #ifdef USBUART_EP_4_ISR_EXIT_CALLBACK
 342:Generated_Source\PSoC4/USBUART_episr.c ****         USBUART_EP_4_ISR_ExitCallback();
 343:Generated_Source\PSoC4/USBUART_episr.c ****     #endif /* (USBUART_EP_4_ISR_EXIT_CALLBACK) */
 344:Generated_Source\PSoC4/USBUART_episr.c **** 
 345:Generated_Source\PSoC4/USBUART_episr.c ****     #if (CY_PSOC3 && defined(USBUART_ENABLE_MIDI_STREAMING) && \
 346:Generated_Source\PSoC4/USBUART_episr.c ****         !defined(USBUART_MAIN_SERVICE_MIDI_OUT) && USBUART_ISR_SERVICE_MIDI_OUT)
 347:Generated_Source\PSoC4/USBUART_episr.c ****         
 348:Generated_Source\PSoC4/USBUART_episr.c ****             EA = intEn; /* Restore nested interrupt configuration. */
 349:Generated_Source\PSoC4/USBUART_episr.c ****         }
 350:Generated_Source\PSoC4/USBUART_episr.c ****     #endif /* (CY_PSOC3 && USBUART_ISR_SERVICE_MIDI_OUT) */
 351:Generated_Source\PSoC4/USBUART_episr.c ****     }
 352:Generated_Source\PSoC4/USBUART_episr.c **** #endif /* (USBUART_EP4_ISR_ACTIVE) */
 353:Generated_Source\PSoC4/USBUART_episr.c **** 
 354:Generated_Source\PSoC4/USBUART_episr.c **** 
 355:Generated_Source\PSoC4/USBUART_episr.c **** #if (USBUART_EP5_ISR_ACTIVE)
 356:Generated_Source\PSoC4/USBUART_episr.c ****     /*******************************************************************************
 357:Generated_Source\PSoC4/USBUART_episr.c ****     * Function Name: USBUART_EP_5_ISR
 358:Generated_Source\PSoC4/USBUART_episr.c ****     ****************************************************************************//**
 359:Generated_Source\PSoC4/USBUART_episr.c ****     *
 360:Generated_Source\PSoC4/USBUART_episr.c ****     *  Endpoint 5 Interrupt Service Routine
 361:Generated_Source\PSoC4/USBUART_episr.c ****     *
 362:Generated_Source\PSoC4/USBUART_episr.c ****     *
 363:Generated_Source\PSoC4/USBUART_episr.c ****     *******************************************************************************/
 364:Generated_Source\PSoC4/USBUART_episr.c ****     CY_ISR(USBUART_EP_5_ISR)
 365:Generated_Source\PSoC4/USBUART_episr.c ****     {
 366:Generated_Source\PSoC4/USBUART_episr.c ****     #ifdef USBUART_EP_5_ISR_ENTRY_CALLBACK
 367:Generated_Source\PSoC4/USBUART_episr.c ****         USBUART_EP_5_ISR_EntryCallback();
 368:Generated_Source\PSoC4/USBUART_episr.c ****     #endif /* (USBUART_EP_5_ISR_ENTRY_CALLBACK) */
 369:Generated_Source\PSoC4/USBUART_episr.c **** 
 370:Generated_Source\PSoC4/USBUART_episr.c ****         /* `#START EP5_USER_CODE` Place your code here */
 371:Generated_Source\PSoC4/USBUART_episr.c **** 
 372:Generated_Source\PSoC4/USBUART_episr.c ****         /* `#END` */
 373:Generated_Source\PSoC4/USBUART_episr.c **** 
 374:Generated_Source\PSoC4/USBUART_episr.c ****     #if (defined(USBUART_ENABLE_MIDI_STREAMING) && !defined(USBUART_MAIN_SERVICE_MIDI_OUT) && \
 375:Generated_Source\PSoC4/USBUART_episr.c ****                  USBUART_ISR_SERVICE_MIDI_OUT && CY_PSOC3)
 376:Generated_Source\PSoC4/USBUART_episr.c ****         {
 377:Generated_Source\PSoC4/USBUART_episr.c ****             uint8 intEn = EA;
 378:Generated_Source\PSoC4/USBUART_episr.c ****             CyGlobalIntEnable;  /* Enable nested interrupts. */
 379:Generated_Source\PSoC4/USBUART_episr.c ****     #endif /* (CY_PSOC3 && USBUART_ISR_SERVICE_MIDI_OUT) */
 380:Generated_Source\PSoC4/USBUART_episr.c **** 
 381:Generated_Source\PSoC4/USBUART_episr.c ****         USBUART_ClearSieEpInterruptSource(USBUART_SIE_INT_EP5_INTR);
 382:Generated_Source\PSoC4/USBUART_episr.c ****     
ARM GAS  C:\Users\essele\AppData\Local\Temp\cc4YPBQv.s 			page 11


 383:Generated_Source\PSoC4/USBUART_episr.c ****         /* Notifies user that transfer IN or OUT transfer is completed.
 384:Generated_Source\PSoC4/USBUART_episr.c ****         * IN endpoint: endpoint buffer can be reloaded, Host is read data.
 385:Generated_Source\PSoC4/USBUART_episr.c ****         * OUT endpoint: data is ready to read from endpoint buffer. 
 386:Generated_Source\PSoC4/USBUART_episr.c ****         */
 387:Generated_Source\PSoC4/USBUART_episr.c ****     #if (CY_PSOC4 && USBUART_EP_MANAGEMENT_DMA_AUTO)
 388:Generated_Source\PSoC4/USBUART_episr.c ****         if (0u != (USBUART_EP[USBUART_EP5].addr & USBUART_DIR_IN))
 389:Generated_Source\PSoC4/USBUART_episr.c ****     #endif /* (USBUART_EP_MANAGEMENT_DMA_AUTO) */
 390:Generated_Source\PSoC4/USBUART_episr.c ****         {            
 391:Generated_Source\PSoC4/USBUART_episr.c ****             /* Read CR0 register to clear SIE lock. */
 392:Generated_Source\PSoC4/USBUART_episr.c ****             (void) USBUART_SIE_EP_BASE.sieEp[USBUART_EP5].epCr0;
 393:Generated_Source\PSoC4/USBUART_episr.c **** 
 394:Generated_Source\PSoC4/USBUART_episr.c ****             /* Toggle all endpoint types except ISOC. */
 395:Generated_Source\PSoC4/USBUART_episr.c ****             if (USBUART_GET_EP_TYPE(USBUART_EP5) != USBUART_EP_TYPE_ISOC)
 396:Generated_Source\PSoC4/USBUART_episr.c ****             {
 397:Generated_Source\PSoC4/USBUART_episr.c ****                 USBUART_EP[USBUART_EP5].epToggle ^= USBUART_EPX_CNT_DATA_TOGGLE;
 398:Generated_Source\PSoC4/USBUART_episr.c ****             }
 399:Generated_Source\PSoC4/USBUART_episr.c **** 
 400:Generated_Source\PSoC4/USBUART_episr.c ****             /* EP_MANAGEMENT_DMA_AUTO (Ticket ID# 214187): For OUT endpoint this event is used to n
 401:Generated_Source\PSoC4/USBUART_episr.c ****             * user that DMA has completed copying data from OUT endpoint which is not completely tr
 402:Generated_Source\PSoC4/USBUART_episr.c ****             * Because last chunk of data is being copied.
 403:Generated_Source\PSoC4/USBUART_episr.c ****             * For CY_PSOC 3/5LP: it is acceptable as DMA is really fast.
 404:Generated_Source\PSoC4/USBUART_episr.c ****             * For CY_PSOC4: this event is set in Arbiter interrupt (source is DMA_TERMIN).
 405:Generated_Source\PSoC4/USBUART_episr.c ****             */
 406:Generated_Source\PSoC4/USBUART_episr.c ****             USBUART_EP[USBUART_EP5].apiEpState = USBUART_EVENT_PENDING;
 407:Generated_Source\PSoC4/USBUART_episr.c ****         }
 408:Generated_Source\PSoC4/USBUART_episr.c **** 
 409:Generated_Source\PSoC4/USBUART_episr.c ****     #if (!(CY_PSOC4 && USBUART_EP_MANAGEMENT_DMA_AUTO))        
 410:Generated_Source\PSoC4/USBUART_episr.c ****         #if (defined(USBUART_ENABLE_MIDI_STREAMING) && \
 411:Generated_Source\PSoC4/USBUART_episr.c ****             !defined(USBUART_MAIN_SERVICE_MIDI_OUT) && USBUART_ISR_SERVICE_MIDI_OUT)
 412:Generated_Source\PSoC4/USBUART_episr.c ****             if (USBUART_midi_out_ep == USBUART_EP5)
 413:Generated_Source\PSoC4/USBUART_episr.c ****             {
 414:Generated_Source\PSoC4/USBUART_episr.c ****                 USBUART_MIDI_OUT_Service();
 415:Generated_Source\PSoC4/USBUART_episr.c ****             }
 416:Generated_Source\PSoC4/USBUART_episr.c ****         #endif /* (USBUART_ISR_SERVICE_MIDI_OUT) */
 417:Generated_Source\PSoC4/USBUART_episr.c ****     #endif /* (!(CY_PSOC4 && USBUART_EP_MANAGEMENT_DMA_AUTO)) */
 418:Generated_Source\PSoC4/USBUART_episr.c **** 
 419:Generated_Source\PSoC4/USBUART_episr.c ****         /* `#START EP5_END_USER_CODE` Place your code here */
 420:Generated_Source\PSoC4/USBUART_episr.c **** 
 421:Generated_Source\PSoC4/USBUART_episr.c ****         /* `#END` */
 422:Generated_Source\PSoC4/USBUART_episr.c **** 
 423:Generated_Source\PSoC4/USBUART_episr.c ****     #ifdef USBUART_EP_5_ISR_EXIT_CALLBACK
 424:Generated_Source\PSoC4/USBUART_episr.c ****         USBUART_EP_5_ISR_ExitCallback();
 425:Generated_Source\PSoC4/USBUART_episr.c ****     #endif /* (USBUART_EP_5_ISR_EXIT_CALLBACK) */
 426:Generated_Source\PSoC4/USBUART_episr.c **** 
 427:Generated_Source\PSoC4/USBUART_episr.c ****     #if (CY_PSOC3 && defined(USBUART_ENABLE_MIDI_STREAMING) && \
 428:Generated_Source\PSoC4/USBUART_episr.c ****         !defined(USBUART_MAIN_SERVICE_MIDI_OUT) && USBUART_ISR_SERVICE_MIDI_OUT)
 429:Generated_Source\PSoC4/USBUART_episr.c ****         
 430:Generated_Source\PSoC4/USBUART_episr.c ****             EA = intEn; /* Restore nested interrupt configuration. */
 431:Generated_Source\PSoC4/USBUART_episr.c ****         }
 432:Generated_Source\PSoC4/USBUART_episr.c ****     #endif /* (CY_PSOC3 && USBUART_ISR_SERVICE_MIDI_OUT) */
 433:Generated_Source\PSoC4/USBUART_episr.c ****     }
 434:Generated_Source\PSoC4/USBUART_episr.c **** #endif /* (USBUART_EP5_ISR_ACTIVE) */
 435:Generated_Source\PSoC4/USBUART_episr.c **** 
 436:Generated_Source\PSoC4/USBUART_episr.c **** 
 437:Generated_Source\PSoC4/USBUART_episr.c **** #if (USBUART_EP6_ISR_ACTIVE)
 438:Generated_Source\PSoC4/USBUART_episr.c ****     /*******************************************************************************
 439:Generated_Source\PSoC4/USBUART_episr.c ****     * Function Name: USBUART_EP_6_ISR
ARM GAS  C:\Users\essele\AppData\Local\Temp\cc4YPBQv.s 			page 12


 440:Generated_Source\PSoC4/USBUART_episr.c ****     ****************************************************************************//**
 441:Generated_Source\PSoC4/USBUART_episr.c ****     *
 442:Generated_Source\PSoC4/USBUART_episr.c ****     *  Endpoint 6 Interrupt Service Routine.
 443:Generated_Source\PSoC4/USBUART_episr.c ****     *
 444:Generated_Source\PSoC4/USBUART_episr.c ****     *
 445:Generated_Source\PSoC4/USBUART_episr.c ****     *******************************************************************************/
 446:Generated_Source\PSoC4/USBUART_episr.c ****     CY_ISR(USBUART_EP_6_ISR)
 447:Generated_Source\PSoC4/USBUART_episr.c ****     {
 448:Generated_Source\PSoC4/USBUART_episr.c ****     #ifdef USBUART_EP_6_ISR_ENTRY_CALLBACK
 449:Generated_Source\PSoC4/USBUART_episr.c ****         USBUART_EP_6_ISR_EntryCallback();
 450:Generated_Source\PSoC4/USBUART_episr.c ****     #endif /* (USBUART_EP_6_ISR_ENTRY_CALLBACK) */
 451:Generated_Source\PSoC4/USBUART_episr.c **** 
 452:Generated_Source\PSoC4/USBUART_episr.c ****         /* `#START EP6_USER_CODE` Place your code here */
 453:Generated_Source\PSoC4/USBUART_episr.c **** 
 454:Generated_Source\PSoC4/USBUART_episr.c ****         /* `#END` */
 455:Generated_Source\PSoC4/USBUART_episr.c **** 
 456:Generated_Source\PSoC4/USBUART_episr.c ****     #if (CY_PSOC3 && defined(USBUART_ENABLE_MIDI_STREAMING) && \
 457:Generated_Source\PSoC4/USBUART_episr.c ****         !defined(USBUART_MAIN_SERVICE_MIDI_OUT) && USBUART_ISR_SERVICE_MIDI_OUT)
 458:Generated_Source\PSoC4/USBUART_episr.c ****         {
 459:Generated_Source\PSoC4/USBUART_episr.c ****             uint8 intEn = EA;
 460:Generated_Source\PSoC4/USBUART_episr.c ****             CyGlobalIntEnable;  /* Enable nested interrupts. */
 461:Generated_Source\PSoC4/USBUART_episr.c ****     #endif /* (CY_PSOC3 && USBUART_ISR_SERVICE_MIDI_OUT) */
 462:Generated_Source\PSoC4/USBUART_episr.c **** 
 463:Generated_Source\PSoC4/USBUART_episr.c ****         USBUART_ClearSieEpInterruptSource(USBUART_SIE_INT_EP6_INTR);
 464:Generated_Source\PSoC4/USBUART_episr.c ****         
 465:Generated_Source\PSoC4/USBUART_episr.c ****         /* Notifies user that transfer IN or OUT transfer is completed.
 466:Generated_Source\PSoC4/USBUART_episr.c ****         * IN endpoint: endpoint buffer can be reloaded, Host is read data.
 467:Generated_Source\PSoC4/USBUART_episr.c ****         * OUT endpoint: data is ready to read from endpoint buffer. 
 468:Generated_Source\PSoC4/USBUART_episr.c ****         */
 469:Generated_Source\PSoC4/USBUART_episr.c ****     #if (CY_PSOC4 && USBUART_EP_MANAGEMENT_DMA_AUTO)
 470:Generated_Source\PSoC4/USBUART_episr.c ****         if (0u != (USBUART_EP[USBUART_EP6].addr & USBUART_DIR_IN))
 471:Generated_Source\PSoC4/USBUART_episr.c ****     #endif /* (USBUART_EP_MANAGEMENT_DMA_AUTO) */
 472:Generated_Source\PSoC4/USBUART_episr.c ****         {
 473:Generated_Source\PSoC4/USBUART_episr.c ****             /* Read CR0 register to clear SIE lock. */
 474:Generated_Source\PSoC4/USBUART_episr.c ****             (void) USBUART_SIE_EP_BASE.sieEp[USBUART_EP6].epCr0;
 475:Generated_Source\PSoC4/USBUART_episr.c **** 
 476:Generated_Source\PSoC4/USBUART_episr.c ****             /* Toggle all endpoint types except ISOC. */
 477:Generated_Source\PSoC4/USBUART_episr.c ****             if (USBUART_GET_EP_TYPE(USBUART_EP6) != USBUART_EP_TYPE_ISOC)
 478:Generated_Source\PSoC4/USBUART_episr.c ****             {
 479:Generated_Source\PSoC4/USBUART_episr.c ****                 USBUART_EP[USBUART_EP6].epToggle ^= USBUART_EPX_CNT_DATA_TOGGLE;
 480:Generated_Source\PSoC4/USBUART_episr.c ****             }
 481:Generated_Source\PSoC4/USBUART_episr.c ****             
 482:Generated_Source\PSoC4/USBUART_episr.c ****             /* EP_MANAGEMENT_DMA_AUTO (Ticket ID# 214187): For OUT endpoint this event is used to n
 483:Generated_Source\PSoC4/USBUART_episr.c ****             * user that DMA has completed copying data from OUT endpoint which is not completely tr
 484:Generated_Source\PSoC4/USBUART_episr.c ****             * Because last chunk of data is being copied.
 485:Generated_Source\PSoC4/USBUART_episr.c ****             * For CY_PSOC 3/5LP: it is acceptable as DMA is really fast.
 486:Generated_Source\PSoC4/USBUART_episr.c ****             * For CY_PSOC4: this event is set in Arbiter interrupt (source is DMA_TERMIN).
 487:Generated_Source\PSoC4/USBUART_episr.c ****             */
 488:Generated_Source\PSoC4/USBUART_episr.c ****             USBUART_EP[USBUART_EP6].apiEpState = USBUART_EVENT_PENDING;
 489:Generated_Source\PSoC4/USBUART_episr.c ****         }
 490:Generated_Source\PSoC4/USBUART_episr.c **** 
 491:Generated_Source\PSoC4/USBUART_episr.c ****     #if (!(CY_PSOC4 && USBUART_EP_MANAGEMENT_DMA_AUTO))
 492:Generated_Source\PSoC4/USBUART_episr.c ****         #if (defined(USBUART_ENABLE_MIDI_STREAMING) && \
 493:Generated_Source\PSoC4/USBUART_episr.c ****             !defined(USBUART_MAIN_SERVICE_MIDI_OUT) && USBUART_ISR_SERVICE_MIDI_OUT)
 494:Generated_Source\PSoC4/USBUART_episr.c ****             if (USBUART_midi_out_ep == USBUART_EP6)
 495:Generated_Source\PSoC4/USBUART_episr.c ****             {
 496:Generated_Source\PSoC4/USBUART_episr.c ****                 USBUART_MIDI_OUT_Service();
ARM GAS  C:\Users\essele\AppData\Local\Temp\cc4YPBQv.s 			page 13


 497:Generated_Source\PSoC4/USBUART_episr.c ****             }
 498:Generated_Source\PSoC4/USBUART_episr.c ****         #endif /* (USBUART_ISR_SERVICE_MIDI_OUT) */
 499:Generated_Source\PSoC4/USBUART_episr.c ****     #endif /* (!(CY_PSOC4 && USBUART_EP_MANAGEMENT_DMA_AUTO)) */
 500:Generated_Source\PSoC4/USBUART_episr.c **** 
 501:Generated_Source\PSoC4/USBUART_episr.c ****         /* `#START EP6_END_USER_CODE` Place your code here */
 502:Generated_Source\PSoC4/USBUART_episr.c **** 
 503:Generated_Source\PSoC4/USBUART_episr.c ****         /* `#END` */
 504:Generated_Source\PSoC4/USBUART_episr.c **** 
 505:Generated_Source\PSoC4/USBUART_episr.c ****     #ifdef USBUART_EP_6_ISR_EXIT_CALLBACK
 506:Generated_Source\PSoC4/USBUART_episr.c ****         USBUART_EP_6_ISR_ExitCallback();
 507:Generated_Source\PSoC4/USBUART_episr.c ****     #endif /* (USBUART_EP_6_ISR_EXIT_CALLBACK) */
 508:Generated_Source\PSoC4/USBUART_episr.c **** 
 509:Generated_Source\PSoC4/USBUART_episr.c ****     #if (CY_PSOC3 && defined(USBUART_ENABLE_MIDI_STREAMING) && \
 510:Generated_Source\PSoC4/USBUART_episr.c ****         !defined(USBUART_MAIN_SERVICE_MIDI_OUT) && USBUART_ISR_SERVICE_MIDI_OUT)
 511:Generated_Source\PSoC4/USBUART_episr.c ****         
 512:Generated_Source\PSoC4/USBUART_episr.c ****             EA = intEn; /* Restore nested interrupt configuration. */
 513:Generated_Source\PSoC4/USBUART_episr.c ****         }
 514:Generated_Source\PSoC4/USBUART_episr.c ****     #endif /* (CY_PSOC3 && USBUART_ISR_SERVICE_MIDI_OUT) */
 515:Generated_Source\PSoC4/USBUART_episr.c ****     }
 516:Generated_Source\PSoC4/USBUART_episr.c **** #endif /* (USBUART_EP6_ISR_ACTIVE) */
 517:Generated_Source\PSoC4/USBUART_episr.c **** 
 518:Generated_Source\PSoC4/USBUART_episr.c **** 
 519:Generated_Source\PSoC4/USBUART_episr.c **** #if (USBUART_EP7_ISR_ACTIVE)
 520:Generated_Source\PSoC4/USBUART_episr.c ****     /*******************************************************************************
 521:Generated_Source\PSoC4/USBUART_episr.c ****     * Function Name: USBUART_EP_7_ISR
 522:Generated_Source\PSoC4/USBUART_episr.c ****     ****************************************************************************//**
 523:Generated_Source\PSoC4/USBUART_episr.c ****     *
 524:Generated_Source\PSoC4/USBUART_episr.c ****     *  Endpoint 7 Interrupt Service Routine.
 525:Generated_Source\PSoC4/USBUART_episr.c ****     *
 526:Generated_Source\PSoC4/USBUART_episr.c ****     *
 527:Generated_Source\PSoC4/USBUART_episr.c ****     *******************************************************************************/
 528:Generated_Source\PSoC4/USBUART_episr.c ****     CY_ISR(USBUART_EP_7_ISR)
 529:Generated_Source\PSoC4/USBUART_episr.c ****     {
 530:Generated_Source\PSoC4/USBUART_episr.c ****     #ifdef USBUART_EP_7_ISR_ENTRY_CALLBACK
 531:Generated_Source\PSoC4/USBUART_episr.c ****         USBUART_EP_7_ISR_EntryCallback();
 532:Generated_Source\PSoC4/USBUART_episr.c ****     #endif /* (USBUART_EP_7_ISR_ENTRY_CALLBACK) */
 533:Generated_Source\PSoC4/USBUART_episr.c **** 
 534:Generated_Source\PSoC4/USBUART_episr.c ****         /* `#START EP7_USER_CODE` Place your code here */
 535:Generated_Source\PSoC4/USBUART_episr.c **** 
 536:Generated_Source\PSoC4/USBUART_episr.c ****         /* `#END` */
 537:Generated_Source\PSoC4/USBUART_episr.c **** 
 538:Generated_Source\PSoC4/USBUART_episr.c ****     #if (CY_PSOC3 && defined(USBUART_ENABLE_MIDI_STREAMING) && \
 539:Generated_Source\PSoC4/USBUART_episr.c ****         !defined(USBUART_MAIN_SERVICE_MIDI_OUT) && USBUART_ISR_SERVICE_MIDI_OUT)
 540:Generated_Source\PSoC4/USBUART_episr.c ****         {
 541:Generated_Source\PSoC4/USBUART_episr.c ****             uint8 intEn = EA;
 542:Generated_Source\PSoC4/USBUART_episr.c ****             CyGlobalIntEnable;  /* Enable nested interrupts. */
 543:Generated_Source\PSoC4/USBUART_episr.c ****     #endif /* (CY_PSOC3 && USBUART_ISR_SERVICE_MIDI_OUT) */
 544:Generated_Source\PSoC4/USBUART_episr.c ****     
 545:Generated_Source\PSoC4/USBUART_episr.c ****         USBUART_ClearSieEpInterruptSource(USBUART_SIE_INT_EP7_INTR);
 546:Generated_Source\PSoC4/USBUART_episr.c ****         
 547:Generated_Source\PSoC4/USBUART_episr.c ****         /* Notifies user that transfer IN or OUT transfer is completed.
 548:Generated_Source\PSoC4/USBUART_episr.c ****         * IN endpoint: endpoint buffer can be reloaded, Host is read data.
 549:Generated_Source\PSoC4/USBUART_episr.c ****         * OUT endpoint: data is ready to read from endpoint buffer. 
 550:Generated_Source\PSoC4/USBUART_episr.c ****         */
 551:Generated_Source\PSoC4/USBUART_episr.c ****     #if (CY_PSOC4 && USBUART_EP_MANAGEMENT_DMA_AUTO)
 552:Generated_Source\PSoC4/USBUART_episr.c ****         if (0u != (USBUART_EP[USBUART_EP7].addr & USBUART_DIR_IN))
 553:Generated_Source\PSoC4/USBUART_episr.c ****     #endif /* (USBUART_EP_MANAGEMENT_DMA_AUTO) */
ARM GAS  C:\Users\essele\AppData\Local\Temp\cc4YPBQv.s 			page 14


 554:Generated_Source\PSoC4/USBUART_episr.c ****         {           
 555:Generated_Source\PSoC4/USBUART_episr.c ****             /* Read CR0 register to clear SIE lock. */
 556:Generated_Source\PSoC4/USBUART_episr.c ****             (void) USBUART_SIE_EP_BASE.sieEp[USBUART_EP7].epCr0;
 557:Generated_Source\PSoC4/USBUART_episr.c **** 
 558:Generated_Source\PSoC4/USBUART_episr.c ****             /* Toggle all endpoint types except ISOC. */
 559:Generated_Source\PSoC4/USBUART_episr.c ****             if (USBUART_GET_EP_TYPE(USBUART_EP7) != USBUART_EP_TYPE_ISOC)
 560:Generated_Source\PSoC4/USBUART_episr.c ****             {
 561:Generated_Source\PSoC4/USBUART_episr.c ****                 USBUART_EP[USBUART_EP7].epToggle ^= USBUART_EPX_CNT_DATA_TOGGLE;
 562:Generated_Source\PSoC4/USBUART_episr.c ****             }
 563:Generated_Source\PSoC4/USBUART_episr.c ****             
 564:Generated_Source\PSoC4/USBUART_episr.c ****             /* EP_MANAGEMENT_DMA_AUTO (Ticket ID# 214187): For OUT endpoint this event is used to n
 565:Generated_Source\PSoC4/USBUART_episr.c ****             * user that DMA has completed copying data from OUT endpoint which is not completely tr
 566:Generated_Source\PSoC4/USBUART_episr.c ****             * Because last chunk of data is being copied.
 567:Generated_Source\PSoC4/USBUART_episr.c ****             * For CY_PSOC 3/5LP: it is acceptable as DMA is really fast.
 568:Generated_Source\PSoC4/USBUART_episr.c ****             * For CY_PSOC4: this event is set in Arbiter interrupt (source is DMA_TERMIN).
 569:Generated_Source\PSoC4/USBUART_episr.c ****             */
 570:Generated_Source\PSoC4/USBUART_episr.c ****             USBUART_EP[USBUART_EP7].apiEpState = USBUART_EVENT_PENDING;
 571:Generated_Source\PSoC4/USBUART_episr.c ****         }
 572:Generated_Source\PSoC4/USBUART_episr.c **** 
 573:Generated_Source\PSoC4/USBUART_episr.c **** 
 574:Generated_Source\PSoC4/USBUART_episr.c ****     #if (!(CY_PSOC4 && USBUART_EP_MANAGEMENT_DMA_AUTO))
 575:Generated_Source\PSoC4/USBUART_episr.c ****         #if (defined(USBUART_ENABLE_MIDI_STREAMING) && \
 576:Generated_Source\PSoC4/USBUART_episr.c ****             !defined(USBUART_MAIN_SERVICE_MIDI_OUT) && USBUART_ISR_SERVICE_MIDI_OUT)
 577:Generated_Source\PSoC4/USBUART_episr.c ****             if(USBUART_midi_out_ep == USBUART_EP7)
 578:Generated_Source\PSoC4/USBUART_episr.c ****             {
 579:Generated_Source\PSoC4/USBUART_episr.c ****                 USBUART_MIDI_OUT_Service();
 580:Generated_Source\PSoC4/USBUART_episr.c ****             }
 581:Generated_Source\PSoC4/USBUART_episr.c ****         #endif /* (USBUART_ISR_SERVICE_MIDI_OUT) */
 582:Generated_Source\PSoC4/USBUART_episr.c ****     #endif /* (!(CY_PSOC4 && USBUART_EP_MANAGEMENT_DMA_AUTO)) */
 583:Generated_Source\PSoC4/USBUART_episr.c **** 
 584:Generated_Source\PSoC4/USBUART_episr.c ****         /* `#START EP7_END_USER_CODE` Place your code here */
 585:Generated_Source\PSoC4/USBUART_episr.c **** 
 586:Generated_Source\PSoC4/USBUART_episr.c ****         /* `#END` */
 587:Generated_Source\PSoC4/USBUART_episr.c **** 
 588:Generated_Source\PSoC4/USBUART_episr.c ****     #ifdef USBUART_EP_7_ISR_EXIT_CALLBACK
 589:Generated_Source\PSoC4/USBUART_episr.c ****         USBUART_EP_7_ISR_ExitCallback();
 590:Generated_Source\PSoC4/USBUART_episr.c ****     #endif /* (USBUART_EP_7_ISR_EXIT_CALLBACK) */
 591:Generated_Source\PSoC4/USBUART_episr.c **** 
 592:Generated_Source\PSoC4/USBUART_episr.c ****     #if (CY_PSOC3 && defined(USBUART_ENABLE_MIDI_STREAMING) && \
 593:Generated_Source\PSoC4/USBUART_episr.c ****         !defined(USBUART_MAIN_SERVICE_MIDI_OUT) && USBUART_ISR_SERVICE_MIDI_OUT)
 594:Generated_Source\PSoC4/USBUART_episr.c ****         
 595:Generated_Source\PSoC4/USBUART_episr.c ****             EA = intEn; /* Restore nested interrupt configuration. */
 596:Generated_Source\PSoC4/USBUART_episr.c ****         }
 597:Generated_Source\PSoC4/USBUART_episr.c ****     #endif /* (CY_PSOC3 && USBUART_ISR_SERVICE_MIDI_OUT) */
 598:Generated_Source\PSoC4/USBUART_episr.c ****     }
 599:Generated_Source\PSoC4/USBUART_episr.c **** #endif /* (USBUART_EP7_ISR_ACTIVE) */
 600:Generated_Source\PSoC4/USBUART_episr.c **** 
 601:Generated_Source\PSoC4/USBUART_episr.c **** 
 602:Generated_Source\PSoC4/USBUART_episr.c **** #if (USBUART_EP8_ISR_ACTIVE)
 603:Generated_Source\PSoC4/USBUART_episr.c ****     /*******************************************************************************
 604:Generated_Source\PSoC4/USBUART_episr.c ****     * Function Name: USBUART_EP_8_ISR
 605:Generated_Source\PSoC4/USBUART_episr.c ****     ****************************************************************************//**
 606:Generated_Source\PSoC4/USBUART_episr.c ****     *
 607:Generated_Source\PSoC4/USBUART_episr.c ****     *  Endpoint 8 Interrupt Service Routine
 608:Generated_Source\PSoC4/USBUART_episr.c ****     *
 609:Generated_Source\PSoC4/USBUART_episr.c ****     *
 610:Generated_Source\PSoC4/USBUART_episr.c ****     *******************************************************************************/
ARM GAS  C:\Users\essele\AppData\Local\Temp\cc4YPBQv.s 			page 15


 611:Generated_Source\PSoC4/USBUART_episr.c ****     CY_ISR(USBUART_EP_8_ISR)
 612:Generated_Source\PSoC4/USBUART_episr.c ****     {
 613:Generated_Source\PSoC4/USBUART_episr.c ****     #ifdef USBUART_EP_8_ISR_ENTRY_CALLBACK
 614:Generated_Source\PSoC4/USBUART_episr.c ****         USBUART_EP_8_ISR_EntryCallback();
 615:Generated_Source\PSoC4/USBUART_episr.c ****     #endif /* (USBUART_EP_8_ISR_ENTRY_CALLBACK) */
 616:Generated_Source\PSoC4/USBUART_episr.c **** 
 617:Generated_Source\PSoC4/USBUART_episr.c ****         /* `#START EP8_USER_CODE` Place your code here */
 618:Generated_Source\PSoC4/USBUART_episr.c **** 
 619:Generated_Source\PSoC4/USBUART_episr.c ****         /* `#END` */
 620:Generated_Source\PSoC4/USBUART_episr.c **** 
 621:Generated_Source\PSoC4/USBUART_episr.c ****     #if (CY_PSOC3 && defined(USBUART_ENABLE_MIDI_STREAMING) && \
 622:Generated_Source\PSoC4/USBUART_episr.c ****         !defined(USBUART_MAIN_SERVICE_MIDI_OUT) && USBUART_ISR_SERVICE_MIDI_OUT)
 623:Generated_Source\PSoC4/USBUART_episr.c ****         {
 624:Generated_Source\PSoC4/USBUART_episr.c ****             uint8 intEn = EA;
 625:Generated_Source\PSoC4/USBUART_episr.c ****             CyGlobalIntEnable;  /* Enable nested interrupts. */
 626:Generated_Source\PSoC4/USBUART_episr.c ****     #endif /* (CY_PSOC3 && USBUART_ISR_SERVICE_MIDI_OUT) */
 627:Generated_Source\PSoC4/USBUART_episr.c **** 
 628:Generated_Source\PSoC4/USBUART_episr.c ****         USBUART_ClearSieEpInterruptSource(USBUART_SIE_INT_EP8_INTR);
 629:Generated_Source\PSoC4/USBUART_episr.c ****         
 630:Generated_Source\PSoC4/USBUART_episr.c ****         /* Notifies user that transfer IN or OUT transfer is completed.
 631:Generated_Source\PSoC4/USBUART_episr.c ****         * IN endpoint: endpoint buffer can be reloaded, Host is read data.
 632:Generated_Source\PSoC4/USBUART_episr.c ****         * OUT endpoint: data is ready to read from endpoint buffer. 
 633:Generated_Source\PSoC4/USBUART_episr.c ****         */
 634:Generated_Source\PSoC4/USBUART_episr.c ****     #if (CY_PSOC4 && USBUART_EP_MANAGEMENT_DMA_AUTO)
 635:Generated_Source\PSoC4/USBUART_episr.c ****         if (0u != (USBUART_EP[USBUART_EP8].addr & USBUART_DIR_IN))
 636:Generated_Source\PSoC4/USBUART_episr.c ****     #endif /* (USBUART_EP_MANAGEMENT_DMA_AUTO) */
 637:Generated_Source\PSoC4/USBUART_episr.c ****         {
 638:Generated_Source\PSoC4/USBUART_episr.c ****             /* Read CR0 register to clear SIE lock. */
 639:Generated_Source\PSoC4/USBUART_episr.c ****             (void) USBUART_SIE_EP_BASE.sieEp[USBUART_EP8].epCr0;
 640:Generated_Source\PSoC4/USBUART_episr.c **** 
 641:Generated_Source\PSoC4/USBUART_episr.c ****             /* Toggle all endpoint types except ISOC. */
 642:Generated_Source\PSoC4/USBUART_episr.c ****             if (USBUART_GET_EP_TYPE(USBUART_EP8) != USBUART_EP_TYPE_ISOC)
 643:Generated_Source\PSoC4/USBUART_episr.c ****             {
 644:Generated_Source\PSoC4/USBUART_episr.c ****                 USBUART_EP[USBUART_EP8].epToggle ^= USBUART_EPX_CNT_DATA_TOGGLE;
 645:Generated_Source\PSoC4/USBUART_episr.c ****             }
 646:Generated_Source\PSoC4/USBUART_episr.c **** 
 647:Generated_Source\PSoC4/USBUART_episr.c ****             /* EP_MANAGEMENT_DMA_AUTO (Ticket ID# 214187): For OUT endpoint this event is used to n
 648:Generated_Source\PSoC4/USBUART_episr.c ****             * user that DMA has completed copying data from OUT endpoint which is not completely tr
 649:Generated_Source\PSoC4/USBUART_episr.c ****             * Because last chunk of data is being copied.
 650:Generated_Source\PSoC4/USBUART_episr.c ****             * For CY_PSOC 3/5LP: it is acceptable as DMA is really fast.
 651:Generated_Source\PSoC4/USBUART_episr.c ****             * For CY_PSOC4: this event is set in Arbiter interrupt (source is DMA_TERMIN).
 652:Generated_Source\PSoC4/USBUART_episr.c ****             */
 653:Generated_Source\PSoC4/USBUART_episr.c ****             USBUART_EP[USBUART_EP8].apiEpState = USBUART_EVENT_PENDING;
 654:Generated_Source\PSoC4/USBUART_episr.c ****         }
 655:Generated_Source\PSoC4/USBUART_episr.c **** 
 656:Generated_Source\PSoC4/USBUART_episr.c ****     #if (!(CY_PSOC4 && USBUART_EP_MANAGEMENT_DMA_AUTO))
 657:Generated_Source\PSoC4/USBUART_episr.c ****         #if (defined(USBUART_ENABLE_MIDI_STREAMING) && \
 658:Generated_Source\PSoC4/USBUART_episr.c ****             !defined(USBUART_MAIN_SERVICE_MIDI_OUT) && USBUART_ISR_SERVICE_MIDI_OUT)
 659:Generated_Source\PSoC4/USBUART_episr.c ****             if (USBUART_midi_out_ep == USBUART_EP8)
 660:Generated_Source\PSoC4/USBUART_episr.c ****             {
 661:Generated_Source\PSoC4/USBUART_episr.c ****                 USBUART_MIDI_OUT_Service();
 662:Generated_Source\PSoC4/USBUART_episr.c ****             }
 663:Generated_Source\PSoC4/USBUART_episr.c ****         #endif /* (USBUART_ISR_SERVICE_MIDI_OUT) */
 664:Generated_Source\PSoC4/USBUART_episr.c ****     #endif /* (!(CY_PSOC4 && USBUART_EP_MANAGEMENT_DMA_AUTO)) */
 665:Generated_Source\PSoC4/USBUART_episr.c **** 
 666:Generated_Source\PSoC4/USBUART_episr.c ****         /* `#START EP8_END_USER_CODE` Place your code here */
 667:Generated_Source\PSoC4/USBUART_episr.c **** 
ARM GAS  C:\Users\essele\AppData\Local\Temp\cc4YPBQv.s 			page 16


 668:Generated_Source\PSoC4/USBUART_episr.c ****         /* `#END` */
 669:Generated_Source\PSoC4/USBUART_episr.c **** 
 670:Generated_Source\PSoC4/USBUART_episr.c ****     #ifdef USBUART_EP_8_ISR_EXIT_CALLBACK
 671:Generated_Source\PSoC4/USBUART_episr.c ****         USBUART_EP_8_ISR_ExitCallback();
 672:Generated_Source\PSoC4/USBUART_episr.c ****     #endif /* (USBUART_EP_8_ISR_EXIT_CALLBACK) */
 673:Generated_Source\PSoC4/USBUART_episr.c **** 
 674:Generated_Source\PSoC4/USBUART_episr.c ****     #if (CY_PSOC3 && defined(USBUART_ENABLE_MIDI_STREAMING) && \
 675:Generated_Source\PSoC4/USBUART_episr.c ****         !defined(USBUART_MAIN_SERVICE_MIDI_OUT) && USBUART_ISR_SERVICE_MIDI_OUT)
 676:Generated_Source\PSoC4/USBUART_episr.c ****         
 677:Generated_Source\PSoC4/USBUART_episr.c ****             EA = intEn; /* Restore nested interrupt configuration. */
 678:Generated_Source\PSoC4/USBUART_episr.c ****         }
 679:Generated_Source\PSoC4/USBUART_episr.c ****     #endif /* (CY_PSOC3 && USBUART_ISR_SERVICE_MIDI_OUT) */
 680:Generated_Source\PSoC4/USBUART_episr.c ****     }
 681:Generated_Source\PSoC4/USBUART_episr.c **** #endif /* (USBUART_EP8_ISR_ACTIVE) */
 682:Generated_Source\PSoC4/USBUART_episr.c **** 
 683:Generated_Source\PSoC4/USBUART_episr.c **** 
 684:Generated_Source\PSoC4/USBUART_episr.c **** #if (USBUART_SOF_ISR_ACTIVE)
 685:Generated_Source\PSoC4/USBUART_episr.c ****     /*******************************************************************************
 686:Generated_Source\PSoC4/USBUART_episr.c ****     * Function Name: USBUART_SOF_ISR
 687:Generated_Source\PSoC4/USBUART_episr.c ****     ****************************************************************************//**
 688:Generated_Source\PSoC4/USBUART_episr.c ****     *
 689:Generated_Source\PSoC4/USBUART_episr.c ****     *  Start of Frame Interrupt Service Routine.
 690:Generated_Source\PSoC4/USBUART_episr.c ****     *
 691:Generated_Source\PSoC4/USBUART_episr.c ****     *
 692:Generated_Source\PSoC4/USBUART_episr.c ****     *******************************************************************************/
 693:Generated_Source\PSoC4/USBUART_episr.c ****     CY_ISR(USBUART_SOF_ISR)
 694:Generated_Source\PSoC4/USBUART_episr.c ****     {
 189              		.loc 1 694 0
 190              		.cfi_startproc
 191              		@ args = 0, pretend = 0, frame = 0
 192              		@ frame_needed = 0, uses_anonymous_args = 0
 193              		@ link register save eliminated.
 695:Generated_Source\PSoC4/USBUART_episr.c ****     #ifdef USBUART_SOF_ISR_ENTRY_CALLBACK
 696:Generated_Source\PSoC4/USBUART_episr.c ****         USBUART_SOF_ISR_EntryCallback();
 697:Generated_Source\PSoC4/USBUART_episr.c ****     #endif /* (USBUART_SOF_ISR_ENTRY_CALLBACK) */
 698:Generated_Source\PSoC4/USBUART_episr.c **** 
 699:Generated_Source\PSoC4/USBUART_episr.c ****         /* `#START SOF_USER_CODE` Place your code here */
 700:Generated_Source\PSoC4/USBUART_episr.c **** 
 701:Generated_Source\PSoC4/USBUART_episr.c ****         /* `#END` */
 702:Generated_Source\PSoC4/USBUART_episr.c **** 
 703:Generated_Source\PSoC4/USBUART_episr.c ****         USBUART_ClearSieInterruptSource(USBUART_INTR_SIE_SOF_INTR);
 194              		.loc 1 703 0
 195 0000 0122     		movs	r2, #1
 196 0002 014B     		ldr	r3, .L14
 197 0004 1A60     		str	r2, [r3]
 704:Generated_Source\PSoC4/USBUART_episr.c **** 
 705:Generated_Source\PSoC4/USBUART_episr.c ****     #ifdef USBUART_SOF_ISR_EXIT_CALLBACK
 706:Generated_Source\PSoC4/USBUART_episr.c ****         USBUART_SOF_ISR_ExitCallback();
 707:Generated_Source\PSoC4/USBUART_episr.c ****     #endif /* (USBUART_SOF_ISR_EXIT_CALLBACK) */
 708:Generated_Source\PSoC4/USBUART_episr.c ****     }
 198              		.loc 1 708 0
 199              		@ sp needed
 200 0006 7047     		bx	lr
 201              	.L15:
 202              		.align	2
 203              	.L14:
 204 0008 20202C40 		.word	1076633632
ARM GAS  C:\Users\essele\AppData\Local\Temp\cc4YPBQv.s 			page 17


 205              		.cfi_endproc
 206              	.LFE4:
 207              		.size	USBUART_SOF_ISR, .-USBUART_SOF_ISR
 208              		.section	.text.USBUART_BUS_RESET_ISR,"ax",%progbits
 209              		.align	2
 210              		.global	USBUART_BUS_RESET_ISR
 211              		.code	16
 212              		.thumb_func
 213              		.type	USBUART_BUS_RESET_ISR, %function
 214              	USBUART_BUS_RESET_ISR:
 215              	.LFB5:
 709:Generated_Source\PSoC4/USBUART_episr.c **** #endif /* (USBUART_SOF_ISR_ACTIVE) */
 710:Generated_Source\PSoC4/USBUART_episr.c **** 
 711:Generated_Source\PSoC4/USBUART_episr.c **** 
 712:Generated_Source\PSoC4/USBUART_episr.c **** #if (USBUART_BUS_RESET_ISR_ACTIVE)
 713:Generated_Source\PSoC4/USBUART_episr.c **** /*******************************************************************************
 714:Generated_Source\PSoC4/USBUART_episr.c **** * Function Name: USBUART_BUS_RESET_ISR
 715:Generated_Source\PSoC4/USBUART_episr.c **** ****************************************************************************//**
 716:Generated_Source\PSoC4/USBUART_episr.c **** *
 717:Generated_Source\PSoC4/USBUART_episr.c **** *  USB Bus Reset Interrupt Service Routine.  Calls _Start with the same
 718:Generated_Source\PSoC4/USBUART_episr.c **** *  parameters as the last USER call to _Start
 719:Generated_Source\PSoC4/USBUART_episr.c **** *
 720:Generated_Source\PSoC4/USBUART_episr.c **** *
 721:Generated_Source\PSoC4/USBUART_episr.c **** *******************************************************************************/
 722:Generated_Source\PSoC4/USBUART_episr.c **** CY_ISR(USBUART_BUS_RESET_ISR)
 723:Generated_Source\PSoC4/USBUART_episr.c **** {
 216              		.loc 1 723 0
 217              		.cfi_startproc
 218              		@ args = 0, pretend = 0, frame = 0
 219              		@ frame_needed = 0, uses_anonymous_args = 0
 220 0000 10B5     		push	{r4, lr}
 221              		.cfi_def_cfa_offset 8
 222              		.cfi_offset 4, -8
 223              		.cfi_offset 14, -4
 724:Generated_Source\PSoC4/USBUART_episr.c **** #ifdef USBUART_BUS_RESET_ISR_ENTRY_CALLBACK
 725:Generated_Source\PSoC4/USBUART_episr.c ****     USBUART_BUS_RESET_ISR_EntryCallback();
 726:Generated_Source\PSoC4/USBUART_episr.c **** #endif /* (USBUART_BUS_RESET_ISR_ENTRY_CALLBACK) */
 727:Generated_Source\PSoC4/USBUART_episr.c **** 
 728:Generated_Source\PSoC4/USBUART_episr.c ****     /* `#START BUS_RESET_USER_CODE` Place your code here */
 729:Generated_Source\PSoC4/USBUART_episr.c **** 
 730:Generated_Source\PSoC4/USBUART_episr.c ****     /* `#END` */
 731:Generated_Source\PSoC4/USBUART_episr.c **** 
 732:Generated_Source\PSoC4/USBUART_episr.c ****     USBUART_ClearSieInterruptSource(USBUART_INTR_SIE_BUS_RESET_INTR);
 224              		.loc 1 732 0
 225 0002 0222     		movs	r2, #2
 226 0004 024B     		ldr	r3, .L17
 227 0006 1A60     		str	r2, [r3]
 733:Generated_Source\PSoC4/USBUART_episr.c **** 
 734:Generated_Source\PSoC4/USBUART_episr.c ****     USBUART_ReInitComponent();
 228              		.loc 1 734 0
 229 0008 FFF7FEFF 		bl	USBUART_ReInitComponent
 230              	.LVL0:
 735:Generated_Source\PSoC4/USBUART_episr.c **** 
 736:Generated_Source\PSoC4/USBUART_episr.c **** #ifdef USBUART_BUS_RESET_ISR_EXIT_CALLBACK
 737:Generated_Source\PSoC4/USBUART_episr.c ****     USBUART_BUS_RESET_ISR_ExitCallback();
 738:Generated_Source\PSoC4/USBUART_episr.c **** #endif /* (USBUART_BUS_RESET_ISR_EXIT_CALLBACK) */
 739:Generated_Source\PSoC4/USBUART_episr.c **** }
ARM GAS  C:\Users\essele\AppData\Local\Temp\cc4YPBQv.s 			page 18


 231              		.loc 1 739 0
 232              		@ sp needed
 233 000c 10BD     		pop	{r4, pc}
 234              	.L18:
 235 000e C046     		.align	2
 236              	.L17:
 237 0010 20202C40 		.word	1076633632
 238              		.cfi_endproc
 239              	.LFE5:
 240              		.size	USBUART_BUS_RESET_ISR, .-USBUART_BUS_RESET_ISR
 241              		.section	.text.USBUART_INTR_HI_ISR,"ax",%progbits
 242              		.align	2
 243              		.global	USBUART_INTR_HI_ISR
 244              		.code	16
 245              		.thumb_func
 246              		.type	USBUART_INTR_HI_ISR, %function
 247              	USBUART_INTR_HI_ISR:
 248              	.LFB7:
 740:Generated_Source\PSoC4/USBUART_episr.c **** #endif /* (USBUART_BUS_RESET_ISR_ACTIVE) */
 741:Generated_Source\PSoC4/USBUART_episr.c **** 
 742:Generated_Source\PSoC4/USBUART_episr.c **** 
 743:Generated_Source\PSoC4/USBUART_episr.c **** #if (USBUART_LPM_ACTIVE)
 744:Generated_Source\PSoC4/USBUART_episr.c **** /***************************************************************************
 745:Generated_Source\PSoC4/USBUART_episr.c **** * Function Name: USBUART_INTR_LPM_ISR
 746:Generated_Source\PSoC4/USBUART_episr.c **** ************************************************************************//**
 747:Generated_Source\PSoC4/USBUART_episr.c **** *
 748:Generated_Source\PSoC4/USBUART_episr.c **** *   Interrupt Service Routine for LPM of the interrupt sources.
 749:Generated_Source\PSoC4/USBUART_episr.c **** *
 750:Generated_Source\PSoC4/USBUART_episr.c **** *
 751:Generated_Source\PSoC4/USBUART_episr.c **** ***************************************************************************/
 752:Generated_Source\PSoC4/USBUART_episr.c **** CY_ISR(USBUART_LPM_ISR)
 753:Generated_Source\PSoC4/USBUART_episr.c **** {
 754:Generated_Source\PSoC4/USBUART_episr.c **** #ifdef USBUART_LPM_ISR_ENTRY_CALLBACK
 755:Generated_Source\PSoC4/USBUART_episr.c ****     USBUART_LPM_ISR_EntryCallback();
 756:Generated_Source\PSoC4/USBUART_episr.c **** #endif /* (USBUART_LPM_ISR_ENTRY_CALLBACK) */
 757:Generated_Source\PSoC4/USBUART_episr.c **** 
 758:Generated_Source\PSoC4/USBUART_episr.c ****     /* `#START LPM_BEGIN_USER_CODE` Place your code here */
 759:Generated_Source\PSoC4/USBUART_episr.c **** 
 760:Generated_Source\PSoC4/USBUART_episr.c ****     /* `#END` */
 761:Generated_Source\PSoC4/USBUART_episr.c **** 
 762:Generated_Source\PSoC4/USBUART_episr.c ****     USBUART_ClearSieInterruptSource(USBUART_INTR_SIE_LPM_INTR);
 763:Generated_Source\PSoC4/USBUART_episr.c **** 
 764:Generated_Source\PSoC4/USBUART_episr.c ****     /* `#START LPM_END_USER_CODE` Place your code here */
 765:Generated_Source\PSoC4/USBUART_episr.c **** 
 766:Generated_Source\PSoC4/USBUART_episr.c ****     /* `#END` */
 767:Generated_Source\PSoC4/USBUART_episr.c **** 
 768:Generated_Source\PSoC4/USBUART_episr.c **** #ifdef USBUART_LPM_ISR_EXIT_CALLBACK
 769:Generated_Source\PSoC4/USBUART_episr.c ****     USBUART_LPM_ISR_ExitCallback();
 770:Generated_Source\PSoC4/USBUART_episr.c **** #endif /* (USBUART_LPM_ISR_EXIT_CALLBACK) */
 771:Generated_Source\PSoC4/USBUART_episr.c **** }
 772:Generated_Source\PSoC4/USBUART_episr.c **** #endif /* (USBUART_LPM_ACTIVE) */
 773:Generated_Source\PSoC4/USBUART_episr.c **** 
 774:Generated_Source\PSoC4/USBUART_episr.c **** 
 775:Generated_Source\PSoC4/USBUART_episr.c **** #if (USBUART_EP_MANAGEMENT_DMA && USBUART_ARB_ISR_ACTIVE)
 776:Generated_Source\PSoC4/USBUART_episr.c ****     /***************************************************************************
 777:Generated_Source\PSoC4/USBUART_episr.c ****     * Function Name: USBUART_ARB_ISR
 778:Generated_Source\PSoC4/USBUART_episr.c ****     ************************************************************************//**
ARM GAS  C:\Users\essele\AppData\Local\Temp\cc4YPBQv.s 			page 19


 779:Generated_Source\PSoC4/USBUART_episr.c ****     *
 780:Generated_Source\PSoC4/USBUART_episr.c ****     *  Arbiter Interrupt Service Routine.
 781:Generated_Source\PSoC4/USBUART_episr.c ****     *
 782:Generated_Source\PSoC4/USBUART_episr.c ****     *
 783:Generated_Source\PSoC4/USBUART_episr.c ****     ***************************************************************************/
 784:Generated_Source\PSoC4/USBUART_episr.c ****     CY_ISR(USBUART_ARB_ISR)
 785:Generated_Source\PSoC4/USBUART_episr.c ****     {
 786:Generated_Source\PSoC4/USBUART_episr.c ****         uint32 arbIntrStatus;
 787:Generated_Source\PSoC4/USBUART_episr.c ****         uint32 epStatus;
 788:Generated_Source\PSoC4/USBUART_episr.c ****         uint32 ep = USBUART_EP1;
 789:Generated_Source\PSoC4/USBUART_episr.c **** 
 790:Generated_Source\PSoC4/USBUART_episr.c ****     #ifdef USBUART_ARB_ISR_ENTRY_CALLBACK
 791:Generated_Source\PSoC4/USBUART_episr.c ****         USBUART_ARB_ISR_EntryCallback();
 792:Generated_Source\PSoC4/USBUART_episr.c ****     #endif /* (USBUART_ARB_ISR_ENTRY_CALLBACK) */
 793:Generated_Source\PSoC4/USBUART_episr.c **** 
 794:Generated_Source\PSoC4/USBUART_episr.c ****         /* `#START ARB_BEGIN_USER_CODE` Place your code here */
 795:Generated_Source\PSoC4/USBUART_episr.c **** 
 796:Generated_Source\PSoC4/USBUART_episr.c ****         /* `#END` */
 797:Generated_Source\PSoC4/USBUART_episr.c **** 
 798:Generated_Source\PSoC4/USBUART_episr.c ****         /* Get pending ARB interrupt sources. */
 799:Generated_Source\PSoC4/USBUART_episr.c ****         arbIntrStatus = USBUART_ARB_INT_SR_REG;
 800:Generated_Source\PSoC4/USBUART_episr.c **** 
 801:Generated_Source\PSoC4/USBUART_episr.c ****         while (0u != arbIntrStatus)
 802:Generated_Source\PSoC4/USBUART_episr.c ****         {
 803:Generated_Source\PSoC4/USBUART_episr.c ****             /* Check which EP is interrupt source. */
 804:Generated_Source\PSoC4/USBUART_episr.c ****             if (0u != (arbIntrStatus & 0x01u))
 805:Generated_Source\PSoC4/USBUART_episr.c ****             {
 806:Generated_Source\PSoC4/USBUART_episr.c ****                 /* Get endpoint enable interrupt sources. */
 807:Generated_Source\PSoC4/USBUART_episr.c ****                 epStatus = (USBUART_ARB_EP_BASE.arbEp[ep].epSr & USBUART_ARB_EP_BASE.arbEp[ep].epIn
 808:Generated_Source\PSoC4/USBUART_episr.c **** 
 809:Generated_Source\PSoC4/USBUART_episr.c ****                 /* Handle IN endpoint buffer full event: happens only once when endpoint buffer is 
 810:Generated_Source\PSoC4/USBUART_episr.c ****                 if (0u != (epStatus & USBUART_ARB_EPX_INT_IN_BUF_FULL))
 811:Generated_Source\PSoC4/USBUART_episr.c ****                 {
 812:Generated_Source\PSoC4/USBUART_episr.c ****                     if (0u != (USBUART_EP[ep].addr & USBUART_DIR_IN))
 813:Generated_Source\PSoC4/USBUART_episr.c ****                     {
 814:Generated_Source\PSoC4/USBUART_episr.c ****                         /* Clear data ready status. */
 815:Generated_Source\PSoC4/USBUART_episr.c ****                         USBUART_ARB_EP_BASE.arbEp[ep].epCfg &= (uint32) ~USBUART_ARB_EPX_CFG_IN_DAT
 816:Generated_Source\PSoC4/USBUART_episr.c **** 
 817:Generated_Source\PSoC4/USBUART_episr.c ****                     #if (CY_PSOC3 || CY_PSOC5LP)
 818:Generated_Source\PSoC4/USBUART_episr.c ****                         #if (USBUART_EP_MANAGEMENT_DMA_AUTO && (USBUART_EP_DMA_AUTO_OPT == 0u))
 819:Generated_Source\PSoC4/USBUART_episr.c ****                             /* Set up common area DMA with rest of data. */
 820:Generated_Source\PSoC4/USBUART_episr.c ****                             if(USBUART_inLength[ep] > USBUART_DMA_BYTES_PER_BURST)
 821:Generated_Source\PSoC4/USBUART_episr.c ****                             {
 822:Generated_Source\PSoC4/USBUART_episr.c ****                                 USBUART_LoadNextInEP(ep, 0u);
 823:Generated_Source\PSoC4/USBUART_episr.c ****                             }
 824:Generated_Source\PSoC4/USBUART_episr.c ****                             else
 825:Generated_Source\PSoC4/USBUART_episr.c ****                             {
 826:Generated_Source\PSoC4/USBUART_episr.c ****                                 USBUART_inBufFull[ep] = 1u;
 827:Generated_Source\PSoC4/USBUART_episr.c ****                             }
 828:Generated_Source\PSoC4/USBUART_episr.c ****                         #endif /* (USBUART_EP_MANAGEMENT_DMA_AUTO && (USBUART_EP_DMA_AUTO_OPT == 0u
 829:Generated_Source\PSoC4/USBUART_episr.c ****                     #endif /* (CY_PSOC3 || CY_PSOC5LP) */
 830:Generated_Source\PSoC4/USBUART_episr.c **** 
 831:Generated_Source\PSoC4/USBUART_episr.c ****                         /* Arm IN endpoint. */
 832:Generated_Source\PSoC4/USBUART_episr.c ****                         USBUART_SIE_EP_BASE.sieEp[ep].epCr0 = USBUART_EP[ep].epMode;
 833:Generated_Source\PSoC4/USBUART_episr.c **** 
 834:Generated_Source\PSoC4/USBUART_episr.c ****                     #if (defined(USBUART_ENABLE_MIDI_STREAMING) && USBUART_ISR_SERVICE_MIDI_IN)
 835:Generated_Source\PSoC4/USBUART_episr.c ****                         if (ep == USBUART_midi_in_ep)
ARM GAS  C:\Users\essele\AppData\Local\Temp\cc4YPBQv.s 			page 20


 836:Generated_Source\PSoC4/USBUART_episr.c ****                         {
 837:Generated_Source\PSoC4/USBUART_episr.c ****                             /* Clear MIDI input pointer. */
 838:Generated_Source\PSoC4/USBUART_episr.c ****                             USBUART_midiInPointer = 0u;
 839:Generated_Source\PSoC4/USBUART_episr.c ****                         }
 840:Generated_Source\PSoC4/USBUART_episr.c ****                     #endif /* (USBUART_ENABLE_MIDI_STREAMING) */
 841:Generated_Source\PSoC4/USBUART_episr.c ****                     }
 842:Generated_Source\PSoC4/USBUART_episr.c ****                 }
 843:Generated_Source\PSoC4/USBUART_episr.c **** 
 844:Generated_Source\PSoC4/USBUART_episr.c ****             #if (USBUART_EP_MANAGEMENT_DMA_MANUAL)
 845:Generated_Source\PSoC4/USBUART_episr.c ****                 /* Handle DMA completion event for OUT endpoints. */
 846:Generated_Source\PSoC4/USBUART_episr.c ****                 if (0u != (epStatus & USBUART_ARB_EPX_SR_DMA_GNT))
 847:Generated_Source\PSoC4/USBUART_episr.c ****                 {
 848:Generated_Source\PSoC4/USBUART_episr.c ****                     if (0u == (USBUART_EP[ep].addr & USBUART_DIR_IN))
 849:Generated_Source\PSoC4/USBUART_episr.c ****                     {
 850:Generated_Source\PSoC4/USBUART_episr.c ****                         /* Notify user that data has been copied from endpoint buffer. */
 851:Generated_Source\PSoC4/USBUART_episr.c ****                         USBUART_EP[ep].apiEpState = USBUART_NO_EVENT_PENDING;
 852:Generated_Source\PSoC4/USBUART_episr.c **** 
 853:Generated_Source\PSoC4/USBUART_episr.c ****                         /* DMA done coping data: OUT endpoint has to be re-armed by user. */
 854:Generated_Source\PSoC4/USBUART_episr.c ****                     }
 855:Generated_Source\PSoC4/USBUART_episr.c ****                 }
 856:Generated_Source\PSoC4/USBUART_episr.c ****             #endif /* (USBUART_EP_MANAGEMENT_DMA_MANUAL) */
 857:Generated_Source\PSoC4/USBUART_episr.c **** 
 858:Generated_Source\PSoC4/USBUART_episr.c ****             #if (CY_PSOC4 && USBUART_EP_MANAGEMENT_DMA_AUTO)
 859:Generated_Source\PSoC4/USBUART_episr.c ****                 /* Handle DMA completion event for OUT endpoints. */
 860:Generated_Source\PSoC4/USBUART_episr.c ****                 if (0u != (epStatus & USBUART_ARB_EPX_INT_DMA_TERMIN))
 861:Generated_Source\PSoC4/USBUART_episr.c ****                 {
 862:Generated_Source\PSoC4/USBUART_episr.c ****                     uint32 channelNum = USBUART_DmaChan[ep];
 863:Generated_Source\PSoC4/USBUART_episr.c **** 
 864:Generated_Source\PSoC4/USBUART_episr.c ****                     /* Restore burst counter for endpoint. */
 865:Generated_Source\PSoC4/USBUART_episr.c ****                     USBUART_DmaEpBurstCnt[ep] = USBUART_DMA_GET_BURST_CNT(USBUART_DmaEpBurstCntBack
 866:Generated_Source\PSoC4/USBUART_episr.c **** 
 867:Generated_Source\PSoC4/USBUART_episr.c ****                     /* Disable DMA channel to restore descriptor configuration. The on-going transf
 868:Generated_Source\PSoC4/USBUART_episr.c ****                     USBUART_CyDmaChDisable(channelNum);
 869:Generated_Source\PSoC4/USBUART_episr.c **** 
 870:Generated_Source\PSoC4/USBUART_episr.c ****                     /* Generate DMA tr_out signal to notify USB IP that DMA is done. This signal is
 871:Generated_Source\PSoC4/USBUART_episr.c ****                     * when transfer was aborted (it occurs when host writes less bytes than buffer 
 872:Generated_Source\PSoC4/USBUART_episr.c ****                     */
 873:Generated_Source\PSoC4/USBUART_episr.c ****                     USBUART_CyDmaTriggerOut(USBUART_DmaBurstEndOut[ep]);
 874:Generated_Source\PSoC4/USBUART_episr.c **** 
 875:Generated_Source\PSoC4/USBUART_episr.c ****                     /* Restore destination address for output endpoint. */
 876:Generated_Source\PSoC4/USBUART_episr.c ****                     USBUART_CyDmaSetDstAddress(channelNum, USBUART_DMA_DESCR0, (void*) ((uint32) US
 877:Generated_Source\PSoC4/USBUART_episr.c ****                     USBUART_CyDmaSetDstAddress(channelNum, USBUART_DMA_DESCR1, (void*) ((uint32) US
 878:Generated_Source\PSoC4/USBUART_episr.c ****                                                                                                    
 879:Generated_Source\PSoC4/USBUART_episr.c **** 
 880:Generated_Source\PSoC4/USBUART_episr.c ****                     /* Restore number of data elements to transfer which was adjusted for last burs
 881:Generated_Source\PSoC4/USBUART_episr.c ****                     if (0u != (USBUART_DmaEpLastBurstEl[ep] & USBUART_DMA_DESCR_REVERT))
 882:Generated_Source\PSoC4/USBUART_episr.c ****                     {
 883:Generated_Source\PSoC4/USBUART_episr.c ****                         USBUART_CyDmaSetNumDataElements(channelNum, (USBUART_DmaEpLastBurstEl[ep] >
 884:Generated_Source\PSoC4/USBUART_episr.c ****                                                                              USBUART_DMA_GET_MAX_EL
 885:Generated_Source\PSoC4/USBUART_episr.c ****                     }
 886:Generated_Source\PSoC4/USBUART_episr.c **** 
 887:Generated_Source\PSoC4/USBUART_episr.c ****                     /* Validate descriptor 0 and 1 (also reset current state). Command to start wit
 888:Generated_Source\PSoC4/USBUART_episr.c ****                     USBUART_CyDmaValidateDescriptor(channelNum, USBUART_DMA_DESCR0);
 889:Generated_Source\PSoC4/USBUART_episr.c ****                     if (USBUART_DmaEpBurstCntBackup[ep] > 1u)
 890:Generated_Source\PSoC4/USBUART_episr.c ****                     {
 891:Generated_Source\PSoC4/USBUART_episr.c ****                         USBUART_CyDmaValidateDescriptor(channelNum, USBUART_DMA_DESCR1);
 892:Generated_Source\PSoC4/USBUART_episr.c ****                     }
ARM GAS  C:\Users\essele\AppData\Local\Temp\cc4YPBQv.s 			page 21


 893:Generated_Source\PSoC4/USBUART_episr.c ****                     USBUART_CyDmaSetDescriptor0Next(channelNum);
 894:Generated_Source\PSoC4/USBUART_episr.c **** 
 895:Generated_Source\PSoC4/USBUART_episr.c ****                     /* Enable DMA channel: configuration complete. */
 896:Generated_Source\PSoC4/USBUART_episr.c ****                     USBUART_CyDmaChEnable(channelNum);
 897:Generated_Source\PSoC4/USBUART_episr.c ****                     
 898:Generated_Source\PSoC4/USBUART_episr.c ****                     
 899:Generated_Source\PSoC4/USBUART_episr.c ****                     /* Read CR0 register to clear SIE lock. */
 900:Generated_Source\PSoC4/USBUART_episr.c ****                     (void) USBUART_SIE_EP_BASE.sieEp[ep].epCr0;
 901:Generated_Source\PSoC4/USBUART_episr.c ****                     
 902:Generated_Source\PSoC4/USBUART_episr.c ****                     /* Toggle all endpoint types except ISOC. */
 903:Generated_Source\PSoC4/USBUART_episr.c ****                     if (USBUART_GET_EP_TYPE(ep) != USBUART_EP_TYPE_ISOC)
 904:Generated_Source\PSoC4/USBUART_episr.c ****                     {
 905:Generated_Source\PSoC4/USBUART_episr.c ****                         USBUART_EP[ep].epToggle ^= USBUART_EPX_CNT_DATA_TOGGLE;
 906:Generated_Source\PSoC4/USBUART_episr.c ****                     }
 907:Generated_Source\PSoC4/USBUART_episr.c ****             
 908:Generated_Source\PSoC4/USBUART_episr.c ****                     /* Notify user that data has been copied from endpoint buffer. */
 909:Generated_Source\PSoC4/USBUART_episr.c ****                     USBUART_EP[ep].apiEpState = USBUART_EVENT_PENDING;
 910:Generated_Source\PSoC4/USBUART_episr.c ****                     
 911:Generated_Source\PSoC4/USBUART_episr.c ****                 #if (defined(USBUART_ENABLE_MIDI_STREAMING) && \
 912:Generated_Source\PSoC4/USBUART_episr.c ****                     !defined(USBUART_MAIN_SERVICE_MIDI_OUT) && USBUART_ISR_SERVICE_MIDI_OUT)
 913:Generated_Source\PSoC4/USBUART_episr.c ****                     if (USBUART_midi_out_ep == ep)
 914:Generated_Source\PSoC4/USBUART_episr.c ****                     {
 915:Generated_Source\PSoC4/USBUART_episr.c ****                         USBUART_MIDI_OUT_Service();
 916:Generated_Source\PSoC4/USBUART_episr.c ****                     }
 917:Generated_Source\PSoC4/USBUART_episr.c ****                 #endif /* (USBUART_ISR_SERVICE_MIDI_OUT) */
 918:Generated_Source\PSoC4/USBUART_episr.c ****                 }
 919:Generated_Source\PSoC4/USBUART_episr.c ****             #endif /* (CY_PSOC4 && USBUART_EP_MANAGEMENT_DMA_AUTO) */
 920:Generated_Source\PSoC4/USBUART_episr.c **** 
 921:Generated_Source\PSoC4/USBUART_episr.c **** 
 922:Generated_Source\PSoC4/USBUART_episr.c ****                 /* `#START ARB_USER_CODE` Place your code here for handle Buffer Underflow/Overflow
 923:Generated_Source\PSoC4/USBUART_episr.c **** 
 924:Generated_Source\PSoC4/USBUART_episr.c ****                 /* `#END` */
 925:Generated_Source\PSoC4/USBUART_episr.c **** 
 926:Generated_Source\PSoC4/USBUART_episr.c ****             #ifdef USBUART_ARB_ISR_CALLBACK
 927:Generated_Source\PSoC4/USBUART_episr.c ****                 USBUART_ARB_ISR_Callback(ep, epStatus);
 928:Generated_Source\PSoC4/USBUART_episr.c ****             #endif /* (USBUART_ARB_ISR_CALLBACK) */
 929:Generated_Source\PSoC4/USBUART_episr.c **** 
 930:Generated_Source\PSoC4/USBUART_episr.c ****                 /* Clear serviced endpoint interrupt sources. */
 931:Generated_Source\PSoC4/USBUART_episr.c ****                 USBUART_ARB_EP_BASE.arbEp[ep].epSr = epStatus;
 932:Generated_Source\PSoC4/USBUART_episr.c ****             }
 933:Generated_Source\PSoC4/USBUART_episr.c **** 
 934:Generated_Source\PSoC4/USBUART_episr.c ****             ++ep;
 935:Generated_Source\PSoC4/USBUART_episr.c ****             arbIntrStatus >>= 1u;
 936:Generated_Source\PSoC4/USBUART_episr.c ****         }
 937:Generated_Source\PSoC4/USBUART_episr.c **** 
 938:Generated_Source\PSoC4/USBUART_episr.c ****         /* `#START ARB_END_USER_CODE` Place your code here */
 939:Generated_Source\PSoC4/USBUART_episr.c **** 
 940:Generated_Source\PSoC4/USBUART_episr.c ****         /* `#END` */
 941:Generated_Source\PSoC4/USBUART_episr.c **** 
 942:Generated_Source\PSoC4/USBUART_episr.c ****     #ifdef USBUART_ARB_ISR_EXIT_CALLBACK
 943:Generated_Source\PSoC4/USBUART_episr.c ****         USBUART_ARB_ISR_ExitCallback();
 944:Generated_Source\PSoC4/USBUART_episr.c ****     #endif /* (USBUART_ARB_ISR_EXIT_CALLBACK) */
 945:Generated_Source\PSoC4/USBUART_episr.c ****     }
 946:Generated_Source\PSoC4/USBUART_episr.c **** 
 947:Generated_Source\PSoC4/USBUART_episr.c **** #endif /*  (USBUART_ARB_ISR_ACTIVE && USBUART_EP_MANAGEMENT_DMA) */
 948:Generated_Source\PSoC4/USBUART_episr.c **** 
 949:Generated_Source\PSoC4/USBUART_episr.c **** 
ARM GAS  C:\Users\essele\AppData\Local\Temp\cc4YPBQv.s 			page 22


 950:Generated_Source\PSoC4/USBUART_episr.c **** #if (USBUART_EP_MANAGEMENT_DMA_AUTO)
 951:Generated_Source\PSoC4/USBUART_episr.c **** #if (CY_PSOC4)
 952:Generated_Source\PSoC4/USBUART_episr.c **** 
 953:Generated_Source\PSoC4/USBUART_episr.c ****     /******************************************************************************
 954:Generated_Source\PSoC4/USBUART_episr.c ****     * Function Name: USBUART_EPxDmaDone
 955:Generated_Source\PSoC4/USBUART_episr.c ****     ***************************************************************************//**
 956:Generated_Source\PSoC4/USBUART_episr.c ****     *
 957:Generated_Source\PSoC4/USBUART_episr.c ****     * \internal
 958:Generated_Source\PSoC4/USBUART_episr.c ****     *  Endpoint  DMA Done Interrupt Service Routine basic function .
 959:Generated_Source\PSoC4/USBUART_episr.c ****     *  
 960:Generated_Source\PSoC4/USBUART_episr.c ****     *  \param dmaCh
 961:Generated_Source\PSoC4/USBUART_episr.c ****     *  number of DMA channel
 962:Generated_Source\PSoC4/USBUART_episr.c ****     *  
 963:Generated_Source\PSoC4/USBUART_episr.c ****     *  \param ep
 964:Generated_Source\PSoC4/USBUART_episr.c ****     *  number of USB end point
 965:Generated_Source\PSoC4/USBUART_episr.c ****     *  
 966:Generated_Source\PSoC4/USBUART_episr.c ****     *  \param dmaDone
 967:Generated_Source\PSoC4/USBUART_episr.c ****     *  transfer completion flag
 968:Generated_Source\PSoC4/USBUART_episr.c ****     *  
 969:Generated_Source\PSoC4/USBUART_episr.c ****     *  \return
 970:Generated_Source\PSoC4/USBUART_episr.c ****     *   updated transfer completion flag
 971:Generated_Source\PSoC4/USBUART_episr.c ****     *
 972:Generated_Source\PSoC4/USBUART_episr.c ****     ******************************************************************************/
 973:Generated_Source\PSoC4/USBUART_episr.c ****     CY_INLINE static void USBUART_EPxDmaDone(uint8 dmaCh, uint8 ep)
 974:Generated_Source\PSoC4/USBUART_episr.c ****     {
 975:Generated_Source\PSoC4/USBUART_episr.c ****         uint32 nextAddr;
 976:Generated_Source\PSoC4/USBUART_episr.c **** 
 977:Generated_Source\PSoC4/USBUART_episr.c ****         /* Manage data elements which remain to transfer. */
 978:Generated_Source\PSoC4/USBUART_episr.c ****         if (0u != USBUART_DmaEpBurstCnt[ep])
 979:Generated_Source\PSoC4/USBUART_episr.c ****         {
 980:Generated_Source\PSoC4/USBUART_episr.c ****             if(USBUART_DmaEpBurstCnt[ep] <= 2u)
 981:Generated_Source\PSoC4/USBUART_episr.c ****             {
 982:Generated_Source\PSoC4/USBUART_episr.c ****                 /* Adjust length of last burst. */
 983:Generated_Source\PSoC4/USBUART_episr.c ****                 USBUART_CyDmaSetNumDataElements(dmaCh,
 984:Generated_Source\PSoC4/USBUART_episr.c ****                                                     ((uint32) USBUART_DmaEpLastBurstEl[ep] >> USBUA
 985:Generated_Source\PSoC4/USBUART_episr.c ****                                                     ((uint32) USBUART_DmaEpLastBurstEl[ep] &  USBUA
 986:Generated_Source\PSoC4/USBUART_episr.c ****             }
 987:Generated_Source\PSoC4/USBUART_episr.c ****             
 988:Generated_Source\PSoC4/USBUART_episr.c **** 
 989:Generated_Source\PSoC4/USBUART_episr.c ****             /* Advance source for input endpoint or destination for output endpoint. */
 990:Generated_Source\PSoC4/USBUART_episr.c ****             if (0u != (USBUART_EP[ep].addr & USBUART_DIR_IN))
 991:Generated_Source\PSoC4/USBUART_episr.c ****             {
 992:Generated_Source\PSoC4/USBUART_episr.c ****                 /* Change source for descriptor 0. */
 993:Generated_Source\PSoC4/USBUART_episr.c ****                 nextAddr = (uint32) USBUART_CyDmaGetSrcAddress(dmaCh, USBUART_DMA_DESCR0);
 994:Generated_Source\PSoC4/USBUART_episr.c ****                 nextAddr += (2u * USBUART_DMA_BYTES_PER_BURST);
 995:Generated_Source\PSoC4/USBUART_episr.c ****                 USBUART_CyDmaSetSrcAddress(dmaCh, USBUART_DMA_DESCR0, (void *) nextAddr);
 996:Generated_Source\PSoC4/USBUART_episr.c **** 
 997:Generated_Source\PSoC4/USBUART_episr.c ****                 /* Change source for descriptor 1. */
 998:Generated_Source\PSoC4/USBUART_episr.c ****                 nextAddr += USBUART_DMA_BYTES_PER_BURST;
 999:Generated_Source\PSoC4/USBUART_episr.c ****                 USBUART_CyDmaSetSrcAddress(dmaCh, USBUART_DMA_DESCR1, (void *) nextAddr);
1000:Generated_Source\PSoC4/USBUART_episr.c ****             }
1001:Generated_Source\PSoC4/USBUART_episr.c ****             else
1002:Generated_Source\PSoC4/USBUART_episr.c ****             {
1003:Generated_Source\PSoC4/USBUART_episr.c ****                 /* Change destination for descriptor 0. */
1004:Generated_Source\PSoC4/USBUART_episr.c ****                 nextAddr  = (uint32) USBUART_CyDmaGetDstAddress(dmaCh, USBUART_DMA_DESCR0);
1005:Generated_Source\PSoC4/USBUART_episr.c ****                 nextAddr += (2u * USBUART_DMA_BYTES_PER_BURST);
1006:Generated_Source\PSoC4/USBUART_episr.c ****                 USBUART_CyDmaSetDstAddress(dmaCh, USBUART_DMA_DESCR0, (void *) nextAddr);
ARM GAS  C:\Users\essele\AppData\Local\Temp\cc4YPBQv.s 			page 23


1007:Generated_Source\PSoC4/USBUART_episr.c **** 
1008:Generated_Source\PSoC4/USBUART_episr.c ****                 /* Change destination for descriptor 1. */
1009:Generated_Source\PSoC4/USBUART_episr.c ****                 nextAddr += USBUART_DMA_BYTES_PER_BURST;
1010:Generated_Source\PSoC4/USBUART_episr.c ****                 USBUART_CyDmaSetDstAddress(dmaCh, USBUART_DMA_DESCR1, (void *) nextAddr);
1011:Generated_Source\PSoC4/USBUART_episr.c ****             }
1012:Generated_Source\PSoC4/USBUART_episr.c **** 
1013:Generated_Source\PSoC4/USBUART_episr.c ****             /* Enable DMA to execute transfer as it was disabled because there were no valid descri
1014:Generated_Source\PSoC4/USBUART_episr.c ****             USBUART_CyDmaValidateDescriptor(dmaCh, USBUART_DMA_DESCR0);
1015:Generated_Source\PSoC4/USBUART_episr.c ****             
1016:Generated_Source\PSoC4/USBUART_episr.c ****             --USBUART_DmaEpBurstCnt[ep];
1017:Generated_Source\PSoC4/USBUART_episr.c ****             if (0u != USBUART_DmaEpBurstCnt[ep])
1018:Generated_Source\PSoC4/USBUART_episr.c ****             {
1019:Generated_Source\PSoC4/USBUART_episr.c ****                 USBUART_CyDmaValidateDescriptor(dmaCh, USBUART_DMA_DESCR1);
1020:Generated_Source\PSoC4/USBUART_episr.c ****                 --USBUART_DmaEpBurstCnt[ep];
1021:Generated_Source\PSoC4/USBUART_episr.c ****             }
1022:Generated_Source\PSoC4/USBUART_episr.c ****             
1023:Generated_Source\PSoC4/USBUART_episr.c ****             USBUART_CyDmaChEnable (dmaCh);
1024:Generated_Source\PSoC4/USBUART_episr.c ****             USBUART_CyDmaTriggerIn(USBUART_DmaReqOut[ep]);
1025:Generated_Source\PSoC4/USBUART_episr.c ****         }
1026:Generated_Source\PSoC4/USBUART_episr.c ****         else
1027:Generated_Source\PSoC4/USBUART_episr.c ****         {
1028:Generated_Source\PSoC4/USBUART_episr.c ****             /* No data to transfer. False DMA trig. Ignore.  */
1029:Generated_Source\PSoC4/USBUART_episr.c ****         }
1030:Generated_Source\PSoC4/USBUART_episr.c **** 
1031:Generated_Source\PSoC4/USBUART_episr.c ****     }
1032:Generated_Source\PSoC4/USBUART_episr.c **** 
1033:Generated_Source\PSoC4/USBUART_episr.c ****     #if (USBUART_DMA1_ACTIVE)
1034:Generated_Source\PSoC4/USBUART_episr.c ****         /******************************************************************************
1035:Generated_Source\PSoC4/USBUART_episr.c ****         * Function Name: USBUART_EP1_DMA_DONE_ISR
1036:Generated_Source\PSoC4/USBUART_episr.c ****         ***************************************************************************//**
1037:Generated_Source\PSoC4/USBUART_episr.c ****         *
1038:Generated_Source\PSoC4/USBUART_episr.c ****         *  Endpoint 1 DMA Done Interrupt Service Routine.
1039:Generated_Source\PSoC4/USBUART_episr.c ****         *
1040:Generated_Source\PSoC4/USBUART_episr.c ****         *
1041:Generated_Source\PSoC4/USBUART_episr.c ****         ******************************************************************************/
1042:Generated_Source\PSoC4/USBUART_episr.c ****         void USBUART_EP1_DMA_DONE_ISR(void)
1043:Generated_Source\PSoC4/USBUART_episr.c ****         {
1044:Generated_Source\PSoC4/USBUART_episr.c **** 
1045:Generated_Source\PSoC4/USBUART_episr.c ****             USBUART_EPxDmaDone((uint8)USBUART_EP1_DMA_CH,
1046:Generated_Source\PSoC4/USBUART_episr.c ****                                                   USBUART_EP1);
1047:Generated_Source\PSoC4/USBUART_episr.c ****                 
1048:Generated_Source\PSoC4/USBUART_episr.c ****         }
1049:Generated_Source\PSoC4/USBUART_episr.c ****     #endif /* (USBUART_DMA1_ACTIVE) */
1050:Generated_Source\PSoC4/USBUART_episr.c **** 
1051:Generated_Source\PSoC4/USBUART_episr.c **** 
1052:Generated_Source\PSoC4/USBUART_episr.c ****     #if (USBUART_DMA2_ACTIVE)
1053:Generated_Source\PSoC4/USBUART_episr.c ****         /******************************************************************************
1054:Generated_Source\PSoC4/USBUART_episr.c ****         * Function Name: USBUART_EP2_DMA_DONE_ISR
1055:Generated_Source\PSoC4/USBUART_episr.c ****         ***************************************************************************//**
1056:Generated_Source\PSoC4/USBUART_episr.c ****         *
1057:Generated_Source\PSoC4/USBUART_episr.c ****         *  Endpoint 2 DMA Done Interrupt Service Routine.
1058:Generated_Source\PSoC4/USBUART_episr.c ****         *
1059:Generated_Source\PSoC4/USBUART_episr.c ****         *
1060:Generated_Source\PSoC4/USBUART_episr.c ****         ******************************************************************************/
1061:Generated_Source\PSoC4/USBUART_episr.c ****         void USBUART_EP2_DMA_DONE_ISR(void)
1062:Generated_Source\PSoC4/USBUART_episr.c ****         {
1063:Generated_Source\PSoC4/USBUART_episr.c **** 
ARM GAS  C:\Users\essele\AppData\Local\Temp\cc4YPBQv.s 			page 24


1064:Generated_Source\PSoC4/USBUART_episr.c ****             USBUART_EPxDmaDone((uint8)USBUART_EP2_DMA_CH,
1065:Generated_Source\PSoC4/USBUART_episr.c ****                                                   USBUART_EP2);
1066:Generated_Source\PSoC4/USBUART_episr.c ****         }
1067:Generated_Source\PSoC4/USBUART_episr.c ****     #endif /* (USBUART_DMA2_ACTIVE) */
1068:Generated_Source\PSoC4/USBUART_episr.c **** 
1069:Generated_Source\PSoC4/USBUART_episr.c **** 
1070:Generated_Source\PSoC4/USBUART_episr.c ****     #if (USBUART_DMA3_ACTIVE)
1071:Generated_Source\PSoC4/USBUART_episr.c ****         /******************************************************************************
1072:Generated_Source\PSoC4/USBUART_episr.c ****         * Function Name: USBUART_EP3_DMA_DONE_ISR
1073:Generated_Source\PSoC4/USBUART_episr.c ****         ***************************************************************************//**
1074:Generated_Source\PSoC4/USBUART_episr.c ****         *
1075:Generated_Source\PSoC4/USBUART_episr.c ****         *  Endpoint 3 DMA Done Interrupt Service Routine.
1076:Generated_Source\PSoC4/USBUART_episr.c ****         *
1077:Generated_Source\PSoC4/USBUART_episr.c ****         *
1078:Generated_Source\PSoC4/USBUART_episr.c ****         ******************************************************************************/
1079:Generated_Source\PSoC4/USBUART_episr.c ****         void USBUART_EP3_DMA_DONE_ISR(void)
1080:Generated_Source\PSoC4/USBUART_episr.c ****         {
1081:Generated_Source\PSoC4/USBUART_episr.c **** 
1082:Generated_Source\PSoC4/USBUART_episr.c ****             USBUART_EPxDmaDone((uint8)USBUART_EP3_DMA_CH,
1083:Generated_Source\PSoC4/USBUART_episr.c ****                                                   USBUART_EP3);
1084:Generated_Source\PSoC4/USBUART_episr.c ****         }
1085:Generated_Source\PSoC4/USBUART_episr.c ****     #endif /* (USBUART_DMA3_ACTIVE) */
1086:Generated_Source\PSoC4/USBUART_episr.c **** 
1087:Generated_Source\PSoC4/USBUART_episr.c **** 
1088:Generated_Source\PSoC4/USBUART_episr.c ****     #if (USBUART_DMA4_ACTIVE)
1089:Generated_Source\PSoC4/USBUART_episr.c ****         /******************************************************************************
1090:Generated_Source\PSoC4/USBUART_episr.c ****         * Function Name: USBUART_EP4_DMA_DONE_ISR
1091:Generated_Source\PSoC4/USBUART_episr.c ****         ***************************************************************************//**
1092:Generated_Source\PSoC4/USBUART_episr.c ****         *
1093:Generated_Source\PSoC4/USBUART_episr.c ****         *  Endpoint 4 DMA Done Interrupt Service Routine.
1094:Generated_Source\PSoC4/USBUART_episr.c ****         *
1095:Generated_Source\PSoC4/USBUART_episr.c ****         *
1096:Generated_Source\PSoC4/USBUART_episr.c ****         ******************************************************************************/
1097:Generated_Source\PSoC4/USBUART_episr.c ****         void USBUART_EP4_DMA_DONE_ISR(void)
1098:Generated_Source\PSoC4/USBUART_episr.c ****         {
1099:Generated_Source\PSoC4/USBUART_episr.c **** 
1100:Generated_Source\PSoC4/USBUART_episr.c ****             USBUART_EPxDmaDone((uint8)USBUART_EP4_DMA_CH,
1101:Generated_Source\PSoC4/USBUART_episr.c ****                                                   USBUART_EP4);
1102:Generated_Source\PSoC4/USBUART_episr.c ****         }
1103:Generated_Source\PSoC4/USBUART_episr.c ****     #endif /* (USBUART_DMA4_ACTIVE) */
1104:Generated_Source\PSoC4/USBUART_episr.c **** 
1105:Generated_Source\PSoC4/USBUART_episr.c **** 
1106:Generated_Source\PSoC4/USBUART_episr.c ****     #if (USBUART_DMA5_ACTIVE)
1107:Generated_Source\PSoC4/USBUART_episr.c ****         /******************************************************************************
1108:Generated_Source\PSoC4/USBUART_episr.c ****         * Function Name: USBUART_EP5_DMA_DONE_ISR
1109:Generated_Source\PSoC4/USBUART_episr.c ****         ***************************************************************************//**
1110:Generated_Source\PSoC4/USBUART_episr.c ****         *
1111:Generated_Source\PSoC4/USBUART_episr.c ****         *  Endpoint 5 DMA Done Interrupt Service Routine.
1112:Generated_Source\PSoC4/USBUART_episr.c ****         *
1113:Generated_Source\PSoC4/USBUART_episr.c ****         *
1114:Generated_Source\PSoC4/USBUART_episr.c ****         ******************************************************************************/
1115:Generated_Source\PSoC4/USBUART_episr.c ****         void USBUART_EP5_DMA_DONE_ISR(void)
1116:Generated_Source\PSoC4/USBUART_episr.c ****         {
1117:Generated_Source\PSoC4/USBUART_episr.c **** 
1118:Generated_Source\PSoC4/USBUART_episr.c ****             USBUART_EPxDmaDone((uint8)USBUART_EP5_DMA_CH,
1119:Generated_Source\PSoC4/USBUART_episr.c ****                                                   USBUART_EP5);
1120:Generated_Source\PSoC4/USBUART_episr.c ****         }
ARM GAS  C:\Users\essele\AppData\Local\Temp\cc4YPBQv.s 			page 25


1121:Generated_Source\PSoC4/USBUART_episr.c ****     #endif /* (USBUART_DMA5_ACTIVE) */
1122:Generated_Source\PSoC4/USBUART_episr.c **** 
1123:Generated_Source\PSoC4/USBUART_episr.c **** 
1124:Generated_Source\PSoC4/USBUART_episr.c ****     #if (USBUART_DMA6_ACTIVE)
1125:Generated_Source\PSoC4/USBUART_episr.c ****         /******************************************************************************
1126:Generated_Source\PSoC4/USBUART_episr.c ****         * Function Name: USBUART_EP6_DMA_DONE_ISR
1127:Generated_Source\PSoC4/USBUART_episr.c ****         ***************************************************************************//**
1128:Generated_Source\PSoC4/USBUART_episr.c ****         *
1129:Generated_Source\PSoC4/USBUART_episr.c ****         *  Endpoint 6 DMA Done Interrupt Service Routine.
1130:Generated_Source\PSoC4/USBUART_episr.c ****         *
1131:Generated_Source\PSoC4/USBUART_episr.c ****         *
1132:Generated_Source\PSoC4/USBUART_episr.c ****         ******************************************************************************/
1133:Generated_Source\PSoC4/USBUART_episr.c ****         void USBUART_EP6_DMA_DONE_ISR(void)
1134:Generated_Source\PSoC4/USBUART_episr.c ****         {
1135:Generated_Source\PSoC4/USBUART_episr.c **** 
1136:Generated_Source\PSoC4/USBUART_episr.c ****             USBUART_EPxDmaDone((uint8)USBUART_EP6_DMA_CH,
1137:Generated_Source\PSoC4/USBUART_episr.c ****                                                   USBUART_EP6);
1138:Generated_Source\PSoC4/USBUART_episr.c ****         }
1139:Generated_Source\PSoC4/USBUART_episr.c ****     #endif /* (USBUART_DMA6_ACTIVE) */
1140:Generated_Source\PSoC4/USBUART_episr.c **** 
1141:Generated_Source\PSoC4/USBUART_episr.c **** 
1142:Generated_Source\PSoC4/USBUART_episr.c ****     #if (USBUART_DMA7_ACTIVE)
1143:Generated_Source\PSoC4/USBUART_episr.c ****         /******************************************************************************
1144:Generated_Source\PSoC4/USBUART_episr.c ****         * Function Name: USBUART_EP7_DMA_DONE_ISR
1145:Generated_Source\PSoC4/USBUART_episr.c ****         ***************************************************************************//**
1146:Generated_Source\PSoC4/USBUART_episr.c ****         *
1147:Generated_Source\PSoC4/USBUART_episr.c ****         *  Endpoint 7 DMA Done Interrupt Service Routine.
1148:Generated_Source\PSoC4/USBUART_episr.c ****         *
1149:Generated_Source\PSoC4/USBUART_episr.c ****         *
1150:Generated_Source\PSoC4/USBUART_episr.c ****         ******************************************************************************/
1151:Generated_Source\PSoC4/USBUART_episr.c ****         void USBUART_EP7_DMA_DONE_ISR(void)
1152:Generated_Source\PSoC4/USBUART_episr.c ****         {
1153:Generated_Source\PSoC4/USBUART_episr.c **** 
1154:Generated_Source\PSoC4/USBUART_episr.c ****             USBUART_EPxDmaDone((uint8)USBUART_EP7_DMA_CH,
1155:Generated_Source\PSoC4/USBUART_episr.c ****                                                   USBUART_EP7);
1156:Generated_Source\PSoC4/USBUART_episr.c ****         }
1157:Generated_Source\PSoC4/USBUART_episr.c ****     #endif /* (USBUART_DMA7_ACTIVE) */
1158:Generated_Source\PSoC4/USBUART_episr.c **** 
1159:Generated_Source\PSoC4/USBUART_episr.c **** 
1160:Generated_Source\PSoC4/USBUART_episr.c ****     #if (USBUART_DMA8_ACTIVE)
1161:Generated_Source\PSoC4/USBUART_episr.c ****         /******************************************************************************
1162:Generated_Source\PSoC4/USBUART_episr.c ****         * Function Name: USBUART_EP8_DMA_DONE_ISR
1163:Generated_Source\PSoC4/USBUART_episr.c ****         ***************************************************************************//**
1164:Generated_Source\PSoC4/USBUART_episr.c ****         *
1165:Generated_Source\PSoC4/USBUART_episr.c ****         *  Endpoint 8 DMA Done Interrupt Service Routine.
1166:Generated_Source\PSoC4/USBUART_episr.c ****         *
1167:Generated_Source\PSoC4/USBUART_episr.c ****         *
1168:Generated_Source\PSoC4/USBUART_episr.c ****         ******************************************************************************/
1169:Generated_Source\PSoC4/USBUART_episr.c ****         void USBUART_EP8_DMA_DONE_ISR(void)
1170:Generated_Source\PSoC4/USBUART_episr.c ****         {
1171:Generated_Source\PSoC4/USBUART_episr.c **** 
1172:Generated_Source\PSoC4/USBUART_episr.c ****             USBUART_EPxDmaDone((uint8)USBUART_EP8_DMA_CH,
1173:Generated_Source\PSoC4/USBUART_episr.c ****                                                   USBUART_EP8);
1174:Generated_Source\PSoC4/USBUART_episr.c ****         }
1175:Generated_Source\PSoC4/USBUART_episr.c ****     #endif /* (USBUART_DMA8_ACTIVE) */
1176:Generated_Source\PSoC4/USBUART_episr.c **** 
1177:Generated_Source\PSoC4/USBUART_episr.c **** 
ARM GAS  C:\Users\essele\AppData\Local\Temp\cc4YPBQv.s 			page 26


1178:Generated_Source\PSoC4/USBUART_episr.c **** #else
1179:Generated_Source\PSoC4/USBUART_episr.c ****     #if (USBUART_EP_DMA_AUTO_OPT == 0u)
1180:Generated_Source\PSoC4/USBUART_episr.c ****         /******************************************************************************
1181:Generated_Source\PSoC4/USBUART_episr.c ****         * Function Name: USBUART_EP_DMA_DONE_ISR
1182:Generated_Source\PSoC4/USBUART_episr.c ****         ***************************************************************************//**
1183:Generated_Source\PSoC4/USBUART_episr.c ****         *
1184:Generated_Source\PSoC4/USBUART_episr.c ****         *  DMA Done Interrupt Service Routine.
1185:Generated_Source\PSoC4/USBUART_episr.c ****         *
1186:Generated_Source\PSoC4/USBUART_episr.c ****         *
1187:Generated_Source\PSoC4/USBUART_episr.c ****         ******************************************************************************/
1188:Generated_Source\PSoC4/USBUART_episr.c ****         CY_ISR(USBUART_EP_DMA_DONE_ISR)
1189:Generated_Source\PSoC4/USBUART_episr.c ****         {
1190:Generated_Source\PSoC4/USBUART_episr.c ****             uint8 int8Status;
1191:Generated_Source\PSoC4/USBUART_episr.c ****             uint8 int17Status;
1192:Generated_Source\PSoC4/USBUART_episr.c ****             uint8 ep_status;
1193:Generated_Source\PSoC4/USBUART_episr.c ****             uint8 ep = USBUART_EP1;
1194:Generated_Source\PSoC4/USBUART_episr.c **** 
1195:Generated_Source\PSoC4/USBUART_episr.c ****         #ifdef USBUART_EP_DMA_DONE_ISR_ENTRY_CALLBACK
1196:Generated_Source\PSoC4/USBUART_episr.c ****             USBUART_EP_DMA_DONE_ISR_EntryCallback();
1197:Generated_Source\PSoC4/USBUART_episr.c ****         #endif /* (USBUART_EP_DMA_DONE_ISR_ENTRY_CALLBACK) */
1198:Generated_Source\PSoC4/USBUART_episr.c **** 
1199:Generated_Source\PSoC4/USBUART_episr.c ****             /* `#START EP_DMA_DONE_BEGIN_USER_CODE` Place your code here */
1200:Generated_Source\PSoC4/USBUART_episr.c **** 
1201:Generated_Source\PSoC4/USBUART_episr.c ****             /* `#END` */
1202:Generated_Source\PSoC4/USBUART_episr.c **** 
1203:Generated_Source\PSoC4/USBUART_episr.c ****             /* Read clear on read status register with EP source of interrupt. */
1204:Generated_Source\PSoC4/USBUART_episr.c ****             int17Status = USBUART_EP17_DMA_Done_SR_Read() & USBUART_EP17_SR_MASK;
1205:Generated_Source\PSoC4/USBUART_episr.c ****             int8Status  = USBUART_EP8_DMA_Done_SR_Read()  & USBUART_EP8_SR_MASK;
1206:Generated_Source\PSoC4/USBUART_episr.c **** 
1207:Generated_Source\PSoC4/USBUART_episr.c ****             while (int8Status != 0u)
1208:Generated_Source\PSoC4/USBUART_episr.c ****             {
1209:Generated_Source\PSoC4/USBUART_episr.c ****                 while (int17Status != 0u)
1210:Generated_Source\PSoC4/USBUART_episr.c ****                 {
1211:Generated_Source\PSoC4/USBUART_episr.c ****                     if ((int17Status & 1u) != 0u)  /* If EpX interrupt present. */
1212:Generated_Source\PSoC4/USBUART_episr.c ****                     {
1213:Generated_Source\PSoC4/USBUART_episr.c ****                         /* Read Endpoint Status Register. */
1214:Generated_Source\PSoC4/USBUART_episr.c ****                         ep_status = USBUART_ARB_EP_BASE.arbEp[ep].epSr;
1215:Generated_Source\PSoC4/USBUART_episr.c **** 
1216:Generated_Source\PSoC4/USBUART_episr.c ****                         if ((0u == (ep_status & USBUART_ARB_EPX_SR_IN_BUF_FULL)) &&
1217:Generated_Source\PSoC4/USBUART_episr.c ****                             (0u ==USBUART_inBufFull[ep]))
1218:Generated_Source\PSoC4/USBUART_episr.c ****                         {
1219:Generated_Source\PSoC4/USBUART_episr.c ****                             /* `#START EP_DMA_DONE_USER_CODE` Place your code here */
1220:Generated_Source\PSoC4/USBUART_episr.c **** 
1221:Generated_Source\PSoC4/USBUART_episr.c ****                             /* `#END` */
1222:Generated_Source\PSoC4/USBUART_episr.c **** 
1223:Generated_Source\PSoC4/USBUART_episr.c ****                         #ifdef USBUART_EP_DMA_DONE_ISR_CALLBACK
1224:Generated_Source\PSoC4/USBUART_episr.c ****                             USBUART_EP_DMA_DONE_ISR_Callback();
1225:Generated_Source\PSoC4/USBUART_episr.c ****                         #endif /* (USBUART_EP_DMA_DONE_ISR_CALLBACK) */
1226:Generated_Source\PSoC4/USBUART_episr.c **** 
1227:Generated_Source\PSoC4/USBUART_episr.c ****                             /* Transfer again 2 last bytes into pre-fetch endpoint area. */
1228:Generated_Source\PSoC4/USBUART_episr.c ****                             USBUART_ARB_EP_BASE.arbEp[ep].rwWaMsb = 0u;
1229:Generated_Source\PSoC4/USBUART_episr.c ****                             USBUART_ARB_EP_BASE.arbEp[ep].rwWa = (USBUART_DMA_BYTES_PER_BURST * ep)
1230:Generated_Source\PSoC4/USBUART_episr.c ****                             USBUART_LoadNextInEP(ep, 1u);
1231:Generated_Source\PSoC4/USBUART_episr.c **** 
1232:Generated_Source\PSoC4/USBUART_episr.c ****                             /* Set Data ready status to generate DMA request. */
1233:Generated_Source\PSoC4/USBUART_episr.c ****                             USBUART_ARB_EP_BASE.arbEp[ep].epCfg |= USBUART_ARB_EPX_CFG_IN_DATA_RDY;
1234:Generated_Source\PSoC4/USBUART_episr.c ****                         }
ARM GAS  C:\Users\essele\AppData\Local\Temp\cc4YPBQv.s 			page 27


1235:Generated_Source\PSoC4/USBUART_episr.c ****                     }
1236:Generated_Source\PSoC4/USBUART_episr.c **** 
1237:Generated_Source\PSoC4/USBUART_episr.c ****                     ep++;
1238:Generated_Source\PSoC4/USBUART_episr.c ****                     int17Status >>= 1u;
1239:Generated_Source\PSoC4/USBUART_episr.c ****                 }
1240:Generated_Source\PSoC4/USBUART_episr.c **** 
1241:Generated_Source\PSoC4/USBUART_episr.c ****                 int8Status >>= 1u;
1242:Generated_Source\PSoC4/USBUART_episr.c **** 
1243:Generated_Source\PSoC4/USBUART_episr.c ****                 if (int8Status != 0u)
1244:Generated_Source\PSoC4/USBUART_episr.c ****                 {
1245:Generated_Source\PSoC4/USBUART_episr.c ****                     /* Prepare pointer for EP8. */
1246:Generated_Source\PSoC4/USBUART_episr.c ****                     ep = USBUART_EP8;
1247:Generated_Source\PSoC4/USBUART_episr.c ****                     int17Status = int8Status & 0x01u;
1248:Generated_Source\PSoC4/USBUART_episr.c ****                 }
1249:Generated_Source\PSoC4/USBUART_episr.c ****             }
1250:Generated_Source\PSoC4/USBUART_episr.c **** 
1251:Generated_Source\PSoC4/USBUART_episr.c ****             /* `#START EP_DMA_DONE_END_USER_CODE` Place your code here */
1252:Generated_Source\PSoC4/USBUART_episr.c **** 
1253:Generated_Source\PSoC4/USBUART_episr.c ****             /* `#END` */
1254:Generated_Source\PSoC4/USBUART_episr.c **** 
1255:Generated_Source\PSoC4/USBUART_episr.c ****     #ifdef USBUART_EP_DMA_DONE_ISR_EXIT_CALLBACK
1256:Generated_Source\PSoC4/USBUART_episr.c ****         USBUART_EP_DMA_DONE_ISR_ExitCallback();
1257:Generated_Source\PSoC4/USBUART_episr.c ****     #endif /* (USBUART_EP_DMA_DONE_ISR_EXIT_CALLBACK) */
1258:Generated_Source\PSoC4/USBUART_episr.c ****         }
1259:Generated_Source\PSoC4/USBUART_episr.c ****     #endif /* (USBUART_EP_DMA_AUTO_OPT == 0u) */
1260:Generated_Source\PSoC4/USBUART_episr.c **** #endif /* (CY_PSOC4) */
1261:Generated_Source\PSoC4/USBUART_episr.c **** #endif /* (USBUART_EP_MANAGEMENT_DMA_AUTO) */
1262:Generated_Source\PSoC4/USBUART_episr.c **** 
1263:Generated_Source\PSoC4/USBUART_episr.c **** 
1264:Generated_Source\PSoC4/USBUART_episr.c **** #if (CY_PSOC4)
1265:Generated_Source\PSoC4/USBUART_episr.c ****     /***************************************************************************
1266:Generated_Source\PSoC4/USBUART_episr.c ****     * Function Name: USBUART_IntrHandler
1267:Generated_Source\PSoC4/USBUART_episr.c ****     ************************************************************************//**
1268:Generated_Source\PSoC4/USBUART_episr.c ****     *
1269:Generated_Source\PSoC4/USBUART_episr.c ****     *   Interrupt handler for Hi/Mid/Low ISRs.
1270:Generated_Source\PSoC4/USBUART_episr.c ****     *
1271:Generated_Source\PSoC4/USBUART_episr.c ****     *  regCause - The cause register of interrupt. One of the three variants:
1272:Generated_Source\PSoC4/USBUART_episr.c ****     *       USBUART_INTR_CAUSE_LO_REG - Low interrupts.
1273:Generated_Source\PSoC4/USBUART_episr.c ****     *       USBUART_INTR_CAUSE_MED_REG - Med interrupts.
1274:Generated_Source\PSoC4/USBUART_episr.c ****     *       USBUART_INTR_CAUSE_HI_REG - - High interrupts.
1275:Generated_Source\PSoC4/USBUART_episr.c ****     *
1276:Generated_Source\PSoC4/USBUART_episr.c ****     *
1277:Generated_Source\PSoC4/USBUART_episr.c ****     ***************************************************************************/
1278:Generated_Source\PSoC4/USBUART_episr.c ****     CY_INLINE static void USBUART_IntrHandler(uint32 intrCause)
1279:Generated_Source\PSoC4/USBUART_episr.c ****     {
1280:Generated_Source\PSoC4/USBUART_episr.c ****         /* Array of pointers to component interrupt handlers. */
1281:Generated_Source\PSoC4/USBUART_episr.c ****         static const cyisraddress USBUART_isrCallbacks[] =
1282:Generated_Source\PSoC4/USBUART_episr.c ****         {
1283:Generated_Source\PSoC4/USBUART_episr.c ****             &USBUART_SOF_ISR,
1284:Generated_Source\PSoC4/USBUART_episr.c ****             &USBUART_BUS_RESET_ISR,
1285:Generated_Source\PSoC4/USBUART_episr.c ****             &USBUART_EP_0_ISR,
1286:Generated_Source\PSoC4/USBUART_episr.c ****             NULL,
1287:Generated_Source\PSoC4/USBUART_episr.c ****             NULL,
1288:Generated_Source\PSoC4/USBUART_episr.c ****             &USBUART_EP_1_ISR,
1289:Generated_Source\PSoC4/USBUART_episr.c ****             &USBUART_EP_2_ISR,
1290:Generated_Source\PSoC4/USBUART_episr.c ****             &USBUART_EP_3_ISR,
1291:Generated_Source\PSoC4/USBUART_episr.c ****             NULL,
ARM GAS  C:\Users\essele\AppData\Local\Temp\cc4YPBQv.s 			page 28


1292:Generated_Source\PSoC4/USBUART_episr.c ****             NULL,
1293:Generated_Source\PSoC4/USBUART_episr.c ****             NULL,
1294:Generated_Source\PSoC4/USBUART_episr.c ****             NULL,
1295:Generated_Source\PSoC4/USBUART_episr.c ****             NULL,
1296:Generated_Source\PSoC4/USBUART_episr.c ****         };
1297:Generated_Source\PSoC4/USBUART_episr.c **** 
1298:Generated_Source\PSoC4/USBUART_episr.c ****         uint32 cbIdx = 0u;
1299:Generated_Source\PSoC4/USBUART_episr.c **** 
1300:Generated_Source\PSoC4/USBUART_episr.c ****         /* Check arbiter interrupt source first. */
1301:Generated_Source\PSoC4/USBUART_episr.c ****         if (0u != (intrCause & USBUART_INTR_CAUSE_ARB_INTR))
1302:Generated_Source\PSoC4/USBUART_episr.c ****         {
1303:Generated_Source\PSoC4/USBUART_episr.c ****             USBUART_isrCallbacks[USBUART_ARB_EP_INTR_NUM]();
1304:Generated_Source\PSoC4/USBUART_episr.c ****         }
1305:Generated_Source\PSoC4/USBUART_episr.c **** 
1306:Generated_Source\PSoC4/USBUART_episr.c ****         /* Check all other interrupt sources (except arbiter and resume). */
1307:Generated_Source\PSoC4/USBUART_episr.c ****         intrCause = (intrCause  & USBUART_INTR_CAUSE_CTRL_INTR_MASK) |
1308:Generated_Source\PSoC4/USBUART_episr.c ****                     ((intrCause & USBUART_INTR_CAUSE_EP1_8_INTR_MASK) >>
1309:Generated_Source\PSoC4/USBUART_episr.c ****                                   USBUART_INTR_CAUSE_EP_INTR_SHIFT);
1310:Generated_Source\PSoC4/USBUART_episr.c **** 
1311:Generated_Source\PSoC4/USBUART_episr.c ****         /* Call interrupt handlers for active interrupt sources. */
1312:Generated_Source\PSoC4/USBUART_episr.c ****         while (0u != intrCause)
1313:Generated_Source\PSoC4/USBUART_episr.c ****         {
1314:Generated_Source\PSoC4/USBUART_episr.c ****             if (0u != (intrCause & 0x1u))
1315:Generated_Source\PSoC4/USBUART_episr.c ****             {
1316:Generated_Source\PSoC4/USBUART_episr.c ****                  USBUART_isrCallbacks[cbIdx]();
1317:Generated_Source\PSoC4/USBUART_episr.c ****             }
1318:Generated_Source\PSoC4/USBUART_episr.c **** 
1319:Generated_Source\PSoC4/USBUART_episr.c ****             intrCause >>= 1u;
1320:Generated_Source\PSoC4/USBUART_episr.c ****             ++cbIdx;
1321:Generated_Source\PSoC4/USBUART_episr.c ****         }
1322:Generated_Source\PSoC4/USBUART_episr.c ****     }
1323:Generated_Source\PSoC4/USBUART_episr.c **** 
1324:Generated_Source\PSoC4/USBUART_episr.c **** 
1325:Generated_Source\PSoC4/USBUART_episr.c ****     /***************************************************************************
1326:Generated_Source\PSoC4/USBUART_episr.c ****     * Function Name: USBUART_INTR_HI_ISR
1327:Generated_Source\PSoC4/USBUART_episr.c ****     ************************************************************************//**
1328:Generated_Source\PSoC4/USBUART_episr.c ****     *
1329:Generated_Source\PSoC4/USBUART_episr.c ****     *   Interrupt Service Routine for the high group of the interrupt sources.
1330:Generated_Source\PSoC4/USBUART_episr.c ****     *
1331:Generated_Source\PSoC4/USBUART_episr.c ****     *
1332:Generated_Source\PSoC4/USBUART_episr.c ****     ***************************************************************************/
1333:Generated_Source\PSoC4/USBUART_episr.c ****     CY_ISR(USBUART_INTR_HI_ISR)
1334:Generated_Source\PSoC4/USBUART_episr.c ****     {
 249              		.loc 1 1334 0
 250              		.cfi_startproc
 251              		@ args = 0, pretend = 0, frame = 0
 252              		@ frame_needed = 0, uses_anonymous_args = 0
 253 0000 70B5     		push	{r4, r5, r6, lr}
 254              		.cfi_def_cfa_offset 16
 255              		.cfi_offset 4, -16
 256              		.cfi_offset 5, -12
 257              		.cfi_offset 6, -8
 258              		.cfi_offset 14, -4
1335:Generated_Source\PSoC4/USBUART_episr.c ****         USBUART_IntrHandler(USBUART_INTR_CAUSE_HI_REG);
 259              		.loc 1 1335 0
 260 0002 0D4B     		ldr	r3, .L24
 261 0004 1D68     		ldr	r5, [r3]
ARM GAS  C:\Users\essele\AppData\Local\Temp\cc4YPBQv.s 			page 29


 262              	.LVL1:
 263              	.LBB4:
 264              	.LBB5:
1301:Generated_Source\PSoC4/USBUART_episr.c ****         {
 265              		.loc 1 1301 0
 266 0006 2B06     		lsls	r3, r5, #24
 267 0008 01D5     		bpl	.L20
1303:Generated_Source\PSoC4/USBUART_episr.c ****         }
 268              		.loc 1 1303 0
 269 000a 0023     		movs	r3, #0
 270 000c 9847     		blx	r3
 271              	.LVL2:
 272              	.L20:
1307:Generated_Source\PSoC4/USBUART_episr.c ****                     ((intrCause & USBUART_INTR_CAUSE_EP1_8_INTR_MASK) >>
 273              		.loc 1 1307 0
 274 000e 0F24     		movs	r4, #15
 275 0010 2200     		movs	r2, r4
 276 0012 2A40     		ands	r2, r5
1308:Generated_Source\PSoC4/USBUART_episr.c ****                                   USBUART_INTR_CAUSE_EP_INTR_SHIFT);
 277              		.loc 1 1308 0
 278 0014 EC08     		lsrs	r4, r5, #3
 279 0016 FF23     		movs	r3, #255
 280 0018 5B01     		lsls	r3, r3, #5
 281 001a 1C40     		ands	r4, r3
1307:Generated_Source\PSoC4/USBUART_episr.c ****                     ((intrCause & USBUART_INTR_CAUSE_EP1_8_INTR_MASK) >>
 282              		.loc 1 1307 0
 283 001c 1443     		orrs	r4, r2
 284              	.LVL3:
1298:Generated_Source\PSoC4/USBUART_episr.c **** 
 285              		.loc 1 1298 0
 286 001e 0025     		movs	r5, #0
 287 0020 07E0     		b	.L21
 288              	.LVL4:
 289              	.L23:
1314:Generated_Source\PSoC4/USBUART_episr.c ****             {
 290              		.loc 1 1314 0
 291 0022 E307     		lsls	r3, r4, #31
 292 0024 03D5     		bpl	.L22
1316:Generated_Source\PSoC4/USBUART_episr.c ****             }
 293              		.loc 1 1316 0
 294 0026 AB00     		lsls	r3, r5, #2
 295 0028 044A     		ldr	r2, .L24+4
 296 002a 9B58     		ldr	r3, [r3, r2]
 297 002c 9847     		blx	r3
 298              	.LVL5:
 299              	.L22:
1319:Generated_Source\PSoC4/USBUART_episr.c ****             ++cbIdx;
 300              		.loc 1 1319 0
 301 002e 6408     		lsrs	r4, r4, #1
 302              	.LVL6:
1320:Generated_Source\PSoC4/USBUART_episr.c ****         }
 303              		.loc 1 1320 0
 304 0030 0135     		adds	r5, r5, #1
 305              	.LVL7:
 306              	.L21:
1312:Generated_Source\PSoC4/USBUART_episr.c ****         {
 307              		.loc 1 1312 0
ARM GAS  C:\Users\essele\AppData\Local\Temp\cc4YPBQv.s 			page 30


 308 0032 002C     		cmp	r4, #0
 309 0034 F5D1     		bne	.L23
 310              	.LBE5:
 311              	.LBE4:
1336:Generated_Source\PSoC4/USBUART_episr.c ****     }
 312              		.loc 1 1336 0
 313              		@ sp needed
 314              	.LVL8:
 315              	.LVL9:
 316 0036 70BD     		pop	{r4, r5, r6, pc}
 317              	.L25:
 318              		.align	2
 319              	.L24:
 320 0038 34202C40 		.word	1076633652
 321 003c 00000000 		.word	.LANCHOR0
 322              		.cfi_endproc
 323              	.LFE7:
 324              		.size	USBUART_INTR_HI_ISR, .-USBUART_INTR_HI_ISR
 325              		.section	.text.USBUART_INTR_MED_ISR,"ax",%progbits
 326              		.align	2
 327              		.global	USBUART_INTR_MED_ISR
 328              		.code	16
 329              		.thumb_func
 330              		.type	USBUART_INTR_MED_ISR, %function
 331              	USBUART_INTR_MED_ISR:
 332              	.LFB8:
1337:Generated_Source\PSoC4/USBUART_episr.c **** 
1338:Generated_Source\PSoC4/USBUART_episr.c ****     /***************************************************************************
1339:Generated_Source\PSoC4/USBUART_episr.c ****     * Function Name: USBUART_INTR_MED_ISR
1340:Generated_Source\PSoC4/USBUART_episr.c ****     ************************************************************************//**
1341:Generated_Source\PSoC4/USBUART_episr.c ****     *
1342:Generated_Source\PSoC4/USBUART_episr.c ****     *   Interrupt Service Routine for the medium group of the interrupt sources.
1343:Generated_Source\PSoC4/USBUART_episr.c ****     *
1344:Generated_Source\PSoC4/USBUART_episr.c ****     *
1345:Generated_Source\PSoC4/USBUART_episr.c ****     ***************************************************************************/
1346:Generated_Source\PSoC4/USBUART_episr.c ****     CY_ISR(USBUART_INTR_MED_ISR)
1347:Generated_Source\PSoC4/USBUART_episr.c ****     {
 333              		.loc 1 1347 0
 334              		.cfi_startproc
 335              		@ args = 0, pretend = 0, frame = 0
 336              		@ frame_needed = 0, uses_anonymous_args = 0
 337 0000 70B5     		push	{r4, r5, r6, lr}
 338              		.cfi_def_cfa_offset 16
 339              		.cfi_offset 4, -16
 340              		.cfi_offset 5, -12
 341              		.cfi_offset 6, -8
 342              		.cfi_offset 14, -4
1348:Generated_Source\PSoC4/USBUART_episr.c ****        USBUART_IntrHandler(USBUART_INTR_CAUSE_MED_REG);
 343              		.loc 1 1348 0
 344 0002 0D4B     		ldr	r3, .L31
 345 0004 1D68     		ldr	r5, [r3]
 346              	.LVL10:
 347              	.LBB8:
 348              	.LBB9:
1301:Generated_Source\PSoC4/USBUART_episr.c ****         {
 349              		.loc 1 1301 0
 350 0006 2B06     		lsls	r3, r5, #24
ARM GAS  C:\Users\essele\AppData\Local\Temp\cc4YPBQv.s 			page 31


 351 0008 01D5     		bpl	.L27
1303:Generated_Source\PSoC4/USBUART_episr.c ****         }
 352              		.loc 1 1303 0
 353 000a 0023     		movs	r3, #0
 354 000c 9847     		blx	r3
 355              	.LVL11:
 356              	.L27:
1307:Generated_Source\PSoC4/USBUART_episr.c ****                     ((intrCause & USBUART_INTR_CAUSE_EP1_8_INTR_MASK) >>
 357              		.loc 1 1307 0
 358 000e 0F24     		movs	r4, #15
 359 0010 2200     		movs	r2, r4
 360 0012 2A40     		ands	r2, r5
1308:Generated_Source\PSoC4/USBUART_episr.c ****                                   USBUART_INTR_CAUSE_EP_INTR_SHIFT);
 361              		.loc 1 1308 0
 362 0014 EC08     		lsrs	r4, r5, #3
 363 0016 FF23     		movs	r3, #255
 364 0018 5B01     		lsls	r3, r3, #5
 365 001a 1C40     		ands	r4, r3
1307:Generated_Source\PSoC4/USBUART_episr.c ****                     ((intrCause & USBUART_INTR_CAUSE_EP1_8_INTR_MASK) >>
 366              		.loc 1 1307 0
 367 001c 1443     		orrs	r4, r2
 368              	.LVL12:
1298:Generated_Source\PSoC4/USBUART_episr.c **** 
 369              		.loc 1 1298 0
 370 001e 0025     		movs	r5, #0
 371 0020 07E0     		b	.L28
 372              	.LVL13:
 373              	.L30:
1314:Generated_Source\PSoC4/USBUART_episr.c ****             {
 374              		.loc 1 1314 0
 375 0022 E307     		lsls	r3, r4, #31
 376 0024 03D5     		bpl	.L29
1316:Generated_Source\PSoC4/USBUART_episr.c ****             }
 377              		.loc 1 1316 0
 378 0026 AB00     		lsls	r3, r5, #2
 379 0028 044A     		ldr	r2, .L31+4
 380 002a 9B58     		ldr	r3, [r3, r2]
 381 002c 9847     		blx	r3
 382              	.LVL14:
 383              	.L29:
1319:Generated_Source\PSoC4/USBUART_episr.c ****             ++cbIdx;
 384              		.loc 1 1319 0
 385 002e 6408     		lsrs	r4, r4, #1
 386              	.LVL15:
1320:Generated_Source\PSoC4/USBUART_episr.c ****         }
 387              		.loc 1 1320 0
 388 0030 0135     		adds	r5, r5, #1
 389              	.LVL16:
 390              	.L28:
1312:Generated_Source\PSoC4/USBUART_episr.c ****         {
 391              		.loc 1 1312 0
 392 0032 002C     		cmp	r4, #0
 393 0034 F5D1     		bne	.L30
 394              	.LBE9:
 395              	.LBE8:
1349:Generated_Source\PSoC4/USBUART_episr.c ****     }
 396              		.loc 1 1349 0
ARM GAS  C:\Users\essele\AppData\Local\Temp\cc4YPBQv.s 			page 32


 397              		@ sp needed
 398              	.LVL17:
 399              	.LVL18:
 400 0036 70BD     		pop	{r4, r5, r6, pc}
 401              	.L32:
 402              		.align	2
 403              	.L31:
 404 0038 38202C40 		.word	1076633656
 405 003c 00000000 		.word	.LANCHOR0
 406              		.cfi_endproc
 407              	.LFE8:
 408              		.size	USBUART_INTR_MED_ISR, .-USBUART_INTR_MED_ISR
 409              		.section	.text.USBUART_INTR_LO_ISR,"ax",%progbits
 410              		.align	2
 411              		.global	USBUART_INTR_LO_ISR
 412              		.code	16
 413              		.thumb_func
 414              		.type	USBUART_INTR_LO_ISR, %function
 415              	USBUART_INTR_LO_ISR:
 416              	.LFB9:
1350:Generated_Source\PSoC4/USBUART_episr.c **** 
1351:Generated_Source\PSoC4/USBUART_episr.c ****     /***************************************************************************
1352:Generated_Source\PSoC4/USBUART_episr.c ****     * Function Name: USBUART_INTR_LO_ISR
1353:Generated_Source\PSoC4/USBUART_episr.c ****     ************************************************************************//**
1354:Generated_Source\PSoC4/USBUART_episr.c ****     *
1355:Generated_Source\PSoC4/USBUART_episr.c ****     *   Interrupt Service Routine for the low group of the interrupt sources.
1356:Generated_Source\PSoC4/USBUART_episr.c ****     *
1357:Generated_Source\PSoC4/USBUART_episr.c ****     *
1358:Generated_Source\PSoC4/USBUART_episr.c ****     ***************************************************************************/
1359:Generated_Source\PSoC4/USBUART_episr.c ****     CY_ISR(USBUART_INTR_LO_ISR)
1360:Generated_Source\PSoC4/USBUART_episr.c ****     {
 417              		.loc 1 1360 0
 418              		.cfi_startproc
 419              		@ args = 0, pretend = 0, frame = 0
 420              		@ frame_needed = 0, uses_anonymous_args = 0
 421 0000 70B5     		push	{r4, r5, r6, lr}
 422              		.cfi_def_cfa_offset 16
 423              		.cfi_offset 4, -16
 424              		.cfi_offset 5, -12
 425              		.cfi_offset 6, -8
 426              		.cfi_offset 14, -4
1361:Generated_Source\PSoC4/USBUART_episr.c ****         USBUART_IntrHandler(USBUART_INTR_CAUSE_LO_REG);
 427              		.loc 1 1361 0
 428 0002 0D4B     		ldr	r3, .L38
 429 0004 1D68     		ldr	r5, [r3]
 430              	.LVL19:
 431              	.LBB12:
 432              	.LBB13:
1301:Generated_Source\PSoC4/USBUART_episr.c ****         {
 433              		.loc 1 1301 0
 434 0006 2B06     		lsls	r3, r5, #24
 435 0008 01D5     		bpl	.L34
1303:Generated_Source\PSoC4/USBUART_episr.c ****         }
 436              		.loc 1 1303 0
 437 000a 0023     		movs	r3, #0
 438 000c 9847     		blx	r3
 439              	.LVL20:
ARM GAS  C:\Users\essele\AppData\Local\Temp\cc4YPBQv.s 			page 33


 440              	.L34:
1307:Generated_Source\PSoC4/USBUART_episr.c ****                     ((intrCause & USBUART_INTR_CAUSE_EP1_8_INTR_MASK) >>
 441              		.loc 1 1307 0
 442 000e 0F24     		movs	r4, #15
 443 0010 2200     		movs	r2, r4
 444 0012 2A40     		ands	r2, r5
1308:Generated_Source\PSoC4/USBUART_episr.c ****                                   USBUART_INTR_CAUSE_EP_INTR_SHIFT);
 445              		.loc 1 1308 0
 446 0014 EC08     		lsrs	r4, r5, #3
 447 0016 FF23     		movs	r3, #255
 448 0018 5B01     		lsls	r3, r3, #5
 449 001a 1C40     		ands	r4, r3
1307:Generated_Source\PSoC4/USBUART_episr.c ****                     ((intrCause & USBUART_INTR_CAUSE_EP1_8_INTR_MASK) >>
 450              		.loc 1 1307 0
 451 001c 1443     		orrs	r4, r2
 452              	.LVL21:
1298:Generated_Source\PSoC4/USBUART_episr.c **** 
 453              		.loc 1 1298 0
 454 001e 0025     		movs	r5, #0
 455 0020 07E0     		b	.L35
 456              	.LVL22:
 457              	.L37:
1314:Generated_Source\PSoC4/USBUART_episr.c ****             {
 458              		.loc 1 1314 0
 459 0022 E307     		lsls	r3, r4, #31
 460 0024 03D5     		bpl	.L36
1316:Generated_Source\PSoC4/USBUART_episr.c ****             }
 461              		.loc 1 1316 0
 462 0026 AB00     		lsls	r3, r5, #2
 463 0028 044A     		ldr	r2, .L38+4
 464 002a 9B58     		ldr	r3, [r3, r2]
 465 002c 9847     		blx	r3
 466              	.LVL23:
 467              	.L36:
1319:Generated_Source\PSoC4/USBUART_episr.c ****             ++cbIdx;
 468              		.loc 1 1319 0
 469 002e 6408     		lsrs	r4, r4, #1
 470              	.LVL24:
1320:Generated_Source\PSoC4/USBUART_episr.c ****         }
 471              		.loc 1 1320 0
 472 0030 0135     		adds	r5, r5, #1
 473              	.LVL25:
 474              	.L35:
1312:Generated_Source\PSoC4/USBUART_episr.c ****         {
 475              		.loc 1 1312 0
 476 0032 002C     		cmp	r4, #0
 477 0034 F5D1     		bne	.L37
 478              	.LBE13:
 479              	.LBE12:
1362:Generated_Source\PSoC4/USBUART_episr.c ****     }
 480              		.loc 1 1362 0
 481              		@ sp needed
 482              	.LVL26:
 483              	.LVL27:
 484 0036 70BD     		pop	{r4, r5, r6, pc}
 485              	.L39:
 486              		.align	2
ARM GAS  C:\Users\essele\AppData\Local\Temp\cc4YPBQv.s 			page 34


 487              	.L38:
 488 0038 3C202C40 		.word	1076633660
 489 003c 00000000 		.word	.LANCHOR0
 490              		.cfi_endproc
 491              	.LFE9:
 492              		.size	USBUART_INTR_LO_ISR, .-USBUART_INTR_LO_ISR
 493              		.section	.rodata
 494              		.align	2
 495              		.set	.LANCHOR0,. + 0
 496              		.type	USBUART_isrCallbacks.5260, %object
 497              		.size	USBUART_isrCallbacks.5260, 52
 498              	USBUART_isrCallbacks.5260:
 499 0000 00000000 		.word	USBUART_SOF_ISR
 500 0004 00000000 		.word	USBUART_BUS_RESET_ISR
 501 0008 00000000 		.word	USBUART_EP_0_ISR
 502 000c 00000000 		.word	0
 503 0010 00000000 		.word	0
 504 0014 00000000 		.word	USBUART_EP_1_ISR
 505 0018 00000000 		.word	USBUART_EP_2_ISR
 506 001c 00000000 		.word	USBUART_EP_3_ISR
 507 0020 00000000 		.word	0
 508 0024 00000000 		.word	0
 509 0028 00000000 		.word	0
 510 002c 00000000 		.word	0
 511 0030 00000000 		.word	0
 512              		.text
 513              	.Letext0:
 514              		.file 2 "Generated_Source\\PSoC4\\cytypes.h"
 515              		.file 3 "Generated_Source\\PSoC4\\USBUART.h"
 516              		.file 4 "Generated_Source\\PSoC4\\USBUART_pvt.h"
 517              		.section	.debug_info,"",%progbits
 518              	.Ldebug_info0:
 519 0000 F1030000 		.4byte	0x3f1
 520 0004 0400     		.2byte	0x4
 521 0006 00000000 		.4byte	.Ldebug_abbrev0
 522 000a 04       		.byte	0x4
 523 000b 01       		.uleb128 0x1
 524 000c EC010000 		.4byte	.LASF45
 525 0010 0C       		.byte	0xc
 526 0011 45030000 		.4byte	.LASF46
 527 0015 97000000 		.4byte	.LASF47
 528 0019 00000000 		.4byte	.Ldebug_ranges0+0
 529 001d 00000000 		.4byte	0
 530 0021 00000000 		.4byte	.Ldebug_line0
 531 0025 02       		.uleb128 0x2
 532 0026 01       		.byte	0x1
 533 0027 06       		.byte	0x6
 534 0028 28030000 		.4byte	.LASF0
 535 002c 02       		.uleb128 0x2
 536 002d 01       		.byte	0x1
 537 002e 08       		.byte	0x8
 538 002f 52010000 		.4byte	.LASF1
 539 0033 02       		.uleb128 0x2
 540 0034 02       		.byte	0x2
 541 0035 05       		.byte	0x5
 542 0036 A8020000 		.4byte	.LASF2
 543 003a 02       		.uleb128 0x2
ARM GAS  C:\Users\essele\AppData\Local\Temp\cc4YPBQv.s 			page 35


 544 003b 02       		.byte	0x2
 545 003c 07       		.byte	0x7
 546 003d 3B000000 		.4byte	.LASF3
 547 0041 02       		.uleb128 0x2
 548 0042 04       		.byte	0x4
 549 0043 05       		.byte	0x5
 550 0044 F5020000 		.4byte	.LASF4
 551 0048 02       		.uleb128 0x2
 552 0049 04       		.byte	0x4
 553 004a 07       		.byte	0x7
 554 004b 1E010000 		.4byte	.LASF5
 555 004f 02       		.uleb128 0x2
 556 0050 08       		.byte	0x8
 557 0051 05       		.byte	0x5
 558 0052 8A020000 		.4byte	.LASF6
 559 0056 02       		.uleb128 0x2
 560 0057 08       		.byte	0x8
 561 0058 07       		.byte	0x7
 562 0059 A9010000 		.4byte	.LASF7
 563 005d 03       		.uleb128 0x3
 564 005e 04       		.byte	0x4
 565 005f 05       		.byte	0x5
 566 0060 696E7400 		.ascii	"int\000"
 567 0064 02       		.uleb128 0x2
 568 0065 04       		.byte	0x4
 569 0066 07       		.byte	0x7
 570 0067 9C010000 		.4byte	.LASF8
 571 006b 04       		.uleb128 0x4
 572 006c DF020000 		.4byte	.LASF9
 573 0070 02       		.byte	0x2
 574 0071 E401     		.2byte	0x1e4
 575 0073 2C000000 		.4byte	0x2c
 576 0077 04       		.uleb128 0x4
 577 0078 79010000 		.4byte	.LASF10
 578 007c 02       		.byte	0x2
 579 007d E501     		.2byte	0x1e5
 580 007f 3A000000 		.4byte	0x3a
 581 0083 04       		.uleb128 0x4
 582 0084 95010000 		.4byte	.LASF11
 583 0088 02       		.byte	0x2
 584 0089 E601     		.2byte	0x1e6
 585 008b 48000000 		.4byte	0x48
 586 008f 02       		.uleb128 0x2
 587 0090 04       		.byte	0x4
 588 0091 04       		.byte	0x4
 589 0092 35000000 		.4byte	.LASF12
 590 0096 02       		.uleb128 0x2
 591 0097 08       		.byte	0x8
 592 0098 04       		.byte	0x4
 593 0099 60010000 		.4byte	.LASF13
 594 009d 02       		.uleb128 0x2
 595 009e 01       		.byte	0x1
 596 009f 08       		.byte	0x8
 597 00a0 98020000 		.4byte	.LASF14
 598 00a4 04       		.uleb128 0x4
 599 00a5 11000000 		.4byte	.LASF15
 600 00a9 02       		.byte	0x2
ARM GAS  C:\Users\essele\AppData\Local\Temp\cc4YPBQv.s 			page 36


 601 00aa 9002     		.2byte	0x290
 602 00ac B0000000 		.4byte	0xb0
 603 00b0 05       		.uleb128 0x5
 604 00b1 83000000 		.4byte	0x83
 605 00b5 04       		.uleb128 0x4
 606 00b6 DF010000 		.4byte	.LASF16
 607 00ba 02       		.byte	0x2
 608 00bb A002     		.2byte	0x2a0
 609 00bd C1000000 		.4byte	0xc1
 610 00c1 06       		.uleb128 0x6
 611 00c2 04       		.byte	0x4
 612 00c3 C7000000 		.4byte	0xc7
 613 00c7 07       		.uleb128 0x7
 614 00c8 02       		.uleb128 0x2
 615 00c9 08       		.byte	0x8
 616 00ca 04       		.byte	0x4
 617 00cb 1C030000 		.4byte	.LASF17
 618 00cf 02       		.uleb128 0x2
 619 00d0 04       		.byte	0x4
 620 00d1 07       		.byte	0x7
 621 00d2 7A020000 		.4byte	.LASF18
 622 00d6 08       		.uleb128 0x8
 623 00d7 0C       		.byte	0xc
 624 00d8 03       		.byte	0x3
 625 00d9 8E       		.byte	0x8e
 626 00da 4B010000 		.4byte	0x14b
 627 00de 09       		.uleb128 0x9
 628 00df 67010000 		.4byte	.LASF19
 629 00e3 03       		.byte	0x3
 630 00e4 90       		.byte	0x90
 631 00e5 6B000000 		.4byte	0x6b
 632 00e9 00       		.byte	0
 633 00ea 09       		.uleb128 0x9
 634 00eb 13010000 		.4byte	.LASF20
 635 00ef 03       		.byte	0x3
 636 00f0 91       		.byte	0x91
 637 00f1 6B000000 		.4byte	0x6b
 638 00f5 01       		.byte	0x1
 639 00f6 09       		.uleb128 0x9
 640 00f7 C0010000 		.4byte	.LASF21
 641 00fb 03       		.byte	0x3
 642 00fc 92       		.byte	0x92
 643 00fd 6B000000 		.4byte	0x6b
 644 0101 02       		.byte	0x2
 645 0102 09       		.uleb128 0x9
 646 0103 FF000000 		.4byte	.LASF22
 647 0107 03       		.byte	0x3
 648 0108 93       		.byte	0x93
 649 0109 6B000000 		.4byte	0x6b
 650 010d 03       		.byte	0x3
 651 010e 09       		.uleb128 0x9
 652 010f 30010000 		.4byte	.LASF23
 653 0113 03       		.byte	0x3
 654 0114 94       		.byte	0x94
 655 0115 6B000000 		.4byte	0x6b
 656 0119 04       		.byte	0x4
 657 011a 09       		.uleb128 0x9
ARM GAS  C:\Users\essele\AppData\Local\Temp\cc4YPBQv.s 			page 37


 658 011b 83020000 		.4byte	.LASF24
 659 011f 03       		.byte	0x3
 660 0120 95       		.byte	0x95
 661 0121 6B000000 		.4byte	0x6b
 662 0125 05       		.byte	0x5
 663 0126 09       		.uleb128 0x9
 664 0127 6E010000 		.4byte	.LASF25
 665 012b 03       		.byte	0x3
 666 012c 96       		.byte	0x96
 667 012d 77000000 		.4byte	0x77
 668 0131 06       		.byte	0x6
 669 0132 09       		.uleb128 0x9
 670 0133 9D020000 		.4byte	.LASF26
 671 0137 03       		.byte	0x3
 672 0138 97       		.byte	0x97
 673 0139 77000000 		.4byte	0x77
 674 013d 08       		.byte	0x8
 675 013e 09       		.uleb128 0x9
 676 013f E5020000 		.4byte	.LASF27
 677 0143 03       		.byte	0x3
 678 0144 98       		.byte	0x98
 679 0145 6B000000 		.4byte	0x6b
 680 0149 0A       		.byte	0xa
 681 014a 00       		.byte	0
 682 014b 0A       		.uleb128 0xa
 683 014c B2020000 		.4byte	.LASF28
 684 0150 03       		.byte	0x3
 685 0151 99       		.byte	0x99
 686 0152 D6000000 		.4byte	0xd6
 687 0156 08       		.uleb128 0x8
 688 0157 40       		.byte	0x40
 689 0158 03       		.byte	0x3
 690 0159 D5       		.byte	0xd5
 691 015a 8F010000 		.4byte	0x18f
 692 015e 09       		.uleb128 0x9
 693 015f F1000000 		.4byte	.LASF29
 694 0163 03       		.byte	0x3
 695 0164 D7       		.byte	0xd7
 696 0165 83000000 		.4byte	0x83
 697 0169 00       		.byte	0
 698 016a 09       		.uleb128 0x9
 699 016b F8000000 		.4byte	.LASF30
 700 016f 03       		.byte	0x3
 701 0170 D8       		.byte	0xd8
 702 0171 83000000 		.4byte	0x83
 703 0175 04       		.byte	0x4
 704 0176 09       		.uleb128 0x9
 705 0177 2F000000 		.4byte	.LASF31
 706 017b 03       		.byte	0x3
 707 017c D9       		.byte	0xd9
 708 017d 83000000 		.4byte	0x83
 709 0181 08       		.byte	0x8
 710 0182 0B       		.uleb128 0xb
 711 0183 67617000 		.ascii	"gap\000"
 712 0187 03       		.byte	0x3
 713 0188 DA       		.byte	0xda
 714 0189 8F010000 		.4byte	0x18f
ARM GAS  C:\Users\essele\AppData\Local\Temp\cc4YPBQv.s 			page 38


 715 018d 0C       		.byte	0xc
 716 018e 00       		.byte	0
 717 018f 0C       		.uleb128 0xc
 718 0190 83000000 		.4byte	0x83
 719 0194 9F010000 		.4byte	0x19f
 720 0198 0D       		.uleb128 0xd
 721 0199 CF000000 		.4byte	0xcf
 722 019d 0C       		.byte	0xc
 723 019e 00       		.byte	0
 724 019f 0A       		.uleb128 0xa
 725 01a0 DB000000 		.4byte	.LASF32
 726 01a4 03       		.byte	0x3
 727 01a5 DB       		.byte	0xdb
 728 01a6 56010000 		.4byte	0x156
 729 01aa 0E       		.uleb128 0xe
 730 01ab 4002     		.2byte	0x240
 731 01ad 03       		.byte	0x3
 732 01ae 0F01     		.2byte	0x10f
 733 01b0 C2010000 		.4byte	0x1c2
 734 01b4 0F       		.uleb128 0xf
 735 01b5 35010000 		.4byte	.LASF33
 736 01b9 03       		.byte	0x3
 737 01ba 1101     		.2byte	0x111
 738 01bc C2010000 		.4byte	0x1c2
 739 01c0 00       		.byte	0
 740 01c1 00       		.byte	0
 741 01c2 0C       		.uleb128 0xc
 742 01c3 9F010000 		.4byte	0x19f
 743 01c7 D2010000 		.4byte	0x1d2
 744 01cb 0D       		.uleb128 0xd
 745 01cc CF000000 		.4byte	0xcf
 746 01d0 08       		.byte	0x8
 747 01d1 00       		.byte	0
 748 01d2 04       		.uleb128 0x4
 749 01d3 3B010000 		.4byte	.LASF34
 750 01d7 03       		.byte	0x3
 751 01d8 1201     		.2byte	0x112
 752 01da AA010000 		.4byte	0x1aa
 753 01de 10       		.uleb128 0x10
 754 01df 34030000 		.4byte	.LASF35
 755 01e3 01       		.byte	0x1
 756 01e4 25       		.byte	0x25
 757 01e5 00000000 		.4byte	.LFB1
 758 01e9 38000000 		.4byte	.LFE1-.LFB1
 759 01ed 01       		.uleb128 0x1
 760 01ee 9C       		.byte	0x9c
 761 01ef 10       		.uleb128 0x10
 762 01f0 4E000000 		.4byte	.LASF36
 763 01f4 01       		.byte	0x1
 764 01f5 78       		.byte	0x78
 765 01f6 00000000 		.4byte	.LFB2
 766 01fa 3C000000 		.4byte	.LFE2-.LFB2
 767 01fe 01       		.uleb128 0x1
 768 01ff 9C       		.byte	0x9c
 769 0200 10       		.uleb128 0x10
 770 0201 00000000 		.4byte	.LASF37
 771 0205 01       		.byte	0x1
ARM GAS  C:\Users\essele\AppData\Local\Temp\cc4YPBQv.s 			page 39


 772 0206 C9       		.byte	0xc9
 773 0207 00000000 		.4byte	.LFB3
 774 020b 40000000 		.4byte	.LFE3-.LFB3
 775 020f 01       		.uleb128 0x1
 776 0210 9C       		.byte	0x9c
 777 0211 11       		.uleb128 0x11
 778 0212 73000000 		.4byte	.LASF38
 779 0216 01       		.byte	0x1
 780 0217 B502     		.2byte	0x2b5
 781 0219 00000000 		.4byte	.LFB4
 782 021d 0C000000 		.4byte	.LFE4-.LFB4
 783 0221 01       		.uleb128 0x1
 784 0222 9C       		.byte	0x9c
 785 0223 12       		.uleb128 0x12
 786 0224 C9020000 		.4byte	.LASF41
 787 0228 01       		.byte	0x1
 788 0229 D202     		.2byte	0x2d2
 789 022b 00000000 		.4byte	.LFB5
 790 022f 14000000 		.4byte	.LFE5-.LFB5
 791 0233 01       		.uleb128 0x1
 792 0234 9C       		.byte	0x9c
 793 0235 43020000 		.4byte	0x243
 794 0239 13       		.uleb128 0x13
 795 023a 0C000000 		.4byte	.LVL0
 796 023e E9030000 		.4byte	0x3e9
 797 0242 00       		.byte	0
 798 0243 14       		.uleb128 0x14
 799 0244 83000000 		.4byte	.LASF48
 800 0248 01       		.byte	0x1
 801 0249 FE04     		.2byte	0x4fe
 802 024b 03       		.byte	0x3
 803 024c 75020000 		.4byte	0x275
 804 0250 15       		.uleb128 0x15
 805 0251 FE020000 		.4byte	.LASF49
 806 0255 01       		.byte	0x1
 807 0256 FE04     		.2byte	0x4fe
 808 0258 83000000 		.4byte	0x83
 809 025c 16       		.uleb128 0x16
 810 025d 80010000 		.4byte	.LASF39
 811 0261 01       		.byte	0x1
 812 0262 0105     		.2byte	0x501
 813 0264 8A020000 		.4byte	0x28a
 814 0268 16       		.uleb128 0x16
 815 0269 EF020000 		.4byte	.LASF40
 816 026d 01       		.byte	0x1
 817 026e 1205     		.2byte	0x512
 818 0270 83000000 		.4byte	0x83
 819 0274 00       		.byte	0
 820 0275 0C       		.uleb128 0xc
 821 0276 85020000 		.4byte	0x285
 822 027a 85020000 		.4byte	0x285
 823 027e 0D       		.uleb128 0xd
 824 027f CF000000 		.4byte	0xcf
 825 0283 0C       		.byte	0xc
 826 0284 00       		.byte	0
 827 0285 17       		.uleb128 0x17
 828 0286 B5000000 		.4byte	0xb5
ARM GAS  C:\Users\essele\AppData\Local\Temp\cc4YPBQv.s 			page 40


 829 028a 17       		.uleb128 0x17
 830 028b 75020000 		.4byte	0x275
 831 028f 12       		.uleb128 0x12
 832 0290 08030000 		.4byte	.LASF42
 833 0294 01       		.byte	0x1
 834 0295 3505     		.2byte	0x535
 835 0297 00000000 		.4byte	.LFB7
 836 029b 40000000 		.4byte	.LFE7-.LFB7
 837 029f 01       		.uleb128 0x1
 838 02a0 9C       		.byte	0x9c
 839 02a1 F6020000 		.4byte	0x2f6
 840 02a5 18       		.uleb128 0x18
 841 02a6 43020000 		.4byte	0x243
 842 02aa 06000000 		.4byte	.LBB4
 843 02ae 30000000 		.4byte	.LBE4-.LBB4
 844 02b2 01       		.byte	0x1
 845 02b3 3705     		.2byte	0x537
 846 02b5 19       		.uleb128 0x19
 847 02b6 50020000 		.4byte	0x250
 848 02ba 00000000 		.4byte	.LLST0
 849 02be 1A       		.uleb128 0x1a
 850 02bf 06000000 		.4byte	.LBB5
 851 02c3 30000000 		.4byte	.LBE5-.LBB5
 852 02c7 1B       		.uleb128 0x1b
 853 02c8 68020000 		.4byte	0x268
 854 02cc 1E000000 		.4byte	.LLST1
 855 02d0 1C       		.uleb128 0x1c
 856 02d1 5C020000 		.4byte	0x25c
 857 02d5 05       		.uleb128 0x5
 858 02d6 03       		.byte	0x3
 859 02d7 00000000 		.4byte	USBUART_isrCallbacks.5260
 860 02db 1D       		.uleb128 0x1d
 861 02dc 0E000000 		.4byte	.LVL2
 862 02e0 01       		.uleb128 0x1
 863 02e1 30       		.byte	0x30
 864 02e2 1D       		.uleb128 0x1d
 865 02e3 2E000000 		.4byte	.LVL5
 866 02e7 0B       		.uleb128 0xb
 867 02e8 75       		.byte	0x75
 868 02e9 00       		.sleb128 0
 869 02ea 32       		.byte	0x32
 870 02eb 24       		.byte	0x24
 871 02ec 03       		.byte	0x3
 872 02ed 00000000 		.4byte	.LANCHOR0
 873 02f1 22       		.byte	0x22
 874 02f2 06       		.byte	0x6
 875 02f3 00       		.byte	0
 876 02f4 00       		.byte	0
 877 02f5 00       		.byte	0
 878 02f6 12       		.uleb128 0x12
 879 02f7 CA010000 		.4byte	.LASF43
 880 02fb 01       		.byte	0x1
 881 02fc 4205     		.2byte	0x542
 882 02fe 00000000 		.4byte	.LFB8
 883 0302 40000000 		.4byte	.LFE8-.LFB8
 884 0306 01       		.uleb128 0x1
 885 0307 9C       		.byte	0x9c
ARM GAS  C:\Users\essele\AppData\Local\Temp\cc4YPBQv.s 			page 41


 886 0308 5D030000 		.4byte	0x35d
 887 030c 18       		.uleb128 0x18
 888 030d 43020000 		.4byte	0x243
 889 0311 06000000 		.4byte	.LBB8
 890 0315 30000000 		.4byte	.LBE8-.LBB8
 891 0319 01       		.byte	0x1
 892 031a 4405     		.2byte	0x544
 893 031c 19       		.uleb128 0x19
 894 031d 50020000 		.4byte	0x250
 895 0321 3D000000 		.4byte	.LLST2
 896 0325 1A       		.uleb128 0x1a
 897 0326 06000000 		.4byte	.LBB9
 898 032a 30000000 		.4byte	.LBE9-.LBB9
 899 032e 1B       		.uleb128 0x1b
 900 032f 68020000 		.4byte	0x268
 901 0333 5B000000 		.4byte	.LLST3
 902 0337 1C       		.uleb128 0x1c
 903 0338 5C020000 		.4byte	0x25c
 904 033c 05       		.uleb128 0x5
 905 033d 03       		.byte	0x3
 906 033e 00000000 		.4byte	USBUART_isrCallbacks.5260
 907 0342 1D       		.uleb128 0x1d
 908 0343 0E000000 		.4byte	.LVL11
 909 0347 01       		.uleb128 0x1
 910 0348 30       		.byte	0x30
 911 0349 1D       		.uleb128 0x1d
 912 034a 2E000000 		.4byte	.LVL14
 913 034e 0B       		.uleb128 0xb
 914 034f 75       		.byte	0x75
 915 0350 00       		.sleb128 0
 916 0351 32       		.byte	0x32
 917 0352 24       		.byte	0x24
 918 0353 03       		.byte	0x3
 919 0354 00000000 		.4byte	.LANCHOR0
 920 0358 22       		.byte	0x22
 921 0359 06       		.byte	0x6
 922 035a 00       		.byte	0
 923 035b 00       		.byte	0
 924 035c 00       		.byte	0
 925 035d 12       		.uleb128 0x12
 926 035e 5F000000 		.4byte	.LASF44
 927 0362 01       		.byte	0x1
 928 0363 4F05     		.2byte	0x54f
 929 0365 00000000 		.4byte	.LFB9
 930 0369 40000000 		.4byte	.LFE9-.LFB9
 931 036d 01       		.uleb128 0x1
 932 036e 9C       		.byte	0x9c
 933 036f C4030000 		.4byte	0x3c4
 934 0373 18       		.uleb128 0x18
 935 0374 43020000 		.4byte	0x243
 936 0378 06000000 		.4byte	.LBB12
 937 037c 30000000 		.4byte	.LBE12-.LBB12
 938 0380 01       		.byte	0x1
 939 0381 5105     		.2byte	0x551
 940 0383 19       		.uleb128 0x19
 941 0384 50020000 		.4byte	0x250
 942 0388 7A000000 		.4byte	.LLST4
ARM GAS  C:\Users\essele\AppData\Local\Temp\cc4YPBQv.s 			page 42


 943 038c 1A       		.uleb128 0x1a
 944 038d 06000000 		.4byte	.LBB13
 945 0391 30000000 		.4byte	.LBE13-.LBB13
 946 0395 1B       		.uleb128 0x1b
 947 0396 68020000 		.4byte	0x268
 948 039a 98000000 		.4byte	.LLST5
 949 039e 1C       		.uleb128 0x1c
 950 039f 5C020000 		.4byte	0x25c
 951 03a3 05       		.uleb128 0x5
 952 03a4 03       		.byte	0x3
 953 03a5 00000000 		.4byte	USBUART_isrCallbacks.5260
 954 03a9 1D       		.uleb128 0x1d
 955 03aa 0E000000 		.4byte	.LVL20
 956 03ae 01       		.uleb128 0x1
 957 03af 30       		.byte	0x30
 958 03b0 1D       		.uleb128 0x1d
 959 03b1 2E000000 		.4byte	.LVL23
 960 03b5 0B       		.uleb128 0xb
 961 03b6 75       		.byte	0x75
 962 03b7 00       		.sleb128 0
 963 03b8 32       		.byte	0x32
 964 03b9 24       		.byte	0x24
 965 03ba 03       		.byte	0x3
 966 03bb 00000000 		.4byte	.LANCHOR0
 967 03bf 22       		.byte	0x22
 968 03c0 06       		.byte	0x6
 969 03c1 00       		.byte	0
 970 03c2 00       		.byte	0
 971 03c3 00       		.byte	0
 972 03c4 0C       		.uleb128 0xc
 973 03c5 D4030000 		.4byte	0x3d4
 974 03c9 D4030000 		.4byte	0x3d4
 975 03cd 0D       		.uleb128 0xd
 976 03ce CF000000 		.4byte	0xcf
 977 03d2 08       		.byte	0x8
 978 03d3 00       		.byte	0
 979 03d4 05       		.uleb128 0x5
 980 03d5 4B010000 		.4byte	0x14b
 981 03d9 1E       		.uleb128 0x1e
 982 03da 08010000 		.4byte	.LASF50
 983 03de 04       		.byte	0x4
 984 03df 79       		.byte	0x79
 985 03e0 E4030000 		.4byte	0x3e4
 986 03e4 05       		.uleb128 0x5
 987 03e5 C4030000 		.4byte	0x3c4
 988 03e9 1F       		.uleb128 0x1f
 989 03ea 17000000 		.4byte	.LASF51
 990 03ee 17000000 		.4byte	.LASF51
 991 03f2 04       		.byte	0x4
 992 03f3 A4       		.byte	0xa4
 993 03f4 00       		.byte	0
 994              		.section	.debug_abbrev,"",%progbits
 995              	.Ldebug_abbrev0:
 996 0000 01       		.uleb128 0x1
 997 0001 11       		.uleb128 0x11
 998 0002 01       		.byte	0x1
 999 0003 25       		.uleb128 0x25
ARM GAS  C:\Users\essele\AppData\Local\Temp\cc4YPBQv.s 			page 43


 1000 0004 0E       		.uleb128 0xe
 1001 0005 13       		.uleb128 0x13
 1002 0006 0B       		.uleb128 0xb
 1003 0007 03       		.uleb128 0x3
 1004 0008 0E       		.uleb128 0xe
 1005 0009 1B       		.uleb128 0x1b
 1006 000a 0E       		.uleb128 0xe
 1007 000b 55       		.uleb128 0x55
 1008 000c 17       		.uleb128 0x17
 1009 000d 11       		.uleb128 0x11
 1010 000e 01       		.uleb128 0x1
 1011 000f 10       		.uleb128 0x10
 1012 0010 17       		.uleb128 0x17
 1013 0011 00       		.byte	0
 1014 0012 00       		.byte	0
 1015 0013 02       		.uleb128 0x2
 1016 0014 24       		.uleb128 0x24
 1017 0015 00       		.byte	0
 1018 0016 0B       		.uleb128 0xb
 1019 0017 0B       		.uleb128 0xb
 1020 0018 3E       		.uleb128 0x3e
 1021 0019 0B       		.uleb128 0xb
 1022 001a 03       		.uleb128 0x3
 1023 001b 0E       		.uleb128 0xe
 1024 001c 00       		.byte	0
 1025 001d 00       		.byte	0
 1026 001e 03       		.uleb128 0x3
 1027 001f 24       		.uleb128 0x24
 1028 0020 00       		.byte	0
 1029 0021 0B       		.uleb128 0xb
 1030 0022 0B       		.uleb128 0xb
 1031 0023 3E       		.uleb128 0x3e
 1032 0024 0B       		.uleb128 0xb
 1033 0025 03       		.uleb128 0x3
 1034 0026 08       		.uleb128 0x8
 1035 0027 00       		.byte	0
 1036 0028 00       		.byte	0
 1037 0029 04       		.uleb128 0x4
 1038 002a 16       		.uleb128 0x16
 1039 002b 00       		.byte	0
 1040 002c 03       		.uleb128 0x3
 1041 002d 0E       		.uleb128 0xe
 1042 002e 3A       		.uleb128 0x3a
 1043 002f 0B       		.uleb128 0xb
 1044 0030 3B       		.uleb128 0x3b
 1045 0031 05       		.uleb128 0x5
 1046 0032 49       		.uleb128 0x49
 1047 0033 13       		.uleb128 0x13
 1048 0034 00       		.byte	0
 1049 0035 00       		.byte	0
 1050 0036 05       		.uleb128 0x5
 1051 0037 35       		.uleb128 0x35
 1052 0038 00       		.byte	0
 1053 0039 49       		.uleb128 0x49
 1054 003a 13       		.uleb128 0x13
 1055 003b 00       		.byte	0
 1056 003c 00       		.byte	0
ARM GAS  C:\Users\essele\AppData\Local\Temp\cc4YPBQv.s 			page 44


 1057 003d 06       		.uleb128 0x6
 1058 003e 0F       		.uleb128 0xf
 1059 003f 00       		.byte	0
 1060 0040 0B       		.uleb128 0xb
 1061 0041 0B       		.uleb128 0xb
 1062 0042 49       		.uleb128 0x49
 1063 0043 13       		.uleb128 0x13
 1064 0044 00       		.byte	0
 1065 0045 00       		.byte	0
 1066 0046 07       		.uleb128 0x7
 1067 0047 15       		.uleb128 0x15
 1068 0048 00       		.byte	0
 1069 0049 27       		.uleb128 0x27
 1070 004a 19       		.uleb128 0x19
 1071 004b 00       		.byte	0
 1072 004c 00       		.byte	0
 1073 004d 08       		.uleb128 0x8
 1074 004e 13       		.uleb128 0x13
 1075 004f 01       		.byte	0x1
 1076 0050 0B       		.uleb128 0xb
 1077 0051 0B       		.uleb128 0xb
 1078 0052 3A       		.uleb128 0x3a
 1079 0053 0B       		.uleb128 0xb
 1080 0054 3B       		.uleb128 0x3b
 1081 0055 0B       		.uleb128 0xb
 1082 0056 01       		.uleb128 0x1
 1083 0057 13       		.uleb128 0x13
 1084 0058 00       		.byte	0
 1085 0059 00       		.byte	0
 1086 005a 09       		.uleb128 0x9
 1087 005b 0D       		.uleb128 0xd
 1088 005c 00       		.byte	0
 1089 005d 03       		.uleb128 0x3
 1090 005e 0E       		.uleb128 0xe
 1091 005f 3A       		.uleb128 0x3a
 1092 0060 0B       		.uleb128 0xb
 1093 0061 3B       		.uleb128 0x3b
 1094 0062 0B       		.uleb128 0xb
 1095 0063 49       		.uleb128 0x49
 1096 0064 13       		.uleb128 0x13
 1097 0065 38       		.uleb128 0x38
 1098 0066 0B       		.uleb128 0xb
 1099 0067 00       		.byte	0
 1100 0068 00       		.byte	0
 1101 0069 0A       		.uleb128 0xa
 1102 006a 16       		.uleb128 0x16
 1103 006b 00       		.byte	0
 1104 006c 03       		.uleb128 0x3
 1105 006d 0E       		.uleb128 0xe
 1106 006e 3A       		.uleb128 0x3a
 1107 006f 0B       		.uleb128 0xb
 1108 0070 3B       		.uleb128 0x3b
 1109 0071 0B       		.uleb128 0xb
 1110 0072 49       		.uleb128 0x49
 1111 0073 13       		.uleb128 0x13
 1112 0074 00       		.byte	0
 1113 0075 00       		.byte	0
ARM GAS  C:\Users\essele\AppData\Local\Temp\cc4YPBQv.s 			page 45


 1114 0076 0B       		.uleb128 0xb
 1115 0077 0D       		.uleb128 0xd
 1116 0078 00       		.byte	0
 1117 0079 03       		.uleb128 0x3
 1118 007a 08       		.uleb128 0x8
 1119 007b 3A       		.uleb128 0x3a
 1120 007c 0B       		.uleb128 0xb
 1121 007d 3B       		.uleb128 0x3b
 1122 007e 0B       		.uleb128 0xb
 1123 007f 49       		.uleb128 0x49
 1124 0080 13       		.uleb128 0x13
 1125 0081 38       		.uleb128 0x38
 1126 0082 0B       		.uleb128 0xb
 1127 0083 00       		.byte	0
 1128 0084 00       		.byte	0
 1129 0085 0C       		.uleb128 0xc
 1130 0086 01       		.uleb128 0x1
 1131 0087 01       		.byte	0x1
 1132 0088 49       		.uleb128 0x49
 1133 0089 13       		.uleb128 0x13
 1134 008a 01       		.uleb128 0x1
 1135 008b 13       		.uleb128 0x13
 1136 008c 00       		.byte	0
 1137 008d 00       		.byte	0
 1138 008e 0D       		.uleb128 0xd
 1139 008f 21       		.uleb128 0x21
 1140 0090 00       		.byte	0
 1141 0091 49       		.uleb128 0x49
 1142 0092 13       		.uleb128 0x13
 1143 0093 2F       		.uleb128 0x2f
 1144 0094 0B       		.uleb128 0xb
 1145 0095 00       		.byte	0
 1146 0096 00       		.byte	0
 1147 0097 0E       		.uleb128 0xe
 1148 0098 13       		.uleb128 0x13
 1149 0099 01       		.byte	0x1
 1150 009a 0B       		.uleb128 0xb
 1151 009b 05       		.uleb128 0x5
 1152 009c 3A       		.uleb128 0x3a
 1153 009d 0B       		.uleb128 0xb
 1154 009e 3B       		.uleb128 0x3b
 1155 009f 05       		.uleb128 0x5
 1156 00a0 01       		.uleb128 0x1
 1157 00a1 13       		.uleb128 0x13
 1158 00a2 00       		.byte	0
 1159 00a3 00       		.byte	0
 1160 00a4 0F       		.uleb128 0xf
 1161 00a5 0D       		.uleb128 0xd
 1162 00a6 00       		.byte	0
 1163 00a7 03       		.uleb128 0x3
 1164 00a8 0E       		.uleb128 0xe
 1165 00a9 3A       		.uleb128 0x3a
 1166 00aa 0B       		.uleb128 0xb
 1167 00ab 3B       		.uleb128 0x3b
 1168 00ac 05       		.uleb128 0x5
 1169 00ad 49       		.uleb128 0x49
 1170 00ae 13       		.uleb128 0x13
ARM GAS  C:\Users\essele\AppData\Local\Temp\cc4YPBQv.s 			page 46


 1171 00af 38       		.uleb128 0x38
 1172 00b0 0B       		.uleb128 0xb
 1173 00b1 00       		.byte	0
 1174 00b2 00       		.byte	0
 1175 00b3 10       		.uleb128 0x10
 1176 00b4 2E       		.uleb128 0x2e
 1177 00b5 00       		.byte	0
 1178 00b6 3F       		.uleb128 0x3f
 1179 00b7 19       		.uleb128 0x19
 1180 00b8 03       		.uleb128 0x3
 1181 00b9 0E       		.uleb128 0xe
 1182 00ba 3A       		.uleb128 0x3a
 1183 00bb 0B       		.uleb128 0xb
 1184 00bc 3B       		.uleb128 0x3b
 1185 00bd 0B       		.uleb128 0xb
 1186 00be 27       		.uleb128 0x27
 1187 00bf 19       		.uleb128 0x19
 1188 00c0 11       		.uleb128 0x11
 1189 00c1 01       		.uleb128 0x1
 1190 00c2 12       		.uleb128 0x12
 1191 00c3 06       		.uleb128 0x6
 1192 00c4 40       		.uleb128 0x40
 1193 00c5 18       		.uleb128 0x18
 1194 00c6 9742     		.uleb128 0x2117
 1195 00c8 19       		.uleb128 0x19
 1196 00c9 00       		.byte	0
 1197 00ca 00       		.byte	0
 1198 00cb 11       		.uleb128 0x11
 1199 00cc 2E       		.uleb128 0x2e
 1200 00cd 00       		.byte	0
 1201 00ce 3F       		.uleb128 0x3f
 1202 00cf 19       		.uleb128 0x19
 1203 00d0 03       		.uleb128 0x3
 1204 00d1 0E       		.uleb128 0xe
 1205 00d2 3A       		.uleb128 0x3a
 1206 00d3 0B       		.uleb128 0xb
 1207 00d4 3B       		.uleb128 0x3b
 1208 00d5 05       		.uleb128 0x5
 1209 00d6 27       		.uleb128 0x27
 1210 00d7 19       		.uleb128 0x19
 1211 00d8 11       		.uleb128 0x11
 1212 00d9 01       		.uleb128 0x1
 1213 00da 12       		.uleb128 0x12
 1214 00db 06       		.uleb128 0x6
 1215 00dc 40       		.uleb128 0x40
 1216 00dd 18       		.uleb128 0x18
 1217 00de 9742     		.uleb128 0x2117
 1218 00e0 19       		.uleb128 0x19
 1219 00e1 00       		.byte	0
 1220 00e2 00       		.byte	0
 1221 00e3 12       		.uleb128 0x12
 1222 00e4 2E       		.uleb128 0x2e
 1223 00e5 01       		.byte	0x1
 1224 00e6 3F       		.uleb128 0x3f
 1225 00e7 19       		.uleb128 0x19
 1226 00e8 03       		.uleb128 0x3
 1227 00e9 0E       		.uleb128 0xe
ARM GAS  C:\Users\essele\AppData\Local\Temp\cc4YPBQv.s 			page 47


 1228 00ea 3A       		.uleb128 0x3a
 1229 00eb 0B       		.uleb128 0xb
 1230 00ec 3B       		.uleb128 0x3b
 1231 00ed 05       		.uleb128 0x5
 1232 00ee 27       		.uleb128 0x27
 1233 00ef 19       		.uleb128 0x19
 1234 00f0 11       		.uleb128 0x11
 1235 00f1 01       		.uleb128 0x1
 1236 00f2 12       		.uleb128 0x12
 1237 00f3 06       		.uleb128 0x6
 1238 00f4 40       		.uleb128 0x40
 1239 00f5 18       		.uleb128 0x18
 1240 00f6 9742     		.uleb128 0x2117
 1241 00f8 19       		.uleb128 0x19
 1242 00f9 01       		.uleb128 0x1
 1243 00fa 13       		.uleb128 0x13
 1244 00fb 00       		.byte	0
 1245 00fc 00       		.byte	0
 1246 00fd 13       		.uleb128 0x13
 1247 00fe 898201   		.uleb128 0x4109
 1248 0101 00       		.byte	0
 1249 0102 11       		.uleb128 0x11
 1250 0103 01       		.uleb128 0x1
 1251 0104 31       		.uleb128 0x31
 1252 0105 13       		.uleb128 0x13
 1253 0106 00       		.byte	0
 1254 0107 00       		.byte	0
 1255 0108 14       		.uleb128 0x14
 1256 0109 2E       		.uleb128 0x2e
 1257 010a 01       		.byte	0x1
 1258 010b 03       		.uleb128 0x3
 1259 010c 0E       		.uleb128 0xe
 1260 010d 3A       		.uleb128 0x3a
 1261 010e 0B       		.uleb128 0xb
 1262 010f 3B       		.uleb128 0x3b
 1263 0110 05       		.uleb128 0x5
 1264 0111 27       		.uleb128 0x27
 1265 0112 19       		.uleb128 0x19
 1266 0113 20       		.uleb128 0x20
 1267 0114 0B       		.uleb128 0xb
 1268 0115 01       		.uleb128 0x1
 1269 0116 13       		.uleb128 0x13
 1270 0117 00       		.byte	0
 1271 0118 00       		.byte	0
 1272 0119 15       		.uleb128 0x15
 1273 011a 05       		.uleb128 0x5
 1274 011b 00       		.byte	0
 1275 011c 03       		.uleb128 0x3
 1276 011d 0E       		.uleb128 0xe
 1277 011e 3A       		.uleb128 0x3a
 1278 011f 0B       		.uleb128 0xb
 1279 0120 3B       		.uleb128 0x3b
 1280 0121 05       		.uleb128 0x5
 1281 0122 49       		.uleb128 0x49
 1282 0123 13       		.uleb128 0x13
 1283 0124 00       		.byte	0
 1284 0125 00       		.byte	0
ARM GAS  C:\Users\essele\AppData\Local\Temp\cc4YPBQv.s 			page 48


 1285 0126 16       		.uleb128 0x16
 1286 0127 34       		.uleb128 0x34
 1287 0128 00       		.byte	0
 1288 0129 03       		.uleb128 0x3
 1289 012a 0E       		.uleb128 0xe
 1290 012b 3A       		.uleb128 0x3a
 1291 012c 0B       		.uleb128 0xb
 1292 012d 3B       		.uleb128 0x3b
 1293 012e 05       		.uleb128 0x5
 1294 012f 49       		.uleb128 0x49
 1295 0130 13       		.uleb128 0x13
 1296 0131 00       		.byte	0
 1297 0132 00       		.byte	0
 1298 0133 17       		.uleb128 0x17
 1299 0134 26       		.uleb128 0x26
 1300 0135 00       		.byte	0
 1301 0136 49       		.uleb128 0x49
 1302 0137 13       		.uleb128 0x13
 1303 0138 00       		.byte	0
 1304 0139 00       		.byte	0
 1305 013a 18       		.uleb128 0x18
 1306 013b 1D       		.uleb128 0x1d
 1307 013c 01       		.byte	0x1
 1308 013d 31       		.uleb128 0x31
 1309 013e 13       		.uleb128 0x13
 1310 013f 11       		.uleb128 0x11
 1311 0140 01       		.uleb128 0x1
 1312 0141 12       		.uleb128 0x12
 1313 0142 06       		.uleb128 0x6
 1314 0143 58       		.uleb128 0x58
 1315 0144 0B       		.uleb128 0xb
 1316 0145 59       		.uleb128 0x59
 1317 0146 05       		.uleb128 0x5
 1318 0147 00       		.byte	0
 1319 0148 00       		.byte	0
 1320 0149 19       		.uleb128 0x19
 1321 014a 05       		.uleb128 0x5
 1322 014b 00       		.byte	0
 1323 014c 31       		.uleb128 0x31
 1324 014d 13       		.uleb128 0x13
 1325 014e 02       		.uleb128 0x2
 1326 014f 17       		.uleb128 0x17
 1327 0150 00       		.byte	0
 1328 0151 00       		.byte	0
 1329 0152 1A       		.uleb128 0x1a
 1330 0153 0B       		.uleb128 0xb
 1331 0154 01       		.byte	0x1
 1332 0155 11       		.uleb128 0x11
 1333 0156 01       		.uleb128 0x1
 1334 0157 12       		.uleb128 0x12
 1335 0158 06       		.uleb128 0x6
 1336 0159 00       		.byte	0
 1337 015a 00       		.byte	0
 1338 015b 1B       		.uleb128 0x1b
 1339 015c 34       		.uleb128 0x34
 1340 015d 00       		.byte	0
 1341 015e 31       		.uleb128 0x31
ARM GAS  C:\Users\essele\AppData\Local\Temp\cc4YPBQv.s 			page 49


 1342 015f 13       		.uleb128 0x13
 1343 0160 02       		.uleb128 0x2
 1344 0161 17       		.uleb128 0x17
 1345 0162 00       		.byte	0
 1346 0163 00       		.byte	0
 1347 0164 1C       		.uleb128 0x1c
 1348 0165 34       		.uleb128 0x34
 1349 0166 00       		.byte	0
 1350 0167 31       		.uleb128 0x31
 1351 0168 13       		.uleb128 0x13
 1352 0169 02       		.uleb128 0x2
 1353 016a 18       		.uleb128 0x18
 1354 016b 00       		.byte	0
 1355 016c 00       		.byte	0
 1356 016d 1D       		.uleb128 0x1d
 1357 016e 898201   		.uleb128 0x4109
 1358 0171 00       		.byte	0
 1359 0172 11       		.uleb128 0x11
 1360 0173 01       		.uleb128 0x1
 1361 0174 9342     		.uleb128 0x2113
 1362 0176 18       		.uleb128 0x18
 1363 0177 00       		.byte	0
 1364 0178 00       		.byte	0
 1365 0179 1E       		.uleb128 0x1e
 1366 017a 34       		.uleb128 0x34
 1367 017b 00       		.byte	0
 1368 017c 03       		.uleb128 0x3
 1369 017d 0E       		.uleb128 0xe
 1370 017e 3A       		.uleb128 0x3a
 1371 017f 0B       		.uleb128 0xb
 1372 0180 3B       		.uleb128 0x3b
 1373 0181 0B       		.uleb128 0xb
 1374 0182 49       		.uleb128 0x49
 1375 0183 13       		.uleb128 0x13
 1376 0184 3F       		.uleb128 0x3f
 1377 0185 19       		.uleb128 0x19
 1378 0186 3C       		.uleb128 0x3c
 1379 0187 19       		.uleb128 0x19
 1380 0188 00       		.byte	0
 1381 0189 00       		.byte	0
 1382 018a 1F       		.uleb128 0x1f
 1383 018b 2E       		.uleb128 0x2e
 1384 018c 00       		.byte	0
 1385 018d 3F       		.uleb128 0x3f
 1386 018e 19       		.uleb128 0x19
 1387 018f 3C       		.uleb128 0x3c
 1388 0190 19       		.uleb128 0x19
 1389 0191 6E       		.uleb128 0x6e
 1390 0192 0E       		.uleb128 0xe
 1391 0193 03       		.uleb128 0x3
 1392 0194 0E       		.uleb128 0xe
 1393 0195 3A       		.uleb128 0x3a
 1394 0196 0B       		.uleb128 0xb
 1395 0197 3B       		.uleb128 0x3b
 1396 0198 0B       		.uleb128 0xb
 1397 0199 00       		.byte	0
 1398 019a 00       		.byte	0
ARM GAS  C:\Users\essele\AppData\Local\Temp\cc4YPBQv.s 			page 50


 1399 019b 00       		.byte	0
 1400              		.section	.debug_loc,"",%progbits
 1401              	.Ldebug_loc0:
 1402              	.LLST0:
 1403 0000 06000000 		.4byte	.LVL1
 1404 0004 1E000000 		.4byte	.LVL3
 1405 0008 0100     		.2byte	0x1
 1406 000a 55       		.byte	0x55
 1407 000b 1E000000 		.4byte	.LVL3
 1408 000f 36000000 		.4byte	.LVL8
 1409 0013 0100     		.2byte	0x1
 1410 0015 54       		.byte	0x54
 1411 0016 00000000 		.4byte	0
 1412 001a 00000000 		.4byte	0
 1413              	.LLST1:
 1414 001e 06000000 		.4byte	.LVL1
 1415 0022 22000000 		.4byte	.LVL4
 1416 0026 0200     		.2byte	0x2
 1417 0028 30       		.byte	0x30
 1418 0029 9F       		.byte	0x9f
 1419 002a 22000000 		.4byte	.LVL4
 1420 002e 36000000 		.4byte	.LVL9
 1421 0032 0100     		.2byte	0x1
 1422 0034 55       		.byte	0x55
 1423 0035 00000000 		.4byte	0
 1424 0039 00000000 		.4byte	0
 1425              	.LLST2:
 1426 003d 06000000 		.4byte	.LVL10
 1427 0041 1E000000 		.4byte	.LVL12
 1428 0045 0100     		.2byte	0x1
 1429 0047 55       		.byte	0x55
 1430 0048 1E000000 		.4byte	.LVL12
 1431 004c 36000000 		.4byte	.LVL17
 1432 0050 0100     		.2byte	0x1
 1433 0052 54       		.byte	0x54
 1434 0053 00000000 		.4byte	0
 1435 0057 00000000 		.4byte	0
 1436              	.LLST3:
 1437 005b 06000000 		.4byte	.LVL10
 1438 005f 22000000 		.4byte	.LVL13
 1439 0063 0200     		.2byte	0x2
 1440 0065 30       		.byte	0x30
 1441 0066 9F       		.byte	0x9f
 1442 0067 22000000 		.4byte	.LVL13
 1443 006b 36000000 		.4byte	.LVL18
 1444 006f 0100     		.2byte	0x1
 1445 0071 55       		.byte	0x55
 1446 0072 00000000 		.4byte	0
 1447 0076 00000000 		.4byte	0
 1448              	.LLST4:
 1449 007a 06000000 		.4byte	.LVL19
 1450 007e 1E000000 		.4byte	.LVL21
 1451 0082 0100     		.2byte	0x1
 1452 0084 55       		.byte	0x55
 1453 0085 1E000000 		.4byte	.LVL21
 1454 0089 36000000 		.4byte	.LVL26
 1455 008d 0100     		.2byte	0x1
ARM GAS  C:\Users\essele\AppData\Local\Temp\cc4YPBQv.s 			page 51


 1456 008f 54       		.byte	0x54
 1457 0090 00000000 		.4byte	0
 1458 0094 00000000 		.4byte	0
 1459              	.LLST5:
 1460 0098 06000000 		.4byte	.LVL19
 1461 009c 22000000 		.4byte	.LVL22
 1462 00a0 0200     		.2byte	0x2
 1463 00a2 30       		.byte	0x30
 1464 00a3 9F       		.byte	0x9f
 1465 00a4 22000000 		.4byte	.LVL22
 1466 00a8 36000000 		.4byte	.LVL27
 1467 00ac 0100     		.2byte	0x1
 1468 00ae 55       		.byte	0x55
 1469 00af 00000000 		.4byte	0
 1470 00b3 00000000 		.4byte	0
 1471              		.section	.debug_aranges,"",%progbits
 1472 0000 54000000 		.4byte	0x54
 1473 0004 0200     		.2byte	0x2
 1474 0006 00000000 		.4byte	.Ldebug_info0
 1475 000a 04       		.byte	0x4
 1476 000b 00       		.byte	0
 1477 000c 0000     		.2byte	0
 1478 000e 0000     		.2byte	0
 1479 0010 00000000 		.4byte	.LFB1
 1480 0014 38000000 		.4byte	.LFE1-.LFB1
 1481 0018 00000000 		.4byte	.LFB2
 1482 001c 3C000000 		.4byte	.LFE2-.LFB2
 1483 0020 00000000 		.4byte	.LFB3
 1484 0024 40000000 		.4byte	.LFE3-.LFB3
 1485 0028 00000000 		.4byte	.LFB4
 1486 002c 0C000000 		.4byte	.LFE4-.LFB4
 1487 0030 00000000 		.4byte	.LFB5
 1488 0034 14000000 		.4byte	.LFE5-.LFB5
 1489 0038 00000000 		.4byte	.LFB7
 1490 003c 40000000 		.4byte	.LFE7-.LFB7
 1491 0040 00000000 		.4byte	.LFB8
 1492 0044 40000000 		.4byte	.LFE8-.LFB8
 1493 0048 00000000 		.4byte	.LFB9
 1494 004c 40000000 		.4byte	.LFE9-.LFB9
 1495 0050 00000000 		.4byte	0
 1496 0054 00000000 		.4byte	0
 1497              		.section	.debug_ranges,"",%progbits
 1498              	.Ldebug_ranges0:
 1499 0000 00000000 		.4byte	.LFB1
 1500 0004 38000000 		.4byte	.LFE1
 1501 0008 00000000 		.4byte	.LFB2
 1502 000c 3C000000 		.4byte	.LFE2
 1503 0010 00000000 		.4byte	.LFB3
 1504 0014 40000000 		.4byte	.LFE3
 1505 0018 00000000 		.4byte	.LFB4
 1506 001c 0C000000 		.4byte	.LFE4
 1507 0020 00000000 		.4byte	.LFB5
 1508 0024 14000000 		.4byte	.LFE5
 1509 0028 00000000 		.4byte	.LFB7
 1510 002c 40000000 		.4byte	.LFE7
 1511 0030 00000000 		.4byte	.LFB8
 1512 0034 40000000 		.4byte	.LFE8
ARM GAS  C:\Users\essele\AppData\Local\Temp\cc4YPBQv.s 			page 52


 1513 0038 00000000 		.4byte	.LFB9
 1514 003c 40000000 		.4byte	.LFE9
 1515 0040 00000000 		.4byte	0
 1516 0044 00000000 		.4byte	0
 1517              		.section	.debug_line,"",%progbits
 1518              	.Ldebug_line0:
 1519 0000 65010000 		.section	.debug_str,"MS",%progbits,1
 1519      02006800 
 1519      00000201 
 1519      FB0E0D00 
 1519      01010101 
 1520              	.LASF37:
 1521 0000 55534255 		.ascii	"USBUART_EP_3_ISR\000"
 1521      4152545F 
 1521      45505F33 
 1521      5F495352 
 1521      00
 1522              	.LASF15:
 1523 0011 72656733 		.ascii	"reg32\000"
 1523      3200
 1524              	.LASF51:
 1525 0017 55534255 		.ascii	"USBUART_ReInitComponent\000"
 1525      4152545F 
 1525      5265496E 
 1525      6974436F 
 1525      6D706F6E 
 1526              	.LASF31:
 1527 002f 65704372 		.ascii	"epCr0\000"
 1527      3000
 1528              	.LASF12:
 1529 0035 666C6F61 		.ascii	"float\000"
 1529      7400
 1530              	.LASF3:
 1531 003b 73686F72 		.ascii	"short unsigned int\000"
 1531      7420756E 
 1531      7369676E 
 1531      65642069 
 1531      6E7400
 1532              	.LASF36:
 1533 004e 55534255 		.ascii	"USBUART_EP_2_ISR\000"
 1533      4152545F 
 1533      45505F32 
 1533      5F495352 
 1533      00
 1534              	.LASF44:
 1535 005f 55534255 		.ascii	"USBUART_INTR_LO_ISR\000"
 1535      4152545F 
 1535      494E5452 
 1535      5F4C4F5F 
 1535      49535200 
 1536              	.LASF38:
 1537 0073 55534255 		.ascii	"USBUART_SOF_ISR\000"
 1537      4152545F 
 1537      534F465F 
 1537      49535200 
 1538              	.LASF48:
 1539 0083 55534255 		.ascii	"USBUART_IntrHandler\000"
ARM GAS  C:\Users\essele\AppData\Local\Temp\cc4YPBQv.s 			page 53


 1539      4152545F 
 1539      496E7472 
 1539      48616E64 
 1539      6C657200 
 1540              	.LASF47:
 1541 0097 5C5C4D61 		.ascii	"\\\\Mac\\Home\\Documents\\PSoC Creator\\GPIB USB Ad"
 1541      635C486F 
 1541      6D655C44 
 1541      6F63756D 
 1541      656E7473 
 1542 00c4 61707465 		.ascii	"apter\\GPIB USB 1.cydsn\000"
 1542      725C4750 
 1542      49422055 
 1542      53422031 
 1542      2E637964 
 1543              	.LASF32:
 1544 00db 55534255 		.ascii	"USBUART_sie_ep_struct\000"
 1544      4152545F 
 1544      7369655F 
 1544      65705F73 
 1544      74727563 
 1545              	.LASF29:
 1546 00f1 6570436E 		.ascii	"epCnt0\000"
 1546      743000
 1547              	.LASF30:
 1548 00f8 6570436E 		.ascii	"epCnt1\000"
 1548      743100
 1549              	.LASF22:
 1550 00ff 6570546F 		.ascii	"epToggle\000"
 1550      67676C65 
 1550      00
 1551              	.LASF50:
 1552 0108 55534255 		.ascii	"USBUART_EP\000"
 1552      4152545F 
 1552      455000
 1553              	.LASF20:
 1554 0113 61706945 		.ascii	"apiEpState\000"
 1554      70537461 
 1554      746500
 1555              	.LASF5:
 1556 011e 6C6F6E67 		.ascii	"long unsigned int\000"
 1556      20756E73 
 1556      69676E65 
 1556      6420696E 
 1556      7400
 1557              	.LASF23:
 1558 0130 61646472 		.ascii	"addr\000"
 1558      00
 1559              	.LASF33:
 1560 0135 73696545 		.ascii	"sieEp\000"
 1560      7000
 1561              	.LASF34:
 1562 013b 55534255 		.ascii	"USBUART_sie_eps_struct\000"
 1562      4152545F 
 1562      7369655F 
 1562      6570735F 
 1562      73747275 
ARM GAS  C:\Users\essele\AppData\Local\Temp\cc4YPBQv.s 			page 54


 1563              	.LASF1:
 1564 0152 756E7369 		.ascii	"unsigned char\000"
 1564      676E6564 
 1564      20636861 
 1564      7200
 1565              	.LASF13:
 1566 0160 646F7562 		.ascii	"double\000"
 1566      6C6500
 1567              	.LASF19:
 1568 0167 61747472 		.ascii	"attrib\000"
 1568      696200
 1569              	.LASF25:
 1570 016e 62756666 		.ascii	"buffOffset\000"
 1570      4F666673 
 1570      657400
 1571              	.LASF10:
 1572 0179 75696E74 		.ascii	"uint16\000"
 1572      313600
 1573              	.LASF39:
 1574 0180 55534255 		.ascii	"USBUART_isrCallbacks\000"
 1574      4152545F 
 1574      69737243 
 1574      616C6C62 
 1574      61636B73 
 1575              	.LASF11:
 1576 0195 75696E74 		.ascii	"uint32\000"
 1576      333200
 1577              	.LASF8:
 1578 019c 756E7369 		.ascii	"unsigned int\000"
 1578      676E6564 
 1578      20696E74 
 1578      00
 1579              	.LASF7:
 1580 01a9 6C6F6E67 		.ascii	"long long unsigned int\000"
 1580      206C6F6E 
 1580      6720756E 
 1580      7369676E 
 1580      65642069 
 1581              	.LASF21:
 1582 01c0 68774570 		.ascii	"hwEpState\000"
 1582      53746174 
 1582      6500
 1583              	.LASF43:
 1584 01ca 55534255 		.ascii	"USBUART_INTR_MED_ISR\000"
 1584      4152545F 
 1584      494E5452 
 1584      5F4D4544 
 1584      5F495352 
 1585              	.LASF16:
 1586 01df 63796973 		.ascii	"cyisraddress\000"
 1586      72616464 
 1586      72657373 
 1586      00
 1587              	.LASF45:
 1588 01ec 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 1588      43313120 
 1588      352E342E 
ARM GAS  C:\Users\essele\AppData\Local\Temp\cc4YPBQv.s 			page 55


 1588      31203230 
 1588      31363036 
 1589 021f 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m0 -mthumb -g -O"
 1589      20726576 
 1589      6973696F 
 1589      6E203233 
 1589      37373135 
 1590 0252 67202D66 		.ascii	"g -ffunction-sections -ffat-lto-objects\000"
 1590      66756E63 
 1590      74696F6E 
 1590      2D736563 
 1590      74696F6E 
 1591              	.LASF18:
 1592 027a 73697A65 		.ascii	"sizetype\000"
 1592      74797065 
 1592      00
 1593              	.LASF24:
 1594 0283 65704D6F 		.ascii	"epMode\000"
 1594      646500
 1595              	.LASF6:
 1596 028a 6C6F6E67 		.ascii	"long long int\000"
 1596      206C6F6E 
 1596      6720696E 
 1596      7400
 1597              	.LASF14:
 1598 0298 63686172 		.ascii	"char\000"
 1598      00
 1599              	.LASF26:
 1600 029d 62756666 		.ascii	"bufferSize\000"
 1600      65725369 
 1600      7A6500
 1601              	.LASF2:
 1602 02a8 73686F72 		.ascii	"short int\000"
 1602      7420696E 
 1602      7400
 1603              	.LASF28:
 1604 02b2 545F5553 		.ascii	"T_USBUART_EP_CTL_BLOCK\000"
 1604      42554152 
 1604      545F4550 
 1604      5F43544C 
 1604      5F424C4F 
 1605              	.LASF41:
 1606 02c9 55534255 		.ascii	"USBUART_BUS_RESET_ISR\000"
 1606      4152545F 
 1606      4255535F 
 1606      52455345 
 1606      545F4953 
 1607              	.LASF9:
 1608 02df 75696E74 		.ascii	"uint8\000"
 1608      3800
 1609              	.LASF27:
 1610 02e5 696E7465 		.ascii	"interface\000"
 1610      72666163 
 1610      6500
 1611              	.LASF40:
 1612 02ef 63624964 		.ascii	"cbIdx\000"
 1612      7800
ARM GAS  C:\Users\essele\AppData\Local\Temp\cc4YPBQv.s 			page 56


 1613              	.LASF4:
 1614 02f5 6C6F6E67 		.ascii	"long int\000"
 1614      20696E74 
 1614      00
 1615              	.LASF49:
 1616 02fe 696E7472 		.ascii	"intrCause\000"
 1616      43617573 
 1616      6500
 1617              	.LASF42:
 1618 0308 55534255 		.ascii	"USBUART_INTR_HI_ISR\000"
 1618      4152545F 
 1618      494E5452 
 1618      5F48495F 
 1618      49535200 
 1619              	.LASF17:
 1620 031c 6C6F6E67 		.ascii	"long double\000"
 1620      20646F75 
 1620      626C6500 
 1621              	.LASF0:
 1622 0328 7369676E 		.ascii	"signed char\000"
 1622      65642063 
 1622      68617200 
 1623              	.LASF35:
 1624 0334 55534255 		.ascii	"USBUART_EP_1_ISR\000"
 1624      4152545F 
 1624      45505F31 
 1624      5F495352 
 1624      00
 1625              	.LASF46:
 1626 0345 47656E65 		.ascii	"Generated_Source\\PSoC4\\USBUART_episr.c\000"
 1626      72617465 
 1626      645F536F 
 1626      75726365 
 1626      5C50536F 
 1627              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
