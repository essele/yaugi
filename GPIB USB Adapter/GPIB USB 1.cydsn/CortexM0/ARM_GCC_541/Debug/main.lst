ARM GAS  C:\Users\essele\AppData\Local\Temp\cc7ox9ME.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m0
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 0
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"main.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.comm	gpib_buf,512,4
  20              		.global	read_err
  21              		.section	.rodata
  22              		.align	2
  23              		.type	read_err, %object
  24              		.size	read_err, 26
  25              	read_err:
  26 0000 3C657272 		.ascii	"<error reading from gpib>\000"
  26      6F722072 
  26      65616469 
  26      6E672066 
  26      726F6D20 
  27              		.global	read_err_len
  28 001a 0000     		.align	2
  29              		.type	read_err_len, %object
  30              		.size	read_err_len, 4
  31              	read_err_len:
  32 001c 1A000000 		.word	26
  33              		.section	.text.main,"ax",%progbits
  34              		.align	2
  35              		.global	main
  36              		.code	16
  37              		.thumb_func
  38              		.type	main, %function
  39              	main:
  40              	.LFB35:
  41              		.file 1 "main.c"
   1:main.c        **** /****
   2:main.c        ****  * YAUGI -- Yet Another USB GPIB Interface
   3:main.c        ****  * 
   4:main.c        ****  * Lee Essen, 2019
   5:main.c        ****  *
   6:main.c        ****  * This work is licensed under a Creative Commons 
   7:main.c        ****  * Attribution-NonCommercial-ShareAlike 4.0 International License.
   8:main.c        ****  *
   9:main.c        ****  */
  10:main.c        **** 
  11:main.c        **** #include "project.h"
  12:main.c        **** #include <stdio.h>
ARM GAS  C:\Users\essele\AppData\Local\Temp\cc7ox9ME.s 			page 2


  13:main.c        **** 
  14:main.c        **** #include "gpib.h"
  15:main.c        **** #include "serial.h"
  16:main.c        **** #include "input.h"
  17:main.c        **** #include "command.h"
  18:main.c        **** #include "settings.h"
  19:main.c        **** #include "utils.h"
  20:main.c        **** #include "usb_tmc.h"
  21:main.c        **** 
  22:main.c        **** 
  23:main.c        **** #define USBFS_DEVICE    (0u)
  24:main.c        **** 
  25:main.c        **** #define GPIB_BUF_SIZE     (512)
  26:main.c        **** 
  27:main.c        **** uint8_t gpib_buf[GPIB_BUF_SIZE];
  28:main.c        **** 
  29:main.c        **** const uint8_t read_err[] = "<error reading from gpib>";
  30:main.c        **** const unsigned int read_err_len = sizeof(read_err);
  31:main.c        **** 
  32:main.c        **** 
  33:main.c        **** int main(void)
  34:main.c        **** {
  42              		.loc 1 34 0
  43              		.cfi_startproc
  44              		@ args = 0, pretend = 0, frame = 0
  45              		@ frame_needed = 1, uses_anonymous_args = 0
  46 0000 80B5     		push	{r7, lr}
  47              		.cfi_def_cfa_offset 8
  48              		.cfi_offset 7, -8
  49              		.cfi_offset 14, -4
  50 0002 00AF     		add	r7, sp, #0
  51              		.cfi_def_cfa_register 7
  35:main.c        ****     
  36:main.c        ****     CyGlobalIntEnable; /* Enable global interrupts. */
  52              		.loc 1 36 0
  53              		.syntax divided
  54              	@ 36 "main.c" 1
  55 0004 62B6     		CPSIE   i
  56              	@ 0 "" 2
  37:main.c        **** 
  38:main.c        ****     /* Place your initialization/startup code here (e.g. MyInst_Start()) */
  39:main.c        **** 
  40:main.c        ****     settings_init();
  57              		.loc 1 40 0
  58              		.thumb
  59              		.syntax unified
  60 0006 FFF7FEFF 		bl	settings_init
  41:main.c        ****     // TODO: keep the eeprom state in memory so we can show it with a ++status type call
  42:main.c        ****    
  43:main.c        ****     PWM_1_Start();
  61              		.loc 1 43 0
  62 000a FFF7FEFF 		bl	PWM_1_Start
  44:main.c        ****     
  45:main.c        **** //    Timer1_Init();
  46:main.c        **** //    Timer1_Enable();
  47:main.c        ****     // Free running counter...
  48:main.c        ****     Timer1_Start();
ARM GAS  C:\Users\essele\AppData\Local\Temp\cc7ox9ME.s 			page 3


  63              		.loc 1 48 0
  64 000e FFF7FEFF 		bl	Timer1_Start
  49:main.c        ****     
  50:main.c        ****     #ifdef USBTMC_TRUE
  51:main.c        ****         #define USB_GetConfiguration(args...)           USBTMC_GetConfiguration(args)
  52:main.c        ****         #define USB_IsConfigurationChanged(args...)     USBTMC_IsConfigurationChanged(args)
  53:main.c        ****         #define USB_GetConfiguration(args...)           USBTMC_GetConfiguration(args)
  54:main.c        **** 
  55:main.c        ****         USBTMC_Start(USBFS_DEVICE, USBTMC_5V_OPERATION);
  56:main.c        ****         USBTMC_SetPowerStatus(USBTMC_DEVICE_STATUS_BUS_POWERED );    
  57:main.c        ****     #endif
  58:main.c        **** 
  59:main.c        ****     #ifdef USBUART_TRUE
  60:main.c        ****         #define USB_GetConfiguration(args...)           USBUART_GetConfiguration(args)
  61:main.c        ****         #define USB_IsConfigurationChanged(args...)     USBUART_IsConfigurationChanged(args)
  62:main.c        ****         #define USB_GetConfiguration(args...)           USBUART_GetConfiguration(args)
  63:main.c        **** 
  64:main.c        ****         USBUART_Start(USBFS_DEVICE, USBUART_5V_OPERATION);
  65              		.loc 1 64 0
  66 0012 0121     		movs	r1, #1
  67 0014 0020     		movs	r0, #0
  68 0016 FFF7FEFF 		bl	USBUART_Start
  65:main.c        ****         USBUART_SetPowerStatus(USBUART_DEVICE_STATUS_BUS_POWERED );        
  69              		.loc 1 65 0
  70 001a 0020     		movs	r0, #0
  71 001c FFF7FEFF 		bl	USBUART_SetPowerStatus
  66:main.c        ****     #endif
  67:main.c        ****     
  68:main.c        ****     #ifdef USBCOMP_TRUE
  69:main.c        ****         #define USB_GetConfiguration(args...)           USBCOMP_GetConfiguration(args)
  70:main.c        ****         #define USB_IsConfigurationChanged(args...)     USBCOMP_IsConfigurationChanged(args)
  71:main.c        ****         #define USB_GetConfiguration(args...)           USBCOMP_GetConfiguration(args)
  72:main.c        **** 
  73:main.c        ****         USBCOMP_Start(USBFS_DEVICE, USBCOMP_5V_OPERATION);
  74:main.c        ****         USBCOMP_SetPowerStatus(USBCOMP_DEVICE_STATUS_BUS_POWERED );
  75:main.c        ****     #endif
  76:main.c        ****     
  77:main.c        **** 
  78:main.c        **** //    CyDelay(500);
  79:main.c        ****     
  80:main.c        ****     /* Wait until device is enumerated by host. */
  81:main.c        **** 
  82:main.c        ****     while (0u == USB_GetConfiguration()) {}
  72              		.loc 1 82 0
  73 0020 C046     		nop
  74              	.L2:
  75              		.loc 1 82 0 is_stmt 0 discriminator 1
  76 0022 FFF7FEFF 		bl	USBUART_GetConfiguration
  77 0026 031E     		subs	r3, r0, #0
  78 0028 FBD0     		beq	.L2
  83:main.c        ****     
  84:main.c        ****     
  85:main.c        ****      /* Enable OUT endpoints to receive data from host. */
  86:main.c        **** #if defined(USBTMC_TRUE) || defined(USBCOMP_TRUE)
  87:main.c        ****     usbtmc_reconfig();
  88:main.c        **** #endif 
  89:main.c        **** #if defined(USBUART_TRUE) || defined(USBCOMP_TRUE)
ARM GAS  C:\Users\essele\AppData\Local\Temp\cc7ox9ME.s 			page 4


  90:main.c        ****     usbuart_reconfig();
  79              		.loc 1 90 0 is_stmt 1
  80 002a FFF7FEFF 		bl	usbuart_reconfig
  81              	.L5:
  91:main.c        **** #endif 
  92:main.c        ****     
  93:main.c        **** //    USBUART_EnableOutEP(USBUART_EP2);
  94:main.c        ****     
  95:main.c        ****  //   input_start();
  96:main.c        ****     
  97:main.c        ****     for(;;)
  98:main.c        ****     {
  99:main.c        ****         // Handle reconfiguration of the device...
 100:main.c        ****         if (0u != USB_IsConfigurationChanged())
  82              		.loc 1 100 0
  83 002e FFF7FEFF 		bl	USBUART_IsConfigurationChanged
  84 0032 031E     		subs	r3, r0, #0
  85 0034 05D0     		beq	.L3
 101:main.c        ****         {
 102:main.c        ****             // Initialize IN endpoints when device is configured...
 103:main.c        ****             if (0u != USB_GetConfiguration())
  86              		.loc 1 103 0
  87 0036 FFF7FEFF 		bl	USBUART_GetConfiguration
  88 003a 031E     		subs	r3, r0, #0
  89 003c 01D0     		beq	.L3
 104:main.c        ****             {
 105:main.c        **** #if defined(USBTMC_TRUE) || defined(USBCOMP_TRUE)
 106:main.c        ****                 usbtmc_reconfig();
 107:main.c        **** #endif 
 108:main.c        **** #if defined(USBUART_TRUE) || defined(USBCOMP_TRUE)
 109:main.c        ****                 usbuart_reconfig();
  90              		.loc 1 109 0
  91 003e FFF7FEFF 		bl	usbuart_reconfig
  92              	.L3:
 110:main.c        **** #endif                
 111:main.c        ****             }
 112:main.c        ****         }
 113:main.c        ****         
 114:main.c        ****         // Check for state changes with GPIB
 115:main.c        ****         if (gpib_poll() == 1) {
  93              		.loc 1 115 0
  94 0042 FFF7FEFF 		bl	gpib_poll
 116:main.c        ****             // TODO: make this user friendly (what does state mean)
 117:main.c        **** //            serial_printf("<gpib state change: state is now %d\r\n", gpib_get_mode());
 118:main.c        ****         }
 119:main.c        ****         
 120:main.c        ****         // Main processing (if we are configured
 121:main.c        ****         if (USB_GetConfiguration() != 0) {
  95              		.loc 1 121 0
  96 0046 FFF7FEFF 		bl	USBUART_GetConfiguration
  97 004a 031E     		subs	r3, r0, #0
  98 004c EFD0     		beq	.L5
 122:main.c        **** 
 123:main.c        ****             // Run TMC related processing...
 124:main.c        **** #if defined(USBTMC_TRUE) || defined(USBCOMP_TRUE)
 125:main.c        ****             usbtmc_poll();
 126:main.c        **** #endif
ARM GAS  C:\Users\essele\AppData\Local\Temp\cc7ox9ME.s 			page 5


 127:main.c        ****             // Run UART related processing...
 128:main.c        **** #if defined(USBUART_TRUE) || defined(USBCOMP_TRUE)
 129:main.c        ****             //process_incoming_usb();
 130:main.c        ****             //process_outgoing_usb();
 131:main.c        ****             usbuart_poll();
  99              		.loc 1 131 0
 100 004e FFF7FEFF 		bl	usbuart_poll
 132:main.c        **** #endif
 133:main.c        ****         }
 134:main.c        ****     }
 101              		.loc 1 134 0
 102 0052 ECE7     		b	.L5
 103              		.cfi_endproc
 104              	.LFE35:
 105              		.size	main, .-main
 106              		.text
 107              	.Letext0:
 108              		.file 2 "c:\\program files (x86)\\cypress\\psoc creator\\4.2\\psoc creator\\import\\gnu\\arm\\5.4.
 109              		.file 3 "c:\\program files (x86)\\cypress\\psoc creator\\4.2\\psoc creator\\import\\gnu\\arm\\5.4.
 110              		.section	.debug_info,"",%progbits
 111              	.Ldebug_info0:
 112 0000 19010000 		.4byte	0x119
 113 0004 0400     		.2byte	0x4
 114 0006 00000000 		.4byte	.Ldebug_abbrev0
 115 000a 04       		.byte	0x4
 116 000b 01       		.uleb128 0x1
 117 000c D6000000 		.4byte	.LASF19
 118 0010 0C       		.byte	0xc
 119 0011 1B000000 		.4byte	.LASF20
 120 0015 64010000 		.4byte	.LASF21
 121 0019 00000000 		.4byte	.Ldebug_ranges0+0
 122 001d 00000000 		.4byte	0
 123 0021 00000000 		.4byte	.Ldebug_line0
 124 0025 02       		.uleb128 0x2
 125 0026 01       		.byte	0x1
 126 0027 06       		.byte	0x6
 127 0028 AE000000 		.4byte	.LASF0
 128 002c 03       		.uleb128 0x3
 129 002d 59000000 		.4byte	.LASF9
 130 0031 02       		.byte	0x2
 131 0032 1D       		.byte	0x1d
 132 0033 37000000 		.4byte	0x37
 133 0037 02       		.uleb128 0x2
 134 0038 01       		.byte	0x1
 135 0039 08       		.byte	0x8
 136 003a 6B000000 		.4byte	.LASF1
 137 003e 02       		.uleb128 0x2
 138 003f 02       		.byte	0x2
 139 0040 05       		.byte	0x5
 140 0041 CC000000 		.4byte	.LASF2
 141 0045 02       		.uleb128 0x2
 142 0046 02       		.byte	0x2
 143 0047 07       		.byte	0x7
 144 0048 9B000000 		.4byte	.LASF3
 145 004c 02       		.uleb128 0x2
 146 004d 04       		.byte	0x4
 147 004e 05       		.byte	0x5
ARM GAS  C:\Users\essele\AppData\Local\Temp\cc7ox9ME.s 			page 6


 148 004f 7E000000 		.4byte	.LASF4
 149 0053 02       		.uleb128 0x2
 150 0054 04       		.byte	0x4
 151 0055 07       		.byte	0x7
 152 0056 30000000 		.4byte	.LASF5
 153 005a 02       		.uleb128 0x2
 154 005b 08       		.byte	0x8
 155 005c 05       		.byte	0x5
 156 005d 00000000 		.4byte	.LASF6
 157 0061 02       		.uleb128 0x2
 158 0062 08       		.byte	0x8
 159 0063 07       		.byte	0x7
 160 0064 42000000 		.4byte	.LASF7
 161 0068 04       		.uleb128 0x4
 162 0069 04       		.byte	0x4
 163 006a 05       		.byte	0x5
 164 006b 696E7400 		.ascii	"int\000"
 165 006f 02       		.uleb128 0x2
 166 0070 04       		.byte	0x4
 167 0071 07       		.byte	0x7
 168 0072 0E000000 		.4byte	.LASF8
 169 0076 03       		.uleb128 0x3
 170 0077 63000000 		.4byte	.LASF10
 171 007b 03       		.byte	0x3
 172 007c 18       		.byte	0x18
 173 007d 2C000000 		.4byte	0x2c
 174 0081 02       		.uleb128 0x2
 175 0082 04       		.byte	0x4
 176 0083 04       		.byte	0x4
 177 0084 C6000000 		.4byte	.LASF11
 178 0088 02       		.uleb128 0x2
 179 0089 08       		.byte	0x8
 180 008a 04       		.byte	0x4
 181 008b 87000000 		.4byte	.LASF12
 182 008f 02       		.uleb128 0x2
 183 0090 01       		.byte	0x1
 184 0091 08       		.byte	0x8
 185 0092 79000000 		.4byte	.LASF13
 186 0096 02       		.uleb128 0x2
 187 0097 08       		.byte	0x8
 188 0098 04       		.byte	0x4
 189 0099 BA000000 		.4byte	.LASF14
 190 009d 02       		.uleb128 0x2
 191 009e 04       		.byte	0x4
 192 009f 07       		.byte	0x7
 193 00a0 A5010000 		.4byte	.LASF15
 194 00a4 05       		.uleb128 0x5
 195 00a5 22000000 		.4byte	.LASF22
 196 00a9 01       		.byte	0x1
 197 00aa 21       		.byte	0x21
 198 00ab 68000000 		.4byte	0x68
 199 00af 00000000 		.4byte	.LFB35
 200 00b3 54000000 		.4byte	.LFE35-.LFB35
 201 00b7 01       		.uleb128 0x1
 202 00b8 9C       		.byte	0x9c
 203 00b9 06       		.uleb128 0x6
 204 00ba 76000000 		.4byte	0x76
ARM GAS  C:\Users\essele\AppData\Local\Temp\cc7ox9ME.s 			page 7


 205 00be CA000000 		.4byte	0xca
 206 00c2 07       		.uleb128 0x7
 207 00c3 9D000000 		.4byte	0x9d
 208 00c7 FF01     		.2byte	0x1ff
 209 00c9 00       		.byte	0
 210 00ca 08       		.uleb128 0x8
 211 00cb 27000000 		.4byte	.LASF16
 212 00cf 01       		.byte	0x1
 213 00d0 1B       		.byte	0x1b
 214 00d1 B9000000 		.4byte	0xb9
 215 00d5 05       		.uleb128 0x5
 216 00d6 03       		.byte	0x3
 217 00d7 00000000 		.4byte	gpib_buf
 218 00db 06       		.uleb128 0x6
 219 00dc EB000000 		.4byte	0xeb
 220 00e0 EB000000 		.4byte	0xeb
 221 00e4 09       		.uleb128 0x9
 222 00e5 9D000000 		.4byte	0x9d
 223 00e9 19       		.byte	0x19
 224 00ea 00       		.byte	0
 225 00eb 0A       		.uleb128 0xa
 226 00ec 76000000 		.4byte	0x76
 227 00f0 08       		.uleb128 0x8
 228 00f1 AE010000 		.4byte	.LASF17
 229 00f5 01       		.byte	0x1
 230 00f6 1D       		.byte	0x1d
 231 00f7 01010000 		.4byte	0x101
 232 00fb 05       		.uleb128 0x5
 233 00fc 03       		.byte	0x3
 234 00fd 00000000 		.4byte	read_err
 235 0101 0A       		.uleb128 0xa
 236 0102 DB000000 		.4byte	0xdb
 237 0106 08       		.uleb128 0x8
 238 0107 8E000000 		.4byte	.LASF18
 239 010b 01       		.byte	0x1
 240 010c 1E       		.byte	0x1e
 241 010d 17010000 		.4byte	0x117
 242 0111 05       		.uleb128 0x5
 243 0112 03       		.byte	0x3
 244 0113 00000000 		.4byte	read_err_len
 245 0117 0A       		.uleb128 0xa
 246 0118 6F000000 		.4byte	0x6f
 247 011c 00       		.byte	0
 248              		.section	.debug_abbrev,"",%progbits
 249              	.Ldebug_abbrev0:
 250 0000 01       		.uleb128 0x1
 251 0001 11       		.uleb128 0x11
 252 0002 01       		.byte	0x1
 253 0003 25       		.uleb128 0x25
 254 0004 0E       		.uleb128 0xe
 255 0005 13       		.uleb128 0x13
 256 0006 0B       		.uleb128 0xb
 257 0007 03       		.uleb128 0x3
 258 0008 0E       		.uleb128 0xe
 259 0009 1B       		.uleb128 0x1b
 260 000a 0E       		.uleb128 0xe
 261 000b 55       		.uleb128 0x55
ARM GAS  C:\Users\essele\AppData\Local\Temp\cc7ox9ME.s 			page 8


 262 000c 17       		.uleb128 0x17
 263 000d 11       		.uleb128 0x11
 264 000e 01       		.uleb128 0x1
 265 000f 10       		.uleb128 0x10
 266 0010 17       		.uleb128 0x17
 267 0011 00       		.byte	0
 268 0012 00       		.byte	0
 269 0013 02       		.uleb128 0x2
 270 0014 24       		.uleb128 0x24
 271 0015 00       		.byte	0
 272 0016 0B       		.uleb128 0xb
 273 0017 0B       		.uleb128 0xb
 274 0018 3E       		.uleb128 0x3e
 275 0019 0B       		.uleb128 0xb
 276 001a 03       		.uleb128 0x3
 277 001b 0E       		.uleb128 0xe
 278 001c 00       		.byte	0
 279 001d 00       		.byte	0
 280 001e 03       		.uleb128 0x3
 281 001f 16       		.uleb128 0x16
 282 0020 00       		.byte	0
 283 0021 03       		.uleb128 0x3
 284 0022 0E       		.uleb128 0xe
 285 0023 3A       		.uleb128 0x3a
 286 0024 0B       		.uleb128 0xb
 287 0025 3B       		.uleb128 0x3b
 288 0026 0B       		.uleb128 0xb
 289 0027 49       		.uleb128 0x49
 290 0028 13       		.uleb128 0x13
 291 0029 00       		.byte	0
 292 002a 00       		.byte	0
 293 002b 04       		.uleb128 0x4
 294 002c 24       		.uleb128 0x24
 295 002d 00       		.byte	0
 296 002e 0B       		.uleb128 0xb
 297 002f 0B       		.uleb128 0xb
 298 0030 3E       		.uleb128 0x3e
 299 0031 0B       		.uleb128 0xb
 300 0032 03       		.uleb128 0x3
 301 0033 08       		.uleb128 0x8
 302 0034 00       		.byte	0
 303 0035 00       		.byte	0
 304 0036 05       		.uleb128 0x5
 305 0037 2E       		.uleb128 0x2e
 306 0038 00       		.byte	0
 307 0039 3F       		.uleb128 0x3f
 308 003a 19       		.uleb128 0x19
 309 003b 03       		.uleb128 0x3
 310 003c 0E       		.uleb128 0xe
 311 003d 3A       		.uleb128 0x3a
 312 003e 0B       		.uleb128 0xb
 313 003f 3B       		.uleb128 0x3b
 314 0040 0B       		.uleb128 0xb
 315 0041 27       		.uleb128 0x27
 316 0042 19       		.uleb128 0x19
 317 0043 49       		.uleb128 0x49
 318 0044 13       		.uleb128 0x13
ARM GAS  C:\Users\essele\AppData\Local\Temp\cc7ox9ME.s 			page 9


 319 0045 11       		.uleb128 0x11
 320 0046 01       		.uleb128 0x1
 321 0047 12       		.uleb128 0x12
 322 0048 06       		.uleb128 0x6
 323 0049 40       		.uleb128 0x40
 324 004a 18       		.uleb128 0x18
 325 004b 9642     		.uleb128 0x2116
 326 004d 19       		.uleb128 0x19
 327 004e 00       		.byte	0
 328 004f 00       		.byte	0
 329 0050 06       		.uleb128 0x6
 330 0051 01       		.uleb128 0x1
 331 0052 01       		.byte	0x1
 332 0053 49       		.uleb128 0x49
 333 0054 13       		.uleb128 0x13
 334 0055 01       		.uleb128 0x1
 335 0056 13       		.uleb128 0x13
 336 0057 00       		.byte	0
 337 0058 00       		.byte	0
 338 0059 07       		.uleb128 0x7
 339 005a 21       		.uleb128 0x21
 340 005b 00       		.byte	0
 341 005c 49       		.uleb128 0x49
 342 005d 13       		.uleb128 0x13
 343 005e 2F       		.uleb128 0x2f
 344 005f 05       		.uleb128 0x5
 345 0060 00       		.byte	0
 346 0061 00       		.byte	0
 347 0062 08       		.uleb128 0x8
 348 0063 34       		.uleb128 0x34
 349 0064 00       		.byte	0
 350 0065 03       		.uleb128 0x3
 351 0066 0E       		.uleb128 0xe
 352 0067 3A       		.uleb128 0x3a
 353 0068 0B       		.uleb128 0xb
 354 0069 3B       		.uleb128 0x3b
 355 006a 0B       		.uleb128 0xb
 356 006b 49       		.uleb128 0x49
 357 006c 13       		.uleb128 0x13
 358 006d 3F       		.uleb128 0x3f
 359 006e 19       		.uleb128 0x19
 360 006f 02       		.uleb128 0x2
 361 0070 18       		.uleb128 0x18
 362 0071 00       		.byte	0
 363 0072 00       		.byte	0
 364 0073 09       		.uleb128 0x9
 365 0074 21       		.uleb128 0x21
 366 0075 00       		.byte	0
 367 0076 49       		.uleb128 0x49
 368 0077 13       		.uleb128 0x13
 369 0078 2F       		.uleb128 0x2f
 370 0079 0B       		.uleb128 0xb
 371 007a 00       		.byte	0
 372 007b 00       		.byte	0
 373 007c 0A       		.uleb128 0xa
 374 007d 26       		.uleb128 0x26
 375 007e 00       		.byte	0
ARM GAS  C:\Users\essele\AppData\Local\Temp\cc7ox9ME.s 			page 10


 376 007f 49       		.uleb128 0x49
 377 0080 13       		.uleb128 0x13
 378 0081 00       		.byte	0
 379 0082 00       		.byte	0
 380 0083 00       		.byte	0
 381              		.section	.debug_aranges,"",%progbits
 382 0000 1C000000 		.4byte	0x1c
 383 0004 0200     		.2byte	0x2
 384 0006 00000000 		.4byte	.Ldebug_info0
 385 000a 04       		.byte	0x4
 386 000b 00       		.byte	0
 387 000c 0000     		.2byte	0
 388 000e 0000     		.2byte	0
 389 0010 00000000 		.4byte	.LFB35
 390 0014 54000000 		.4byte	.LFE35-.LFB35
 391 0018 00000000 		.4byte	0
 392 001c 00000000 		.4byte	0
 393              		.section	.debug_ranges,"",%progbits
 394              	.Ldebug_ranges0:
 395 0000 00000000 		.4byte	.LFB35
 396 0004 54000000 		.4byte	.LFE35
 397 0008 00000000 		.4byte	0
 398 000c 00000000 		.4byte	0
 399              		.section	.debug_line,"",%progbits
 400              	.Ldebug_line0:
 401 0000 4D010000 		.section	.debug_str,"MS",%progbits,1
 401      02001A01 
 401      00000201 
 401      FB0E0D00 
 401      01010101 
 402              	.LASF6:
 403 0000 6C6F6E67 		.ascii	"long long int\000"
 403      206C6F6E 
 403      6720696E 
 403      7400
 404              	.LASF8:
 405 000e 756E7369 		.ascii	"unsigned int\000"
 405      676E6564 
 405      20696E74 
 405      00
 406              	.LASF20:
 407 001b 6D61696E 		.ascii	"main.c\000"
 407      2E6300
 408              	.LASF22:
 409 0022 6D61696E 		.ascii	"main\000"
 409      00
 410              	.LASF16:
 411 0027 67706962 		.ascii	"gpib_buf\000"
 411      5F627566 
 411      00
 412              	.LASF5:
 413 0030 6C6F6E67 		.ascii	"long unsigned int\000"
 413      20756E73 
 413      69676E65 
 413      6420696E 
 413      7400
 414              	.LASF7:
ARM GAS  C:\Users\essele\AppData\Local\Temp\cc7ox9ME.s 			page 11


 415 0042 6C6F6E67 		.ascii	"long long unsigned int\000"
 415      206C6F6E 
 415      6720756E 
 415      7369676E 
 415      65642069 
 416              	.LASF9:
 417 0059 5F5F7569 		.ascii	"__uint8_t\000"
 417      6E74385F 
 417      7400
 418              	.LASF10:
 419 0063 75696E74 		.ascii	"uint8_t\000"
 419      385F7400 
 420              	.LASF1:
 421 006b 756E7369 		.ascii	"unsigned char\000"
 421      676E6564 
 421      20636861 
 421      7200
 422              	.LASF13:
 423 0079 63686172 		.ascii	"char\000"
 423      00
 424              	.LASF4:
 425 007e 6C6F6E67 		.ascii	"long int\000"
 425      20696E74 
 425      00
 426              	.LASF12:
 427 0087 646F7562 		.ascii	"double\000"
 427      6C6500
 428              	.LASF18:
 429 008e 72656164 		.ascii	"read_err_len\000"
 429      5F657272 
 429      5F6C656E 
 429      00
 430              	.LASF3:
 431 009b 73686F72 		.ascii	"short unsigned int\000"
 431      7420756E 
 431      7369676E 
 431      65642069 
 431      6E7400
 432              	.LASF0:
 433 00ae 7369676E 		.ascii	"signed char\000"
 433      65642063 
 433      68617200 
 434              	.LASF14:
 435 00ba 6C6F6E67 		.ascii	"long double\000"
 435      20646F75 
 435      626C6500 
 436              	.LASF11:
 437 00c6 666C6F61 		.ascii	"float\000"
 437      7400
 438              	.LASF2:
 439 00cc 73686F72 		.ascii	"short int\000"
 439      7420696E 
 439      7400
 440              	.LASF19:
 441 00d6 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 441      43313120 
 441      352E342E 
ARM GAS  C:\Users\essele\AppData\Local\Temp\cc7ox9ME.s 			page 12


 441      31203230 
 441      31363036 
 442 0109 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m0 -mthumb -g -O"
 442      20726576 
 442      6973696F 
 442      6E203233 
 442      37373135 
 443 013c 30202D66 		.ascii	"0 -ffunction-sections -ffat-lto-objects\000"
 443      66756E63 
 443      74696F6E 
 443      2D736563 
 443      74696F6E 
 444              	.LASF21:
 445 0164 5C5C4D61 		.ascii	"\\\\Mac\\Home\\Documents\\dev\\yaugi\\GPIB USB Adap"
 445      635C486F 
 445      6D655C44 
 445      6F63756D 
 445      656E7473 
 446 0190 7465725C 		.ascii	"ter\\GPIB USB 1.cydsn\000"
 446      47504942 
 446      20555342 
 446      20312E63 
 446      7964736E 
 447              	.LASF15:
 448 01a5 73697A65 		.ascii	"sizetype\000"
 448      74797065 
 448      00
 449              	.LASF17:
 450 01ae 72656164 		.ascii	"read_err\000"
 450      5F657272 
 450      00
 451              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
