ARM GAS  C:\Users\essele\AppData\Local\Temp\ccaJcTi8.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m0
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 0
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"CyLib.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.global	cydelayFreqHz
  20              		.data
  21              		.align	2
  22              		.type	cydelayFreqHz, %object
  23              		.size	cydelayFreqHz, 4
  24              	cydelayFreqHz:
  25 0000 006CDC02 		.word	48000000
  26              		.global	cydelayFreqKhz
  27              		.align	2
  28              		.type	cydelayFreqKhz, %object
  29              		.size	cydelayFreqKhz, 4
  30              	cydelayFreqKhz:
  31 0004 80BB0000 		.word	48000
  32              		.global	cydelayFreqMhz
  33              		.type	cydelayFreqMhz, %object
  34              		.size	cydelayFreqMhz, 1
  35              	cydelayFreqMhz:
  36 0008 30       		.byte	48
  37              		.global	cydelay32kMs
  38 0009 000000   		.align	2
  39              		.type	cydelay32kMs, %object
  40              		.size	cydelay32kMs, 4
  41              	cydelay32kMs:
  42 000c 0000C05D 		.word	1572864000
  43              		.bss
  44              		.align	2
  45              	CySysTickCallbacks:
  46 0000 00000000 		.space	20
  46      00000000 
  46      00000000 
  46      00000000 
  46      00000000 
  47              		.global	CySysTickInitVar
  48              		.align	2
  49              		.type	CySysTickInitVar, %object
  50              		.size	CySysTickInitVar, 4
  51              	CySysTickInitVar:
  52 0014 00000000 		.space	4
  53              		.global	cyImoFreqMhz2Reg
ARM GAS  C:\Users\essele\AppData\Local\Temp\ccaJcTi8.s 			page 2


  54              		.section	.rodata
  55              		.align	2
  56              		.type	cyImoFreqMhz2Reg, %object
  57              		.size	cyImoFreqMhz2Reg, 46
  58              	cyImoFreqMhz2Reg:
  59 0000 03       		.byte	3
  60 0001 04       		.byte	4
  61 0002 05       		.byte	5
  62 0003 06       		.byte	6
  63 0004 07       		.byte	7
  64 0005 08       		.byte	8
  65 0006 09       		.byte	9
  66 0007 0A       		.byte	10
  67 0008 0B       		.byte	11
  68 0009 0C       		.byte	12
  69 000a 0E       		.byte	14
  70 000b 0F       		.byte	15
  71 000c 10       		.byte	16
  72 000d 11       		.byte	17
  73 000e 12       		.byte	18
  74 000f 13       		.byte	19
  75 0010 14       		.byte	20
  76 0011 15       		.byte	21
  77 0012 16       		.byte	22
  78 0013 17       		.byte	23
  79 0014 18       		.byte	24
  80 0015 19       		.byte	25
  81 0016 1B       		.byte	27
  82 0017 1C       		.byte	28
  83 0018 1D       		.byte	29
  84 0019 1E       		.byte	30
  85 001a 1F       		.byte	31
  86 001b 20       		.byte	32
  87 001c 21       		.byte	33
  88 001d 22       		.byte	34
  89 001e 23       		.byte	35
  90 001f 25       		.byte	37
  91 0020 26       		.byte	38
  92 0021 27       		.byte	39
  93 0022 28       		.byte	40
  94 0023 29       		.byte	41
  95 0024 2A       		.byte	42
  96 0025 2B       		.byte	43
  97 0026 2E       		.byte	46
  98 0027 2F       		.byte	47
  99 0028 30       		.byte	48
 100 0029 31       		.byte	49
 101 002a 32       		.byte	50
 102 002b 33       		.byte	51
 103 002c 34       		.byte	52
 104 002d 35       		.byte	53
 105              		.global	CySysClkImoTrim4
 106              		.bss
 107              		.align	2
 108              		.type	CySysClkImoTrim4, %object
 109              		.size	CySysClkImoTrim4, 4
 110              	CySysClkImoTrim4:
ARM GAS  C:\Users\essele\AppData\Local\Temp\ccaJcTi8.s 			page 3


 111 0018 00000000 		.space	4
 112              		.global	CySysClkImoTrim5
 113              		.align	2
 114              		.type	CySysClkImoTrim5, %object
 115              		.size	CySysClkImoTrim5, 4
 116              	CySysClkImoTrim5:
 117 001c 00000000 		.space	4
 118              		.global	CySysClkPumpConfig
 119              		.data
 120              		.align	2
 121              		.type	CySysClkPumpConfig, %object
 122              		.size	CySysClkPumpConfig, 4
 123              	CySysClkPumpConfig:
 124 0010 01000000 		.word	1
 125              		.section	.text.CySysClkImoStart,"ax",%progbits
 126              		.align	2
 127              		.global	CySysClkImoStart
 128              		.code	16
 129              		.thumb_func
 130              		.type	CySysClkImoStart, %function
 131              	CySysClkImoStart:
 132              	.LFB1:
 133              		.file 1 "Generated_Source\\PSoC4\\CyLib.c"
   1:Generated_Source\PSoC4/CyLib.c **** /***************************************************************************//**
   2:Generated_Source\PSoC4/CyLib.c **** * \file CyLib.c
   3:Generated_Source\PSoC4/CyLib.c **** * \version 5.80
   4:Generated_Source\PSoC4/CyLib.c **** *
   5:Generated_Source\PSoC4/CyLib.c **** * \brief Provides a system API for the Clocking, Interrupts, SysTick, and
   6:Generated_Source\PSoC4/CyLib.c **** * Voltage Detect.
   7:Generated_Source\PSoC4/CyLib.c **** *
   8:Generated_Source\PSoC4/CyLib.c **** * \note Documentation of the API's in this file is located in the PSoC 4 System
   9:Generated_Source\PSoC4/CyLib.c **** * Reference Guide provided with PSoC Creator.
  10:Generated_Source\PSoC4/CyLib.c **** *
  11:Generated_Source\PSoC4/CyLib.c **** ********************************************************************************
  12:Generated_Source\PSoC4/CyLib.c **** * \copyright
  13:Generated_Source\PSoC4/CyLib.c **** * Copyright 2010-2018, Cypress Semiconductor Corporation.  All rights reserved.
  14:Generated_Source\PSoC4/CyLib.c **** * You may use this file only in accordance with the license, terms, conditions,
  15:Generated_Source\PSoC4/CyLib.c **** * disclaimers, and limitations in the end user license agreement accompanying
  16:Generated_Source\PSoC4/CyLib.c **** * the software package with which this file was provided.
  17:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
  18:Generated_Source\PSoC4/CyLib.c **** 
  19:Generated_Source\PSoC4/CyLib.c **** #include "CyLib.h"
  20:Generated_Source\PSoC4/CyLib.c **** 
  21:Generated_Source\PSoC4/CyLib.c **** /* CySysClkWriteImoFreq() || CySysClkImoEnableWcoLock() */
  22:Generated_Source\PSoC4/CyLib.c **** #if ((CY_IP_SRSSV2 && CY_IP_FMLT) || CY_IP_IMO_TRIMMABLE_BY_WCO)
  23:Generated_Source\PSoC4/CyLib.c ****     #include "CyFlash.h"
  24:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_SRSSV2 && CY_IP_FMLT) */
  25:Generated_Source\PSoC4/CyLib.c **** 
  26:Generated_Source\PSoC4/CyLib.c **** /* Do not use these definitions directly in your application */
  27:Generated_Source\PSoC4/CyLib.c **** uint32 cydelayFreqHz  = CYDEV_BCLK__SYSCLK__HZ;
  28:Generated_Source\PSoC4/CyLib.c **** uint32 cydelayFreqKhz = (CYDEV_BCLK__SYSCLK__HZ + CY_DELAY_1K_MINUS_1_THRESHOLD) / CY_DELAY_1K_THRE
  29:Generated_Source\PSoC4/CyLib.c **** uint8  cydelayFreqMhz = (uint8)((CYDEV_BCLK__SYSCLK__HZ + CY_DELAY_1M_MINUS_1_THRESHOLD) / CY_DELAY
  30:Generated_Source\PSoC4/CyLib.c **** uint32 cydelay32kMs   = CY_DELAY_MS_OVERFLOW * ((CYDEV_BCLK__SYSCLK__HZ + CY_DELAY_1K_MINUS_1_THRES
  31:Generated_Source\PSoC4/CyLib.c ****                         CY_DELAY_1K_THRESHOLD);
  32:Generated_Source\PSoC4/CyLib.c **** 
  33:Generated_Source\PSoC4/CyLib.c **** 
  34:Generated_Source\PSoC4/CyLib.c **** static cySysTickCallback CySysTickCallbacks[CY_SYS_SYST_NUM_OF_CALLBACKS];
ARM GAS  C:\Users\essele\AppData\Local\Temp\ccaJcTi8.s 			page 4


  35:Generated_Source\PSoC4/CyLib.c **** static void CySysTickServiceCallbacks(void);
  36:Generated_Source\PSoC4/CyLib.c **** 
  37:Generated_Source\PSoC4/CyLib.c **** #if (CY_IP_PLL)
  38:Generated_Source\PSoC4/CyLib.c ****     static uint32 CySysClkPllGetBypassMode(uint32 pll);
  39:Generated_Source\PSoC4/CyLib.c ****     static cystatus CySysClkPllConfigChangeAllowed(uint32 pll);
  40:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_PLL) */
  41:Generated_Source\PSoC4/CyLib.c **** 
  42:Generated_Source\PSoC4/CyLib.c **** 
  43:Generated_Source\PSoC4/CyLib.c **** /***************************************************************************//**
  44:Generated_Source\PSoC4/CyLib.c **** * Indicates whether or not the SysTick has been initialized. The variable is
  45:Generated_Source\PSoC4/CyLib.c **** * initialized to 0 and set to 1 the first time CySysTickStart() is called.
  46:Generated_Source\PSoC4/CyLib.c **** *
  47:Generated_Source\PSoC4/CyLib.c **** * This allows the component to restart without reinitialization after the first
  48:Generated_Source\PSoC4/CyLib.c **** * call to the CySysTickStart() routine.
  49:Generated_Source\PSoC4/CyLib.c **** *
  50:Generated_Source\PSoC4/CyLib.c **** * If reinitialization of the SysTick is required, call CySysTickInit() before
  51:Generated_Source\PSoC4/CyLib.c **** * calling CySysTickStart(). Alternatively, the SysTick can be reinitialized by
  52:Generated_Source\PSoC4/CyLib.c **** * calling the CySysTickInit() and CySysTickEnable() functions.
  53:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
  54:Generated_Source\PSoC4/CyLib.c **** uint32 CySysTickInitVar = 0u;
  55:Generated_Source\PSoC4/CyLib.c **** 
  56:Generated_Source\PSoC4/CyLib.c **** 
  57:Generated_Source\PSoC4/CyLib.c **** #if(CY_IP_SRSSV2)
  58:Generated_Source\PSoC4/CyLib.c ****         /* Conversion between CySysClkWriteImoFreq() parameter and register's value */
  59:Generated_Source\PSoC4/CyLib.c ****         const uint8 cyImoFreqMhz2Reg[CY_SYS_CLK_IMO_FREQ_TABLE_SIZE] = {
  60:Generated_Source\PSoC4/CyLib.c ****             /*  3 MHz */ 0x03u,  /*  4 MHz */ 0x04u,  /*  5 MHz */ 0x05u,  /*  6 MHz */ 0x06u,
  61:Generated_Source\PSoC4/CyLib.c ****             /*  7 MHz */ 0x07u,  /*  8 MHz */ 0x08u,  /*  9 MHz */ 0x09u,  /* 10 MHz */ 0x0Au,
  62:Generated_Source\PSoC4/CyLib.c ****             /* 11 MHz */ 0x0Bu,  /* 12 MHz */ 0x0Cu,  /* 13 MHz */ 0x0Eu,  /* 14 MHz */ 0x0Fu,
  63:Generated_Source\PSoC4/CyLib.c ****             /* 15 MHz */ 0x10u,  /* 16 MHz */ 0x11u,  /* 17 MHz */ 0x12u,  /* 18 MHz */ 0x13u,
  64:Generated_Source\PSoC4/CyLib.c ****             /* 19 MHz */ 0x14u,  /* 20 MHz */ 0x15u,  /* 21 MHz */ 0x16u,  /* 22 MHz */ 0x17u,
  65:Generated_Source\PSoC4/CyLib.c ****             /* 23 MHz */ 0x18u,  /* 24 MHz */ 0x19u,  /* 25 MHz */ 0x1Bu,  /* 26 MHz */ 0x1Cu,
  66:Generated_Source\PSoC4/CyLib.c ****             /* 27 MHz */ 0x1Du,  /* 28 MHz */ 0x1Eu,  /* 29 MHz */ 0x1Fu,  /* 30 MHz */ 0x20u,
  67:Generated_Source\PSoC4/CyLib.c ****             /* 31 MHz */ 0x21u,  /* 32 MHz */ 0x22u,  /* 33 MHz */ 0x23u,  /* 34 MHz */ 0x25u,
  68:Generated_Source\PSoC4/CyLib.c ****             /* 35 MHz */ 0x26u,  /* 36 MHz */ 0x27u,  /* 37 MHz */ 0x28u,  /* 38 MHz */ 0x29u,
  69:Generated_Source\PSoC4/CyLib.c ****             /* 39 MHz */ 0x2Au,  /* 40 MHz */ 0x2Bu,  /* 41 MHz */ 0x2Eu,  /* 42 MHz */ 0x2Fu,
  70:Generated_Source\PSoC4/CyLib.c ****             /* 43 MHz */ 0x30u,  /* 44 MHz */ 0x31u,  /* 45 MHz */ 0x32u,  /* 46 MHz */ 0x33u,
  71:Generated_Source\PSoC4/CyLib.c ****             /* 47 MHz */ 0x34u,  /* 48 MHz */ 0x35u };
  72:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_SRSSV2) */
  73:Generated_Source\PSoC4/CyLib.c **** 
  74:Generated_Source\PSoC4/CyLib.c **** /* Stored CY_SYS_CLK_IMO_TRIM4_REG when modified for USB lock */
  75:Generated_Source\PSoC4/CyLib.c **** #if (CY_IP_IMO_TRIMMABLE_BY_USB && CY_IP_SRSSV2)
  76:Generated_Source\PSoC4/CyLib.c ****     uint32 CySysClkImoTrim4 = 0u;
  77:Generated_Source\PSoC4/CyLib.c ****     uint32 CySysClkImoTrim5 = 0u;
  78:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_IMO_TRIMMABLE_BY_USB && CY_IP_SRSSV2) */
  79:Generated_Source\PSoC4/CyLib.c **** 
  80:Generated_Source\PSoC4/CyLib.c **** /* Stored PUMP_SEL configuration during disable (IMO output by default) */
  81:Generated_Source\PSoC4/CyLib.c **** uint32 CySysClkPumpConfig = CY_SYS_CLK_PUMP_ENABLE;
  82:Generated_Source\PSoC4/CyLib.c **** 
  83:Generated_Source\PSoC4/CyLib.c **** 
  84:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
  85:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysClkImoStart
  86:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
  87:Generated_Source\PSoC4/CyLib.c **** *
  88:Generated_Source\PSoC4/CyLib.c **** * Enables the IMO.
  89:Generated_Source\PSoC4/CyLib.c **** *
  90:Generated_Source\PSoC4/CyLib.c **** * For PSoC 4100M / PSoC 4200M / PSoC 4000S / PSoC 4100S / PSoC Analog 
  91:Generated_Source\PSoC4/CyLib.c **** * Coprocessor devices, this function will also enable WCO lock if selected in 
ARM GAS  C:\Users\essele\AppData\Local\Temp\ccaJcTi8.s 			page 5


  92:Generated_Source\PSoC4/CyLib.c **** * the Design Wide Resources tab.
  93:Generated_Source\PSoC4/CyLib.c **** *
  94:Generated_Source\PSoC4/CyLib.c **** * For PSoC 4200L devices, this function will also enable USB lock if selected
  95:Generated_Source\PSoC4/CyLib.c **** * in the Design Wide Resources tab.
  96:Generated_Source\PSoC4/CyLib.c **** *
  97:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
  98:Generated_Source\PSoC4/CyLib.c **** void CySysClkImoStart(void)
  99:Generated_Source\PSoC4/CyLib.c **** {
 134              		.loc 1 99 0
 135              		.cfi_startproc
 136              		@ args = 0, pretend = 0, frame = 0
 137              		@ frame_needed = 1, uses_anonymous_args = 0
 138 0000 80B5     		push	{r7, lr}
 139              		.cfi_def_cfa_offset 8
 140              		.cfi_offset 7, -8
 141              		.cfi_offset 14, -4
 142 0002 00AF     		add	r7, sp, #0
 143              		.cfi_def_cfa_register 7
 100:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_CLK_IMO_CONFIG_REG |= CY_SYS_CLK_IMO_CONFIG_ENABLE;
 144              		.loc 1 100 0
 145 0004 054B     		ldr	r3, .L2
 146 0006 054A     		ldr	r2, .L2
 147 0008 1268     		ldr	r2, [r2]
 148 000a 8021     		movs	r1, #128
 149 000c 0906     		lsls	r1, r1, #24
 150 000e 0A43     		orrs	r2, r1
 151 0010 1A60     		str	r2, [r3]
 101:Generated_Source\PSoC4/CyLib.c **** 
 102:Generated_Source\PSoC4/CyLib.c ****     #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
 103:Generated_Source\PSoC4/CyLib.c ****         #if (CYDEV_IMO_TRIMMED_BY_WCO == 1u)
 104:Generated_Source\PSoC4/CyLib.c ****             CySysClkImoEnableWcoLock();
 105:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CYDEV_IMO_TRIMMED_BY_WCO == 1u) */
 106:Generated_Source\PSoC4/CyLib.c ****     #endif  /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */
 107:Generated_Source\PSoC4/CyLib.c **** 
 108:Generated_Source\PSoC4/CyLib.c **** 
 109:Generated_Source\PSoC4/CyLib.c ****     #if (CY_IP_IMO_TRIMMABLE_BY_USB)
 110:Generated_Source\PSoC4/CyLib.c ****         #if (CYDEV_IMO_TRIMMED_BY_USB == 1u)
 111:Generated_Source\PSoC4/CyLib.c ****             CySysClkImoEnableUsbLock();
 152              		.loc 1 111 0
 153 0012 FFF7FEFF 		bl	CySysClkImoEnableUsbLock
 112:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CYDEV_IMO_TRIMMED_BY_USB == 1u) */
 113:Generated_Source\PSoC4/CyLib.c ****     #endif  /* (CY_IP_IMO_TRIMMABLE_BY_USB) */
 114:Generated_Source\PSoC4/CyLib.c **** 
 115:Generated_Source\PSoC4/CyLib.c **** }
 154              		.loc 1 115 0
 155 0016 C046     		nop
 156 0018 BD46     		mov	sp, r7
 157              		@ sp needed
 158 001a 80BD     		pop	{r7, pc}
 159              	.L3:
 160              		.align	2
 161              	.L2:
 162 001c 08010B40 		.word	1074462984
 163              		.cfi_endproc
 164              	.LFE1:
 165              		.size	CySysClkImoStart, .-CySysClkImoStart
 166              		.section	.text.CySysClkImoStop,"ax",%progbits
ARM GAS  C:\Users\essele\AppData\Local\Temp\ccaJcTi8.s 			page 6


 167              		.align	2
 168              		.global	CySysClkImoStop
 169              		.code	16
 170              		.thumb_func
 171              		.type	CySysClkImoStop, %function
 172              	CySysClkImoStop:
 173              	.LFB2:
 116:Generated_Source\PSoC4/CyLib.c **** 
 117:Generated_Source\PSoC4/CyLib.c **** 
 118:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
 119:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysClkImoStop
 120:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
 121:Generated_Source\PSoC4/CyLib.c **** *
 122:Generated_Source\PSoC4/CyLib.c **** * Disables the IMO.
 123:Generated_Source\PSoC4/CyLib.c **** *
 124:Generated_Source\PSoC4/CyLib.c **** * For PSoC 4100M / PSoC 4200M / PSoC 4200L / PSoC 4000S / PSoC 4100S / 
 125:Generated_Source\PSoC4/CyLib.c **** * PSoC Analog Coprocessor devices, this function will also disable WCO lock.
 126:Generated_Source\PSoC4/CyLib.c **** *
 127:Generated_Source\PSoC4/CyLib.c **** * For PSoC PSoC 4200L devices, this function will also disable USB lock.
 128:Generated_Source\PSoC4/CyLib.c **** *
 129:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
 130:Generated_Source\PSoC4/CyLib.c **** void CySysClkImoStop(void)
 131:Generated_Source\PSoC4/CyLib.c **** {
 174              		.loc 1 131 0
 175              		.cfi_startproc
 176              		@ args = 0, pretend = 0, frame = 0
 177              		@ frame_needed = 1, uses_anonymous_args = 0
 178 0000 80B5     		push	{r7, lr}
 179              		.cfi_def_cfa_offset 8
 180              		.cfi_offset 7, -8
 181              		.cfi_offset 14, -4
 182 0002 00AF     		add	r7, sp, #0
 183              		.cfi_def_cfa_register 7
 132:Generated_Source\PSoC4/CyLib.c ****     #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
 133:Generated_Source\PSoC4/CyLib.c ****         CySysClkImoDisableWcoLock();
 184              		.loc 1 133 0
 185 0004 FFF7FEFF 		bl	CySysClkImoDisableWcoLock
 134:Generated_Source\PSoC4/CyLib.c ****     #endif  /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */
 135:Generated_Source\PSoC4/CyLib.c **** 
 136:Generated_Source\PSoC4/CyLib.c ****     #if (CY_IP_IMO_TRIMMABLE_BY_USB)
 137:Generated_Source\PSoC4/CyLib.c ****         CySysClkImoDisableUsbLock();
 186              		.loc 1 137 0
 187 0008 FFF7FEFF 		bl	CySysClkImoDisableUsbLock
 138:Generated_Source\PSoC4/CyLib.c ****     #endif  /* (CY_IP_IMO_TRIMMABLE_BY_USB) */
 139:Generated_Source\PSoC4/CyLib.c **** 
 140:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_CLK_IMO_CONFIG_REG &= ( uint32 ) ( ~( uint32 )CY_SYS_CLK_IMO_CONFIG_ENABLE);
 188              		.loc 1 140 0
 189 000c 044B     		ldr	r3, .L5
 190 000e 044A     		ldr	r2, .L5
 191 0010 1268     		ldr	r2, [r2]
 192 0012 5200     		lsls	r2, r2, #1
 193 0014 5208     		lsrs	r2, r2, #1
 194 0016 1A60     		str	r2, [r3]
 141:Generated_Source\PSoC4/CyLib.c **** }
 195              		.loc 1 141 0
 196 0018 C046     		nop
 197 001a BD46     		mov	sp, r7
ARM GAS  C:\Users\essele\AppData\Local\Temp\ccaJcTi8.s 			page 7


 198              		@ sp needed
 199 001c 80BD     		pop	{r7, pc}
 200              	.L6:
 201 001e C046     		.align	2
 202              	.L5:
 203 0020 08010B40 		.word	1074462984
 204              		.cfi_endproc
 205              	.LFE2:
 206              		.size	CySysClkImoStop, .-CySysClkImoStop
 207              		.section	.text.CySysClkImoEnableWcoLock,"ax",%progbits
 208              		.align	2
 209              		.global	CySysClkImoEnableWcoLock
 210              		.code	16
 211              		.thumb_func
 212              		.type	CySysClkImoEnableWcoLock, %function
 213              	CySysClkImoEnableWcoLock:
 214              	.LFB3:
 142:Generated_Source\PSoC4/CyLib.c **** 
 143:Generated_Source\PSoC4/CyLib.c **** #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
 144:Generated_Source\PSoC4/CyLib.c **** 
 145:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
 146:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkImoEnableWcoLock
 147:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
 148:Generated_Source\PSoC4/CyLib.c ****     *
 149:Generated_Source\PSoC4/CyLib.c ****     * Enables the IMO to WCO lock feature. This function works only if the WCO is
 150:Generated_Source\PSoC4/CyLib.c ****     * already enabled. If the WCO is not enabled then this function returns
 151:Generated_Source\PSoC4/CyLib.c ****     * without enabling the lock feature.
 152:Generated_Source\PSoC4/CyLib.c ****     *
 153:Generated_Source\PSoC4/CyLib.c ****     * It takes up to 20 ms for the IMO to stabilize. The delay is implemented with
 154:Generated_Source\PSoC4/CyLib.c ****     * CyDelay() function. The delay interval is measured based on the system
 155:Generated_Source\PSoC4/CyLib.c ****     * frequency defined by PSoC Creator at build time. If System clock frequency
 156:Generated_Source\PSoC4/CyLib.c ****     * is changed in runtime, the CyDelayFreq() with the appropriate parameter
 157:Generated_Source\PSoC4/CyLib.c ****     * should be called.
 158:Generated_Source\PSoC4/CyLib.c ****     *
 159:Generated_Source\PSoC4/CyLib.c ****     * For PSoC 4200L devices, note that the IMO can lock to either WCO or USB
 160:Generated_Source\PSoC4/CyLib.c ****     * but not both.
 161:Generated_Source\PSoC4/CyLib.c ****     *
 162:Generated_Source\PSoC4/CyLib.c ****     * This function is applicable for PSoC 4100M / PSoC 4200M / PSoC 4000S /
 163:Generated_Source\PSoC4/CyLib.c ****     * PSoC 4100S / PSoC Analog Coprocessor / PSoC 4200L.
 164:Generated_Source\PSoC4/CyLib.c ****     *
 165:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
 166:Generated_Source\PSoC4/CyLib.c ****     void CySysClkImoEnableWcoLock(void)
 167:Generated_Source\PSoC4/CyLib.c ****     {
 215              		.loc 1 167 0
 216              		.cfi_startproc
 217              		@ args = 0, pretend = 0, frame = 24
 218              		@ frame_needed = 1, uses_anonymous_args = 0
 219 0000 90B5     		push	{r4, r7, lr}
 220              		.cfi_def_cfa_offset 12
 221              		.cfi_offset 4, -12
 222              		.cfi_offset 7, -8
 223              		.cfi_offset 14, -4
 224 0002 87B0     		sub	sp, sp, #28
 225              		.cfi_def_cfa_offset 40
 226 0004 00AF     		add	r7, sp, #0
 227              		.cfi_def_cfa_register 7
 168:Generated_Source\PSoC4/CyLib.c ****         #if(CY_IP_SRSSV2)
ARM GAS  C:\Users\essele\AppData\Local\Temp\ccaJcTi8.s 			page 8


 169:Generated_Source\PSoC4/CyLib.c ****             uint32 i;
 170:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_SRSSV2) */
 171:Generated_Source\PSoC4/CyLib.c **** 
 172:Generated_Source\PSoC4/CyLib.c ****         uint32 freq;
 173:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
 174:Generated_Source\PSoC4/CyLib.c ****         uint32 regTmp;
 175:Generated_Source\PSoC4/CyLib.c ****         uint32 lfLimit = 0u;
 228              		.loc 1 175 0
 229 0006 0023     		movs	r3, #0
 230 0008 FB60     		str	r3, [r7, #12]
 176:Generated_Source\PSoC4/CyLib.c ****         volatile uint32 flashCtlReg;
 177:Generated_Source\PSoC4/CyLib.c **** 
 178:Generated_Source\PSoC4/CyLib.c ****         if (0u != CySysClkWcoEnabled())
 231              		.loc 1 178 0
 232 000a FFF7FEFF 		bl	CySysClkWcoEnabled
 233 000e 031E     		subs	r3, r0, #0
 234 0010 00D1     		bne	.LCB82
 235 0012 84E0     		b	.L16	@long jump
 236              	.LCB82:
 179:Generated_Source\PSoC4/CyLib.c ****         {
 180:Generated_Source\PSoC4/CyLib.c ****             interruptState = CyEnterCriticalSection();
 237              		.loc 1 180 0
 238 0014 0B23     		movs	r3, #11
 239 0016 FC18     		adds	r4, r7, r3
 240 0018 FFF7FEFF 		bl	CyEnterCriticalSection
 241 001c 0300     		movs	r3, r0
 242 001e 2370     		strb	r3, [r4]
 181:Generated_Source\PSoC4/CyLib.c **** 
 182:Generated_Source\PSoC4/CyLib.c ****             /* Set oscillator interface control port to WCO */
 183:Generated_Source\PSoC4/CyLib.c ****             #if (CY_IP_IMO_TRIMMABLE_BY_WCO && CY_IP_IMO_TRIMMABLE_BY_USB)
 184:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_OSCINTF_CTL_REG =
 243              		.loc 1 184 0
 244 0020 414B     		ldr	r3, .L17
 185:Generated_Source\PSoC4/CyLib.c ****                     (CY_SYS_CLK_OSCINTF_CTL_REG & (uint32) ~CY_SYS_CLK_OSCINTF_CTL_PORT_SEL_MASK) |
 245              		.loc 1 185 0
 246 0022 414A     		ldr	r2, .L17
 247 0024 1268     		ldr	r2, [r2]
 248 0026 0121     		movs	r1, #1
 249 0028 0A43     		orrs	r2, r1
 184:Generated_Source\PSoC4/CyLib.c ****                     (CY_SYS_CLK_OSCINTF_CTL_REG & (uint32) ~CY_SYS_CLK_OSCINTF_CTL_PORT_SEL_MASK) |
 250              		.loc 1 184 0
 251 002a 1A60     		str	r2, [r3]
 186:Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_CLK_OSCINTF_CTL_PORT_SEL_WCO;
 187:Generated_Source\PSoC4/CyLib.c ****             #endif /* (CY_IP_IMO_TRIMMABLE_BY_WCO && CY_IP_IMO_TRIMMABLE_BY_USB) */
 188:Generated_Source\PSoC4/CyLib.c **** 
 189:Generated_Source\PSoC4/CyLib.c ****             /* Get current IMO frequency based on the register value */
 190:Generated_Source\PSoC4/CyLib.c ****             #if(CY_IP_SRSSV2)
 191:Generated_Source\PSoC4/CyLib.c ****                 freq = CY_SYS_CLK_IMO_MIN_FREQ_MHZ;
 252              		.loc 1 191 0
 253 002c 0323     		movs	r3, #3
 254 002e 3B61     		str	r3, [r7, #16]
 192:Generated_Source\PSoC4/CyLib.c ****                 for(i = 0u; i < CY_SYS_CLK_IMO_FREQ_TABLE_SIZE; i++)
 255              		.loc 1 192 0
 256 0030 0023     		movs	r3, #0
 257 0032 7B61     		str	r3, [r7, #20]
 258 0034 11E0     		b	.L9
 259              	.L12:
ARM GAS  C:\Users\essele\AppData\Local\Temp\ccaJcTi8.s 			page 9


 193:Generated_Source\PSoC4/CyLib.c ****                 {
 194:Generated_Source\PSoC4/CyLib.c ****                     if ((uint8) (CY_SYS_CLK_IMO_TRIM2_REG & CY_SYS_CLK_IMO_FREQ_BITS_MASK) == cyImo
 260              		.loc 1 194 0
 261 0036 3D4B     		ldr	r3, .L17+4
 262 0038 1B68     		ldr	r3, [r3]
 263 003a 1A00     		movs	r2, r3
 264 003c 3F23     		movs	r3, #63
 265 003e 1340     		ands	r3, r2
 266 0040 3B49     		ldr	r1, .L17+8
 267 0042 7A69     		ldr	r2, [r7, #20]
 268 0044 8A18     		adds	r2, r1, r2
 269 0046 1278     		ldrb	r2, [r2]
 270 0048 9342     		cmp	r3, r2
 271 004a 03D1     		bne	.L10
 195:Generated_Source\PSoC4/CyLib.c ****                     {
 196:Generated_Source\PSoC4/CyLib.c ****                         freq = i + CY_SYS_CLK_IMO_FREQ_TABLE_OFFSET;
 272              		.loc 1 196 0
 273 004c 7B69     		ldr	r3, [r7, #20]
 274 004e 0333     		adds	r3, r3, #3
 275 0050 3B61     		str	r3, [r7, #16]
 197:Generated_Source\PSoC4/CyLib.c ****                         break;
 276              		.loc 1 197 0
 277 0052 05E0     		b	.L11
 278              	.L10:
 192:Generated_Source\PSoC4/CyLib.c ****                 {
 279              		.loc 1 192 0 discriminator 2
 280 0054 7B69     		ldr	r3, [r7, #20]
 281 0056 0133     		adds	r3, r3, #1
 282 0058 7B61     		str	r3, [r7, #20]
 283              	.L9:
 192:Generated_Source\PSoC4/CyLib.c ****                 {
 284              		.loc 1 192 0 is_stmt 0 discriminator 1
 285 005a 7B69     		ldr	r3, [r7, #20]
 286 005c 2D2B     		cmp	r3, #45
 287 005e EAD9     		bls	.L12
 288              	.L11:
 198:Generated_Source\PSoC4/CyLib.c ****                     }
 199:Generated_Source\PSoC4/CyLib.c ****                 }
 200:Generated_Source\PSoC4/CyLib.c ****             #else
 201:Generated_Source\PSoC4/CyLib.c ****                 /* Calculate frequency by shifting register field value and adding constant. */
 202:Generated_Source\PSoC4/CyLib.c ****                 #if(CY_IP_SRSSLT)
 203:Generated_Source\PSoC4/CyLib.c ****                     freq = (((uint32) ((CY_SYS_CLK_IMO_SELECT_REG & ((uint32) CY_SYS_CLK_IMO_SELECT
 204:Generated_Source\PSoC4/CyLib.c ****                                         CY_SYS_CLK_IMO_SELECT_FREQ_SHIFT) + CY_SYS_CLK_IMO_MIN_FREQ
 205:Generated_Source\PSoC4/CyLib.c ****                                       ((CY_SYS_CLK_SELECT_REG >> CY_SYS_CLK_SELECT_HFCLK_DIV_SHIFT)
 206:Generated_Source\PSoC4/CyLib.c ****                                        (uint32) CY_SYS_CLK_SELECT_HFCLK_DIV_MASK));
 207:Generated_Source\PSoC4/CyLib.c ****                 #else
 208:Generated_Source\PSoC4/CyLib.c ****                     freq = ((uint32) ((CY_SYS_CLK_IMO_SELECT_REG & ((uint32) CY_SYS_CLK_IMO_SELECT_
 209:Generated_Source\PSoC4/CyLib.c ****                                        CY_SYS_CLK_IMO_SELECT_FREQ_SHIFT) + CY_SYS_CLK_IMO_MIN_FREQ_
 210:Generated_Source\PSoC4/CyLib.c ****                 #endif  /* (CY_IP_SRSSLT) */
 211:Generated_Source\PSoC4/CyLib.c **** 
 212:Generated_Source\PSoC4/CyLib.c ****             #endif  /* (CY_IP_SRSSV2) */
 213:Generated_Source\PSoC4/CyLib.c ****             
 214:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_TRIM1_REG = 0;
 289              		.loc 1 214 0 is_stmt 1
 290 0060 344B     		ldr	r3, .L17+12
 291 0062 0022     		movs	r2, #0
 292 0064 1A60     		str	r2, [r3]
ARM GAS  C:\Users\essele\AppData\Local\Temp\ccaJcTi8.s 			page 10


 215:Generated_Source\PSoC4/CyLib.c ****             
 216:Generated_Source\PSoC4/CyLib.c ****             /* For the WCO locking mode, the IMO gain needs to be CY_SYS_CLK_IMO_TRIM4_GAIN */
 217:Generated_Source\PSoC4/CyLib.c ****             #if(CY_IP_SRSSV2)
 218:Generated_Source\PSoC4/CyLib.c ****                 if ((CY_SYS_CLK_IMO_TRIM4_REG & CY_SYS_CLK_IMO_TRIM4_GAIN_MASK) == 0u)
 293              		.loc 1 218 0
 294 0066 344B     		ldr	r3, .L17+16
 295 0068 1B68     		ldr	r3, [r3]
 296 006a 1F22     		movs	r2, #31
 297 006c 1340     		ands	r3, r2
 298 006e 07D1     		bne	.L13
 219:Generated_Source\PSoC4/CyLib.c ****                 {
 220:Generated_Source\PSoC4/CyLib.c **** 			         CY_SYS_CLK_IMO_TRIM4_REG = (CY_SYS_CLK_IMO_TRIM4_REG & (uint32) ~CY_SYS_CLK_IMO_TRIM4_G
 299              		.loc 1 220 0
 300 0070 314B     		ldr	r3, .L17+16
 301 0072 314A     		ldr	r2, .L17+16
 302 0074 1268     		ldr	r2, [r2]
 303 0076 1F21     		movs	r1, #31
 304 0078 8A43     		bics	r2, r1
 305 007a 0C21     		movs	r1, #12
 306 007c 0A43     		orrs	r2, r1
 307 007e 1A60     		str	r2, [r3]
 308              	.L13:
 221:Generated_Source\PSoC4/CyLib.c **** 			                  				     CY_SYS_CLK_IMO_TRIM4_WCO_GAIN;
 222:Generated_Source\PSoC4/CyLib.c ****                 }
 223:Generated_Source\PSoC4/CyLib.c ****             #endif /* (CY_IP_SRSSV2) */
 224:Generated_Source\PSoC4/CyLib.c **** 
 225:Generated_Source\PSoC4/CyLib.c ****             regTmp  = CY_SYS_CLK_WCO_DPLL_REG & ~(CY_SYS_CLK_WCO_DPLL_MULT_MASK |
 309              		.loc 1 225 0
 310 0080 2E4B     		ldr	r3, .L17+20
 311 0082 1B68     		ldr	r3, [r3]
 312 0084 2E4A     		ldr	r2, .L17+24
 313 0086 1340     		ands	r3, r2
 314 0088 7B60     		str	r3, [r7, #4]
 226:Generated_Source\PSoC4/CyLib.c ****                                                   CY_SYS_CLK_WCO_CONFIG_DPLL_LF_IGAIN_MASK |
 227:Generated_Source\PSoC4/CyLib.c ****                                                   CY_SYS_CLK_WCO_CONFIG_DPLL_LF_PGAIN_MASK |
 228:Generated_Source\PSoC4/CyLib.c ****                                                   CY_SYS_CLK_WCO_CONFIG_DPLL_LF_LIMIT_MASK);
 229:Generated_Source\PSoC4/CyLib.c **** 
 230:Generated_Source\PSoC4/CyLib.c ****             /* Set multiplier to determine IMO frequency in multiples of the WCO frequency */
 231:Generated_Source\PSoC4/CyLib.c ****             regTmp |= (CY_SYS_CLK_WCO_DPLL_MULT_VALUE(freq) & CY_SYS_CLK_WCO_DPLL_MULT_MASK);
 315              		.loc 1 231 0
 316 008a 3B69     		ldr	r3, [r7, #16]
 317 008c 2D4A     		ldr	r2, .L17+28
 318 008e 5343     		muls	r3, r2
 319 0090 8022     		movs	r2, #128
 320 0092 D201     		lsls	r2, r2, #7
 321 0094 9446     		mov	ip, r2
 322 0096 6344     		add	r3, r3, ip
 323 0098 DB0B     		lsrs	r3, r3, #15
 324 009a 013B     		subs	r3, r3, #1
 325 009c 5B05     		lsls	r3, r3, #21
 326 009e 5B0D     		lsrs	r3, r3, #21
 327 00a0 7A68     		ldr	r2, [r7, #4]
 328 00a2 1343     		orrs	r3, r2
 329 00a4 7B60     		str	r3, [r7, #4]
 232:Generated_Source\PSoC4/CyLib.c **** 
 233:Generated_Source\PSoC4/CyLib.c ****             /* Set DPLL Loop Filter Integral and Proportional Gains Setting */
 234:Generated_Source\PSoC4/CyLib.c ****             regTmp |= (CY_SYS_CLK_WCO_CONFIG_DPLL_LF_IGAIN | CY_SYS_CLK_WCO_CONFIG_DPLL_LF_PGAIN);
ARM GAS  C:\Users\essele\AppData\Local\Temp\ccaJcTi8.s 			page 11


 330              		.loc 1 234 0
 331 00a6 7B68     		ldr	r3, [r7, #4]
 332 00a8 A022     		movs	r2, #160
 333 00aa 5203     		lsls	r2, r2, #13
 334 00ac 1343     		orrs	r3, r2
 335 00ae 7B60     		str	r3, [r7, #4]
 235:Generated_Source\PSoC4/CyLib.c **** 
 236:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_WCO_DPLL_REG = regTmp;
 336              		.loc 1 236 0
 337 00b0 224B     		ldr	r3, .L17+20
 338 00b2 7A68     		ldr	r2, [r7, #4]
 339 00b4 1A60     		str	r2, [r3]
 237:Generated_Source\PSoC4/CyLib.c ****             
 238:Generated_Source\PSoC4/CyLib.c ****             flashCtlReg = CY_FLASH_CTL_REG;
 340              		.loc 1 238 0
 341 00b6 244B     		ldr	r3, .L17+32
 342 00b8 1B68     		ldr	r3, [r3]
 343 00ba 3B60     		str	r3, [r7]
 239:Generated_Source\PSoC4/CyLib.c ****             CySysFlashSetWaitCycles(CY_SYS_CLK_IMO_MAX_FREQ_MHZ);
 344              		.loc 1 239 0
 345 00bc 3020     		movs	r0, #48
 346 00be FFF7FEFF 		bl	CySysFlashSetWaitCycles
 240:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_WCO_CONFIG_REG |= CY_SYS_CLK_WCO_CONFIG_DPLL_ENABLE;
 347              		.loc 1 240 0
 348 00c2 224B     		ldr	r3, .L17+36
 349 00c4 214A     		ldr	r2, .L17+36
 350 00c6 1268     		ldr	r2, [r2]
 351 00c8 8021     		movs	r1, #128
 352 00ca C905     		lsls	r1, r1, #23
 353 00cc 0A43     		orrs	r2, r1
 354 00ce 1A60     		str	r2, [r3]
 241:Generated_Source\PSoC4/CyLib.c **** 
 242:Generated_Source\PSoC4/CyLib.c ****             regTmp  = CY_SYS_CLK_WCO_DPLL_REG & ~(CY_SYS_CLK_WCO_CONFIG_DPLL_LF_LIMIT_MASK);
 355              		.loc 1 242 0
 356 00d0 1A4B     		ldr	r3, .L17+20
 357 00d2 1B68     		ldr	r3, [r3]
 358 00d4 1E4A     		ldr	r2, .L17+40
 359 00d6 1340     		ands	r3, r2
 360 00d8 7B60     		str	r3, [r7, #4]
 243:Generated_Source\PSoC4/CyLib.c ****             
 244:Generated_Source\PSoC4/CyLib.c ****             while (lfLimit < (CY_SYS_CLK_WCO_CONFIG_DPLL_LF_LIMIT_MAX - CY_SYS_CLK_WCO_CONFIG_DPLL_
 361              		.loc 1 244 0
 362 00da 0BE0     		b	.L14
 363              	.L15:
 245:Generated_Source\PSoC4/CyLib.c ****             {
 246:Generated_Source\PSoC4/CyLib.c ****                 CyDelay(CY_SYS_CLK_WCO_DPLL_TIMEOUT_MS);
 364              		.loc 1 246 0
 365 00dc 0120     		movs	r0, #1
 366 00de FFF7FEFF 		bl	CyDelay
 247:Generated_Source\PSoC4/CyLib.c ****                 lfLimit += CY_SYS_CLK_WCO_CONFIG_DPLL_LF_LIMIT_STEP;
 367              		.loc 1 247 0
 368 00e2 FB68     		ldr	r3, [r7, #12]
 369 00e4 1033     		adds	r3, r3, #16
 370 00e6 FB60     		str	r3, [r7, #12]
 248:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_WCO_DPLL_REG = (regTmp | (lfLimit << CY_SYS_CLK_WCO_CONFIG_DPLL_LF_LIMIT
 371              		.loc 1 248 0
 372 00e8 144B     		ldr	r3, .L17+20
ARM GAS  C:\Users\essele\AppData\Local\Temp\ccaJcTi8.s 			page 12


 373 00ea FA68     		ldr	r2, [r7, #12]
 374 00ec 9105     		lsls	r1, r2, #22
 375 00ee 7A68     		ldr	r2, [r7, #4]
 376 00f0 0A43     		orrs	r2, r1
 377 00f2 1A60     		str	r2, [r3]
 378              	.L14:
 244:Generated_Source\PSoC4/CyLib.c ****             {
 379              		.loc 1 244 0
 380 00f4 FB68     		ldr	r3, [r7, #12]
 381 00f6 EE2B     		cmp	r3, #238
 382 00f8 F0D9     		bls	.L15
 249:Generated_Source\PSoC4/CyLib.c ****             }
 250:Generated_Source\PSoC4/CyLib.c **** 
 251:Generated_Source\PSoC4/CyLib.c ****             CyDelay(CY_SYS_CLK_WCO_DPLL_TIMEOUT_MS);
 383              		.loc 1 251 0
 384 00fa 0120     		movs	r0, #1
 385 00fc FFF7FEFF 		bl	CyDelay
 252:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_WCO_DPLL_REG = (regTmp | (CY_SYS_CLK_WCO_CONFIG_DPLL_LF_LIMIT_MAX << 
 386              		.loc 1 252 0
 387 0100 0E4B     		ldr	r3, .L17+20
 388 0102 7A68     		ldr	r2, [r7, #4]
 389 0104 FF21     		movs	r1, #255
 390 0106 8905     		lsls	r1, r1, #22
 391 0108 0A43     		orrs	r2, r1
 392 010a 1A60     		str	r2, [r3]
 253:Generated_Source\PSoC4/CyLib.c ****                                                  CY_SYS_CLK_WCO_CONFIG_DPLL_LF_LIMIT_SHIFT));
 254:Generated_Source\PSoC4/CyLib.c **** 
 255:Generated_Source\PSoC4/CyLib.c ****             CY_FLASH_CTL_REG = flashCtlReg;
 393              		.loc 1 255 0
 394 010c 0E4B     		ldr	r3, .L17+32
 395 010e 3A68     		ldr	r2, [r7]
 396 0110 1A60     		str	r2, [r3]
 256:Generated_Source\PSoC4/CyLib.c **** 
 257:Generated_Source\PSoC4/CyLib.c ****             CyExitCriticalSection(interruptState);
 397              		.loc 1 257 0
 398 0112 0B23     		movs	r3, #11
 399 0114 FB18     		adds	r3, r7, r3
 400 0116 1B78     		ldrb	r3, [r3]
 401 0118 1800     		movs	r0, r3
 402 011a FFF7FEFF 		bl	CyExitCriticalSection
 403              	.L16:
 258:Generated_Source\PSoC4/CyLib.c ****         }
 259:Generated_Source\PSoC4/CyLib.c ****     }
 404              		.loc 1 259 0
 405 011e C046     		nop
 406 0120 BD46     		mov	sp, r7
 407 0122 07B0     		add	sp, sp, #28
 408              		@ sp needed
 409 0124 90BD     		pop	{r4, r7, pc}
 410              	.L18:
 411 0126 C046     		.align	2
 412              	.L17:
 413 0128 50000C40 		.word	1074528336
 414 012c 2CFF0B40 		.word	1074528044
 415 0130 00000000 		.word	cyImoFreqMhz2Reg
 416 0134 28FF0B40 		.word	1074528040
 417 0138 34FF0B40 		.word	1074528052
ARM GAS  C:\Users\essele\AppData\Local\Temp\ccaJcTi8.s 			page 13


 418 013c 08002240 		.word	1075970056
 419 0140 00F800C0 		.word	-1073678336
 420 0144 40420F00 		.word	1000000
 421 0148 30001040 		.word	1074790448
 422 014c 00002240 		.word	1075970048
 423 0150 FFFF3FC0 		.word	-1069547521
 424              		.cfi_endproc
 425              	.LFE3:
 426              		.size	CySysClkImoEnableWcoLock, .-CySysClkImoEnableWcoLock
 427              		.section	.text.CySysClkImoDisableWcoLock,"ax",%progbits
 428              		.align	2
 429              		.global	CySysClkImoDisableWcoLock
 430              		.code	16
 431              		.thumb_func
 432              		.type	CySysClkImoDisableWcoLock, %function
 433              	CySysClkImoDisableWcoLock:
 434              	.LFB4:
 260:Generated_Source\PSoC4/CyLib.c **** 
 261:Generated_Source\PSoC4/CyLib.c **** 
 262:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
 263:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkImoDisableWcoLock
 264:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
 265:Generated_Source\PSoC4/CyLib.c ****     *
 266:Generated_Source\PSoC4/CyLib.c ****     * Disables the IMO to WCO lock feature.
 267:Generated_Source\PSoC4/CyLib.c ****     *
 268:Generated_Source\PSoC4/CyLib.c ****     * For PSoC 4200L devices, note that the IMO can lock to either WCO or USB
 269:Generated_Source\PSoC4/CyLib.c ****     * but not both.
 270:Generated_Source\PSoC4/CyLib.c ****     *
 271:Generated_Source\PSoC4/CyLib.c ****     * This function is applicable for PSoC 4100M / PSoC 4200M / PSoC 4000S /
 272:Generated_Source\PSoC4/CyLib.c ****     * PSoC 4100S / PSoC Analog Coprocessor / PSoC 4200L.
 273:Generated_Source\PSoC4/CyLib.c ****     *
 274:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
 275:Generated_Source\PSoC4/CyLib.c ****     void CySysClkImoDisableWcoLock(void)
 276:Generated_Source\PSoC4/CyLib.c ****     {
 435              		.loc 1 276 0
 436              		.cfi_startproc
 437              		@ args = 0, pretend = 0, frame = 8
 438              		@ frame_needed = 1, uses_anonymous_args = 0
 439 0000 80B5     		push	{r7, lr}
 440              		.cfi_def_cfa_offset 8
 441              		.cfi_offset 7, -8
 442              		.cfi_offset 14, -4
 443 0002 82B0     		sub	sp, sp, #8
 444              		.cfi_def_cfa_offset 16
 445 0004 00AF     		add	r7, sp, #0
 446              		.cfi_def_cfa_register 7
 277:Generated_Source\PSoC4/CyLib.c ****         #if(CY_IP_SRSSV2)
 278:Generated_Source\PSoC4/CyLib.c ****             uint32 i;
 279:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_SRSSV2) */
 280:Generated_Source\PSoC4/CyLib.c **** 
 281:Generated_Source\PSoC4/CyLib.c ****         uint32 freq;
 282:Generated_Source\PSoC4/CyLib.c ****         
 283:Generated_Source\PSoC4/CyLib.c ****         /* Get current IMO frequency based on the register value */
 284:Generated_Source\PSoC4/CyLib.c ****         #if(CY_IP_SRSSV2)
 285:Generated_Source\PSoC4/CyLib.c ****             freq = CY_SYS_CLK_IMO_MIN_FREQ_MHZ;
 447              		.loc 1 285 0
 448 0006 0323     		movs	r3, #3
ARM GAS  C:\Users\essele\AppData\Local\Temp\ccaJcTi8.s 			page 14


 449 0008 3B60     		str	r3, [r7]
 286:Generated_Source\PSoC4/CyLib.c ****             for(i = 0u; i < CY_SYS_CLK_IMO_FREQ_TABLE_SIZE; i++)
 450              		.loc 1 286 0
 451 000a 0023     		movs	r3, #0
 452 000c 7B60     		str	r3, [r7, #4]
 453 000e 11E0     		b	.L20
 454              	.L23:
 287:Generated_Source\PSoC4/CyLib.c ****             {
 288:Generated_Source\PSoC4/CyLib.c ****                 if ((uint8) (CY_SYS_CLK_IMO_TRIM2_REG & CY_SYS_CLK_IMO_FREQ_BITS_MASK) == cyImoFreq
 455              		.loc 1 288 0
 456 0010 134B     		ldr	r3, .L24
 457 0012 1B68     		ldr	r3, [r3]
 458 0014 1A00     		movs	r2, r3
 459 0016 3F23     		movs	r3, #63
 460 0018 1340     		ands	r3, r2
 461 001a 1249     		ldr	r1, .L24+4
 462 001c 7A68     		ldr	r2, [r7, #4]
 463 001e 8A18     		adds	r2, r1, r2
 464 0020 1278     		ldrb	r2, [r2]
 465 0022 9342     		cmp	r3, r2
 466 0024 03D1     		bne	.L21
 289:Generated_Source\PSoC4/CyLib.c ****                 {
 290:Generated_Source\PSoC4/CyLib.c ****                     freq = i + CY_SYS_CLK_IMO_FREQ_TABLE_OFFSET;
 467              		.loc 1 290 0
 468 0026 7B68     		ldr	r3, [r7, #4]
 469 0028 0333     		adds	r3, r3, #3
 470 002a 3B60     		str	r3, [r7]
 291:Generated_Source\PSoC4/CyLib.c ****                     break;
 471              		.loc 1 291 0
 472 002c 05E0     		b	.L22
 473              	.L21:
 286:Generated_Source\PSoC4/CyLib.c ****             {
 474              		.loc 1 286 0 discriminator 2
 475 002e 7B68     		ldr	r3, [r7, #4]
 476 0030 0133     		adds	r3, r3, #1
 477 0032 7B60     		str	r3, [r7, #4]
 478              	.L20:
 286:Generated_Source\PSoC4/CyLib.c ****             {
 479              		.loc 1 286 0 is_stmt 0 discriminator 1
 480 0034 7B68     		ldr	r3, [r7, #4]
 481 0036 2D2B     		cmp	r3, #45
 482 0038 EAD9     		bls	.L23
 483              	.L22:
 292:Generated_Source\PSoC4/CyLib.c ****                 }
 293:Generated_Source\PSoC4/CyLib.c ****             }
 294:Generated_Source\PSoC4/CyLib.c ****         #else
 295:Generated_Source\PSoC4/CyLib.c ****             /* Calculate frequency by shifting register field value and adding constant. */
 296:Generated_Source\PSoC4/CyLib.c ****             #if(CY_IP_SRSSLT)
 297:Generated_Source\PSoC4/CyLib.c ****                 freq = (((uint32) ((CY_SYS_CLK_IMO_SELECT_REG & ((uint32) CY_SYS_CLK_IMO_SELECT_FRE
 298:Generated_Source\PSoC4/CyLib.c ****                                     CY_SYS_CLK_IMO_SELECT_FREQ_SHIFT) + CY_SYS_CLK_IMO_MIN_FREQ_MHZ
 299:Generated_Source\PSoC4/CyLib.c ****                                   ((CY_SYS_CLK_SELECT_REG >> CY_SYS_CLK_SELECT_HFCLK_DIV_SHIFT) & 
 300:Generated_Source\PSoC4/CyLib.c ****                                    (uint32) CY_SYS_CLK_SELECT_HFCLK_DIV_MASK));
 301:Generated_Source\PSoC4/CyLib.c ****             #else
 302:Generated_Source\PSoC4/CyLib.c ****                 freq = ((uint32) ((CY_SYS_CLK_IMO_SELECT_REG & ((uint32) CY_SYS_CLK_IMO_SELECT_FREQ
 303:Generated_Source\PSoC4/CyLib.c ****                                    CY_SYS_CLK_IMO_SELECT_FREQ_SHIFT) + CY_SYS_CLK_IMO_MIN_FREQ_MHZ)
 304:Generated_Source\PSoC4/CyLib.c ****             #endif  /* (CY_IP_SRSSLT) */
 305:Generated_Source\PSoC4/CyLib.c **** 
ARM GAS  C:\Users\essele\AppData\Local\Temp\ccaJcTi8.s 			page 15


 306:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_SRSSV2) */
 307:Generated_Source\PSoC4/CyLib.c **** 
 308:Generated_Source\PSoC4/CyLib.c ****         CY_SYS_CLK_WCO_CONFIG_REG &= (uint32) ~CY_SYS_CLK_WCO_CONFIG_DPLL_ENABLE;
 484              		.loc 1 308 0 is_stmt 1
 485 003a 0B4B     		ldr	r3, .L24+8
 486 003c 0A4A     		ldr	r2, .L24+8
 487 003e 1268     		ldr	r2, [r2]
 488 0040 0A49     		ldr	r1, .L24+12
 489 0042 0A40     		ands	r2, r1
 490 0044 1A60     		str	r2, [r3]
 309:Generated_Source\PSoC4/CyLib.c ****         
 310:Generated_Source\PSoC4/CyLib.c ****         #if(CY_IP_SRSSLT)
 311:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_TRIM1_REG = CY_SFLASH_IMO_TRIM_REG(freq - CY_SYS_CLK_IMO_MIN_FREQ_MHZ);
 312:Generated_Source\PSoC4/CyLib.c ****         #else
 313:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_TRIM1_REG = CY_SFLASH_IMO_TRIM_REG(freq - CY_SYS_CLK_IMO_FREQ_TABLE_OFFS
 491              		.loc 1 313 0
 492 0046 0A4B     		ldr	r3, .L24+16
 493 0048 3A68     		ldr	r2, [r7]
 494 004a 0A49     		ldr	r1, .L24+20
 495 004c 8C46     		mov	ip, r1
 496 004e 6244     		add	r2, r2, ip
 497 0050 1278     		ldrb	r2, [r2]
 498 0052 D2B2     		uxtb	r2, r2
 499 0054 1A60     		str	r2, [r3]
 314:Generated_Source\PSoC4/CyLib.c ****         #endif
 315:Generated_Source\PSoC4/CyLib.c ****     }
 500              		.loc 1 315 0
 501 0056 C046     		nop
 502 0058 BD46     		mov	sp, r7
 503 005a 02B0     		add	sp, sp, #8
 504              		@ sp needed
 505 005c 80BD     		pop	{r7, pc}
 506              	.L25:
 507 005e C046     		.align	2
 508              	.L24:
 509 0060 2CFF0B40 		.word	1074528044
 510 0064 00000000 		.word	cyImoFreqMhz2Reg
 511 0068 00002240 		.word	1075970048
 512 006c FFFFFFBF 		.word	-1073741825
 513 0070 28FF0B40 		.word	1074528040
 514 0074 4DF3FF0F 		.word	268432205
 515              		.cfi_endproc
 516              	.LFE4:
 517              		.size	CySysClkImoDisableWcoLock, .-CySysClkImoDisableWcoLock
 518              		.section	.text.CySysClkImoGetWcoLock,"ax",%progbits
 519              		.align	2
 520              		.global	CySysClkImoGetWcoLock
 521              		.code	16
 522              		.thumb_func
 523              		.type	CySysClkImoGetWcoLock, %function
 524              	CySysClkImoGetWcoLock:
 525              	.LFB5:
 316:Generated_Source\PSoC4/CyLib.c **** 
 317:Generated_Source\PSoC4/CyLib.c **** 
 318:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
 319:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkImoGetWcoLock
 320:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
ARM GAS  C:\Users\essele\AppData\Local\Temp\ccaJcTi8.s 			page 16


 321:Generated_Source\PSoC4/CyLib.c ****     *
 322:Generated_Source\PSoC4/CyLib.c ****     * Reports the IMO to WCO lock enable state.
 323:Generated_Source\PSoC4/CyLib.c ****     *
 324:Generated_Source\PSoC4/CyLib.c ****     * This function is applicable for PSoC 4100M / PSoC 4200M / PSoC 4000S /
 325:Generated_Source\PSoC4/CyLib.c ****     * PSoC 4100S / PSoC Analog Coprocessor / PSoC 4200L.
 326:Generated_Source\PSoC4/CyLib.c ****     *
 327:Generated_Source\PSoC4/CyLib.c ****     * \return 1 if IMO to WCO lock is enabled.
 328:Generated_Source\PSoC4/CyLib.c ****     * \return 0 if IMO to WCO lock is disabled.
 329:Generated_Source\PSoC4/CyLib.c ****     *
 330:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
 331:Generated_Source\PSoC4/CyLib.c ****     uint32 CySysClkImoGetWcoLock(void)
 332:Generated_Source\PSoC4/CyLib.c ****     {
 526              		.loc 1 332 0
 527              		.cfi_startproc
 528              		@ args = 0, pretend = 0, frame = 0
 529              		@ frame_needed = 1, uses_anonymous_args = 0
 530 0000 80B5     		push	{r7, lr}
 531              		.cfi_def_cfa_offset 8
 532              		.cfi_offset 7, -8
 533              		.cfi_offset 14, -4
 534 0002 00AF     		add	r7, sp, #0
 535              		.cfi_def_cfa_register 7
 333:Generated_Source\PSoC4/CyLib.c ****         return ((0u != (CY_SYS_CLK_WCO_CONFIG_REG & CY_SYS_CLK_WCO_CONFIG_DPLL_ENABLE)) ?
 536              		.loc 1 333 0
 537 0004 054B     		ldr	r3, .L30
 538 0006 1A68     		ldr	r2, [r3]
 539 0008 8023     		movs	r3, #128
 540 000a DB05     		lsls	r3, r3, #23
 541 000c 1340     		ands	r3, r2
 334:Generated_Source\PSoC4/CyLib.c ****                 (uint32) 1u :
 542              		.loc 1 334 0
 543 000e 01D0     		beq	.L27
 544              		.loc 1 334 0 is_stmt 0 discriminator 1
 545 0010 0123     		movs	r3, #1
 333:Generated_Source\PSoC4/CyLib.c ****         return ((0u != (CY_SYS_CLK_WCO_CONFIG_REG & CY_SYS_CLK_WCO_CONFIG_DPLL_ENABLE)) ?
 546              		.loc 1 333 0 is_stmt 1 discriminator 1
 547 0012 00E0     		b	.L29
 548              	.L27:
 549              		.loc 1 334 0 discriminator 2
 550 0014 0023     		movs	r3, #0
 551              	.L29:
 335:Generated_Source\PSoC4/CyLib.c ****                 (uint32) 0u);
 336:Generated_Source\PSoC4/CyLib.c ****     }
 552              		.loc 1 336 0 discriminator 1
 553 0016 1800     		movs	r0, r3
 554 0018 BD46     		mov	sp, r7
 555              		@ sp needed
 556 001a 80BD     		pop	{r7, pc}
 557              	.L31:
 558              		.align	2
 559              	.L30:
 560 001c 00002240 		.word	1075970048
 561              		.cfi_endproc
 562              	.LFE5:
 563              		.size	CySysClkImoGetWcoLock, .-CySysClkImoGetWcoLock
 564              		.section	.text.CySysClkImoEnableUsbLock,"ax",%progbits
 565              		.align	2
ARM GAS  C:\Users\essele\AppData\Local\Temp\ccaJcTi8.s 			page 17


 566              		.global	CySysClkImoEnableUsbLock
 567              		.code	16
 568              		.thumb_func
 569              		.type	CySysClkImoEnableUsbLock, %function
 570              	CySysClkImoEnableUsbLock:
 571              	.LFB6:
 337:Generated_Source\PSoC4/CyLib.c **** 
 338:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */
 339:Generated_Source\PSoC4/CyLib.c **** 
 340:Generated_Source\PSoC4/CyLib.c **** 
 341:Generated_Source\PSoC4/CyLib.c **** #if (CY_IP_IMO_TRIMMABLE_BY_USB)
 342:Generated_Source\PSoC4/CyLib.c **** 
 343:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
 344:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkImoEnableUsbLock
 345:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
 346:Generated_Source\PSoC4/CyLib.c ****     *
 347:Generated_Source\PSoC4/CyLib.c ****     * Enables the IMO to USB lock feature.
 348:Generated_Source\PSoC4/CyLib.c ****     *
 349:Generated_Source\PSoC4/CyLib.c ****     * This function must be called before CySysClkWriteImoFreq().
 350:Generated_Source\PSoC4/CyLib.c ****     *
 351:Generated_Source\PSoC4/CyLib.c ****     * This function is called from CySysClkImoStart() function if USB lock
 352:Generated_Source\PSoC4/CyLib.c ****     * selected in the Design Wide Resources tab.
 353:Generated_Source\PSoC4/CyLib.c ****     *
 354:Generated_Source\PSoC4/CyLib.c ****     * This is applicable for PSoC 4200L family of devices only. For PSoC 4200L
 355:Generated_Source\PSoC4/CyLib.c ****     * devices, the IMO can lock to either WCO or USB, but not both.
 356:Generated_Source\PSoC4/CyLib.c ****     *
 357:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
 358:Generated_Source\PSoC4/CyLib.c ****     void CySysClkImoEnableUsbLock(void)
 359:Generated_Source\PSoC4/CyLib.c ****     {
 572              		.loc 1 359 0
 573              		.cfi_startproc
 574              		@ args = 0, pretend = 0, frame = 16
 575              		@ frame_needed = 1, uses_anonymous_args = 0
 576 0000 80B5     		push	{r7, lr}
 577              		.cfi_def_cfa_offset 8
 578              		.cfi_offset 7, -8
 579              		.cfi_offset 14, -4
 580 0002 84B0     		sub	sp, sp, #16
 581              		.cfi_def_cfa_offset 24
 582 0004 00AF     		add	r7, sp, #0
 583              		.cfi_def_cfa_register 7
 360:Generated_Source\PSoC4/CyLib.c ****         #if(CY_IP_SRSSV2)
 361:Generated_Source\PSoC4/CyLib.c ****             uint32 i;
 362:Generated_Source\PSoC4/CyLib.c ****             
 363:Generated_Source\PSoC4/CyLib.c ****             /* Check for new trim algorithm */
 364:Generated_Source\PSoC4/CyLib.c ****             uint32 CySysClkUsbCuSortTrim = ((CY_SFLASH_S1_TESTPGM_OLD_REV < (CY_SFLASH_S1_TESTPGM_R
 584              		.loc 1 364 0
 585 0006 3C4B     		ldr	r3, .L47
 586 0008 1B78     		ldrb	r3, [r3]
 587 000a DBB2     		uxtb	r3, r3
 588 000c 1A00     		movs	r2, r3
 589 000e 3F23     		movs	r3, #63
 590 0010 1340     		ands	r3, r2
 591 0012 042B     		cmp	r3, #4
 592 0014 01D9     		bls	.L33
 593              		.loc 1 364 0 is_stmt 0 discriminator 1
 594 0016 0123     		movs	r3, #1
ARM GAS  C:\Users\essele\AppData\Local\Temp\ccaJcTi8.s 			page 18


 595 0018 00E0     		b	.L34
 596              	.L33:
 597              		.loc 1 364 0 discriminator 2
 598 001a 0023     		movs	r3, #0
 599              	.L34:
 600              		.loc 1 364 0 discriminator 4
 601 001c 7B60     		str	r3, [r7, #4]
 365:Generated_Source\PSoC4/CyLib.c ****                                                                             CY_SFLASH_S1_TESTPGM_RE
 366:Generated_Source\PSoC4/CyLib.c **** 
 367:Generated_Source\PSoC4/CyLib.c ****             /* Get current IMO frequency based on the register value */
 368:Generated_Source\PSoC4/CyLib.c ****             uint32 freq = CY_SYS_CLK_IMO_MIN_FREQ_MHZ;
 602              		.loc 1 368 0 is_stmt 1 discriminator 4
 603 001e 0323     		movs	r3, #3
 604 0020 BB60     		str	r3, [r7, #8]
 369:Generated_Source\PSoC4/CyLib.c **** 
 370:Generated_Source\PSoC4/CyLib.c ****             for(i = 0u; i < CY_SYS_CLK_IMO_FREQ_TABLE_SIZE; i++)
 605              		.loc 1 370 0 discriminator 4
 606 0022 0023     		movs	r3, #0
 607 0024 FB60     		str	r3, [r7, #12]
 608 0026 11E0     		b	.L35
 609              	.L38:
 371:Generated_Source\PSoC4/CyLib.c ****             {
 372:Generated_Source\PSoC4/CyLib.c ****                 if ((uint8) (CY_SYS_CLK_IMO_TRIM2_REG & CY_SYS_CLK_IMO_FREQ_BITS_MASK) == cyImoFreq
 610              		.loc 1 372 0
 611 0028 344B     		ldr	r3, .L47+4
 612 002a 1B68     		ldr	r3, [r3]
 613 002c 1A00     		movs	r2, r3
 614 002e 3F23     		movs	r3, #63
 615 0030 1340     		ands	r3, r2
 616 0032 3349     		ldr	r1, .L47+8
 617 0034 FA68     		ldr	r2, [r7, #12]
 618 0036 8A18     		adds	r2, r1, r2
 619 0038 1278     		ldrb	r2, [r2]
 620 003a 9342     		cmp	r3, r2
 621 003c 03D1     		bne	.L36
 373:Generated_Source\PSoC4/CyLib.c ****                 {
 374:Generated_Source\PSoC4/CyLib.c ****                     freq = i + CY_SYS_CLK_IMO_FREQ_TABLE_OFFSET;
 622              		.loc 1 374 0
 623 003e FB68     		ldr	r3, [r7, #12]
 624 0040 0333     		adds	r3, r3, #3
 625 0042 BB60     		str	r3, [r7, #8]
 375:Generated_Source\PSoC4/CyLib.c ****                     break;
 626              		.loc 1 375 0
 627 0044 05E0     		b	.L37
 628              	.L36:
 370:Generated_Source\PSoC4/CyLib.c ****             {
 629              		.loc 1 370 0 discriminator 2
 630 0046 FB68     		ldr	r3, [r7, #12]
 631 0048 0133     		adds	r3, r3, #1
 632 004a FB60     		str	r3, [r7, #12]
 633              	.L35:
 370:Generated_Source\PSoC4/CyLib.c ****             {
 634              		.loc 1 370 0 is_stmt 0 discriminator 1
 635 004c FB68     		ldr	r3, [r7, #12]
 636 004e 2D2B     		cmp	r3, #45
 637 0050 EAD9     		bls	.L38
 638              	.L37:
ARM GAS  C:\Users\essele\AppData\Local\Temp\ccaJcTi8.s 			page 19


 376:Generated_Source\PSoC4/CyLib.c ****                 }
 377:Generated_Source\PSoC4/CyLib.c ****             }
 378:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_SRSSV2) */
 379:Generated_Source\PSoC4/CyLib.c ****         
 380:Generated_Source\PSoC4/CyLib.c ****         /* Set oscillator interface control port to USB */
 381:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_IMO_TRIMMABLE_BY_WCO && CY_IP_IMO_TRIMMABLE_BY_USB)
 382:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_OSCINTF_CTL_REG = (CY_SYS_CLK_OSCINTF_CTL_REG & (uint32) ~CY_SYS_CLK_OSCINTF
 639              		.loc 1 382 0 is_stmt 1
 640 0052 2C4B     		ldr	r3, .L47+12
 641 0054 2B4A     		ldr	r2, .L47+12
 642 0056 1268     		ldr	r2, [r2]
 643 0058 0121     		movs	r1, #1
 644 005a 8A43     		bics	r2, r1
 645 005c 1A60     		str	r2, [r3]
 383:Generated_Source\PSoC4/CyLib.c ****                                           CY_SYS_CLK_OSCINTF_CTL_PORT_SEL_USB;
 384:Generated_Source\PSoC4/CyLib.c ****         #endif /* (CY_IP_IMO_TRIMMABLE_BY_WCO && CY_IP_IMO_TRIMMABLE_BY_USB) */
 385:Generated_Source\PSoC4/CyLib.c **** 
 386:Generated_Source\PSoC4/CyLib.c ****         #if(CY_IP_SRSSV2)
 387:Generated_Source\PSoC4/CyLib.c ****            
 388:Generated_Source\PSoC4/CyLib.c ****             /* Save CY_SYS_CLK_IMO_TRIM4_REG and set IMO gain for USB lock */
 389:Generated_Source\PSoC4/CyLib.c ****             CySysClkImoTrim4 = CY_SYS_CLK_IMO_TRIM4_REG;
 646              		.loc 1 389 0
 647 005e 2A4B     		ldr	r3, .L47+16
 648 0060 1A68     		ldr	r2, [r3]
 649 0062 2A4B     		ldr	r3, .L47+20
 650 0064 1A60     		str	r2, [r3]
 390:Generated_Source\PSoC4/CyLib.c ****             
 391:Generated_Source\PSoC4/CyLib.c ****             if(0u != CySysClkUsbCuSortTrim)
 651              		.loc 1 391 0
 652 0066 7B68     		ldr	r3, [r7, #4]
 653 0068 002B     		cmp	r3, #0
 654 006a 13D0     		beq	.L39
 392:Generated_Source\PSoC4/CyLib.c ****             {
 393:Generated_Source\PSoC4/CyLib.c ****                 CySysClkImoTrim5 = CY_PWR_BG_TRIM5_REG;
 655              		.loc 1 393 0
 656 006c 284B     		ldr	r3, .L47+24
 657 006e 1A68     		ldr	r2, [r3]
 658 0070 284B     		ldr	r3, .L47+28
 659 0072 1A60     		str	r2, [r3]
 394:Generated_Source\PSoC4/CyLib.c ****                 
 395:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_IMO_TRIM4_REG = (CySysClkImoTrim4 & (uint32) ~CY_SYS_CLK_IMO_TRIM4_GAIN_
 660              		.loc 1 395 0
 661 0074 244A     		ldr	r2, .L47+16
 662 0076 254B     		ldr	r3, .L47+20
 663 0078 1B68     		ldr	r3, [r3]
 664 007a 1F21     		movs	r1, #31
 665 007c 8B43     		bics	r3, r1
 396:Generated_Source\PSoC4/CyLib.c ****                                             CY_SFLASH_USBMODE_IMO_GAIN_TRIM_REG;
 666              		.loc 1 396 0
 667 007e 2649     		ldr	r1, .L47+32
 668 0080 0978     		ldrb	r1, [r1]
 669 0082 C9B2     		uxtb	r1, r1
 395:Generated_Source\PSoC4/CyLib.c ****                                             CY_SFLASH_USBMODE_IMO_GAIN_TRIM_REG;
 670              		.loc 1 395 0
 671 0084 0B43     		orrs	r3, r1
 672 0086 1360     		str	r3, [r2]
 397:Generated_Source\PSoC4/CyLib.c ****                 CY_PWR_BG_TRIM5_REG = CY_SFLASH_USBMODE_IMO_TEMPCO_REG;
ARM GAS  C:\Users\essele\AppData\Local\Temp\ccaJcTi8.s 			page 20


 673              		.loc 1 397 0
 674 0088 214B     		ldr	r3, .L47+24
 675 008a 244A     		ldr	r2, .L47+36
 676 008c 1278     		ldrb	r2, [r2]
 677 008e D2B2     		uxtb	r2, r2
 678 0090 1A60     		str	r2, [r3]
 679 0092 07E0     		b	.L40
 680              	.L39:
 398:Generated_Source\PSoC4/CyLib.c ****                 
 399:Generated_Source\PSoC4/CyLib.c ****             }
 400:Generated_Source\PSoC4/CyLib.c ****             else
 401:Generated_Source\PSoC4/CyLib.c ****             {
 402:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_IMO_TRIM4_REG = (CySysClkImoTrim4 & (uint32) ~CY_SYS_CLK_IMO_TRIM4_GAIN_
 681              		.loc 1 402 0
 682 0094 1C4A     		ldr	r2, .L47+16
 683 0096 1D4B     		ldr	r3, .L47+20
 684 0098 1B68     		ldr	r3, [r3]
 685 009a 1F21     		movs	r1, #31
 686 009c 8B43     		bics	r3, r1
 687 009e 0821     		movs	r1, #8
 688 00a0 0B43     		orrs	r3, r1
 689 00a2 1360     		str	r3, [r2]
 690              	.L40:
 403:Generated_Source\PSoC4/CyLib.c ****                                             CY_SYS_CLK_IMO_TRIM4_USB_GAIN;
 404:Generated_Source\PSoC4/CyLib.c **** 
 405:Generated_Source\PSoC4/CyLib.c ****             }
 406:Generated_Source\PSoC4/CyLib.c **** 
 407:Generated_Source\PSoC4/CyLib.c ****             if (48u == freq)
 691              		.loc 1 407 0
 692 00a4 BB68     		ldr	r3, [r7, #8]
 693 00a6 302B     		cmp	r3, #48
 694 00a8 0CD1     		bne	.L41
 408:Generated_Source\PSoC4/CyLib.c ****             {
 409:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_IMO_TRIM1_REG = (0u != CySysClkUsbCuSortTrim) ? 
 695              		.loc 1 409 0
 696 00aa 1D4B     		ldr	r3, .L47+40
 410:Generated_Source\PSoC4/CyLib.c ****                                            (uint32)CY_SFLASH_CU_IMO_TRIM_USBMODE_48_REG :
 697              		.loc 1 410 0
 698 00ac 7A68     		ldr	r2, [r7, #4]
 699 00ae 002A     		cmp	r2, #0
 700 00b0 03D0     		beq	.L42
 701              		.loc 1 410 0 is_stmt 0 discriminator 1
 702 00b2 1C4A     		ldr	r2, .L47+44
 703 00b4 1278     		ldrb	r2, [r2]
 704 00b6 D2B2     		uxtb	r2, r2
 705 00b8 02E0     		b	.L43
 706              	.L42:
 411:Generated_Source\PSoC4/CyLib.c ****                                            (uint32)CY_SFLASH_IMO_TRIM_USBMODE_48_REG;
 707              		.loc 1 411 0 is_stmt 1 discriminator 2
 708 00ba 1B4A     		ldr	r2, .L47+48
 709 00bc 1278     		ldrb	r2, [r2]
 710 00be D2B2     		uxtb	r2, r2
 711              	.L43:
 409:Generated_Source\PSoC4/CyLib.c ****                                            (uint32)CY_SFLASH_CU_IMO_TRIM_USBMODE_48_REG :
 712              		.loc 1 409 0
 713 00c0 1A60     		str	r2, [r3]
 714 00c2 0EE0     		b	.L44
ARM GAS  C:\Users\essele\AppData\Local\Temp\ccaJcTi8.s 			page 21


 715              	.L41:
 412:Generated_Source\PSoC4/CyLib.c ****             }
 413:Generated_Source\PSoC4/CyLib.c ****             else if (24u == freq)
 716              		.loc 1 413 0
 717 00c4 BB68     		ldr	r3, [r7, #8]
 718 00c6 182B     		cmp	r3, #24
 719 00c8 0BD1     		bne	.L44
 414:Generated_Source\PSoC4/CyLib.c ****             {
 415:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_IMO_TRIM1_REG = (0u != CySysClkUsbCuSortTrim) ? 
 720              		.loc 1 415 0
 721 00ca 154B     		ldr	r3, .L47+40
 416:Generated_Source\PSoC4/CyLib.c ****                                            (uint32)CY_SFLASH_CU_IMO_TRIM_USBMODE_24_REG :
 722              		.loc 1 416 0
 723 00cc 7A68     		ldr	r2, [r7, #4]
 724 00ce 002A     		cmp	r2, #0
 725 00d0 03D0     		beq	.L45
 726              		.loc 1 416 0 is_stmt 0 discriminator 1
 727 00d2 164A     		ldr	r2, .L47+52
 728 00d4 1278     		ldrb	r2, [r2]
 729 00d6 D2B2     		uxtb	r2, r2
 730 00d8 02E0     		b	.L46
 731              	.L45:
 417:Generated_Source\PSoC4/CyLib.c ****                                            (uint32)CY_SFLASH_IMO_TRIM_USBMODE_24_REG;
 732              		.loc 1 417 0 is_stmt 1 discriminator 2
 733 00da 154A     		ldr	r2, .L47+56
 734 00dc 1278     		ldrb	r2, [r2]
 735 00de D2B2     		uxtb	r2, r2
 736              	.L46:
 415:Generated_Source\PSoC4/CyLib.c ****                                            (uint32)CY_SFLASH_CU_IMO_TRIM_USBMODE_24_REG :
 737              		.loc 1 415 0
 738 00e0 1A60     		str	r2, [r3]
 739              	.L44:
 418:Generated_Source\PSoC4/CyLib.c ****             }
 419:Generated_Source\PSoC4/CyLib.c ****             else
 420:Generated_Source\PSoC4/CyLib.c ****             {
 421:Generated_Source\PSoC4/CyLib.c ****                 /* Do nothing */
 422:Generated_Source\PSoC4/CyLib.c ****             }
 423:Generated_Source\PSoC4/CyLib.c ****             
 424:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_SRSSV2) */
 425:Generated_Source\PSoC4/CyLib.c **** 
 426:Generated_Source\PSoC4/CyLib.c ****         CY_SYS_CLK_USBDEVv2_CR1_REG |= CY_SYS_CLK_USBDEVv2_CR1_ENABLE_LOCK;
 740              		.loc 1 426 0
 741 00e2 144B     		ldr	r3, .L47+60
 742 00e4 134A     		ldr	r2, .L47+60
 743 00e6 1268     		ldr	r2, [r2]
 744 00e8 0221     		movs	r1, #2
 745 00ea 0A43     		orrs	r2, r1
 746 00ec 1A60     		str	r2, [r3]
 427:Generated_Source\PSoC4/CyLib.c ****     }
 747              		.loc 1 427 0
 748 00ee C046     		nop
 749 00f0 BD46     		mov	sp, r7
 750 00f2 04B0     		add	sp, sp, #16
 751              		@ sp needed
 752 00f4 80BD     		pop	{r7, pc}
 753              	.L48:
 754 00f6 C046     		.align	2
ARM GAS  C:\Users\essele\AppData\Local\Temp\ccaJcTi8.s 			page 22


 755              	.L47:
 756 00f8 00F3FF0F 		.word	268432128
 757 00fc 2CFF0B40 		.word	1074528044
 758 0100 00000000 		.word	cyImoFreqMhz2Reg
 759 0104 50000C40 		.word	1074528336
 760 0108 34FF0B40 		.word	1074528052
 761 010c 00000000 		.word	CySysClkImoTrim4
 762 0110 20FF0B40 		.word	1074528032
 763 0114 00000000 		.word	CySysClkImoTrim5
 764 0118 C0F1FF0F 		.word	268431808
 765 011c C1F1FF0F 		.word	268431809
 766 0120 28FF0B40 		.word	1074528040
 767 0124 C3F1FF0F 		.word	268431811
 768 0128 3FF3FF0F 		.word	268432191
 769 012c C2F1FF0F 		.word	268431810
 770 0130 3EF3FF0F 		.word	268432190
 771 0134 24002C40 		.word	1076625444
 772              		.cfi_endproc
 773              	.LFE6:
 774              		.size	CySysClkImoEnableUsbLock, .-CySysClkImoEnableUsbLock
 775              		.section	.text.CySysClkImoDisableUsbLock,"ax",%progbits
 776              		.align	2
 777              		.global	CySysClkImoDisableUsbLock
 778              		.code	16
 779              		.thumb_func
 780              		.type	CySysClkImoDisableUsbLock, %function
 781              	CySysClkImoDisableUsbLock:
 782              	.LFB7:
 428:Generated_Source\PSoC4/CyLib.c **** 
 429:Generated_Source\PSoC4/CyLib.c **** 
 430:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
 431:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkImoDisableUsbLock
 432:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
 433:Generated_Source\PSoC4/CyLib.c ****     *
 434:Generated_Source\PSoC4/CyLib.c ****     * Disables the IMO to USB lock feature.
 435:Generated_Source\PSoC4/CyLib.c ****     *
 436:Generated_Source\PSoC4/CyLib.c ****     * This function is called from CySysClkImoStop() function if USB lock selected
 437:Generated_Source\PSoC4/CyLib.c ****     * in the Design Wide Resources tab.
 438:Generated_Source\PSoC4/CyLib.c ****     *
 439:Generated_Source\PSoC4/CyLib.c ****     * This is applicable for PSoC 4200L family of devices only. For PSoC 4200L
 440:Generated_Source\PSoC4/CyLib.c ****     * devices, the IMO can lock to either WCO or USB, but not both.
 441:Generated_Source\PSoC4/CyLib.c ****     *
 442:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
 443:Generated_Source\PSoC4/CyLib.c ****     void CySysClkImoDisableUsbLock(void)
 444:Generated_Source\PSoC4/CyLib.c ****     {
 783              		.loc 1 444 0
 784              		.cfi_startproc
 785              		@ args = 0, pretend = 0, frame = 16
 786              		@ frame_needed = 1, uses_anonymous_args = 0
 787 0000 80B5     		push	{r7, lr}
 788              		.cfi_def_cfa_offset 8
 789              		.cfi_offset 7, -8
 790              		.cfi_offset 14, -4
 791 0002 84B0     		sub	sp, sp, #16
 792              		.cfi_def_cfa_offset 24
 793 0004 00AF     		add	r7, sp, #0
 794              		.cfi_def_cfa_register 7
ARM GAS  C:\Users\essele\AppData\Local\Temp\ccaJcTi8.s 			page 23


 445:Generated_Source\PSoC4/CyLib.c ****         #if(CY_IP_SRSSV2)
 446:Generated_Source\PSoC4/CyLib.c ****             uint32 i;
 447:Generated_Source\PSoC4/CyLib.c ****             
 448:Generated_Source\PSoC4/CyLib.c ****             /* Check for new trim algorithm */
 449:Generated_Source\PSoC4/CyLib.c ****             uint32 CySysClkUsbCuSortTrim = ((CY_SFLASH_S1_TESTPGM_OLD_REV < (CY_SFLASH_S1_TESTPGM_R
 795              		.loc 1 449 0
 796 0006 254B     		ldr	r3, .L57
 797 0008 1B78     		ldrb	r3, [r3]
 798 000a DBB2     		uxtb	r3, r3
 799 000c 1A00     		movs	r2, r3
 800 000e 3F23     		movs	r3, #63
 801 0010 1340     		ands	r3, r2
 802 0012 042B     		cmp	r3, #4
 803 0014 01D9     		bls	.L50
 804              		.loc 1 449 0 is_stmt 0 discriminator 1
 805 0016 0123     		movs	r3, #1
 806 0018 00E0     		b	.L51
 807              	.L50:
 808              		.loc 1 449 0 discriminator 2
 809 001a 0023     		movs	r3, #0
 810              	.L51:
 811              		.loc 1 449 0 discriminator 4
 812 001c 7B60     		str	r3, [r7, #4]
 450:Generated_Source\PSoC4/CyLib.c ****                                                                             CY_SFLASH_S1_TESTPGM_RE
 451:Generated_Source\PSoC4/CyLib.c **** 
 452:Generated_Source\PSoC4/CyLib.c ****             /* Get current IMO frequency based on the register value */
 453:Generated_Source\PSoC4/CyLib.c ****             uint32 freq = CY_SYS_CLK_IMO_MIN_FREQ_MHZ;;
 813              		.loc 1 453 0 is_stmt 1 discriminator 4
 814 001e 0323     		movs	r3, #3
 815 0020 BB60     		str	r3, [r7, #8]
 454:Generated_Source\PSoC4/CyLib.c **** 
 455:Generated_Source\PSoC4/CyLib.c ****             for(i = 0u; i < CY_SYS_CLK_IMO_FREQ_TABLE_SIZE; i++)
 816              		.loc 1 455 0 discriminator 4
 817 0022 0023     		movs	r3, #0
 818 0024 FB60     		str	r3, [r7, #12]
 819 0026 11E0     		b	.L52
 820              	.L55:
 456:Generated_Source\PSoC4/CyLib.c ****             {
 457:Generated_Source\PSoC4/CyLib.c ****                 if ((uint8) (CY_SYS_CLK_IMO_TRIM2_REG & CY_SYS_CLK_IMO_FREQ_BITS_MASK) == cyImoFreq
 821              		.loc 1 457 0
 822 0028 1D4B     		ldr	r3, .L57+4
 823 002a 1B68     		ldr	r3, [r3]
 824 002c 1A00     		movs	r2, r3
 825 002e 3F23     		movs	r3, #63
 826 0030 1340     		ands	r3, r2
 827 0032 1C49     		ldr	r1, .L57+8
 828 0034 FA68     		ldr	r2, [r7, #12]
 829 0036 8A18     		adds	r2, r1, r2
 830 0038 1278     		ldrb	r2, [r2]
 831 003a 9342     		cmp	r3, r2
 832 003c 03D1     		bne	.L53
 458:Generated_Source\PSoC4/CyLib.c ****                 {
 459:Generated_Source\PSoC4/CyLib.c ****                     freq = i + CY_SYS_CLK_IMO_FREQ_TABLE_OFFSET;
 833              		.loc 1 459 0
 834 003e FB68     		ldr	r3, [r7, #12]
 835 0040 0333     		adds	r3, r3, #3
 836 0042 BB60     		str	r3, [r7, #8]
ARM GAS  C:\Users\essele\AppData\Local\Temp\ccaJcTi8.s 			page 24


 460:Generated_Source\PSoC4/CyLib.c ****                     break;
 837              		.loc 1 460 0
 838 0044 05E0     		b	.L54
 839              	.L53:
 455:Generated_Source\PSoC4/CyLib.c ****             {
 840              		.loc 1 455 0 discriminator 2
 841 0046 FB68     		ldr	r3, [r7, #12]
 842 0048 0133     		adds	r3, r3, #1
 843 004a FB60     		str	r3, [r7, #12]
 844              	.L52:
 455:Generated_Source\PSoC4/CyLib.c ****             {
 845              		.loc 1 455 0 is_stmt 0 discriminator 1
 846 004c FB68     		ldr	r3, [r7, #12]
 847 004e 2D2B     		cmp	r3, #45
 848 0050 EAD9     		bls	.L55
 849              	.L54:
 461:Generated_Source\PSoC4/CyLib.c ****                 }
 462:Generated_Source\PSoC4/CyLib.c ****             }           
 463:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_SRSSV2) */
 464:Generated_Source\PSoC4/CyLib.c ****         
 465:Generated_Source\PSoC4/CyLib.c ****         CY_SYS_CLK_USBDEVv2_CR1_REG &= (uint32) ~CY_SYS_CLK_USBDEVv2_CR1_ENABLE_LOCK;
 850              		.loc 1 465 0 is_stmt 1
 851 0052 154B     		ldr	r3, .L57+12
 852 0054 144A     		ldr	r2, .L57+12
 853 0056 1268     		ldr	r2, [r2]
 854 0058 0221     		movs	r1, #2
 855 005a 8A43     		bics	r2, r1
 856 005c 1A60     		str	r2, [r3]
 466:Generated_Source\PSoC4/CyLib.c **** 
 467:Generated_Source\PSoC4/CyLib.c ****         #if(CY_IP_SRSSV2)
 468:Generated_Source\PSoC4/CyLib.c ****             /* Restore CY_SYS_CLK_IMO_TRIM4_REG */
 469:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_TRIM4_REG = ((CY_SYS_CLK_IMO_TRIM4_REG & (uint32) ~CY_SYS_CLK_IMO_TRIM4_
 857              		.loc 1 469 0
 858 005e 134A     		ldr	r2, .L57+16
 859 0060 124B     		ldr	r3, .L57+16
 860 0062 1B68     		ldr	r3, [r3]
 861 0064 1F21     		movs	r1, #31
 862 0066 8B43     		bics	r3, r1
 863 0068 1900     		movs	r1, r3
 470:Generated_Source\PSoC4/CyLib.c ****                                         (CySysClkImoTrim4 & CY_SYS_CLK_IMO_TRIM4_GAIN_MASK));
 864              		.loc 1 470 0
 865 006a 114B     		ldr	r3, .L57+20
 866 006c 1B68     		ldr	r3, [r3]
 867 006e 1F20     		movs	r0, #31
 868 0070 0340     		ands	r3, r0
 469:Generated_Source\PSoC4/CyLib.c ****                                         (CySysClkImoTrim4 & CY_SYS_CLK_IMO_TRIM4_GAIN_MASK));
 869              		.loc 1 469 0
 870 0072 0B43     		orrs	r3, r1
 871 0074 1360     		str	r3, [r2]
 471:Generated_Source\PSoC4/CyLib.c **** 
 472:Generated_Source\PSoC4/CyLib.c ****             if(0u != CySysClkUsbCuSortTrim)
 872              		.loc 1 472 0
 873 0076 7B68     		ldr	r3, [r7, #4]
 874 0078 002B     		cmp	r3, #0
 875 007a 03D0     		beq	.L56
 473:Generated_Source\PSoC4/CyLib.c ****             {
 474:Generated_Source\PSoC4/CyLib.c ****                 CY_PWR_BG_TRIM5_REG = CySysClkImoTrim5;
ARM GAS  C:\Users\essele\AppData\Local\Temp\ccaJcTi8.s 			page 25


 876              		.loc 1 474 0
 877 007c 0D4A     		ldr	r2, .L57+24
 878 007e 0E4B     		ldr	r3, .L57+28
 879 0080 1B68     		ldr	r3, [r3]
 880 0082 1360     		str	r3, [r2]
 881              	.L56:
 475:Generated_Source\PSoC4/CyLib.c ****             }
 476:Generated_Source\PSoC4/CyLib.c ****             
 477:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_TRIM1_REG = CY_SFLASH_IMO_TRIM_REG(freq - CY_SYS_CLK_IMO_FREQ_TABLE_OFFS
 882              		.loc 1 477 0
 883 0084 0D4B     		ldr	r3, .L57+32
 884 0086 BA68     		ldr	r2, [r7, #8]
 885 0088 0D49     		ldr	r1, .L57+36
 886 008a 8C46     		mov	ip, r1
 887 008c 6244     		add	r2, r2, ip
 888 008e 1278     		ldrb	r2, [r2]
 889 0090 D2B2     		uxtb	r2, r2
 890 0092 1A60     		str	r2, [r3]
 478:Generated_Source\PSoC4/CyLib.c ****             
 479:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_SRSSV2) */
 480:Generated_Source\PSoC4/CyLib.c ****     }
 891              		.loc 1 480 0
 892 0094 C046     		nop
 893 0096 BD46     		mov	sp, r7
 894 0098 04B0     		add	sp, sp, #16
 895              		@ sp needed
 896 009a 80BD     		pop	{r7, pc}
 897              	.L58:
 898              		.align	2
 899              	.L57:
 900 009c 00F3FF0F 		.word	268432128
 901 00a0 2CFF0B40 		.word	1074528044
 902 00a4 00000000 		.word	cyImoFreqMhz2Reg
 903 00a8 24002C40 		.word	1076625444
 904 00ac 34FF0B40 		.word	1074528052
 905 00b0 00000000 		.word	CySysClkImoTrim4
 906 00b4 20FF0B40 		.word	1074528032
 907 00b8 00000000 		.word	CySysClkImoTrim5
 908 00bc 28FF0B40 		.word	1074528040
 909 00c0 4DF3FF0F 		.word	268432205
 910              		.cfi_endproc
 911              	.LFE7:
 912              		.size	CySysClkImoDisableUsbLock, .-CySysClkImoDisableUsbLock
 913              		.section	.text.CySysClkImoGetUsbLock,"ax",%progbits
 914              		.align	2
 915              		.global	CySysClkImoGetUsbLock
 916              		.code	16
 917              		.thumb_func
 918              		.type	CySysClkImoGetUsbLock, %function
 919              	CySysClkImoGetUsbLock:
 920              	.LFB8:
 481:Generated_Source\PSoC4/CyLib.c **** 
 482:Generated_Source\PSoC4/CyLib.c **** 
 483:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
 484:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkImoGetUsbLock
 485:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
 486:Generated_Source\PSoC4/CyLib.c ****     *
ARM GAS  C:\Users\essele\AppData\Local\Temp\ccaJcTi8.s 			page 26


 487:Generated_Source\PSoC4/CyLib.c ****     * Reports the IMO to USB lock enable state.
 488:Generated_Source\PSoC4/CyLib.c ****     *
 489:Generated_Source\PSoC4/CyLib.c ****     * This is applicable for PSoC 4200L family of devices only. For PSoC 4200L
 490:Generated_Source\PSoC4/CyLib.c ****     * devices, the IMO can lock to either WCO or USB, but not both.
 491:Generated_Source\PSoC4/CyLib.c ****     *
 492:Generated_Source\PSoC4/CyLib.c ****     * \return 1 if IMO to USB lock is enabled.
 493:Generated_Source\PSoC4/CyLib.c ****     * \return 0 if IMO to USB lock is disabled.
 494:Generated_Source\PSoC4/CyLib.c ****     *
 495:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
 496:Generated_Source\PSoC4/CyLib.c ****     uint32 CySysClkImoGetUsbLock(void)
 497:Generated_Source\PSoC4/CyLib.c ****     {
 921              		.loc 1 497 0
 922              		.cfi_startproc
 923              		@ args = 0, pretend = 0, frame = 0
 924              		@ frame_needed = 1, uses_anonymous_args = 0
 925 0000 80B5     		push	{r7, lr}
 926              		.cfi_def_cfa_offset 8
 927              		.cfi_offset 7, -8
 928              		.cfi_offset 14, -4
 929 0002 00AF     		add	r7, sp, #0
 930              		.cfi_def_cfa_register 7
 498:Generated_Source\PSoC4/CyLib.c ****         return ((0u != (CY_SYS_CLK_USBDEVv2_CR1_REG & CY_SYS_CLK_USBDEVv2_CR1_ENABLE_LOCK)) ?
 931              		.loc 1 498 0
 932 0004 054B     		ldr	r3, .L63
 933 0006 1B68     		ldr	r3, [r3]
 934 0008 0222     		movs	r2, #2
 935 000a 1340     		ands	r3, r2
 499:Generated_Source\PSoC4/CyLib.c ****                 (uint32) 1u :
 936              		.loc 1 499 0
 937 000c 01D0     		beq	.L60
 938              		.loc 1 499 0 is_stmt 0 discriminator 1
 939 000e 0123     		movs	r3, #1
 498:Generated_Source\PSoC4/CyLib.c ****         return ((0u != (CY_SYS_CLK_USBDEVv2_CR1_REG & CY_SYS_CLK_USBDEVv2_CR1_ENABLE_LOCK)) ?
 940              		.loc 1 498 0 is_stmt 1 discriminator 1
 941 0010 00E0     		b	.L62
 942              	.L60:
 943              		.loc 1 499 0 discriminator 2
 944 0012 0023     		movs	r3, #0
 945              	.L62:
 500:Generated_Source\PSoC4/CyLib.c ****                 (uint32) 0u);
 501:Generated_Source\PSoC4/CyLib.c ****     }
 946              		.loc 1 501 0 discriminator 1
 947 0014 1800     		movs	r0, r3
 948 0016 BD46     		mov	sp, r7
 949              		@ sp needed
 950 0018 80BD     		pop	{r7, pc}
 951              	.L64:
 952 001a C046     		.align	2
 953              	.L63:
 954 001c 24002C40 		.word	1076625444
 955              		.cfi_endproc
 956              	.LFE8:
 957              		.size	CySysClkImoGetUsbLock, .-CySysClkImoGetUsbLock
 958              		.section	.text.CySysClkWriteHfclkDirect,"ax",%progbits
 959              		.align	2
 960              		.global	CySysClkWriteHfclkDirect
 961              		.code	16
ARM GAS  C:\Users\essele\AppData\Local\Temp\ccaJcTi8.s 			page 27


 962              		.thumb_func
 963              		.type	CySysClkWriteHfclkDirect, %function
 964              	CySysClkWriteHfclkDirect:
 965              	.LFB9:
 502:Generated_Source\PSoC4/CyLib.c **** #endif  /* (CY_IP_IMO_TRIMMABLE_BY_USB) */
 503:Generated_Source\PSoC4/CyLib.c **** 
 504:Generated_Source\PSoC4/CyLib.c **** 
 505:Generated_Source\PSoC4/CyLib.c **** 
 506:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
 507:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysClkWriteHfclkDirect
 508:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
 509:Generated_Source\PSoC4/CyLib.c **** *
 510:Generated_Source\PSoC4/CyLib.c **** * Selects the direct source for the HFCLK.
 511:Generated_Source\PSoC4/CyLib.c **** *
 512:Generated_Source\PSoC4/CyLib.c **** * The new source must be running and stable before calling this function.
 513:Generated_Source\PSoC4/CyLib.c **** *
 514:Generated_Source\PSoC4/CyLib.c **** * PSoC 4000:
 515:Generated_Source\PSoC4/CyLib.c **** * The SYSCLK has a maximum speed of 16 MHz, so HFCLK and SYSCLK dividers should
 516:Generated_Source\PSoC4/CyLib.c **** * be selected in a way to not to exceed 16 MHz for the System clock.
 517:Generated_Source\PSoC4/CyLib.c **** *
 518:Generated_Source\PSoC4/CyLib.c **** * If the SYSCLK clock frequency increases during device operation, call
 519:Generated_Source\PSoC4/CyLib.c **** * CySysFlashSetWaitCycles() with the appropriate parameter to adjust the number
 520:Generated_Source\PSoC4/CyLib.c **** * of clock cycles the cache will wait before sampling data comes back from
 521:Generated_Source\PSoC4/CyLib.c **** * Flash. If the SYSCLK clock frequency decreases, you can call
 522:Generated_Source\PSoC4/CyLib.c **** * CySysFlashSetWaitCycles() to improve the CPU performance. See
 523:Generated_Source\PSoC4/CyLib.c **** * CySysFlashSetWaitCycles() description for more information.
 524:Generated_Source\PSoC4/CyLib.c **** *
 525:Generated_Source\PSoC4/CyLib.c **** * Do not select PLL as the source for HFCLK if PLL output frequency exceeds
 526:Generated_Source\PSoC4/CyLib.c **** * maximum permissible value for HFCLK.
 527:Generated_Source\PSoC4/CyLib.c **** *
 528:Generated_Source\PSoC4/CyLib.c **** * \param clkSelect One of the available HFCLK direct sources.
 529:Generated_Source\PSoC4/CyLib.c **** * CY_SYS_CLK_HFCLK_IMO     IMO.
 530:Generated_Source\PSoC4/CyLib.c **** * CY_SYS_CLK_HFCLK_EXTCLK  External clock pin.
 531:Generated_Source\PSoC4/CyLib.c **** * CY_SYS_CLK_HFCLK_ECO     External crystal oscillator. Applicable for
 532:Generated_Source\PSoC4/CyLib.c **** *                          PSoC 4100 BLE / PSoC 4200 BLE / PSoC 4200L /
 533:Generated_Source\PSoC4/CyLib.c **** *                          4100S with ECO.
 534:Generated_Source\PSoC4/CyLib.c **** * CY_SYS_CLK_HFCLK_PLL0    PLL#0. Applicable for PSoC 4200L /
 535:Generated_Source\PSoC4/CyLib.c **** *                          4100S with PLL.
 536:Generated_Source\PSoC4/CyLib.c **** * CY_SYS_CLK_HFCLK_PLL1    PLL#1. Applicable for PSoC 4200L.
 537:Generated_Source\PSoC4/CyLib.c **** *
 538:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
 539:Generated_Source\PSoC4/CyLib.c **** void CySysClkWriteHfclkDirect(uint32 clkSelect)
 540:Generated_Source\PSoC4/CyLib.c **** {
 966              		.loc 1 540 0
 967              		.cfi_startproc
 968              		@ args = 0, pretend = 0, frame = 16
 969              		@ frame_needed = 1, uses_anonymous_args = 0
 970 0000 90B5     		push	{r4, r7, lr}
 971              		.cfi_def_cfa_offset 12
 972              		.cfi_offset 4, -12
 973              		.cfi_offset 7, -8
 974              		.cfi_offset 14, -4
 975 0002 85B0     		sub	sp, sp, #20
 976              		.cfi_def_cfa_offset 32
 977 0004 00AF     		add	r7, sp, #0
 978              		.cfi_def_cfa_register 7
 979 0006 7860     		str	r0, [r7, #4]
ARM GAS  C:\Users\essele\AppData\Local\Temp\ccaJcTi8.s 			page 28


 541:Generated_Source\PSoC4/CyLib.c ****     uint8  interruptState;
 542:Generated_Source\PSoC4/CyLib.c ****     uint32 tmpReg;
 543:Generated_Source\PSoC4/CyLib.c ****     
 544:Generated_Source\PSoC4/CyLib.c ****     #if (CY_IP_SRSSLT && CY_IP_PLL)
 545:Generated_Source\PSoC4/CyLib.c ****         uint8 i = 0u;
 546:Generated_Source\PSoC4/CyLib.c ****     #endif /* (CY_IP_SRSSLT && CY_IP_PLL) */
 547:Generated_Source\PSoC4/CyLib.c **** 
 548:Generated_Source\PSoC4/CyLib.c ****     interruptState = CyEnterCriticalSection();
 980              		.loc 1 548 0
 981 0008 0B23     		movs	r3, #11
 982 000a FC18     		adds	r4, r7, r3
 983 000c FFF7FEFF 		bl	CyEnterCriticalSection
 984 0010 0300     		movs	r3, r0
 985 0012 2370     		strb	r3, [r4]
 549:Generated_Source\PSoC4/CyLib.c **** 
 550:Generated_Source\PSoC4/CyLib.c **** #if (CY_IP_SRSSLT && CY_IP_PLL)
 551:Generated_Source\PSoC4/CyLib.c ****     if ((CY_SYS_CLK_HFCLK_PLL0 == clkSelect) || (CY_SYS_CLK_HFCLK_ECO == clkSelect))
 552:Generated_Source\PSoC4/CyLib.c ****     {
 553:Generated_Source\PSoC4/CyLib.c ****         tmpReg = CY_SYS_CLK_SELECT_REG & ~CY_SYS_CLK_SELECT_DIRECT_SEL_MASK;
 554:Generated_Source\PSoC4/CyLib.c ****         tmpReg |= CY_SYS_CLK_HFCLK_IMO;
 555:Generated_Source\PSoC4/CyLib.c ****         CY_SYS_CLK_SELECT_REG = tmpReg;        
 556:Generated_Source\PSoC4/CyLib.c ****         
 557:Generated_Source\PSoC4/CyLib.c ****         /* SRSSLT block does not have registers to select PLL. It is part of EXCO */ 
 558:Generated_Source\PSoC4/CyLib.c ****         tmpReg = CY_SYS_ECO_CLK_SELECT_REG & ~CY_SYS_ECO_CLK_SELECT_ECO_PLL_MASK;
 559:Generated_Source\PSoC4/CyLib.c ****         tmpReg |= ((clkSelect & CY_SYS_CLK_SELECT_HFCLK_SEL_PLL_MASK) >> CY_SYS_CLK_SELECT_HFCLK_PL
 560:Generated_Source\PSoC4/CyLib.c ****         CY_SYS_ECO_CLK_SELECT_REG = tmpReg;
 561:Generated_Source\PSoC4/CyLib.c ****         
 562:Generated_Source\PSoC4/CyLib.c ****         /* Generate clock sequence to change clock source in CY_SYS_ECO_CLK_SELECT_REG */
 563:Generated_Source\PSoC4/CyLib.c ****         CY_SYS_EXCO_PGM_CLK_REG |= CY_SYS_EXCO_PGM_CLK_ENABLE_MASK;
 564:Generated_Source\PSoC4/CyLib.c ****         
 565:Generated_Source\PSoC4/CyLib.c ****         for(i = 0u; i < CY_SYS_EXCO_PGM_CLK_SEQ_GENERATOR; i++)
 566:Generated_Source\PSoC4/CyLib.c ****         {
 567:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_EXCO_PGM_CLK_REG |= CY_SYS_EXCO_PGM_CLK_CLK_ECO_MASK;
 568:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_EXCO_PGM_CLK_REG &= ~CY_SYS_EXCO_PGM_CLK_CLK_ECO_MASK;
 569:Generated_Source\PSoC4/CyLib.c ****         }
 570:Generated_Source\PSoC4/CyLib.c ****         
 571:Generated_Source\PSoC4/CyLib.c ****         CY_SYS_EXCO_PGM_CLK_REG &= ~CY_SYS_EXCO_PGM_CLK_ENABLE_MASK;    
 572:Generated_Source\PSoC4/CyLib.c ****     }
 573:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_SRSSLT && CY_IP_PLL) */
 574:Generated_Source\PSoC4/CyLib.c **** 
 575:Generated_Source\PSoC4/CyLib.c ****     tmpReg = CY_SYS_CLK_SELECT_REG & ~(CY_SYS_CLK_SELECT_DIRECT_SEL_MASK |
 986              		.loc 1 575 0
 987 0014 144B     		ldr	r3, .L69
 988 0016 1B68     		ldr	r3, [r3]
 989 0018 144A     		ldr	r2, .L69+4
 990 001a 1340     		ands	r3, r2
 991 001c FB60     		str	r3, [r7, #12]
 576:Generated_Source\PSoC4/CyLib.c ****                                        CY_SYS_CLK_SELECT_HFCLK_SEL_MASK);
 577:Generated_Source\PSoC4/CyLib.c **** 
 578:Generated_Source\PSoC4/CyLib.c **** #if (CY_IP_SRSSV2 && CY_IP_PLL)
 579:Generated_Source\PSoC4/CyLib.c ****     if ((CY_SYS_CLK_HFCLK_PLL0 == clkSelect) || (CY_SYS_CLK_HFCLK_PLL1 == clkSelect))
 992              		.loc 1 579 0
 993 001e 7A68     		ldr	r2, [r7, #4]
 994 0020 8023     		movs	r3, #128
 995 0022 9B02     		lsls	r3, r3, #10
 996 0024 9A42     		cmp	r2, r3
 997 0026 04D0     		beq	.L66
ARM GAS  C:\Users\essele\AppData\Local\Temp\ccaJcTi8.s 			page 29


 998              		.loc 1 579 0 is_stmt 0 discriminator 1
 999 0028 7A68     		ldr	r2, [r7, #4]
 1000 002a 8023     		movs	r3, #128
 1001 002c 5B02     		lsls	r3, r3, #9
 1002 002e 9A42     		cmp	r2, r3
 1003 0030 07D1     		bne	.L67
 1004              	.L66:
 580:Generated_Source\PSoC4/CyLib.c ****     {
 581:Generated_Source\PSoC4/CyLib.c ****         tmpReg |= (clkSelect & CY_SYS_CLK_SELECT_HFCLK_SEL_MASK);
 1005              		.loc 1 581 0 is_stmt 1
 1006 0032 7A68     		ldr	r2, [r7, #4]
 1007 0034 C023     		movs	r3, #192
 1008 0036 9B02     		lsls	r3, r3, #10
 1009 0038 1340     		ands	r3, r2
 1010 003a FA68     		ldr	r2, [r7, #12]
 1011 003c 1343     		orrs	r3, r2
 1012 003e FB60     		str	r3, [r7, #12]
 1013 0040 05E0     		b	.L68
 1014              	.L67:
 582:Generated_Source\PSoC4/CyLib.c ****     }
 583:Generated_Source\PSoC4/CyLib.c ****     else
 584:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_SRSSV2 && CY_IP_PLL) */
 585:Generated_Source\PSoC4/CyLib.c ****     {
 586:Generated_Source\PSoC4/CyLib.c ****         tmpReg |= (clkSelect & CY_SYS_CLK_SELECT_DIRECT_SEL_MASK);
 1015              		.loc 1 586 0
 1016 0042 7B68     		ldr	r3, [r7, #4]
 1017 0044 0722     		movs	r2, #7
 1018 0046 1340     		ands	r3, r2
 1019 0048 FA68     		ldr	r2, [r7, #12]
 1020 004a 1343     		orrs	r3, r2
 1021 004c FB60     		str	r3, [r7, #12]
 1022              	.L68:
 587:Generated_Source\PSoC4/CyLib.c ****     }   
 588:Generated_Source\PSoC4/CyLib.c ****     
 589:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_CLK_SELECT_REG = tmpReg;
 1023              		.loc 1 589 0
 1024 004e 064B     		ldr	r3, .L69
 1025 0050 FA68     		ldr	r2, [r7, #12]
 1026 0052 1A60     		str	r2, [r3]
 590:Generated_Source\PSoC4/CyLib.c ****     
 591:Generated_Source\PSoC4/CyLib.c ****     CyExitCriticalSection(interruptState);
 1027              		.loc 1 591 0
 1028 0054 0B23     		movs	r3, #11
 1029 0056 FB18     		adds	r3, r7, r3
 1030 0058 1B78     		ldrb	r3, [r3]
 1031 005a 1800     		movs	r0, r3
 1032 005c FFF7FEFF 		bl	CyExitCriticalSection
 592:Generated_Source\PSoC4/CyLib.c **** }
 1033              		.loc 1 592 0
 1034 0060 C046     		nop
 1035 0062 BD46     		mov	sp, r7
 1036 0064 05B0     		add	sp, sp, #20
 1037              		@ sp needed
 1038 0066 90BD     		pop	{r4, r7, pc}
 1039              	.L70:
 1040              		.align	2
 1041              	.L69:
ARM GAS  C:\Users\essele\AppData\Local\Temp\ccaJcTi8.s 			page 30


 1042 0068 00010B40 		.word	1074462976
 1043 006c F8FFFCFF 		.word	-196616
 1044              		.cfi_endproc
 1045              	.LFE9:
 1046              		.size	CySysClkWriteHfclkDirect, .-CySysClkWriteHfclkDirect
 1047              		.section	.text.CySysEnablePumpClock,"ax",%progbits
 1048              		.align	2
 1049              		.global	CySysEnablePumpClock
 1050              		.code	16
 1051              		.thumb_func
 1052              		.type	CySysEnablePumpClock, %function
 1053              	CySysEnablePumpClock:
 1054              	.LFB10:
 593:Generated_Source\PSoC4/CyLib.c **** 
 594:Generated_Source\PSoC4/CyLib.c **** 
 595:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
 596:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysEnablePumpClock
 597:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
 598:Generated_Source\PSoC4/CyLib.c **** *
 599:Generated_Source\PSoC4/CyLib.c **** * Enables / disables the pump clock.
 600:Generated_Source\PSoC4/CyLib.c **** *
 601:Generated_Source\PSoC4/CyLib.c **** * \param enable  
 602:Generated_Source\PSoC4/CyLib.c **** * CY_SYS_CLK_PUMP_DISABLE - Disables the pump clock
 603:Generated_Source\PSoC4/CyLib.c **** * CY_SYS_CLK_PUMP_ENABLE - Enables and restores the operating source of 
 604:Generated_Source\PSoC4/CyLib.c **** * the pump clock.
 605:Generated_Source\PSoC4/CyLib.c **** *
 606:Generated_Source\PSoC4/CyLib.c **** * \sideeffect
 607:Generated_Source\PSoC4/CyLib.c **** *  Enabling/disabling the pump clock does not guarantee glitch free operation 
 608:Generated_Source\PSoC4/CyLib.c **** *  when changing the IMO parameters or clock divider settings.
 609:Generated_Source\PSoC4/CyLib.c **** *
 610:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
 611:Generated_Source\PSoC4/CyLib.c **** void CySysEnablePumpClock(uint32 enable)
 612:Generated_Source\PSoC4/CyLib.c **** {
 1055              		.loc 1 612 0
 1056              		.cfi_startproc
 1057              		@ args = 0, pretend = 0, frame = 8
 1058              		@ frame_needed = 1, uses_anonymous_args = 0
 1059 0000 80B5     		push	{r7, lr}
 1060              		.cfi_def_cfa_offset 8
 1061              		.cfi_offset 7, -8
 1062              		.cfi_offset 14, -4
 1063 0002 82B0     		sub	sp, sp, #8
 1064              		.cfi_def_cfa_offset 16
 1065 0004 00AF     		add	r7, sp, #0
 1066              		.cfi_def_cfa_register 7
 1067 0006 7860     		str	r0, [r7, #4]
 613:Generated_Source\PSoC4/CyLib.c ****     #if(CY_IP_SRSSV2)
 614:Generated_Source\PSoC4/CyLib.c ****         if (0u != (CY_SYS_CLK_PUMP_ENABLE & enable))
 1068              		.loc 1 614 0
 1069 0008 7B68     		ldr	r3, [r7, #4]
 1070 000a 0122     		movs	r2, #1
 1071 000c 1340     		ands	r3, r2
 1072 000e 08D0     		beq	.L72
 615:Generated_Source\PSoC4/CyLib.c ****         {
 616:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_CONFIG_REG |= (CySysClkPumpConfig << CY_SYS_CLK_IMO_CONFIG_PUMP_SEL_SHIF
 1073              		.loc 1 616 0
 1074 0010 0C4A     		ldr	r2, .L75
ARM GAS  C:\Users\essele\AppData\Local\Temp\ccaJcTi8.s 			page 31


 1075 0012 0C4B     		ldr	r3, .L75
 1076 0014 1968     		ldr	r1, [r3]
 1077 0016 0C4B     		ldr	r3, .L75+4
 1078 0018 1B68     		ldr	r3, [r3]
 1079 001a 5B06     		lsls	r3, r3, #25
 1080 001c 0B43     		orrs	r3, r1
 1081 001e 1360     		str	r3, [r2]
 617:Generated_Source\PSoC4/CyLib.c ****         }
 618:Generated_Source\PSoC4/CyLib.c ****         else
 619:Generated_Source\PSoC4/CyLib.c ****         {
 620:Generated_Source\PSoC4/CyLib.c ****             CySysClkPumpConfig = (CY_SYS_CLK_IMO_CONFIG_REG >> CY_SYS_CLK_IMO_CONFIG_PUMP_SEL_SHIFT
 621:Generated_Source\PSoC4/CyLib.c ****                                   CY_SYS_CLK_IMO_CONFIG_PUMP_SEL_MASK;
 622:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_CONFIG_REG &= ~(CY_SYS_CLK_IMO_CONFIG_PUMP_SEL_MASK << CY_SYS_CLK_IMO_CO
 623:Generated_Source\PSoC4/CyLib.c ****         }
 624:Generated_Source\PSoC4/CyLib.c ****     #else /* CY_IP_SRSSLT */
 625:Generated_Source\PSoC4/CyLib.c ****         if (0u != (CY_SYS_CLK_PUMP_ENABLE & enable))
 626:Generated_Source\PSoC4/CyLib.c ****         {
 627:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_SELECT_REG |= (CySysClkPumpConfig << CY_SYS_CLK_SELECT_PUMP_SEL_SHIFT);
 628:Generated_Source\PSoC4/CyLib.c ****         }
 629:Generated_Source\PSoC4/CyLib.c ****         else
 630:Generated_Source\PSoC4/CyLib.c ****         {
 631:Generated_Source\PSoC4/CyLib.c ****             CySysClkPumpConfig = (CY_SYS_CLK_SELECT_REG >> CY_SYS_CLK_SELECT_PUMP_SEL_SHIFT) & 
 632:Generated_Source\PSoC4/CyLib.c ****                                   CY_SYS_CLK_SELECT_PUMP_SEL_MASK;
 633:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_SELECT_REG &= ~(CY_SYS_CLK_SELECT_PUMP_SEL_MASK << CY_SYS_CLK_SELECT_PUMP_SE
 634:Generated_Source\PSoC4/CyLib.c ****         }
 635:Generated_Source\PSoC4/CyLib.c ****     #endif  /* (CY_IP_SRSSV2) */
 636:Generated_Source\PSoC4/CyLib.c **** }
 1082              		.loc 1 636 0
 1083 0020 0CE0     		b	.L74
 1084              	.L72:
 620:Generated_Source\PSoC4/CyLib.c ****                                   CY_SYS_CLK_IMO_CONFIG_PUMP_SEL_MASK;
 1085              		.loc 1 620 0
 1086 0022 084B     		ldr	r3, .L75
 1087 0024 1B68     		ldr	r3, [r3]
 1088 0026 5B0E     		lsrs	r3, r3, #25
 1089 0028 0722     		movs	r2, #7
 1090 002a 1A40     		ands	r2, r3
 1091 002c 064B     		ldr	r3, .L75+4
 1092 002e 1A60     		str	r2, [r3]
 622:Generated_Source\PSoC4/CyLib.c ****         }
 1093              		.loc 1 622 0
 1094 0030 044B     		ldr	r3, .L75
 1095 0032 044A     		ldr	r2, .L75
 1096 0034 1268     		ldr	r2, [r2]
 1097 0036 0549     		ldr	r1, .L75+8
 1098 0038 0A40     		ands	r2, r1
 1099 003a 1A60     		str	r2, [r3]
 1100              	.L74:
 1101              		.loc 1 636 0
 1102 003c C046     		nop
 1103 003e BD46     		mov	sp, r7
 1104 0040 02B0     		add	sp, sp, #8
 1105              		@ sp needed
 1106 0042 80BD     		pop	{r7, pc}
 1107              	.L76:
 1108              		.align	2
 1109              	.L75:
ARM GAS  C:\Users\essele\AppData\Local\Temp\ccaJcTi8.s 			page 32


 1110 0044 08010B40 		.word	1074462984
 1111 0048 00000000 		.word	CySysClkPumpConfig
 1112 004c FFFFFFF1 		.word	-234881025
 1113              		.cfi_endproc
 1114              	.LFE10:
 1115              		.size	CySysEnablePumpClock, .-CySysEnablePumpClock
 1116              		.section	.text.CySysClkGetSysclkSource,"ax",%progbits
 1117              		.align	2
 1118              		.global	CySysClkGetSysclkSource
 1119              		.code	16
 1120              		.thumb_func
 1121              		.type	CySysClkGetSysclkSource, %function
 1122              	CySysClkGetSysclkSource:
 1123              	.LFB11:
 637:Generated_Source\PSoC4/CyLib.c **** 
 638:Generated_Source\PSoC4/CyLib.c **** 
 639:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
 640:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysClkGetSysclkSource
 641:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
 642:Generated_Source\PSoC4/CyLib.c **** *
 643:Generated_Source\PSoC4/CyLib.c **** * Returns the source of the System clock.
 644:Generated_Source\PSoC4/CyLib.c **** *
 645:Generated_Source\PSoC4/CyLib.c **** * \return The same as \ref CySysClkWriteHfclkDirect() function parameters.
 646:Generated_Source\PSoC4/CyLib.c **** *
 647:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
 648:Generated_Source\PSoC4/CyLib.c **** uint32 CySysClkGetSysclkSource(void)
 649:Generated_Source\PSoC4/CyLib.c **** {
 1124              		.loc 1 649 0
 1125              		.cfi_startproc
 1126              		@ args = 0, pretend = 0, frame = 8
 1127              		@ frame_needed = 1, uses_anonymous_args = 0
 1128 0000 90B5     		push	{r4, r7, lr}
 1129              		.cfi_def_cfa_offset 12
 1130              		.cfi_offset 4, -12
 1131              		.cfi_offset 7, -8
 1132              		.cfi_offset 14, -4
 1133 0002 83B0     		sub	sp, sp, #12
 1134              		.cfi_def_cfa_offset 24
 1135 0004 00AF     		add	r7, sp, #0
 1136              		.cfi_def_cfa_register 7
 650:Generated_Source\PSoC4/CyLib.c ****     uint8  interruptState;
 651:Generated_Source\PSoC4/CyLib.c ****     uint32 sysclkSource;
 652:Generated_Source\PSoC4/CyLib.c **** 
 653:Generated_Source\PSoC4/CyLib.c ****     interruptState = CyEnterCriticalSection();
 1137              		.loc 1 653 0
 1138 0006 FC1C     		adds	r4, r7, #3
 1139 0008 FFF7FEFF 		bl	CyEnterCriticalSection
 1140 000c 0300     		movs	r3, r0
 1141 000e 2370     		strb	r3, [r4]
 654:Generated_Source\PSoC4/CyLib.c **** 
 655:Generated_Source\PSoC4/CyLib.c **** #if (CY_IP_SRSSV2 && CY_IP_PLL)
 656:Generated_Source\PSoC4/CyLib.c ****     if ((CY_SYS_CLK_SELECT_REG & CY_SYS_CLK_SELECT_HFCLK_SEL_MASK) != 0u)
 1142              		.loc 1 656 0
 1143 0010 0D4B     		ldr	r3, .L81
 1144 0012 1A68     		ldr	r2, [r3]
 1145 0014 C023     		movs	r3, #192
 1146 0016 9B02     		lsls	r3, r3, #10
ARM GAS  C:\Users\essele\AppData\Local\Temp\ccaJcTi8.s 			page 33


 1147 0018 1340     		ands	r3, r2
 1148 001a 06D0     		beq	.L78
 657:Generated_Source\PSoC4/CyLib.c ****     {
 658:Generated_Source\PSoC4/CyLib.c ****         sysclkSource = (CY_SYS_CLK_SELECT_REG & CY_SYS_CLK_SELECT_HFCLK_SEL_MASK);
 1149              		.loc 1 658 0
 1150 001c 0A4B     		ldr	r3, .L81
 1151 001e 1A68     		ldr	r2, [r3]
 1152 0020 C023     		movs	r3, #192
 1153 0022 9B02     		lsls	r3, r3, #10
 1154 0024 1340     		ands	r3, r2
 1155 0026 7B60     		str	r3, [r7, #4]
 1156 0028 04E0     		b	.L79
 1157              	.L78:
 659:Generated_Source\PSoC4/CyLib.c ****     }
 660:Generated_Source\PSoC4/CyLib.c ****     else
 661:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_SRSSV2 && CY_IP_PLL) */
 662:Generated_Source\PSoC4/CyLib.c ****     {
 663:Generated_Source\PSoC4/CyLib.c ****         sysclkSource = (CY_SYS_CLK_SELECT_REG & CY_SYS_CLK_SELECT_DIRECT_SEL_MASK);
 1158              		.loc 1 663 0
 1159 002a 074B     		ldr	r3, .L81
 1160 002c 1B68     		ldr	r3, [r3]
 1161 002e 0722     		movs	r2, #7
 1162 0030 1340     		ands	r3, r2
 1163 0032 7B60     		str	r3, [r7, #4]
 1164              	.L79:
 664:Generated_Source\PSoC4/CyLib.c **** 
 665:Generated_Source\PSoC4/CyLib.c ****     #if (CY_IP_SRSSLT && CY_IP_PLL)
 666:Generated_Source\PSoC4/CyLib.c ****         sysclkSource |= (((uint32)(CY_SYS_ECO_CLK_SELECT_REG & CY_SYS_ECO_CLK_SELECT_ECO_PLL_MASK))
 667:Generated_Source\PSoC4/CyLib.c ****                          CY_SYS_CLK_SELECT_HFCLK_PLL_SHIFT);
 668:Generated_Source\PSoC4/CyLib.c ****     #endif /* (CY_IP_SRSSLT && CY_IP_PLL) */
 669:Generated_Source\PSoC4/CyLib.c ****         
 670:Generated_Source\PSoC4/CyLib.c ****     }
 671:Generated_Source\PSoC4/CyLib.c **** 
 672:Generated_Source\PSoC4/CyLib.c ****     CyExitCriticalSection(interruptState);
 1165              		.loc 1 672 0
 1166 0034 FB1C     		adds	r3, r7, #3
 1167 0036 1B78     		ldrb	r3, [r3]
 1168 0038 1800     		movs	r0, r3
 1169 003a FFF7FEFF 		bl	CyExitCriticalSection
 673:Generated_Source\PSoC4/CyLib.c **** 
 674:Generated_Source\PSoC4/CyLib.c ****     return (sysclkSource);
 1170              		.loc 1 674 0
 1171 003e 7B68     		ldr	r3, [r7, #4]
 675:Generated_Source\PSoC4/CyLib.c **** }
 1172              		.loc 1 675 0
 1173 0040 1800     		movs	r0, r3
 1174 0042 BD46     		mov	sp, r7
 1175 0044 03B0     		add	sp, sp, #12
 1176              		@ sp needed
 1177 0046 90BD     		pop	{r4, r7, pc}
 1178              	.L82:
 1179              		.align	2
 1180              	.L81:
 1181 0048 00010B40 		.word	1074462976
 1182              		.cfi_endproc
 1183              	.LFE11:
 1184              		.size	CySysClkGetSysclkSource, .-CySysClkGetSysclkSource
ARM GAS  C:\Users\essele\AppData\Local\Temp\ccaJcTi8.s 			page 34


 1185              		.section	.text.CySysClkWriteSysclkDiv,"ax",%progbits
 1186              		.align	2
 1187              		.global	CySysClkWriteSysclkDiv
 1188              		.code	16
 1189              		.thumb_func
 1190              		.type	CySysClkWriteSysclkDiv, %function
 1191              	CySysClkWriteSysclkDiv:
 1192              	.LFB12:
 676:Generated_Source\PSoC4/CyLib.c **** 
 677:Generated_Source\PSoC4/CyLib.c **** 
 678:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
 679:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysClkWriteSysclkDiv
 680:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
 681:Generated_Source\PSoC4/CyLib.c **** *
 682:Generated_Source\PSoC4/CyLib.c **** * Selects the prescaler divide amount for SYSCLK from HFCLK.
 683:Generated_Source\PSoC4/CyLib.c **** *
 684:Generated_Source\PSoC4/CyLib.c **** * PSoC 4000: The SYSCLK has the speed of 16 MHz, so HFCLK and SYSCLK dividers
 685:Generated_Source\PSoC4/CyLib.c **** * should be selected in a way, not to exceed 16 MHz for SYSCLK.
 686:Generated_Source\PSoC4/CyLib.c **** *
 687:Generated_Source\PSoC4/CyLib.c **** * PSoC 4100 \ PSoC 4100 BLE \ PSoC 4100M: The SYSCLK has the speed of 24 MHz,
 688:Generated_Source\PSoC4/CyLib.c **** * so HFCLK and SYSCLK dividers should be selected in a way, not to exceed 24 MHz
 689:Generated_Source\PSoC4/CyLib.c **** * for SYSCLK.
 690:Generated_Source\PSoC4/CyLib.c **** *
 691:Generated_Source\PSoC4/CyLib.c **** * If the SYSCLK clock frequency increases during the device operation, call
 692:Generated_Source\PSoC4/CyLib.c **** * \ref CySysFlashSetWaitCycles() with the appropriate parameter to adjust the
 693:Generated_Source\PSoC4/CyLib.c **** * number of clock cycles the cache will wait before sampling data comes back
 694:Generated_Source\PSoC4/CyLib.c **** * from Flash. If the SYSCLK clock frequency decreases, you can call
 695:Generated_Source\PSoC4/CyLib.c **** * \ref CySysFlashSetWaitCycles() to improve the CPU performance. See
 696:Generated_Source\PSoC4/CyLib.c **** * \ref CySysFlashSetWaitCycles() description for more information.
 697:Generated_Source\PSoC4/CyLib.c **** *
 698:Generated_Source\PSoC4/CyLib.c **** * \param divider Power of 2 prescaler selection
 699:Generated_Source\PSoC4/CyLib.c **** *  CY_SYS_CLK_SYSCLK_DIV1        SYSCLK = HFCLK / 1
 700:Generated_Source\PSoC4/CyLib.c **** *  CY_SYS_CLK_SYSCLK_DIV2        SYSCLK = HFCLK / 2
 701:Generated_Source\PSoC4/CyLib.c **** *  CY_SYS_CLK_SYSCLK_DIV4        SYSCLK = HFCLK / 4
 702:Generated_Source\PSoC4/CyLib.c **** *  CY_SYS_CLK_SYSCLK_DIV8        SYSCLK = HFCLK / 8
 703:Generated_Source\PSoC4/CyLib.c **** *  CY_SYS_CLK_SYSCLK_DIV16       SYSCLK = HFCLK / 16  (N/A for 4000 Family)
 704:Generated_Source\PSoC4/CyLib.c **** *  CY_SYS_CLK_SYSCLK_DIV32       SYSCLK = HFCLK / 32  (N/A for 4000 Family)
 705:Generated_Source\PSoC4/CyLib.c **** *  CY_SYS_CLK_SYSCLK_DIV64       SYSCLK = HFCLK / 64  (N/A for 4000 Family)
 706:Generated_Source\PSoC4/CyLib.c **** *  CY_SYS_CLK_SYSCLK_DIV128      SYSCLK = HFCLK / 128 (N/A for 4000 Family)
 707:Generated_Source\PSoC4/CyLib.c **** *
 708:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
 709:Generated_Source\PSoC4/CyLib.c **** void CySysClkWriteSysclkDiv(uint32 divider)
 710:Generated_Source\PSoC4/CyLib.c **** {
 1193              		.loc 1 710 0
 1194              		.cfi_startproc
 1195              		@ args = 0, pretend = 0, frame = 16
 1196              		@ frame_needed = 1, uses_anonymous_args = 0
 1197 0000 90B5     		push	{r4, r7, lr}
 1198              		.cfi_def_cfa_offset 12
 1199              		.cfi_offset 4, -12
 1200              		.cfi_offset 7, -8
 1201              		.cfi_offset 14, -4
 1202 0002 85B0     		sub	sp, sp, #20
 1203              		.cfi_def_cfa_offset 32
 1204 0004 00AF     		add	r7, sp, #0
 1205              		.cfi_def_cfa_register 7
 1206 0006 7860     		str	r0, [r7, #4]
ARM GAS  C:\Users\essele\AppData\Local\Temp\ccaJcTi8.s 			page 35


 711:Generated_Source\PSoC4/CyLib.c ****     uint8  interruptState;
 712:Generated_Source\PSoC4/CyLib.c **** 
 713:Generated_Source\PSoC4/CyLib.c ****     interruptState = CyEnterCriticalSection();
 1207              		.loc 1 713 0
 1208 0008 0F23     		movs	r3, #15
 1209 000a FC18     		adds	r4, r7, r3
 1210 000c FFF7FEFF 		bl	CyEnterCriticalSection
 1211 0010 0300     		movs	r3, r0
 1212 0012 2370     		strb	r3, [r4]
 714:Generated_Source\PSoC4/CyLib.c **** 
 715:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_CLK_SELECT_REG = ((uint32)(((uint32)divider & CY_SYS_CLK_SELECT_SYSCLK_DIV_MASK) <<
 1213              		.loc 1 715 0
 1214 0014 0A4B     		ldr	r3, .L84
 1215 0016 7A68     		ldr	r2, [r7, #4]
 1216 0018 D104     		lsls	r1, r2, #19
 1217 001a E022     		movs	r2, #224
 1218 001c 9203     		lsls	r2, r2, #14
 1219 001e 1140     		ands	r1, r2
 716:Generated_Source\PSoC4/CyLib.c ****                                     CY_SYS_CLK_SELECT_SYSCLK_DIV_SHIFT)) |
 717:Generated_Source\PSoC4/CyLib.c ****                             (CY_SYS_CLK_SELECT_REG & ((uint32)(~(uint32)(CY_SYS_CLK_SELECT_SYSCLK_D
 1220              		.loc 1 717 0
 1221 0020 074A     		ldr	r2, .L84
 1222 0022 1268     		ldr	r2, [r2]
 1223 0024 0748     		ldr	r0, .L84+4
 1224 0026 0240     		ands	r2, r0
 716:Generated_Source\PSoC4/CyLib.c ****                                     CY_SYS_CLK_SELECT_SYSCLK_DIV_SHIFT)) |
 1225              		.loc 1 716 0
 1226 0028 0A43     		orrs	r2, r1
 715:Generated_Source\PSoC4/CyLib.c ****                                     CY_SYS_CLK_SELECT_SYSCLK_DIV_SHIFT)) |
 1227              		.loc 1 715 0
 1228 002a 1A60     		str	r2, [r3]
 718:Generated_Source\PSoC4/CyLib.c ****                                     CY_SYS_CLK_SELECT_SYSCLK_DIV_SHIFT))));
 719:Generated_Source\PSoC4/CyLib.c **** 
 720:Generated_Source\PSoC4/CyLib.c ****     CyExitCriticalSection(interruptState);
 1229              		.loc 1 720 0
 1230 002c 0F23     		movs	r3, #15
 1231 002e FB18     		adds	r3, r7, r3
 1232 0030 1B78     		ldrb	r3, [r3]
 1233 0032 1800     		movs	r0, r3
 1234 0034 FFF7FEFF 		bl	CyExitCriticalSection
 721:Generated_Source\PSoC4/CyLib.c **** }
 1235              		.loc 1 721 0
 1236 0038 C046     		nop
 1237 003a BD46     		mov	sp, r7
 1238 003c 05B0     		add	sp, sp, #20
 1239              		@ sp needed
 1240 003e 90BD     		pop	{r4, r7, pc}
 1241              	.L85:
 1242              		.align	2
 1243              	.L84:
 1244 0040 00010B40 		.word	1074462976
 1245 0044 FFFFC7FF 		.word	-3670017
 1246              		.cfi_endproc
 1247              	.LFE12:
 1248              		.size	CySysClkWriteSysclkDiv, .-CySysClkWriteSysclkDiv
 1249              		.section	.text.CySysClkWriteImoFreq,"ax",%progbits
 1250              		.align	2
ARM GAS  C:\Users\essele\AppData\Local\Temp\ccaJcTi8.s 			page 36


 1251              		.global	CySysClkWriteImoFreq
 1252              		.code	16
 1253              		.thumb_func
 1254              		.type	CySysClkWriteImoFreq, %function
 1255              	CySysClkWriteImoFreq:
 1256              	.LFB13:
 722:Generated_Source\PSoC4/CyLib.c **** 
 723:Generated_Source\PSoC4/CyLib.c **** 
 724:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
 725:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysClkWriteImoFreq
 726:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
 727:Generated_Source\PSoC4/CyLib.c **** *
 728:Generated_Source\PSoC4/CyLib.c **** * Sets the frequency of the IMO.
 729:Generated_Source\PSoC4/CyLib.c **** *
 730:Generated_Source\PSoC4/CyLib.c **** * PSoC 4000: The SYSCLK has the speed of 16 MHz, so HFCLK and SYSCLK dividers
 731:Generated_Source\PSoC4/CyLib.c **** * should be selected in a way, not to exceed 16 MHz for SYSCLK.
 732:Generated_Source\PSoC4/CyLib.c **** *
 733:Generated_Source\PSoC4/CyLib.c **** * PSoC 4100 \ PSoC 4100 BLE \ PSoC 4100M: The SYSCLK has the speed of 24 MHz,
 734:Generated_Source\PSoC4/CyLib.c **** * so HFCLK and SYSCLK dividers should be selected in a way, not to exceed 24 MHz
 735:Generated_Source\PSoC4/CyLib.c **** * for SYSCLK.
 736:Generated_Source\PSoC4/CyLib.c **** *
 737:Generated_Source\PSoC4/CyLib.c **** * For PSoC 4200M and PSoC 4200L device families, if WCO lock feature is enabled
 738:Generated_Source\PSoC4/CyLib.c **** * then this API will disable the lock, write the new IMO frequency and then
 739:Generated_Source\PSoC4/CyLib.c **** * re-enable the lock.
 740:Generated_Source\PSoC4/CyLib.c **** *
 741:Generated_Source\PSoC4/CyLib.c **** * For PSoC 4200L device families, this function enables the USB lock when 24 or
 742:Generated_Source\PSoC4/CyLib.c **** * 48 MHz passed as a parameter if the USB lock option is enabled in Design Wide
 743:Generated_Source\PSoC4/CyLib.c **** * Resources tab or CySysClkImoEnableUsbLock() was called before. Note the USB
 744:Generated_Source\PSoC4/CyLib.c **** * lock is disabled during IMO frequency change.
 745:Generated_Source\PSoC4/CyLib.c **** *
 746:Generated_Source\PSoC4/CyLib.c **** * The CPU is halted if new frequency is invalid and project is compiled
 747:Generated_Source\PSoC4/CyLib.c **** * in debug mode.
 748:Generated_Source\PSoC4/CyLib.c **** *
 749:Generated_Source\PSoC4/CyLib.c **** * If the SYSCLK clock frequency increases during the device operation, call
 750:Generated_Source\PSoC4/CyLib.c **** * \ref CySysFlashSetWaitCycles() with the appropriate parameter to adjust the
 751:Generated_Source\PSoC4/CyLib.c **** * number of clock cycles the cache will wait before sampling data comes back
 752:Generated_Source\PSoC4/CyLib.c **** * from Flash. If the SYSCLK clock frequency decreases, you can call
 753:Generated_Source\PSoC4/CyLib.c **** * \ref CySysFlashSetWaitCycles() to improve the CPU performance. See
 754:Generated_Source\PSoC4/CyLib.c **** * \ref CySysFlashSetWaitCycles() description for more information.
 755:Generated_Source\PSoC4/CyLib.c **** *
 756:Generated_Source\PSoC4/CyLib.c **** * PSoC 4000: The System Clock (SYSCLK) has maximum speed of 16 MHz, so HFCLK
 757:Generated_Source\PSoC4/CyLib.c **** * and SYSCLK dividers should be selected in a way, to not to exceed 16 MHz for
 758:Generated_Source\PSoC4/CyLib.c **** * the System clock.
 759:Generated_Source\PSoC4/CyLib.c **** *
 760:Generated_Source\PSoC4/CyLib.c **** * \param freq All PSoC 4 families excluding the following: Valid range [3-48]
 761:Generated_Source\PSoC4/CyLib.c **** * with step size equals 1. PSoC 4000: Valid values are 24, 32, and 48.
 762:Generated_Source\PSoC4/CyLib.c **** * PSoC 4000S / PSoC 4100S / PSoC Analog Coprocessor: Valid range [24-48] with 
 763:Generated_Source\PSoC4/CyLib.c **** * step size equals 4.
 764:Generated_Source\PSoC4/CyLib.c **** *
 765:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
 766:Generated_Source\PSoC4/CyLib.c **** #if(CY_IP_SRSSV2)
 767:Generated_Source\PSoC4/CyLib.c ****     void CySysClkWriteImoFreq(uint32 freq)
 768:Generated_Source\PSoC4/CyLib.c ****     {
 1257              		.loc 1 768 0
 1258              		.cfi_startproc
 1259              		@ args = 0, pretend = 0, frame = 24
 1260              		@ frame_needed = 1, uses_anonymous_args = 0
ARM GAS  C:\Users\essele\AppData\Local\Temp\ccaJcTi8.s 			page 37


 1261 0000 90B5     		push	{r4, r7, lr}
 1262              		.cfi_def_cfa_offset 12
 1263              		.cfi_offset 4, -12
 1264              		.cfi_offset 7, -8
 1265              		.cfi_offset 14, -4
 1266 0002 87B0     		sub	sp, sp, #28
 1267              		.cfi_def_cfa_offset 40
 1268 0004 00AF     		add	r7, sp, #0
 1269              		.cfi_def_cfa_register 7
 1270 0006 7860     		str	r0, [r7, #4]
 769:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_FMLT)
 770:Generated_Source\PSoC4/CyLib.c ****             volatile uint32   parameters[2u];
 771:Generated_Source\PSoC4/CyLib.c ****             volatile uint32   regValues[4u];
 772:Generated_Source\PSoC4/CyLib.c ****         #else
 773:Generated_Source\PSoC4/CyLib.c ****             uint8  bgTrim4;
 774:Generated_Source\PSoC4/CyLib.c ****             uint8  bgTrim5;
 775:Generated_Source\PSoC4/CyLib.c ****             uint8  newImoTrim2Value;
 776:Generated_Source\PSoC4/CyLib.c ****             uint8  currentImoTrim2Value;
 777:Generated_Source\PSoC4/CyLib.c ****         #endif /* (CY_IP_FM) */
 778:Generated_Source\PSoC4/CyLib.c **** 
 779:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
 780:Generated_Source\PSoC4/CyLib.c ****             uint32 wcoLock = 0u;
 1271              		.loc 1 780 0
 1272 0008 0023     		movs	r3, #0
 1273 000a 3B61     		str	r3, [r7, #16]
 781:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */
 782:Generated_Source\PSoC4/CyLib.c **** 
 783:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_IMO_TRIMMABLE_BY_USB)
 784:Generated_Source\PSoC4/CyLib.c ****             uint32 usbLock = 0u;
 1274              		.loc 1 784 0
 1275 000c 0023     		movs	r3, #0
 1276 000e FB60     		str	r3, [r7, #12]
 785:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_IMO_TRIMMABLE_BY_USB) */
 786:Generated_Source\PSoC4/CyLib.c **** 
 787:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
 788:Generated_Source\PSoC4/CyLib.c **** 
 789:Generated_Source\PSoC4/CyLib.c **** 
 790:Generated_Source\PSoC4/CyLib.c ****         interruptState = CyEnterCriticalSection();
 1277              		.loc 1 790 0
 1278 0010 0B23     		movs	r3, #11
 1279 0012 FC18     		adds	r4, r7, r3
 1280 0014 FFF7FEFF 		bl	CyEnterCriticalSection
 1281 0018 0300     		movs	r3, r0
 1282 001a 2370     		strb	r3, [r4]
 791:Generated_Source\PSoC4/CyLib.c **** 
 792:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
 793:Generated_Source\PSoC4/CyLib.c ****             if(0u != CySysClkImoGetWcoLock())
 1283              		.loc 1 793 0
 1284 001c FFF7FEFF 		bl	CySysClkImoGetWcoLock
 1285 0020 031E     		subs	r3, r0, #0
 1286 0022 03D0     		beq	.L87
 794:Generated_Source\PSoC4/CyLib.c ****             {
 795:Generated_Source\PSoC4/CyLib.c ****                 wcoLock = 1u;
 1287              		.loc 1 795 0
 1288 0024 0123     		movs	r3, #1
 1289 0026 3B61     		str	r3, [r7, #16]
 796:Generated_Source\PSoC4/CyLib.c ****                 CySysClkImoDisableWcoLock();
ARM GAS  C:\Users\essele\AppData\Local\Temp\ccaJcTi8.s 			page 38


 1290              		.loc 1 796 0
 1291 0028 FFF7FEFF 		bl	CySysClkImoDisableWcoLock
 1292              	.L87:
 797:Generated_Source\PSoC4/CyLib.c ****             }
 798:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */
 799:Generated_Source\PSoC4/CyLib.c **** 
 800:Generated_Source\PSoC4/CyLib.c **** 
 801:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_IMO_TRIMMABLE_BY_USB)
 802:Generated_Source\PSoC4/CyLib.c **** 
 803:Generated_Source\PSoC4/CyLib.c ****             #if (CYDEV_IMO_TRIMMED_BY_USB == 0u)
 804:Generated_Source\PSoC4/CyLib.c ****                 if(0u != CySysClkImoGetUsbLock())
 805:Generated_Source\PSoC4/CyLib.c ****                 {
 806:Generated_Source\PSoC4/CyLib.c ****             #endif  /* (CYDEV_IMO_TRIMMED_BY_USB == 0u) */
 807:Generated_Source\PSoC4/CyLib.c **** 
 808:Generated_Source\PSoC4/CyLib.c ****                 if ((24u == freq) || (48u == freq))
 1293              		.loc 1 808 0
 1294 002c 7B68     		ldr	r3, [r7, #4]
 1295 002e 182B     		cmp	r3, #24
 1296 0030 02D0     		beq	.L88
 1297              		.loc 1 808 0 is_stmt 0 discriminator 1
 1298 0032 7B68     		ldr	r3, [r7, #4]
 1299 0034 302B     		cmp	r3, #48
 1300 0036 03D1     		bne	.L89
 1301              	.L88:
 809:Generated_Source\PSoC4/CyLib.c ****                 {
 810:Generated_Source\PSoC4/CyLib.c ****                     usbLock = 1u;
 1302              		.loc 1 810 0 is_stmt 1
 1303 0038 0123     		movs	r3, #1
 1304 003a FB60     		str	r3, [r7, #12]
 811:Generated_Source\PSoC4/CyLib.c ****                     CySysClkImoDisableUsbLock();
 1305              		.loc 1 811 0
 1306 003c FFF7FEFF 		bl	CySysClkImoDisableUsbLock
 1307              	.L89:
 812:Generated_Source\PSoC4/CyLib.c ****                 }
 813:Generated_Source\PSoC4/CyLib.c **** 
 814:Generated_Source\PSoC4/CyLib.c ****             #if (CYDEV_IMO_TRIMMED_BY_USB == 0u)
 815:Generated_Source\PSoC4/CyLib.c ****                 }
 816:Generated_Source\PSoC4/CyLib.c ****             #endif  /* (CYDEV_IMO_TRIMMED_BY_USB == 0u) */
 817:Generated_Source\PSoC4/CyLib.c **** 
 818:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CYDEV_IMO_TRIMMED_BY_USB == 0u) */
 819:Generated_Source\PSoC4/CyLib.c **** 
 820:Generated_Source\PSoC4/CyLib.c **** 
 821:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_FMLT)
 822:Generated_Source\PSoC4/CyLib.c **** 
 823:Generated_Source\PSoC4/CyLib.c ****             /* FM-Lite Clock Restore */
 824:Generated_Source\PSoC4/CyLib.c ****             regValues[0u] = CY_SYS_CLK_IMO_CONFIG_REG;
 825:Generated_Source\PSoC4/CyLib.c ****             regValues[1u] = CY_SYS_CLK_SELECT_REG;
 826:Generated_Source\PSoC4/CyLib.c ****             regValues[2u] = cyImoFreqMhz2Reg[freq - CY_SYS_CLK_IMO_FREQ_TABLE_OFFSET];
 827:Generated_Source\PSoC4/CyLib.c ****             regValues[3u] = CY_FLASH_CTL_REG;
 828:Generated_Source\PSoC4/CyLib.c **** 
 829:Generated_Source\PSoC4/CyLib.c ****             parameters[0u] =
 830:Generated_Source\PSoC4/CyLib.c ****                 (uint32) ((CY_FLASH_KEY_TWO(CY_FLASH_API_OPCODE_CLK_RESTORE) <<  CY_FLASH_PARAM_KEY
 831:Generated_Source\PSoC4/CyLib.c ****                             CY_FLASH_KEY_ONE);
 832:Generated_Source\PSoC4/CyLib.c ****             parameters[1u] = (uint32) &regValues[0u];
 833:Generated_Source\PSoC4/CyLib.c **** 
 834:Generated_Source\PSoC4/CyLib.c ****             CY_FLASH_CPUSS_SYSARG_REG = (uint32) &parameters[0u];
 835:Generated_Source\PSoC4/CyLib.c ****             CY_FLASH_CPUSS_SYSREQ_REG = CY_FLASH_CPUSS_REQ_START | CY_FLASH_API_OPCODE_CLK_RESTORE;
ARM GAS  C:\Users\essele\AppData\Local\Temp\ccaJcTi8.s 			page 39


 836:Generated_Source\PSoC4/CyLib.c ****             (void) CY_FLASH_CPUSS_SYSARG_REG;
 837:Generated_Source\PSoC4/CyLib.c **** 
 838:Generated_Source\PSoC4/CyLib.c ****         #else /* (CY_IP_FM) */
 839:Generated_Source\PSoC4/CyLib.c **** 
 840:Generated_Source\PSoC4/CyLib.c ****         if ((freq >= CY_SYS_CLK_IMO_MIN_FREQ_MHZ) && (freq <= CY_SYS_CLK_IMO_MAX_FREQ_MHZ))
 1308              		.loc 1 840 0
 1309 0040 7B68     		ldr	r3, [r7, #4]
 1310 0042 022B     		cmp	r3, #2
 1311 0044 00D8     		bhi	.LCB1048
 1312 0046 AFE0     		b	.L90	@long jump
 1313              	.LCB1048:
 1314              		.loc 1 840 0 is_stmt 0 discriminator 1
 1315 0048 7B68     		ldr	r3, [r7, #4]
 1316 004a 302B     		cmp	r3, #48
 1317 004c 00D9     		bls	.LCB1051
 1318 004e ABE0     		b	.L90	@long jump
 1319              	.LCB1051:
 841:Generated_Source\PSoC4/CyLib.c ****         {
 842:Generated_Source\PSoC4/CyLib.c ****             if(freq <= CY_SFLASH_IMO_MAXF0_REG)
 1320              		.loc 1 842 0 is_stmt 1
 1321 0050 614B     		ldr	r3, .L103
 1322 0052 1B78     		ldrb	r3, [r3]
 1323 0054 DBB2     		uxtb	r3, r3
 1324 0056 1A00     		movs	r2, r3
 1325 0058 7B68     		ldr	r3, [r7, #4]
 1326 005a 9A42     		cmp	r2, r3
 1327 005c 0AD3     		bcc	.L91
 843:Generated_Source\PSoC4/CyLib.c ****             {
 844:Generated_Source\PSoC4/CyLib.c ****                 bgTrim4 = CY_SFLASH_IMO_ABS0_REG;
 1328              		.loc 1 844 0
 1329 005e 5F4A     		ldr	r2, .L103+4
 1330 0060 1723     		movs	r3, #23
 1331 0062 FB18     		adds	r3, r7, r3
 1332 0064 1278     		ldrb	r2, [r2]
 1333 0066 1A70     		strb	r2, [r3]
 845:Generated_Source\PSoC4/CyLib.c ****                 bgTrim5 = CY_SFLASH_IMO_TMPCO0_REG;
 1334              		.loc 1 845 0
 1335 0068 5D4A     		ldr	r2, .L103+8
 1336 006a 1623     		movs	r3, #22
 1337 006c FB18     		adds	r3, r7, r3
 1338 006e 1278     		ldrb	r2, [r2]
 1339 0070 1A70     		strb	r2, [r3]
 1340 0072 3FE0     		b	.L92
 1341              	.L91:
 846:Generated_Source\PSoC4/CyLib.c ****             }
 847:Generated_Source\PSoC4/CyLib.c ****             else if(freq <= CY_SFLASH_IMO_MAXF1_REG)
 1342              		.loc 1 847 0
 1343 0074 5B4B     		ldr	r3, .L103+12
 1344 0076 1B78     		ldrb	r3, [r3]
 1345 0078 DBB2     		uxtb	r3, r3
 1346 007a 1A00     		movs	r2, r3
 1347 007c 7B68     		ldr	r3, [r7, #4]
 1348 007e 9A42     		cmp	r2, r3
 1349 0080 0AD3     		bcc	.L93
 848:Generated_Source\PSoC4/CyLib.c ****             {
 849:Generated_Source\PSoC4/CyLib.c ****                 bgTrim4 = CY_SFLASH_IMO_ABS1_REG;
 1350              		.loc 1 849 0
ARM GAS  C:\Users\essele\AppData\Local\Temp\ccaJcTi8.s 			page 40


 1351 0082 594A     		ldr	r2, .L103+16
 1352 0084 1723     		movs	r3, #23
 1353 0086 FB18     		adds	r3, r7, r3
 1354 0088 1278     		ldrb	r2, [r2]
 1355 008a 1A70     		strb	r2, [r3]
 850:Generated_Source\PSoC4/CyLib.c ****                 bgTrim5 = CY_SFLASH_IMO_TMPCO1_REG;
 1356              		.loc 1 850 0
 1357 008c 574A     		ldr	r2, .L103+20
 1358 008e 1623     		movs	r3, #22
 1359 0090 FB18     		adds	r3, r7, r3
 1360 0092 1278     		ldrb	r2, [r2]
 1361 0094 1A70     		strb	r2, [r3]
 1362 0096 2DE0     		b	.L92
 1363              	.L93:
 851:Generated_Source\PSoC4/CyLib.c ****             }
 852:Generated_Source\PSoC4/CyLib.c ****             else if(freq <= CY_SFLASH_IMO_MAXF2_REG)
 1364              		.loc 1 852 0
 1365 0098 554B     		ldr	r3, .L103+24
 1366 009a 1B78     		ldrb	r3, [r3]
 1367 009c DBB2     		uxtb	r3, r3
 1368 009e 1A00     		movs	r2, r3
 1369 00a0 7B68     		ldr	r3, [r7, #4]
 1370 00a2 9A42     		cmp	r2, r3
 1371 00a4 0AD3     		bcc	.L94
 853:Generated_Source\PSoC4/CyLib.c ****             {
 854:Generated_Source\PSoC4/CyLib.c ****                 bgTrim4 = CY_SFLASH_IMO_ABS2_REG;
 1372              		.loc 1 854 0
 1373 00a6 534A     		ldr	r2, .L103+28
 1374 00a8 1723     		movs	r3, #23
 1375 00aa FB18     		adds	r3, r7, r3
 1376 00ac 1278     		ldrb	r2, [r2]
 1377 00ae 1A70     		strb	r2, [r3]
 855:Generated_Source\PSoC4/CyLib.c ****                 bgTrim5 = CY_SFLASH_IMO_TMPCO2_REG;
 1378              		.loc 1 855 0
 1379 00b0 514A     		ldr	r2, .L103+32
 1380 00b2 1623     		movs	r3, #22
 1381 00b4 FB18     		adds	r3, r7, r3
 1382 00b6 1278     		ldrb	r2, [r2]
 1383 00b8 1A70     		strb	r2, [r3]
 1384 00ba 1BE0     		b	.L92
 1385              	.L94:
 856:Generated_Source\PSoC4/CyLib.c ****             }
 857:Generated_Source\PSoC4/CyLib.c ****             else if(freq <= CY_SFLASH_IMO_MAXF3_REG)
 1386              		.loc 1 857 0
 1387 00bc 4F4B     		ldr	r3, .L103+36
 1388 00be 1B78     		ldrb	r3, [r3]
 1389 00c0 DBB2     		uxtb	r3, r3
 1390 00c2 1A00     		movs	r2, r3
 1391 00c4 7B68     		ldr	r3, [r7, #4]
 1392 00c6 9A42     		cmp	r2, r3
 1393 00c8 0AD3     		bcc	.L95
 858:Generated_Source\PSoC4/CyLib.c ****             {
 859:Generated_Source\PSoC4/CyLib.c ****                 bgTrim4 = CY_SFLASH_IMO_ABS3_REG;
 1394              		.loc 1 859 0
 1395 00ca 4D4A     		ldr	r2, .L103+40
 1396 00cc 1723     		movs	r3, #23
 1397 00ce FB18     		adds	r3, r7, r3
ARM GAS  C:\Users\essele\AppData\Local\Temp\ccaJcTi8.s 			page 41


 1398 00d0 1278     		ldrb	r2, [r2]
 1399 00d2 1A70     		strb	r2, [r3]
 860:Generated_Source\PSoC4/CyLib.c ****                 bgTrim5 = CY_SFLASH_IMO_TMPCO3_REG;
 1400              		.loc 1 860 0
 1401 00d4 4B4A     		ldr	r2, .L103+44
 1402 00d6 1623     		movs	r3, #22
 1403 00d8 FB18     		adds	r3, r7, r3
 1404 00da 1278     		ldrb	r2, [r2]
 1405 00dc 1A70     		strb	r2, [r3]
 1406 00de 09E0     		b	.L92
 1407              	.L95:
 861:Generated_Source\PSoC4/CyLib.c ****             }
 862:Generated_Source\PSoC4/CyLib.c ****             else
 863:Generated_Source\PSoC4/CyLib.c ****             {
 864:Generated_Source\PSoC4/CyLib.c ****                 bgTrim4 = CY_SFLASH_IMO_ABS4_REG;
 1408              		.loc 1 864 0
 1409 00e0 494A     		ldr	r2, .L103+48
 1410 00e2 1723     		movs	r3, #23
 1411 00e4 FB18     		adds	r3, r7, r3
 1412 00e6 1278     		ldrb	r2, [r2]
 1413 00e8 1A70     		strb	r2, [r3]
 865:Generated_Source\PSoC4/CyLib.c ****                 bgTrim5 = CY_SFLASH_IMO_TMPCO4_REG;
 1414              		.loc 1 865 0
 1415 00ea 484A     		ldr	r2, .L103+52
 1416 00ec 1623     		movs	r3, #22
 1417 00ee FB18     		adds	r3, r7, r3
 1418 00f0 1278     		ldrb	r2, [r2]
 1419 00f2 1A70     		strb	r2, [r3]
 1420              	.L92:
 866:Generated_Source\PSoC4/CyLib.c ****             }
 867:Generated_Source\PSoC4/CyLib.c **** 
 868:Generated_Source\PSoC4/CyLib.c ****             /* Get IMO_TRIM2 value for the new frequency */
 869:Generated_Source\PSoC4/CyLib.c ****             newImoTrim2Value = cyImoFreqMhz2Reg[freq - CY_SYS_CLK_IMO_FREQ_TABLE_OFFSET];
 1421              		.loc 1 869 0
 1422 00f4 7B68     		ldr	r3, [r7, #4]
 1423 00f6 DA1E     		subs	r2, r3, #3
 1424 00f8 0A23     		movs	r3, #10
 1425 00fa FB18     		adds	r3, r7, r3
 1426 00fc 4449     		ldr	r1, .L103+56
 1427 00fe 8A5C     		ldrb	r2, [r1, r2]
 1428 0100 1A70     		strb	r2, [r3]
 870:Generated_Source\PSoC4/CyLib.c **** 
 871:Generated_Source\PSoC4/CyLib.c **** 
 872:Generated_Source\PSoC4/CyLib.c ****             /****************************************************************************
 873:Generated_Source\PSoC4/CyLib.c ****             * The IMO can have a different trim per frequency. To avoid possible corner
 874:Generated_Source\PSoC4/CyLib.c ****             * cases where a trim change can exceed the maximum frequency, the trim must
 875:Generated_Source\PSoC4/CyLib.c ****             * be applied at a frequency that is low enough.
 876:Generated_Source\PSoC4/CyLib.c ****             *
 877:Generated_Source\PSoC4/CyLib.c ****             * Comparing IMO_TRIM2 values for the current and new frequencies, since
 878:Generated_Source\PSoC4/CyLib.c ****             * IMO_TRIM2 value as a function of IMO frequency is a strictly increasing
 879:Generated_Source\PSoC4/CyLib.c ****             * function and is time-invariant.
 880:Generated_Source\PSoC4/CyLib.c ****             ***************************************************************************/
 881:Generated_Source\PSoC4/CyLib.c ****             if ((newImoTrim2Value >= CY_SYS_CLK_IMO_BOUNDARY_FREQ_TRIM2) && (freq >= CY_SYS_CLK_IMO
 1429              		.loc 1 881 0
 1430 0102 0A23     		movs	r3, #10
 1431 0104 FB18     		adds	r3, r7, r3
 1432 0106 1B78     		ldrb	r3, [r3]
ARM GAS  C:\Users\essele\AppData\Local\Temp\ccaJcTi8.s 			page 42


 1433 0108 2F2B     		cmp	r3, #47
 1434 010a 0DD9     		bls	.L96
 1435              		.loc 1 881 0 is_stmt 0 discriminator 1
 1436 010c 7B68     		ldr	r3, [r7, #4]
 1437 010e 2A2B     		cmp	r3, #42
 1438 0110 0AD9     		bls	.L96
 882:Generated_Source\PSoC4/CyLib.c ****             {
 883:Generated_Source\PSoC4/CyLib.c ****                 /* Set boundary IMO frequency: safe for IMO above 48 MHZ trimming */
 884:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_IMO_TRIM2_REG = (uint32) cyImoFreqMhz2Reg[CY_SYS_CLK_IMO_TEMP_FREQ_MHZ -
 1439              		.loc 1 884 0 is_stmt 1
 1440 0112 404B     		ldr	r3, .L103+60
 1441 0114 1922     		movs	r2, #25
 1442 0116 1A60     		str	r2, [r3]
 885:Generated_Source\PSoC4/CyLib.c ****                                                                      CY_SYS_CLK_IMO_FREQ_TABLE_OFFS
 886:Generated_Source\PSoC4/CyLib.c **** 
 887:Generated_Source\PSoC4/CyLib.c ****                 CyDelayCycles(CY_SYS_CLK_IMO_FREQ_TIMEOUT_CYCLES);
 1443              		.loc 1 887 0
 1444 0118 0520     		movs	r0, #5
 1445 011a FFF7FEFF 		bl	CyDelayCycles
 888:Generated_Source\PSoC4/CyLib.c **** 
 889:Generated_Source\PSoC4/CyLib.c ****                 currentImoTrim2Value = CY_SYS_CLK_IMO_TEMP_FREQ_TRIM2;
 1446              		.loc 1 889 0
 1447 011e 1523     		movs	r3, #21
 1448 0120 FB18     		adds	r3, r7, r3
 1449 0122 1922     		movs	r2, #25
 1450 0124 1A70     		strb	r2, [r3]
 1451 0126 07E0     		b	.L97
 1452              	.L96:
 890:Generated_Source\PSoC4/CyLib.c ****             }
 891:Generated_Source\PSoC4/CyLib.c ****             else
 892:Generated_Source\PSoC4/CyLib.c ****             {
 893:Generated_Source\PSoC4/CyLib.c ****                 currentImoTrim2Value = (uint8) (CY_SYS_CLK_IMO_TRIM2_REG & CY_SYS_CLK_IMO_FREQ_BITS
 1453              		.loc 1 893 0
 1454 0128 3A4B     		ldr	r3, .L103+60
 1455 012a 1B68     		ldr	r3, [r3]
 1456 012c DAB2     		uxtb	r2, r3
 1457 012e 1523     		movs	r3, #21
 1458 0130 FB18     		adds	r3, r7, r3
 1459 0132 3F21     		movs	r1, #63
 1460 0134 0A40     		ands	r2, r1
 1461 0136 1A70     		strb	r2, [r3]
 1462              	.L97:
 894:Generated_Source\PSoC4/CyLib.c ****             }
 895:Generated_Source\PSoC4/CyLib.c **** 
 896:Generated_Source\PSoC4/CyLib.c **** 
 897:Generated_Source\PSoC4/CyLib.c ****             /***************************************************************************
 898:Generated_Source\PSoC4/CyLib.c ****             * A trim change needs to be allowed to settle (within 5us) before the Freq
 899:Generated_Source\PSoC4/CyLib.c ****             * can be changed to a new frequency.
 900:Generated_Source\PSoC4/CyLib.c ****             *
 901:Generated_Source\PSoC4/CyLib.c ****             * Comparing IMO_TRIM2 values for the current and new frequencies, since
 902:Generated_Source\PSoC4/CyLib.c ****             * IMO_TRIM2 value as a function of IMO frequency is a strictly increasing
 903:Generated_Source\PSoC4/CyLib.c ****             * function and is time-invariant.
 904:Generated_Source\PSoC4/CyLib.c ****             ***************************************************************************/
 905:Generated_Source\PSoC4/CyLib.c ****             if (newImoTrim2Value < currentImoTrim2Value)
 1463              		.loc 1 905 0
 1464 0138 0A23     		movs	r3, #10
 1465 013a FA18     		adds	r2, r7, r3
ARM GAS  C:\Users\essele\AppData\Local\Temp\ccaJcTi8.s 			page 43


 1466 013c 1523     		movs	r3, #21
 1467 013e FB18     		adds	r3, r7, r3
 1468 0140 1278     		ldrb	r2, [r2]
 1469 0142 1B78     		ldrb	r3, [r3]
 1470 0144 9A42     		cmp	r2, r3
 1471 0146 08D2     		bcs	.L98
 906:Generated_Source\PSoC4/CyLib.c ****             {
 907:Generated_Source\PSoC4/CyLib.c ****                 /* Set new IMO frequency */
 908:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_IMO_TRIM2_REG = cyImoFreqMhz2Reg[freq - CY_SYS_CLK_IMO_FREQ_TABLE_OFFSET
 1472              		.loc 1 908 0
 1473 0148 324B     		ldr	r3, .L103+60
 1474 014a 7A68     		ldr	r2, [r7, #4]
 1475 014c 033A     		subs	r2, r2, #3
 1476 014e 3049     		ldr	r1, .L103+56
 1477 0150 8A5C     		ldrb	r2, [r1, r2]
 1478 0152 1A60     		str	r2, [r3]
 909:Generated_Source\PSoC4/CyLib.c ****                 CyDelayCycles(CY_SYS_CLK_IMO_FREQ_TIMEOUT_CYCLES);
 1479              		.loc 1 909 0
 1480 0154 0520     		movs	r0, #5
 1481 0156 FFF7FEFF 		bl	CyDelayCycles
 1482              	.L98:
 910:Generated_Source\PSoC4/CyLib.c ****             }
 911:Generated_Source\PSoC4/CyLib.c **** 
 912:Generated_Source\PSoC4/CyLib.c ****             /* Set trims for the new IMO frequency */
 913:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_TRIM1_REG = (uint32) CY_SFLASH_IMO_TRIM_REG(freq - CY_SYS_CLK_IMO_FREQ_T
 1483              		.loc 1 913 0
 1484 015a 2F4B     		ldr	r3, .L103+64
 1485 015c 7A68     		ldr	r2, [r7, #4]
 1486 015e 2B49     		ldr	r1, .L103+52
 1487 0160 8C46     		mov	ip, r1
 1488 0162 6244     		add	r2, r2, ip
 1489 0164 1278     		ldrb	r2, [r2]
 1490 0166 D2B2     		uxtb	r2, r2
 1491 0168 1A60     		str	r2, [r3]
 914:Generated_Source\PSoC4/CyLib.c ****             CY_PWR_BG_TRIM4_REG  = bgTrim4;
 1492              		.loc 1 914 0
 1493 016a 2C4B     		ldr	r3, .L103+68
 1494 016c 1722     		movs	r2, #23
 1495 016e BA18     		adds	r2, r7, r2
 1496 0170 1278     		ldrb	r2, [r2]
 1497 0172 1A60     		str	r2, [r3]
 915:Generated_Source\PSoC4/CyLib.c ****             CY_PWR_BG_TRIM5_REG  = bgTrim5;
 1498              		.loc 1 915 0
 1499 0174 2A4B     		ldr	r3, .L103+72
 1500 0176 1622     		movs	r2, #22
 1501 0178 BA18     		adds	r2, r7, r2
 1502 017a 1278     		ldrb	r2, [r2]
 1503 017c 1A60     		str	r2, [r3]
 916:Generated_Source\PSoC4/CyLib.c ****             CyDelayUs(CY_SYS_CLK_IMO_TRIM_TIMEOUT_US);
 1504              		.loc 1 916 0
 1505 017e 0520     		movs	r0, #5
 1506 0180 FFF7FEFF 		bl	CyDelayUs
 917:Generated_Source\PSoC4/CyLib.c **** 
 918:Generated_Source\PSoC4/CyLib.c ****             if (newImoTrim2Value > currentImoTrim2Value)
 1507              		.loc 1 918 0
 1508 0184 0A23     		movs	r3, #10
 1509 0186 FA18     		adds	r2, r7, r3
ARM GAS  C:\Users\essele\AppData\Local\Temp\ccaJcTi8.s 			page 44


 1510 0188 1523     		movs	r3, #21
 1511 018a FB18     		adds	r3, r7, r3
 1512 018c 1278     		ldrb	r2, [r2]
 1513 018e 1B78     		ldrb	r3, [r3]
 1514 0190 9A42     		cmp	r2, r3
 1515 0192 0CD9     		bls	.L100
 919:Generated_Source\PSoC4/CyLib.c ****             {
 920:Generated_Source\PSoC4/CyLib.c ****                 /* Set new IMO frequency */
 921:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_IMO_TRIM2_REG = cyImoFreqMhz2Reg[freq - CY_SYS_CLK_IMO_FREQ_TABLE_OFFSET
 1516              		.loc 1 921 0
 1517 0194 1F4B     		ldr	r3, .L103+60
 1518 0196 7A68     		ldr	r2, [r7, #4]
 1519 0198 033A     		subs	r2, r2, #3
 1520 019a 1D49     		ldr	r1, .L103+56
 1521 019c 8A5C     		ldrb	r2, [r1, r2]
 1522 019e 1A60     		str	r2, [r3]
 922:Generated_Source\PSoC4/CyLib.c ****                 CyDelayCycles(CY_SYS_CLK_IMO_FREQ_TIMEOUT_CYCLES);
 1523              		.loc 1 922 0
 1524 01a0 0520     		movs	r0, #5
 1525 01a2 FFF7FEFF 		bl	CyDelayCycles
 918:Generated_Source\PSoC4/CyLib.c ****             {
 1526              		.loc 1 918 0
 1527 01a6 02E0     		b	.L100
 1528              	.L90:
 923:Generated_Source\PSoC4/CyLib.c ****             }
 924:Generated_Source\PSoC4/CyLib.c ****         }
 925:Generated_Source\PSoC4/CyLib.c ****         else
 926:Generated_Source\PSoC4/CyLib.c ****         {
 927:Generated_Source\PSoC4/CyLib.c ****             /* Halt CPU in debug mode if new frequency is invalid */
 928:Generated_Source\PSoC4/CyLib.c ****             CYASSERT(0u != 0u);
 1529              		.loc 1 928 0 discriminator 1
 1530 01a8 0020     		movs	r0, #0
 1531 01aa FFF7FEFF 		bl	CyHalt
 1532              	.L100:
 929:Generated_Source\PSoC4/CyLib.c ****         }
 930:Generated_Source\PSoC4/CyLib.c **** 
 931:Generated_Source\PSoC4/CyLib.c ****         #endif /* (CY_IP_FMLT) */
 932:Generated_Source\PSoC4/CyLib.c **** 
 933:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
 934:Generated_Source\PSoC4/CyLib.c ****             if (1u == wcoLock)
 1533              		.loc 1 934 0
 1534 01ae 3B69     		ldr	r3, [r7, #16]
 1535 01b0 012B     		cmp	r3, #1
 1536 01b2 01D1     		bne	.L101
 935:Generated_Source\PSoC4/CyLib.c ****             {
 936:Generated_Source\PSoC4/CyLib.c ****                 CySysClkImoEnableWcoLock();
 1537              		.loc 1 936 0
 1538 01b4 FFF7FEFF 		bl	CySysClkImoEnableWcoLock
 1539              	.L101:
 937:Generated_Source\PSoC4/CyLib.c ****             }
 938:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */
 939:Generated_Source\PSoC4/CyLib.c **** 
 940:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_IMO_TRIMMABLE_BY_USB)
 941:Generated_Source\PSoC4/CyLib.c ****             if (1u == usbLock)
 1540              		.loc 1 941 0
 1541 01b8 FB68     		ldr	r3, [r7, #12]
 1542 01ba 012B     		cmp	r3, #1
ARM GAS  C:\Users\essele\AppData\Local\Temp\ccaJcTi8.s 			page 45


 1543 01bc 01D1     		bne	.L102
 942:Generated_Source\PSoC4/CyLib.c ****             {
 943:Generated_Source\PSoC4/CyLib.c ****                 CySysClkImoEnableUsbLock();
 1544              		.loc 1 943 0
 1545 01be FFF7FEFF 		bl	CySysClkImoEnableUsbLock
 1546              	.L102:
 944:Generated_Source\PSoC4/CyLib.c ****             }
 945:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_IMO_TRIMMABLE_BY_USB) */
 946:Generated_Source\PSoC4/CyLib.c **** 
 947:Generated_Source\PSoC4/CyLib.c ****         CyExitCriticalSection(interruptState);
 1547              		.loc 1 947 0
 1548 01c2 0B23     		movs	r3, #11
 1549 01c4 FB18     		adds	r3, r7, r3
 1550 01c6 1B78     		ldrb	r3, [r3]
 1551 01c8 1800     		movs	r0, r3
 1552 01ca FFF7FEFF 		bl	CyExitCriticalSection
 948:Generated_Source\PSoC4/CyLib.c ****     }
 1553              		.loc 1 948 0
 1554 01ce C046     		nop
 1555 01d0 BD46     		mov	sp, r7
 1556 01d2 07B0     		add	sp, sp, #28
 1557              		@ sp needed
 1558 01d4 90BD     		pop	{r4, r7, pc}
 1559              	.L104:
 1560 01d6 C046     		.align	2
 1561              	.L103:
 1562 01d8 40F3FF0F 		.word	268432192
 1563 01dc 41F3FF0F 		.word	268432193
 1564 01e0 42F3FF0F 		.word	268432194
 1565 01e4 43F3FF0F 		.word	268432195
 1566 01e8 44F3FF0F 		.word	268432196
 1567 01ec 45F3FF0F 		.word	268432197
 1568 01f0 46F3FF0F 		.word	268432198
 1569 01f4 47F3FF0F 		.word	268432199
 1570 01f8 48F3FF0F 		.word	268432200
 1571 01fc 49F3FF0F 		.word	268432201
 1572 0200 4AF3FF0F 		.word	268432202
 1573 0204 4BF3FF0F 		.word	268432203
 1574 0208 4CF3FF0F 		.word	268432204
 1575 020c 4DF3FF0F 		.word	268432205
 1576 0210 00000000 		.word	cyImoFreqMhz2Reg
 1577 0214 2CFF0B40 		.word	1074528044
 1578 0218 28FF0B40 		.word	1074528040
 1579 021c 1CFF0B40 		.word	1074528028
 1580 0220 20FF0B40 		.word	1074528032
 1581              		.cfi_endproc
 1582              	.LFE13:
 1583              		.size	CySysClkWriteImoFreq, .-CySysClkWriteImoFreq
 1584              		.section	.text.CySysClkEcoStart,"ax",%progbits
 1585              		.align	2
 1586              		.global	CySysClkEcoStart
 1587              		.code	16
 1588              		.thumb_func
 1589              		.type	CySysClkEcoStart, %function
 1590              	CySysClkEcoStart:
 1591              	.LFB14:
 949:Generated_Source\PSoC4/CyLib.c **** 
ARM GAS  C:\Users\essele\AppData\Local\Temp\ccaJcTi8.s 			page 46


 950:Generated_Source\PSoC4/CyLib.c **** #else
 951:Generated_Source\PSoC4/CyLib.c **** 
 952:Generated_Source\PSoC4/CyLib.c ****     void CySysClkWriteImoFreq(uint32 freq)
 953:Generated_Source\PSoC4/CyLib.c ****     {
 954:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
 955:Generated_Source\PSoC4/CyLib.c ****         uint8  imoTrim1Value;
 956:Generated_Source\PSoC4/CyLib.c **** 
 957:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
 958:Generated_Source\PSoC4/CyLib.c ****             uint32 wcoLock = 0u;
 959:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */        
 960:Generated_Source\PSoC4/CyLib.c ****         
 961:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_IMO_TRIMMABLE_BY_USB)
 962:Generated_Source\PSoC4/CyLib.c ****             uint32 usbLock = 0u;
 963:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_IMO_TRIMMABLE_BY_USB) */
 964:Generated_Source\PSoC4/CyLib.c **** 
 965:Generated_Source\PSoC4/CyLib.c ****         #if (CY_PSOC4_4000)
 966:Generated_Source\PSoC4/CyLib.c ****             if ((freq == 24u) || (freq == 32u) || (freq == 48u))
 967:Generated_Source\PSoC4/CyLib.c ****         #elif (CY_CCG3)
 968:Generated_Source\PSoC4/CyLib.c ****             if ((freq == 24u) || (freq == 36u) || (freq == 48u))
 969:Generated_Source\PSoC4/CyLib.c ****         #else
 970:Generated_Source\PSoC4/CyLib.c ****             if ((freq == 24u) || (freq == 28u) || (freq == 32u) ||
 971:Generated_Source\PSoC4/CyLib.c ****                 (freq == 36u) || (freq == 40u) || (freq == 44u) ||
 972:Generated_Source\PSoC4/CyLib.c ****                 (freq == 48u))
 973:Generated_Source\PSoC4/CyLib.c ****         #endif /* (CY_PSOC4_4000) */
 974:Generated_Source\PSoC4/CyLib.c ****         {
 975:Generated_Source\PSoC4/CyLib.c ****             interruptState = CyEnterCriticalSection();
 976:Generated_Source\PSoC4/CyLib.c **** 
 977:Generated_Source\PSoC4/CyLib.c ****             #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
 978:Generated_Source\PSoC4/CyLib.c ****                 if(0u != CySysClkImoGetWcoLock())
 979:Generated_Source\PSoC4/CyLib.c ****                 {
 980:Generated_Source\PSoC4/CyLib.c ****                     wcoLock = 1u;
 981:Generated_Source\PSoC4/CyLib.c ****                     CySysClkImoDisableWcoLock();
 982:Generated_Source\PSoC4/CyLib.c ****                 }
 983:Generated_Source\PSoC4/CyLib.c ****             #endif  /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */
 984:Generated_Source\PSoC4/CyLib.c **** 
 985:Generated_Source\PSoC4/CyLib.c ****             #if (CY_IP_IMO_TRIMMABLE_BY_USB)
 986:Generated_Source\PSoC4/CyLib.c **** 
 987:Generated_Source\PSoC4/CyLib.c ****                 #if (CYDEV_IMO_TRIMMED_BY_USB == 0u)
 988:Generated_Source\PSoC4/CyLib.c ****                     if(0u != CySysClkImoGetUsbLock())
 989:Generated_Source\PSoC4/CyLib.c ****                     {
 990:Generated_Source\PSoC4/CyLib.c ****                 #endif  /* (CYDEV_IMO_TRIMMED_BY_USB == 0u) */
 991:Generated_Source\PSoC4/CyLib.c **** 
 992:Generated_Source\PSoC4/CyLib.c ****                     if (48u == freq)
 993:Generated_Source\PSoC4/CyLib.c ****                     {
 994:Generated_Source\PSoC4/CyLib.c ****                         usbLock = 1u;
 995:Generated_Source\PSoC4/CyLib.c ****                         CySysClkImoDisableUsbLock();
 996:Generated_Source\PSoC4/CyLib.c ****                     }
 997:Generated_Source\PSoC4/CyLib.c **** 
 998:Generated_Source\PSoC4/CyLib.c ****                 #if (CYDEV_IMO_TRIMMED_BY_USB == 0u)
 999:Generated_Source\PSoC4/CyLib.c ****                     }
1000:Generated_Source\PSoC4/CyLib.c ****                 #endif  /* (CYDEV_IMO_TRIMMED_BY_USB == 0u) */
1001:Generated_Source\PSoC4/CyLib.c **** 
1002:Generated_Source\PSoC4/CyLib.c ****             #endif  /* (CYDEV_IMO_TRIMMED_BY_USB == 0u) */
1003:Generated_Source\PSoC4/CyLib.c **** 
1004:Generated_Source\PSoC4/CyLib.c **** 
1005:Generated_Source\PSoC4/CyLib.c ****             /* Set IMO to 24 MHz - CLK_IMO_SELECT.FREQ = 0 */
1006:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_SELECT_REG &= ((uint32) ~CY_SYS_CLK_IMO_SELECT_FREQ_MASK);
ARM GAS  C:\Users\essele\AppData\Local\Temp\ccaJcTi8.s 			page 47


1007:Generated_Source\PSoC4/CyLib.c **** 
1008:Generated_Source\PSoC4/CyLib.c **** 
1009:Generated_Source\PSoC4/CyLib.c ****             /* Apply coarse trim */
1010:Generated_Source\PSoC4/CyLib.c ****             #if (CY_IP_IMO_TRIMMABLE_BY_USB)
1011:Generated_Source\PSoC4/CyLib.c ****                 if ((1u == usbLock) && (48u == freq))
1012:Generated_Source\PSoC4/CyLib.c ****                 {
1013:Generated_Source\PSoC4/CyLib.c ****                     imoTrim1Value = CY_SFLASH_IMO_TRIM_USBMODE_48_REG;
1014:Generated_Source\PSoC4/CyLib.c ****                 }
1015:Generated_Source\PSoC4/CyLib.c ****                 else if ((1u == usbLock) && (24u == freq))
1016:Generated_Source\PSoC4/CyLib.c ****                 {
1017:Generated_Source\PSoC4/CyLib.c ****                     imoTrim1Value = CY_SFLASH_IMO_TRIM_USBMODE_24_REG;
1018:Generated_Source\PSoC4/CyLib.c ****                 }
1019:Generated_Source\PSoC4/CyLib.c ****                 else
1020:Generated_Source\PSoC4/CyLib.c ****                 {
1021:Generated_Source\PSoC4/CyLib.c ****                     imoTrim1Value = (uint8) CY_SFLASH_IMO_TRIM_REG(freq - CY_SYS_CLK_IMO_MIN_FREQ_M
1022:Generated_Source\PSoC4/CyLib.c ****                 }
1023:Generated_Source\PSoC4/CyLib.c ****             #else
1024:Generated_Source\PSoC4/CyLib.c ****                 imoTrim1Value = (uint8) CY_SFLASH_IMO_TRIM_REG(freq - CY_SYS_CLK_IMO_MIN_FREQ_MHZ);
1025:Generated_Source\PSoC4/CyLib.c ****             #endif  /* (CY_IP_IMO_TRIMMABLE_BY_USB) */
1026:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_TRIM1_REG = (uint32) imoTrim1Value;
1027:Generated_Source\PSoC4/CyLib.c **** 
1028:Generated_Source\PSoC4/CyLib.c ****             /* Zero out fine trim */
1029:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_TRIM2_REG = CY_SYS_CLK_IMO_TRIM2_REG & ((uint32) ~CY_SYS_CLK_IMO_TRIM2_F
1030:Generated_Source\PSoC4/CyLib.c **** 
1031:Generated_Source\PSoC4/CyLib.c ****             /* Apply TC trim */
1032:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_TRIM3_REG = (CY_SYS_CLK_IMO_TRIM3_REG & ((uint32) ~CY_SYS_CLK_IMO_TRIM3_
1033:Generated_Source\PSoC4/CyLib.c ****                 (CY_SFLASH_IMO_TCTRIM_REG(freq - CY_SYS_CLK_IMO_MIN_FREQ_MHZ) & CY_SYS_CLK_IMO_TRIM
1034:Generated_Source\PSoC4/CyLib.c **** 
1035:Generated_Source\PSoC4/CyLib.c ****             CyDelayCycles(CY_SYS_CLK_IMO_TRIM_DELAY_CYCLES);
1036:Generated_Source\PSoC4/CyLib.c **** 
1037:Generated_Source\PSoC4/CyLib.c ****             if (freq > CY_SYS_CLK_IMO_MIN_FREQ_MHZ)
1038:Generated_Source\PSoC4/CyLib.c ****             {
1039:Generated_Source\PSoC4/CyLib.c ****                 /* Select nearby intermediate frequency */
1040:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_IMO_SELECT_REG = (CY_SYS_CLK_IMO_SELECT_REG & ((uint32) ~CY_SYS_CLK_IMO_
1041:Generated_Source\PSoC4/CyLib.c ****                     (((freq - 4u - CY_SYS_CLK_IMO_MIN_FREQ_MHZ) >> 2u) & CY_SYS_CLK_IMO_SELECT_FREQ
1042:Generated_Source\PSoC4/CyLib.c **** 
1043:Generated_Source\PSoC4/CyLib.c ****                 CyDelayCycles(CY_SYS_CLK_IMO_TRIM_DELAY_CYCLES);
1044:Generated_Source\PSoC4/CyLib.c **** 
1045:Generated_Source\PSoC4/CyLib.c ****                 /* Make small step to final frequency */
1046:Generated_Source\PSoC4/CyLib.c ****                 /* Select nearby intermediate frequency */
1047:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_IMO_SELECT_REG = (CY_SYS_CLK_IMO_SELECT_REG & ((uint32) ~CY_SYS_CLK_IMO_
1048:Generated_Source\PSoC4/CyLib.c ****                     (((freq - CY_SYS_CLK_IMO_MIN_FREQ_MHZ) >> 2u) & CY_SYS_CLK_IMO_SELECT_FREQ_MASK
1049:Generated_Source\PSoC4/CyLib.c ****             }
1050:Generated_Source\PSoC4/CyLib.c **** 
1051:Generated_Source\PSoC4/CyLib.c ****             #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
1052:Generated_Source\PSoC4/CyLib.c ****                 if (1u == wcoLock)
1053:Generated_Source\PSoC4/CyLib.c ****                 {
1054:Generated_Source\PSoC4/CyLib.c ****                     CySysClkImoEnableWcoLock();
1055:Generated_Source\PSoC4/CyLib.c ****                 }
1056:Generated_Source\PSoC4/CyLib.c ****             #endif  /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */
1057:Generated_Source\PSoC4/CyLib.c ****         
1058:Generated_Source\PSoC4/CyLib.c ****         
1059:Generated_Source\PSoC4/CyLib.c ****             #if (CY_IP_IMO_TRIMMABLE_BY_USB)
1060:Generated_Source\PSoC4/CyLib.c ****                 if (1u == usbLock)
1061:Generated_Source\PSoC4/CyLib.c ****                 {
1062:Generated_Source\PSoC4/CyLib.c ****                     CySysClkImoEnableUsbLock();
1063:Generated_Source\PSoC4/CyLib.c ****                 }
ARM GAS  C:\Users\essele\AppData\Local\Temp\ccaJcTi8.s 			page 48


1064:Generated_Source\PSoC4/CyLib.c ****             #endif  /* (CY_IP_IMO_TRIMMABLE_BY_USB) */
1065:Generated_Source\PSoC4/CyLib.c **** 
1066:Generated_Source\PSoC4/CyLib.c ****             CyExitCriticalSection(interruptState);
1067:Generated_Source\PSoC4/CyLib.c ****         }
1068:Generated_Source\PSoC4/CyLib.c ****         else
1069:Generated_Source\PSoC4/CyLib.c ****         {
1070:Generated_Source\PSoC4/CyLib.c ****             /* Halt CPU in debug mode if new frequency is invalid */
1071:Generated_Source\PSoC4/CyLib.c ****             CYASSERT(0u != 0u);
1072:Generated_Source\PSoC4/CyLib.c ****         }
1073:Generated_Source\PSoC4/CyLib.c ****     }
1074:Generated_Source\PSoC4/CyLib.c **** 
1075:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_SRSSV2) */
1076:Generated_Source\PSoC4/CyLib.c **** 
1077:Generated_Source\PSoC4/CyLib.c **** 
1078:Generated_Source\PSoC4/CyLib.c **** #if(CY_IP_SRSSLT)
1079:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1080:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkWriteHfclkDiv
1081:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1082:Generated_Source\PSoC4/CyLib.c ****     *
1083:Generated_Source\PSoC4/CyLib.c ****     * Selects the pre-scaler divider value for HFCLK from IMO.
1084:Generated_Source\PSoC4/CyLib.c ****     *
1085:Generated_Source\PSoC4/CyLib.c ****     * The HFCLK predivider allows the device to divide the HFCLK selection mux
1086:Generated_Source\PSoC4/CyLib.c ****     * input before use as HFCLK. The predivider is capable of dividing the HFCLK by
1087:Generated_Source\PSoC4/CyLib.c ****     * powers of 2 between 1 and 8.
1088:Generated_Source\PSoC4/CyLib.c ****     *
1089:Generated_Source\PSoC4/CyLib.c ****     * PSoC 4000: The SYSCLK has the speed of 16 MHz, so HFCLK and SYSCLK dividers
1090:Generated_Source\PSoC4/CyLib.c ****     * should be selected in a way, not to exceed 16 MHz for SYSCLK.
1091:Generated_Source\PSoC4/CyLib.c ****     *
1092:Generated_Source\PSoC4/CyLib.c ****     * If the SYSCLK clock frequency increases during the device operation, call
1093:Generated_Source\PSoC4/CyLib.c ****     * \ref CySysFlashSetWaitCycles() with the appropriate parameter to adjust the
1094:Generated_Source\PSoC4/CyLib.c ****     * number of clock cycles the cache will wait before sampling data comes back
1095:Generated_Source\PSoC4/CyLib.c ****     * from Flash. If the SYSCLK clock frequency decreases, you can call
1096:Generated_Source\PSoC4/CyLib.c ****     * \ref CySysFlashSetWaitCycles() to improve the CPU performance. See
1097:Generated_Source\PSoC4/CyLib.c ****     * \ref CySysFlashSetWaitCycles() description for more information.
1098:Generated_Source\PSoC4/CyLib.c ****     *
1099:Generated_Source\PSoC4/CyLib.c ****     * \param \ref CY_SYS_CLK_HFCLK_DIV_NODIV    Transparent mode (w/o dividing)
1100:Generated_Source\PSoC4/CyLib.c ****     * \param \ref CY_SYS_CLK_HFCLK_DIV_2        Divide selected clock source by 2
1101:Generated_Source\PSoC4/CyLib.c ****     * \param \ref CY_SYS_CLK_HFCLK_DIV_4        Divide selected clock source by 4
1102:Generated_Source\PSoC4/CyLib.c ****     * \param \ref CY_SYS_CLK_HFCLK_DIV_8        Divide selected clock source by 8
1103:Generated_Source\PSoC4/CyLib.c ****     *
1104:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1105:Generated_Source\PSoC4/CyLib.c ****     void CySysClkWriteHfclkDiv(uint32 divider)
1106:Generated_Source\PSoC4/CyLib.c ****     {
1107:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
1108:Generated_Source\PSoC4/CyLib.c **** 
1109:Generated_Source\PSoC4/CyLib.c ****         interruptState = CyEnterCriticalSection();
1110:Generated_Source\PSoC4/CyLib.c **** 
1111:Generated_Source\PSoC4/CyLib.c ****         CY_SYS_CLK_SELECT_REG = ((CY_SYS_CLK_SELECT_REG & ((uint32) (~(CY_SYS_CLK_SELECT_HFCLK_DIV_
1112:Generated_Source\PSoC4/CyLib.c ****                                         CY_SYS_CLK_SELECT_HFCLK_DIV_SHIFT)))) |
1113:Generated_Source\PSoC4/CyLib.c ****                     ((uint32)((divider & CY_SYS_CLK_SELECT_HFCLK_DIV_MASK) << CY_SYS_CLK_SELECT_HFC
1114:Generated_Source\PSoC4/CyLib.c **** 
1115:Generated_Source\PSoC4/CyLib.c ****         CyExitCriticalSection(interruptState);
1116:Generated_Source\PSoC4/CyLib.c ****     }
1117:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_SRSSLT) */
1118:Generated_Source\PSoC4/CyLib.c **** 
1119:Generated_Source\PSoC4/CyLib.c **** 
1120:Generated_Source\PSoC4/CyLib.c **** #if (CY_IP_ECO)
ARM GAS  C:\Users\essele\AppData\Local\Temp\ccaJcTi8.s 			page 49


1121:Generated_Source\PSoC4/CyLib.c **** 
1122:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1123:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkEcoStart
1124:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1125:Generated_Source\PSoC4/CyLib.c ****     *
1126:Generated_Source\PSoC4/CyLib.c ****     * Starts the External Crystal Oscillator (ECO). Refer to the device datasheet
1127:Generated_Source\PSoC4/CyLib.c ****     * for the ECO startup time.
1128:Generated_Source\PSoC4/CyLib.c ****     *
1129:Generated_Source\PSoC4/CyLib.c ****     * The timeout interval is measured based on the system frequency defined by
1130:Generated_Source\PSoC4/CyLib.c ****     * PSoC Creator at build time. If System clock frequency is changed in
1131:Generated_Source\PSoC4/CyLib.c ****     * runtime, the \ref CyDelayFreq() with the appropriate parameter should be
1132:Generated_Source\PSoC4/CyLib.c ****     * called.
1133:Generated_Source\PSoC4/CyLib.c ****     *
1134:Generated_Source\PSoC4/CyLib.c ****     * PSoC 4100 BLE / PSoC 4200 BLE: The WCO must be enabled prior to enabling ECO.
1135:Generated_Source\PSoC4/CyLib.c ****     *
1136:Generated_Source\PSoC4/CyLib.c ****     * \param timeoutUs Timeout in microseconds.
1137:Generated_Source\PSoC4/CyLib.c ****     *
1138:Generated_Source\PSoC4/CyLib.c ****     * If zero is specified, the function does not wait for timeout and returns
1139:Generated_Source\PSoC4/CyLib.c ****     * CYRET_SUCCESS. If non-zero is specified, the function waits for the timeout.
1140:Generated_Source\PSoC4/CyLib.c ****     *
1141:Generated_Source\PSoC4/CyLib.c ****     * \return \ref CYRET_SUCCESS Completed successfully. The ECO is oscillating and
1142:Generated_Source\PSoC4/CyLib.c ****     * amplitude reached 60% and it does not mean 24 MHz crystal is within 50 ppm.
1143:Generated_Source\PSoC4/CyLib.c ****     *
1144:Generated_Source\PSoC4/CyLib.c ****     * \return \ref CYRET_TIMEOUT Timeout occurred. If the crystal is not oscillating
1145:Generated_Source\PSoC4/CyLib.c ****     * or amplitude didn't reach 60% after specified amount of time, CYRET_TIMEOUT
1146:Generated_Source\PSoC4/CyLib.c ****     * is returned.
1147:Generated_Source\PSoC4/CyLib.c ****     *
1148:Generated_Source\PSoC4/CyLib.c ****     * \return \ref CYRET_BAD_PARAM One or more invalid parameters.
1149:Generated_Source\PSoC4/CyLib.c ****     *
1150:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1151:Generated_Source\PSoC4/CyLib.c ****     cystatus CySysClkEcoStart(uint32 timeoutUs)
1152:Generated_Source\PSoC4/CyLib.c ****     {
 1592              		.loc 1 1152 0
 1593              		.cfi_startproc
 1594              		@ args = 0, pretend = 0, frame = 16
 1595              		@ frame_needed = 1, uses_anonymous_args = 0
 1596 0000 80B5     		push	{r7, lr}
 1597              		.cfi_def_cfa_offset 8
 1598              		.cfi_offset 7, -8
 1599              		.cfi_offset 14, -4
 1600 0002 84B0     		sub	sp, sp, #16
 1601              		.cfi_def_cfa_offset 24
 1602 0004 00AF     		add	r7, sp, #0
 1603              		.cfi_def_cfa_register 7
 1604 0006 7860     		str	r0, [r7, #4]
1153:Generated_Source\PSoC4/CyLib.c ****         cystatus returnStatus = CYRET_SUCCESS;
 1605              		.loc 1 1153 0
 1606 0008 0023     		movs	r3, #0
 1607 000a FB60     		str	r3, [r7, #12]
1154:Generated_Source\PSoC4/CyLib.c **** 
1155:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_ECO_BLESS)
1156:Generated_Source\PSoC4/CyLib.c ****             /* Enable the RF oscillator band gap */
1157:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_XTAL_BLESS_RF_CONFIG_REG |= CY_SYS_XTAL_BLESS_RF_CONFIG_RF_ENABLE;
1158:Generated_Source\PSoC4/CyLib.c **** 
1159:Generated_Source\PSoC4/CyLib.c ****             /* Update trimming register */
1160:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_XTAL_BLERD_BB_XO_REG = CY_SYS_XTAL_BLERD_BB_XO_TRIM;
1161:Generated_Source\PSoC4/CyLib.c **** 
ARM GAS  C:\Users\essele\AppData\Local\Temp\ccaJcTi8.s 			page 50


1162:Generated_Source\PSoC4/CyLib.c ****             /* Enable the Crystal */
1163:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_XTAL_BLERD_DBUS_REG |= CY_SYS_XTAL_BLERD_DBUS_XTAL_ENABLE;
1164:Generated_Source\PSoC4/CyLib.c ****         
1165:Generated_Source\PSoC4/CyLib.c ****         #elif (CY_IP_ECO_BLESSV3)
1166:Generated_Source\PSoC4/CyLib.c ****             uint32 regConfig;
1167:Generated_Source\PSoC4/CyLib.c ****             uint32 intrRegMaskStore = 0u;
1168:Generated_Source\PSoC4/CyLib.c ****             
1169:Generated_Source\PSoC4/CyLib.c ****             if (0u != (CY_SYS_BLESS_MT_CFG_REG & (CY_SYS_BLESS_MT_CFG_ENABLE_BLERD <<  CYFLD_BLE_BL
1170:Generated_Source\PSoC4/CyLib.c ****             {
1171:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_BLESS_MT_CFG_REG |= (CY_SYS_BLESS_MT_CFG_DPSLP_ECO_ON  <<  CYFLD_BLE_BLESS_D
1172:Generated_Source\PSoC4/CyLib.c ****             }
1173:Generated_Source\PSoC4/CyLib.c ****             else
1174:Generated_Source\PSoC4/CyLib.c ****             {
1175:Generated_Source\PSoC4/CyLib.c ****                 /* Init BLE core */
1176:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_BLESS_MT_DELAY_CFG_REG = CY_SYS_BLESS_MT_DELAY_CFG_INIT;
1177:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_BLESS_MT_DELAY_CFG2_REG = CY_SYS_BLESS_MT_DELAY_CFG2_INIT;
1178:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_BLESS_MT_DELAY_CFG3_REG = CY_SYS_BLESS_MT_DELAY_CFG3_INIT;
1179:Generated_Source\PSoC4/CyLib.c ****             
1180:Generated_Source\PSoC4/CyLib.c ****                 /* RCB init */
1181:Generated_Source\PSoC4/CyLib.c ****                 regConfig = CY_SYS_RCB_CTRL_REG;
1182:Generated_Source\PSoC4/CyLib.c ****                 regConfig &= CY_SYS_RCB_CTRL_CLEAR;
1183:Generated_Source\PSoC4/CyLib.c ****                 regConfig |= CY_SYS_RCB_CTRL_INIT;
1184:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_RCB_CTRL_REG = regConfig;
1185:Generated_Source\PSoC4/CyLib.c ****                 
1186:Generated_Source\PSoC4/CyLib.c ****                 intrRegMaskStore = CY_SYS_BLESS_INTR_MASK_REG;
1187:Generated_Source\PSoC4/CyLib.c ****                 if(0u != (CY_SYS_BLESS_BLERD_ACTIVE_INTR_MASK & intrRegMaskStore))
1188:Generated_Source\PSoC4/CyLib.c ****                 {
1189:Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_BLESS_INTR_MASK_REG &= ~CY_SYS_BLESS_BLERD_ACTIVE_INTR_MASK;
1190:Generated_Source\PSoC4/CyLib.c ****                 }
1191:Generated_Source\PSoC4/CyLib.c ****                 
1192:Generated_Source\PSoC4/CyLib.c ****                 /* Enable BLE core */
1193:Generated_Source\PSoC4/CyLib.c ****                 regConfig = CY_SYS_BLESS_MT_CFG_REG;
1194:Generated_Source\PSoC4/CyLib.c ****                 regConfig &= CY_SYS_BLESS_MT_CFG_CLEAR;
1195:Generated_Source\PSoC4/CyLib.c ****                 regConfig |= CY_SYS_BLESS_MT_CFG_INIT;
1196:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_BLESS_MT_CFG_REG = regConfig;
1197:Generated_Source\PSoC4/CyLib.c **** 
1198:Generated_Source\PSoC4/CyLib.c ****                 while(0u == ((CY_SYS_BLESS_BLERD_ACTIVE_INTR_STAT & CY_SYS_BLESS_INTR_STAT_REG)))
1199:Generated_Source\PSoC4/CyLib.c ****                 {
1200:Generated_Source\PSoC4/CyLib.c ****                     /* Wait until BLERD55 moves to active state */
1201:Generated_Source\PSoC4/CyLib.c ****                 }
1202:Generated_Source\PSoC4/CyLib.c **** 
1203:Generated_Source\PSoC4/CyLib.c ****                 if(0u != (CY_SYS_BLESS_BLERD_ACTIVE_INTR_MASK & intrRegMaskStore))
1204:Generated_Source\PSoC4/CyLib.c ****                 {
1205:Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_BLESS_INTR_MASK_REG |= CY_SYS_BLESS_BLERD_ACTIVE_INTR_MASK;
1206:Generated_Source\PSoC4/CyLib.c ****                 }
1207:Generated_Source\PSoC4/CyLib.c ****                 
1208:Generated_Source\PSoC4/CyLib.c ****                 /* Send write commands to RBUS */
1209:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_RCB_TX_FIFO_WR_REG = CY_SYS_RCB_RBUS_FREQ_NRST_SET;
1210:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_RCB_TX_FIFO_WR_REG = CY_SYS_RCB_RBUS_DIG_CLK_SET;
1211:Generated_Source\PSoC4/CyLib.c ****                 
1212:Generated_Source\PSoC4/CyLib.c ****                 #if (CY_SYS_BLE_CLK_ECO_FREQ_32MHZ == CYDEV_ECO_CLK_MHZ)
1213:Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_RCB_TX_FIFO_WR_REG = CY_SYS_RCB_RBUS_FREQ_XTAL_DIV_SET;
1214:Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_RCB_TX_FIFO_WR_REG = (CY_SYS_RCB_RBUS_RF_DCXO_CFG_SET | CY_SYS_RCB_RBUS_
1215:Generated_Source\PSoC4/CyLib.c ****                 #else
1216:Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_RCB_TX_FIFO_WR_REG = CY_SYS_RCB_RBUS_FREQ_XTAL_NODIV_SET;
1217:Generated_Source\PSoC4/CyLib.c ****                 #endif
1218:Generated_Source\PSoC4/CyLib.c ****                 
ARM GAS  C:\Users\essele\AppData\Local\Temp\ccaJcTi8.s 			page 51


1219:Generated_Source\PSoC4/CyLib.c ****                 intrRegMaskStore = CY_SYS_BLESS_INTR_MASK_REG;
1220:Generated_Source\PSoC4/CyLib.c ****                 if(0u != (CY_SYS_RCB_INTR_RCB_DONE & intrRegMaskStore))
1221:Generated_Source\PSoC4/CyLib.c ****                 {
1222:Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_BLESS_INTR_MASK_REG &= ~(CY_SYS_RCB_INTR_RCB_DONE | CY_SYS_RCB_INTR_RCB_
1223:Generated_Source\PSoC4/CyLib.c ****                 }
1224:Generated_Source\PSoC4/CyLib.c ****                 
1225:Generated_Source\PSoC4/CyLib.c ****                 /* Send read commands to RBUS */
1226:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_RCB_TX_FIFO_WR_REG = (CY_SYS_RCB_RBUS_RD_CMD | 
1227:Generated_Source\PSoC4/CyLib.c ****                                             (CY_SYS_RCB_RBUS_RF_DCXO_CFG_SET & ~CY_SYS_RCB_RBUS_VAL
1228:Generated_Source\PSoC4/CyLib.c ****                                             
1229:Generated_Source\PSoC4/CyLib.c ****                 while (0u == (CY_SYS_RCB_INTR_RCB_RX_FIFO_NOT_EMPTY & CY_SYS_RCB_INTR_REG))
1230:Generated_Source\PSoC4/CyLib.c ****                 {
1231:Generated_Source\PSoC4/CyLib.c ****                     /* Wait until RX_FIFO_NOT_EMPTY state */
1232:Generated_Source\PSoC4/CyLib.c ****                 }
1233:Generated_Source\PSoC4/CyLib.c **** 
1234:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_RCB_INTR_REG |= CY_SYS_RCB_INTR_RCB_DONE;
1235:Generated_Source\PSoC4/CyLib.c ****                 
1236:Generated_Source\PSoC4/CyLib.c ****                 regConfig = CY_SYS_RCB_RX_FIFO_RD_REG & CY_SYS_RCB_RBUS_TRIM_MASK;
1237:Generated_Source\PSoC4/CyLib.c ****                 
1238:Generated_Source\PSoC4/CyLib.c ****                 /* Send write commands to RBUS */
1239:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_RCB_TX_FIFO_WR_REG = (CY_SYS_RCB_RBUS_RF_DCXO_CFG_SET | regConfig | CY_SYS_R
1240:Generated_Source\PSoC4/CyLib.c ****                 
1241:Generated_Source\PSoC4/CyLib.c ****                 while (0u == (CY_SYS_RCB_INTR_RCB_DONE & CY_SYS_RCB_INTR_REG))
1242:Generated_Source\PSoC4/CyLib.c ****                 {
1243:Generated_Source\PSoC4/CyLib.c ****                     /* Wait until RCB_DONE state */
1244:Generated_Source\PSoC4/CyLib.c ****                 }
1245:Generated_Source\PSoC4/CyLib.c ****                 
1246:Generated_Source\PSoC4/CyLib.c ****                 /* Clear Interrupt */
1247:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_RCB_INTR_REG = CY_SYS_RCB_INTR_CLEAR;
1248:Generated_Source\PSoC4/CyLib.c ****                 
1249:Generated_Source\PSoC4/CyLib.c ****                 if(0u != ((CY_SYS_RCB_INTR_RCB_DONE | CY_SYS_RCB_INTR_RCB_RX_FIFO_NOT_EMPTY) & intr
1250:Generated_Source\PSoC4/CyLib.c ****                 {
1251:Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_BLESS_INTR_MASK_REG |= intrRegMaskStore;
1252:Generated_Source\PSoC4/CyLib.c ****                 }
1253:Generated_Source\PSoC4/CyLib.c ****                 
1254:Generated_Source\PSoC4/CyLib.c ****             }
1255:Generated_Source\PSoC4/CyLib.c ****         #else /* CY_IP_ECO_SRSSV2 || CY_IP_ECO_SRSSLT */
1256:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_ECO_CONFIG_REG |= CY_SYS_CLK_ECO_CONFIG_ENABLE;
 1608              		.loc 1 1256 0
 1609 000c 154B     		ldr	r3, .L111
 1610 000e 154A     		ldr	r2, .L111
 1611 0010 1268     		ldr	r2, [r2]
 1612 0012 8021     		movs	r1, #128
 1613 0014 0906     		lsls	r1, r1, #24
 1614 0016 0A43     		orrs	r2, r1
 1615 0018 1A60     		str	r2, [r3]
1257:Generated_Source\PSoC4/CyLib.c ****             CyDelayUs(CY_SYS_CLK_ECO_CONFIG_CLK_EN_TIMEOUT_US);
 1616              		.loc 1 1257 0
 1617 001a 0A20     		movs	r0, #10
 1618 001c FFF7FEFF 		bl	CyDelayUs
1258:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_ECO_CONFIG_REG |= CY_SYS_CLK_ECO_CONFIG_CLK_EN;
 1619              		.loc 1 1258 0
 1620 0020 104B     		ldr	r3, .L111
 1621 0022 104A     		ldr	r2, .L111
 1622 0024 1268     		ldr	r2, [r2]
 1623 0026 0121     		movs	r1, #1
 1624 0028 0A43     		orrs	r2, r1
ARM GAS  C:\Users\essele\AppData\Local\Temp\ccaJcTi8.s 			page 52


 1625 002a 1A60     		str	r2, [r3]
1259:Generated_Source\PSoC4/CyLib.c ****         #endif /* (CY_IP_ECO_BLESS) */
1260:Generated_Source\PSoC4/CyLib.c **** 
1261:Generated_Source\PSoC4/CyLib.c ****         if(timeoutUs > 0u)
 1626              		.loc 1 1261 0
 1627 002c 7B68     		ldr	r3, [r7, #4]
 1628 002e 002B     		cmp	r3, #0
 1629 0030 12D0     		beq	.L106
1262:Generated_Source\PSoC4/CyLib.c ****         {
1263:Generated_Source\PSoC4/CyLib.c ****             returnStatus = CYRET_TIMEOUT;
 1630              		.loc 1 1263 0
 1631 0032 1023     		movs	r3, #16
 1632 0034 FB60     		str	r3, [r7, #12]
1264:Generated_Source\PSoC4/CyLib.c **** 
1265:Generated_Source\PSoC4/CyLib.c ****             for( ; timeoutUs > 0u; timeoutUs--)
 1633              		.loc 1 1265 0
 1634 0036 0CE0     		b	.L107
 1635              	.L109:
1266:Generated_Source\PSoC4/CyLib.c ****             {
1267:Generated_Source\PSoC4/CyLib.c ****                 CyDelayUs(1u);
 1636              		.loc 1 1267 0
 1637 0038 0120     		movs	r0, #1
 1638 003a FFF7FEFF 		bl	CyDelayUs
1268:Generated_Source\PSoC4/CyLib.c **** 
1269:Generated_Source\PSoC4/CyLib.c ****                 if(0u != CySysClkEcoReadStatus())
 1639              		.loc 1 1269 0
 1640 003e FFF7FEFF 		bl	CySysClkEcoReadStatus
 1641 0042 031E     		subs	r3, r0, #0
 1642 0044 02D0     		beq	.L108
1270:Generated_Source\PSoC4/CyLib.c ****                 {
1271:Generated_Source\PSoC4/CyLib.c ****                     returnStatus = CYRET_SUCCESS;
 1643              		.loc 1 1271 0
 1644 0046 0023     		movs	r3, #0
 1645 0048 FB60     		str	r3, [r7, #12]
1272:Generated_Source\PSoC4/CyLib.c ****                     break;
 1646              		.loc 1 1272 0
 1647 004a 05E0     		b	.L106
 1648              	.L108:
1265:Generated_Source\PSoC4/CyLib.c ****             {
 1649              		.loc 1 1265 0
 1650 004c 7B68     		ldr	r3, [r7, #4]
 1651 004e 013B     		subs	r3, r3, #1
 1652 0050 7B60     		str	r3, [r7, #4]
 1653              	.L107:
1265:Generated_Source\PSoC4/CyLib.c ****             {
 1654              		.loc 1 1265 0 is_stmt 0 discriminator 1
 1655 0052 7B68     		ldr	r3, [r7, #4]
 1656 0054 002B     		cmp	r3, #0
 1657 0056 EFD1     		bne	.L109
 1658              	.L106:
1273:Generated_Source\PSoC4/CyLib.c ****                 }
1274:Generated_Source\PSoC4/CyLib.c ****             }
1275:Generated_Source\PSoC4/CyLib.c **** 
1276:Generated_Source\PSoC4/CyLib.c ****         }
1277:Generated_Source\PSoC4/CyLib.c **** 
1278:Generated_Source\PSoC4/CyLib.c ****         return(returnStatus);
 1659              		.loc 1 1278 0 is_stmt 1
ARM GAS  C:\Users\essele\AppData\Local\Temp\ccaJcTi8.s 			page 53


 1660 0058 FB68     		ldr	r3, [r7, #12]
1279:Generated_Source\PSoC4/CyLib.c ****     }
 1661              		.loc 1 1279 0
 1662 005a 1800     		movs	r0, r3
 1663 005c BD46     		mov	sp, r7
 1664 005e 04B0     		add	sp, sp, #16
 1665              		@ sp needed
 1666 0060 80BD     		pop	{r7, pc}
 1667              	.L112:
 1668 0062 C046     		.align	2
 1669              	.L111:
 1670 0064 08000C40 		.word	1074528264
 1671              		.cfi_endproc
 1672              	.LFE14:
 1673              		.size	CySysClkEcoStart, .-CySysClkEcoStart
 1674              		.section	.text.CySysClkEcoStop,"ax",%progbits
 1675              		.align	2
 1676              		.global	CySysClkEcoStop
 1677              		.code	16
 1678              		.thumb_func
 1679              		.type	CySysClkEcoStop, %function
 1680              	CySysClkEcoStop:
 1681              	.LFB15:
1280:Generated_Source\PSoC4/CyLib.c **** 
1281:Generated_Source\PSoC4/CyLib.c **** 
1282:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1283:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkEcoStop
1284:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1285:Generated_Source\PSoC4/CyLib.c ****     *
1286:Generated_Source\PSoC4/CyLib.c ****     * Stops the megahertz crystal.
1287:Generated_Source\PSoC4/CyLib.c ****     *
1288:Generated_Source\PSoC4/CyLib.c ****     * If ECO is disabled when it is sourcing HFCLK, the CPU will halt. In addition,
1289:Generated_Source\PSoC4/CyLib.c ****     * for PSoC 4100 BLE / PSoC 4200 BLE devices, the BLE sub-system will stop
1290:Generated_Source\PSoC4/CyLib.c ****     * functioning.
1291:Generated_Source\PSoC4/CyLib.c ****     *
1292:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1293:Generated_Source\PSoC4/CyLib.c ****     void CySysClkEcoStop(void)
1294:Generated_Source\PSoC4/CyLib.c ****     {
 1682              		.loc 1 1294 0
 1683              		.cfi_startproc
 1684              		@ args = 0, pretend = 0, frame = 0
 1685              		@ frame_needed = 1, uses_anonymous_args = 0
 1686 0000 80B5     		push	{r7, lr}
 1687              		.cfi_def_cfa_offset 8
 1688              		.cfi_offset 7, -8
 1689              		.cfi_offset 14, -4
 1690 0002 00AF     		add	r7, sp, #0
 1691              		.cfi_def_cfa_register 7
1295:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_WCO_BLESS)
1296:Generated_Source\PSoC4/CyLib.c ****             /* Disable the RF oscillator band gap */
1297:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_XTAL_BLESS_RF_CONFIG_REG &= (uint32) ~CY_SYS_XTAL_BLESS_RF_CONFIG_RF_ENABLE;
1298:Generated_Source\PSoC4/CyLib.c **** 
1299:Generated_Source\PSoC4/CyLib.c ****             /* Disable the Crystal */
1300:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_XTAL_BLERD_DBUS_REG &= (uint32) ~CY_SYS_XTAL_BLERD_DBUS_XTAL_ENABLE;
1301:Generated_Source\PSoC4/CyLib.c ****         #elif (CY_IP_ECO_BLESSV3)
1302:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_BLESS_MT_CFG_REG &= ~(CY_SYS_BLESS_MT_CFG_DPSLP_ECO_ON  <<  CYFLD_BLE_BLESS_DPSL
1303:Generated_Source\PSoC4/CyLib.c ****         #else
ARM GAS  C:\Users\essele\AppData\Local\Temp\ccaJcTi8.s 			page 54


1304:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_ECO_CONFIG_REG &= (uint32) ~(CY_SYS_CLK_ECO_CONFIG_ENABLE | CY_SYS_CLK_ECO_C
 1692              		.loc 1 1304 0
 1693 0004 044B     		ldr	r3, .L114
 1694 0006 044A     		ldr	r2, .L114
 1695 0008 1268     		ldr	r2, [r2]
 1696 000a 0449     		ldr	r1, .L114+4
 1697 000c 0A40     		ands	r2, r1
 1698 000e 1A60     		str	r2, [r3]
1305:Generated_Source\PSoC4/CyLib.c ****         #endif /* (CY_IP_WCO_BLESS) */
1306:Generated_Source\PSoC4/CyLib.c ****     }
 1699              		.loc 1 1306 0
 1700 0010 C046     		nop
 1701 0012 BD46     		mov	sp, r7
 1702              		@ sp needed
 1703 0014 80BD     		pop	{r7, pc}
 1704              	.L115:
 1705 0016 C046     		.align	2
 1706              	.L114:
 1707 0018 08000C40 		.word	1074528264
 1708 001c FEFFFF7F 		.word	2147483646
 1709              		.cfi_endproc
 1710              	.LFE15:
 1711              		.size	CySysClkEcoStop, .-CySysClkEcoStop
 1712              		.section	.text.CySysClkEcoReadStatus,"ax",%progbits
 1713              		.align	2
 1714              		.global	CySysClkEcoReadStatus
 1715              		.code	16
 1716              		.thumb_func
 1717              		.type	CySysClkEcoReadStatus, %function
 1718              	CySysClkEcoReadStatus:
 1719              	.LFB16:
1307:Generated_Source\PSoC4/CyLib.c **** 
1308:Generated_Source\PSoC4/CyLib.c **** 
1309:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1310:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkEcoReadStatus
1311:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1312:Generated_Source\PSoC4/CyLib.c ****     *
1313:Generated_Source\PSoC4/CyLib.c ****     * Reads the status bit for the megahertz crystal.
1314:Generated_Source\PSoC4/CyLib.c ****     *
1315:Generated_Source\PSoC4/CyLib.c ****     * For PSoC 4100 BLE / PSoC 4200 BLE devices, the status bit is the
1316:Generated_Source\PSoC4/CyLib.c ****     * XO_AMP_DETECT bit in FSM register.
1317:Generated_Source\PSoC4/CyLib.c ****     *
1318:Generated_Source\PSoC4/CyLib.c ****     * For PSoC 4200L / 4100S with ECO devices, the error status bit is the 
1319:Generated_Source\PSoC4/CyLib.c ****     * WATCHDOG_ERROR bit in ECO_STATUS register.
1320:Generated_Source\PSoC4/CyLib.c ****     *
1321:Generated_Source\PSoC4/CyLib.c ****     * \return PSoC 4100 BLE/PSoC 4200 BLE: Non-zero indicates that ECO output
1322:Generated_Source\PSoC4/CyLib.c ****     * reached 50 ppm and is oscillating in valid range.
1323:Generated_Source\PSoC4/CyLib.c ****     *
1324:Generated_Source\PSoC4/CyLib.c ****     * \return PSoC 4200L / 4100S with ECO: Non-zero indicates that ECO is running.
1325:Generated_Source\PSoC4/CyLib.c ****     *
1326:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1327:Generated_Source\PSoC4/CyLib.c ****     uint32 CySysClkEcoReadStatus(void)
1328:Generated_Source\PSoC4/CyLib.c ****     {
 1720              		.loc 1 1328 0
 1721              		.cfi_startproc
 1722              		@ args = 0, pretend = 0, frame = 8
 1723              		@ frame_needed = 1, uses_anonymous_args = 0
ARM GAS  C:\Users\essele\AppData\Local\Temp\ccaJcTi8.s 			page 55


 1724 0000 80B5     		push	{r7, lr}
 1725              		.cfi_def_cfa_offset 8
 1726              		.cfi_offset 7, -8
 1727              		.cfi_offset 14, -4
 1728 0002 82B0     		sub	sp, sp, #8
 1729              		.cfi_def_cfa_offset 16
 1730 0004 00AF     		add	r7, sp, #0
 1731              		.cfi_def_cfa_register 7
1329:Generated_Source\PSoC4/CyLib.c ****         uint32 returnValue;
1330:Generated_Source\PSoC4/CyLib.c **** 
1331:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_WCO_BLESS)
1332:Generated_Source\PSoC4/CyLib.c ****             returnValue = CY_SYS_XTAL_BLERD_FSM_REG & CY_SYS_XTAL_BLERD_FSM_XO_AMP_DETECT;
1333:Generated_Source\PSoC4/CyLib.c ****         #elif (CY_IP_ECO_BLESSV3)
1334:Generated_Source\PSoC4/CyLib.c ****             returnValue = (CY_SYS_BLESS_MT_STATUS_REG & CY_SYS_BLESS_MT_STATUS_CURR_STATE_MASK) >> 
1335:Generated_Source\PSoC4/CyLib.c **** 
1336:Generated_Source\PSoC4/CyLib.c ****             returnValue =  ((CY_SYS_BLESS_MT_STATUS_BLERD_IDLE == returnValue) || 
1337:Generated_Source\PSoC4/CyLib.c ****                             (CY_SYS_BLESS_MT_STATUS_SWITCH_EN  == returnValue) ||
1338:Generated_Source\PSoC4/CyLib.c ****                             (CY_SYS_BLESS_MT_STATUS_ACTIVE  ==  returnValue) ||
1339:Generated_Source\PSoC4/CyLib.c ****                             (CY_SYS_BLESS_MT_STATUS_ISOLATE == returnValue));
1340:Generated_Source\PSoC4/CyLib.c ****         #else
1341:Generated_Source\PSoC4/CyLib.c ****             returnValue = (0u != (CY_SYS_CLK_ECO_STATUS_REG & CY_SYS_CLK_ECO_STATUS_WATCHDOG_ERROR)
 1732              		.loc 1 1341 0
 1733 0006 064B     		ldr	r3, .L118
 1734 0008 1B68     		ldr	r3, [r3]
 1735 000a 0122     		movs	r2, #1
 1736 000c 1340     		ands	r3, r2
 1737 000e 5A42     		rsbs	r2, r3, #0
 1738 0010 5341     		adcs	r3, r3, r2
 1739 0012 DBB2     		uxtb	r3, r3
 1740 0014 7B60     		str	r3, [r7, #4]
1342:Generated_Source\PSoC4/CyLib.c ****         #endif /* (CY_IP_WCO_BLESS) */
1343:Generated_Source\PSoC4/CyLib.c **** 
1344:Generated_Source\PSoC4/CyLib.c ****         return (returnValue);
 1741              		.loc 1 1344 0
 1742 0016 7B68     		ldr	r3, [r7, #4]
1345:Generated_Source\PSoC4/CyLib.c ****     }
 1743              		.loc 1 1345 0
 1744 0018 1800     		movs	r0, r3
 1745 001a BD46     		mov	sp, r7
 1746 001c 02B0     		add	sp, sp, #8
 1747              		@ sp needed
 1748 001e 80BD     		pop	{r7, pc}
 1749              	.L119:
 1750              		.align	2
 1751              	.L118:
 1752 0020 0C000C40 		.word	1074528268
 1753              		.cfi_endproc
 1754              	.LFE16:
 1755              		.size	CySysClkEcoReadStatus, .-CySysClkEcoReadStatus
 1756              		.section	.text.CySysClkConfigureEcoTrim,"ax",%progbits
 1757              		.align	2
 1758              		.global	CySysClkConfigureEcoTrim
 1759              		.code	16
 1760              		.thumb_func
 1761              		.type	CySysClkConfigureEcoTrim, %function
 1762              	CySysClkConfigureEcoTrim:
 1763              	.LFB17:
ARM GAS  C:\Users\essele\AppData\Local\Temp\ccaJcTi8.s 			page 56


1346:Generated_Source\PSoC4/CyLib.c **** 
1347:Generated_Source\PSoC4/CyLib.c ****     #if (CY_IP_ECO_BLESS || CY_IP_ECO_BLESSV3)
1348:Generated_Source\PSoC4/CyLib.c ****         /*******************************************************************************
1349:Generated_Source\PSoC4/CyLib.c ****         * Function Name: CySysClkWriteEcoDiv
1350:Generated_Source\PSoC4/CyLib.c ****         ****************************************************************************//**
1351:Generated_Source\PSoC4/CyLib.c ****         *
1352:Generated_Source\PSoC4/CyLib.c ****         * Selects value for the ECO divider.
1353:Generated_Source\PSoC4/CyLib.c ****         *
1354:Generated_Source\PSoC4/CyLib.c ****         * The ECO must not be the HFCLK clock source when this function is called.
1355:Generated_Source\PSoC4/CyLib.c ****         * The HFCLK source can be changed to the other clock source by call to the
1356:Generated_Source\PSoC4/CyLib.c ****         * CySysClkWriteHfclkDirect() function. If the ECO sources the HFCLK this
1357:Generated_Source\PSoC4/CyLib.c ****         * function will not have any effect if compiler in release mode, and halt the
1358:Generated_Source\PSoC4/CyLib.c ****         * CPU when compiler in debug mode.
1359:Generated_Source\PSoC4/CyLib.c ****         *
1360:Generated_Source\PSoC4/CyLib.c ****         * If the SYSCLK clock frequency increases during the device operation, call
1361:Generated_Source\PSoC4/CyLib.c ****         * CySysFlashSetWaitCycles() with the appropriate parameter to adjust the number
1362:Generated_Source\PSoC4/CyLib.c ****         * of clock cycles the cache will wait before sampling data comes back from
1363:Generated_Source\PSoC4/CyLib.c ****         * Flash. If the SYSCLK clock frequency decreases, you can call
1364:Generated_Source\PSoC4/CyLib.c ****         * CySysFlashSetWaitCycles() to improve the CPU performance. See
1365:Generated_Source\PSoC4/CyLib.c ****         * CySysFlashSetWaitCycles() description for more information.
1366:Generated_Source\PSoC4/CyLib.c ****         *
1367:Generated_Source\PSoC4/CyLib.c ****         * \param divider Power of 2 divider selection.
1368:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_DIV1
1369:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_DIV2
1370:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_DIV4
1371:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_DIV8
1372:Generated_Source\PSoC4/CyLib.c ****         *
1373:Generated_Source\PSoC4/CyLib.c ****         *******************************************************************************/
1374:Generated_Source\PSoC4/CyLib.c ****         void CySysClkWriteEcoDiv(uint32 divider)
1375:Generated_Source\PSoC4/CyLib.c ****         {
1376:Generated_Source\PSoC4/CyLib.c ****             uint8  interruptState;
1377:Generated_Source\PSoC4/CyLib.c **** 
1378:Generated_Source\PSoC4/CyLib.c ****             if (CY_SYS_CLK_HFCLK_ECO != (CY_SYS_CLK_SELECT_REG & CY_SYS_CLK_SELECT_DIRECT_SEL_MASK)
1379:Generated_Source\PSoC4/CyLib.c ****             {
1380:Generated_Source\PSoC4/CyLib.c ****                 interruptState = CyEnterCriticalSection();
1381:Generated_Source\PSoC4/CyLib.c **** 
1382:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_XTAL_CLK_DIV_CONFIG_REG =  (divider & CY_SYS_CLK_XTAL_CLK_DIV_MASK) |
1383:Generated_Source\PSoC4/CyLib.c ****                                                       (CY_SYS_CLK_XTAL_CLK_DIV_CONFIG_REG & ((uint3
1384:Generated_Source\PSoC4/CyLib.c **** 
1385:Generated_Source\PSoC4/CyLib.c ****                 CyExitCriticalSection(interruptState);
1386:Generated_Source\PSoC4/CyLib.c ****             }
1387:Generated_Source\PSoC4/CyLib.c ****             else
1388:Generated_Source\PSoC4/CyLib.c ****             {
1389:Generated_Source\PSoC4/CyLib.c ****                 /* Halt CPU in debug mode if ECO sources HFCLK */
1390:Generated_Source\PSoC4/CyLib.c ****                 CYASSERT(0u != 0u);
1391:Generated_Source\PSoC4/CyLib.c ****             }
1392:Generated_Source\PSoC4/CyLib.c ****         }
1393:Generated_Source\PSoC4/CyLib.c **** 
1394:Generated_Source\PSoC4/CyLib.c ****     #else
1395:Generated_Source\PSoC4/CyLib.c **** 
1396:Generated_Source\PSoC4/CyLib.c ****         /*******************************************************************************
1397:Generated_Source\PSoC4/CyLib.c ****         * Function Name: CySysClkConfigureEcoTrim
1398:Generated_Source\PSoC4/CyLib.c ****         ****************************************************************************//**
1399:Generated_Source\PSoC4/CyLib.c ****         *
1400:Generated_Source\PSoC4/CyLib.c ****         * Selects trim setting values for ECO. This API is available only for PSoC
1401:Generated_Source\PSoC4/CyLib.c ****         * 4200L / 4100S with ECO devices only.
1402:Generated_Source\PSoC4/CyLib.c ****         *
ARM GAS  C:\Users\essele\AppData\Local\Temp\ccaJcTi8.s 			page 57


1403:Generated_Source\PSoC4/CyLib.c ****         * The following parameters can be trimmed for ECO. The affected registers are
1404:Generated_Source\PSoC4/CyLib.c ****         * ECO_TRIM0 and ECO_TRIM1.
1405:Generated_Source\PSoC4/CyLib.c ****         *
1406:Generated_Source\PSoC4/CyLib.c ****         * Watchdog trim - This bit field sets the error threshold below the steady
1407:Generated_Source\PSoC4/CyLib.c ****         * state amplitude level.
1408:Generated_Source\PSoC4/CyLib.c ****         *
1409:Generated_Source\PSoC4/CyLib.c ****         * Amplitude trim - This bit field is to set the crystal drive level when
1410:Generated_Source\PSoC4/CyLib.c ****         * ECO_CONFIG.AGC_EN = 1. WARNING: use care when setting this field because
1411:Generated_Source\PSoC4/CyLib.c ****         * driving a crystal beyond its rated limit can permanently damage the crystal.
1412:Generated_Source\PSoC4/CyLib.c ****         *
1413:Generated_Source\PSoC4/CyLib.c ****         * Filter frequency trim - This bit field sets LPF frequency trim and affects
1414:Generated_Source\PSoC4/CyLib.c ****         * the 3rd harmonic content.
1415:Generated_Source\PSoC4/CyLib.c ****         *
1416:Generated_Source\PSoC4/CyLib.c ****         * Feedback resistor trim - This bit field sets the feedback resistor trim and
1417:Generated_Source\PSoC4/CyLib.c ****         * impacts the oscillation amplitude.
1418:Generated_Source\PSoC4/CyLib.c ****         *
1419:Generated_Source\PSoC4/CyLib.c ****         * Amplifier gain trim - This bit field sets the amplifier gain trim and affects
1420:Generated_Source\PSoC4/CyLib.c ****         * the startup time of the crystal.
1421:Generated_Source\PSoC4/CyLib.c ****         *
1422:Generated_Source\PSoC4/CyLib.c ****         * Use care when setting the amplitude trim field because driving a crystal
1423:Generated_Source\PSoC4/CyLib.c ****         * beyond its rated limit can permanently damage the crystal.
1424:Generated_Source\PSoC4/CyLib.c ****         *
1425:Generated_Source\PSoC4/CyLib.c ****         * \param wDTrim: Watchdog trim
1426:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_WDTRIM0      Error threshold is 0.05 V
1427:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_WDTRIM1      Error threshold is 0.10 V
1428:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_WDTRIM2      Error threshold is 0.15 V
1429:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_WDTRIM3      Error threshold is 0.20 V
1430:Generated_Source\PSoC4/CyLib.c ****         *
1431:Generated_Source\PSoC4/CyLib.c ****         * \param aTrim: Amplitude trim
1432:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_ATRIM0       Amplitude is 0.3 Vpp
1433:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_ATRIM1       Amplitude is 0.4 Vpp
1434:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_ATRIM2       Amplitude is 0.5 Vpp
1435:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_ATRIM3       Amplitude is 0.6 Vpp
1436:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_ATRIM4       Amplitude is 0.7 Vpp
1437:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_ATRIM5       Amplitude is 0.8 Vpp
1438:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_ATRIM6       Amplitude is 0.9 Vpp
1439:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_ATRIM7       Amplitude is 1.0 Vpp
1440:Generated_Source\PSoC4/CyLib.c ****         *
1441:Generated_Source\PSoC4/CyLib.c ****         * \param fTrim: Filter frequency trim
1442:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_FTRIM0       Crystal frequency > 30 MHz
1443:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_FTRIM1       24 MHz < Crystal frequency <= 30 MHz
1444:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_FTRIM2       17 MHz < Crystal frequency <= 24 MHz
1445:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_FTRIM3       Crystal frequency <= 17 MHz
1446:Generated_Source\PSoC4/CyLib.c ****         *
1447:Generated_Source\PSoC4/CyLib.c ****         * \param rTrim: Feedback resistor trim
1448:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_RTRIM0       Crystal frequency > 30 MHz
1449:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_RTRIM1       24 MHz < Crystal frequency <= 30 MHz
1450:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_RTRIM2       17 MHz < Crystal frequency <= 24 MHz
1451:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_RTRIM3       Crystal frequency <= 17 MHz
1452:Generated_Source\PSoC4/CyLib.c ****         *
1453:Generated_Source\PSoC4/CyLib.c ****         * \param gTrim: Amplifier gain trim. Calculate the minimum required gm
1454:Generated_Source\PSoC4/CyLib.c ****         * (trans-conductance value). Divide the calculated gm value by 4.5 to
1455:Generated_Source\PSoC4/CyLib.c ****         * obtain an integer value 'result'. For more information please refer
1456:Generated_Source\PSoC4/CyLib.c ****         * to the device TRM.
1457:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_GTRIM0       If result = 1
1458:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_GTRIM1       If result = 0
1459:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_GTRIM2       If result = 2
ARM GAS  C:\Users\essele\AppData\Local\Temp\ccaJcTi8.s 			page 58


1460:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_GTRIM2       If result = 3
1461:Generated_Source\PSoC4/CyLib.c ****         *
1462:Generated_Source\PSoC4/CyLib.c ****         *******************************************************************************/
1463:Generated_Source\PSoC4/CyLib.c ****         void CySysClkConfigureEcoTrim(uint32 wDTrim, uint32 aTrim, uint32 fTrim, uint32 rTrim, uint
1464:Generated_Source\PSoC4/CyLib.c ****         {
 1764              		.loc 1 1464 0
 1765              		.cfi_startproc
 1766              		@ args = 4, pretend = 0, frame = 24
 1767              		@ frame_needed = 1, uses_anonymous_args = 0
 1768 0000 90B5     		push	{r4, r7, lr}
 1769              		.cfi_def_cfa_offset 12
 1770              		.cfi_offset 4, -12
 1771              		.cfi_offset 7, -8
 1772              		.cfi_offset 14, -4
 1773 0002 87B0     		sub	sp, sp, #28
 1774              		.cfi_def_cfa_offset 40
 1775 0004 00AF     		add	r7, sp, #0
 1776              		.cfi_def_cfa_register 7
 1777 0006 F860     		str	r0, [r7, #12]
 1778 0008 B960     		str	r1, [r7, #8]
 1779 000a 7A60     		str	r2, [r7, #4]
 1780 000c 3B60     		str	r3, [r7]
1465:Generated_Source\PSoC4/CyLib.c ****             uint8  interruptState;
1466:Generated_Source\PSoC4/CyLib.c ****             uint32 regTmp;
1467:Generated_Source\PSoC4/CyLib.c **** 
1468:Generated_Source\PSoC4/CyLib.c ****             interruptState = CyEnterCriticalSection();
 1781              		.loc 1 1468 0
 1782 000e 1723     		movs	r3, #23
 1783 0010 FC18     		adds	r4, r7, r3
 1784 0012 FFF7FEFF 		bl	CyEnterCriticalSection
 1785 0016 0300     		movs	r3, r0
 1786 0018 2370     		strb	r3, [r4]
1469:Generated_Source\PSoC4/CyLib.c **** 
1470:Generated_Source\PSoC4/CyLib.c ****             regTmp  = CY_SYS_CLK_ECO_TRIM0_REG & ~(CY_SYS_CLK_ECO_TRIM0_WDTRIM_MASK | CY_SYS_CLK_EC
 1787              		.loc 1 1470 0
 1788 001a 1D4B     		ldr	r3, .L121
 1789 001c 1B68     		ldr	r3, [r3]
 1790 001e 1F22     		movs	r2, #31
 1791 0020 9343     		bics	r3, r2
 1792 0022 3B61     		str	r3, [r7, #16]
1471:Generated_Source\PSoC4/CyLib.c ****             regTmp |= ((uint32) (wDTrim << CY_SYS_CLK_ECO_TRIM0_WDTRIM_SHIFT) & CY_SYS_CLK_ECO_TRIM
 1793              		.loc 1 1471 0
 1794 0024 FB68     		ldr	r3, [r7, #12]
 1795 0026 0322     		movs	r2, #3
 1796 0028 1340     		ands	r3, r2
 1797 002a 3A69     		ldr	r2, [r7, #16]
 1798 002c 1343     		orrs	r3, r2
 1799 002e 3B61     		str	r3, [r7, #16]
1472:Generated_Source\PSoC4/CyLib.c ****             regTmp |= ((uint32) (aTrim << CY_SYS_CLK_ECO_TRIM0_ATRIM_SHIFT) & CY_SYS_CLK_ECO_TRIM0_
 1800              		.loc 1 1472 0
 1801 0030 BB68     		ldr	r3, [r7, #8]
 1802 0032 9B00     		lsls	r3, r3, #2
 1803 0034 1C22     		movs	r2, #28
 1804 0036 1340     		ands	r3, r2
 1805 0038 3A69     		ldr	r2, [r7, #16]
 1806 003a 1343     		orrs	r3, r2
 1807 003c 3B61     		str	r3, [r7, #16]
ARM GAS  C:\Users\essele\AppData\Local\Temp\ccaJcTi8.s 			page 59


1473:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_ECO_TRIM0_REG = regTmp;
 1808              		.loc 1 1473 0
 1809 003e 144B     		ldr	r3, .L121
 1810 0040 3A69     		ldr	r2, [r7, #16]
 1811 0042 1A60     		str	r2, [r3]
1474:Generated_Source\PSoC4/CyLib.c **** 
1475:Generated_Source\PSoC4/CyLib.c ****             regTmp  = CY_SYS_CLK_ECO_TRIM1_REG & ~(CY_SYS_CLK_ECO_TRIM1_FTRIM_MASK |
 1812              		.loc 1 1475 0
 1813 0044 134B     		ldr	r3, .L121+4
 1814 0046 1B68     		ldr	r3, [r3]
 1815 0048 3F22     		movs	r2, #63
 1816 004a 9343     		bics	r3, r2
 1817 004c 3B61     		str	r3, [r7, #16]
1476:Generated_Source\PSoC4/CyLib.c ****                                                    CY_SYS_CLK_ECO_TRIM1_RTRIM_MASK |
1477:Generated_Source\PSoC4/CyLib.c ****                                                    CY_SYS_CLK_ECO_TRIM1_GTRIM_MASK);
1478:Generated_Source\PSoC4/CyLib.c ****             regTmp |= ((uint32) (fTrim << CY_SYS_CLK_ECO_TRIM1_FTRIM_SHIFT) & CY_SYS_CLK_ECO_TRIM1_
 1818              		.loc 1 1478 0
 1819 004e 7B68     		ldr	r3, [r7, #4]
 1820 0050 0322     		movs	r2, #3
 1821 0052 1340     		ands	r3, r2
 1822 0054 3A69     		ldr	r2, [r7, #16]
 1823 0056 1343     		orrs	r3, r2
 1824 0058 3B61     		str	r3, [r7, #16]
1479:Generated_Source\PSoC4/CyLib.c ****             regTmp |= ((uint32) (rTrim << CY_SYS_CLK_ECO_TRIM1_RTRIM_SHIFT) & CY_SYS_CLK_ECO_TRIM1_
 1825              		.loc 1 1479 0
 1826 005a 3B68     		ldr	r3, [r7]
 1827 005c 9B00     		lsls	r3, r3, #2
 1828 005e 0C22     		movs	r2, #12
 1829 0060 1340     		ands	r3, r2
 1830 0062 3A69     		ldr	r2, [r7, #16]
 1831 0064 1343     		orrs	r3, r2
 1832 0066 3B61     		str	r3, [r7, #16]
1480:Generated_Source\PSoC4/CyLib.c ****             regTmp |= ((uint32) (gTrim << CY_SYS_CLK_ECO_TRIM1_GTRIM_SHIFT) & CY_SYS_CLK_ECO_TRIM1_
 1833              		.loc 1 1480 0
 1834 0068 BB6A     		ldr	r3, [r7, #40]
 1835 006a 1B01     		lsls	r3, r3, #4
 1836 006c 3022     		movs	r2, #48
 1837 006e 1340     		ands	r3, r2
 1838 0070 3A69     		ldr	r2, [r7, #16]
 1839 0072 1343     		orrs	r3, r2
 1840 0074 3B61     		str	r3, [r7, #16]
1481:Generated_Source\PSoC4/CyLib.c **** 
1482:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_ECO_TRIM1_REG = regTmp;
 1841              		.loc 1 1482 0
 1842 0076 074B     		ldr	r3, .L121+4
 1843 0078 3A69     		ldr	r2, [r7, #16]
 1844 007a 1A60     		str	r2, [r3]
1483:Generated_Source\PSoC4/CyLib.c **** 
1484:Generated_Source\PSoC4/CyLib.c ****             CyExitCriticalSection(interruptState);
 1845              		.loc 1 1484 0
 1846 007c 1723     		movs	r3, #23
 1847 007e FB18     		adds	r3, r7, r3
 1848 0080 1B78     		ldrb	r3, [r3]
 1849 0082 1800     		movs	r0, r3
 1850 0084 FFF7FEFF 		bl	CyExitCriticalSection
1485:Generated_Source\PSoC4/CyLib.c ****         }
 1851              		.loc 1 1485 0
ARM GAS  C:\Users\essele\AppData\Local\Temp\ccaJcTi8.s 			page 60


 1852 0088 C046     		nop
 1853 008a BD46     		mov	sp, r7
 1854 008c 07B0     		add	sp, sp, #28
 1855              		@ sp needed
 1856 008e 90BD     		pop	{r4, r7, pc}
 1857              	.L122:
 1858              		.align	2
 1859              	.L121:
 1860 0090 0CFF0C40 		.word	1074593548
 1861 0094 10FF0C40 		.word	1074593552
 1862              		.cfi_endproc
 1863              	.LFE17:
 1864              		.size	CySysClkConfigureEcoTrim, .-CySysClkConfigureEcoTrim
 1865              		.global	__aeabi_uidiv
 1866              		.section	.text.CySysClkConfigureEcoDrive,"ax",%progbits
 1867              		.align	2
 1868              		.global	CySysClkConfigureEcoDrive
 1869              		.code	16
 1870              		.thumb_func
 1871              		.type	CySysClkConfigureEcoDrive, %function
 1872              	CySysClkConfigureEcoDrive:
 1873              	.LFB18:
1486:Generated_Source\PSoC4/CyLib.c **** 
1487:Generated_Source\PSoC4/CyLib.c **** 
1488:Generated_Source\PSoC4/CyLib.c ****         /*******************************************************************************
1489:Generated_Source\PSoC4/CyLib.c ****         * Function Name: CySysClkConfigureEcoDrive
1490:Generated_Source\PSoC4/CyLib.c ****         ****************************************************************************//**
1491:Generated_Source\PSoC4/CyLib.c ****         *
1492:Generated_Source\PSoC4/CyLib.c ****         * Selects trim setting values for ECO based on crystal parameters. Use care
1493:Generated_Source\PSoC4/CyLib.c ****         * when setting the driveLevel parameter because driving a crystal beyond its
1494:Generated_Source\PSoC4/CyLib.c ****         * rated limit can permanently damage the crystal.
1495:Generated_Source\PSoC4/CyLib.c ****         *
1496:Generated_Source\PSoC4/CyLib.c ****         * This API is available only for PSoC 4200L / 4100S with ECO devices only.
1497:Generated_Source\PSoC4/CyLib.c ****         *
1498:Generated_Source\PSoC4/CyLib.c ****         * \param freq Frequency of the crystal in kHz.
1499:Generated_Source\PSoC4/CyLib.c ****         * \param cLoad Crystal load capacitance in pF.
1500:Generated_Source\PSoC4/CyLib.c ****         * \param esr Equivalent series resistance of the crystal in ohm.
1501:Generated_Source\PSoC4/CyLib.c ****         *  maxAmplitude: maximum amplitude level in mV. Calculate as
1502:Generated_Source\PSoC4/CyLib.c ****         *  ((sqrt(driveLevel in uW / 2 / esr))/(3.14 * freq * cLoad)) * 10^9.
1503:Generated_Source\PSoC4/CyLib.c ****         *
1504:Generated_Source\PSoC4/CyLib.c ****         *  The Automatic Gain Control (AGC) is disabled when the specified maximum
1505:Generated_Source\PSoC4/CyLib.c ****         *  amplitude level equals or above 2. In this case the amplitude is not
1506:Generated_Source\PSoC4/CyLib.c ****         *  explicitly controlled and will grow until it saturates to the supply rail
1507:Generated_Source\PSoC4/CyLib.c ****         *  (1.8V nom). WARNING: use care when disabling AGC because driving a crystal
1508:Generated_Source\PSoC4/CyLib.c ****         *  beyond its rated limit can permanently damage the crystal.
1509:Generated_Source\PSoC4/CyLib.c ****         *
1510:Generated_Source\PSoC4/CyLib.c ****         * \return \ref CYRET_SUCCESS ECO configuration completed successfully.
1511:Generated_Source\PSoC4/CyLib.c ****         * \return \ref CYRET_BAD_PARAM One or more invalid parameters.
1512:Generated_Source\PSoC4/CyLib.c ****         *
1513:Generated_Source\PSoC4/CyLib.c ****         *******************************************************************************/
1514:Generated_Source\PSoC4/CyLib.c ****         cystatus CySysClkConfigureEcoDrive(uint32 freq, uint32 cLoad, uint32 esr, uint32 maxAmplitu
1515:Generated_Source\PSoC4/CyLib.c ****         {
 1874              		.loc 1 1515 0
 1875              		.cfi_startproc
 1876              		@ args = 0, pretend = 0, frame = 48
 1877              		@ frame_needed = 1, uses_anonymous_args = 0
 1878 0000 90B5     		push	{r4, r7, lr}
ARM GAS  C:\Users\essele\AppData\Local\Temp\ccaJcTi8.s 			page 61


 1879              		.cfi_def_cfa_offset 12
 1880              		.cfi_offset 4, -12
 1881              		.cfi_offset 7, -8
 1882              		.cfi_offset 14, -4
 1883 0002 8FB0     		sub	sp, sp, #60
 1884              		.cfi_def_cfa_offset 72
 1885 0004 02AF     		add	r7, sp, #8
 1886              		.cfi_def_cfa 7, 64
 1887 0006 F860     		str	r0, [r7, #12]
 1888 0008 B960     		str	r1, [r7, #8]
 1889 000a 7A60     		str	r2, [r7, #4]
 1890 000c 3B60     		str	r3, [r7]
1516:Generated_Source\PSoC4/CyLib.c ****             cystatus returnStatus = CYRET_SUCCESS;
 1891              		.loc 1 1516 0
 1892 000e 0023     		movs	r3, #0
 1893 0010 FB62     		str	r3, [r7, #44]
1517:Generated_Source\PSoC4/CyLib.c **** 
1518:Generated_Source\PSoC4/CyLib.c ****             uint32 wDTrim;
1519:Generated_Source\PSoC4/CyLib.c ****             uint32 aTrim;
1520:Generated_Source\PSoC4/CyLib.c ****             uint32 fTrim;
1521:Generated_Source\PSoC4/CyLib.c ****             uint32 rTrim;
1522:Generated_Source\PSoC4/CyLib.c ****             uint32 gTrim;
1523:Generated_Source\PSoC4/CyLib.c **** 
1524:Generated_Source\PSoC4/CyLib.c ****             uint32 gmMin;
1525:Generated_Source\PSoC4/CyLib.c **** 
1526:Generated_Source\PSoC4/CyLib.c **** 
1527:Generated_Source\PSoC4/CyLib.c ****             if ((maxAmplitude < CY_SYS_CLK_ECO_MAX_AMPL_MIN_mV) ||
 1894              		.loc 1 1527 0
 1895 0012 3A68     		ldr	r2, [r7]
 1896 0014 F423     		movs	r3, #244
 1897 0016 FF33     		adds	r3, r3, #255
 1898 0018 9A42     		cmp	r2, r3
 1899 001a 07D9     		bls	.L124
 1900              		.loc 1 1527 0 is_stmt 0 discriminator 1
 1901 001c FB68     		ldr	r3, [r7, #12]
 1902 001e 634A     		ldr	r2, .L148
 1903 0020 9342     		cmp	r3, r2
 1904 0022 03D9     		bls	.L124
1528:Generated_Source\PSoC4/CyLib.c ****                 (freq < CY_SYS_CLK_ECO_FREQ_KHZ_MIN) || (freq > CY_SYS_CLK_ECO_FREQ_KHZ_MAX))
 1905              		.loc 1 1528 0 is_stmt 1
 1906 0024 FB68     		ldr	r3, [r7, #12]
 1907 0026 624A     		ldr	r2, .L148+4
 1908 0028 9342     		cmp	r3, r2
 1909 002a 02D9     		bls	.L125
 1910              	.L124:
1529:Generated_Source\PSoC4/CyLib.c ****             {
1530:Generated_Source\PSoC4/CyLib.c ****                 returnStatus = CYRET_BAD_PARAM;
 1911              		.loc 1 1530 0
 1912 002c 0123     		movs	r3, #1
 1913 002e FB62     		str	r3, [r7, #44]
 1914 0030 B6E0     		b	.L126
 1915              	.L125:
1531:Generated_Source\PSoC4/CyLib.c ****             }
1532:Generated_Source\PSoC4/CyLib.c ****             else
1533:Generated_Source\PSoC4/CyLib.c ****             {
1534:Generated_Source\PSoC4/CyLib.c ****                 /* Calculate amplitude trim */
1535:Generated_Source\PSoC4/CyLib.c ****                 aTrim = (maxAmplitude < CY_SYS_CLK_ECO_TRIM_BOUNDARY) ? ((maxAmplitude/100u) - 4u) 
ARM GAS  C:\Users\essele\AppData\Local\Temp\ccaJcTi8.s 			page 62


 1916              		.loc 1 1535 0
 1917 0032 3B68     		ldr	r3, [r7]
 1918 0034 5F4A     		ldr	r2, .L148+8
 1919 0036 9342     		cmp	r3, r2
 1920 0038 07D8     		bhi	.L127
 1921              		.loc 1 1535 0 is_stmt 0 discriminator 1
 1922 003a 3B68     		ldr	r3, [r7]
 1923 003c 6421     		movs	r1, #100
 1924 003e 1800     		movs	r0, r3
 1925 0040 FFF7FEFF 		bl	__aeabi_uidiv
 1926 0044 0300     		movs	r3, r0
 1927 0046 043B     		subs	r3, r3, #4
 1928 0048 00E0     		b	.L128
 1929              	.L127:
 1930              		.loc 1 1535 0 discriminator 2
 1931 004a 0723     		movs	r3, #7
 1932              	.L128:
 1933              		.loc 1 1535 0 discriminator 4
 1934 004c BB62     		str	r3, [r7, #40]
1536:Generated_Source\PSoC4/CyLib.c **** 
1537:Generated_Source\PSoC4/CyLib.c ****                 if (maxAmplitude < CY_SYS_CLK_ECO_AMPL_FOR_ATRIM0)
 1935              		.loc 1 1537 0 is_stmt 1 discriminator 4
 1936 004e 3B68     		ldr	r3, [r7]
 1937 0050 594A     		ldr	r2, .L148+12
 1938 0052 9342     		cmp	r3, r2
 1939 0054 02D8     		bhi	.L129
1538:Generated_Source\PSoC4/CyLib.c ****                 {
1539:Generated_Source\PSoC4/CyLib.c ****                     aTrim = CY_SYS_CLK_ECO_ATRIM0;
 1940              		.loc 1 1539 0
 1941 0056 0023     		movs	r3, #0
 1942 0058 BB62     		str	r3, [r7, #40]
 1943 005a 2CE0     		b	.L130
 1944              	.L129:
1540:Generated_Source\PSoC4/CyLib.c ****                 }
1541:Generated_Source\PSoC4/CyLib.c ****                 else if (maxAmplitude < CY_SYS_CLK_ECO_AMPL_FOR_ATRIM1)
 1945              		.loc 1 1541 0
 1946 005c 3B68     		ldr	r3, [r7]
 1947 005e 574A     		ldr	r2, .L148+16
 1948 0060 9342     		cmp	r3, r2
 1949 0062 02D8     		bhi	.L131
1542:Generated_Source\PSoC4/CyLib.c ****                 {
1543:Generated_Source\PSoC4/CyLib.c ****                     aTrim = CY_SYS_CLK_ECO_ATRIM1;
 1950              		.loc 1 1543 0
 1951 0064 0123     		movs	r3, #1
 1952 0066 BB62     		str	r3, [r7, #40]
 1953 0068 25E0     		b	.L130
 1954              	.L131:
1544:Generated_Source\PSoC4/CyLib.c ****                 }
1545:Generated_Source\PSoC4/CyLib.c ****                 else if (maxAmplitude < CY_SYS_CLK_ECO_AMPL_FOR_ATRIM2)
 1955              		.loc 1 1545 0
 1956 006a 3B68     		ldr	r3, [r7]
 1957 006c 544A     		ldr	r2, .L148+20
 1958 006e 9342     		cmp	r3, r2
 1959 0070 02D8     		bhi	.L132
1546:Generated_Source\PSoC4/CyLib.c ****                 {
1547:Generated_Source\PSoC4/CyLib.c ****                     aTrim = CY_SYS_CLK_ECO_ATRIM2;
 1960              		.loc 1 1547 0
ARM GAS  C:\Users\essele\AppData\Local\Temp\ccaJcTi8.s 			page 63


 1961 0072 0223     		movs	r3, #2
 1962 0074 BB62     		str	r3, [r7, #40]
 1963 0076 1EE0     		b	.L130
 1964              	.L132:
1548:Generated_Source\PSoC4/CyLib.c ****                 }
1549:Generated_Source\PSoC4/CyLib.c ****                 else if (maxAmplitude < CY_SYS_CLK_ECO_AMPL_FOR_ATRIM3)
 1965              		.loc 1 1549 0
 1966 0078 3B68     		ldr	r3, [r7]
 1967 007a 524A     		ldr	r2, .L148+24
 1968 007c 9342     		cmp	r3, r2
 1969 007e 02D8     		bhi	.L133
1550:Generated_Source\PSoC4/CyLib.c ****                 {
1551:Generated_Source\PSoC4/CyLib.c ****                     aTrim = CY_SYS_CLK_ECO_ATRIM3;
 1970              		.loc 1 1551 0
 1971 0080 0323     		movs	r3, #3
 1972 0082 BB62     		str	r3, [r7, #40]
 1973 0084 17E0     		b	.L130
 1974              	.L133:
1552:Generated_Source\PSoC4/CyLib.c ****                 }
1553:Generated_Source\PSoC4/CyLib.c ****                 else if (maxAmplitude < CY_SYS_CLK_ECO_AMPL_FOR_ATRIM4)
 1975              		.loc 1 1553 0
 1976 0086 3A68     		ldr	r2, [r7]
 1977 0088 8023     		movs	r3, #128
 1978 008a DB00     		lsls	r3, r3, #3
 1979 008c 9A42     		cmp	r2, r3
 1980 008e 02D8     		bhi	.L134
1554:Generated_Source\PSoC4/CyLib.c ****                 {
1555:Generated_Source\PSoC4/CyLib.c ****                     aTrim = CY_SYS_CLK_ECO_ATRIM4;
 1981              		.loc 1 1555 0
 1982 0090 0423     		movs	r3, #4
 1983 0092 BB62     		str	r3, [r7, #40]
 1984 0094 0FE0     		b	.L130
 1985              	.L134:
1556:Generated_Source\PSoC4/CyLib.c ****                 }
1557:Generated_Source\PSoC4/CyLib.c ****                 else if (maxAmplitude < CY_SYS_CLK_ECO_AMPL_FOR_ATRIM5)
 1986              		.loc 1 1557 0
 1987 0096 3B68     		ldr	r3, [r7]
 1988 0098 4B4A     		ldr	r2, .L148+28
 1989 009a 9342     		cmp	r3, r2
 1990 009c 02D8     		bhi	.L135
1558:Generated_Source\PSoC4/CyLib.c ****                 {
1559:Generated_Source\PSoC4/CyLib.c ****                     aTrim = CY_SYS_CLK_ECO_ATRIM5;
 1991              		.loc 1 1559 0
 1992 009e 0523     		movs	r3, #5
 1993 00a0 BB62     		str	r3, [r7, #40]
 1994 00a2 08E0     		b	.L130
 1995              	.L135:
1560:Generated_Source\PSoC4/CyLib.c ****                 }
1561:Generated_Source\PSoC4/CyLib.c ****                 else if (maxAmplitude < CY_SYS_CLK_ECO_AMPL_FOR_ATRIM6)
 1996              		.loc 1 1561 0
 1997 00a4 3B68     		ldr	r3, [r7]
 1998 00a6 494A     		ldr	r2, .L148+32
 1999 00a8 9342     		cmp	r3, r2
 2000 00aa 02D8     		bhi	.L136
1562:Generated_Source\PSoC4/CyLib.c ****                 {
1563:Generated_Source\PSoC4/CyLib.c ****                     aTrim = CY_SYS_CLK_ECO_ATRIM6;
 2001              		.loc 1 1563 0
ARM GAS  C:\Users\essele\AppData\Local\Temp\ccaJcTi8.s 			page 64


 2002 00ac 0623     		movs	r3, #6
 2003 00ae BB62     		str	r3, [r7, #40]
 2004 00b0 01E0     		b	.L130
 2005              	.L136:
1564:Generated_Source\PSoC4/CyLib.c ****                 }
1565:Generated_Source\PSoC4/CyLib.c ****                 else
1566:Generated_Source\PSoC4/CyLib.c ****                 {
1567:Generated_Source\PSoC4/CyLib.c ****                     aTrim = CY_SYS_CLK_ECO_ATRIM7;
 2006              		.loc 1 1567 0
 2007 00b2 0723     		movs	r3, #7
 2008 00b4 BB62     		str	r3, [r7, #40]
 2009              	.L130:
1568:Generated_Source\PSoC4/CyLib.c ****                 }
1569:Generated_Source\PSoC4/CyLib.c **** 
1570:Generated_Source\PSoC4/CyLib.c ****                 /* Calculate Watchdog trim. */
1571:Generated_Source\PSoC4/CyLib.c ****                 wDTrim = (maxAmplitude < CY_SYS_CLK_ECO_TRIM_BOUNDARY) ? ((maxAmplitude/200u) - 2u)
 2010              		.loc 1 1571 0
 2011 00b6 3B68     		ldr	r3, [r7]
 2012 00b8 3E4A     		ldr	r2, .L148+8
 2013 00ba 9342     		cmp	r3, r2
 2014 00bc 07D8     		bhi	.L137
 2015              		.loc 1 1571 0 is_stmt 0 discriminator 1
 2016 00be 3B68     		ldr	r3, [r7]
 2017 00c0 C821     		movs	r1, #200
 2018 00c2 1800     		movs	r0, r3
 2019 00c4 FFF7FEFF 		bl	__aeabi_uidiv
 2020 00c8 0300     		movs	r3, r0
 2021 00ca 023B     		subs	r3, r3, #2
 2022 00cc 00E0     		b	.L138
 2023              	.L137:
 2024              		.loc 1 1571 0 discriminator 2
 2025 00ce 0323     		movs	r3, #3
 2026              	.L138:
 2027              		.loc 1 1571 0 discriminator 4
 2028 00d0 FB61     		str	r3, [r7, #28]
1572:Generated_Source\PSoC4/CyLib.c **** 
1573:Generated_Source\PSoC4/CyLib.c ****                 /* Calculate amplifier gain trim. */
1574:Generated_Source\PSoC4/CyLib.c ****                 gmMin = (uint32) (((((CY_SYS_CLK_ECO_GMMIN_COEFFICIENT * freq * cLoad) / 1000) * ((
 2029              		.loc 1 1574 0 is_stmt 1 discriminator 4
 2030 00d2 FB68     		ldr	r3, [r7, #12]
 2031 00d4 BA68     		ldr	r2, [r7, #8]
 2032 00d6 5A43     		muls	r2, r3
 2033 00d8 1300     		movs	r3, r2
 2034 00da 9B00     		lsls	r3, r3, #2
 2035 00dc 9B18     		adds	r3, r3, r2
 2036 00de 1B01     		lsls	r3, r3, #4
 2037 00e0 9A1A     		subs	r2, r3, r2
 2038 00e2 FA23     		movs	r3, #250
 2039 00e4 9900     		lsls	r1, r3, #2
 2040 00e6 1000     		movs	r0, r2
 2041 00e8 FFF7FEFF 		bl	__aeabi_uidiv
 2042 00ec 0300     		movs	r3, r0
 2043 00ee 1C00     		movs	r4, r3
 2044 00f0 FB68     		ldr	r3, [r7, #12]
 2045 00f2 BA68     		ldr	r2, [r7, #8]
 2046 00f4 5343     		muls	r3, r2
 2047 00f6 7A68     		ldr	r2, [r7, #4]
ARM GAS  C:\Users\essele\AppData\Local\Temp\ccaJcTi8.s 			page 65


 2048 00f8 5A43     		muls	r2, r3
 2049 00fa FA23     		movs	r3, #250
 2050 00fc 9900     		lsls	r1, r3, #2
 2051 00fe 1000     		movs	r0, r2
 2052 0100 FFF7FEFF 		bl	__aeabi_uidiv
 2053 0104 0300     		movs	r3, r0
 2054 0106 6343     		muls	r3, r4
 2055 0108 3149     		ldr	r1, .L148+36
 2056 010a 1800     		movs	r0, r3
 2057 010c FFF7FEFF 		bl	__aeabi_uidiv
 2058 0110 0300     		movs	r3, r0
 2059 0112 BB61     		str	r3, [r7, #24]
1575:Generated_Source\PSoC4/CyLib.c ****                 if (gmMin > 3u)
 2060              		.loc 1 1575 0 discriminator 4
 2061 0114 BB69     		ldr	r3, [r7, #24]
 2062 0116 032B     		cmp	r3, #3
 2063 0118 04D9     		bls	.L139
1576:Generated_Source\PSoC4/CyLib.c ****                 {
1577:Generated_Source\PSoC4/CyLib.c ****                     returnStatus = CYRET_BAD_PARAM;
 2064              		.loc 1 1577 0
 2065 011a 0123     		movs	r3, #1
 2066 011c FB62     		str	r3, [r7, #44]
1578:Generated_Source\PSoC4/CyLib.c ****                     gTrim = 0u;
 2067              		.loc 1 1578 0
 2068 011e 0023     		movs	r3, #0
 2069 0120 3B62     		str	r3, [r7, #32]
 2070 0122 0BE0     		b	.L140
 2071              	.L139:
1579:Generated_Source\PSoC4/CyLib.c ****                 }
1580:Generated_Source\PSoC4/CyLib.c ****                 else if (gmMin > 1u)
 2072              		.loc 1 1580 0
 2073 0124 BB69     		ldr	r3, [r7, #24]
 2074 0126 012B     		cmp	r3, #1
 2075 0128 02D9     		bls	.L141
1581:Generated_Source\PSoC4/CyLib.c ****                 {
1582:Generated_Source\PSoC4/CyLib.c ****                     gTrim = gmMin;
 2076              		.loc 1 1582 0
 2077 012a BB69     		ldr	r3, [r7, #24]
 2078 012c 3B62     		str	r3, [r7, #32]
 2079 012e 05E0     		b	.L140
 2080              	.L141:
1583:Generated_Source\PSoC4/CyLib.c ****                 }
1584:Generated_Source\PSoC4/CyLib.c ****                 else
1585:Generated_Source\PSoC4/CyLib.c ****                 {
1586:Generated_Source\PSoC4/CyLib.c ****                     gTrim = (gmMin == 1u) ? 0u : 1u;
 2081              		.loc 1 1586 0
 2082 0130 BB69     		ldr	r3, [r7, #24]
 2083 0132 013B     		subs	r3, r3, #1
 2084 0134 5A1E     		subs	r2, r3, #1
 2085 0136 9341     		sbcs	r3, r3, r2
 2086 0138 DBB2     		uxtb	r3, r3
 2087 013a 3B62     		str	r3, [r7, #32]
 2088              	.L140:
1587:Generated_Source\PSoC4/CyLib.c ****                 }
1588:Generated_Source\PSoC4/CyLib.c **** 
1589:Generated_Source\PSoC4/CyLib.c ****                 /* Calculate feedback resistor trim */
1590:Generated_Source\PSoC4/CyLib.c ****                 if (freq > CY_SYS_CLK_ECO_FREQ_FOR_FTRIM0)
ARM GAS  C:\Users\essele\AppData\Local\Temp\ccaJcTi8.s 			page 66


 2089              		.loc 1 1590 0
 2090 013c FB68     		ldr	r3, [r7, #12]
 2091 013e 254A     		ldr	r2, .L148+40
 2092 0140 9342     		cmp	r3, r2
 2093 0142 02D9     		bls	.L142
1591:Generated_Source\PSoC4/CyLib.c ****                 {
1592:Generated_Source\PSoC4/CyLib.c ****                     rTrim = CY_SYS_CLK_ECO_FTRIM0;
 2094              		.loc 1 1592 0
 2095 0144 0023     		movs	r3, #0
 2096 0146 7B62     		str	r3, [r7, #36]
 2097 0148 0FE0     		b	.L143
 2098              	.L142:
1593:Generated_Source\PSoC4/CyLib.c ****                 }
1594:Generated_Source\PSoC4/CyLib.c ****                 else if (freq > CY_SYS_CLK_ECO_FREQ_FOR_FTRIM1)
 2099              		.loc 1 1594 0
 2100 014a FB68     		ldr	r3, [r7, #12]
 2101 014c 224A     		ldr	r2, .L148+44
 2102 014e 9342     		cmp	r3, r2
 2103 0150 02D9     		bls	.L144
1595:Generated_Source\PSoC4/CyLib.c ****                 {
1596:Generated_Source\PSoC4/CyLib.c ****                     rTrim = CY_SYS_CLK_ECO_FTRIM1;
 2104              		.loc 1 1596 0
 2105 0152 0123     		movs	r3, #1
 2106 0154 7B62     		str	r3, [r7, #36]
 2107 0156 08E0     		b	.L143
 2108              	.L144:
1597:Generated_Source\PSoC4/CyLib.c ****                 }
1598:Generated_Source\PSoC4/CyLib.c ****                 else if (freq > CY_SYS_CLK_ECO_FREQ_FOR_FTRIM2)
 2109              		.loc 1 1598 0
 2110 0158 FB68     		ldr	r3, [r7, #12]
 2111 015a 204A     		ldr	r2, .L148+48
 2112 015c 9342     		cmp	r3, r2
 2113 015e 02D9     		bls	.L145
1599:Generated_Source\PSoC4/CyLib.c ****                 {
1600:Generated_Source\PSoC4/CyLib.c ****                     rTrim = CY_SYS_CLK_ECO_FTRIM2;
 2114              		.loc 1 1600 0
 2115 0160 0223     		movs	r3, #2
 2116 0162 7B62     		str	r3, [r7, #36]
 2117 0164 01E0     		b	.L143
 2118              	.L145:
1601:Generated_Source\PSoC4/CyLib.c ****                 }
1602:Generated_Source\PSoC4/CyLib.c ****                 else
1603:Generated_Source\PSoC4/CyLib.c ****                 {
1604:Generated_Source\PSoC4/CyLib.c ****                     rTrim = CY_SYS_CLK_ECO_FTRIM3;
 2119              		.loc 1 1604 0
 2120 0166 0323     		movs	r3, #3
 2121 0168 7B62     		str	r3, [r7, #36]
 2122              	.L143:
1605:Generated_Source\PSoC4/CyLib.c ****                 }
1606:Generated_Source\PSoC4/CyLib.c **** 
1607:Generated_Source\PSoC4/CyLib.c ****                 /* Calculate filter frequency trim */
1608:Generated_Source\PSoC4/CyLib.c ****                 fTrim = rTrim;
 2123              		.loc 1 1608 0
 2124 016a 7B6A     		ldr	r3, [r7, #36]
 2125 016c 7B61     		str	r3, [r7, #20]
1609:Generated_Source\PSoC4/CyLib.c **** 
1610:Generated_Source\PSoC4/CyLib.c ****                 CySysClkConfigureEcoTrim(wDTrim, aTrim, fTrim, rTrim, gTrim);
ARM GAS  C:\Users\essele\AppData\Local\Temp\ccaJcTi8.s 			page 67


 2126              		.loc 1 1610 0
 2127 016e 7C6A     		ldr	r4, [r7, #36]
 2128 0170 7A69     		ldr	r2, [r7, #20]
 2129 0172 B96A     		ldr	r1, [r7, #40]
 2130 0174 F869     		ldr	r0, [r7, #28]
 2131 0176 3B6A     		ldr	r3, [r7, #32]
 2132 0178 0093     		str	r3, [sp]
 2133 017a 2300     		movs	r3, r4
 2134 017c FFF7FEFF 		bl	CySysClkConfigureEcoTrim
1611:Generated_Source\PSoC4/CyLib.c **** 
1612:Generated_Source\PSoC4/CyLib.c ****                 /* Automatic Gain Control (AGC) enable */
1613:Generated_Source\PSoC4/CyLib.c ****                 if (maxAmplitude < 2u)
 2135              		.loc 1 1613 0
 2136 0180 3B68     		ldr	r3, [r7]
 2137 0182 012B     		cmp	r3, #1
 2138 0184 06D8     		bhi	.L146
1614:Generated_Source\PSoC4/CyLib.c ****                 {
1615:Generated_Source\PSoC4/CyLib.c ****                     /* The oscillation amplitude is controlled to the level selected by amplitude t
1616:Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_CLK_ECO_CONFIG_REG |= CY_SYS_CLK_ECO_CONFIG_AGC_EN;
 2139              		.loc 1 1616 0
 2140 0186 164B     		ldr	r3, .L148+52
 2141 0188 154A     		ldr	r2, .L148+52
 2142 018a 1268     		ldr	r2, [r2]
 2143 018c 0221     		movs	r1, #2
 2144 018e 0A43     		orrs	r2, r1
 2145 0190 1A60     		str	r2, [r3]
 2146 0192 05E0     		b	.L126
 2147              	.L146:
1617:Generated_Source\PSoC4/CyLib.c ****                 }
1618:Generated_Source\PSoC4/CyLib.c ****                 else
1619:Generated_Source\PSoC4/CyLib.c ****                 {
1620:Generated_Source\PSoC4/CyLib.c ****                     /* The amplitude is not explicitly controlled and will grow until it saturates 
1621:Generated_Source\PSoC4/CyLib.c ****                     * supply rail (1.8V nom).
1622:Generated_Source\PSoC4/CyLib.c ****                     */
1623:Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_CLK_ECO_CONFIG_REG &= (uint32) ~CY_SYS_CLK_ECO_CONFIG_AGC_EN;
 2148              		.loc 1 1623 0
 2149 0194 124B     		ldr	r3, .L148+52
 2150 0196 124A     		ldr	r2, .L148+52
 2151 0198 1268     		ldr	r2, [r2]
 2152 019a 0221     		movs	r1, #2
 2153 019c 8A43     		bics	r2, r1
 2154 019e 1A60     		str	r2, [r3]
 2155              	.L126:
1624:Generated_Source\PSoC4/CyLib.c ****                 }
1625:Generated_Source\PSoC4/CyLib.c ****             }
1626:Generated_Source\PSoC4/CyLib.c **** 
1627:Generated_Source\PSoC4/CyLib.c ****             return (returnStatus);
 2156              		.loc 1 1627 0
 2157 01a0 FB6A     		ldr	r3, [r7, #44]
1628:Generated_Source\PSoC4/CyLib.c ****         }
 2158              		.loc 1 1628 0
 2159 01a2 1800     		movs	r0, r3
 2160 01a4 BD46     		mov	sp, r7
 2161 01a6 0DB0     		add	sp, sp, #52
 2162              		@ sp needed
 2163 01a8 90BD     		pop	{r4, r7, pc}
 2164              	.L149:
ARM GAS  C:\Users\essele\AppData\Local\Temp\ccaJcTi8.s 			page 68


 2165 01aa C046     		.align	2
 2166              	.L148:
 2167 01ac 9F0F0000 		.word	3999
 2168 01b0 35820000 		.word	33333
 2169 01b4 AF040000 		.word	1199
 2170 01b8 57020000 		.word	599
 2171 01bc BB020000 		.word	699
 2172 01c0 1F030000 		.word	799
 2173 01c4 83030000 		.word	899
 2174 01c8 7D040000 		.word	1149
 2175 01cc FA040000 		.word	1274
 2176 01d0 8074D21A 		.word	450000000
 2177 01d4 30750000 		.word	30000
 2178 01d8 C05D0000 		.word	24000
 2179 01dc 68420000 		.word	17000
 2180 01e0 08000C40 		.word	1074528264
 2181              		.cfi_endproc
 2182              	.LFE18:
 2183              		.size	CySysClkConfigureEcoDrive, .-CySysClkConfigureEcoDrive
 2184              		.section	.text.CySysClkPllStart,"ax",%progbits
 2185              		.align	2
 2186              		.global	CySysClkPllStart
 2187              		.code	16
 2188              		.thumb_func
 2189              		.type	CySysClkPllStart, %function
 2190              	CySysClkPllStart:
 2191              	.LFB19:
1629:Generated_Source\PSoC4/CyLib.c **** 
1630:Generated_Source\PSoC4/CyLib.c ****     #endif /* CY_IP_ECO_BLESS */
1631:Generated_Source\PSoC4/CyLib.c **** 
1632:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_ECO) */
1633:Generated_Source\PSoC4/CyLib.c **** 
1634:Generated_Source\PSoC4/CyLib.c **** 
1635:Generated_Source\PSoC4/CyLib.c **** #if (CY_IP_PLL)
1636:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1637:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllStart
1638:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1639:Generated_Source\PSoC4/CyLib.c ****     *
1640:Generated_Source\PSoC4/CyLib.c ****     * Enables the PLL. Optionally waits for it to become stable. Waits at least
1641:Generated_Source\PSoC4/CyLib.c ****     * 250 us or until it is detected that the PLL is stable.
1642:Generated_Source\PSoC4/CyLib.c ****     *
1643:Generated_Source\PSoC4/CyLib.c ****     * Clears the unlock occurred status bit by calling CySysClkPllGetUnlockStatus(),
1644:Generated_Source\PSoC4/CyLib.c ****     * once the PLL is locked if the wait parameter is 1).
1645:Generated_Source\PSoC4/CyLib.c ****     *
1646:Generated_Source\PSoC4/CyLib.c ****     * This API is available only for PSoC 4200L / 4100S with PLL devices.
1647:Generated_Source\PSoC4/CyLib.c ****     *
1648:Generated_Source\PSoC4/CyLib.c ****     * \param PLL:
1649:Generated_Source\PSoC4/CyLib.c ****     * 0   PLL#0
1650:Generated_Source\PSoC4/CyLib.c ****     * 1   PLL#1 (available only for PSoC 4200L)
1651:Generated_Source\PSoC4/CyLib.c ****     *
1652:Generated_Source\PSoC4/CyLib.c ****     * \param wait:
1653:Generated_Source\PSoC4/CyLib.c ****     * 0 - Return immediately after configuration.
1654:Generated_Source\PSoC4/CyLib.c ****     * 1 - Wait for PLL lock or timeout. This API shall use the CyDelayUs() to
1655:Generated_Source\PSoC4/CyLib.c ****     * implement the timeout feature.
1656:Generated_Source\PSoC4/CyLib.c ****     *
1657:Generated_Source\PSoC4/CyLib.c ****     * \return CYRET_SUCCESS Completed successfully.
1658:Generated_Source\PSoC4/CyLib.c ****     * \return CYRET_TIMEOUT The timeout occurred without detecting a stable clock.
ARM GAS  C:\Users\essele\AppData\Local\Temp\ccaJcTi8.s 			page 69


1659:Generated_Source\PSoC4/CyLib.c ****     * If the input source of the clock is jittery, then the lock indication may
1660:Generated_Source\PSoC4/CyLib.c ****     * not occur. However, after the timeout has expired, the generated PLL clock can
1661:Generated_Source\PSoC4/CyLib.c ****     * still be used.
1662:Generated_Source\PSoC4/CyLib.c ****     * \return CYRET_BAD_PARAM - Either the PLL or wait parameter is invalid.
1663:Generated_Source\PSoC4/CyLib.c ****     *
1664:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1665:Generated_Source\PSoC4/CyLib.c ****     cystatus CySysClkPllStart(uint32 pll, uint32 wait)
1666:Generated_Source\PSoC4/CyLib.c ****     {
 2192              		.loc 1 1666 0
 2193              		.cfi_startproc
 2194              		@ args = 0, pretend = 0, frame = 24
 2195              		@ frame_needed = 1, uses_anonymous_args = 0
 2196 0000 90B5     		push	{r4, r7, lr}
 2197              		.cfi_def_cfa_offset 12
 2198              		.cfi_offset 4, -12
 2199              		.cfi_offset 7, -8
 2200              		.cfi_offset 14, -4
 2201 0002 87B0     		sub	sp, sp, #28
 2202              		.cfi_def_cfa_offset 40
 2203 0004 00AF     		add	r7, sp, #0
 2204              		.cfi_def_cfa_register 7
 2205 0006 7860     		str	r0, [r7, #4]
 2206 0008 3960     		str	r1, [r7]
1667:Generated_Source\PSoC4/CyLib.c ****         uint32 counts = CY_SYS_CLK_PLL_MAX_STARTUP_US;
 2207              		.loc 1 1667 0
 2208 000a FF23     		movs	r3, #255
 2209 000c 7B61     		str	r3, [r7, #20]
1668:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
1669:Generated_Source\PSoC4/CyLib.c ****         cystatus returnStatus = CYRET_SUCCESS;
 2210              		.loc 1 1669 0
 2211 000e 0023     		movs	r3, #0
 2212 0010 3B61     		str	r3, [r7, #16]
1670:Generated_Source\PSoC4/CyLib.c **** 
1671:Generated_Source\PSoC4/CyLib.c ****         if((pll < CY_IP_PLL_NR) && (wait <= 1u))
 2213              		.loc 1 1671 0
 2214 0012 7B68     		ldr	r3, [r7, #4]
 2215 0014 012B     		cmp	r3, #1
 2216 0016 70D8     		bhi	.L151
 2217              		.loc 1 1671 0 is_stmt 0 discriminator 1
 2218 0018 3B68     		ldr	r3, [r7]
 2219 001a 012B     		cmp	r3, #1
 2220 001c 6DD8     		bhi	.L151
1672:Generated_Source\PSoC4/CyLib.c ****         {
1673:Generated_Source\PSoC4/CyLib.c ****             interruptState = CyEnterCriticalSection();
 2221              		.loc 1 1673 0 is_stmt 1
 2222 001e 0F23     		movs	r3, #15
 2223 0020 FC18     		adds	r4, r7, r3
 2224 0022 FFF7FEFF 		bl	CyEnterCriticalSection
 2225 0026 0300     		movs	r3, r0
 2226 0028 2370     		strb	r3, [r4]
1674:Generated_Source\PSoC4/CyLib.c **** 
1675:Generated_Source\PSoC4/CyLib.c ****             /* Isolate PLL outputs */
1676:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_PLL_BASE.pll[pll].config &= (uint32) ~CY_SYS_CLK_PLL_CONFIG_ISOLATE;
 2227              		.loc 1 1676 0
 2228 002a 3748     		ldr	r0, .L158
 2229 002c 3649     		ldr	r1, .L158
 2230 002e 7A68     		ldr	r2, [r7, #4]
ARM GAS  C:\Users\essele\AppData\Local\Temp\ccaJcTi8.s 			page 70


 2231 0030 1300     		movs	r3, r2
 2232 0032 5B00     		lsls	r3, r3, #1
 2233 0034 9B18     		adds	r3, r3, r2
 2234 0036 9B00     		lsls	r3, r3, #2
 2235 0038 5B58     		ldr	r3, [r3, r1]
 2236 003a 344A     		ldr	r2, .L158+4
 2237 003c 1340     		ands	r3, r2
 2238 003e 1900     		movs	r1, r3
 2239 0040 7A68     		ldr	r2, [r7, #4]
 2240 0042 1300     		movs	r3, r2
 2241 0044 5B00     		lsls	r3, r3, #1
 2242 0046 9B18     		adds	r3, r3, r2
 2243 0048 9B00     		lsls	r3, r3, #2
 2244 004a 1950     		str	r1, [r3, r0]
1677:Generated_Source\PSoC4/CyLib.c **** 
1678:Generated_Source\PSoC4/CyLib.c ****             /* Enable PLL */
1679:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_PLL_BASE.pll[pll].config |= CY_SYS_CLK_PLL_CONFIG_ENABLE;
 2245              		.loc 1 1679 0
 2246 004c 2E48     		ldr	r0, .L158
 2247 004e 2E49     		ldr	r1, .L158
 2248 0050 7A68     		ldr	r2, [r7, #4]
 2249 0052 1300     		movs	r3, r2
 2250 0054 5B00     		lsls	r3, r3, #1
 2251 0056 9B18     		adds	r3, r3, r2
 2252 0058 9B00     		lsls	r3, r3, #2
 2253 005a 5B58     		ldr	r3, [r3, r1]
 2254 005c 8022     		movs	r2, #128
 2255 005e 1206     		lsls	r2, r2, #24
 2256 0060 1A43     		orrs	r2, r3
 2257 0062 1100     		movs	r1, r2
 2258 0064 7A68     		ldr	r2, [r7, #4]
 2259 0066 1300     		movs	r3, r2
 2260 0068 5B00     		lsls	r3, r3, #1
 2261 006a 9B18     		adds	r3, r3, r2
 2262 006c 9B00     		lsls	r3, r3, #2
 2263 006e 1950     		str	r1, [r3, r0]
1680:Generated_Source\PSoC4/CyLib.c **** 
1681:Generated_Source\PSoC4/CyLib.c ****             CyExitCriticalSection(interruptState);
 2264              		.loc 1 1681 0
 2265 0070 0F23     		movs	r3, #15
 2266 0072 FB18     		adds	r3, r7, r3
 2267 0074 1B78     		ldrb	r3, [r3]
 2268 0076 1800     		movs	r0, r3
 2269 0078 FFF7FEFF 		bl	CyExitCriticalSection
1682:Generated_Source\PSoC4/CyLib.c **** 
1683:Generated_Source\PSoC4/CyLib.c ****             /* De-isolate >= CY_SYS_CLK_PLL_MIN_STARTUP_US after PLL enabled */
1684:Generated_Source\PSoC4/CyLib.c ****             CyDelayUs(CY_SYS_CLK_PLL_MIN_STARTUP_US);
 2270              		.loc 1 1684 0
 2271 007c 0520     		movs	r0, #5
 2272 007e FFF7FEFF 		bl	CyDelayUs
1685:Generated_Source\PSoC4/CyLib.c ****             interruptState = CyEnterCriticalSection();
 2273              		.loc 1 1685 0
 2274 0082 0F23     		movs	r3, #15
 2275 0084 FC18     		adds	r4, r7, r3
 2276 0086 FFF7FEFF 		bl	CyEnterCriticalSection
 2277 008a 0300     		movs	r3, r0
 2278 008c 2370     		strb	r3, [r4]
ARM GAS  C:\Users\essele\AppData\Local\Temp\ccaJcTi8.s 			page 71


1686:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_PLL_BASE.pll[pll].config |= CY_SYS_CLK_PLL_CONFIG_ISOLATE;
 2279              		.loc 1 1686 0
 2280 008e 1E48     		ldr	r0, .L158
 2281 0090 1D49     		ldr	r1, .L158
 2282 0092 7A68     		ldr	r2, [r7, #4]
 2283 0094 1300     		movs	r3, r2
 2284 0096 5B00     		lsls	r3, r3, #1
 2285 0098 9B18     		adds	r3, r3, r2
 2286 009a 9B00     		lsls	r3, r3, #2
 2287 009c 5B58     		ldr	r3, [r3, r1]
 2288 009e 8022     		movs	r2, #128
 2289 00a0 D205     		lsls	r2, r2, #23
 2290 00a2 1A43     		orrs	r2, r3
 2291 00a4 1100     		movs	r1, r2
 2292 00a6 7A68     		ldr	r2, [r7, #4]
 2293 00a8 1300     		movs	r3, r2
 2294 00aa 5B00     		lsls	r3, r3, #1
 2295 00ac 9B18     		adds	r3, r3, r2
 2296 00ae 9B00     		lsls	r3, r3, #2
 2297 00b0 1950     		str	r1, [r3, r0]
1687:Generated_Source\PSoC4/CyLib.c ****             CyExitCriticalSection(interruptState);
 2298              		.loc 1 1687 0
 2299 00b2 0F23     		movs	r3, #15
 2300 00b4 FB18     		adds	r3, r7, r3
 2301 00b6 1B78     		ldrb	r3, [r3]
 2302 00b8 1800     		movs	r0, r3
 2303 00ba FFF7FEFF 		bl	CyExitCriticalSection
1688:Generated_Source\PSoC4/CyLib.c **** 
1689:Generated_Source\PSoC4/CyLib.c ****             if(wait != 0u)
 2304              		.loc 1 1689 0
 2305 00be 3B68     		ldr	r3, [r7]
 2306 00c0 002B     		cmp	r3, #0
 2307 00c2 1CD0     		beq	.L156
1690:Generated_Source\PSoC4/CyLib.c ****             {
1691:Generated_Source\PSoC4/CyLib.c ****                 returnStatus = CYRET_TIMEOUT;
 2308              		.loc 1 1691 0
 2309 00c4 1023     		movs	r3, #16
 2310 00c6 3B61     		str	r3, [r7, #16]
1692:Generated_Source\PSoC4/CyLib.c **** 
1693:Generated_Source\PSoC4/CyLib.c ****                 while(0u != counts)
 2311              		.loc 1 1693 0
 2312 00c8 13E0     		b	.L153
 2313              	.L155:
1694:Generated_Source\PSoC4/CyLib.c ****                 {
1695:Generated_Source\PSoC4/CyLib.c **** 
1696:Generated_Source\PSoC4/CyLib.c ****                     if(0u != CySysClkPllGetLockStatus(pll))
 2314              		.loc 1 1696 0
 2315 00ca 7B68     		ldr	r3, [r7, #4]
 2316 00cc 1800     		movs	r0, r3
 2317 00ce FFF7FEFF 		bl	CySysClkPllGetLockStatus
 2318 00d2 031E     		subs	r3, r0, #0
 2319 00d4 07D0     		beq	.L154
1697:Generated_Source\PSoC4/CyLib.c ****                     {
1698:Generated_Source\PSoC4/CyLib.c ****                         returnStatus = CYRET_SUCCESS;
 2320              		.loc 1 1698 0
 2321 00d6 0023     		movs	r3, #0
 2322 00d8 3B61     		str	r3, [r7, #16]
ARM GAS  C:\Users\essele\AppData\Local\Temp\ccaJcTi8.s 			page 72


1699:Generated_Source\PSoC4/CyLib.c ****                         (void) CySysClkPllGetUnlockStatus(pll);
 2323              		.loc 1 1699 0
 2324 00da 7B68     		ldr	r3, [r7, #4]
 2325 00dc 1800     		movs	r0, r3
 2326 00de FFF7FEFF 		bl	CySysClkPllGetUnlockStatus
1700:Generated_Source\PSoC4/CyLib.c ****                         break;
 2327              		.loc 1 1700 0
 2328 00e2 C046     		nop
1689:Generated_Source\PSoC4/CyLib.c ****             {
 2329              		.loc 1 1689 0
 2330 00e4 0BE0     		b	.L156
 2331              	.L154:
1701:Generated_Source\PSoC4/CyLib.c ****                     }
1702:Generated_Source\PSoC4/CyLib.c **** 
1703:Generated_Source\PSoC4/CyLib.c ****                     CyDelayUs(1u);
 2332              		.loc 1 1703 0
 2333 00e6 0120     		movs	r0, #1
 2334 00e8 FFF7FEFF 		bl	CyDelayUs
1704:Generated_Source\PSoC4/CyLib.c ****                     counts--;
 2335              		.loc 1 1704 0
 2336 00ec 7B69     		ldr	r3, [r7, #20]
 2337 00ee 013B     		subs	r3, r3, #1
 2338 00f0 7B61     		str	r3, [r7, #20]
 2339              	.L153:
1693:Generated_Source\PSoC4/CyLib.c ****                 {
 2340              		.loc 1 1693 0
 2341 00f2 7B69     		ldr	r3, [r7, #20]
 2342 00f4 002B     		cmp	r3, #0
 2343 00f6 E8D1     		bne	.L155
1689:Generated_Source\PSoC4/CyLib.c ****             {
 2344              		.loc 1 1689 0
 2345 00f8 01E0     		b	.L156
 2346              	.L151:
1705:Generated_Source\PSoC4/CyLib.c ****                 }
1706:Generated_Source\PSoC4/CyLib.c ****             }
1707:Generated_Source\PSoC4/CyLib.c ****         }
1708:Generated_Source\PSoC4/CyLib.c ****         else
1709:Generated_Source\PSoC4/CyLib.c ****         {
1710:Generated_Source\PSoC4/CyLib.c ****             returnStatus = CYRET_BAD_PARAM;
 2347              		.loc 1 1710 0
 2348 00fa 0123     		movs	r3, #1
 2349 00fc 3B61     		str	r3, [r7, #16]
 2350              	.L156:
1711:Generated_Source\PSoC4/CyLib.c ****         }
1712:Generated_Source\PSoC4/CyLib.c **** 
1713:Generated_Source\PSoC4/CyLib.c ****         return (returnStatus);
 2351              		.loc 1 1713 0
 2352 00fe 3B69     		ldr	r3, [r7, #16]
1714:Generated_Source\PSoC4/CyLib.c ****     }
 2353              		.loc 1 1714 0
 2354 0100 1800     		movs	r0, r3
 2355 0102 BD46     		mov	sp, r7
 2356 0104 07B0     		add	sp, sp, #28
 2357              		@ sp needed
 2358 0106 90BD     		pop	{r4, r7, pc}
 2359              	.L159:
 2360              		.align	2
ARM GAS  C:\Users\essele\AppData\Local\Temp\ccaJcTi8.s 			page 73


 2361              	.L158:
 2362 0108 14000C40 		.word	1074528276
 2363 010c FFFFFFBF 		.word	-1073741825
 2364              		.cfi_endproc
 2365              	.LFE19:
 2366              		.size	CySysClkPllStart, .-CySysClkPllStart
 2367              		.section	.text.CySysClkPllGetLockStatus,"ax",%progbits
 2368              		.align	2
 2369              		.global	CySysClkPllGetLockStatus
 2370              		.code	16
 2371              		.thumb_func
 2372              		.type	CySysClkPllGetLockStatus, %function
 2373              	CySysClkPllGetLockStatus:
 2374              	.LFB20:
1715:Generated_Source\PSoC4/CyLib.c **** 
1716:Generated_Source\PSoC4/CyLib.c **** 
1717:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1718:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllGetLockStatus
1719:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1720:Generated_Source\PSoC4/CyLib.c ****     *
1721:Generated_Source\PSoC4/CyLib.c ****     * Returns non-zero if the output of the specified PLL output is locked.
1722:Generated_Source\PSoC4/CyLib.c ****     *
1723:Generated_Source\PSoC4/CyLib.c ****     * This API is available only for PSoC 4200L / 4100S with PLL devices.
1724:Generated_Source\PSoC4/CyLib.c ****     *
1725:Generated_Source\PSoC4/CyLib.c ****     * PLL:
1726:Generated_Source\PSoC4/CyLib.c ****     *  0   PLL#0
1727:Generated_Source\PSoC4/CyLib.c ****     *  1   PLL#1 (available only for PSoC 4200L)
1728:Generated_Source\PSoC4/CyLib.c ****     *
1729:Generated_Source\PSoC4/CyLib.c ****     * \return A non-zero value when the specified PLL is locked.
1730:Generated_Source\PSoC4/CyLib.c ****     *
1731:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1732:Generated_Source\PSoC4/CyLib.c ****     uint32 CySysClkPllGetLockStatus(uint32 pll)
1733:Generated_Source\PSoC4/CyLib.c ****     {
 2375              		.loc 1 1733 0
 2376              		.cfi_startproc
 2377              		@ args = 0, pretend = 0, frame = 16
 2378              		@ frame_needed = 1, uses_anonymous_args = 0
 2379 0000 90B5     		push	{r4, r7, lr}
 2380              		.cfi_def_cfa_offset 12
 2381              		.cfi_offset 4, -12
 2382              		.cfi_offset 7, -8
 2383              		.cfi_offset 14, -4
 2384 0002 85B0     		sub	sp, sp, #20
 2385              		.cfi_def_cfa_offset 32
 2386 0004 00AF     		add	r7, sp, #0
 2387              		.cfi_def_cfa_register 7
 2388 0006 7860     		str	r0, [r7, #4]
1734:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
1735:Generated_Source\PSoC4/CyLib.c ****         uint32 returnStatus;
1736:Generated_Source\PSoC4/CyLib.c **** 
1737:Generated_Source\PSoC4/CyLib.c ****         CYASSERT(pll < CY_IP_PLL_NR);
 2389              		.loc 1 1737 0
 2390 0008 7B68     		ldr	r3, [r7, #4]
 2391 000a 012B     		cmp	r3, #1
 2392 000c 02D9     		bls	.L161
 2393              		.loc 1 1737 0 is_stmt 0 discriminator 1
 2394 000e 0020     		movs	r0, #0
ARM GAS  C:\Users\essele\AppData\Local\Temp\ccaJcTi8.s 			page 74


 2395 0010 FFF7FEFF 		bl	CyHalt
 2396              	.L161:
1738:Generated_Source\PSoC4/CyLib.c **** 
1739:Generated_Source\PSoC4/CyLib.c ****         interruptState = CyEnterCriticalSection();
 2397              		.loc 1 1739 0 is_stmt 1
 2398 0014 0B23     		movs	r3, #11
 2399 0016 FC18     		adds	r4, r7, r3
 2400 0018 FFF7FEFF 		bl	CyEnterCriticalSection
 2401 001c 0300     		movs	r3, r0
 2402 001e 2370     		strb	r3, [r4]
1740:Generated_Source\PSoC4/CyLib.c **** 
1741:Generated_Source\PSoC4/CyLib.c ****         /* PLL is locked if reported so for two consecutive read. */
1742:Generated_Source\PSoC4/CyLib.c ****         returnStatus = CY_SYS_CLK_PLL_BASE.pll[pll].status & CY_SYS_CLK_PLL_STATUS_LOCKED;
 2403              		.loc 1 1742 0
 2404 0020 1249     		ldr	r1, .L164
 2405 0022 7A68     		ldr	r2, [r7, #4]
 2406 0024 1300     		movs	r3, r2
 2407 0026 5B00     		lsls	r3, r3, #1
 2408 0028 9B18     		adds	r3, r3, r2
 2409 002a 9B00     		lsls	r3, r3, #2
 2410 002c CB18     		adds	r3, r1, r3
 2411 002e 0433     		adds	r3, r3, #4
 2412 0030 1B68     		ldr	r3, [r3]
 2413 0032 0122     		movs	r2, #1
 2414 0034 1340     		ands	r3, r2
 2415 0036 FB60     		str	r3, [r7, #12]
1743:Generated_Source\PSoC4/CyLib.c ****         if(0u != returnStatus)
 2416              		.loc 1 1743 0
 2417 0038 FB68     		ldr	r3, [r7, #12]
 2418 003a 002B     		cmp	r3, #0
 2419 003c 0BD0     		beq	.L162
1744:Generated_Source\PSoC4/CyLib.c ****         {
1745:Generated_Source\PSoC4/CyLib.c ****             returnStatus = CY_SYS_CLK_PLL_BASE.pll[pll].status & CY_SYS_CLK_PLL_STATUS_LOCKED;
 2420              		.loc 1 1745 0
 2421 003e 0B49     		ldr	r1, .L164
 2422 0040 7A68     		ldr	r2, [r7, #4]
 2423 0042 1300     		movs	r3, r2
 2424 0044 5B00     		lsls	r3, r3, #1
 2425 0046 9B18     		adds	r3, r3, r2
 2426 0048 9B00     		lsls	r3, r3, #2
 2427 004a CB18     		adds	r3, r1, r3
 2428 004c 0433     		adds	r3, r3, #4
 2429 004e 1B68     		ldr	r3, [r3]
 2430 0050 0122     		movs	r2, #1
 2431 0052 1340     		ands	r3, r2
 2432 0054 FB60     		str	r3, [r7, #12]
 2433              	.L162:
1746:Generated_Source\PSoC4/CyLib.c ****         }
1747:Generated_Source\PSoC4/CyLib.c **** 
1748:Generated_Source\PSoC4/CyLib.c ****         CyExitCriticalSection(interruptState);
 2434              		.loc 1 1748 0
 2435 0056 0B23     		movs	r3, #11
 2436 0058 FB18     		adds	r3, r7, r3
 2437 005a 1B78     		ldrb	r3, [r3]
 2438 005c 1800     		movs	r0, r3
 2439 005e FFF7FEFF 		bl	CyExitCriticalSection
1749:Generated_Source\PSoC4/CyLib.c **** 
ARM GAS  C:\Users\essele\AppData\Local\Temp\ccaJcTi8.s 			page 75


1750:Generated_Source\PSoC4/CyLib.c ****         return (returnStatus);
 2440              		.loc 1 1750 0
 2441 0062 FB68     		ldr	r3, [r7, #12]
1751:Generated_Source\PSoC4/CyLib.c ****     }
 2442              		.loc 1 1751 0
 2443 0064 1800     		movs	r0, r3
 2444 0066 BD46     		mov	sp, r7
 2445 0068 05B0     		add	sp, sp, #20
 2446              		@ sp needed
 2447 006a 90BD     		pop	{r4, r7, pc}
 2448              	.L165:
 2449              		.align	2
 2450              	.L164:
 2451 006c 14000C40 		.word	1074528276
 2452              		.cfi_endproc
 2453              	.LFE20:
 2454              		.size	CySysClkPllGetLockStatus, .-CySysClkPllGetLockStatus
 2455              		.section	.text.CySysClkPllStop,"ax",%progbits
 2456              		.align	2
 2457              		.global	CySysClkPllStop
 2458              		.code	16
 2459              		.thumb_func
 2460              		.type	CySysClkPllStop, %function
 2461              	CySysClkPllStop:
 2462              	.LFB21:
1752:Generated_Source\PSoC4/CyLib.c **** 
1753:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1754:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllStop
1755:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1756:Generated_Source\PSoC4/CyLib.c ****     *
1757:Generated_Source\PSoC4/CyLib.c ****     * Disables the PLL.
1758:Generated_Source\PSoC4/CyLib.c ****     *
1759:Generated_Source\PSoC4/CyLib.c ****     * Ensures that either PLL is not the source of HFCLK before it is disabled,
1760:Generated_Source\PSoC4/CyLib.c ****     * otherwise, the CPU will halt.
1761:Generated_Source\PSoC4/CyLib.c ****     *
1762:Generated_Source\PSoC4/CyLib.c ****     * This API is available only for PSoC 4200L / 4100S with PLL devices.
1763:Generated_Source\PSoC4/CyLib.c ****     *
1764:Generated_Source\PSoC4/CyLib.c ****     * PLL:
1765:Generated_Source\PSoC4/CyLib.c ****     *  0   PLL#0
1766:Generated_Source\PSoC4/CyLib.c ****     *  1   PLL#1 (available only for PSoC 4200L)
1767:Generated_Source\PSoC4/CyLib.c ****     *
1768:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1769:Generated_Source\PSoC4/CyLib.c ****     void CySysClkPllStop(uint32 pll)
1770:Generated_Source\PSoC4/CyLib.c ****     {
 2463              		.loc 1 1770 0
 2464              		.cfi_startproc
 2465              		@ args = 0, pretend = 0, frame = 16
 2466              		@ frame_needed = 1, uses_anonymous_args = 0
 2467 0000 90B5     		push	{r4, r7, lr}
 2468              		.cfi_def_cfa_offset 12
 2469              		.cfi_offset 4, -12
 2470              		.cfi_offset 7, -8
 2471              		.cfi_offset 14, -4
 2472 0002 85B0     		sub	sp, sp, #20
 2473              		.cfi_def_cfa_offset 32
 2474 0004 00AF     		add	r7, sp, #0
 2475              		.cfi_def_cfa_register 7
ARM GAS  C:\Users\essele\AppData\Local\Temp\ccaJcTi8.s 			page 76


 2476 0006 7860     		str	r0, [r7, #4]
1771:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
1772:Generated_Source\PSoC4/CyLib.c **** 
1773:Generated_Source\PSoC4/CyLib.c ****         if (pll < CY_IP_PLL_NR)
 2477              		.loc 1 1773 0
 2478 0008 7B68     		ldr	r3, [r7, #4]
 2479 000a 012B     		cmp	r3, #1
 2480 000c 1BD8     		bhi	.L168
1774:Generated_Source\PSoC4/CyLib.c ****         {
1775:Generated_Source\PSoC4/CyLib.c ****             interruptState = CyEnterCriticalSection();
 2481              		.loc 1 1775 0
 2482 000e 0F23     		movs	r3, #15
 2483 0010 FC18     		adds	r4, r7, r3
 2484 0012 FFF7FEFF 		bl	CyEnterCriticalSection
 2485 0016 0300     		movs	r3, r0
 2486 0018 2370     		strb	r3, [r4]
1776:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_PLL_BASE.pll[pll].config &= (uint32) ~(CY_SYS_CLK_PLL_CONFIG_ISOLATE | CY_SY
 2487              		.loc 1 1776 0
 2488 001a 0D48     		ldr	r0, .L169
 2489 001c 0C49     		ldr	r1, .L169
 2490 001e 7A68     		ldr	r2, [r7, #4]
 2491 0020 1300     		movs	r3, r2
 2492 0022 5B00     		lsls	r3, r3, #1
 2493 0024 9B18     		adds	r3, r3, r2
 2494 0026 9B00     		lsls	r3, r3, #2
 2495 0028 5B58     		ldr	r3, [r3, r1]
 2496 002a 9B00     		lsls	r3, r3, #2
 2497 002c 9908     		lsrs	r1, r3, #2
 2498 002e 7A68     		ldr	r2, [r7, #4]
 2499 0030 1300     		movs	r3, r2
 2500 0032 5B00     		lsls	r3, r3, #1
 2501 0034 9B18     		adds	r3, r3, r2
 2502 0036 9B00     		lsls	r3, r3, #2
 2503 0038 1950     		str	r1, [r3, r0]
1777:Generated_Source\PSoC4/CyLib.c ****             CyExitCriticalSection(interruptState);
 2504              		.loc 1 1777 0
 2505 003a 0F23     		movs	r3, #15
 2506 003c FB18     		adds	r3, r7, r3
 2507 003e 1B78     		ldrb	r3, [r3]
 2508 0040 1800     		movs	r0, r3
 2509 0042 FFF7FEFF 		bl	CyExitCriticalSection
 2510              	.L168:
1778:Generated_Source\PSoC4/CyLib.c ****         }
1779:Generated_Source\PSoC4/CyLib.c ****     }
 2511              		.loc 1 1779 0
 2512 0046 C046     		nop
 2513 0048 BD46     		mov	sp, r7
 2514 004a 05B0     		add	sp, sp, #20
 2515              		@ sp needed
 2516 004c 90BD     		pop	{r4, r7, pc}
 2517              	.L170:
 2518 004e C046     		.align	2
 2519              	.L169:
 2520 0050 14000C40 		.word	1074528276
 2521              		.cfi_endproc
 2522              	.LFE21:
 2523              		.size	CySysClkPllStop, .-CySysClkPllStop
ARM GAS  C:\Users\essele\AppData\Local\Temp\ccaJcTi8.s 			page 77


 2524              		.section	.text.CySysClkPllSetPQ,"ax",%progbits
 2525              		.align	2
 2526              		.global	CySysClkPllSetPQ
 2527              		.code	16
 2528              		.thumb_func
 2529              		.type	CySysClkPllSetPQ, %function
 2530              	CySysClkPllSetPQ:
 2531              	.LFB22:
1780:Generated_Source\PSoC4/CyLib.c **** 
1781:Generated_Source\PSoC4/CyLib.c **** 
1782:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1783:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllSetPQ
1784:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1785:Generated_Source\PSoC4/CyLib.c ****     *
1786:Generated_Source\PSoC4/CyLib.c ****     * Sets feedback (P) and reference the (Q) divider value. This API also sets the
1787:Generated_Source\PSoC4/CyLib.c ****     * programmable charge pump current value. Note that the PLL has to be disabled
1788:Generated_Source\PSoC4/CyLib.c ****     * before calling this API. If this function is called while any PLL is sourcing,
1789:Generated_Source\PSoC4/CyLib.c ****     * the SYSCLK will return an error.
1790:Generated_Source\PSoC4/CyLib.c ****     *
1791:Generated_Source\PSoC4/CyLib.c ****     * The PLL must not be the system clock source when calling this function. The
1792:Generated_Source\PSoC4/CyLib.c ****     * PLL output will glitch during this function call.
1793:Generated_Source\PSoC4/CyLib.c ****     *
1794:Generated_Source\PSoC4/CyLib.c ****     * This API is available only for PSoC 4200L / 4100S with PLL devices.
1795:Generated_Source\PSoC4/CyLib.c ****     *
1796:Generated_Source\PSoC4/CyLib.c ****     * \param PLL:
1797:Generated_Source\PSoC4/CyLib.c ****     *  0   PLL#0
1798:Generated_Source\PSoC4/CyLib.c ****     *  1   PLL#1 (available only for PSoC 4200L)
1799:Generated_Source\PSoC4/CyLib.c ****     *
1800:Generated_Source\PSoC4/CyLib.c ****     * \param feedback The P divider. Range 4 - 259. Control bits for the feedback
1801:Generated_Source\PSoC4/CyLib.c ****     * divider.
1802:Generated_Source\PSoC4/CyLib.c ****     *
1803:Generated_Source\PSoC4/CyLib.c ****     * \param reference The Q divider. Range 1 - 64. Divide by the reference.
1804:Generated_Source\PSoC4/CyLib.c ****     *
1805:Generated_Source\PSoC4/CyLib.c ****     * \param current Charge the pump current in uA. The 2 uA for output frequencies
1806:Generated_Source\PSoC4/CyLib.c ****     * of 67 MHz or less, and 3 uA for higher output frequencies. The default
1807:Generated_Source\PSoC4/CyLib.c ****     * value is 2 uA.
1808:Generated_Source\PSoC4/CyLib.c ****     *
1809:Generated_Source\PSoC4/CyLib.c ****     * \return CYRET_SUCCESS Completed successfully.
1810:Generated_Source\PSoC4/CyLib.c ****     * \return CYRET_BAD_PARAM The parameters are out of range or the specified PLL
1811:Generated_Source\PSoC4/CyLib.c ****     * sources the system clock.
1812:Generated_Source\PSoC4/CyLib.c ****     *
1813:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1814:Generated_Source\PSoC4/CyLib.c ****     cystatus CySysClkPllSetPQ(uint32 pll, uint32 feedback, uint32 reference, uint32 current)
1815:Generated_Source\PSoC4/CyLib.c ****     {
 2532              		.loc 1 1815 0
 2533              		.cfi_startproc
 2534              		@ args = 0, pretend = 0, frame = 32
 2535              		@ frame_needed = 1, uses_anonymous_args = 0
 2536 0000 90B5     		push	{r4, r7, lr}
 2537              		.cfi_def_cfa_offset 12
 2538              		.cfi_offset 4, -12
 2539              		.cfi_offset 7, -8
 2540              		.cfi_offset 14, -4
 2541 0002 89B0     		sub	sp, sp, #36
 2542              		.cfi_def_cfa_offset 48
 2543 0004 00AF     		add	r7, sp, #0
 2544              		.cfi_def_cfa_register 7
ARM GAS  C:\Users\essele\AppData\Local\Temp\ccaJcTi8.s 			page 78


 2545 0006 F860     		str	r0, [r7, #12]
 2546 0008 B960     		str	r1, [r7, #8]
 2547 000a 7A60     		str	r2, [r7, #4]
 2548 000c 3B60     		str	r3, [r7]
1816:Generated_Source\PSoC4/CyLib.c ****         uint32   regTmp;
1817:Generated_Source\PSoC4/CyLib.c ****         cystatus tmp;
1818:Generated_Source\PSoC4/CyLib.c ****         uint8    interruptState;
1819:Generated_Source\PSoC4/CyLib.c ****         cystatus returnStatus = CYRET_BAD_PARAM;
 2549              		.loc 1 1819 0
 2550 000e 0123     		movs	r3, #1
 2551 0010 FB61     		str	r3, [r7, #28]
1820:Generated_Source\PSoC4/CyLib.c **** 
1821:Generated_Source\PSoC4/CyLib.c ****         interruptState = CyEnterCriticalSection();
 2552              		.loc 1 1821 0
 2553 0012 1B23     		movs	r3, #27
 2554 0014 FC18     		adds	r4, r7, r3
 2555 0016 FFF7FEFF 		bl	CyEnterCriticalSection
 2556 001a 0300     		movs	r3, r0
 2557 001c 2370     		strb	r3, [r4]
1822:Generated_Source\PSoC4/CyLib.c **** 
1823:Generated_Source\PSoC4/CyLib.c ****         tmp = CySysClkPllConfigChangeAllowed(pll);
 2558              		.loc 1 1823 0
 2559 001e FB68     		ldr	r3, [r7, #12]
 2560 0020 1800     		movs	r0, r3
 2561 0022 FFF7FEFF 		bl	CySysClkPllConfigChangeAllowed
 2562 0026 0300     		movs	r3, r0
 2563 0028 7B61     		str	r3, [r7, #20]
1824:Generated_Source\PSoC4/CyLib.c **** 
1825:Generated_Source\PSoC4/CyLib.c ****         if ((pll < CY_IP_PLL_NR) &&
 2564              		.loc 1 1825 0
 2565 002a FB68     		ldr	r3, [r7, #12]
 2566 002c 012B     		cmp	r3, #1
 2567 002e 41D8     		bhi	.L172
 2568              		.loc 1 1825 0 is_stmt 0 discriminator 1
 2569 0030 BB68     		ldr	r3, [r7, #8]
 2570 0032 032B     		cmp	r3, #3
 2571 0034 3ED9     		bls	.L172
1826:Generated_Source\PSoC4/CyLib.c ****             (feedback  >= CY_SYS_CLK_PLL_CONFIG_FEEDBACK_DIV_MIN)  && (feedback  <= CY_SYS_CLK_PLL_
 2572              		.loc 1 1826 0 is_stmt 1
 2573 0036 BA68     		ldr	r2, [r7, #8]
 2574 0038 0423     		movs	r3, #4
 2575 003a FF33     		adds	r3, r3, #255
 2576 003c 9A42     		cmp	r2, r3
 2577 003e 39D8     		bhi	.L172
 2578              		.loc 1 1826 0 is_stmt 0 discriminator 1
 2579 0040 7B68     		ldr	r3, [r7, #4]
 2580 0042 002B     		cmp	r3, #0
 2581 0044 36D0     		beq	.L172
1827:Generated_Source\PSoC4/CyLib.c ****             (reference >= CY_SYS_CLK_PLL_CONFIG_REFERENCE_DIV_MIN) && (reference <= CY_SYS_CLK_PLL_
 2582              		.loc 1 1827 0 is_stmt 1
 2583 0046 7B68     		ldr	r3, [r7, #4]
 2584 0048 402B     		cmp	r3, #64
 2585 004a 33D8     		bhi	.L172
 2586              		.loc 1 1827 0 is_stmt 0 discriminator 1
 2587 004c 3B68     		ldr	r3, [r7]
 2588 004e 012B     		cmp	r3, #1
 2589 0050 30D9     		bls	.L172
ARM GAS  C:\Users\essele\AppData\Local\Temp\ccaJcTi8.s 			page 79


1828:Generated_Source\PSoC4/CyLib.c ****             (current   >= CY_SYS_CLK_PLL_CONFIG_ICP_SEL_MIN )      && (current   <= CY_SYS_CLK_PLL_
 2590              		.loc 1 1828 0 is_stmt 1
 2591 0052 3B68     		ldr	r3, [r7]
 2592 0054 032B     		cmp	r3, #3
 2593 0056 2DD8     		bhi	.L172
 2594              		.loc 1 1828 0 is_stmt 0 discriminator 1
 2595 0058 7B69     		ldr	r3, [r7, #20]
 2596 005a 002B     		cmp	r3, #0
 2597 005c 2AD1     		bne	.L172
1829:Generated_Source\PSoC4/CyLib.c ****             (CYRET_SUCCESS == tmp))
1830:Generated_Source\PSoC4/CyLib.c ****         {
1831:Generated_Source\PSoC4/CyLib.c ****             /* Set new feedback, reference and current values */
1832:Generated_Source\PSoC4/CyLib.c ****             regTmp  = CY_SYS_CLK_PLL_BASE.pll[pll].config & (uint32) ~(CY_SYS_CLK_PLL_CONFIG_FEEDBA
 2598              		.loc 1 1832 0 is_stmt 1
 2599 005e 1B49     		ldr	r1, .L174
 2600 0060 FA68     		ldr	r2, [r7, #12]
 2601 0062 1300     		movs	r3, r2
 2602 0064 5B00     		lsls	r3, r3, #1
 2603 0066 9B18     		adds	r3, r3, r2
 2604 0068 9B00     		lsls	r3, r3, #2
 2605 006a 5B58     		ldr	r3, [r3, r1]
 2606 006c 184A     		ldr	r2, .L174+4
 2607 006e 1340     		ands	r3, r2
 2608 0070 3B61     		str	r3, [r7, #16]
1833:Generated_Source\PSoC4/CyLib.c ****                                                                        CY_SYS_CLK_PLL_CONFIG_REFERE
1834:Generated_Source\PSoC4/CyLib.c ****                                                                        CY_SYS_CLK_PLL_CONFIG_ICP_SE
1835:Generated_Source\PSoC4/CyLib.c **** 
1836:Generated_Source\PSoC4/CyLib.c ****             regTmp |= ((feedback << CY_SYS_CLK_PLL_CONFIG_FEEDBACK_DIV_SHIFT) & CY_SYS_CLK_PLL_CONF
 2609              		.loc 1 1836 0
 2610 0072 BB68     		ldr	r3, [r7, #8]
 2611 0074 FF22     		movs	r2, #255
 2612 0076 1340     		ands	r3, r2
 2613 0078 3A69     		ldr	r2, [r7, #16]
 2614 007a 1343     		orrs	r3, r2
 2615 007c 3B61     		str	r3, [r7, #16]
1837:Generated_Source\PSoC4/CyLib.c ****             regTmp |= (((reference - 1u) << CY_SYS_CLK_PLL_CONFIG_REFERENCE_DIV_SHIFT) & CY_SYS_CLK
 2616              		.loc 1 1837 0
 2617 007e 7B68     		ldr	r3, [r7, #4]
 2618 0080 013B     		subs	r3, r3, #1
 2619 0082 1A02     		lsls	r2, r3, #8
 2620 0084 FC23     		movs	r3, #252
 2621 0086 9B01     		lsls	r3, r3, #6
 2622 0088 1340     		ands	r3, r2
 2623 008a 3A69     		ldr	r2, [r7, #16]
 2624 008c 1343     		orrs	r3, r2
 2625 008e 3B61     		str	r3, [r7, #16]
1838:Generated_Source\PSoC4/CyLib.c ****             regTmp |= ((current << CY_SYS_CLK_PLL_CONFIG_ICP_SEL_SHIFT) & CY_SYS_CLK_PLL_CONFIG_ICP
 2626              		.loc 1 1838 0
 2627 0090 3B68     		ldr	r3, [r7]
 2628 0092 1A04     		lsls	r2, r3, #16
 2629 0094 E023     		movs	r3, #224
 2630 0096 DB02     		lsls	r3, r3, #11
 2631 0098 1340     		ands	r3, r2
 2632 009a 3A69     		ldr	r2, [r7, #16]
 2633 009c 1343     		orrs	r3, r2
 2634 009e 3B61     		str	r3, [r7, #16]
1839:Generated_Source\PSoC4/CyLib.c **** 
ARM GAS  C:\Users\essele\AppData\Local\Temp\ccaJcTi8.s 			page 80


1840:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_PLL_BASE.pll[pll].config = regTmp;
 2635              		.loc 1 1840 0
 2636 00a0 0A49     		ldr	r1, .L174
 2637 00a2 FA68     		ldr	r2, [r7, #12]
 2638 00a4 1300     		movs	r3, r2
 2639 00a6 5B00     		lsls	r3, r3, #1
 2640 00a8 9B18     		adds	r3, r3, r2
 2641 00aa 9B00     		lsls	r3, r3, #2
 2642 00ac 3A69     		ldr	r2, [r7, #16]
 2643 00ae 5A50     		str	r2, [r3, r1]
1841:Generated_Source\PSoC4/CyLib.c **** 
1842:Generated_Source\PSoC4/CyLib.c ****             returnStatus = CYRET_SUCCESS;
 2644              		.loc 1 1842 0
 2645 00b0 0023     		movs	r3, #0
 2646 00b2 FB61     		str	r3, [r7, #28]
 2647              	.L172:
1843:Generated_Source\PSoC4/CyLib.c ****         }
1844:Generated_Source\PSoC4/CyLib.c **** 
1845:Generated_Source\PSoC4/CyLib.c ****         CyExitCriticalSection(interruptState);
 2648              		.loc 1 1845 0
 2649 00b4 1B23     		movs	r3, #27
 2650 00b6 FB18     		adds	r3, r7, r3
 2651 00b8 1B78     		ldrb	r3, [r3]
 2652 00ba 1800     		movs	r0, r3
 2653 00bc FFF7FEFF 		bl	CyExitCriticalSection
1846:Generated_Source\PSoC4/CyLib.c **** 
1847:Generated_Source\PSoC4/CyLib.c ****         return (returnStatus);
 2654              		.loc 1 1847 0
 2655 00c0 FB69     		ldr	r3, [r7, #28]
1848:Generated_Source\PSoC4/CyLib.c ****     }
 2656              		.loc 1 1848 0
 2657 00c2 1800     		movs	r0, r3
 2658 00c4 BD46     		mov	sp, r7
 2659 00c6 09B0     		add	sp, sp, #36
 2660              		@ sp needed
 2661 00c8 90BD     		pop	{r4, r7, pc}
 2662              	.L175:
 2663 00ca C046     		.align	2
 2664              	.L174:
 2665 00cc 14000C40 		.word	1074528276
 2666 00d0 00C0F8FF 		.word	-475136
 2667              		.cfi_endproc
 2668              	.LFE22:
 2669              		.size	CySysClkPllSetPQ, .-CySysClkPllSetPQ
 2670              		.section	.text.CySysClkPllSetBypassMode,"ax",%progbits
 2671              		.align	2
 2672              		.global	CySysClkPllSetBypassMode
 2673              		.code	16
 2674              		.thumb_func
 2675              		.type	CySysClkPllSetBypassMode, %function
 2676              	CySysClkPllSetBypassMode:
 2677              	.LFB23:
1849:Generated_Source\PSoC4/CyLib.c **** 
1850:Generated_Source\PSoC4/CyLib.c **** 
1851:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1852:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllSetBypassMode
1853:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
ARM GAS  C:\Users\essele\AppData\Local\Temp\ccaJcTi8.s 			page 81


1854:Generated_Source\PSoC4/CyLib.c ****     *
1855:Generated_Source\PSoC4/CyLib.c ****     * Sets the bypass mode for the specified PLL.
1856:Generated_Source\PSoC4/CyLib.c ****     *
1857:Generated_Source\PSoC4/CyLib.c ****     * The PLL must not be the system clock source when calling this function.
1858:Generated_Source\PSoC4/CyLib.c ****     * The PLL output will glitch during this function call.
1859:Generated_Source\PSoC4/CyLib.c ****     *
1860:Generated_Source\PSoC4/CyLib.c ****     * When the PLL's reference input is higher than HFCLK frequency the device may 
1861:Generated_Source\PSoC4/CyLib.c ****     * lock due to incorrect flash wait cycle configuration and bypass switches from 
1862:Generated_Source\PSoC4/CyLib.c ****     * PLL output to the reference input. See description of 
1863:Generated_Source\PSoC4/CyLib.c ****     * CySysFlashSetWaitCycles() for more information.
1864:Generated_Source\PSoC4/CyLib.c ****     *
1865:Generated_Source\PSoC4/CyLib.c ****     * This API is available only for PSoC 4200L / 4100S with PLL devices.
1866:Generated_Source\PSoC4/CyLib.c ****     *
1867:Generated_Source\PSoC4/CyLib.c ****     * \param PLL:
1868:Generated_Source\PSoC4/CyLib.c ****     *  0   PLL#0
1869:Generated_Source\PSoC4/CyLib.c ****     *  1   PLL#1 (available only for PSoC 4200L)
1870:Generated_Source\PSoC4/CyLib.c ****     *
1871:Generated_Source\PSoC4/CyLib.c ****     * \param bypass: The bypass mode.
1872:Generated_Source\PSoC4/CyLib.c ****     * CY_SYS_PLL_BYPASS_AUTO - Automatic usage of the lock indicator. When unlocked,
1873:Generated_Source\PSoC4/CyLib.c ****     * automatically selects PLL the reference input (bypass mode). When locked,
1874:Generated_Source\PSoC4/CyLib.c ****     * automatically selects the PLL output.
1875:Generated_Source\PSoC4/CyLib.c ****     *
1876:Generated_Source\PSoC4/CyLib.c ****     * CY_SYS_PLL_BYPASS_PLL_REF - Selects the PLL reference input (bypass mode).
1877:Generated_Source\PSoC4/CyLib.c ****     * Ignores the lock indicator.
1878:Generated_Source\PSoC4/CyLib.c ****     *
1879:Generated_Source\PSoC4/CyLib.c ****     * CY_SYS_PLL_BYPASS_PLL_OUT - Selects the PLL output.  Ignores the lock indicator.
1880:Generated_Source\PSoC4/CyLib.c ****     *
1881:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1882:Generated_Source\PSoC4/CyLib.c ****     void CySysClkPllSetBypassMode(uint32 pll, uint32 bypass)
1883:Generated_Source\PSoC4/CyLib.c ****     {
 2678              		.loc 1 1883 0
 2679              		.cfi_startproc
 2680              		@ args = 0, pretend = 0, frame = 16
 2681              		@ frame_needed = 1, uses_anonymous_args = 0
 2682 0000 90B5     		push	{r4, r7, lr}
 2683              		.cfi_def_cfa_offset 12
 2684              		.cfi_offset 4, -12
 2685              		.cfi_offset 7, -8
 2686              		.cfi_offset 14, -4
 2687 0002 85B0     		sub	sp, sp, #20
 2688              		.cfi_def_cfa_offset 32
 2689 0004 00AF     		add	r7, sp, #0
 2690              		.cfi_def_cfa_register 7
 2691 0006 7860     		str	r0, [r7, #4]
 2692 0008 3960     		str	r1, [r7]
1884:Generated_Source\PSoC4/CyLib.c ****         uint32 regTmp;
1885:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
1886:Generated_Source\PSoC4/CyLib.c **** 
1887:Generated_Source\PSoC4/CyLib.c ****         interruptState = CyEnterCriticalSection();
 2693              		.loc 1 1887 0
 2694 000a 0F23     		movs	r3, #15
 2695 000c FC18     		adds	r4, r7, r3
 2696 000e FFF7FEFF 		bl	CyEnterCriticalSection
 2697 0012 0300     		movs	r3, r0
 2698 0014 2370     		strb	r3, [r4]
1888:Generated_Source\PSoC4/CyLib.c **** 
1889:Generated_Source\PSoC4/CyLib.c ****         if ((pll < CY_IP_PLL_NR) && (bypass <= CY_SYS_PLL_BYPASS_PLL_OUT))
ARM GAS  C:\Users\essele\AppData\Local\Temp\ccaJcTi8.s 			page 82


 2699              		.loc 1 1889 0
 2700 0016 7B68     		ldr	r3, [r7, #4]
 2701 0018 012B     		cmp	r3, #1
 2702 001a 19D8     		bhi	.L177
 2703              		.loc 1 1889 0 is_stmt 0 discriminator 1
 2704 001c 3B68     		ldr	r3, [r7]
 2705 001e 032B     		cmp	r3, #3
 2706 0020 16D8     		bhi	.L177
1890:Generated_Source\PSoC4/CyLib.c ****         {
1891:Generated_Source\PSoC4/CyLib.c ****             regTmp  = CY_SYS_CLK_PLL_BASE.pll[pll].config & (uint32) ~CY_SYS_CLK_PLL_CONFIG_BYPASS_
 2707              		.loc 1 1891 0 is_stmt 1
 2708 0022 1049     		ldr	r1, .L178
 2709 0024 7A68     		ldr	r2, [r7, #4]
 2710 0026 1300     		movs	r3, r2
 2711 0028 5B00     		lsls	r3, r3, #1
 2712 002a 9B18     		adds	r3, r3, r2
 2713 002c 9B00     		lsls	r3, r3, #2
 2714 002e 5B58     		ldr	r3, [r3, r1]
 2715 0030 0D4A     		ldr	r2, .L178+4
 2716 0032 1340     		ands	r3, r2
 2717 0034 BB60     		str	r3, [r7, #8]
1892:Generated_Source\PSoC4/CyLib.c ****             regTmp |=  (uint32)(bypass << CY_SYS_CLK_PLL_CONFIG_BYPASS_SEL_SHIFT);
 2718              		.loc 1 1892 0
 2719 0036 3B68     		ldr	r3, [r7]
 2720 0038 1B05     		lsls	r3, r3, #20
 2721 003a BA68     		ldr	r2, [r7, #8]
 2722 003c 1343     		orrs	r3, r2
 2723 003e BB60     		str	r3, [r7, #8]
1893:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_PLL_BASE.pll[pll].config = regTmp;
 2724              		.loc 1 1893 0
 2725 0040 0849     		ldr	r1, .L178
 2726 0042 7A68     		ldr	r2, [r7, #4]
 2727 0044 1300     		movs	r3, r2
 2728 0046 5B00     		lsls	r3, r3, #1
 2729 0048 9B18     		adds	r3, r3, r2
 2730 004a 9B00     		lsls	r3, r3, #2
 2731 004c BA68     		ldr	r2, [r7, #8]
 2732 004e 5A50     		str	r2, [r3, r1]
 2733              	.L177:
1894:Generated_Source\PSoC4/CyLib.c ****         }
1895:Generated_Source\PSoC4/CyLib.c **** 
1896:Generated_Source\PSoC4/CyLib.c ****         CyExitCriticalSection(interruptState);
 2734              		.loc 1 1896 0
 2735 0050 0F23     		movs	r3, #15
 2736 0052 FB18     		adds	r3, r7, r3
 2737 0054 1B78     		ldrb	r3, [r3]
 2738 0056 1800     		movs	r0, r3
 2739 0058 FFF7FEFF 		bl	CyExitCriticalSection
1897:Generated_Source\PSoC4/CyLib.c ****     }
 2740              		.loc 1 1897 0
 2741 005c C046     		nop
 2742 005e BD46     		mov	sp, r7
 2743 0060 05B0     		add	sp, sp, #20
 2744              		@ sp needed
 2745 0062 90BD     		pop	{r4, r7, pc}
 2746              	.L179:
 2747              		.align	2
ARM GAS  C:\Users\essele\AppData\Local\Temp\ccaJcTi8.s 			page 83


 2748              	.L178:
 2749 0064 14000C40 		.word	1074528276
 2750 0068 FFFFCFFF 		.word	-3145729
 2751              		.cfi_endproc
 2752              	.LFE23:
 2753              		.size	CySysClkPllSetBypassMode, .-CySysClkPllSetBypassMode
 2754              		.section	.text.CySysClkPllGetBypassMode,"ax",%progbits
 2755              		.align	2
 2756              		.code	16
 2757              		.thumb_func
 2758              		.type	CySysClkPllGetBypassMode, %function
 2759              	CySysClkPllGetBypassMode:
 2760              	.LFB24:
1898:Generated_Source\PSoC4/CyLib.c **** 
1899:Generated_Source\PSoC4/CyLib.c **** 
1900:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1901:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllGetBypassMode
1902:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1903:Generated_Source\PSoC4/CyLib.c ****     *
1904:Generated_Source\PSoC4/CyLib.c ****     *  Gets the bypass mode for the specified PLL.
1905:Generated_Source\PSoC4/CyLib.c ****     *  This API is available only for PSoC 4200L / 4100S with PLL devices.
1906:Generated_Source\PSoC4/CyLib.c ****     *
1907:Generated_Source\PSoC4/CyLib.c ****     *  \param PLL:
1908:Generated_Source\PSoC4/CyLib.c ****     *   0   PLL#0
1909:Generated_Source\PSoC4/CyLib.c ****     *   1   PLL#1 (available only for PSoC 4200L)
1910:Generated_Source\PSoC4/CyLib.c ****     *
1911:Generated_Source\PSoC4/CyLib.c ****     *  \param bypass: Bypass mode.
1912:Generated_Source\PSoC4/CyLib.c ****     *   The same as the parameter of the CySysClkPllSetBypassMode().
1913:Generated_Source\PSoC4/CyLib.c ****     *
1914:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1915:Generated_Source\PSoC4/CyLib.c ****     static uint32 CySysClkPllGetBypassMode(uint32 pll)
1916:Generated_Source\PSoC4/CyLib.c ****     {
 2761              		.loc 1 1916 0
 2762              		.cfi_startproc
 2763              		@ args = 0, pretend = 0, frame = 16
 2764              		@ frame_needed = 1, uses_anonymous_args = 0
 2765 0000 90B5     		push	{r4, r7, lr}
 2766              		.cfi_def_cfa_offset 12
 2767              		.cfi_offset 4, -12
 2768              		.cfi_offset 7, -8
 2769              		.cfi_offset 14, -4
 2770 0002 85B0     		sub	sp, sp, #20
 2771              		.cfi_def_cfa_offset 32
 2772 0004 00AF     		add	r7, sp, #0
 2773              		.cfi_def_cfa_register 7
 2774 0006 7860     		str	r0, [r7, #4]
1917:Generated_Source\PSoC4/CyLib.c ****         uint32 returnValue;
1918:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
1919:Generated_Source\PSoC4/CyLib.c **** 
1920:Generated_Source\PSoC4/CyLib.c ****         CYASSERT(pll < CY_IP_PLL_NR);
 2775              		.loc 1 1920 0
 2776 0008 7B68     		ldr	r3, [r7, #4]
 2777 000a 012B     		cmp	r3, #1
 2778 000c 02D9     		bls	.L181
 2779              		.loc 1 1920 0 is_stmt 0 discriminator 1
 2780 000e 0020     		movs	r0, #0
 2781 0010 FFF7FEFF 		bl	CyHalt
ARM GAS  C:\Users\essele\AppData\Local\Temp\ccaJcTi8.s 			page 84


 2782              	.L181:
1921:Generated_Source\PSoC4/CyLib.c **** 
1922:Generated_Source\PSoC4/CyLib.c ****         interruptState = CyEnterCriticalSection();
 2783              		.loc 1 1922 0 is_stmt 1
 2784 0014 0F23     		movs	r3, #15
 2785 0016 FC18     		adds	r4, r7, r3
 2786 0018 FFF7FEFF 		bl	CyEnterCriticalSection
 2787 001c 0300     		movs	r3, r0
 2788 001e 2370     		strb	r3, [r4]
1923:Generated_Source\PSoC4/CyLib.c **** 
1924:Generated_Source\PSoC4/CyLib.c ****         returnValue = CY_SYS_CLK_PLL_BASE.pll[pll].config & CY_SYS_CLK_PLL_CONFIG_BYPASS_SEL_MASK;
 2789              		.loc 1 1924 0
 2790 0020 0C49     		ldr	r1, .L183
 2791 0022 7A68     		ldr	r2, [r7, #4]
 2792 0024 1300     		movs	r3, r2
 2793 0026 5B00     		lsls	r3, r3, #1
 2794 0028 9B18     		adds	r3, r3, r2
 2795 002a 9B00     		lsls	r3, r3, #2
 2796 002c 5A58     		ldr	r2, [r3, r1]
 2797 002e C023     		movs	r3, #192
 2798 0030 9B03     		lsls	r3, r3, #14
 2799 0032 1340     		ands	r3, r2
 2800 0034 BB60     		str	r3, [r7, #8]
1925:Generated_Source\PSoC4/CyLib.c ****         returnValue =  returnValue >> CY_SYS_CLK_PLL_CONFIG_BYPASS_SEL_SHIFT;
 2801              		.loc 1 1925 0
 2802 0036 BB68     		ldr	r3, [r7, #8]
 2803 0038 1B0D     		lsrs	r3, r3, #20
 2804 003a BB60     		str	r3, [r7, #8]
1926:Generated_Source\PSoC4/CyLib.c **** 
1927:Generated_Source\PSoC4/CyLib.c ****         CyExitCriticalSection(interruptState);
 2805              		.loc 1 1927 0
 2806 003c 0F23     		movs	r3, #15
 2807 003e FB18     		adds	r3, r7, r3
 2808 0040 1B78     		ldrb	r3, [r3]
 2809 0042 1800     		movs	r0, r3
 2810 0044 FFF7FEFF 		bl	CyExitCriticalSection
1928:Generated_Source\PSoC4/CyLib.c **** 
1929:Generated_Source\PSoC4/CyLib.c ****         return (returnValue);
 2811              		.loc 1 1929 0
 2812 0048 BB68     		ldr	r3, [r7, #8]
1930:Generated_Source\PSoC4/CyLib.c ****     }
 2813              		.loc 1 1930 0
 2814 004a 1800     		movs	r0, r3
 2815 004c BD46     		mov	sp, r7
 2816 004e 05B0     		add	sp, sp, #20
 2817              		@ sp needed
 2818 0050 90BD     		pop	{r4, r7, pc}
 2819              	.L184:
 2820 0052 C046     		.align	2
 2821              	.L183:
 2822 0054 14000C40 		.word	1074528276
 2823              		.cfi_endproc
 2824              	.LFE24:
 2825              		.size	CySysClkPllGetBypassMode, .-CySysClkPllGetBypassMode
 2826              		.section	.text.CySysClkPllConfigChangeAllowed,"ax",%progbits
 2827              		.align	2
 2828              		.code	16
ARM GAS  C:\Users\essele\AppData\Local\Temp\ccaJcTi8.s 			page 85


 2829              		.thumb_func
 2830              		.type	CySysClkPllConfigChangeAllowed, %function
 2831              	CySysClkPllConfigChangeAllowed:
 2832              	.LFB25:
1931:Generated_Source\PSoC4/CyLib.c **** 
1932:Generated_Source\PSoC4/CyLib.c **** 
1933:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1934:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllConfigChangeAllowed
1935:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1936:Generated_Source\PSoC4/CyLib.c ****     *
1937:Generated_Source\PSoC4/CyLib.c ****     *  The function returns non-zero value if the specified PLL sources the System
1938:Generated_Source\PSoC4/CyLib.c ****     *  clock and the PLL is not in the bypass mode.
1939:Generated_Source\PSoC4/CyLib.c ****     *
1940:Generated_Source\PSoC4/CyLib.c ****     *  This API is available only for PSoC 4200L / 4100S with PLL devices.
1941:Generated_Source\PSoC4/CyLib.c ****     *
1942:Generated_Source\PSoC4/CyLib.c ****     *  \param PLL:
1943:Generated_Source\PSoC4/CyLib.c ****     *   0   PLL#0
1944:Generated_Source\PSoC4/CyLib.c ****     *   1   PLL#1 (available only for PSoC 4200L)
1945:Generated_Source\PSoC4/CyLib.c ****     *
1946:Generated_Source\PSoC4/CyLib.c ****     * \return Non-zero value when the specified PLL sources the System clock and
1947:Generated_Source\PSoC4/CyLib.c ****     * the PLL is not in the bypass mode.
1948:Generated_Source\PSoC4/CyLib.c ****     *
1949:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1950:Generated_Source\PSoC4/CyLib.c ****     static cystatus CySysClkPllConfigChangeAllowed(uint32 pll)
1951:Generated_Source\PSoC4/CyLib.c ****     {
 2833              		.loc 1 1951 0
 2834              		.cfi_startproc
 2835              		@ args = 0, pretend = 0, frame = 24
 2836              		@ frame_needed = 1, uses_anonymous_args = 0
 2837 0000 80B5     		push	{r7, lr}
 2838              		.cfi_def_cfa_offset 8
 2839              		.cfi_offset 7, -8
 2840              		.cfi_offset 14, -4
 2841 0002 86B0     		sub	sp, sp, #24
 2842              		.cfi_def_cfa_offset 32
 2843 0004 00AF     		add	r7, sp, #0
 2844              		.cfi_def_cfa_register 7
 2845 0006 7860     		str	r0, [r7, #4]
1952:Generated_Source\PSoC4/CyLib.c ****         uint32   pllBypassMode;
1953:Generated_Source\PSoC4/CyLib.c ****         uint32   sysclkSource;
1954:Generated_Source\PSoC4/CyLib.c ****         cystatus returnValue = CYRET_INVALID_STATE;
 2846              		.loc 1 1954 0
 2847 0008 1123     		movs	r3, #17
 2848 000a 7B61     		str	r3, [r7, #20]
1955:Generated_Source\PSoC4/CyLib.c **** 
1956:Generated_Source\PSoC4/CyLib.c ****         sysclkSource  = CySysClkGetSysclkSource();
 2849              		.loc 1 1956 0
 2850 000c FFF7FEFF 		bl	CySysClkGetSysclkSource
 2851 0010 0300     		movs	r3, r0
 2852 0012 3B61     		str	r3, [r7, #16]
1957:Generated_Source\PSoC4/CyLib.c ****         pllBypassMode = CySysClkPllGetBypassMode(pll);
 2853              		.loc 1 1957 0
 2854 0014 7B68     		ldr	r3, [r7, #4]
 2855 0016 1800     		movs	r0, r3
 2856 0018 FFF7FEFF 		bl	CySysClkPllGetBypassMode
 2857 001c 0300     		movs	r3, r0
 2858 001e FB60     		str	r3, [r7, #12]
ARM GAS  C:\Users\essele\AppData\Local\Temp\ccaJcTi8.s 			page 86


1958:Generated_Source\PSoC4/CyLib.c **** 
1959:Generated_Source\PSoC4/CyLib.c ****         if ((CY_SYS_PLL_BYPASS_PLL_REF == pllBypassMode)             ||
 2859              		.loc 1 1959 0
 2860 0020 FB68     		ldr	r3, [r7, #12]
 2861 0022 022B     		cmp	r3, #2
 2862 0024 0FD0     		beq	.L186
 2863              		.loc 1 1959 0 is_stmt 0 discriminator 1
 2864 0026 3A69     		ldr	r2, [r7, #16]
 2865 0028 8023     		movs	r3, #128
 2866 002a 9B02     		lsls	r3, r3, #10
 2867 002c 9A42     		cmp	r2, r3
 2868 002e 02D0     		beq	.L187
1960:Generated_Source\PSoC4/CyLib.c ****             ((CY_SYS_CLK_HFCLK_PLL0 != sysclkSource) && (0u == pll))
 2869              		.loc 1 1960 0 is_stmt 1
 2870 0030 7B68     		ldr	r3, [r7, #4]
 2871 0032 002B     		cmp	r3, #0
 2872 0034 07D0     		beq	.L186
 2873              	.L187:
1961:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_SRSSV2)
1962:Generated_Source\PSoC4/CyLib.c ****             || ((CY_SYS_CLK_HFCLK_PLL1 != sysclkSource) && (1u == pll))
 2874              		.loc 1 1962 0
 2875 0036 3A69     		ldr	r2, [r7, #16]
 2876 0038 8023     		movs	r3, #128
 2877 003a 5B02     		lsls	r3, r3, #9
 2878 003c 9A42     		cmp	r2, r3
 2879 003e 04D0     		beq	.L188
 2880              		.loc 1 1962 0 is_stmt 0 discriminator 1
 2881 0040 7B68     		ldr	r3, [r7, #4]
 2882 0042 012B     		cmp	r3, #1
 2883 0044 01D1     		bne	.L188
 2884              	.L186:
1963:Generated_Source\PSoC4/CyLib.c ****         #endif /* (CY_IP_SRSSV2) */
1964:Generated_Source\PSoC4/CyLib.c ****             )
1965:Generated_Source\PSoC4/CyLib.c ****         {
1966:Generated_Source\PSoC4/CyLib.c ****             returnValue = CYRET_SUCCESS;
 2885              		.loc 1 1966 0 is_stmt 1
 2886 0046 0023     		movs	r3, #0
 2887 0048 7B61     		str	r3, [r7, #20]
 2888              	.L188:
1967:Generated_Source\PSoC4/CyLib.c ****         }
1968:Generated_Source\PSoC4/CyLib.c **** 
1969:Generated_Source\PSoC4/CyLib.c ****         return (returnValue);
 2889              		.loc 1 1969 0
 2890 004a 7B69     		ldr	r3, [r7, #20]
1970:Generated_Source\PSoC4/CyLib.c ****     }
 2891              		.loc 1 1970 0
 2892 004c 1800     		movs	r0, r3
 2893 004e BD46     		mov	sp, r7
 2894 0050 06B0     		add	sp, sp, #24
 2895              		@ sp needed
 2896 0052 80BD     		pop	{r7, pc}
 2897              		.cfi_endproc
 2898              	.LFE25:
 2899              		.size	CySysClkPllConfigChangeAllowed, .-CySysClkPllConfigChangeAllowed
 2900              		.section	.text.CySysClkPllGetUnlockStatus,"ax",%progbits
 2901              		.align	2
 2902              		.global	CySysClkPllGetUnlockStatus
ARM GAS  C:\Users\essele\AppData\Local\Temp\ccaJcTi8.s 			page 87


 2903              		.code	16
 2904              		.thumb_func
 2905              		.type	CySysClkPllGetUnlockStatus, %function
 2906              	CySysClkPllGetUnlockStatus:
 2907              	.LFB26:
1971:Generated_Source\PSoC4/CyLib.c **** 
1972:Generated_Source\PSoC4/CyLib.c **** 
1973:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1974:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllGetUnlockStatus
1975:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1976:Generated_Source\PSoC4/CyLib.c ****     *
1977:Generated_Source\PSoC4/CyLib.c ****     *  Returns a non-zero value if the specified PLL output was unlocked.
1978:Generated_Source\PSoC4/CyLib.c ****     *  The unlock status is an indicator that the PLL has lost a lock at least once
1979:Generated_Source\PSoC4/CyLib.c ****     *  during its operation. The unlock status is cleared once it is read using
1980:Generated_Source\PSoC4/CyLib.c ****     *  this API.
1981:Generated_Source\PSoC4/CyLib.c ****     *
1982:Generated_Source\PSoC4/CyLib.c ****     *  This API is available only for PSoC 4200L / 4100S with PLL devices.
1983:Generated_Source\PSoC4/CyLib.c ****     *
1984:Generated_Source\PSoC4/CyLib.c ****     *  \param PLL:
1985:Generated_Source\PSoC4/CyLib.c ****     *   0   PLL#0
1986:Generated_Source\PSoC4/CyLib.c ****     *   1   PLL#1 (available only for PSoC 4200L)
1987:Generated_Source\PSoC4/CyLib.c ****     *
1988:Generated_Source\PSoC4/CyLib.c ****     * \return Non-zero value when the specified PLL was unlocked.
1989:Generated_Source\PSoC4/CyLib.c ****     *
1990:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1991:Generated_Source\PSoC4/CyLib.c ****     uint32 CySysClkPllGetUnlockStatus(uint32 pll)
1992:Generated_Source\PSoC4/CyLib.c ****     {
 2908              		.loc 1 1992 0
 2909              		.cfi_startproc
 2910              		@ args = 0, pretend = 0, frame = 16
 2911              		@ frame_needed = 1, uses_anonymous_args = 0
 2912 0000 90B5     		push	{r4, r7, lr}
 2913              		.cfi_def_cfa_offset 12
 2914              		.cfi_offset 4, -12
 2915              		.cfi_offset 7, -8
 2916              		.cfi_offset 14, -4
 2917 0002 85B0     		sub	sp, sp, #20
 2918              		.cfi_def_cfa_offset 32
 2919 0004 00AF     		add	r7, sp, #0
 2920              		.cfi_def_cfa_register 7
 2921 0006 7860     		str	r0, [r7, #4]
1993:Generated_Source\PSoC4/CyLib.c ****         uint32 returnStatus = 0u;
 2922              		.loc 1 1993 0
 2923 0008 0023     		movs	r3, #0
 2924 000a FB60     		str	r3, [r7, #12]
1994:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
1995:Generated_Source\PSoC4/CyLib.c **** 
1996:Generated_Source\PSoC4/CyLib.c ****         interruptState = CyEnterCriticalSection();
 2925              		.loc 1 1996 0
 2926 000c 0B23     		movs	r3, #11
 2927 000e FC18     		adds	r4, r7, r3
 2928 0010 FFF7FEFF 		bl	CyEnterCriticalSection
 2929 0014 0300     		movs	r3, r0
 2930 0016 2370     		strb	r3, [r4]
1997:Generated_Source\PSoC4/CyLib.c **** 
1998:Generated_Source\PSoC4/CyLib.c ****         returnStatus = CY_SYS_CLK_PLL_BASE.pll[pll].test & CY_SYS_CLK_PLL_TEST_UNLOCK_OCCURRED_MASK
 2931              		.loc 1 1998 0
ARM GAS  C:\Users\essele\AppData\Local\Temp\ccaJcTi8.s 			page 88


 2932 0018 1549     		ldr	r1, .L192
 2933 001a 7A68     		ldr	r2, [r7, #4]
 2934 001c 1300     		movs	r3, r2
 2935 001e 5B00     		lsls	r3, r3, #1
 2936 0020 9B18     		adds	r3, r3, r2
 2937 0022 9B00     		lsls	r3, r3, #2
 2938 0024 CB18     		adds	r3, r1, r3
 2939 0026 0833     		adds	r3, r3, #8
 2940 0028 1B68     		ldr	r3, [r3]
 2941 002a 1022     		movs	r2, #16
 2942 002c 1340     		ands	r3, r2
 2943 002e FB60     		str	r3, [r7, #12]
1999:Generated_Source\PSoC4/CyLib.c ****         CY_SYS_CLK_PLL_BASE.pll[pll].test |= CY_SYS_CLK_PLL_TEST_UNLOCK_OCCURRED_MASK;
 2944              		.loc 1 1999 0
 2945 0030 0F48     		ldr	r0, .L192
 2946 0032 0F49     		ldr	r1, .L192
 2947 0034 7A68     		ldr	r2, [r7, #4]
 2948 0036 1300     		movs	r3, r2
 2949 0038 5B00     		lsls	r3, r3, #1
 2950 003a 9B18     		adds	r3, r3, r2
 2951 003c 9B00     		lsls	r3, r3, #2
 2952 003e CB18     		adds	r3, r1, r3
 2953 0040 0833     		adds	r3, r3, #8
 2954 0042 1B68     		ldr	r3, [r3]
 2955 0044 1022     		movs	r2, #16
 2956 0046 1A43     		orrs	r2, r3
 2957 0048 1100     		movs	r1, r2
 2958 004a 7A68     		ldr	r2, [r7, #4]
 2959 004c 1300     		movs	r3, r2
 2960 004e 5B00     		lsls	r3, r3, #1
 2961 0050 9B18     		adds	r3, r3, r2
 2962 0052 9B00     		lsls	r3, r3, #2
 2963 0054 C318     		adds	r3, r0, r3
 2964 0056 0833     		adds	r3, r3, #8
 2965 0058 1960     		str	r1, [r3]
2000:Generated_Source\PSoC4/CyLib.c **** 
2001:Generated_Source\PSoC4/CyLib.c ****         CyExitCriticalSection(interruptState);
 2966              		.loc 1 2001 0
 2967 005a 0B23     		movs	r3, #11
 2968 005c FB18     		adds	r3, r7, r3
 2969 005e 1B78     		ldrb	r3, [r3]
 2970 0060 1800     		movs	r0, r3
 2971 0062 FFF7FEFF 		bl	CyExitCriticalSection
2002:Generated_Source\PSoC4/CyLib.c **** 
2003:Generated_Source\PSoC4/CyLib.c ****         return (returnStatus);
 2972              		.loc 1 2003 0
 2973 0066 FB68     		ldr	r3, [r7, #12]
2004:Generated_Source\PSoC4/CyLib.c ****     }
 2974              		.loc 1 2004 0
 2975 0068 1800     		movs	r0, r3
 2976 006a BD46     		mov	sp, r7
 2977 006c 05B0     		add	sp, sp, #20
 2978              		@ sp needed
 2979 006e 90BD     		pop	{r4, r7, pc}
 2980              	.L193:
 2981              		.align	2
 2982              	.L192:
ARM GAS  C:\Users\essele\AppData\Local\Temp\ccaJcTi8.s 			page 89


 2983 0070 14000C40 		.word	1074528276
 2984              		.cfi_endproc
 2985              	.LFE26:
 2986              		.size	CySysClkPllGetUnlockStatus, .-CySysClkPllGetUnlockStatus
 2987              		.global	__aeabi_idiv
 2988              		.section	.text.CySysClkPllSetFrequency,"ax",%progbits
 2989              		.align	2
 2990              		.global	CySysClkPllSetFrequency
 2991              		.code	16
 2992              		.thumb_func
 2993              		.type	CySysClkPllSetFrequency, %function
 2994              	CySysClkPllSetFrequency:
 2995              	.LFB27:
2005:Generated_Source\PSoC4/CyLib.c **** 
2006:Generated_Source\PSoC4/CyLib.c **** 
2007:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
2008:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllSetFrequency
2009:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
2010:Generated_Source\PSoC4/CyLib.c ****     *
2011:Generated_Source\PSoC4/CyLib.c ****     * Configures either PLL#0 or PLL#1 for the requested input/output frequencies.
2012:Generated_Source\PSoC4/CyLib.c ****     * The input frequency is the frequency of the source to the PLL. The source is
2013:Generated_Source\PSoC4/CyLib.c ****     * set using the CySysClkPllSetSource() function.
2014:Generated_Source\PSoC4/CyLib.c ****     *
2015:Generated_Source\PSoC4/CyLib.c ****     * The PLL must not be the system clock source when calling this function. The
2016:Generated_Source\PSoC4/CyLib.c ****     * PLL output will glitch during this function call.
2017:Generated_Source\PSoC4/CyLib.c ****     *
2018:Generated_Source\PSoC4/CyLib.c ****     * This API is available only for PSoC 4200L / 4100S with PLL devices.
2019:Generated_Source\PSoC4/CyLib.c ****     *
2020:Generated_Source\PSoC4/CyLib.c ****     * \param pll:
2021:Generated_Source\PSoC4/CyLib.c ****     *  0   PLL#0
2022:Generated_Source\PSoC4/CyLib.c ****     *  1   PLL#1 (available only for PSoC 4200L)
2023:Generated_Source\PSoC4/CyLib.c ****     *
2024:Generated_Source\PSoC4/CyLib.c ****     * \param inputFreq The reference frequency in KHz. The valid range is from 1000 to 49152 KHz.
2025:Generated_Source\PSoC4/CyLib.c ****     *
2026:Generated_Source\PSoC4/CyLib.c ****     * \param pllFreq The target frequency in KHz. The valid range is from 22500 to 49152 KHz.
2027:Generated_Source\PSoC4/CyLib.c ****     *
2028:Generated_Source\PSoC4/CyLib.c ****     * \param divider The output clock divider for the PLL:
2029:Generated_Source\PSoC4/CyLib.c ****     * CY_SYS_PLL_OUTPUT_DIVPASS    Pass Through
2030:Generated_Source\PSoC4/CyLib.c ****     * CY_SYS_PLL_OUTPUT_DIV2       Divide by 2
2031:Generated_Source\PSoC4/CyLib.c ****     * CY_SYS_PLL_OUTPUT_DIV4       Divide by 4
2032:Generated_Source\PSoC4/CyLib.c ****     * CY_SYS_PLL_OUTPUT_DIV8       Divide by 8
2033:Generated_Source\PSoC4/CyLib.c ****     *
2034:Generated_Source\PSoC4/CyLib.c ****     * \param freqTol The tolerance in ppm, 10 ppm is equal to 0.001%.
2035:Generated_Source\PSoC4/CyLib.c ****     *
2036:Generated_Source\PSoC4/CyLib.c ****     * \return CYRET_SUCCESS The PLL was successfully configured for the requested
2037:Generated_Source\PSoC4/CyLib.c ****     * frequency.
2038:Generated_Source\PSoC4/CyLib.c ****     *
2039:Generated_Source\PSoC4/CyLib.c ****     * \return CYRET_BAD_PARAM The PLL was not able to successfully configure for the
2040:Generated_Source\PSoC4/CyLib.c ****     * requested frequency.
2041:Generated_Source\PSoC4/CyLib.c ****     *
2042:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
2043:Generated_Source\PSoC4/CyLib.c ****     cystatus CySysClkPllSetFrequency(uint32 pll, uint32 inputFreq, uint32 pllFreq, uint32 divider, 
2044:Generated_Source\PSoC4/CyLib.c ****     {
 2996              		.loc 1 2044 0
 2997              		.cfi_startproc
 2998              		@ args = 4, pretend = 0, frame = 56
 2999              		@ frame_needed = 1, uses_anonymous_args = 0
ARM GAS  C:\Users\essele\AppData\Local\Temp\ccaJcTi8.s 			page 90


 3000 0000 80B5     		push	{r7, lr}
 3001              		.cfi_def_cfa_offset 8
 3002              		.cfi_offset 7, -8
 3003              		.cfi_offset 14, -4
 3004 0002 8EB0     		sub	sp, sp, #56
 3005              		.cfi_def_cfa_offset 64
 3006 0004 00AF     		add	r7, sp, #0
 3007              		.cfi_def_cfa_register 7
 3008 0006 F860     		str	r0, [r7, #12]
 3009 0008 B960     		str	r1, [r7, #8]
 3010 000a 7A60     		str	r2, [r7, #4]
 3011 000c 3B60     		str	r3, [r7]
2045:Generated_Source\PSoC4/CyLib.c ****         uint32 qMin;
2046:Generated_Source\PSoC4/CyLib.c ****         uint32 qMax;
2047:Generated_Source\PSoC4/CyLib.c **** 
2048:Generated_Source\PSoC4/CyLib.c ****         uint32 qVal = CY_SYS_CLK_PLL_INVALID;
 3012              		.loc 1 2048 0
 3013 000e 0023     		movs	r3, #0
 3014 0010 7B63     		str	r3, [r7, #52]
2049:Generated_Source\PSoC4/CyLib.c ****         uint32 pVal = CY_SYS_CLK_PLL_INVALID;
 3015              		.loc 1 2049 0
 3016 0012 0023     		movs	r3, #0
 3017 0014 3B63     		str	r3, [r7, #48]
2050:Generated_Source\PSoC4/CyLib.c **** 
2051:Generated_Source\PSoC4/CyLib.c ****         uint32 q;
2052:Generated_Source\PSoC4/CyLib.c ****         uint32 p;
2053:Generated_Source\PSoC4/CyLib.c **** 
2054:Generated_Source\PSoC4/CyLib.c ****         uint32 fvco;
2055:Generated_Source\PSoC4/CyLib.c ****         int32 ferr;
2056:Generated_Source\PSoC4/CyLib.c **** 
2057:Generated_Source\PSoC4/CyLib.c ****         cystatus tmp;
2058:Generated_Source\PSoC4/CyLib.c ****         cystatus returnStatus = CYRET_BAD_PARAM;
 3018              		.loc 1 2058 0
 3019 0016 0123     		movs	r3, #1
 3020 0018 BB62     		str	r3, [r7, #40]
2059:Generated_Source\PSoC4/CyLib.c **** 
2060:Generated_Source\PSoC4/CyLib.c **** 
2061:Generated_Source\PSoC4/CyLib.c ****         tmp = CySysClkPllConfigChangeAllowed(pll);
 3021              		.loc 1 2061 0
 3022 001a FB68     		ldr	r3, [r7, #12]
 3023 001c 1800     		movs	r0, r3
 3024 001e FFF7FEFF 		bl	CySysClkPllConfigChangeAllowed
 3025 0022 0300     		movs	r3, r0
 3026 0024 7B62     		str	r3, [r7, #36]
2062:Generated_Source\PSoC4/CyLib.c **** 
2063:Generated_Source\PSoC4/CyLib.c ****         if ((pll < CY_IP_PLL_NR) &&
 3027              		.loc 1 2063 0
 3028 0026 FB68     		ldr	r3, [r7, #12]
 3029 0028 012B     		cmp	r3, #1
 3030 002a 00D9     		bls	.LCB2580
 3031 002c 8EE0     		b	.L195	@long jump
 3032              	.LCB2580:
 3033              		.loc 1 2063 0 is_stmt 0 discriminator 1
 3034 002e BB68     		ldr	r3, [r7, #8]
 3035 0030 494A     		ldr	r2, .L204
 3036 0032 9342     		cmp	r3, r2
 3037 0034 00D8     		bhi	.LCB2584
ARM GAS  C:\Users\essele\AppData\Local\Temp\ccaJcTi8.s 			page 91


 3038 0036 89E0     		b	.L195	@long jump
 3039              	.LCB2584:
2064:Generated_Source\PSoC4/CyLib.c ****             (inputFreq  >= CY_SYS_CLK_PLL_INPUT_FREQ_MIN )  && (inputFreq  <= CY_SYS_CLK_PLL_INPUT_
 3040              		.loc 1 2064 0 is_stmt 1
 3041 0038 BA68     		ldr	r2, [r7, #8]
 3042 003a C023     		movs	r3, #192
 3043 003c 1B02     		lsls	r3, r3, #8
 3044 003e 9A42     		cmp	r2, r3
 3045 0040 00D9     		bls	.LCB2589
 3046 0042 83E0     		b	.L195	@long jump
 3047              	.LCB2589:
 3048              		.loc 1 2064 0 is_stmt 0 discriminator 1
 3049 0044 7B68     		ldr	r3, [r7, #4]
 3050 0046 454A     		ldr	r2, .L204+4
 3051 0048 9342     		cmp	r3, r2
 3052 004a 00D8     		bhi	.LCB2593
 3053 004c 7EE0     		b	.L195	@long jump
 3054              	.LCB2593:
2065:Generated_Source\PSoC4/CyLib.c ****             (pllFreq >= CY_SYS_CLK_PLL_OUTPUT_FREQ_MIN ) && (pllFreq <= CY_SYS_CLK_PLL_OUTPUT_FREQ_
 3055              		.loc 1 2065 0 is_stmt 1
 3056 004e 7A68     		ldr	r2, [r7, #4]
 3057 0050 C023     		movs	r3, #192
 3058 0052 1B02     		lsls	r3, r3, #8
 3059 0054 9A42     		cmp	r2, r3
 3060 0056 00D9     		bls	.LCB2598
 3061 0058 78E0     		b	.L195	@long jump
 3062              	.LCB2598:
 3063              		.loc 1 2065 0 is_stmt 0 discriminator 1
 3064 005a 3B68     		ldr	r3, [r7]
 3065 005c 032B     		cmp	r3, #3
 3066 005e 00D9     		bls	.LCB2601
 3067 0060 74E0     		b	.L195	@long jump
 3068              	.LCB2601:
2066:Generated_Source\PSoC4/CyLib.c ****             (divider <= CY_SYS_PLL_OUTPUT_DIV8) &&
 3069              		.loc 1 2066 0 is_stmt 1
 3070 0062 7B6A     		ldr	r3, [r7, #36]
 3071 0064 002B     		cmp	r3, #0
 3072 0066 00D0     		beq	.LCB2604
 3073 0068 70E0     		b	.L195	@long jump
 3074              	.LCB2604:
2067:Generated_Source\PSoC4/CyLib.c ****             (CYRET_SUCCESS == tmp))
2068:Generated_Source\PSoC4/CyLib.c ****         {
2069:Generated_Source\PSoC4/CyLib.c **** 
2070:Generated_Source\PSoC4/CyLib.c ****             /* Minimum feed forward loop divisor */
2071:Generated_Source\PSoC4/CyLib.c ****             qMin = (inputFreq + (CY_SYS_CLK_PLL_FPFDMAX - 1u)) / CY_SYS_CLK_PLL_FPFDMAX;
 3075              		.loc 1 2071 0
 3076 006a BB68     		ldr	r3, [r7, #8]
 3077 006c 3C4A     		ldr	r2, .L204+8
 3078 006e 9446     		mov	ip, r2
 3079 0070 6344     		add	r3, r3, ip
 3080 0072 3C49     		ldr	r1, .L204+12
 3081 0074 1800     		movs	r0, r3
 3082 0076 FFF7FEFF 		bl	__aeabi_uidiv
 3083 007a 0300     		movs	r3, r0
 3084 007c 3B62     		str	r3, [r7, #32]
2072:Generated_Source\PSoC4/CyLib.c ****             qMin = (qMin < CY_SYS_CLK_PLL_QMINIP) ? CY_SYS_CLK_PLL_QMINIP : qMin;
 3085              		.loc 1 2072 0
ARM GAS  C:\Users\essele\AppData\Local\Temp\ccaJcTi8.s 			page 92


 3086 007e 3B6A     		ldr	r3, [r7, #32]
 3087 0080 002B     		cmp	r3, #0
 3088 0082 01D0     		beq	.L196
 3089              		.loc 1 2072 0 is_stmt 0 discriminator 1
 3090 0084 3B6A     		ldr	r3, [r7, #32]
 3091 0086 00E0     		b	.L197
 3092              	.L196:
 3093              		.loc 1 2072 0 discriminator 2
 3094 0088 0123     		movs	r3, #1
 3095              	.L197:
 3096              		.loc 1 2072 0 discriminator 4
 3097 008a 3B62     		str	r3, [r7, #32]
2073:Generated_Source\PSoC4/CyLib.c **** 
2074:Generated_Source\PSoC4/CyLib.c ****             /* Maximum feed forward loop divisor */
2075:Generated_Source\PSoC4/CyLib.c ****             qMax = inputFreq / CY_SYS_CLK_PLL_FPFDMIN;
 3098              		.loc 1 2075 0 is_stmt 1 discriminator 4
 3099 008c BA68     		ldr	r2, [r7, #8]
 3100 008e FA23     		movs	r3, #250
 3101 0090 9900     		lsls	r1, r3, #2
 3102 0092 1000     		movs	r0, r2
 3103 0094 FFF7FEFF 		bl	__aeabi_uidiv
 3104 0098 0300     		movs	r3, r0
 3105 009a FB61     		str	r3, [r7, #28]
2076:Generated_Source\PSoC4/CyLib.c ****             qMax = (qMax > CY_SYS_CLK_PLL_QMAXIP) ? CY_SYS_CLK_PLL_QMAXIP : qMax;
 3106              		.loc 1 2076 0 discriminator 4
 3107 009c FB69     		ldr	r3, [r7, #28]
 3108 009e 402B     		cmp	r3, #64
 3109 00a0 00D9     		bls	.L198
 3110 00a2 4023     		movs	r3, #64
 3111              	.L198:
 3112 00a4 FB61     		str	r3, [r7, #28]
2077:Generated_Source\PSoC4/CyLib.c **** 
2078:Generated_Source\PSoC4/CyLib.c ****             if (qMin <= qMax)
 3113              		.loc 1 2078 0 discriminator 4
 3114 00a6 3A6A     		ldr	r2, [r7, #32]
 3115 00a8 FB69     		ldr	r3, [r7, #28]
 3116 00aa 9A42     		cmp	r2, r3
 3117 00ac 4ED8     		bhi	.L195
2079:Generated_Source\PSoC4/CyLib.c ****             {
2080:Generated_Source\PSoC4/CyLib.c ****                 for(q = qMin; q <= qMax; q++)
 3118              		.loc 1 2080 0
 3119 00ae 3B6A     		ldr	r3, [r7, #32]
 3120 00b0 FB62     		str	r3, [r7, #44]
 3121 00b2 31E0     		b	.L199
 3122              	.L202:
2081:Generated_Source\PSoC4/CyLib.c ****                 {
2082:Generated_Source\PSoC4/CyLib.c ****                     /* Solve for the feedback divisor value */
2083:Generated_Source\PSoC4/CyLib.c **** 
2084:Generated_Source\PSoC4/CyLib.c ****                     /* INT((pllFreq * q ) / inputFreq), where INT is normal rounding  */
2085:Generated_Source\PSoC4/CyLib.c ****                     p = ((pllFreq * q) + (inputFreq / 2u)) / inputFreq;
 3123              		.loc 1 2085 0
 3124 00b4 7B68     		ldr	r3, [r7, #4]
 3125 00b6 FA6A     		ldr	r2, [r7, #44]
 3126 00b8 5A43     		muls	r2, r3
 3127 00ba BB68     		ldr	r3, [r7, #8]
 3128 00bc 5B08     		lsrs	r3, r3, #1
 3129 00be D318     		adds	r3, r2, r3
ARM GAS  C:\Users\essele\AppData\Local\Temp\ccaJcTi8.s 			page 93


 3130 00c0 B968     		ldr	r1, [r7, #8]
 3131 00c2 1800     		movs	r0, r3
 3132 00c4 FFF7FEFF 		bl	__aeabi_uidiv
 3133 00c8 0300     		movs	r3, r0
 3134 00ca BB61     		str	r3, [r7, #24]
2086:Generated_Source\PSoC4/CyLib.c **** 
2087:Generated_Source\PSoC4/CyLib.c ****                     /* Calculate the actual VCO frequency (FVCO) */
2088:Generated_Source\PSoC4/CyLib.c ****                     fvco = ((inputFreq * p) / q);
 3135              		.loc 1 2088 0
 3136 00cc BB68     		ldr	r3, [r7, #8]
 3137 00ce BA69     		ldr	r2, [r7, #24]
 3138 00d0 5343     		muls	r3, r2
 3139 00d2 F96A     		ldr	r1, [r7, #44]
 3140 00d4 1800     		movs	r0, r3
 3141 00d6 FFF7FEFF 		bl	__aeabi_uidiv
 3142 00da 0300     		movs	r3, r0
 3143 00dc 7B61     		str	r3, [r7, #20]
2089:Generated_Source\PSoC4/CyLib.c **** 
2090:Generated_Source\PSoC4/CyLib.c ****                     /* Calculate the frequency error (FERR) */
2091:Generated_Source\PSoC4/CyLib.c ****                     ferr = ((1000000 * ((int32) fvco - (int32) pllFreq))/ (int32) pllFreq);
 3144              		.loc 1 2091 0
 3145 00de 7A69     		ldr	r2, [r7, #20]
 3146 00e0 7B68     		ldr	r3, [r7, #4]
 3147 00e2 D31A     		subs	r3, r2, r3
 3148 00e4 204A     		ldr	r2, .L204+16
 3149 00e6 5343     		muls	r3, r2
 3150 00e8 7A68     		ldr	r2, [r7, #4]
 3151 00ea 1100     		movs	r1, r2
 3152 00ec 1800     		movs	r0, r3
 3153 00ee FFF7FEFF 		bl	__aeabi_idiv
 3154 00f2 0300     		movs	r3, r0
 3155 00f4 3B61     		str	r3, [r7, #16]
2092:Generated_Source\PSoC4/CyLib.c **** 
2093:Generated_Source\PSoC4/CyLib.c ****                     /* Bound check the frequency error and decide next action */
2094:Generated_Source\PSoC4/CyLib.c ****                     if ((( -1 * (int32) freqTol) <= ferr) && (ferr <= (int32) freqTol))
 3156              		.loc 1 2094 0
 3157 00f6 3B6C     		ldr	r3, [r7, #64]
 3158 00f8 5A42     		rsbs	r2, r3, #0
 3159 00fa 3B69     		ldr	r3, [r7, #16]
 3160 00fc 9A42     		cmp	r2, r3
 3161 00fe 08DC     		bgt	.L200
 3162              		.loc 1 2094 0 is_stmt 0 discriminator 1
 3163 0100 3B6C     		ldr	r3, [r7, #64]
 3164 0102 3A69     		ldr	r2, [r7, #16]
 3165 0104 9A42     		cmp	r2, r3
 3166 0106 04DC     		bgt	.L200
2095:Generated_Source\PSoC4/CyLib.c ****                     {
2096:Generated_Source\PSoC4/CyLib.c ****                         qVal = q;
 3167              		.loc 1 2096 0 is_stmt 1
 3168 0108 FB6A     		ldr	r3, [r7, #44]
 3169 010a 7B63     		str	r3, [r7, #52]
2097:Generated_Source\PSoC4/CyLib.c ****                         pVal = p;
 3170              		.loc 1 2097 0
 3171 010c BB69     		ldr	r3, [r7, #24]
 3172 010e 3B63     		str	r3, [r7, #48]
2098:Generated_Source\PSoC4/CyLib.c ****                         break;
 3173              		.loc 1 2098 0
ARM GAS  C:\Users\essele\AppData\Local\Temp\ccaJcTi8.s 			page 94


 3174 0110 06E0     		b	.L201
 3175              	.L200:
2080:Generated_Source\PSoC4/CyLib.c ****                 {
 3176              		.loc 1 2080 0 discriminator 2
 3177 0112 FB6A     		ldr	r3, [r7, #44]
 3178 0114 0133     		adds	r3, r3, #1
 3179 0116 FB62     		str	r3, [r7, #44]
 3180              	.L199:
2080:Generated_Source\PSoC4/CyLib.c ****                 {
 3181              		.loc 1 2080 0 is_stmt 0 discriminator 1
 3182 0118 FA6A     		ldr	r2, [r7, #44]
 3183 011a FB69     		ldr	r3, [r7, #28]
 3184 011c 9A42     		cmp	r2, r3
 3185 011e C9D9     		bls	.L202
 3186              	.L201:
2099:Generated_Source\PSoC4/CyLib.c ****                     }
2100:Generated_Source\PSoC4/CyLib.c ****                 }
2101:Generated_Source\PSoC4/CyLib.c **** 
2102:Generated_Source\PSoC4/CyLib.c **** 
2103:Generated_Source\PSoC4/CyLib.c ****                 if ((pVal != CY_SYS_CLK_PLL_INVALID) && (qVal != CY_SYS_CLK_PLL_INVALID))
 3187              		.loc 1 2103 0 is_stmt 1
 3188 0120 3B6B     		ldr	r3, [r7, #48]
 3189 0122 002B     		cmp	r3, #0
 3190 0124 12D0     		beq	.L195
 3191              		.loc 1 2103 0 is_stmt 0 discriminator 1
 3192 0126 7B6B     		ldr	r3, [r7, #52]
 3193 0128 002B     		cmp	r3, #0
 3194 012a 0FD0     		beq	.L195
2104:Generated_Source\PSoC4/CyLib.c ****                 {
2105:Generated_Source\PSoC4/CyLib.c ****                     if (CySysClkPllSetPQ(pll, pVal, qVal, CY_SYS_CLK_PLL_CURRENT_DEFAULT) == CYRET_
 3195              		.loc 1 2105 0 is_stmt 1
 3196 012c 7A6B     		ldr	r2, [r7, #52]
 3197 012e 396B     		ldr	r1, [r7, #48]
 3198 0130 F868     		ldr	r0, [r7, #12]
 3199 0132 0223     		movs	r3, #2
 3200 0134 FFF7FEFF 		bl	CySysClkPllSetPQ
 3201 0138 031E     		subs	r3, r0, #0
 3202 013a 07D1     		bne	.L195
2106:Generated_Source\PSoC4/CyLib.c ****                     {
2107:Generated_Source\PSoC4/CyLib.c ****                         returnStatus = CySysClkPllSetOutputDivider(pll, divider);
 3203              		.loc 1 2107 0
 3204 013c 3A68     		ldr	r2, [r7]
 3205 013e FB68     		ldr	r3, [r7, #12]
 3206 0140 1100     		movs	r1, r2
 3207 0142 1800     		movs	r0, r3
 3208 0144 FFF7FEFF 		bl	CySysClkPllSetOutputDivider
 3209 0148 0300     		movs	r3, r0
 3210 014a BB62     		str	r3, [r7, #40]
 3211              	.L195:
2108:Generated_Source\PSoC4/CyLib.c ****                     }
2109:Generated_Source\PSoC4/CyLib.c ****                 }
2110:Generated_Source\PSoC4/CyLib.c ****             }
2111:Generated_Source\PSoC4/CyLib.c **** 
2112:Generated_Source\PSoC4/CyLib.c ****         }
2113:Generated_Source\PSoC4/CyLib.c **** 
2114:Generated_Source\PSoC4/CyLib.c ****         return (returnStatus);
 3212              		.loc 1 2114 0
ARM GAS  C:\Users\essele\AppData\Local\Temp\ccaJcTi8.s 			page 95


 3213 014c BB6A     		ldr	r3, [r7, #40]
2115:Generated_Source\PSoC4/CyLib.c ****     }
 3214              		.loc 1 2115 0
 3215 014e 1800     		movs	r0, r3
 3216 0150 BD46     		mov	sp, r7
 3217 0152 0EB0     		add	sp, sp, #56
 3218              		@ sp needed
 3219 0154 80BD     		pop	{r7, pc}
 3220              	.L205:
 3221 0156 C046     		.align	2
 3222              	.L204:
 3223 0158 E7030000 		.word	999
 3224 015c E3570000 		.word	22499
 3225 0160 B70B0000 		.word	2999
 3226 0164 B80B0000 		.word	3000
 3227 0168 40420F00 		.word	1000000
 3228              		.cfi_endproc
 3229              	.LFE27:
 3230              		.size	CySysClkPllSetFrequency, .-CySysClkPllSetFrequency
 3231              		.section	.text.CySysClkPllSetSource,"ax",%progbits
 3232              		.align	2
 3233              		.global	CySysClkPllSetSource
 3234              		.code	16
 3235              		.thumb_func
 3236              		.type	CySysClkPllSetSource, %function
 3237              	CySysClkPllSetSource:
 3238              	.LFB28:
2116:Generated_Source\PSoC4/CyLib.c **** 
2117:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
2118:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllSetSource
2119:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
2120:Generated_Source\PSoC4/CyLib.c ****     *
2121:Generated_Source\PSoC4/CyLib.c ****     *  Sets the input clock source to the PLL. The PLL must be disabled before
2122:Generated_Source\PSoC4/CyLib.c ****     *  calling this function.
2123:Generated_Source\PSoC4/CyLib.c ****     *
2124:Generated_Source\PSoC4/CyLib.c ****     *  This API is available only for PSoC 4200L / 4100S with PLL devices.
2125:Generated_Source\PSoC4/CyLib.c ****     *
2126:Generated_Source\PSoC4/CyLib.c ****     *  \param PLL:
2127:Generated_Source\PSoC4/CyLib.c ****     *  0   PLL#0
2128:Generated_Source\PSoC4/CyLib.c ****     *  1   PLL#1 (available only for PSoC 4200L)
2129:Generated_Source\PSoC4/CyLib.c ****     *
2130:Generated_Source\PSoC4/CyLib.c ****     * \param source:
2131:Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_SOURCE_IMO        IMO
2132:Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_SOURCE_EXTCLK     External Clock (available only for PSoC 4200L)
2133:Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_SOURCE_ECO        ECO
2134:Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_SOURCE_DSI0       DSI_OUT[0] (available only for PSoC 4200L)
2135:Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_SOURCE_DSI1       DSI_OUT[1] (available only for PSoC 4200L)
2136:Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_SOURCE_DSI2       DSI_OUT[2] (available only for PSoC 4200L)
2137:Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_SOURCE_DSI3       DSI_OUT[3] (available only for PSoC 4200L)
2138:Generated_Source\PSoC4/CyLib.c ****     *
2139:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
2140:Generated_Source\PSoC4/CyLib.c ****     void CySysClkPllSetSource(uint32 pll, uint32 source)
2141:Generated_Source\PSoC4/CyLib.c ****     {
 3239              		.loc 1 2141 0
 3240              		.cfi_startproc
 3241              		@ args = 0, pretend = 0, frame = 16
 3242              		@ frame_needed = 1, uses_anonymous_args = 0
ARM GAS  C:\Users\essele\AppData\Local\Temp\ccaJcTi8.s 			page 96


 3243 0000 90B5     		push	{r4, r7, lr}
 3244              		.cfi_def_cfa_offset 12
 3245              		.cfi_offset 4, -12
 3246              		.cfi_offset 7, -8
 3247              		.cfi_offset 14, -4
 3248 0002 85B0     		sub	sp, sp, #20
 3249              		.cfi_def_cfa_offset 32
 3250 0004 00AF     		add	r7, sp, #0
 3251              		.cfi_def_cfa_register 7
 3252 0006 7860     		str	r0, [r7, #4]
 3253 0008 3960     		str	r1, [r7]
2142:Generated_Source\PSoC4/CyLib.c ****         uint32 regTmp;
2143:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
2144:Generated_Source\PSoC4/CyLib.c ****         
2145:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_SRSSLT)
2146:Generated_Source\PSoC4/CyLib.c ****             uint8 i = 0u;
2147:Generated_Source\PSoC4/CyLib.c ****         #endif /* (CY_IP_SRSSLT) */
2148:Generated_Source\PSoC4/CyLib.c **** 
2149:Generated_Source\PSoC4/CyLib.c ****         interruptState = CyEnterCriticalSection();
 3254              		.loc 1 2149 0
 3255 000a 0F23     		movs	r3, #15
 3256 000c FC18     		adds	r4, r7, r3
 3257 000e FFF7FEFF 		bl	CyEnterCriticalSection
 3258 0012 0300     		movs	r3, r0
 3259 0014 2370     		strb	r3, [r4]
2150:Generated_Source\PSoC4/CyLib.c **** 
2151:Generated_Source\PSoC4/CyLib.c ****         if (pll < CY_IP_PLL_NR)
 3260              		.loc 1 2151 0
 3261 0016 7B68     		ldr	r3, [r7, #4]
 3262 0018 012B     		cmp	r3, #1
 3263 001a 23D8     		bhi	.L207
2152:Generated_Source\PSoC4/CyLib.c ****         {
2153:Generated_Source\PSoC4/CyLib.c ****             #if(CY_IP_SRSSV2)
2154:Generated_Source\PSoC4/CyLib.c ****                 regTmp = CY_SYS_CLK_SELECT_REG & (uint32) ~CY_SYS_CLK_SELECT_PLL_MASK(pll);
 3264              		.loc 1 2154 0
 3265 001c 164B     		ldr	r3, .L208
 3266 001e 1968     		ldr	r1, [r3]
 3267 0020 7B68     		ldr	r3, [r7, #4]
 3268 0022 5A1C     		adds	r2, r3, #1
 3269 0024 1300     		movs	r3, r2
 3270 0026 5B00     		lsls	r3, r3, #1
 3271 0028 9B18     		adds	r3, r3, r2
 3272 002a 0722     		movs	r2, #7
 3273 002c 9A40     		lsls	r2, r2, r3
 3274 002e 1300     		movs	r3, r2
 3275 0030 DB43     		mvns	r3, r3
 3276 0032 0B40     		ands	r3, r1
 3277 0034 BB60     		str	r3, [r7, #8]
2155:Generated_Source\PSoC4/CyLib.c ****                 regTmp |= ((source << CY_SYS_CLK_SELECT_PLL_SHIFT(pll)) & CY_SYS_CLK_SELECT_PLL_MAS
 3278              		.loc 1 2155 0
 3279 0036 7B68     		ldr	r3, [r7, #4]
 3280 0038 5A1C     		adds	r2, r3, #1
 3281 003a 1300     		movs	r3, r2
 3282 003c 5B00     		lsls	r3, r3, #1
 3283 003e 9B18     		adds	r3, r3, r2
 3284 0040 3A68     		ldr	r2, [r7]
 3285 0042 9A40     		lsls	r2, r2, r3
ARM GAS  C:\Users\essele\AppData\Local\Temp\ccaJcTi8.s 			page 97


 3286 0044 1100     		movs	r1, r2
 3287 0046 7B68     		ldr	r3, [r7, #4]
 3288 0048 5A1C     		adds	r2, r3, #1
 3289 004a 1300     		movs	r3, r2
 3290 004c 5B00     		lsls	r3, r3, #1
 3291 004e 9B18     		adds	r3, r3, r2
 3292 0050 0722     		movs	r2, #7
 3293 0052 9A40     		lsls	r2, r2, r3
 3294 0054 1300     		movs	r3, r2
 3295 0056 0B40     		ands	r3, r1
 3296 0058 BA68     		ldr	r2, [r7, #8]
 3297 005a 1343     		orrs	r3, r2
 3298 005c BB60     		str	r3, [r7, #8]
2156:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_SELECT_REG = regTmp;
 3299              		.loc 1 2156 0
 3300 005e 064B     		ldr	r3, .L208
 3301 0060 BA68     		ldr	r2, [r7, #8]
 3302 0062 1A60     		str	r2, [r3]
 3303              	.L207:
2157:Generated_Source\PSoC4/CyLib.c ****             #else
2158:Generated_Source\PSoC4/CyLib.c ****                 regTmp = CY_SYS_ECO_CLK_SELECT_REG & (uint32) ~CY_SYS_ECO_CLK_SELECT_PLL0_MASK;
2159:Generated_Source\PSoC4/CyLib.c ****                 regTmp |= ((source << CY_SYS_ECO_CLK_SELECT_PLL0_SHIFT) & CY_SYS_ECO_CLK_SELECT_PLL
2160:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_ECO_CLK_SELECT_REG = regTmp;
2161:Generated_Source\PSoC4/CyLib.c ****                 
2162:Generated_Source\PSoC4/CyLib.c ****                 /* Generate clock sequence to change clock source in CY_SYS_ECO_CLK_SELECT_REG */
2163:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_EXCO_PGM_CLK_REG |= CY_SYS_EXCO_PGM_CLK_ENABLE_MASK;
2164:Generated_Source\PSoC4/CyLib.c ****                 
2165:Generated_Source\PSoC4/CyLib.c ****                 for(i = 0u; i < CY_SYS_EXCO_PGM_CLK_SEQ_GENERATOR; i++)
2166:Generated_Source\PSoC4/CyLib.c ****                 {
2167:Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_EXCO_PGM_CLK_REG |= CY_SYS_EXCO_PGM_CLK_CLK_ECO_MASK;
2168:Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_EXCO_PGM_CLK_REG &= ~CY_SYS_EXCO_PGM_CLK_CLK_ECO_MASK;
2169:Generated_Source\PSoC4/CyLib.c ****                 }
2170:Generated_Source\PSoC4/CyLib.c ****                 
2171:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_EXCO_PGM_CLK_REG &= ~CY_SYS_EXCO_PGM_CLK_ENABLE_MASK;
2172:Generated_Source\PSoC4/CyLib.c **** 
2173:Generated_Source\PSoC4/CyLib.c ****             #endif /* (CY_IP_SRSSV2) */
2174:Generated_Source\PSoC4/CyLib.c ****         }
2175:Generated_Source\PSoC4/CyLib.c **** 
2176:Generated_Source\PSoC4/CyLib.c ****         CyExitCriticalSection(interruptState);
 3304              		.loc 1 2176 0
 3305 0064 0F23     		movs	r3, #15
 3306 0066 FB18     		adds	r3, r7, r3
 3307 0068 1B78     		ldrb	r3, [r3]
 3308 006a 1800     		movs	r0, r3
 3309 006c FFF7FEFF 		bl	CyExitCriticalSection
2177:Generated_Source\PSoC4/CyLib.c ****     }
 3310              		.loc 1 2177 0
 3311 0070 C046     		nop
 3312 0072 BD46     		mov	sp, r7
 3313 0074 05B0     		add	sp, sp, #20
 3314              		@ sp needed
 3315 0076 90BD     		pop	{r4, r7, pc}
 3316              	.L209:
 3317              		.align	2
 3318              	.L208:
 3319 0078 00010B40 		.word	1074462976
 3320              		.cfi_endproc
ARM GAS  C:\Users\essele\AppData\Local\Temp\ccaJcTi8.s 			page 98


 3321              	.LFE28:
 3322              		.size	CySysClkPllSetSource, .-CySysClkPllSetSource
 3323              		.section	.text.CySysClkPllSetOutputDivider,"ax",%progbits
 3324              		.align	2
 3325              		.global	CySysClkPllSetOutputDivider
 3326              		.code	16
 3327              		.thumb_func
 3328              		.type	CySysClkPllSetOutputDivider, %function
 3329              	CySysClkPllSetOutputDivider:
 3330              	.LFB29:
2178:Generated_Source\PSoC4/CyLib.c **** 
2179:Generated_Source\PSoC4/CyLib.c ****     
2180:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
2181:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllSetOutputDivider
2182:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
2183:Generated_Source\PSoC4/CyLib.c ****     *
2184:Generated_Source\PSoC4/CyLib.c ****     *  Sets the output clock divider for the PLL.
2185:Generated_Source\PSoC4/CyLib.c ****     *
2186:Generated_Source\PSoC4/CyLib.c ****     *  The PLL must not be the System Clock source when calling this function. The
2187:Generated_Source\PSoC4/CyLib.c ****     *  PLL output will glitch during this function call.
2188:Generated_Source\PSoC4/CyLib.c ****     *
2189:Generated_Source\PSoC4/CyLib.c ****     *  This API is available only for PSoC 4200L / 4100S with PLL devices.
2190:Generated_Source\PSoC4/CyLib.c ****     *
2191:Generated_Source\PSoC4/CyLib.c ****     *  \param PLL:
2192:Generated_Source\PSoC4/CyLib.c ****     *   0   PLL#0
2193:Generated_Source\PSoC4/CyLib.c ****     *   1   PLL#1 (available only for PSoC 4200L)
2194:Generated_Source\PSoC4/CyLib.c ****     *
2195:Generated_Source\PSoC4/CyLib.c ****     * \param divider:
2196:Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_OUTPUT_DIVPASS    Pass through
2197:Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_OUTPUT_DIV2       Divide by 2
2198:Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_OUTPUT_DIV4       Divide by 4
2199:Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_OUTPUT_DIV8       Divide by 8
2200:Generated_Source\PSoC4/CyLib.c ****     *
2201:Generated_Source\PSoC4/CyLib.c ****     * \return \ref CYRET_SUCCESS    Completed successfully.
2202:Generated_Source\PSoC4/CyLib.c ****     * \return \ref CYRET_BAD_PARAM  The parameters are out of range or the
2203:Generated_Source\PSoC4/CyLib.c ****     * specified PLL sources the System clock.
2204:Generated_Source\PSoC4/CyLib.c ****     *
2205:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
2206:Generated_Source\PSoC4/CyLib.c ****     cystatus CySysClkPllSetOutputDivider(uint32 pll, uint32 divider)
2207:Generated_Source\PSoC4/CyLib.c ****     {
 3331              		.loc 1 2207 0
 3332              		.cfi_startproc
 3333              		@ args = 0, pretend = 0, frame = 24
 3334              		@ frame_needed = 1, uses_anonymous_args = 0
 3335 0000 90B5     		push	{r4, r7, lr}
 3336              		.cfi_def_cfa_offset 12
 3337              		.cfi_offset 4, -12
 3338              		.cfi_offset 7, -8
 3339              		.cfi_offset 14, -4
 3340 0002 87B0     		sub	sp, sp, #28
 3341              		.cfi_def_cfa_offset 40
 3342 0004 00AF     		add	r7, sp, #0
 3343              		.cfi_def_cfa_register 7
 3344 0006 7860     		str	r0, [r7, #4]
 3345 0008 3960     		str	r1, [r7]
2208:Generated_Source\PSoC4/CyLib.c ****         uint32   tmpReg;
2209:Generated_Source\PSoC4/CyLib.c ****         uint8    interruptState;
ARM GAS  C:\Users\essele\AppData\Local\Temp\ccaJcTi8.s 			page 99


2210:Generated_Source\PSoC4/CyLib.c ****         cystatus returnStatus = CYRET_BAD_PARAM;
 3346              		.loc 1 2210 0
 3347 000a 0123     		movs	r3, #1
 3348 000c 7B61     		str	r3, [r7, #20]
2211:Generated_Source\PSoC4/CyLib.c ****         cystatus tmp;
2212:Generated_Source\PSoC4/CyLib.c **** 
2213:Generated_Source\PSoC4/CyLib.c **** 
2214:Generated_Source\PSoC4/CyLib.c ****         interruptState = CyEnterCriticalSection();
 3349              		.loc 1 2214 0
 3350 000e 1323     		movs	r3, #19
 3351 0010 FC18     		adds	r4, r7, r3
 3352 0012 FFF7FEFF 		bl	CyEnterCriticalSection
 3353 0016 0300     		movs	r3, r0
 3354 0018 2370     		strb	r3, [r4]
2215:Generated_Source\PSoC4/CyLib.c **** 
2216:Generated_Source\PSoC4/CyLib.c ****         tmp = CySysClkPllConfigChangeAllowed(pll);
 3355              		.loc 1 2216 0
 3356 001a 7B68     		ldr	r3, [r7, #4]
 3357 001c 1800     		movs	r0, r3
 3358 001e FFF7FEFF 		bl	CySysClkPllConfigChangeAllowed
 3359 0022 0300     		movs	r3, r0
 3360 0024 FB60     		str	r3, [r7, #12]
2217:Generated_Source\PSoC4/CyLib.c **** 
2218:Generated_Source\PSoC4/CyLib.c ****         if ((pll < CY_IP_PLL_NR) && (CYRET_SUCCESS == tmp) && (divider <= CY_SYS_PLL_OUTPUT_DIV8))
 3361              		.loc 1 2218 0
 3362 0026 7B68     		ldr	r3, [r7, #4]
 3363 0028 012B     		cmp	r3, #1
 3364 002a 20D8     		bhi	.L211
 3365              		.loc 1 2218 0 is_stmt 0 discriminator 1
 3366 002c FB68     		ldr	r3, [r7, #12]
 3367 002e 002B     		cmp	r3, #0
 3368 0030 1DD1     		bne	.L211
 3369              		.loc 1 2218 0 discriminator 2
 3370 0032 3B68     		ldr	r3, [r7]
 3371 0034 032B     		cmp	r3, #3
 3372 0036 1AD8     		bhi	.L211
2219:Generated_Source\PSoC4/CyLib.c ****         {
2220:Generated_Source\PSoC4/CyLib.c ****             tmpReg  = CY_SYS_CLK_PLL_BASE.pll[pll].config & (uint32) ~(CY_SYS_CLK_PLL_CONFIG_OUTPUT
 3373              		.loc 1 2220 0 is_stmt 1
 3374 0038 1249     		ldr	r1, .L213
 3375 003a 7A68     		ldr	r2, [r7, #4]
 3376 003c 1300     		movs	r3, r2
 3377 003e 5B00     		lsls	r3, r3, #1
 3378 0040 9B18     		adds	r3, r3, r2
 3379 0042 9B00     		lsls	r3, r3, #2
 3380 0044 5B58     		ldr	r3, [r3, r1]
 3381 0046 104A     		ldr	r2, .L213+4
 3382 0048 1340     		ands	r3, r2
 3383 004a BB60     		str	r3, [r7, #8]
2221:Generated_Source\PSoC4/CyLib.c ****             tmpReg |= ((divider << CY_SYS_CLK_PLL_CONFIG_OUTPUT_DIV_SHIFT) & CY_SYS_CLK_PLL_CONFIG_
 3384              		.loc 1 2221 0
 3385 004c 3B68     		ldr	r3, [r7]
 3386 004e 9B03     		lsls	r3, r3, #14
 3387 0050 1B04     		lsls	r3, r3, #16
 3388 0052 1B0C     		lsrs	r3, r3, #16
 3389 0054 BA68     		ldr	r2, [r7, #8]
 3390 0056 1343     		orrs	r3, r2
ARM GAS  C:\Users\essele\AppData\Local\Temp\ccaJcTi8.s 			page 100


 3391 0058 BB60     		str	r3, [r7, #8]
2222:Generated_Source\PSoC4/CyLib.c **** 
2223:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_PLL_BASE.pll[pll].config = tmpReg;
 3392              		.loc 1 2223 0
 3393 005a 0A49     		ldr	r1, .L213
 3394 005c 7A68     		ldr	r2, [r7, #4]
 3395 005e 1300     		movs	r3, r2
 3396 0060 5B00     		lsls	r3, r3, #1
 3397 0062 9B18     		adds	r3, r3, r2
 3398 0064 9B00     		lsls	r3, r3, #2
 3399 0066 BA68     		ldr	r2, [r7, #8]
 3400 0068 5A50     		str	r2, [r3, r1]
2224:Generated_Source\PSoC4/CyLib.c **** 
2225:Generated_Source\PSoC4/CyLib.c ****             returnStatus = CYRET_SUCCESS;
 3401              		.loc 1 2225 0
 3402 006a 0023     		movs	r3, #0
 3403 006c 7B61     		str	r3, [r7, #20]
 3404              	.L211:
2226:Generated_Source\PSoC4/CyLib.c ****         }
2227:Generated_Source\PSoC4/CyLib.c **** 
2228:Generated_Source\PSoC4/CyLib.c ****         CyExitCriticalSection(interruptState);
 3405              		.loc 1 2228 0
 3406 006e 1323     		movs	r3, #19
 3407 0070 FB18     		adds	r3, r7, r3
 3408 0072 1B78     		ldrb	r3, [r3]
 3409 0074 1800     		movs	r0, r3
 3410 0076 FFF7FEFF 		bl	CyExitCriticalSection
2229:Generated_Source\PSoC4/CyLib.c **** 
2230:Generated_Source\PSoC4/CyLib.c ****         return (returnStatus);
 3411              		.loc 1 2230 0
 3412 007a 7B69     		ldr	r3, [r7, #20]
2231:Generated_Source\PSoC4/CyLib.c ****     }
 3413              		.loc 1 2231 0
 3414 007c 1800     		movs	r0, r3
 3415 007e BD46     		mov	sp, r7
 3416 0080 07B0     		add	sp, sp, #28
 3417              		@ sp needed
 3418 0082 90BD     		pop	{r4, r7, pc}
 3419              	.L214:
 3420              		.align	2
 3421              	.L213:
 3422 0084 14000C40 		.word	1074528276
 3423 0088 FF3FFFFF 		.word	-49153
 3424              		.cfi_endproc
 3425              	.LFE29:
 3426              		.size	CySysClkPllSetOutputDivider, .-CySysClkPllSetOutputDivider
 3427              		.section	.text.CySysLvdEnable,"ax",%progbits
 3428              		.align	2
 3429              		.global	CySysLvdEnable
 3430              		.code	16
 3431              		.thumb_func
 3432              		.type	CySysLvdEnable, %function
 3433              	CySysLvdEnable:
 3434              	.LFB30:
2232:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_PLL) */
2233:Generated_Source\PSoC4/CyLib.c **** 
2234:Generated_Source\PSoC4/CyLib.c **** 
ARM GAS  C:\Users\essele\AppData\Local\Temp\ccaJcTi8.s 			page 101


2235:Generated_Source\PSoC4/CyLib.c **** #if(CY_IP_SRSSV2)
2236:Generated_Source\PSoC4/CyLib.c **** 
2237:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
2238:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysLvdEnable
2239:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
2240:Generated_Source\PSoC4/CyLib.c ****     *
2241:Generated_Source\PSoC4/CyLib.c ****     *  Enables the output of the low-voltage monitor when Vddd is at or below the
2242:Generated_Source\PSoC4/CyLib.c ****     *  trip point, configures the device to generate an interrupt, and sets the
2243:Generated_Source\PSoC4/CyLib.c ****     *  voltage trip level.
2244:Generated_Source\PSoC4/CyLib.c ****     *
2245:Generated_Source\PSoC4/CyLib.c ****     *  \param threshold: Threshold selection for Low Voltage Detect circuit.
2246:Generated_Source\PSoC4/CyLib.c ****     *  Threshold variation is +/- 2.5% from these typical voltage choices.
2247:Generated_Source\PSoC4/CyLib.c ****     *         Define                     Voltage threshold
2248:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_1_75_V       1.7500 V
2249:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_1_80_V       1.8000 V
2250:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_1_90_V       1.9000 V
2251:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_00_V       2.0000 V
2252:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_10_V       2.1000 V
2253:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_20_V       2.2000 V
2254:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_30_V       2.3000 V
2255:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_40_V       2.4000 V
2256:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_50_V       2.5000 V
2257:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_60_V       2.6000 V
2258:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_70_V       2.7000 V
2259:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_80_V       2.8000 V
2260:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_90_V       2.9000 V
2261:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_3_00_V       3.0000 V
2262:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_3_20_V       3.2000 V
2263:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_4_50_V       4.5000 V
2264:Generated_Source\PSoC4/CyLib.c ****     *
2265:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
2266:Generated_Source\PSoC4/CyLib.c ****     void CySysLvdEnable(uint32 threshold)
2267:Generated_Source\PSoC4/CyLib.c ****     {
 3435              		.loc 1 2267 0
 3436              		.cfi_startproc
 3437              		@ args = 0, pretend = 0, frame = 8
 3438              		@ frame_needed = 1, uses_anonymous_args = 0
 3439 0000 80B5     		push	{r7, lr}
 3440              		.cfi_def_cfa_offset 8
 3441              		.cfi_offset 7, -8
 3442              		.cfi_offset 14, -4
 3443 0002 82B0     		sub	sp, sp, #8
 3444              		.cfi_def_cfa_offset 16
 3445 0004 00AF     		add	r7, sp, #0
 3446              		.cfi_def_cfa_register 7
 3447 0006 7860     		str	r0, [r7, #4]
2268:Generated_Source\PSoC4/CyLib.c ****         /* Prevent propagating a false interrupt */
2269:Generated_Source\PSoC4/CyLib.c ****         CY_LVD_PWR_INTR_MASK_REG   &= (uint32) ~CY_LVD_PROPAGATE_INT_TO_CPU;
 3448              		.loc 1 2269 0
 3449 0008 144B     		ldr	r3, .L216
 3450 000a 144A     		ldr	r2, .L216
 3451 000c 1268     		ldr	r2, [r2]
 3452 000e 0221     		movs	r1, #2
 3453 0010 8A43     		bics	r2, r1
 3454 0012 1A60     		str	r2, [r3]
2270:Generated_Source\PSoC4/CyLib.c **** 
2271:Generated_Source\PSoC4/CyLib.c ****         /* Set specified threshold */
ARM GAS  C:\Users\essele\AppData\Local\Temp\ccaJcTi8.s 			page 102


2272:Generated_Source\PSoC4/CyLib.c ****         CY_LVD_PWR_VMON_CONFIG_REG = (CY_LVD_PWR_VMON_CONFIG_REG & ~CY_LVD_PWR_VMON_CONFIG_LVD_SEL_
 3455              		.loc 1 2272 0
 3456 0014 124B     		ldr	r3, .L216+4
 3457 0016 124A     		ldr	r2, .L216+4
 3458 0018 1268     		ldr	r2, [r2]
 3459 001a 1E21     		movs	r1, #30
 3460 001c 8A43     		bics	r2, r1
 3461 001e 1100     		movs	r1, r2
2273:Generated_Source\PSoC4/CyLib.c ****                 ((threshold << CY_LVD_PWR_VMON_CONFIG_LVD_SEL_SHIFT) & CY_LVD_PWR_VMON_CONFIG_LVD_S
 3462              		.loc 1 2273 0
 3463 0020 7A68     		ldr	r2, [r7, #4]
 3464 0022 5200     		lsls	r2, r2, #1
 3465 0024 1E20     		movs	r0, #30
 3466 0026 0240     		ands	r2, r0
2272:Generated_Source\PSoC4/CyLib.c ****                 ((threshold << CY_LVD_PWR_VMON_CONFIG_LVD_SEL_SHIFT) & CY_LVD_PWR_VMON_CONFIG_LVD_S
 3467              		.loc 1 2272 0
 3468 0028 0A43     		orrs	r2, r1
 3469 002a 1A60     		str	r2, [r3]
2274:Generated_Source\PSoC4/CyLib.c **** 
2275:Generated_Source\PSoC4/CyLib.c ****         /* Enable the LVD. This may cause a false LVD event. */
2276:Generated_Source\PSoC4/CyLib.c ****         CY_LVD_PWR_VMON_CONFIG_REG |= CY_LVD_PWR_VMON_CONFIG_LVD_EN;
 3470              		.loc 1 2276 0
 3471 002c 0C4B     		ldr	r3, .L216+4
 3472 002e 0C4A     		ldr	r2, .L216+4
 3473 0030 1268     		ldr	r2, [r2]
 3474 0032 0121     		movs	r1, #1
 3475 0034 0A43     		orrs	r2, r1
 3476 0036 1A60     		str	r2, [r3]
2277:Generated_Source\PSoC4/CyLib.c **** 
2278:Generated_Source\PSoC4/CyLib.c ****         /* Wait for the circuit to stabilize */
2279:Generated_Source\PSoC4/CyLib.c ****         CyDelayUs(CY_LVD_STABILIZE_TIMEOUT_US);
 3477              		.loc 1 2279 0
 3478 0038 FA23     		movs	r3, #250
 3479 003a 9B00     		lsls	r3, r3, #2
 3480 003c 1800     		movs	r0, r3
 3481 003e FFF7FEFF 		bl	CyDelayUs
2280:Generated_Source\PSoC4/CyLib.c **** 
2281:Generated_Source\PSoC4/CyLib.c ****         /* Clear the false event */
2282:Generated_Source\PSoC4/CyLib.c ****         CySysLvdClearInterrupt();
 3482              		.loc 1 2282 0
 3483 0042 FFF7FEFF 		bl	CySysLvdClearInterrupt
2283:Generated_Source\PSoC4/CyLib.c **** 
2284:Generated_Source\PSoC4/CyLib.c ****         /* Unmask the interrupt */
2285:Generated_Source\PSoC4/CyLib.c ****         CY_LVD_PWR_INTR_MASK_REG   |= CY_LVD_PROPAGATE_INT_TO_CPU;
 3484              		.loc 1 2285 0
 3485 0046 054B     		ldr	r3, .L216
 3486 0048 044A     		ldr	r2, .L216
 3487 004a 1268     		ldr	r2, [r2]
 3488 004c 0221     		movs	r1, #2
 3489 004e 0A43     		orrs	r2, r1
 3490 0050 1A60     		str	r2, [r3]
2286:Generated_Source\PSoC4/CyLib.c ****     }
 3491              		.loc 1 2286 0
 3492 0052 C046     		nop
 3493 0054 BD46     		mov	sp, r7
 3494 0056 02B0     		add	sp, sp, #8
 3495              		@ sp needed
ARM GAS  C:\Users\essele\AppData\Local\Temp\ccaJcTi8.s 			page 103


 3496 0058 80BD     		pop	{r7, pc}
 3497              	.L217:
 3498 005a C046     		.align	2
 3499              	.L216:
 3500 005c 08000B40 		.word	1074462728
 3501 0060 18000B40 		.word	1074462744
 3502              		.cfi_endproc
 3503              	.LFE30:
 3504              		.size	CySysLvdEnable, .-CySysLvdEnable
 3505              		.section	.text.CySysLvdDisable,"ax",%progbits
 3506              		.align	2
 3507              		.global	CySysLvdDisable
 3508              		.code	16
 3509              		.thumb_func
 3510              		.type	CySysLvdDisable, %function
 3511              	CySysLvdDisable:
 3512              	.LFB31:
2287:Generated_Source\PSoC4/CyLib.c **** 
2288:Generated_Source\PSoC4/CyLib.c **** 
2289:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
2290:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysLvdDisable
2291:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
2292:Generated_Source\PSoC4/CyLib.c ****     *
2293:Generated_Source\PSoC4/CyLib.c ****     *  Disables the low voltage detection. A low voltage interrupt is disabled.
2294:Generated_Source\PSoC4/CyLib.c ****     *
2295:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
2296:Generated_Source\PSoC4/CyLib.c ****     void CySysLvdDisable(void)
2297:Generated_Source\PSoC4/CyLib.c ****     {
 3513              		.loc 1 2297 0
 3514              		.cfi_startproc
 3515              		@ args = 0, pretend = 0, frame = 0
 3516              		@ frame_needed = 1, uses_anonymous_args = 0
 3517 0000 80B5     		push	{r7, lr}
 3518              		.cfi_def_cfa_offset 8
 3519              		.cfi_offset 7, -8
 3520              		.cfi_offset 14, -4
 3521 0002 00AF     		add	r7, sp, #0
 3522              		.cfi_def_cfa_register 7
2298:Generated_Source\PSoC4/CyLib.c ****         CY_LVD_PWR_INTR_MASK_REG   &= ~CY_LVD_PROPAGATE_INT_TO_CPU;
 3523              		.loc 1 2298 0
 3524 0004 074B     		ldr	r3, .L219
 3525 0006 074A     		ldr	r2, .L219
 3526 0008 1268     		ldr	r2, [r2]
 3527 000a 0221     		movs	r1, #2
 3528 000c 8A43     		bics	r2, r1
 3529 000e 1A60     		str	r2, [r3]
2299:Generated_Source\PSoC4/CyLib.c ****         CY_LVD_PWR_VMON_CONFIG_REG &= ~CY_LVD_PWR_VMON_CONFIG_LVD_EN;
 3530              		.loc 1 2299 0
 3531 0010 054B     		ldr	r3, .L219+4
 3532 0012 054A     		ldr	r2, .L219+4
 3533 0014 1268     		ldr	r2, [r2]
 3534 0016 0121     		movs	r1, #1
 3535 0018 8A43     		bics	r2, r1
 3536 001a 1A60     		str	r2, [r3]
2300:Generated_Source\PSoC4/CyLib.c ****     }
 3537              		.loc 1 2300 0
 3538 001c C046     		nop
ARM GAS  C:\Users\essele\AppData\Local\Temp\ccaJcTi8.s 			page 104


 3539 001e BD46     		mov	sp, r7
 3540              		@ sp needed
 3541 0020 80BD     		pop	{r7, pc}
 3542              	.L220:
 3543 0022 C046     		.align	2
 3544              	.L219:
 3545 0024 08000B40 		.word	1074462728
 3546 0028 18000B40 		.word	1074462744
 3547              		.cfi_endproc
 3548              	.LFE31:
 3549              		.size	CySysLvdDisable, .-CySysLvdDisable
 3550              		.section	.text.CySysLvdGetInterruptSource,"ax",%progbits
 3551              		.align	2
 3552              		.global	CySysLvdGetInterruptSource
 3553              		.code	16
 3554              		.thumb_func
 3555              		.type	CySysLvdGetInterruptSource, %function
 3556              	CySysLvdGetInterruptSource:
 3557              	.LFB32:
2301:Generated_Source\PSoC4/CyLib.c **** 
2302:Generated_Source\PSoC4/CyLib.c **** 
2303:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
2304:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysLvdGetInterruptSource
2305:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
2306:Generated_Source\PSoC4/CyLib.c ****     *
2307:Generated_Source\PSoC4/CyLib.c ****     *  Gets the low voltage detection interrupt status (without clearing).
2308:Generated_Source\PSoC4/CyLib.c ****     *
2309:Generated_Source\PSoC4/CyLib.c ****     * \return
2310:Generated_Source\PSoC4/CyLib.c ****     *  Interrupt request value:
2311:Generated_Source\PSoC4/CyLib.c ****     *    CY_SYS_LVD_INT - Indicates an Low Voltage Detect interrupt
2312:Generated_Source\PSoC4/CyLib.c ****     *
2313:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
2314:Generated_Source\PSoC4/CyLib.c ****     uint32 CySysLvdGetInterruptSource(void)
2315:Generated_Source\PSoC4/CyLib.c ****     {
 3558              		.loc 1 2315 0
 3559              		.cfi_startproc
 3560              		@ args = 0, pretend = 0, frame = 0
 3561              		@ frame_needed = 1, uses_anonymous_args = 0
 3562 0000 80B5     		push	{r7, lr}
 3563              		.cfi_def_cfa_offset 8
 3564              		.cfi_offset 7, -8
 3565              		.cfi_offset 14, -4
 3566 0002 00AF     		add	r7, sp, #0
 3567              		.cfi_def_cfa_register 7
2316:Generated_Source\PSoC4/CyLib.c ****         return (CY_LVD_PWR_INTR_REG & CY_SYS_LVD_INT);
 3568              		.loc 1 2316 0
 3569 0004 034B     		ldr	r3, .L223
 3570 0006 1B68     		ldr	r3, [r3]
 3571 0008 0222     		movs	r2, #2
 3572 000a 1340     		ands	r3, r2
2317:Generated_Source\PSoC4/CyLib.c ****     }
 3573              		.loc 1 2317 0
 3574 000c 1800     		movs	r0, r3
 3575 000e BD46     		mov	sp, r7
 3576              		@ sp needed
 3577 0010 80BD     		pop	{r7, pc}
 3578              	.L224:
ARM GAS  C:\Users\essele\AppData\Local\Temp\ccaJcTi8.s 			page 105


 3579 0012 C046     		.align	2
 3580              	.L223:
 3581 0014 04000B40 		.word	1074462724
 3582              		.cfi_endproc
 3583              	.LFE32:
 3584              		.size	CySysLvdGetInterruptSource, .-CySysLvdGetInterruptSource
 3585              		.section	.text.CySysLvdClearInterrupt,"ax",%progbits
 3586              		.align	2
 3587              		.global	CySysLvdClearInterrupt
 3588              		.code	16
 3589              		.thumb_func
 3590              		.type	CySysLvdClearInterrupt, %function
 3591              	CySysLvdClearInterrupt:
 3592              	.LFB33:
2318:Generated_Source\PSoC4/CyLib.c **** 
2319:Generated_Source\PSoC4/CyLib.c **** 
2320:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
2321:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysLvdClearInterrupt
2322:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
2323:Generated_Source\PSoC4/CyLib.c ****     *
2324:Generated_Source\PSoC4/CyLib.c ****     *  Clears the low voltage detection interrupt status.
2325:Generated_Source\PSoC4/CyLib.c ****     *
2326:Generated_Source\PSoC4/CyLib.c ****     * \return
2327:Generated_Source\PSoC4/CyLib.c ****     *  None
2328:Generated_Source\PSoC4/CyLib.c ****     *
2329:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
2330:Generated_Source\PSoC4/CyLib.c ****     void CySysLvdClearInterrupt(void)
2331:Generated_Source\PSoC4/CyLib.c ****     {
 3593              		.loc 1 2331 0
 3594              		.cfi_startproc
 3595              		@ args = 0, pretend = 0, frame = 0
 3596              		@ frame_needed = 1, uses_anonymous_args = 0
 3597 0000 80B5     		push	{r7, lr}
 3598              		.cfi_def_cfa_offset 8
 3599              		.cfi_offset 7, -8
 3600              		.cfi_offset 14, -4
 3601 0002 00AF     		add	r7, sp, #0
 3602              		.cfi_def_cfa_register 7
2332:Generated_Source\PSoC4/CyLib.c ****         CY_LVD_PWR_INTR_REG = CY_SYS_LVD_INT;
 3603              		.loc 1 2332 0
 3604 0004 024B     		ldr	r3, .L226
 3605 0006 0222     		movs	r2, #2
 3606 0008 1A60     		str	r2, [r3]
2333:Generated_Source\PSoC4/CyLib.c ****     }
 3607              		.loc 1 2333 0
 3608 000a C046     		nop
 3609 000c BD46     		mov	sp, r7
 3610              		@ sp needed
 3611 000e 80BD     		pop	{r7, pc}
 3612              	.L227:
 3613              		.align	2
 3614              	.L226:
 3615 0010 04000B40 		.word	1074462724
 3616              		.cfi_endproc
 3617              	.LFE33:
 3618              		.size	CySysLvdClearInterrupt, .-CySysLvdClearInterrupt
 3619              		.section	.text.CySysGetResetReason,"ax",%progbits
ARM GAS  C:\Users\essele\AppData\Local\Temp\ccaJcTi8.s 			page 106


 3620              		.align	2
 3621              		.global	CySysGetResetReason
 3622              		.code	16
 3623              		.thumb_func
 3624              		.type	CySysGetResetReason, %function
 3625              	CySysGetResetReason:
 3626              	.LFB34:
2334:Generated_Source\PSoC4/CyLib.c **** 
2335:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_SRSSV2) */
2336:Generated_Source\PSoC4/CyLib.c **** 
2337:Generated_Source\PSoC4/CyLib.c **** 
2338:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2339:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysGetResetReason
2340:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2341:Generated_Source\PSoC4/CyLib.c **** *
2342:Generated_Source\PSoC4/CyLib.c **** *  Reports the cause for the latest reset(s) that occurred in the system. All
2343:Generated_Source\PSoC4/CyLib.c **** *  the bits in the RES_CAUSE register assert when the corresponding reset cause
2344:Generated_Source\PSoC4/CyLib.c **** *  occurs and must be cleared by the firmware. These bits are cleared by the
2345:Generated_Source\PSoC4/CyLib.c **** *  hardware only during XRES, POR, or a detected brown-out.
2346:Generated_Source\PSoC4/CyLib.c **** *
2347:Generated_Source\PSoC4/CyLib.c **** *  \param reason: bits in the RES_CAUSE register to clear.
2348:Generated_Source\PSoC4/CyLib.c **** *   CY_SYS_RESET_WDT       - WDT caused a reset
2349:Generated_Source\PSoC4/CyLib.c **** *   CY_SYS_RESET_PROTFAULT - Occured protection violation that requires reset
2350:Generated_Source\PSoC4/CyLib.c **** *   CY_SYS_RESET_SW        - Cortex-M0 requested a system reset.
2351:Generated_Source\PSoC4/CyLib.c **** *
2352:Generated_Source\PSoC4/CyLib.c **** * \return
2353:Generated_Source\PSoC4/CyLib.c **** *  Status. Same enumerated bit values as used for the reason parameter.
2354:Generated_Source\PSoC4/CyLib.c **** *
2355:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2356:Generated_Source\PSoC4/CyLib.c **** uint32 CySysGetResetReason(uint32 reason)
2357:Generated_Source\PSoC4/CyLib.c **** {
 3627              		.loc 1 2357 0
 3628              		.cfi_startproc
 3629              		@ args = 0, pretend = 0, frame = 16
 3630              		@ frame_needed = 1, uses_anonymous_args = 0
 3631 0000 80B5     		push	{r7, lr}
 3632              		.cfi_def_cfa_offset 8
 3633              		.cfi_offset 7, -8
 3634              		.cfi_offset 14, -4
 3635 0002 84B0     		sub	sp, sp, #16
 3636              		.cfi_def_cfa_offset 24
 3637 0004 00AF     		add	r7, sp, #0
 3638              		.cfi_def_cfa_register 7
 3639 0006 7860     		str	r0, [r7, #4]
2358:Generated_Source\PSoC4/CyLib.c ****     uint32 returnStatus;
2359:Generated_Source\PSoC4/CyLib.c **** 
2360:Generated_Source\PSoC4/CyLib.c ****     reason &= (CY_SYS_RESET_WDT | CY_SYS_RESET_PROTFAULT | CY_SYS_RESET_SW);
 3640              		.loc 1 2360 0
 3641 0008 7B68     		ldr	r3, [r7, #4]
 3642 000a 1922     		movs	r2, #25
 3643 000c 1340     		ands	r3, r2
 3644 000e 7B60     		str	r3, [r7, #4]
2361:Generated_Source\PSoC4/CyLib.c ****     returnStatus = CY_SYS_RES_CAUSE_REG &
 3645              		.loc 1 2361 0
 3646 0010 064B     		ldr	r3, .L230
 3647 0012 1B68     		ldr	r3, [r3]
 3648 0014 1922     		movs	r2, #25
ARM GAS  C:\Users\essele\AppData\Local\Temp\ccaJcTi8.s 			page 107


 3649 0016 1340     		ands	r3, r2
 3650 0018 FB60     		str	r3, [r7, #12]
2362:Generated_Source\PSoC4/CyLib.c ****                   (CY_SYS_RESET_WDT | CY_SYS_RESET_PROTFAULT | CY_SYS_RESET_SW);
2363:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_RES_CAUSE_REG = reason;
 3651              		.loc 1 2363 0
 3652 001a 044B     		ldr	r3, .L230
 3653 001c 7A68     		ldr	r2, [r7, #4]
 3654 001e 1A60     		str	r2, [r3]
2364:Generated_Source\PSoC4/CyLib.c **** 
2365:Generated_Source\PSoC4/CyLib.c ****     return (returnStatus);
 3655              		.loc 1 2365 0
 3656 0020 FB68     		ldr	r3, [r7, #12]
2366:Generated_Source\PSoC4/CyLib.c **** }
 3657              		.loc 1 2366 0
 3658 0022 1800     		movs	r0, r3
 3659 0024 BD46     		mov	sp, r7
 3660 0026 04B0     		add	sp, sp, #16
 3661              		@ sp needed
 3662 0028 80BD     		pop	{r7, pc}
 3663              	.L231:
 3664 002a C046     		.align	2
 3665              	.L230:
 3666 002c 00030B40 		.word	1074463488
 3667              		.cfi_endproc
 3668              	.LFE34:
 3669              		.size	CySysGetResetReason, .-CySysGetResetReason
 3670              		.section	.text.CyDisableInts,"ax",%progbits
 3671              		.align	2
 3672              		.global	CyDisableInts
 3673              		.code	16
 3674              		.thumb_func
 3675              		.type	CyDisableInts, %function
 3676              	CyDisableInts:
 3677              	.LFB35:
2367:Generated_Source\PSoC4/CyLib.c **** 
2368:Generated_Source\PSoC4/CyLib.c **** 
2369:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2370:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyDisableInts
2371:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2372:Generated_Source\PSoC4/CyLib.c **** *
2373:Generated_Source\PSoC4/CyLib.c **** *  Disables all interrupts.
2374:Generated_Source\PSoC4/CyLib.c **** *
2375:Generated_Source\PSoC4/CyLib.c **** * \return
2376:Generated_Source\PSoC4/CyLib.c **** *  32 bit mask of previously enabled interrupts.
2377:Generated_Source\PSoC4/CyLib.c **** *
2378:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2379:Generated_Source\PSoC4/CyLib.c **** uint32 CyDisableInts(void)
2380:Generated_Source\PSoC4/CyLib.c **** {
 3678              		.loc 1 2380 0
 3679              		.cfi_startproc
 3680              		@ args = 0, pretend = 0, frame = 8
 3681              		@ frame_needed = 1, uses_anonymous_args = 0
 3682 0000 80B5     		push	{r7, lr}
 3683              		.cfi_def_cfa_offset 8
 3684              		.cfi_offset 7, -8
 3685              		.cfi_offset 14, -4
 3686 0002 82B0     		sub	sp, sp, #8
ARM GAS  C:\Users\essele\AppData\Local\Temp\ccaJcTi8.s 			page 108


 3687              		.cfi_def_cfa_offset 16
 3688 0004 00AF     		add	r7, sp, #0
 3689              		.cfi_def_cfa_register 7
2381:Generated_Source\PSoC4/CyLib.c ****     uint32 intState;
2382:Generated_Source\PSoC4/CyLib.c **** 
2383:Generated_Source\PSoC4/CyLib.c ****     /* Get current interrupt state. */
2384:Generated_Source\PSoC4/CyLib.c ****     intState = CY_INT_CLEAR_REG;
 3690              		.loc 1 2384 0
 3691 0006 064B     		ldr	r3, .L234
 3692 0008 1B68     		ldr	r3, [r3]
 3693 000a 7B60     		str	r3, [r7, #4]
2385:Generated_Source\PSoC4/CyLib.c **** 
2386:Generated_Source\PSoC4/CyLib.c ****     /* Disable all interrupts. */
2387:Generated_Source\PSoC4/CyLib.c ****     CY_INT_CLEAR_REG = CY_INT_CLEAR_DISABLE_ALL;
 3694              		.loc 1 2387 0
 3695 000c 044B     		ldr	r3, .L234
 3696 000e 0122     		movs	r2, #1
 3697 0010 5242     		rsbs	r2, r2, #0
 3698 0012 1A60     		str	r2, [r3]
2388:Generated_Source\PSoC4/CyLib.c **** 
2389:Generated_Source\PSoC4/CyLib.c ****     return (intState);
 3699              		.loc 1 2389 0
 3700 0014 7B68     		ldr	r3, [r7, #4]
2390:Generated_Source\PSoC4/CyLib.c **** }
 3701              		.loc 1 2390 0
 3702 0016 1800     		movs	r0, r3
 3703 0018 BD46     		mov	sp, r7
 3704 001a 02B0     		add	sp, sp, #8
 3705              		@ sp needed
 3706 001c 80BD     		pop	{r7, pc}
 3707              	.L235:
 3708 001e C046     		.align	2
 3709              	.L234:
 3710 0020 80E100E0 		.word	-536813184
 3711              		.cfi_endproc
 3712              	.LFE35:
 3713              		.size	CyDisableInts, .-CyDisableInts
 3714              		.section	.text.CyEnableInts,"ax",%progbits
 3715              		.align	2
 3716              		.global	CyEnableInts
 3717              		.code	16
 3718              		.thumb_func
 3719              		.type	CyEnableInts, %function
 3720              	CyEnableInts:
 3721              	.LFB36:
2391:Generated_Source\PSoC4/CyLib.c **** 
2392:Generated_Source\PSoC4/CyLib.c **** 
2393:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2394:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyEnableInts
2395:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2396:Generated_Source\PSoC4/CyLib.c **** *
2397:Generated_Source\PSoC4/CyLib.c **** *  Enables interrupts to a given state.
2398:Generated_Source\PSoC4/CyLib.c **** *
2399:Generated_Source\PSoC4/CyLib.c **** *  \param mask The 32 bit mask of interrupts to enable.
2400:Generated_Source\PSoC4/CyLib.c **** *
2401:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2402:Generated_Source\PSoC4/CyLib.c **** void CyEnableInts(uint32 mask)
ARM GAS  C:\Users\essele\AppData\Local\Temp\ccaJcTi8.s 			page 109


2403:Generated_Source\PSoC4/CyLib.c **** {
 3722              		.loc 1 2403 0
 3723              		.cfi_startproc
 3724              		@ args = 0, pretend = 0, frame = 8
 3725              		@ frame_needed = 1, uses_anonymous_args = 0
 3726 0000 80B5     		push	{r7, lr}
 3727              		.cfi_def_cfa_offset 8
 3728              		.cfi_offset 7, -8
 3729              		.cfi_offset 14, -4
 3730 0002 82B0     		sub	sp, sp, #8
 3731              		.cfi_def_cfa_offset 16
 3732 0004 00AF     		add	r7, sp, #0
 3733              		.cfi_def_cfa_register 7
 3734 0006 7860     		str	r0, [r7, #4]
2404:Generated_Source\PSoC4/CyLib.c ****     CY_INT_ENABLE_REG = mask;
 3735              		.loc 1 2404 0
 3736 0008 034B     		ldr	r3, .L237
 3737 000a 7A68     		ldr	r2, [r7, #4]
 3738 000c 1A60     		str	r2, [r3]
2405:Generated_Source\PSoC4/CyLib.c **** }
 3739              		.loc 1 2405 0
 3740 000e C046     		nop
 3741 0010 BD46     		mov	sp, r7
 3742 0012 02B0     		add	sp, sp, #8
 3743              		@ sp needed
 3744 0014 80BD     		pop	{r7, pc}
 3745              	.L238:
 3746 0016 C046     		.align	2
 3747              	.L237:
 3748 0018 00E100E0 		.word	-536813312
 3749              		.cfi_endproc
 3750              	.LFE36:
 3751              		.size	CyEnableInts, .-CyEnableInts
 3752              		.section	.text.CyIntSetSysVector,"ax",%progbits
 3753              		.align	2
 3754              		.global	CyIntSetSysVector
 3755              		.code	16
 3756              		.thumb_func
 3757              		.type	CyIntSetSysVector, %function
 3758              	CyIntSetSysVector:
 3759              	.LFB37:
2406:Generated_Source\PSoC4/CyLib.c **** 
2407:Generated_Source\PSoC4/CyLib.c **** 
2408:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2409:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntSetSysVector
2410:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2411:Generated_Source\PSoC4/CyLib.c **** *
2412:Generated_Source\PSoC4/CyLib.c **** *  Sets the interrupt vector of the specified system interrupt number. These
2413:Generated_Source\PSoC4/CyLib.c **** *  interrupts are for SysTick, PendSV and others.
2414:Generated_Source\PSoC4/CyLib.c **** *
2415:Generated_Source\PSoC4/CyLib.c **** *  \param number: System interrupt number:
2416:Generated_Source\PSoC4/CyLib.c **** *    CY_INT_NMI_IRQN        - Non Maskable Interrupt
2417:Generated_Source\PSoC4/CyLib.c **** *    CY_INT_HARD_FAULT_IRQN - Hard Fault Interrupt
2418:Generated_Source\PSoC4/CyLib.c **** *    CY_INT_SVCALL_IRQN     - SV Call Interrupt
2419:Generated_Source\PSoC4/CyLib.c **** *    CY_INT_PEND_SV_IRQN    - Pend SV Interrupt
2420:Generated_Source\PSoC4/CyLib.c **** *    CY_INT_SYSTICK_IRQN    - System Tick Interrupt
2421:Generated_Source\PSoC4/CyLib.c **** *
ARM GAS  C:\Users\essele\AppData\Local\Temp\ccaJcTi8.s 			page 110


2422:Generated_Source\PSoC4/CyLib.c **** *  \param address Pointer to an interrupt service routine.
2423:Generated_Source\PSoC4/CyLib.c **** *
2424:Generated_Source\PSoC4/CyLib.c **** * \return The old ISR vector at this location.
2425:Generated_Source\PSoC4/CyLib.c **** *
2426:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2427:Generated_Source\PSoC4/CyLib.c **** cyisraddress CyIntSetSysVector(uint8 number, cyisraddress address)
2428:Generated_Source\PSoC4/CyLib.c **** {
 3760              		.loc 1 2428 0
 3761              		.cfi_startproc
 3762              		@ args = 0, pretend = 0, frame = 16
 3763              		@ frame_needed = 1, uses_anonymous_args = 0
 3764 0000 80B5     		push	{r7, lr}
 3765              		.cfi_def_cfa_offset 8
 3766              		.cfi_offset 7, -8
 3767              		.cfi_offset 14, -4
 3768 0002 84B0     		sub	sp, sp, #16
 3769              		.cfi_def_cfa_offset 24
 3770 0004 00AF     		add	r7, sp, #0
 3771              		.cfi_def_cfa_register 7
 3772 0006 0200     		movs	r2, r0
 3773 0008 3960     		str	r1, [r7]
 3774 000a FB1D     		adds	r3, r7, #7
 3775 000c 1A70     		strb	r2, [r3]
2429:Generated_Source\PSoC4/CyLib.c ****     cyisraddress oldIsr;
2430:Generated_Source\PSoC4/CyLib.c ****     cyisraddress *ramVectorTable = (cyisraddress *) CY_INT_VECT_TABLE;
 3776              		.loc 1 2430 0
 3777 000e 8023     		movs	r3, #128
 3778 0010 9B05     		lsls	r3, r3, #22
 3779 0012 FB60     		str	r3, [r7, #12]
2431:Generated_Source\PSoC4/CyLib.c **** 
2432:Generated_Source\PSoC4/CyLib.c ****     CYASSERT(number < CY_INT_IRQ_BASE);
 3780              		.loc 1 2432 0
 3781 0014 FB1D     		adds	r3, r7, #7
 3782 0016 1B78     		ldrb	r3, [r3]
 3783 0018 0F2B     		cmp	r3, #15
 3784 001a 02D9     		bls	.L240
 3785              		.loc 1 2432 0 is_stmt 0 discriminator 1
 3786 001c 0020     		movs	r0, #0
 3787 001e FFF7FEFF 		bl	CyHalt
 3788              	.L240:
2433:Generated_Source\PSoC4/CyLib.c **** 
2434:Generated_Source\PSoC4/CyLib.c ****     /* Save old Interrupt service routine. */
2435:Generated_Source\PSoC4/CyLib.c ****     oldIsr = ramVectorTable[number];
 3789              		.loc 1 2435 0 is_stmt 1
 3790 0022 FB1D     		adds	r3, r7, #7
 3791 0024 1B78     		ldrb	r3, [r3]
 3792 0026 9B00     		lsls	r3, r3, #2
 3793 0028 FA68     		ldr	r2, [r7, #12]
 3794 002a D318     		adds	r3, r2, r3
 3795 002c 1B68     		ldr	r3, [r3]
 3796 002e BB60     		str	r3, [r7, #8]
2436:Generated_Source\PSoC4/CyLib.c **** 
2437:Generated_Source\PSoC4/CyLib.c ****     /* Set new Interrupt service routine. */
2438:Generated_Source\PSoC4/CyLib.c ****     ramVectorTable[number] = address;
 3797              		.loc 1 2438 0
 3798 0030 FB1D     		adds	r3, r7, #7
 3799 0032 1B78     		ldrb	r3, [r3]
ARM GAS  C:\Users\essele\AppData\Local\Temp\ccaJcTi8.s 			page 111


 3800 0034 9B00     		lsls	r3, r3, #2
 3801 0036 FA68     		ldr	r2, [r7, #12]
 3802 0038 D318     		adds	r3, r2, r3
 3803 003a 3A68     		ldr	r2, [r7]
 3804 003c 1A60     		str	r2, [r3]
2439:Generated_Source\PSoC4/CyLib.c **** 
2440:Generated_Source\PSoC4/CyLib.c ****     return(oldIsr);
 3805              		.loc 1 2440 0
 3806 003e BB68     		ldr	r3, [r7, #8]
2441:Generated_Source\PSoC4/CyLib.c **** }
 3807              		.loc 1 2441 0
 3808 0040 1800     		movs	r0, r3
 3809 0042 BD46     		mov	sp, r7
 3810 0044 04B0     		add	sp, sp, #16
 3811              		@ sp needed
 3812 0046 80BD     		pop	{r7, pc}
 3813              		.cfi_endproc
 3814              	.LFE37:
 3815              		.size	CyIntSetSysVector, .-CyIntSetSysVector
 3816              		.section	.text.CyIntGetSysVector,"ax",%progbits
 3817              		.align	2
 3818              		.global	CyIntGetSysVector
 3819              		.code	16
 3820              		.thumb_func
 3821              		.type	CyIntGetSysVector, %function
 3822              	CyIntGetSysVector:
 3823              	.LFB38:
2442:Generated_Source\PSoC4/CyLib.c **** 
2443:Generated_Source\PSoC4/CyLib.c **** 
2444:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2445:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntGetSysVector
2446:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2447:Generated_Source\PSoC4/CyLib.c **** *
2448:Generated_Source\PSoC4/CyLib.c **** *   Gets the interrupt vector of the specified system interrupt number. These
2449:Generated_Source\PSoC4/CyLib.c **** *   interrupts are for SysTick, PendSV and others.
2450:Generated_Source\PSoC4/CyLib.c **** *
2451:Generated_Source\PSoC4/CyLib.c **** *  \param number: System interrupt number:
2452:Generated_Source\PSoC4/CyLib.c **** *    CY_INT_NMI_IRQN        - Non Maskable Interrupt
2453:Generated_Source\PSoC4/CyLib.c **** *    CY_INT_HARD_FAULT_IRQN - Hard Fault Interrupt
2454:Generated_Source\PSoC4/CyLib.c **** *    CY_INT_SVCALL_IRQN     - SV Call Interrupt
2455:Generated_Source\PSoC4/CyLib.c **** *    CY_INT_PEND_SV_IRQN    - Pend SV Interrupt
2456:Generated_Source\PSoC4/CyLib.c **** *    CY_INT_SYSTICK_IRQN    - System Tick Interrupt
2457:Generated_Source\PSoC4/CyLib.c **** *
2458:Generated_Source\PSoC4/CyLib.c **** * \return Address of the ISR in the interrupt vector table.
2459:Generated_Source\PSoC4/CyLib.c **** *
2460:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2461:Generated_Source\PSoC4/CyLib.c **** cyisraddress CyIntGetSysVector(uint8 number)
2462:Generated_Source\PSoC4/CyLib.c **** {
 3824              		.loc 1 2462 0
 3825              		.cfi_startproc
 3826              		@ args = 0, pretend = 0, frame = 16
 3827              		@ frame_needed = 1, uses_anonymous_args = 0
 3828 0000 80B5     		push	{r7, lr}
 3829              		.cfi_def_cfa_offset 8
 3830              		.cfi_offset 7, -8
 3831              		.cfi_offset 14, -4
 3832 0002 84B0     		sub	sp, sp, #16
ARM GAS  C:\Users\essele\AppData\Local\Temp\ccaJcTi8.s 			page 112


 3833              		.cfi_def_cfa_offset 24
 3834 0004 00AF     		add	r7, sp, #0
 3835              		.cfi_def_cfa_register 7
 3836 0006 0200     		movs	r2, r0
 3837 0008 FB1D     		adds	r3, r7, #7
 3838 000a 1A70     		strb	r2, [r3]
2463:Generated_Source\PSoC4/CyLib.c ****     cyisraddress *ramVectorTable = (cyisraddress *) CY_INT_VECT_TABLE;
 3839              		.loc 1 2463 0
 3840 000c 8023     		movs	r3, #128
 3841 000e 9B05     		lsls	r3, r3, #22
 3842 0010 FB60     		str	r3, [r7, #12]
2464:Generated_Source\PSoC4/CyLib.c **** 
2465:Generated_Source\PSoC4/CyLib.c ****     CYASSERT(number < CY_INT_IRQ_BASE);
 3843              		.loc 1 2465 0
 3844 0012 FB1D     		adds	r3, r7, #7
 3845 0014 1B78     		ldrb	r3, [r3]
 3846 0016 0F2B     		cmp	r3, #15
 3847 0018 02D9     		bls	.L243
 3848              		.loc 1 2465 0 is_stmt 0 discriminator 1
 3849 001a 0020     		movs	r0, #0
 3850 001c FFF7FEFF 		bl	CyHalt
 3851              	.L243:
2466:Generated_Source\PSoC4/CyLib.c **** 
2467:Generated_Source\PSoC4/CyLib.c ****     return(ramVectorTable[number]);
 3852              		.loc 1 2467 0 is_stmt 1
 3853 0020 FB1D     		adds	r3, r7, #7
 3854 0022 1B78     		ldrb	r3, [r3]
 3855 0024 9B00     		lsls	r3, r3, #2
 3856 0026 FA68     		ldr	r2, [r7, #12]
 3857 0028 D318     		adds	r3, r2, r3
 3858 002a 1B68     		ldr	r3, [r3]
2468:Generated_Source\PSoC4/CyLib.c **** }
 3859              		.loc 1 2468 0
 3860 002c 1800     		movs	r0, r3
 3861 002e BD46     		mov	sp, r7
 3862 0030 04B0     		add	sp, sp, #16
 3863              		@ sp needed
 3864 0032 80BD     		pop	{r7, pc}
 3865              		.cfi_endproc
 3866              	.LFE38:
 3867              		.size	CyIntGetSysVector, .-CyIntGetSysVector
 3868              		.section	.text.CyIntSetVector,"ax",%progbits
 3869              		.align	2
 3870              		.global	CyIntSetVector
 3871              		.code	16
 3872              		.thumb_func
 3873              		.type	CyIntSetVector, %function
 3874              	CyIntSetVector:
 3875              	.LFB39:
2469:Generated_Source\PSoC4/CyLib.c **** 
2470:Generated_Source\PSoC4/CyLib.c **** 
2471:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2472:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntSetVector
2473:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2474:Generated_Source\PSoC4/CyLib.c **** *
2475:Generated_Source\PSoC4/CyLib.c **** *  Sets the interrupt vector of the specified interrupt number.
2476:Generated_Source\PSoC4/CyLib.c **** *
ARM GAS  C:\Users\essele\AppData\Local\Temp\ccaJcTi8.s 			page 113


2477:Generated_Source\PSoC4/CyLib.c **** *  \param number Valid range [0-31].  Interrupt number
2478:Generated_Source\PSoC4/CyLib.c **** *  \param address Pointer to an interrupt service routine
2479:Generated_Source\PSoC4/CyLib.c **** *
2480:Generated_Source\PSoC4/CyLib.c **** * \return Previous interrupt vector value.
2481:Generated_Source\PSoC4/CyLib.c **** *
2482:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2483:Generated_Source\PSoC4/CyLib.c **** cyisraddress CyIntSetVector(uint8 number, cyisraddress address)
2484:Generated_Source\PSoC4/CyLib.c **** {
 3876              		.loc 1 2484 0
 3877              		.cfi_startproc
 3878              		@ args = 0, pretend = 0, frame = 16
 3879              		@ frame_needed = 1, uses_anonymous_args = 0
 3880 0000 80B5     		push	{r7, lr}
 3881              		.cfi_def_cfa_offset 8
 3882              		.cfi_offset 7, -8
 3883              		.cfi_offset 14, -4
 3884 0002 84B0     		sub	sp, sp, #16
 3885              		.cfi_def_cfa_offset 24
 3886 0004 00AF     		add	r7, sp, #0
 3887              		.cfi_def_cfa_register 7
 3888 0006 0200     		movs	r2, r0
 3889 0008 3960     		str	r1, [r7]
 3890 000a FB1D     		adds	r3, r7, #7
 3891 000c 1A70     		strb	r2, [r3]
2485:Generated_Source\PSoC4/CyLib.c ****     cyisraddress oldIsr;
2486:Generated_Source\PSoC4/CyLib.c ****     cyisraddress *ramVectorTable = (cyisraddress *) CY_INT_VECT_TABLE;
 3892              		.loc 1 2486 0
 3893 000e 8023     		movs	r3, #128
 3894 0010 9B05     		lsls	r3, r3, #22
 3895 0012 FB60     		str	r3, [r7, #12]
2487:Generated_Source\PSoC4/CyLib.c **** 
2488:Generated_Source\PSoC4/CyLib.c ****     CYASSERT(number < CY_NUM_INTERRUPTS);
 3896              		.loc 1 2488 0
 3897 0014 FB1D     		adds	r3, r7, #7
 3898 0016 1B78     		ldrb	r3, [r3]
 3899 0018 1F2B     		cmp	r3, #31
 3900 001a 02D9     		bls	.L246
 3901              		.loc 1 2488 0 is_stmt 0 discriminator 1
 3902 001c 0020     		movs	r0, #0
 3903 001e FFF7FEFF 		bl	CyHalt
 3904              	.L246:
2489:Generated_Source\PSoC4/CyLib.c **** 
2490:Generated_Source\PSoC4/CyLib.c ****     /* Save old Interrupt service routine. */
2491:Generated_Source\PSoC4/CyLib.c ****     oldIsr = ramVectorTable[CY_INT_IRQ_BASE + number];
 3905              		.loc 1 2491 0 is_stmt 1
 3906 0022 FB1D     		adds	r3, r7, #7
 3907 0024 1B78     		ldrb	r3, [r3]
 3908 0026 1033     		adds	r3, r3, #16
 3909 0028 9B00     		lsls	r3, r3, #2
 3910 002a FA68     		ldr	r2, [r7, #12]
 3911 002c D318     		adds	r3, r2, r3
 3912 002e 1B68     		ldr	r3, [r3]
 3913 0030 BB60     		str	r3, [r7, #8]
2492:Generated_Source\PSoC4/CyLib.c **** 
2493:Generated_Source\PSoC4/CyLib.c ****     /* Set new Interrupt service routine. */
2494:Generated_Source\PSoC4/CyLib.c ****     ramVectorTable[CY_INT_IRQ_BASE + number] = address;
 3914              		.loc 1 2494 0
ARM GAS  C:\Users\essele\AppData\Local\Temp\ccaJcTi8.s 			page 114


 3915 0032 FB1D     		adds	r3, r7, #7
 3916 0034 1B78     		ldrb	r3, [r3]
 3917 0036 1033     		adds	r3, r3, #16
 3918 0038 9B00     		lsls	r3, r3, #2
 3919 003a FA68     		ldr	r2, [r7, #12]
 3920 003c D318     		adds	r3, r2, r3
 3921 003e 3A68     		ldr	r2, [r7]
 3922 0040 1A60     		str	r2, [r3]
2495:Generated_Source\PSoC4/CyLib.c **** 
2496:Generated_Source\PSoC4/CyLib.c ****     return(oldIsr);
 3923              		.loc 1 2496 0
 3924 0042 BB68     		ldr	r3, [r7, #8]
2497:Generated_Source\PSoC4/CyLib.c **** }
 3925              		.loc 1 2497 0
 3926 0044 1800     		movs	r0, r3
 3927 0046 BD46     		mov	sp, r7
 3928 0048 04B0     		add	sp, sp, #16
 3929              		@ sp needed
 3930 004a 80BD     		pop	{r7, pc}
 3931              		.cfi_endproc
 3932              	.LFE39:
 3933              		.size	CyIntSetVector, .-CyIntSetVector
 3934              		.section	.text.CyIntGetVector,"ax",%progbits
 3935              		.align	2
 3936              		.global	CyIntGetVector
 3937              		.code	16
 3938              		.thumb_func
 3939              		.type	CyIntGetVector, %function
 3940              	CyIntGetVector:
 3941              	.LFB40:
2498:Generated_Source\PSoC4/CyLib.c **** 
2499:Generated_Source\PSoC4/CyLib.c **** 
2500:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2501:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntGetVector
2502:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2503:Generated_Source\PSoC4/CyLib.c **** *
2504:Generated_Source\PSoC4/CyLib.c **** *  Gets the interrupt vector of the specified interrupt number.
2505:Generated_Source\PSoC4/CyLib.c **** *
2506:Generated_Source\PSoC4/CyLib.c **** *  \param number: Valid range [0-31].  Interrupt number
2507:Generated_Source\PSoC4/CyLib.c **** *
2508:Generated_Source\PSoC4/CyLib.c **** * \return Address of the ISR in the interrupt vector table.
2509:Generated_Source\PSoC4/CyLib.c **** *
2510:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2511:Generated_Source\PSoC4/CyLib.c **** cyisraddress CyIntGetVector(uint8 number)
2512:Generated_Source\PSoC4/CyLib.c **** {
 3942              		.loc 1 2512 0
 3943              		.cfi_startproc
 3944              		@ args = 0, pretend = 0, frame = 16
 3945              		@ frame_needed = 1, uses_anonymous_args = 0
 3946 0000 80B5     		push	{r7, lr}
 3947              		.cfi_def_cfa_offset 8
 3948              		.cfi_offset 7, -8
 3949              		.cfi_offset 14, -4
 3950 0002 84B0     		sub	sp, sp, #16
 3951              		.cfi_def_cfa_offset 24
 3952 0004 00AF     		add	r7, sp, #0
 3953              		.cfi_def_cfa_register 7
ARM GAS  C:\Users\essele\AppData\Local\Temp\ccaJcTi8.s 			page 115


 3954 0006 0200     		movs	r2, r0
 3955 0008 FB1D     		adds	r3, r7, #7
 3956 000a 1A70     		strb	r2, [r3]
2513:Generated_Source\PSoC4/CyLib.c ****     cyisraddress *ramVectorTable = (cyisraddress *) CY_INT_VECT_TABLE;
 3957              		.loc 1 2513 0
 3958 000c 8023     		movs	r3, #128
 3959 000e 9B05     		lsls	r3, r3, #22
 3960 0010 FB60     		str	r3, [r7, #12]
2514:Generated_Source\PSoC4/CyLib.c **** 
2515:Generated_Source\PSoC4/CyLib.c ****     CYASSERT(number < CY_NUM_INTERRUPTS);
 3961              		.loc 1 2515 0
 3962 0012 FB1D     		adds	r3, r7, #7
 3963 0014 1B78     		ldrb	r3, [r3]
 3964 0016 1F2B     		cmp	r3, #31
 3965 0018 02D9     		bls	.L249
 3966              		.loc 1 2515 0 is_stmt 0 discriminator 1
 3967 001a 0020     		movs	r0, #0
 3968 001c FFF7FEFF 		bl	CyHalt
 3969              	.L249:
2516:Generated_Source\PSoC4/CyLib.c **** 
2517:Generated_Source\PSoC4/CyLib.c ****     return (ramVectorTable[CY_INT_IRQ_BASE + number]);
 3970              		.loc 1 2517 0 is_stmt 1
 3971 0020 FB1D     		adds	r3, r7, #7
 3972 0022 1B78     		ldrb	r3, [r3]
 3973 0024 1033     		adds	r3, r3, #16
 3974 0026 9B00     		lsls	r3, r3, #2
 3975 0028 FA68     		ldr	r2, [r7, #12]
 3976 002a D318     		adds	r3, r2, r3
 3977 002c 1B68     		ldr	r3, [r3]
2518:Generated_Source\PSoC4/CyLib.c **** }
 3978              		.loc 1 2518 0
 3979 002e 1800     		movs	r0, r3
 3980 0030 BD46     		mov	sp, r7
 3981 0032 04B0     		add	sp, sp, #16
 3982              		@ sp needed
 3983 0034 80BD     		pop	{r7, pc}
 3984              		.cfi_endproc
 3985              	.LFE40:
 3986              		.size	CyIntGetVector, .-CyIntGetVector
 3987 0036 C046     		.section	.text.CyIntSetPriority,"ax",%progbits
 3988              		.align	2
 3989              		.global	CyIntSetPriority
 3990              		.code	16
 3991              		.thumb_func
 3992              		.type	CyIntSetPriority, %function
 3993              	CyIntSetPriority:
 3994              	.LFB41:
2519:Generated_Source\PSoC4/CyLib.c **** 
2520:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2521:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntSetPriority
2522:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2523:Generated_Source\PSoC4/CyLib.c **** *
2524:Generated_Source\PSoC4/CyLib.c **** *  Sets the priority of the interrupt.
2525:Generated_Source\PSoC4/CyLib.c **** *
2526:Generated_Source\PSoC4/CyLib.c **** *  \param priority: Priority of the interrupt. 0 - 3, 0 being the highest.
2527:Generated_Source\PSoC4/CyLib.c **** *  \param number: The number of the interrupt, 0 - 31.
2528:Generated_Source\PSoC4/CyLib.c **** *
ARM GAS  C:\Users\essele\AppData\Local\Temp\ccaJcTi8.s 			page 116


2529:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2530:Generated_Source\PSoC4/CyLib.c **** void CyIntSetPriority(uint8 number, uint8 priority)
2531:Generated_Source\PSoC4/CyLib.c **** {
 3995              		.loc 1 2531 0
 3996              		.cfi_startproc
 3997              		@ args = 0, pretend = 0, frame = 24
 3998              		@ frame_needed = 1, uses_anonymous_args = 0
 3999 0000 90B5     		push	{r4, r7, lr}
 4000              		.cfi_def_cfa_offset 12
 4001              		.cfi_offset 4, -12
 4002              		.cfi_offset 7, -8
 4003              		.cfi_offset 14, -4
 4004 0002 87B0     		sub	sp, sp, #28
 4005              		.cfi_def_cfa_offset 40
 4006 0004 00AF     		add	r7, sp, #0
 4007              		.cfi_def_cfa_register 7
 4008 0006 0200     		movs	r2, r0
 4009 0008 FB1D     		adds	r3, r7, #7
 4010 000a 1A70     		strb	r2, [r3]
 4011 000c BB1D     		adds	r3, r7, #6
 4012 000e 0A1C     		adds	r2, r1, #0
 4013 0010 1A70     		strb	r2, [r3]
2532:Generated_Source\PSoC4/CyLib.c ****     uint8 interruptState;
2533:Generated_Source\PSoC4/CyLib.c ****     uint32 shift;
2534:Generated_Source\PSoC4/CyLib.c ****     uint32 value;
2535:Generated_Source\PSoC4/CyLib.c **** 
2536:Generated_Source\PSoC4/CyLib.c ****     CYASSERT(priority <= CY_MIN_PRIORITY);
 4014              		.loc 1 2536 0
 4015 0012 BB1D     		adds	r3, r7, #6
 4016 0014 1B78     		ldrb	r3, [r3]
 4017 0016 032B     		cmp	r3, #3
 4018 0018 02D9     		bls	.L252
 4019              		.loc 1 2536 0 is_stmt 0 discriminator 1
 4020 001a 0020     		movs	r0, #0
 4021 001c FFF7FEFF 		bl	CyHalt
 4022              	.L252:
2537:Generated_Source\PSoC4/CyLib.c ****     CYASSERT(number < CY_NUM_INTERRUPTS);
 4023              		.loc 1 2537 0 is_stmt 1
 4024 0020 FB1D     		adds	r3, r7, #7
 4025 0022 1B78     		ldrb	r3, [r3]
 4026 0024 1F2B     		cmp	r3, #31
 4027 0026 02D9     		bls	.L253
 4028              		.loc 1 2537 0 is_stmt 0 discriminator 1
 4029 0028 0020     		movs	r0, #0
 4030 002a FFF7FEFF 		bl	CyHalt
 4031              	.L253:
2538:Generated_Source\PSoC4/CyLib.c **** 
2539:Generated_Source\PSoC4/CyLib.c ****     shift = CY_INT_PRIORITY_SHIFT(number);
 4032              		.loc 1 2539 0 is_stmt 1
 4033 002e FB1D     		adds	r3, r7, #7
 4034 0030 1B78     		ldrb	r3, [r3]
 4035 0032 0322     		movs	r2, #3
 4036 0034 1340     		ands	r3, r2
 4037 0036 DB00     		lsls	r3, r3, #3
 4038 0038 0633     		adds	r3, r3, #6
 4039 003a 7B61     		str	r3, [r7, #20]
2540:Generated_Source\PSoC4/CyLib.c **** 
ARM GAS  C:\Users\essele\AppData\Local\Temp\ccaJcTi8.s 			page 117


2541:Generated_Source\PSoC4/CyLib.c ****     interruptState = CyEnterCriticalSection();
 4040              		.loc 1 2541 0
 4041 003c 1323     		movs	r3, #19
 4042 003e FC18     		adds	r4, r7, r3
 4043 0040 FFF7FEFF 		bl	CyEnterCriticalSection
 4044 0044 0300     		movs	r3, r0
 4045 0046 2370     		strb	r3, [r4]
2542:Generated_Source\PSoC4/CyLib.c **** 
2543:Generated_Source\PSoC4/CyLib.c ****     value = CY_INT_PRIORITY_REG(number);
 4046              		.loc 1 2543 0
 4047 0048 FB1D     		adds	r3, r7, #7
 4048 004a 1B78     		ldrb	r3, [r3]
 4049 004c 9B08     		lsrs	r3, r3, #2
 4050 004e DBB2     		uxtb	r3, r3
 4051 0050 9B00     		lsls	r3, r3, #2
 4052 0052 144A     		ldr	r2, .L254
 4053 0054 9446     		mov	ip, r2
 4054 0056 6344     		add	r3, r3, ip
 4055 0058 1B68     		ldr	r3, [r3]
 4056 005a FB60     		str	r3, [r7, #12]
2544:Generated_Source\PSoC4/CyLib.c ****     value &= (uint32)(~((uint32)(CY_INT_PRIORITY_MASK << shift)));
 4057              		.loc 1 2544 0
 4058 005c 0322     		movs	r2, #3
 4059 005e 7B69     		ldr	r3, [r7, #20]
 4060 0060 9A40     		lsls	r2, r2, r3
 4061 0062 1300     		movs	r3, r2
 4062 0064 DA43     		mvns	r2, r3
 4063 0066 FB68     		ldr	r3, [r7, #12]
 4064 0068 1340     		ands	r3, r2
 4065 006a FB60     		str	r3, [r7, #12]
2545:Generated_Source\PSoC4/CyLib.c ****     value |= ((uint32)priority << shift);
 4066              		.loc 1 2545 0
 4067 006c BB1D     		adds	r3, r7, #6
 4068 006e 1A78     		ldrb	r2, [r3]
 4069 0070 7B69     		ldr	r3, [r7, #20]
 4070 0072 9A40     		lsls	r2, r2, r3
 4071 0074 1300     		movs	r3, r2
 4072 0076 FA68     		ldr	r2, [r7, #12]
 4073 0078 1343     		orrs	r3, r2
 4074 007a FB60     		str	r3, [r7, #12]
2546:Generated_Source\PSoC4/CyLib.c ****     CY_INT_PRIORITY_REG(number) = value;
 4075              		.loc 1 2546 0
 4076 007c FB1D     		adds	r3, r7, #7
 4077 007e 1B78     		ldrb	r3, [r3]
 4078 0080 9B08     		lsrs	r3, r3, #2
 4079 0082 DBB2     		uxtb	r3, r3
 4080 0084 9B00     		lsls	r3, r3, #2
 4081 0086 074A     		ldr	r2, .L254
 4082 0088 9446     		mov	ip, r2
 4083 008a 6344     		add	r3, r3, ip
 4084 008c FA68     		ldr	r2, [r7, #12]
 4085 008e 1A60     		str	r2, [r3]
2547:Generated_Source\PSoC4/CyLib.c **** 
2548:Generated_Source\PSoC4/CyLib.c ****     CyExitCriticalSection(interruptState);
 4086              		.loc 1 2548 0
 4087 0090 1323     		movs	r3, #19
 4088 0092 FB18     		adds	r3, r7, r3
ARM GAS  C:\Users\essele\AppData\Local\Temp\ccaJcTi8.s 			page 118


 4089 0094 1B78     		ldrb	r3, [r3]
 4090 0096 1800     		movs	r0, r3
 4091 0098 FFF7FEFF 		bl	CyExitCriticalSection
2549:Generated_Source\PSoC4/CyLib.c **** }
 4092              		.loc 1 2549 0
 4093 009c C046     		nop
 4094 009e BD46     		mov	sp, r7
 4095 00a0 07B0     		add	sp, sp, #28
 4096              		@ sp needed
 4097 00a2 90BD     		pop	{r4, r7, pc}
 4098              	.L255:
 4099              		.align	2
 4100              	.L254:
 4101 00a4 00E400E0 		.word	-536812544
 4102              		.cfi_endproc
 4103              	.LFE41:
 4104              		.size	CyIntSetPriority, .-CyIntSetPriority
 4105              		.section	.text.CyIntGetPriority,"ax",%progbits
 4106              		.align	2
 4107              		.global	CyIntGetPriority
 4108              		.code	16
 4109              		.thumb_func
 4110              		.type	CyIntGetPriority, %function
 4111              	CyIntGetPriority:
 4112              	.LFB42:
2550:Generated_Source\PSoC4/CyLib.c **** 
2551:Generated_Source\PSoC4/CyLib.c **** 
2552:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2553:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntGetPriority
2554:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2555:Generated_Source\PSoC4/CyLib.c **** *
2556:Generated_Source\PSoC4/CyLib.c **** *  Gets the priority of the interrupt.
2557:Generated_Source\PSoC4/CyLib.c **** *
2558:Generated_Source\PSoC4/CyLib.c **** *  \param number: The number of the interrupt, 0 - 31.
2559:Generated_Source\PSoC4/CyLib.c **** *
2560:Generated_Source\PSoC4/CyLib.c **** * \return
2561:Generated_Source\PSoC4/CyLib.c **** *  Priority of the interrupt. 0 - 3, 0 being the highest.
2562:Generated_Source\PSoC4/CyLib.c **** *
2563:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2564:Generated_Source\PSoC4/CyLib.c **** uint8 CyIntGetPriority(uint8 number)
2565:Generated_Source\PSoC4/CyLib.c **** {
 4113              		.loc 1 2565 0
 4114              		.cfi_startproc
 4115              		@ args = 0, pretend = 0, frame = 16
 4116              		@ frame_needed = 1, uses_anonymous_args = 0
 4117 0000 80B5     		push	{r7, lr}
 4118              		.cfi_def_cfa_offset 8
 4119              		.cfi_offset 7, -8
 4120              		.cfi_offset 14, -4
 4121 0002 84B0     		sub	sp, sp, #16
 4122              		.cfi_def_cfa_offset 24
 4123 0004 00AF     		add	r7, sp, #0
 4124              		.cfi_def_cfa_register 7
 4125 0006 0200     		movs	r2, r0
 4126 0008 FB1D     		adds	r3, r7, #7
 4127 000a 1A70     		strb	r2, [r3]
2566:Generated_Source\PSoC4/CyLib.c ****     uint8 priority;
ARM GAS  C:\Users\essele\AppData\Local\Temp\ccaJcTi8.s 			page 119


2567:Generated_Source\PSoC4/CyLib.c **** 
2568:Generated_Source\PSoC4/CyLib.c ****     CYASSERT(number < CY_NUM_INTERRUPTS);
 4128              		.loc 1 2568 0
 4129 000c FB1D     		adds	r3, r7, #7
 4130 000e 1B78     		ldrb	r3, [r3]
 4131 0010 1F2B     		cmp	r3, #31
 4132 0012 02D9     		bls	.L257
 4133              		.loc 1 2568 0 is_stmt 0 discriminator 1
 4134 0014 0020     		movs	r0, #0
 4135 0016 FFF7FEFF 		bl	CyHalt
 4136              	.L257:
2569:Generated_Source\PSoC4/CyLib.c **** 
2570:Generated_Source\PSoC4/CyLib.c ****     priority = (uint8) (CY_INT_PRIORITY_REG(number) >> CY_INT_PRIORITY_SHIFT(number));
 4137              		.loc 1 2570 0 is_stmt 1
 4138 001a FB1D     		adds	r3, r7, #7
 4139 001c 1B78     		ldrb	r3, [r3]
 4140 001e 9B08     		lsrs	r3, r3, #2
 4141 0020 DBB2     		uxtb	r3, r3
 4142 0022 9B00     		lsls	r3, r3, #2
 4143 0024 0B4A     		ldr	r2, .L259
 4144 0026 9446     		mov	ip, r2
 4145 0028 6344     		add	r3, r3, ip
 4146 002a 1A68     		ldr	r2, [r3]
 4147 002c FB1D     		adds	r3, r7, #7
 4148 002e 1B78     		ldrb	r3, [r3]
 4149 0030 0321     		movs	r1, #3
 4150 0032 0B40     		ands	r3, r1
 4151 0034 DB00     		lsls	r3, r3, #3
 4152 0036 0633     		adds	r3, r3, #6
 4153 0038 DA40     		lsrs	r2, r2, r3
 4154 003a 0F23     		movs	r3, #15
 4155 003c FB18     		adds	r3, r7, r3
 4156 003e 1A70     		strb	r2, [r3]
2571:Generated_Source\PSoC4/CyLib.c **** 
2572:Generated_Source\PSoC4/CyLib.c ****     return (priority & (uint8) CY_INT_PRIORITY_MASK);
 4157              		.loc 1 2572 0
 4158 0040 0F23     		movs	r3, #15
 4159 0042 FB18     		adds	r3, r7, r3
 4160 0044 1B78     		ldrb	r3, [r3]
 4161 0046 0322     		movs	r2, #3
 4162 0048 1340     		ands	r3, r2
 4163 004a DBB2     		uxtb	r3, r3
2573:Generated_Source\PSoC4/CyLib.c **** }
 4164              		.loc 1 2573 0
 4165 004c 1800     		movs	r0, r3
 4166 004e BD46     		mov	sp, r7
 4167 0050 04B0     		add	sp, sp, #16
 4168              		@ sp needed
 4169 0052 80BD     		pop	{r7, pc}
 4170              	.L260:
 4171              		.align	2
 4172              	.L259:
 4173 0054 00E400E0 		.word	-536812544
 4174              		.cfi_endproc
 4175              	.LFE42:
 4176              		.size	CyIntGetPriority, .-CyIntGetPriority
 4177              		.section	.text.CyIntEnable,"ax",%progbits
ARM GAS  C:\Users\essele\AppData\Local\Temp\ccaJcTi8.s 			page 120


 4178              		.align	2
 4179              		.global	CyIntEnable
 4180              		.code	16
 4181              		.thumb_func
 4182              		.type	CyIntEnable, %function
 4183              	CyIntEnable:
 4184              	.LFB43:
2574:Generated_Source\PSoC4/CyLib.c **** 
2575:Generated_Source\PSoC4/CyLib.c **** 
2576:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2577:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntEnable
2578:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2579:Generated_Source\PSoC4/CyLib.c **** *
2580:Generated_Source\PSoC4/CyLib.c **** *  Enables the specified interrupt number.
2581:Generated_Source\PSoC4/CyLib.c **** *
2582:Generated_Source\PSoC4/CyLib.c **** *  \param number: Valid range [0-31].  Interrupt number
2583:Generated_Source\PSoC4/CyLib.c **** *
2584:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2585:Generated_Source\PSoC4/CyLib.c **** void CyIntEnable(uint8 number)
2586:Generated_Source\PSoC4/CyLib.c **** {
 4185              		.loc 1 2586 0
 4186              		.cfi_startproc
 4187              		@ args = 0, pretend = 0, frame = 8
 4188              		@ frame_needed = 1, uses_anonymous_args = 0
 4189 0000 80B5     		push	{r7, lr}
 4190              		.cfi_def_cfa_offset 8
 4191              		.cfi_offset 7, -8
 4192              		.cfi_offset 14, -4
 4193 0002 82B0     		sub	sp, sp, #8
 4194              		.cfi_def_cfa_offset 16
 4195 0004 00AF     		add	r7, sp, #0
 4196              		.cfi_def_cfa_register 7
 4197 0006 0200     		movs	r2, r0
 4198 0008 FB1D     		adds	r3, r7, #7
 4199 000a 1A70     		strb	r2, [r3]
2587:Generated_Source\PSoC4/CyLib.c ****     CY_INT_ENABLE_REG = ((uint32) 0x01u << (CY_INT_ENABLE_RANGE_MASK & number));
 4200              		.loc 1 2587 0
 4201 000c 064B     		ldr	r3, .L262
 4202 000e FA1D     		adds	r2, r7, #7
 4203 0010 1278     		ldrb	r2, [r2]
 4204 0012 1F21     		movs	r1, #31
 4205 0014 0A40     		ands	r2, r1
 4206 0016 0121     		movs	r1, #1
 4207 0018 9140     		lsls	r1, r1, r2
 4208 001a 0A00     		movs	r2, r1
 4209 001c 1A60     		str	r2, [r3]
2588:Generated_Source\PSoC4/CyLib.c **** }
 4210              		.loc 1 2588 0
 4211 001e C046     		nop
 4212 0020 BD46     		mov	sp, r7
 4213 0022 02B0     		add	sp, sp, #8
 4214              		@ sp needed
 4215 0024 80BD     		pop	{r7, pc}
 4216              	.L263:
 4217 0026 C046     		.align	2
 4218              	.L262:
 4219 0028 00E100E0 		.word	-536813312
ARM GAS  C:\Users\essele\AppData\Local\Temp\ccaJcTi8.s 			page 121


 4220              		.cfi_endproc
 4221              	.LFE43:
 4222              		.size	CyIntEnable, .-CyIntEnable
 4223              		.section	.text.CyIntGetState,"ax",%progbits
 4224              		.align	2
 4225              		.global	CyIntGetState
 4226              		.code	16
 4227              		.thumb_func
 4228              		.type	CyIntGetState, %function
 4229              	CyIntGetState:
 4230              	.LFB44:
2589:Generated_Source\PSoC4/CyLib.c **** 
2590:Generated_Source\PSoC4/CyLib.c **** 
2591:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2592:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntGetState
2593:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2594:Generated_Source\PSoC4/CyLib.c **** *
2595:Generated_Source\PSoC4/CyLib.c **** *  Gets the enable state of the specified interrupt number.
2596:Generated_Source\PSoC4/CyLib.c **** *
2597:Generated_Source\PSoC4/CyLib.c **** *  \param number: Valid range [0-31].  Interrupt number.
2598:Generated_Source\PSoC4/CyLib.c **** *
2599:Generated_Source\PSoC4/CyLib.c **** * \return
2600:Generated_Source\PSoC4/CyLib.c **** *  Enable status: 1 if enabled, 0 if disabled
2601:Generated_Source\PSoC4/CyLib.c **** *
2602:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2603:Generated_Source\PSoC4/CyLib.c **** uint8 CyIntGetState(uint8 number)
2604:Generated_Source\PSoC4/CyLib.c **** {
 4231              		.loc 1 2604 0
 4232              		.cfi_startproc
 4233              		@ args = 0, pretend = 0, frame = 8
 4234              		@ frame_needed = 1, uses_anonymous_args = 0
 4235 0000 80B5     		push	{r7, lr}
 4236              		.cfi_def_cfa_offset 8
 4237              		.cfi_offset 7, -8
 4238              		.cfi_offset 14, -4
 4239 0002 82B0     		sub	sp, sp, #8
 4240              		.cfi_def_cfa_offset 16
 4241 0004 00AF     		add	r7, sp, #0
 4242              		.cfi_def_cfa_register 7
 4243 0006 0200     		movs	r2, r0
 4244 0008 FB1D     		adds	r3, r7, #7
 4245 000a 1A70     		strb	r2, [r3]
2605:Generated_Source\PSoC4/CyLib.c ****     /* Get state of interrupt. */
2606:Generated_Source\PSoC4/CyLib.c ****     return ((0u != (CY_INT_ENABLE_REG & ((uint32) 0x01u << (CY_INT_ENABLE_RANGE_MASK & number)))) ?
 4246              		.loc 1 2606 0
 4247 000c 074B     		ldr	r3, .L266
 4248 000e 1A68     		ldr	r2, [r3]
 4249 0010 FB1D     		adds	r3, r7, #7
 4250 0012 1B78     		ldrb	r3, [r3]
 4251 0014 1F21     		movs	r1, #31
 4252 0016 0B40     		ands	r3, r1
 4253 0018 DA40     		lsrs	r2, r2, r3
 4254 001a 1300     		movs	r3, r2
 4255 001c DBB2     		uxtb	r3, r3
 4256 001e 0122     		movs	r2, #1
 4257 0020 1340     		ands	r3, r2
 4258 0022 DBB2     		uxtb	r3, r3
ARM GAS  C:\Users\essele\AppData\Local\Temp\ccaJcTi8.s 			page 122


2607:Generated_Source\PSoC4/CyLib.c **** }
 4259              		.loc 1 2607 0
 4260 0024 1800     		movs	r0, r3
 4261 0026 BD46     		mov	sp, r7
 4262 0028 02B0     		add	sp, sp, #8
 4263              		@ sp needed
 4264 002a 80BD     		pop	{r7, pc}
 4265              	.L267:
 4266              		.align	2
 4267              	.L266:
 4268 002c 00E100E0 		.word	-536813312
 4269              		.cfi_endproc
 4270              	.LFE44:
 4271              		.size	CyIntGetState, .-CyIntGetState
 4272              		.section	.text.CyIntDisable,"ax",%progbits
 4273              		.align	2
 4274              		.global	CyIntDisable
 4275              		.code	16
 4276              		.thumb_func
 4277              		.type	CyIntDisable, %function
 4278              	CyIntDisable:
 4279              	.LFB45:
2608:Generated_Source\PSoC4/CyLib.c **** 
2609:Generated_Source\PSoC4/CyLib.c **** 
2610:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2611:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntDisable
2612:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2613:Generated_Source\PSoC4/CyLib.c **** *
2614:Generated_Source\PSoC4/CyLib.c **** *   Disables the specified interrupt number.
2615:Generated_Source\PSoC4/CyLib.c **** *
2616:Generated_Source\PSoC4/CyLib.c **** *   \param number: Valid range [0-31].  Interrupt number.
2617:Generated_Source\PSoC4/CyLib.c **** *
2618:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2619:Generated_Source\PSoC4/CyLib.c **** void CyIntDisable(uint8 number)
2620:Generated_Source\PSoC4/CyLib.c **** {
 4280              		.loc 1 2620 0
 4281              		.cfi_startproc
 4282              		@ args = 0, pretend = 0, frame = 8
 4283              		@ frame_needed = 1, uses_anonymous_args = 0
 4284 0000 80B5     		push	{r7, lr}
 4285              		.cfi_def_cfa_offset 8
 4286              		.cfi_offset 7, -8
 4287              		.cfi_offset 14, -4
 4288 0002 82B0     		sub	sp, sp, #8
 4289              		.cfi_def_cfa_offset 16
 4290 0004 00AF     		add	r7, sp, #0
 4291              		.cfi_def_cfa_register 7
 4292 0006 0200     		movs	r2, r0
 4293 0008 FB1D     		adds	r3, r7, #7
 4294 000a 1A70     		strb	r2, [r3]
2621:Generated_Source\PSoC4/CyLib.c ****     CY_INT_CLEAR_REG = ((uint32) 0x01u << (CY_INT_ENABLE_RANGE_MASK & number));
 4295              		.loc 1 2621 0
 4296 000c 064B     		ldr	r3, .L269
 4297 000e FA1D     		adds	r2, r7, #7
 4298 0010 1278     		ldrb	r2, [r2]
 4299 0012 1F21     		movs	r1, #31
 4300 0014 0A40     		ands	r2, r1
ARM GAS  C:\Users\essele\AppData\Local\Temp\ccaJcTi8.s 			page 123


 4301 0016 0121     		movs	r1, #1
 4302 0018 9140     		lsls	r1, r1, r2
 4303 001a 0A00     		movs	r2, r1
 4304 001c 1A60     		str	r2, [r3]
2622:Generated_Source\PSoC4/CyLib.c **** }
 4305              		.loc 1 2622 0
 4306 001e C046     		nop
 4307 0020 BD46     		mov	sp, r7
 4308 0022 02B0     		add	sp, sp, #8
 4309              		@ sp needed
 4310 0024 80BD     		pop	{r7, pc}
 4311              	.L270:
 4312 0026 C046     		.align	2
 4313              	.L269:
 4314 0028 80E100E0 		.word	-536813184
 4315              		.cfi_endproc
 4316              	.LFE45:
 4317              		.size	CyIntDisable, .-CyIntDisable
 4318              		.section	.text.CyIntSetPending,"ax",%progbits
 4319              		.align	2
 4320              		.global	CyIntSetPending
 4321              		.code	16
 4322              		.thumb_func
 4323              		.type	CyIntSetPending, %function
 4324              	CyIntSetPending:
 4325              	.LFB46:
2623:Generated_Source\PSoC4/CyLib.c **** 
2624:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2625:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntSetPending
2626:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2627:Generated_Source\PSoC4/CyLib.c **** *
2628:Generated_Source\PSoC4/CyLib.c **** *  Forces the specified interrupt number to be pending.
2629:Generated_Source\PSoC4/CyLib.c **** *
2630:Generated_Source\PSoC4/CyLib.c **** *  \param number: Valid range [0-31].  Interrupt number.
2631:Generated_Source\PSoC4/CyLib.c **** *
2632:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2633:Generated_Source\PSoC4/CyLib.c **** void CyIntSetPending(uint8 number)
2634:Generated_Source\PSoC4/CyLib.c **** {
 4326              		.loc 1 2634 0
 4327              		.cfi_startproc
 4328              		@ args = 0, pretend = 0, frame = 8
 4329              		@ frame_needed = 1, uses_anonymous_args = 0
 4330 0000 80B5     		push	{r7, lr}
 4331              		.cfi_def_cfa_offset 8
 4332              		.cfi_offset 7, -8
 4333              		.cfi_offset 14, -4
 4334 0002 82B0     		sub	sp, sp, #8
 4335              		.cfi_def_cfa_offset 16
 4336 0004 00AF     		add	r7, sp, #0
 4337              		.cfi_def_cfa_register 7
 4338 0006 0200     		movs	r2, r0
 4339 0008 FB1D     		adds	r3, r7, #7
 4340 000a 1A70     		strb	r2, [r3]
2635:Generated_Source\PSoC4/CyLib.c ****     CY_INT_SET_PEND_REG = ((uint32) 0x01u << (CY_INT_ENABLE_RANGE_MASK & number));
 4341              		.loc 1 2635 0
 4342 000c 064B     		ldr	r3, .L272
 4343 000e FA1D     		adds	r2, r7, #7
ARM GAS  C:\Users\essele\AppData\Local\Temp\ccaJcTi8.s 			page 124


 4344 0010 1278     		ldrb	r2, [r2]
 4345 0012 1F21     		movs	r1, #31
 4346 0014 0A40     		ands	r2, r1
 4347 0016 0121     		movs	r1, #1
 4348 0018 9140     		lsls	r1, r1, r2
 4349 001a 0A00     		movs	r2, r1
 4350 001c 1A60     		str	r2, [r3]
2636:Generated_Source\PSoC4/CyLib.c **** }
 4351              		.loc 1 2636 0
 4352 001e C046     		nop
 4353 0020 BD46     		mov	sp, r7
 4354 0022 02B0     		add	sp, sp, #8
 4355              		@ sp needed
 4356 0024 80BD     		pop	{r7, pc}
 4357              	.L273:
 4358 0026 C046     		.align	2
 4359              	.L272:
 4360 0028 00E200E0 		.word	-536813056
 4361              		.cfi_endproc
 4362              	.LFE46:
 4363              		.size	CyIntSetPending, .-CyIntSetPending
 4364              		.section	.text.CyIntClearPending,"ax",%progbits
 4365              		.align	2
 4366              		.global	CyIntClearPending
 4367              		.code	16
 4368              		.thumb_func
 4369              		.type	CyIntClearPending, %function
 4370              	CyIntClearPending:
 4371              	.LFB47:
2637:Generated_Source\PSoC4/CyLib.c **** 
2638:Generated_Source\PSoC4/CyLib.c **** 
2639:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2640:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntClearPending
2641:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2642:Generated_Source\PSoC4/CyLib.c **** *
2643:Generated_Source\PSoC4/CyLib.c **** *  Clears any pending interrupt for the specified interrupt number.
2644:Generated_Source\PSoC4/CyLib.c **** *
2645:Generated_Source\PSoC4/CyLib.c **** *  \param number: Valid range [0-31].  Interrupt number.
2646:Generated_Source\PSoC4/CyLib.c **** *
2647:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2648:Generated_Source\PSoC4/CyLib.c **** void CyIntClearPending(uint8 number)
2649:Generated_Source\PSoC4/CyLib.c **** {
 4372              		.loc 1 2649 0
 4373              		.cfi_startproc
 4374              		@ args = 0, pretend = 0, frame = 8
 4375              		@ frame_needed = 1, uses_anonymous_args = 0
 4376 0000 80B5     		push	{r7, lr}
 4377              		.cfi_def_cfa_offset 8
 4378              		.cfi_offset 7, -8
 4379              		.cfi_offset 14, -4
 4380 0002 82B0     		sub	sp, sp, #8
 4381              		.cfi_def_cfa_offset 16
 4382 0004 00AF     		add	r7, sp, #0
 4383              		.cfi_def_cfa_register 7
 4384 0006 0200     		movs	r2, r0
 4385 0008 FB1D     		adds	r3, r7, #7
 4386 000a 1A70     		strb	r2, [r3]
ARM GAS  C:\Users\essele\AppData\Local\Temp\ccaJcTi8.s 			page 125


2650:Generated_Source\PSoC4/CyLib.c ****     CY_INT_CLR_PEND_REG = ((uint32) 0x01u << (CY_INT_ENABLE_RANGE_MASK & number));
 4387              		.loc 1 2650 0
 4388 000c 064B     		ldr	r3, .L275
 4389 000e FA1D     		adds	r2, r7, #7
 4390 0010 1278     		ldrb	r2, [r2]
 4391 0012 1F21     		movs	r1, #31
 4392 0014 0A40     		ands	r2, r1
 4393 0016 0121     		movs	r1, #1
 4394 0018 9140     		lsls	r1, r1, r2
 4395 001a 0A00     		movs	r2, r1
 4396 001c 1A60     		str	r2, [r3]
2651:Generated_Source\PSoC4/CyLib.c **** }
 4397              		.loc 1 2651 0
 4398 001e C046     		nop
 4399 0020 BD46     		mov	sp, r7
 4400 0022 02B0     		add	sp, sp, #8
 4401              		@ sp needed
 4402 0024 80BD     		pop	{r7, pc}
 4403              	.L276:
 4404 0026 C046     		.align	2
 4405              	.L275:
 4406 0028 80E200E0 		.word	-536812928
 4407              		.cfi_endproc
 4408              	.LFE47:
 4409              		.size	CyIntClearPending, .-CyIntClearPending
 4410              		.section	.text.CyHalt,"ax",%progbits
 4411              		.align	2
 4412              		.global	CyHalt
 4413              		.code	16
 4414              		.thumb_func
 4415              		.type	CyHalt, %function
 4416              	CyHalt:
 4417              	.LFB48:
2652:Generated_Source\PSoC4/CyLib.c **** 
2653:Generated_Source\PSoC4/CyLib.c **** 
2654:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2655:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyHalt
2656:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2657:Generated_Source\PSoC4/CyLib.c **** *
2658:Generated_Source\PSoC4/CyLib.c **** *  Halts the CPU.
2659:Generated_Source\PSoC4/CyLib.c **** *
2660:Generated_Source\PSoC4/CyLib.c **** *  \param reason: Value to be used during debugging.
2661:Generated_Source\PSoC4/CyLib.c **** *
2662:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2663:Generated_Source\PSoC4/CyLib.c **** void CyHalt(uint8 reason)
2664:Generated_Source\PSoC4/CyLib.c **** {
 4418              		.loc 1 2664 0
 4419              		.cfi_startproc
 4420              		@ args = 0, pretend = 0, frame = 8
 4421              		@ frame_needed = 1, uses_anonymous_args = 0
 4422 0000 80B5     		push	{r7, lr}
 4423              		.cfi_def_cfa_offset 8
 4424              		.cfi_offset 7, -8
 4425              		.cfi_offset 14, -4
 4426 0002 82B0     		sub	sp, sp, #8
 4427              		.cfi_def_cfa_offset 16
 4428 0004 00AF     		add	r7, sp, #0
ARM GAS  C:\Users\essele\AppData\Local\Temp\ccaJcTi8.s 			page 126


 4429              		.cfi_def_cfa_register 7
 4430 0006 0200     		movs	r2, r0
 4431 0008 FB1D     		adds	r3, r7, #7
 4432 000a 1A70     		strb	r2, [r3]
2665:Generated_Source\PSoC4/CyLib.c ****     if(0u != reason)
2666:Generated_Source\PSoC4/CyLib.c ****     {
2667:Generated_Source\PSoC4/CyLib.c ****         /* To remove unreferenced local variable warning */
2668:Generated_Source\PSoC4/CyLib.c ****     }
2669:Generated_Source\PSoC4/CyLib.c **** 
2670:Generated_Source\PSoC4/CyLib.c ****     #if defined (__ARMCC_VERSION)
2671:Generated_Source\PSoC4/CyLib.c ****         __breakpoint(0x0);
2672:Generated_Source\PSoC4/CyLib.c ****     #elif defined(__GNUC__) || defined (__ICCARM__)
2673:Generated_Source\PSoC4/CyLib.c ****         __asm("    bkpt    1");
 4433              		.loc 1 2673 0
 4434              		.syntax divided
 4435              	@ 2673 "Generated_Source\PSoC4\CyLib.c" 1
 4436 000c 01BE     		    bkpt    1
 4437              	@ 0 "" 2
2674:Generated_Source\PSoC4/CyLib.c ****     #elif defined(__C51__)
2675:Generated_Source\PSoC4/CyLib.c ****         CYDEV_HALT_CPU;
2676:Generated_Source\PSoC4/CyLib.c ****     #endif  /* (__ARMCC_VERSION) */
2677:Generated_Source\PSoC4/CyLib.c **** }
 4438              		.loc 1 2677 0
 4439              		.thumb
 4440              		.syntax unified
 4441 000e C046     		nop
 4442 0010 BD46     		mov	sp, r7
 4443 0012 02B0     		add	sp, sp, #8
 4444              		@ sp needed
 4445 0014 80BD     		pop	{r7, pc}
 4446              		.cfi_endproc
 4447              	.LFE48:
 4448              		.size	CyHalt, .-CyHalt
 4449 0016 C046     		.section	.text.CySoftwareReset,"ax",%progbits
 4450              		.align	2
 4451              		.global	CySoftwareReset
 4452              		.code	16
 4453              		.thumb_func
 4454              		.type	CySoftwareReset, %function
 4455              	CySoftwareReset:
 4456              	.LFB49:
2678:Generated_Source\PSoC4/CyLib.c **** 
2679:Generated_Source\PSoC4/CyLib.c **** 
2680:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2681:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySoftwareReset
2682:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2683:Generated_Source\PSoC4/CyLib.c **** *
2684:Generated_Source\PSoC4/CyLib.c **** *  Forces a software reset of the device.
2685:Generated_Source\PSoC4/CyLib.c **** *
2686:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2687:Generated_Source\PSoC4/CyLib.c **** void CySoftwareReset(void)
2688:Generated_Source\PSoC4/CyLib.c **** {
 4457              		.loc 1 2688 0
 4458              		.cfi_startproc
 4459              		@ args = 0, pretend = 0, frame = 0
 4460              		@ frame_needed = 1, uses_anonymous_args = 0
 4461 0000 80B5     		push	{r7, lr}
ARM GAS  C:\Users\essele\AppData\Local\Temp\ccaJcTi8.s 			page 127


 4462              		.cfi_def_cfa_offset 8
 4463              		.cfi_offset 7, -8
 4464              		.cfi_offset 14, -4
 4465 0002 00AF     		add	r7, sp, #0
 4466              		.cfi_def_cfa_register 7
2689:Generated_Source\PSoC4/CyLib.c ****     /***************************************************************************
2690:Generated_Source\PSoC4/CyLib.c ****     * Setting the system reset request bit. The vector key value must be written
2691:Generated_Source\PSoC4/CyLib.c ****     * to the register, otherwise the register write is unpredictable.
2692:Generated_Source\PSoC4/CyLib.c ****     ***************************************************************************/
2693:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_AIRCR_REG = (CY_SYS_AIRCR_REG & (uint32)(~CY_SYS_AIRCR_VECTKEY_MASK)) |
 4467              		.loc 1 2693 0
 4468 0004 054B     		ldr	r3, .L279
 4469 0006 054A     		ldr	r2, .L279
 4470 0008 1268     		ldr	r2, [r2]
 4471 000a 1204     		lsls	r2, r2, #16
 4472 000c 120C     		lsrs	r2, r2, #16
2694:Generated_Source\PSoC4/CyLib.c ****                             CY_SYS_AIRCR_VECTKEY | CY_SYS_AIRCR_SYSRESETREQ;
 4473              		.loc 1 2694 0
 4474 000e 0449     		ldr	r1, .L279+4
 4475 0010 0A43     		orrs	r2, r1
2693:Generated_Source\PSoC4/CyLib.c ****                             CY_SYS_AIRCR_VECTKEY | CY_SYS_AIRCR_SYSRESETREQ;
 4476              		.loc 1 2693 0
 4477 0012 1A60     		str	r2, [r3]
2695:Generated_Source\PSoC4/CyLib.c **** }
 4478              		.loc 1 2695 0
 4479 0014 C046     		nop
 4480 0016 BD46     		mov	sp, r7
 4481              		@ sp needed
 4482 0018 80BD     		pop	{r7, pc}
 4483              	.L280:
 4484 001a C046     		.align	2
 4485              	.L279:
 4486 001c 0CED00E0 		.word	-536810228
 4487 0020 0400FA05 		.word	100270084
 4488              		.cfi_endproc
 4489              	.LFE49:
 4490              		.size	CySoftwareReset, .-CySoftwareReset
 4491              		.section	.text.CyDelay,"ax",%progbits
 4492              		.align	2
 4493              		.global	CyDelay
 4494              		.code	16
 4495              		.thumb_func
 4496              		.type	CyDelay, %function
 4497              	CyDelay:
 4498              	.LFB50:
2696:Generated_Source\PSoC4/CyLib.c **** 
2697:Generated_Source\PSoC4/CyLib.c **** 
2698:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2699:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyDelay
2700:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2701:Generated_Source\PSoC4/CyLib.c **** *
2702:Generated_Source\PSoC4/CyLib.c **** *  Blocks for milliseconds.
2703:Generated_Source\PSoC4/CyLib.c **** *
2704:Generated_Source\PSoC4/CyLib.c **** *  \param milliseconds: number of milliseconds to delay.
2705:Generated_Source\PSoC4/CyLib.c **** *
2706:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2707:Generated_Source\PSoC4/CyLib.c **** void CyDelay(uint32 milliseconds)
ARM GAS  C:\Users\essele\AppData\Local\Temp\ccaJcTi8.s 			page 128


2708:Generated_Source\PSoC4/CyLib.c **** {
 4499              		.loc 1 2708 0
 4500              		.cfi_startproc
 4501              		@ args = 0, pretend = 0, frame = 8
 4502              		@ frame_needed = 1, uses_anonymous_args = 0
 4503 0000 80B5     		push	{r7, lr}
 4504              		.cfi_def_cfa_offset 8
 4505              		.cfi_offset 7, -8
 4506              		.cfi_offset 14, -4
 4507 0002 82B0     		sub	sp, sp, #8
 4508              		.cfi_def_cfa_offset 16
 4509 0004 00AF     		add	r7, sp, #0
 4510              		.cfi_def_cfa_register 7
 4511 0006 7860     		str	r0, [r7, #4]
2709:Generated_Source\PSoC4/CyLib.c ****     while (milliseconds > CY_DELAY_MS_OVERFLOW)
 4512              		.loc 1 2709 0
 4513 0008 09E0     		b	.L282
 4514              	.L283:
2710:Generated_Source\PSoC4/CyLib.c ****     {
2711:Generated_Source\PSoC4/CyLib.c ****         /* This loop prevents overflow.
2712:Generated_Source\PSoC4/CyLib.c ****          * At 100MHz, milliseconds * cydelayFreqKhz overflows at about 42 seconds
2713:Generated_Source\PSoC4/CyLib.c ****          */
2714:Generated_Source\PSoC4/CyLib.c ****         CyDelayCycles(cydelay32kMs);
 4515              		.loc 1 2714 0
 4516 000a 0D4B     		ldr	r3, .L284
 4517 000c 1B68     		ldr	r3, [r3]
 4518 000e 1800     		movs	r0, r3
 4519 0010 FFF7FEFF 		bl	CyDelayCycles
2715:Generated_Source\PSoC4/CyLib.c ****         milliseconds -= CY_DELAY_MS_OVERFLOW;
 4520              		.loc 1 2715 0
 4521 0014 7B68     		ldr	r3, [r7, #4]
 4522 0016 0B4A     		ldr	r2, .L284+4
 4523 0018 9446     		mov	ip, r2
 4524 001a 6344     		add	r3, r3, ip
 4525 001c 7B60     		str	r3, [r7, #4]
 4526              	.L282:
2709:Generated_Source\PSoC4/CyLib.c ****     while (milliseconds > CY_DELAY_MS_OVERFLOW)
 4527              		.loc 1 2709 0
 4528 001e 7A68     		ldr	r2, [r7, #4]
 4529 0020 8023     		movs	r3, #128
 4530 0022 1B02     		lsls	r3, r3, #8
 4531 0024 9A42     		cmp	r2, r3
 4532 0026 F0D8     		bhi	.L283
2716:Generated_Source\PSoC4/CyLib.c ****     }
2717:Generated_Source\PSoC4/CyLib.c **** 
2718:Generated_Source\PSoC4/CyLib.c ****     CyDelayCycles(milliseconds * cydelayFreqKhz);
 4533              		.loc 1 2718 0
 4534 0028 074B     		ldr	r3, .L284+8
 4535 002a 1B68     		ldr	r3, [r3]
 4536 002c 7A68     		ldr	r2, [r7, #4]
 4537 002e 5343     		muls	r3, r2
 4538 0030 1800     		movs	r0, r3
 4539 0032 FFF7FEFF 		bl	CyDelayCycles
2719:Generated_Source\PSoC4/CyLib.c **** }
 4540              		.loc 1 2719 0
 4541 0036 C046     		nop
 4542 0038 BD46     		mov	sp, r7
ARM GAS  C:\Users\essele\AppData\Local\Temp\ccaJcTi8.s 			page 129


 4543 003a 02B0     		add	sp, sp, #8
 4544              		@ sp needed
 4545 003c 80BD     		pop	{r7, pc}
 4546              	.L285:
 4547 003e C046     		.align	2
 4548              	.L284:
 4549 0040 00000000 		.word	cydelay32kMs
 4550 0044 0080FFFF 		.word	-32768
 4551 0048 00000000 		.word	cydelayFreqKhz
 4552              		.cfi_endproc
 4553              	.LFE50:
 4554              		.size	CyDelay, .-CyDelay
 4555              		.section	.text.CyDelayUs,"ax",%progbits
 4556              		.align	2
 4557              		.global	CyDelayUs
 4558              		.code	16
 4559              		.thumb_func
 4560              		.type	CyDelayUs, %function
 4561              	CyDelayUs:
 4562              	.LFB51:
2720:Generated_Source\PSoC4/CyLib.c **** 
2721:Generated_Source\PSoC4/CyLib.c **** 
2722:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2723:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyDelayUs
2724:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2725:Generated_Source\PSoC4/CyLib.c **** *  Blocks for microseconds.
2726:Generated_Source\PSoC4/CyLib.c **** *
2727:Generated_Source\PSoC4/CyLib.c **** *  \param microseconds: number of microseconds to delay.
2728:Generated_Source\PSoC4/CyLib.c **** *
2729:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2730:Generated_Source\PSoC4/CyLib.c **** void CyDelayUs(uint16 microseconds)
2731:Generated_Source\PSoC4/CyLib.c **** {
 4563              		.loc 1 2731 0
 4564              		.cfi_startproc
 4565              		@ args = 0, pretend = 0, frame = 8
 4566              		@ frame_needed = 1, uses_anonymous_args = 0
 4567 0000 80B5     		push	{r7, lr}
 4568              		.cfi_def_cfa_offset 8
 4569              		.cfi_offset 7, -8
 4570              		.cfi_offset 14, -4
 4571 0002 82B0     		sub	sp, sp, #8
 4572              		.cfi_def_cfa_offset 16
 4573 0004 00AF     		add	r7, sp, #0
 4574              		.cfi_def_cfa_register 7
 4575 0006 0200     		movs	r2, r0
 4576 0008 BB1D     		adds	r3, r7, #6
 4577 000a 1A80     		strh	r2, [r3]
2732:Generated_Source\PSoC4/CyLib.c ****     CyDelayCycles((uint32)microseconds * cydelayFreqMhz);
 4578              		.loc 1 2732 0
 4579 000c BB1D     		adds	r3, r7, #6
 4580 000e 1B88     		ldrh	r3, [r3]
 4581 0010 044A     		ldr	r2, .L287
 4582 0012 1278     		ldrb	r2, [r2]
 4583 0014 5343     		muls	r3, r2
 4584 0016 1800     		movs	r0, r3
 4585 0018 FFF7FEFF 		bl	CyDelayCycles
2733:Generated_Source\PSoC4/CyLib.c **** }
ARM GAS  C:\Users\essele\AppData\Local\Temp\ccaJcTi8.s 			page 130


 4586              		.loc 1 2733 0
 4587 001c C046     		nop
 4588 001e BD46     		mov	sp, r7
 4589 0020 02B0     		add	sp, sp, #8
 4590              		@ sp needed
 4591 0022 80BD     		pop	{r7, pc}
 4592              	.L288:
 4593              		.align	2
 4594              	.L287:
 4595 0024 00000000 		.word	cydelayFreqMhz
 4596              		.cfi_endproc
 4597              	.LFE51:
 4598              		.size	CyDelayUs, .-CyDelayUs
 4599              		.section	.text.CyDelayFreq,"ax",%progbits
 4600              		.align	2
 4601              		.global	CyDelayFreq
 4602              		.code	16
 4603              		.thumb_func
 4604              		.type	CyDelayFreq, %function
 4605              	CyDelayFreq:
 4606              	.LFB52:
2734:Generated_Source\PSoC4/CyLib.c **** 
2735:Generated_Source\PSoC4/CyLib.c **** 
2736:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2737:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyDelayFreq
2738:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2739:Generated_Source\PSoC4/CyLib.c **** *  Sets clock frequency for CyDelay.
2740:Generated_Source\PSoC4/CyLib.c **** *
2741:Generated_Source\PSoC4/CyLib.c **** *  \param freq: Frequency of bus clock in Hertz.
2742:Generated_Source\PSoC4/CyLib.c **** *
2743:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2744:Generated_Source\PSoC4/CyLib.c **** void CyDelayFreq(uint32 freq)
2745:Generated_Source\PSoC4/CyLib.c **** {
 4607              		.loc 1 2745 0
 4608              		.cfi_startproc
 4609              		@ args = 0, pretend = 0, frame = 8
 4610              		@ frame_needed = 1, uses_anonymous_args = 0
 4611 0000 80B5     		push	{r7, lr}
 4612              		.cfi_def_cfa_offset 8
 4613              		.cfi_offset 7, -8
 4614              		.cfi_offset 14, -4
 4615 0002 82B0     		sub	sp, sp, #8
 4616              		.cfi_def_cfa_offset 16
 4617 0004 00AF     		add	r7, sp, #0
 4618              		.cfi_def_cfa_register 7
 4619 0006 7860     		str	r0, [r7, #4]
2746:Generated_Source\PSoC4/CyLib.c ****     if (freq != 0u)
 4620              		.loc 1 2746 0
 4621 0008 7B68     		ldr	r3, [r7, #4]
 4622 000a 002B     		cmp	r3, #0
 4623 000c 03D0     		beq	.L290
2747:Generated_Source\PSoC4/CyLib.c ****     {
2748:Generated_Source\PSoC4/CyLib.c ****         cydelayFreqHz = freq;
 4624              		.loc 1 2748 0
 4625 000e 154B     		ldr	r3, .L292
 4626 0010 7A68     		ldr	r2, [r7, #4]
 4627 0012 1A60     		str	r2, [r3]
ARM GAS  C:\Users\essele\AppData\Local\Temp\ccaJcTi8.s 			page 131


 4628 0014 02E0     		b	.L291
 4629              	.L290:
2749:Generated_Source\PSoC4/CyLib.c ****     }
2750:Generated_Source\PSoC4/CyLib.c ****     else
2751:Generated_Source\PSoC4/CyLib.c ****     {
2752:Generated_Source\PSoC4/CyLib.c ****         cydelayFreqHz = CYDEV_BCLK__SYSCLK__HZ;
 4630              		.loc 1 2752 0
 4631 0016 134B     		ldr	r3, .L292
 4632 0018 134A     		ldr	r2, .L292+4
 4633 001a 1A60     		str	r2, [r3]
 4634              	.L291:
2753:Generated_Source\PSoC4/CyLib.c ****     }
2754:Generated_Source\PSoC4/CyLib.c **** 
2755:Generated_Source\PSoC4/CyLib.c ****     cydelayFreqMhz = (uint8)((cydelayFreqHz + CY_DELAY_1M_MINUS_1_THRESHOLD) / CY_DELAY_1M_THRESHOL
 4635              		.loc 1 2755 0
 4636 001c 114B     		ldr	r3, .L292
 4637 001e 1B68     		ldr	r3, [r3]
 4638 0020 124A     		ldr	r2, .L292+8
 4639 0022 9446     		mov	ip, r2
 4640 0024 6344     		add	r3, r3, ip
 4641 0026 1249     		ldr	r1, .L292+12
 4642 0028 1800     		movs	r0, r3
 4643 002a FFF7FEFF 		bl	__aeabi_uidiv
 4644 002e 0300     		movs	r3, r0
 4645 0030 DAB2     		uxtb	r2, r3
 4646 0032 104B     		ldr	r3, .L292+16
 4647 0034 1A70     		strb	r2, [r3]
2756:Generated_Source\PSoC4/CyLib.c ****     cydelayFreqKhz = (cydelayFreqHz + CY_DELAY_1K_MINUS_1_THRESHOLD) / CY_DELAY_1K_THRESHOLD;
 4648              		.loc 1 2756 0
 4649 0036 0B4B     		ldr	r3, .L292
 4650 0038 1B68     		ldr	r3, [r3]
 4651 003a 0F4A     		ldr	r2, .L292+20
 4652 003c 9A18     		adds	r2, r3, r2
 4653 003e FA23     		movs	r3, #250
 4654 0040 9900     		lsls	r1, r3, #2
 4655 0042 1000     		movs	r0, r2
 4656 0044 FFF7FEFF 		bl	__aeabi_uidiv
 4657 0048 0300     		movs	r3, r0
 4658 004a 1A00     		movs	r2, r3
 4659 004c 0B4B     		ldr	r3, .L292+24
 4660 004e 1A60     		str	r2, [r3]
2757:Generated_Source\PSoC4/CyLib.c ****     cydelay32kMs   = CY_DELAY_MS_OVERFLOW * cydelayFreqKhz;
 4661              		.loc 1 2757 0
 4662 0050 0A4B     		ldr	r3, .L292+24
 4663 0052 1B68     		ldr	r3, [r3]
 4664 0054 DA03     		lsls	r2, r3, #15
 4665 0056 0A4B     		ldr	r3, .L292+28
 4666 0058 1A60     		str	r2, [r3]
2758:Generated_Source\PSoC4/CyLib.c **** }
 4667              		.loc 1 2758 0
 4668 005a C046     		nop
 4669 005c BD46     		mov	sp, r7
 4670 005e 02B0     		add	sp, sp, #8
 4671              		@ sp needed
 4672 0060 80BD     		pop	{r7, pc}
 4673              	.L293:
 4674 0062 C046     		.align	2
ARM GAS  C:\Users\essele\AppData\Local\Temp\ccaJcTi8.s 			page 132


 4675              	.L292:
 4676 0064 00000000 		.word	cydelayFreqHz
 4677 0068 006CDC02 		.word	48000000
 4678 006c 3F420F00 		.word	999999
 4679 0070 40420F00 		.word	1000000
 4680 0074 00000000 		.word	cydelayFreqMhz
 4681 0078 E7030000 		.word	999
 4682 007c 00000000 		.word	cydelayFreqKhz
 4683 0080 00000000 		.word	cydelay32kMs
 4684              		.cfi_endproc
 4685              	.LFE52:
 4686              		.size	CyDelayFreq, .-CyDelayFreq
 4687              		.section	.text.CySysTickStart,"ax",%progbits
 4688              		.align	2
 4689              		.global	CySysTickStart
 4690              		.code	16
 4691              		.thumb_func
 4692              		.type	CySysTickStart, %function
 4693              	CySysTickStart:
 4694              	.LFB53:
2759:Generated_Source\PSoC4/CyLib.c **** 
2760:Generated_Source\PSoC4/CyLib.c **** 
2761:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2762:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTick_Start
2763:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2764:Generated_Source\PSoC4/CyLib.c **** *
2765:Generated_Source\PSoC4/CyLib.c **** *  Starts the system timer (SysTick): configures SysTick to generate interrupt
2766:Generated_Source\PSoC4/CyLib.c **** *  every 1 ms and enables the interrupt.
2767:Generated_Source\PSoC4/CyLib.c **** *
2768:Generated_Source\PSoC4/CyLib.c **** *  There are components (LIN, CapSense Gesture) that relies on the default 
2769:Generated_Source\PSoC4/CyLib.c **** *  interval (1 ms). And that changing the interval will negatively impact 
2770:Generated_Source\PSoC4/CyLib.c **** *  their functionality.
2771:Generated_Source\PSoC4/CyLib.c **** *
2772:Generated_Source\PSoC4/CyLib.c **** * \sideeffect
2773:Generated_Source\PSoC4/CyLib.c **** *  Clears SysTick count flag if it was set.
2774:Generated_Source\PSoC4/CyLib.c **** *
2775:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2776:Generated_Source\PSoC4/CyLib.c **** void CySysTickStart(void)
2777:Generated_Source\PSoC4/CyLib.c **** {
 4695              		.loc 1 2777 0
 4696              		.cfi_startproc
 4697              		@ args = 0, pretend = 0, frame = 0
 4698              		@ frame_needed = 1, uses_anonymous_args = 0
 4699 0000 80B5     		push	{r7, lr}
 4700              		.cfi_def_cfa_offset 8
 4701              		.cfi_offset 7, -8
 4702              		.cfi_offset 14, -4
 4703 0002 00AF     		add	r7, sp, #0
 4704              		.cfi_def_cfa_register 7
2778:Generated_Source\PSoC4/CyLib.c ****     if (0u == CySysTickInitVar)
 4705              		.loc 1 2778 0
 4706 0004 064B     		ldr	r3, .L296
 4707 0006 1B68     		ldr	r3, [r3]
 4708 0008 002B     		cmp	r3, #0
 4709 000a 04D1     		bne	.L295
2779:Generated_Source\PSoC4/CyLib.c ****     {
2780:Generated_Source\PSoC4/CyLib.c ****         CySysTickInit();
ARM GAS  C:\Users\essele\AppData\Local\Temp\ccaJcTi8.s 			page 133


 4710              		.loc 1 2780 0
 4711 000c FFF7FEFF 		bl	CySysTickInit
2781:Generated_Source\PSoC4/CyLib.c ****         CySysTickInitVar = 1u;
 4712              		.loc 1 2781 0
 4713 0010 034B     		ldr	r3, .L296
 4714 0012 0122     		movs	r2, #1
 4715 0014 1A60     		str	r2, [r3]
 4716              	.L295:
2782:Generated_Source\PSoC4/CyLib.c ****     }
2783:Generated_Source\PSoC4/CyLib.c **** 
2784:Generated_Source\PSoC4/CyLib.c ****     CySysTickEnable();
 4717              		.loc 1 2784 0
 4718 0016 FFF7FEFF 		bl	CySysTickEnable
2785:Generated_Source\PSoC4/CyLib.c **** }
 4719              		.loc 1 2785 0
 4720 001a C046     		nop
 4721 001c BD46     		mov	sp, r7
 4722              		@ sp needed
 4723 001e 80BD     		pop	{r7, pc}
 4724              	.L297:
 4725              		.align	2
 4726              	.L296:
 4727 0020 00000000 		.word	CySysTickInitVar
 4728              		.cfi_endproc
 4729              	.LFE53:
 4730              		.size	CySysTickStart, .-CySysTickStart
 4731              		.section	.text.CySysTickInit,"ax",%progbits
 4732              		.align	2
 4733              		.global	CySysTickInit
 4734              		.code	16
 4735              		.thumb_func
 4736              		.type	CySysTickInit, %function
 4737              	CySysTickInit:
 4738              	.LFB54:
2786:Generated_Source\PSoC4/CyLib.c **** 
2787:Generated_Source\PSoC4/CyLib.c **** 
2788:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2789:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickInit
2790:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2791:Generated_Source\PSoC4/CyLib.c **** *
2792:Generated_Source\PSoC4/CyLib.c **** *  Initializes the callback addresses with pointers to NULL, associates the
2793:Generated_Source\PSoC4/CyLib.c **** *  SysTick system vector with the function that is responsible for calling
2794:Generated_Source\PSoC4/CyLib.c **** *  registered callback functions, configures SysTick timer to generate interrupt
2795:Generated_Source\PSoC4/CyLib.c **** *  every 1 ms.
2796:Generated_Source\PSoC4/CyLib.c **** *
2797:Generated_Source\PSoC4/CyLib.c **** *  The 1 ms interrupt interval is configured based on the frequency determined
2798:Generated_Source\PSoC4/CyLib.c **** *  by PSoC Creator at build time. If System clock frequency is changed in
2799:Generated_Source\PSoC4/CyLib.c **** *  runtime, the CyDelayFreq() with the appropriate parameter should be called.
2800:Generated_Source\PSoC4/CyLib.c **** *
2801:Generated_Source\PSoC4/CyLib.c **** * \sideeffect
2802:Generated_Source\PSoC4/CyLib.c **** *  Clears SysTick count flag if it was set.
2803:Generated_Source\PSoC4/CyLib.c **** *
2804:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2805:Generated_Source\PSoC4/CyLib.c **** void CySysTickInit(void)
2806:Generated_Source\PSoC4/CyLib.c **** {
 4739              		.loc 1 2806 0
 4740              		.cfi_startproc
ARM GAS  C:\Users\essele\AppData\Local\Temp\ccaJcTi8.s 			page 134


 4741              		@ args = 0, pretend = 0, frame = 8
 4742              		@ frame_needed = 1, uses_anonymous_args = 0
 4743 0000 80B5     		push	{r7, lr}
 4744              		.cfi_def_cfa_offset 8
 4745              		.cfi_offset 7, -8
 4746              		.cfi_offset 14, -4
 4747 0002 82B0     		sub	sp, sp, #8
 4748              		.cfi_def_cfa_offset 16
 4749 0004 00AF     		add	r7, sp, #0
 4750              		.cfi_def_cfa_register 7
2807:Generated_Source\PSoC4/CyLib.c ****     uint32 i;
2808:Generated_Source\PSoC4/CyLib.c **** 
2809:Generated_Source\PSoC4/CyLib.c ****     for (i = 0u; i<CY_SYS_SYST_NUM_OF_CALLBACKS; i++)
 4751              		.loc 1 2809 0
 4752 0006 0023     		movs	r3, #0
 4753 0008 7B60     		str	r3, [r7, #4]
 4754 000a 07E0     		b	.L299
 4755              	.L300:
2810:Generated_Source\PSoC4/CyLib.c ****     {
2811:Generated_Source\PSoC4/CyLib.c ****         CySysTickCallbacks[i] = (void *) 0;
 4756              		.loc 1 2811 0 discriminator 3
 4757 000c 114B     		ldr	r3, .L301
 4758 000e 7A68     		ldr	r2, [r7, #4]
 4759 0010 9200     		lsls	r2, r2, #2
 4760 0012 0021     		movs	r1, #0
 4761 0014 D150     		str	r1, [r2, r3]
2809:Generated_Source\PSoC4/CyLib.c ****     {
 4762              		.loc 1 2809 0 discriminator 3
 4763 0016 7B68     		ldr	r3, [r7, #4]
 4764 0018 0133     		adds	r3, r3, #1
 4765 001a 7B60     		str	r3, [r7, #4]
 4766              	.L299:
2809:Generated_Source\PSoC4/CyLib.c ****     {
 4767              		.loc 1 2809 0 is_stmt 0 discriminator 1
 4768 001c 7B68     		ldr	r3, [r7, #4]
 4769 001e 042B     		cmp	r3, #4
 4770 0020 F4D9     		bls	.L300
2812:Generated_Source\PSoC4/CyLib.c ****     }
2813:Generated_Source\PSoC4/CyLib.c **** 
2814:Generated_Source\PSoC4/CyLib.c ****     (void) CyIntSetSysVector(CY_INT_SYSTICK_IRQN, &CySysTickServiceCallbacks);
 4771              		.loc 1 2814 0 is_stmt 1
 4772 0022 0D4B     		ldr	r3, .L301+4
 4773 0024 1900     		movs	r1, r3
 4774 0026 0F20     		movs	r0, #15
 4775 0028 FFF7FEFF 		bl	CyIntSetSysVector
2815:Generated_Source\PSoC4/CyLib.c **** 
2816:Generated_Source\PSoC4/CyLib.c ****     #if(CY_SYSTICK_LFCLK_SOURCE)
2817:Generated_Source\PSoC4/CyLib.c ****         CySysTickSetClockSource(CY_SYS_SYST_CSR_CLK_SRC_SYSCLK);
 4776              		.loc 1 2817 0
 4777 002c 0120     		movs	r0, #1
 4778 002e FFF7FEFF 		bl	CySysTickSetClockSource
2818:Generated_Source\PSoC4/CyLib.c ****     #endif /* (CY_SYSTICK_LFCLK_SOURCE) */
2819:Generated_Source\PSoC4/CyLib.c **** 
2820:Generated_Source\PSoC4/CyLib.c ****     CySysTickSetReload(cydelayFreqHz/1000u);
 4779              		.loc 1 2820 0
 4780 0032 0A4B     		ldr	r3, .L301+8
 4781 0034 1A68     		ldr	r2, [r3]
ARM GAS  C:\Users\essele\AppData\Local\Temp\ccaJcTi8.s 			page 135


 4782 0036 FA23     		movs	r3, #250
 4783 0038 9900     		lsls	r1, r3, #2
 4784 003a 1000     		movs	r0, r2
 4785 003c FFF7FEFF 		bl	__aeabi_uidiv
 4786 0040 0300     		movs	r3, r0
 4787 0042 1800     		movs	r0, r3
 4788 0044 FFF7FEFF 		bl	CySysTickSetReload
2821:Generated_Source\PSoC4/CyLib.c ****     CySysTickClear();
 4789              		.loc 1 2821 0
 4790 0048 FFF7FEFF 		bl	CySysTickClear
2822:Generated_Source\PSoC4/CyLib.c **** }
 4791              		.loc 1 2822 0
 4792 004c C046     		nop
 4793 004e BD46     		mov	sp, r7
 4794 0050 02B0     		add	sp, sp, #8
 4795              		@ sp needed
 4796 0052 80BD     		pop	{r7, pc}
 4797              	.L302:
 4798              		.align	2
 4799              	.L301:
 4800 0054 00000000 		.word	CySysTickCallbacks
 4801 0058 00000000 		.word	CySysTickServiceCallbacks
 4802 005c 00000000 		.word	cydelayFreqHz
 4803              		.cfi_endproc
 4804              	.LFE54:
 4805              		.size	CySysTickInit, .-CySysTickInit
 4806              		.section	.text.CySysTickEnable,"ax",%progbits
 4807              		.align	2
 4808              		.global	CySysTickEnable
 4809              		.code	16
 4810              		.thumb_func
 4811              		.type	CySysTickEnable, %function
 4812              	CySysTickEnable:
 4813              	.LFB55:
2823:Generated_Source\PSoC4/CyLib.c **** 
2824:Generated_Source\PSoC4/CyLib.c **** 
2825:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2826:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickEnable
2827:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2828:Generated_Source\PSoC4/CyLib.c **** *
2829:Generated_Source\PSoC4/CyLib.c **** *  Enables the SysTick timer and its interrupt.
2830:Generated_Source\PSoC4/CyLib.c **** *
2831:Generated_Source\PSoC4/CyLib.c **** * \sideeffect
2832:Generated_Source\PSoC4/CyLib.c **** *  Clears SysTick count flag if it was set
2833:Generated_Source\PSoC4/CyLib.c **** *
2834:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2835:Generated_Source\PSoC4/CyLib.c **** void CySysTickEnable(void)
2836:Generated_Source\PSoC4/CyLib.c **** {
 4814              		.loc 1 2836 0
 4815              		.cfi_startproc
 4816              		@ args = 0, pretend = 0, frame = 0
 4817              		@ frame_needed = 1, uses_anonymous_args = 0
 4818 0000 80B5     		push	{r7, lr}
 4819              		.cfi_def_cfa_offset 8
 4820              		.cfi_offset 7, -8
 4821              		.cfi_offset 14, -4
 4822 0002 00AF     		add	r7, sp, #0
ARM GAS  C:\Users\essele\AppData\Local\Temp\ccaJcTi8.s 			page 136


 4823              		.cfi_def_cfa_register 7
2837:Generated_Source\PSoC4/CyLib.c ****     CySysTickEnableInterrupt();
 4824              		.loc 1 2837 0
 4825 0004 FFF7FEFF 		bl	CySysTickEnableInterrupt
2838:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_SYST_CSR_REG |= CY_SYS_SYST_CSR_ENABLE;
 4826              		.loc 1 2838 0
 4827 0008 044B     		ldr	r3, .L304
 4828 000a 044A     		ldr	r2, .L304
 4829 000c 1268     		ldr	r2, [r2]
 4830 000e 0121     		movs	r1, #1
 4831 0010 0A43     		orrs	r2, r1
 4832 0012 1A60     		str	r2, [r3]
2839:Generated_Source\PSoC4/CyLib.c **** }
 4833              		.loc 1 2839 0
 4834 0014 C046     		nop
 4835 0016 BD46     		mov	sp, r7
 4836              		@ sp needed
 4837 0018 80BD     		pop	{r7, pc}
 4838              	.L305:
 4839 001a C046     		.align	2
 4840              	.L304:
 4841 001c 10E000E0 		.word	-536813552
 4842              		.cfi_endproc
 4843              	.LFE55:
 4844              		.size	CySysTickEnable, .-CySysTickEnable
 4845              		.section	.text.CySysTickStop,"ax",%progbits
 4846              		.align	2
 4847              		.global	CySysTickStop
 4848              		.code	16
 4849              		.thumb_func
 4850              		.type	CySysTickStop, %function
 4851              	CySysTickStop:
 4852              	.LFB56:
2840:Generated_Source\PSoC4/CyLib.c **** 
2841:Generated_Source\PSoC4/CyLib.c **** 
2842:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2843:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickStop
2844:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2845:Generated_Source\PSoC4/CyLib.c **** *
2846:Generated_Source\PSoC4/CyLib.c **** *  Stops the system timer (SysTick).
2847:Generated_Source\PSoC4/CyLib.c **** *
2848:Generated_Source\PSoC4/CyLib.c **** * \sideeffect
2849:Generated_Source\PSoC4/CyLib.c **** *  Clears SysTick count flag if it was set
2850:Generated_Source\PSoC4/CyLib.c **** *
2851:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2852:Generated_Source\PSoC4/CyLib.c **** void CySysTickStop(void)
2853:Generated_Source\PSoC4/CyLib.c **** {
 4853              		.loc 1 2853 0
 4854              		.cfi_startproc
 4855              		@ args = 0, pretend = 0, frame = 0
 4856              		@ frame_needed = 1, uses_anonymous_args = 0
 4857 0000 80B5     		push	{r7, lr}
 4858              		.cfi_def_cfa_offset 8
 4859              		.cfi_offset 7, -8
 4860              		.cfi_offset 14, -4
 4861 0002 00AF     		add	r7, sp, #0
 4862              		.cfi_def_cfa_register 7
ARM GAS  C:\Users\essele\AppData\Local\Temp\ccaJcTi8.s 			page 137


2854:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_SYST_CSR_REG &= ((uint32) ~(CY_SYS_SYST_CSR_ENABLE));
 4863              		.loc 1 2854 0
 4864 0004 044B     		ldr	r3, .L307
 4865 0006 044A     		ldr	r2, .L307
 4866 0008 1268     		ldr	r2, [r2]
 4867 000a 0121     		movs	r1, #1
 4868 000c 8A43     		bics	r2, r1
 4869 000e 1A60     		str	r2, [r3]
2855:Generated_Source\PSoC4/CyLib.c **** }
 4870              		.loc 1 2855 0
 4871 0010 C046     		nop
 4872 0012 BD46     		mov	sp, r7
 4873              		@ sp needed
 4874 0014 80BD     		pop	{r7, pc}
 4875              	.L308:
 4876 0016 C046     		.align	2
 4877              	.L307:
 4878 0018 10E000E0 		.word	-536813552
 4879              		.cfi_endproc
 4880              	.LFE56:
 4881              		.size	CySysTickStop, .-CySysTickStop
 4882              		.section	.text.CySysTickEnableInterrupt,"ax",%progbits
 4883              		.align	2
 4884              		.global	CySysTickEnableInterrupt
 4885              		.code	16
 4886              		.thumb_func
 4887              		.type	CySysTickEnableInterrupt, %function
 4888              	CySysTickEnableInterrupt:
 4889              	.LFB57:
2856:Generated_Source\PSoC4/CyLib.c **** 
2857:Generated_Source\PSoC4/CyLib.c **** 
2858:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2859:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickEnableInterrupt
2860:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2861:Generated_Source\PSoC4/CyLib.c **** *
2862:Generated_Source\PSoC4/CyLib.c **** *  Enables the SysTick interrupt.
2863:Generated_Source\PSoC4/CyLib.c **** *
2864:Generated_Source\PSoC4/CyLib.c **** * \sideeffect
2865:Generated_Source\PSoC4/CyLib.c **** *  Clears SysTick count flag if it was set
2866:Generated_Source\PSoC4/CyLib.c **** *
2867:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2868:Generated_Source\PSoC4/CyLib.c **** void CySysTickEnableInterrupt(void)
2869:Generated_Source\PSoC4/CyLib.c **** {
 4890              		.loc 1 2869 0
 4891              		.cfi_startproc
 4892              		@ args = 0, pretend = 0, frame = 0
 4893              		@ frame_needed = 1, uses_anonymous_args = 0
 4894 0000 80B5     		push	{r7, lr}
 4895              		.cfi_def_cfa_offset 8
 4896              		.cfi_offset 7, -8
 4897              		.cfi_offset 14, -4
 4898 0002 00AF     		add	r7, sp, #0
 4899              		.cfi_def_cfa_register 7
2870:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_SYST_CSR_REG |= CY_SYS_SYST_CSR_ENABLE_INT;
 4900              		.loc 1 2870 0
 4901 0004 044B     		ldr	r3, .L310
 4902 0006 044A     		ldr	r2, .L310
ARM GAS  C:\Users\essele\AppData\Local\Temp\ccaJcTi8.s 			page 138


 4903 0008 1268     		ldr	r2, [r2]
 4904 000a 0221     		movs	r1, #2
 4905 000c 0A43     		orrs	r2, r1
 4906 000e 1A60     		str	r2, [r3]
2871:Generated_Source\PSoC4/CyLib.c **** }
 4907              		.loc 1 2871 0
 4908 0010 C046     		nop
 4909 0012 BD46     		mov	sp, r7
 4910              		@ sp needed
 4911 0014 80BD     		pop	{r7, pc}
 4912              	.L311:
 4913 0016 C046     		.align	2
 4914              	.L310:
 4915 0018 10E000E0 		.word	-536813552
 4916              		.cfi_endproc
 4917              	.LFE57:
 4918              		.size	CySysTickEnableInterrupt, .-CySysTickEnableInterrupt
 4919              		.section	.text.CySysTickDisableInterrupt,"ax",%progbits
 4920              		.align	2
 4921              		.global	CySysTickDisableInterrupt
 4922              		.code	16
 4923              		.thumb_func
 4924              		.type	CySysTickDisableInterrupt, %function
 4925              	CySysTickDisableInterrupt:
 4926              	.LFB58:
2872:Generated_Source\PSoC4/CyLib.c **** 
2873:Generated_Source\PSoC4/CyLib.c **** 
2874:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2875:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickDisableInterrupt
2876:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2877:Generated_Source\PSoC4/CyLib.c **** *
2878:Generated_Source\PSoC4/CyLib.c **** *  Disables the SysTick interrupt.
2879:Generated_Source\PSoC4/CyLib.c **** *
2880:Generated_Source\PSoC4/CyLib.c **** * \sideeffect
2881:Generated_Source\PSoC4/CyLib.c **** *  Clears SysTick count flag if it was set
2882:Generated_Source\PSoC4/CyLib.c **** *
2883:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2884:Generated_Source\PSoC4/CyLib.c **** void CySysTickDisableInterrupt(void)
2885:Generated_Source\PSoC4/CyLib.c **** {
 4927              		.loc 1 2885 0
 4928              		.cfi_startproc
 4929              		@ args = 0, pretend = 0, frame = 0
 4930              		@ frame_needed = 1, uses_anonymous_args = 0
 4931 0000 80B5     		push	{r7, lr}
 4932              		.cfi_def_cfa_offset 8
 4933              		.cfi_offset 7, -8
 4934              		.cfi_offset 14, -4
 4935 0002 00AF     		add	r7, sp, #0
 4936              		.cfi_def_cfa_register 7
2886:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_SYST_CSR_REG &= ((uint32) ~(CY_SYS_SYST_CSR_ENABLE_INT));
 4937              		.loc 1 2886 0
 4938 0004 044B     		ldr	r3, .L313
 4939 0006 044A     		ldr	r2, .L313
 4940 0008 1268     		ldr	r2, [r2]
 4941 000a 0221     		movs	r1, #2
 4942 000c 8A43     		bics	r2, r1
 4943 000e 1A60     		str	r2, [r3]
ARM GAS  C:\Users\essele\AppData\Local\Temp\ccaJcTi8.s 			page 139


2887:Generated_Source\PSoC4/CyLib.c **** }
 4944              		.loc 1 2887 0
 4945 0010 C046     		nop
 4946 0012 BD46     		mov	sp, r7
 4947              		@ sp needed
 4948 0014 80BD     		pop	{r7, pc}
 4949              	.L314:
 4950 0016 C046     		.align	2
 4951              	.L313:
 4952 0018 10E000E0 		.word	-536813552
 4953              		.cfi_endproc
 4954              	.LFE58:
 4955              		.size	CySysTickDisableInterrupt, .-CySysTickDisableInterrupt
 4956              		.section	.text.CySysTickSetReload,"ax",%progbits
 4957              		.align	2
 4958              		.global	CySysTickSetReload
 4959              		.code	16
 4960              		.thumb_func
 4961              		.type	CySysTickSetReload, %function
 4962              	CySysTickSetReload:
 4963              	.LFB59:
2888:Generated_Source\PSoC4/CyLib.c **** 
2889:Generated_Source\PSoC4/CyLib.c **** 
2890:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2891:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickSetReload
2892:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2893:Generated_Source\PSoC4/CyLib.c **** *
2894:Generated_Source\PSoC4/CyLib.c **** *  Sets value the counter is set to on startup and after it reaches zero. This
2895:Generated_Source\PSoC4/CyLib.c **** *  function do not change or reset current sysTick counter value, so it should
2896:Generated_Source\PSoC4/CyLib.c **** *  be cleared using CySysTickClear() API.
2897:Generated_Source\PSoC4/CyLib.c **** *
2898:Generated_Source\PSoC4/CyLib.c **** *  \param value: Valid range [0x0-0x00FFFFFF]. Counter reset value
2899:Generated_Source\PSoC4/CyLib.c **** *
2900:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2901:Generated_Source\PSoC4/CyLib.c **** void CySysTickSetReload(uint32 value)
2902:Generated_Source\PSoC4/CyLib.c **** {
 4964              		.loc 1 2902 0
 4965              		.cfi_startproc
 4966              		@ args = 0, pretend = 0, frame = 8
 4967              		@ frame_needed = 1, uses_anonymous_args = 0
 4968 0000 80B5     		push	{r7, lr}
 4969              		.cfi_def_cfa_offset 8
 4970              		.cfi_offset 7, -8
 4971              		.cfi_offset 14, -4
 4972 0002 82B0     		sub	sp, sp, #8
 4973              		.cfi_def_cfa_offset 16
 4974 0004 00AF     		add	r7, sp, #0
 4975              		.cfi_def_cfa_register 7
 4976 0006 7860     		str	r0, [r7, #4]
2903:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_SYST_RVR_REG = (value & CY_SYS_SYST_RVR_CNT_MASK);
 4977              		.loc 1 2903 0
 4978 0008 044B     		ldr	r3, .L316
 4979 000a 7A68     		ldr	r2, [r7, #4]
 4980 000c 1202     		lsls	r2, r2, #8
 4981 000e 120A     		lsrs	r2, r2, #8
 4982 0010 1A60     		str	r2, [r3]
2904:Generated_Source\PSoC4/CyLib.c **** }
ARM GAS  C:\Users\essele\AppData\Local\Temp\ccaJcTi8.s 			page 140


 4983              		.loc 1 2904 0
 4984 0012 C046     		nop
 4985 0014 BD46     		mov	sp, r7
 4986 0016 02B0     		add	sp, sp, #8
 4987              		@ sp needed
 4988 0018 80BD     		pop	{r7, pc}
 4989              	.L317:
 4990 001a C046     		.align	2
 4991              	.L316:
 4992 001c 14E000E0 		.word	-536813548
 4993              		.cfi_endproc
 4994              	.LFE59:
 4995              		.size	CySysTickSetReload, .-CySysTickSetReload
 4996              		.section	.text.CySysTickGetReload,"ax",%progbits
 4997              		.align	2
 4998              		.global	CySysTickGetReload
 4999              		.code	16
 5000              		.thumb_func
 5001              		.type	CySysTickGetReload, %function
 5002              	CySysTickGetReload:
 5003              	.LFB60:
2905:Generated_Source\PSoC4/CyLib.c **** 
2906:Generated_Source\PSoC4/CyLib.c **** 
2907:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2908:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickGetReload
2909:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2910:Generated_Source\PSoC4/CyLib.c **** *
2911:Generated_Source\PSoC4/CyLib.c **** *  Gets value the counter is set to on startup and after it reaches zero.
2912:Generated_Source\PSoC4/CyLib.c **** *
2913:Generated_Source\PSoC4/CyLib.c **** * \return
2914:Generated_Source\PSoC4/CyLib.c **** *  Counter reset value.
2915:Generated_Source\PSoC4/CyLib.c **** *
2916:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2917:Generated_Source\PSoC4/CyLib.c **** uint32 CySysTickGetReload(void)
2918:Generated_Source\PSoC4/CyLib.c **** {
 5004              		.loc 1 2918 0
 5005              		.cfi_startproc
 5006              		@ args = 0, pretend = 0, frame = 0
 5007              		@ frame_needed = 1, uses_anonymous_args = 0
 5008 0000 80B5     		push	{r7, lr}
 5009              		.cfi_def_cfa_offset 8
 5010              		.cfi_offset 7, -8
 5011              		.cfi_offset 14, -4
 5012 0002 00AF     		add	r7, sp, #0
 5013              		.cfi_def_cfa_register 7
2919:Generated_Source\PSoC4/CyLib.c ****     return(CY_SYS_SYST_RVR_REG & CY_SYS_SYST_RVR_CNT_MASK);
 5014              		.loc 1 2919 0
 5015 0004 034B     		ldr	r3, .L320
 5016 0006 1B68     		ldr	r3, [r3]
 5017 0008 1B02     		lsls	r3, r3, #8
 5018 000a 1B0A     		lsrs	r3, r3, #8
2920:Generated_Source\PSoC4/CyLib.c **** }
 5019              		.loc 1 2920 0
 5020 000c 1800     		movs	r0, r3
 5021 000e BD46     		mov	sp, r7
 5022              		@ sp needed
 5023 0010 80BD     		pop	{r7, pc}
ARM GAS  C:\Users\essele\AppData\Local\Temp\ccaJcTi8.s 			page 141


 5024              	.L321:
 5025 0012 C046     		.align	2
 5026              	.L320:
 5027 0014 14E000E0 		.word	-536813548
 5028              		.cfi_endproc
 5029              	.LFE60:
 5030              		.size	CySysTickGetReload, .-CySysTickGetReload
 5031              		.section	.text.CySysTickGetValue,"ax",%progbits
 5032              		.align	2
 5033              		.global	CySysTickGetValue
 5034              		.code	16
 5035              		.thumb_func
 5036              		.type	CySysTickGetValue, %function
 5037              	CySysTickGetValue:
 5038              	.LFB61:
2921:Generated_Source\PSoC4/CyLib.c **** 
2922:Generated_Source\PSoC4/CyLib.c **** 
2923:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2924:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickGetValue
2925:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2926:Generated_Source\PSoC4/CyLib.c **** *
2927:Generated_Source\PSoC4/CyLib.c **** *  Gets current SysTick counter value.
2928:Generated_Source\PSoC4/CyLib.c **** *
2929:Generated_Source\PSoC4/CyLib.c **** * \return
2930:Generated_Source\PSoC4/CyLib.c **** *  Current SysTick counter value
2931:Generated_Source\PSoC4/CyLib.c **** *
2932:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2933:Generated_Source\PSoC4/CyLib.c **** uint32 CySysTickGetValue(void)
2934:Generated_Source\PSoC4/CyLib.c **** {
 5039              		.loc 1 2934 0
 5040              		.cfi_startproc
 5041              		@ args = 0, pretend = 0, frame = 0
 5042              		@ frame_needed = 1, uses_anonymous_args = 0
 5043 0000 80B5     		push	{r7, lr}
 5044              		.cfi_def_cfa_offset 8
 5045              		.cfi_offset 7, -8
 5046              		.cfi_offset 14, -4
 5047 0002 00AF     		add	r7, sp, #0
 5048              		.cfi_def_cfa_register 7
2935:Generated_Source\PSoC4/CyLib.c ****     return(CY_SYS_SYST_CVR_REG & CY_SYS_SYST_CVR_CNT_MASK);
 5049              		.loc 1 2935 0
 5050 0004 034B     		ldr	r3, .L324
 5051 0006 1B68     		ldr	r3, [r3]
 5052 0008 1B02     		lsls	r3, r3, #8
 5053 000a 1B0A     		lsrs	r3, r3, #8
2936:Generated_Source\PSoC4/CyLib.c **** }
 5054              		.loc 1 2936 0
 5055 000c 1800     		movs	r0, r3
 5056 000e BD46     		mov	sp, r7
 5057              		@ sp needed
 5058 0010 80BD     		pop	{r7, pc}
 5059              	.L325:
 5060 0012 C046     		.align	2
 5061              	.L324:
 5062 0014 18E000E0 		.word	-536813544
 5063              		.cfi_endproc
 5064              	.LFE61:
ARM GAS  C:\Users\essele\AppData\Local\Temp\ccaJcTi8.s 			page 142


 5065              		.size	CySysTickGetValue, .-CySysTickGetValue
 5066              		.section	.text.CySysTickSetClockSource,"ax",%progbits
 5067              		.align	2
 5068              		.global	CySysTickSetClockSource
 5069              		.code	16
 5070              		.thumb_func
 5071              		.type	CySysTickSetClockSource, %function
 5072              	CySysTickSetClockSource:
 5073              	.LFB62:
2937:Generated_Source\PSoC4/CyLib.c **** 
2938:Generated_Source\PSoC4/CyLib.c **** 
2939:Generated_Source\PSoC4/CyLib.c **** #if(CY_SYSTICK_LFCLK_SOURCE)
2940:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
2941:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysTickSetClockSource
2942:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
2943:Generated_Source\PSoC4/CyLib.c ****     *
2944:Generated_Source\PSoC4/CyLib.c ****     *  Sets the clock source for the SysTick counter.
2945:Generated_Source\PSoC4/CyLib.c ****     *
2946:Generated_Source\PSoC4/CyLib.c ****     *  Clears SysTick count flag if it was set. If clock source is not ready this
2947:Generated_Source\PSoC4/CyLib.c ****     *  function call will have no effect. After changing clock source to the low
2948:Generated_Source\PSoC4/CyLib.c ****     *  frequency clock the counter and reload register values will remain unchanged
2949:Generated_Source\PSoC4/CyLib.c ****     *  so time to the interrupt will be significantly longer and vice versa.
2950:Generated_Source\PSoC4/CyLib.c ****     *
2951:Generated_Source\PSoC4/CyLib.c ****     *  The changing of SysTick clock source and\or its frequency will change 
2952:Generated_Source\PSoC4/CyLib.c ****     *  the interrupt interval and that CySysTickSetReload() should be 
2953:Generated_Source\PSoC4/CyLib.c ****     *  called to compensate this change.    
2954:Generated_Source\PSoC4/CyLib.c ****     *
2955:Generated_Source\PSoC4/CyLib.c ****     *  The function is not available on PSoC 4000, PSoC 4100, and PSoC 42000
2956:Generated_Source\PSoC4/CyLib.c ****     *  devices. The SysTick timer clocked by the System clock on these devices.
2957:Generated_Source\PSoC4/CyLib.c ****     *
2958:Generated_Source\PSoC4/CyLib.c ****     *  \param clockSource Clock source for SysTick counter
2959:Generated_Source\PSoC4/CyLib.c ****     *         Define                     Clock Source
2960:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_SYST_CSR_CLK_SRC_SYSCLK     SysTick is clocked by the CPU clock.
2961:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_SYST_CSR_CLK_SRC_LFCLK      SysTick is clocked by the low frequency
2962:Generated_Source\PSoC4/CyLib.c ****     *                                      clock. (ILO 100 KHz for PSoC 5LP, and
2963:Generated_Source\PSoC4/CyLib.c ****     *                                      LFCLK for PSoC 4).
2964:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
2965:Generated_Source\PSoC4/CyLib.c ****     void CySysTickSetClockSource(uint32 clockSource)
2966:Generated_Source\PSoC4/CyLib.c ****     {
 5074              		.loc 1 2966 0
 5075              		.cfi_startproc
 5076              		@ args = 0, pretend = 0, frame = 8
 5077              		@ frame_needed = 1, uses_anonymous_args = 0
 5078 0000 80B5     		push	{r7, lr}
 5079              		.cfi_def_cfa_offset 8
 5080              		.cfi_offset 7, -8
 5081              		.cfi_offset 14, -4
 5082 0002 82B0     		sub	sp, sp, #8
 5083              		.cfi_def_cfa_offset 16
 5084 0004 00AF     		add	r7, sp, #0
 5085              		.cfi_def_cfa_register 7
 5086 0006 7860     		str	r0, [r7, #4]
2967:Generated_Source\PSoC4/CyLib.c ****         if (clockSource == CY_SYS_SYST_CSR_CLK_SRC_SYSCLK)
 5087              		.loc 1 2967 0
 5088 0008 7B68     		ldr	r3, [r7, #4]
 5089 000a 012B     		cmp	r3, #1
 5090 000c 06D1     		bne	.L327
ARM GAS  C:\Users\essele\AppData\Local\Temp\ccaJcTi8.s 			page 143


2968:Generated_Source\PSoC4/CyLib.c ****         {
2969:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_SYST_CSR_REG |= (uint32)(CY_SYS_SYST_CSR_CLK_SRC_SYSCLK << CY_SYS_SYST_CSR_CLK_S
 5091              		.loc 1 2969 0
 5092 000e 084B     		ldr	r3, .L330
 5093 0010 074A     		ldr	r2, .L330
 5094 0012 1268     		ldr	r2, [r2]
 5095 0014 0421     		movs	r1, #4
 5096 0016 0A43     		orrs	r2, r1
 5097 0018 1A60     		str	r2, [r3]
2970:Generated_Source\PSoC4/CyLib.c ****         }
2971:Generated_Source\PSoC4/CyLib.c ****         else
2972:Generated_Source\PSoC4/CyLib.c ****         {
2973:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_SYST_CSR_REG &= ((uint32) ~((uint32)(CY_SYS_SYST_CSR_CLK_SRC_SYSCLK << CY_SYS_SY
2974:Generated_Source\PSoC4/CyLib.c ****         }
2975:Generated_Source\PSoC4/CyLib.c ****     }
 5098              		.loc 1 2975 0
 5099 001a 05E0     		b	.L329
 5100              	.L327:
2973:Generated_Source\PSoC4/CyLib.c ****         }
 5101              		.loc 1 2973 0
 5102 001c 044B     		ldr	r3, .L330
 5103 001e 044A     		ldr	r2, .L330
 5104 0020 1268     		ldr	r2, [r2]
 5105 0022 0421     		movs	r1, #4
 5106 0024 8A43     		bics	r2, r1
 5107 0026 1A60     		str	r2, [r3]
 5108              	.L329:
 5109              		.loc 1 2975 0
 5110 0028 C046     		nop
 5111 002a BD46     		mov	sp, r7
 5112 002c 02B0     		add	sp, sp, #8
 5113              		@ sp needed
 5114 002e 80BD     		pop	{r7, pc}
 5115              	.L331:
 5116              		.align	2
 5117              	.L330:
 5118 0030 10E000E0 		.word	-536813552
 5119              		.cfi_endproc
 5120              	.LFE62:
 5121              		.size	CySysTickSetClockSource, .-CySysTickSetClockSource
 5122              		.section	.text.CySysTickGetClockSource,"ax",%progbits
 5123              		.align	2
 5124              		.global	CySysTickGetClockSource
 5125              		.code	16
 5126              		.thumb_func
 5127              		.type	CySysTickGetClockSource, %function
 5128              	CySysTickGetClockSource:
 5129              	.LFB63:
2976:Generated_Source\PSoC4/CyLib.c **** 
2977:Generated_Source\PSoC4/CyLib.c ****     
2978:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
2979:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysTickGetClockSource
2980:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
2981:Generated_Source\PSoC4/CyLib.c ****     *
2982:Generated_Source\PSoC4/CyLib.c ****     *  Returns the current clock source of the SysTick counter.
2983:Generated_Source\PSoC4/CyLib.c ****     *
2984:Generated_Source\PSoC4/CyLib.c ****     *  \return 
ARM GAS  C:\Users\essele\AppData\Local\Temp\ccaJcTi8.s 			page 144


2985:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_SYST_CSR_CLK_SRC_SYSCLK     SysTick is clocked by CPU clock.
2986:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_SYST_CSR_CLK_SRC_LFCLK      SysTick is clocked by the low frequency
2987:Generated_Source\PSoC4/CyLib.c ****     *                                      clock. (ILO 100 KHz for PSoC 5LP, and
2988:Generated_Source\PSoC4/CyLib.c ****     *                                      LFCLK for PSoC 4).
2989:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
2990:Generated_Source\PSoC4/CyLib.c ****     uint32 CySysTickGetClockSource(void)
2991:Generated_Source\PSoC4/CyLib.c ****     {
 5130              		.loc 1 2991 0
 5131              		.cfi_startproc
 5132              		@ args = 0, pretend = 0, frame = 0
 5133              		@ frame_needed = 1, uses_anonymous_args = 0
 5134 0000 80B5     		push	{r7, lr}
 5135              		.cfi_def_cfa_offset 8
 5136              		.cfi_offset 7, -8
 5137              		.cfi_offset 14, -4
 5138 0002 00AF     		add	r7, sp, #0
 5139              		.cfi_def_cfa_register 7
2992:Generated_Source\PSoC4/CyLib.c ****         return ((CY_SYS_SYST_CSR_REG >> CY_SYS_SYST_CSR_CLK_SOURCE_SHIFT) & CY_SYS_SYST_CSR_CLK_SRC
 5140              		.loc 1 2992 0
 5141 0004 034B     		ldr	r3, .L334
 5142 0006 1B68     		ldr	r3, [r3]
 5143 0008 9B08     		lsrs	r3, r3, #2
 5144 000a 0122     		movs	r2, #1
 5145 000c 1340     		ands	r3, r2
2993:Generated_Source\PSoC4/CyLib.c ****     }
 5146              		.loc 1 2993 0
 5147 000e 1800     		movs	r0, r3
 5148 0010 BD46     		mov	sp, r7
 5149              		@ sp needed
 5150 0012 80BD     		pop	{r7, pc}
 5151              	.L335:
 5152              		.align	2
 5153              	.L334:
 5154 0014 10E000E0 		.word	-536813552
 5155              		.cfi_endproc
 5156              	.LFE63:
 5157              		.size	CySysTickGetClockSource, .-CySysTickGetClockSource
 5158              		.section	.text.CySysTickGetCountFlag,"ax",%progbits
 5159              		.align	2
 5160              		.global	CySysTickGetCountFlag
 5161              		.code	16
 5162              		.thumb_func
 5163              		.type	CySysTickGetCountFlag, %function
 5164              	CySysTickGetCountFlag:
 5165              	.LFB64:
2994:Generated_Source\PSoC4/CyLib.c ****     
2995:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_SYSTICK_LFCLK_SOURCE) */
2996:Generated_Source\PSoC4/CyLib.c **** 
2997:Generated_Source\PSoC4/CyLib.c **** 
2998:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2999:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickGetCountFlag
3000:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
3001:Generated_Source\PSoC4/CyLib.c **** *
3002:Generated_Source\PSoC4/CyLib.c **** *  The count flag is set once SysTick counter reaches zero.
3003:Generated_Source\PSoC4/CyLib.c **** *  The flag cleared on read.
3004:Generated_Source\PSoC4/CyLib.c **** *
3005:Generated_Source\PSoC4/CyLib.c **** * \return
ARM GAS  C:\Users\essele\AppData\Local\Temp\ccaJcTi8.s 			page 145


3006:Generated_Source\PSoC4/CyLib.c ****     *  Returns non-zero value if flag is set, otherwise zero is returned.
3007:Generated_Source\PSoC4/CyLib.c **** *
3008:Generated_Source\PSoC4/CyLib.c **** *
3009:Generated_Source\PSoC4/CyLib.c **** * \sideeffect
3010:Generated_Source\PSoC4/CyLib.c **** *  Clears SysTick count flag if it was set.
3011:Generated_Source\PSoC4/CyLib.c **** *
3012:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
3013:Generated_Source\PSoC4/CyLib.c **** uint32 CySysTickGetCountFlag(void)
3014:Generated_Source\PSoC4/CyLib.c **** {
 5166              		.loc 1 3014 0
 5167              		.cfi_startproc
 5168              		@ args = 0, pretend = 0, frame = 0
 5169              		@ frame_needed = 1, uses_anonymous_args = 0
 5170 0000 80B5     		push	{r7, lr}
 5171              		.cfi_def_cfa_offset 8
 5172              		.cfi_offset 7, -8
 5173              		.cfi_offset 14, -4
 5174 0002 00AF     		add	r7, sp, #0
 5175              		.cfi_def_cfa_register 7
3015:Generated_Source\PSoC4/CyLib.c ****     return ((CY_SYS_SYST_CSR_REG >> CY_SYS_SYST_CSR_COUNTFLAG_SHIFT) & 0x01u);
 5176              		.loc 1 3015 0
 5177 0004 034B     		ldr	r3, .L338
 5178 0006 1B68     		ldr	r3, [r3]
 5179 0008 1B0C     		lsrs	r3, r3, #16
 5180 000a 0122     		movs	r2, #1
 5181 000c 1340     		ands	r3, r2
3016:Generated_Source\PSoC4/CyLib.c **** }
 5182              		.loc 1 3016 0
 5183 000e 1800     		movs	r0, r3
 5184 0010 BD46     		mov	sp, r7
 5185              		@ sp needed
 5186 0012 80BD     		pop	{r7, pc}
 5187              	.L339:
 5188              		.align	2
 5189              	.L338:
 5190 0014 10E000E0 		.word	-536813552
 5191              		.cfi_endproc
 5192              	.LFE64:
 5193              		.size	CySysTickGetCountFlag, .-CySysTickGetCountFlag
 5194              		.section	.text.CySysTickClear,"ax",%progbits
 5195              		.align	2
 5196              		.global	CySysTickClear
 5197              		.code	16
 5198              		.thumb_func
 5199              		.type	CySysTickClear, %function
 5200              	CySysTickClear:
 5201              	.LFB65:
3017:Generated_Source\PSoC4/CyLib.c **** 
3018:Generated_Source\PSoC4/CyLib.c **** 
3019:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
3020:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickClear
3021:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
3022:Generated_Source\PSoC4/CyLib.c **** *
3023:Generated_Source\PSoC4/CyLib.c **** *  Clears the SysTick counter for well-defined startup.
3024:Generated_Source\PSoC4/CyLib.c **** *
3025:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
3026:Generated_Source\PSoC4/CyLib.c **** void CySysTickClear(void)
ARM GAS  C:\Users\essele\AppData\Local\Temp\ccaJcTi8.s 			page 146


3027:Generated_Source\PSoC4/CyLib.c **** {
 5202              		.loc 1 3027 0
 5203              		.cfi_startproc
 5204              		@ args = 0, pretend = 0, frame = 0
 5205              		@ frame_needed = 1, uses_anonymous_args = 0
 5206 0000 80B5     		push	{r7, lr}
 5207              		.cfi_def_cfa_offset 8
 5208              		.cfi_offset 7, -8
 5209              		.cfi_offset 14, -4
 5210 0002 00AF     		add	r7, sp, #0
 5211              		.cfi_def_cfa_register 7
3028:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_SYST_CVR_REG = 0u;
 5212              		.loc 1 3028 0
 5213 0004 024B     		ldr	r3, .L341
 5214 0006 0022     		movs	r2, #0
 5215 0008 1A60     		str	r2, [r3]
3029:Generated_Source\PSoC4/CyLib.c **** }
 5216              		.loc 1 3029 0
 5217 000a C046     		nop
 5218 000c BD46     		mov	sp, r7
 5219              		@ sp needed
 5220 000e 80BD     		pop	{r7, pc}
 5221              	.L342:
 5222              		.align	2
 5223              	.L341:
 5224 0010 18E000E0 		.word	-536813544
 5225              		.cfi_endproc
 5226              	.LFE65:
 5227              		.size	CySysTickClear, .-CySysTickClear
 5228              		.section	.text.CySysTickSetCallback,"ax",%progbits
 5229              		.align	2
 5230              		.global	CySysTickSetCallback
 5231              		.code	16
 5232              		.thumb_func
 5233              		.type	CySysTickSetCallback, %function
 5234              	CySysTickSetCallback:
 5235              	.LFB66:
3030:Generated_Source\PSoC4/CyLib.c **** 
3031:Generated_Source\PSoC4/CyLib.c **** 
3032:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
3033:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickSetCallback
3034:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
3035:Generated_Source\PSoC4/CyLib.c **** *
3036:Generated_Source\PSoC4/CyLib.c **** *  This function allows up to five user-defined interrupt service routine
3037:Generated_Source\PSoC4/CyLib.c **** *  functions to be associated with the SysTick interrupt. These are specified
3038:Generated_Source\PSoC4/CyLib.c **** *  through the use of pointers to the function.
3039:Generated_Source\PSoC4/CyLib.c **** *
3040:Generated_Source\PSoC4/CyLib.c **** *  To set a custom callback function without the overhead of the system provided
3041:Generated_Source\PSoC4/CyLib.c **** *  one, use CyIntSetSysVector(CY_INT_SYSTICK_IRQN, cyisraddress <address>),
3042:Generated_Source\PSoC4/CyLib.c **** *  where <address> is address of the custom defined interrupt service routine.
3043:Generated_Source\PSoC4/CyLib.c **** *  Note: a custom callback function overrides the system defined callback
3044:Generated_Source\PSoC4/CyLib.c **** *  functions.
3045:Generated_Source\PSoC4/CyLib.c **** *
3046:Generated_Source\PSoC4/CyLib.c **** *  \param number: The number of the callback function addresses to be set. The valid
3047:Generated_Source\PSoC4/CyLib.c **** *          range is from 0 to 4.
3048:Generated_Source\PSoC4/CyLib.c **** *
3049:Generated_Source\PSoC4/CyLib.c **** *  void(*CallbackFunction(void): A pointer to the function that will be
ARM GAS  C:\Users\essele\AppData\Local\Temp\ccaJcTi8.s 			page 147


3050:Generated_Source\PSoC4/CyLib.c **** *                                associated with the SysTick ISR for the
3051:Generated_Source\PSoC4/CyLib.c **** *                                specified number.
3052:Generated_Source\PSoC4/CyLib.c **** *
3053:Generated_Source\PSoC4/CyLib.c **** * \return
3054:Generated_Source\PSoC4/CyLib.c **** *  Returns the address of the previous callback function.
3055:Generated_Source\PSoC4/CyLib.c **** *  The NULL is returned if the specified address in not set.
3056:Generated_Source\PSoC4/CyLib.c **** *
3057:Generated_Source\PSoC4/CyLib.c **** * \sideeffect
3058:Generated_Source\PSoC4/CyLib.c **** *  The registered callback functions will be executed in the interrupt.
3059:Generated_Source\PSoC4/CyLib.c **** *
3060:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
3061:Generated_Source\PSoC4/CyLib.c **** cySysTickCallback CySysTickSetCallback(uint32 number, cySysTickCallback function)
3062:Generated_Source\PSoC4/CyLib.c **** {
 5236              		.loc 1 3062 0
 5237              		.cfi_startproc
 5238              		@ args = 0, pretend = 0, frame = 16
 5239              		@ frame_needed = 1, uses_anonymous_args = 0
 5240 0000 80B5     		push	{r7, lr}
 5241              		.cfi_def_cfa_offset 8
 5242              		.cfi_offset 7, -8
 5243              		.cfi_offset 14, -4
 5244 0002 84B0     		sub	sp, sp, #16
 5245              		.cfi_def_cfa_offset 24
 5246 0004 00AF     		add	r7, sp, #0
 5247              		.cfi_def_cfa_register 7
 5248 0006 7860     		str	r0, [r7, #4]
 5249 0008 3960     		str	r1, [r7]
3063:Generated_Source\PSoC4/CyLib.c ****     cySysTickCallback retVal;
3064:Generated_Source\PSoC4/CyLib.c **** 
3065:Generated_Source\PSoC4/CyLib.c ****     retVal = CySysTickCallbacks[number];
 5250              		.loc 1 3065 0
 5251 000a 074B     		ldr	r3, .L345
 5252 000c 7A68     		ldr	r2, [r7, #4]
 5253 000e 9200     		lsls	r2, r2, #2
 5254 0010 D358     		ldr	r3, [r2, r3]
 5255 0012 FB60     		str	r3, [r7, #12]
3066:Generated_Source\PSoC4/CyLib.c ****     CySysTickCallbacks[number] = function;
 5256              		.loc 1 3066 0
 5257 0014 044B     		ldr	r3, .L345
 5258 0016 7A68     		ldr	r2, [r7, #4]
 5259 0018 9200     		lsls	r2, r2, #2
 5260 001a 3968     		ldr	r1, [r7]
 5261 001c D150     		str	r1, [r2, r3]
3067:Generated_Source\PSoC4/CyLib.c ****     return (retVal);
 5262              		.loc 1 3067 0
 5263 001e FB68     		ldr	r3, [r7, #12]
3068:Generated_Source\PSoC4/CyLib.c **** }
 5264              		.loc 1 3068 0
 5265 0020 1800     		movs	r0, r3
 5266 0022 BD46     		mov	sp, r7
 5267 0024 04B0     		add	sp, sp, #16
 5268              		@ sp needed
 5269 0026 80BD     		pop	{r7, pc}
 5270              	.L346:
 5271              		.align	2
 5272              	.L345:
 5273 0028 00000000 		.word	CySysTickCallbacks
ARM GAS  C:\Users\essele\AppData\Local\Temp\ccaJcTi8.s 			page 148


 5274              		.cfi_endproc
 5275              	.LFE66:
 5276              		.size	CySysTickSetCallback, .-CySysTickSetCallback
 5277              		.section	.text.CySysTickGetCallback,"ax",%progbits
 5278              		.align	2
 5279              		.global	CySysTickGetCallback
 5280              		.code	16
 5281              		.thumb_func
 5282              		.type	CySysTickGetCallback, %function
 5283              	CySysTickGetCallback:
 5284              	.LFB67:
3069:Generated_Source\PSoC4/CyLib.c **** 
3070:Generated_Source\PSoC4/CyLib.c **** 
3071:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
3072:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickGetCallback
3073:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
3074:Generated_Source\PSoC4/CyLib.c **** *
3075:Generated_Source\PSoC4/CyLib.c **** *  The function get the specified callback pointer.
3076:Generated_Source\PSoC4/CyLib.c **** *
3077:Generated_Source\PSoC4/CyLib.c **** *  \param number: The number of callback function address to get. The valid
3078:Generated_Source\PSoC4/CyLib.c **** *          range is from 0 to 4.
3079:Generated_Source\PSoC4/CyLib.c **** *
3080:Generated_Source\PSoC4/CyLib.c **** * \return
3081:Generated_Source\PSoC4/CyLib.c **** *  Returns the address of the specified callback function.
3082:Generated_Source\PSoC4/CyLib.c **** *  The NULL is returned if the specified address in not initialized.
3083:Generated_Source\PSoC4/CyLib.c **** *
3084:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
3085:Generated_Source\PSoC4/CyLib.c **** cySysTickCallback CySysTickGetCallback(uint32 number)
3086:Generated_Source\PSoC4/CyLib.c **** {
 5285              		.loc 1 3086 0
 5286              		.cfi_startproc
 5287              		@ args = 0, pretend = 0, frame = 8
 5288              		@ frame_needed = 1, uses_anonymous_args = 0
 5289 0000 80B5     		push	{r7, lr}
 5290              		.cfi_def_cfa_offset 8
 5291              		.cfi_offset 7, -8
 5292              		.cfi_offset 14, -4
 5293 0002 82B0     		sub	sp, sp, #8
 5294              		.cfi_def_cfa_offset 16
 5295 0004 00AF     		add	r7, sp, #0
 5296              		.cfi_def_cfa_register 7
 5297 0006 7860     		str	r0, [r7, #4]
3087:Generated_Source\PSoC4/CyLib.c ****     return ((cySysTickCallback) CySysTickCallbacks[number]);
 5298              		.loc 1 3087 0
 5299 0008 034B     		ldr	r3, .L349
 5300 000a 7A68     		ldr	r2, [r7, #4]
 5301 000c 9200     		lsls	r2, r2, #2
 5302 000e D358     		ldr	r3, [r2, r3]
3088:Generated_Source\PSoC4/CyLib.c **** }
 5303              		.loc 1 3088 0
 5304 0010 1800     		movs	r0, r3
 5305 0012 BD46     		mov	sp, r7
 5306 0014 02B0     		add	sp, sp, #8
 5307              		@ sp needed
 5308 0016 80BD     		pop	{r7, pc}
 5309              	.L350:
 5310              		.align	2
ARM GAS  C:\Users\essele\AppData\Local\Temp\ccaJcTi8.s 			page 149


 5311              	.L349:
 5312 0018 00000000 		.word	CySysTickCallbacks
 5313              		.cfi_endproc
 5314              	.LFE67:
 5315              		.size	CySysTickGetCallback, .-CySysTickGetCallback
 5316              		.section	.text.CySysTickServiceCallbacks,"ax",%progbits
 5317              		.align	2
 5318              		.code	16
 5319              		.thumb_func
 5320              		.type	CySysTickServiceCallbacks, %function
 5321              	CySysTickServiceCallbacks:
 5322              	.LFB68:
3089:Generated_Source\PSoC4/CyLib.c **** 
3090:Generated_Source\PSoC4/CyLib.c **** 
3091:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
3092:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickServiceCallbacks
3093:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
3094:Generated_Source\PSoC4/CyLib.c **** *
3095:Generated_Source\PSoC4/CyLib.c **** *  System Tick timer interrupt routine
3096:Generated_Source\PSoC4/CyLib.c **** *
3097:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
3098:Generated_Source\PSoC4/CyLib.c **** static void CySysTickServiceCallbacks(void)
3099:Generated_Source\PSoC4/CyLib.c **** {
 5323              		.loc 1 3099 0
 5324              		.cfi_startproc
 5325              		@ args = 0, pretend = 0, frame = 8
 5326              		@ frame_needed = 1, uses_anonymous_args = 0
 5327 0000 80B5     		push	{r7, lr}
 5328              		.cfi_def_cfa_offset 8
 5329              		.cfi_offset 7, -8
 5330              		.cfi_offset 14, -4
 5331 0002 82B0     		sub	sp, sp, #8
 5332              		.cfi_def_cfa_offset 16
 5333 0004 00AF     		add	r7, sp, #0
 5334              		.cfi_def_cfa_register 7
3100:Generated_Source\PSoC4/CyLib.c ****     uint32 i;
3101:Generated_Source\PSoC4/CyLib.c **** 
3102:Generated_Source\PSoC4/CyLib.c ****     /* Verify that tick timer flag was set */
3103:Generated_Source\PSoC4/CyLib.c ****     if (1u == CySysTickGetCountFlag())
 5335              		.loc 1 3103 0
 5336 0006 FFF7FEFF 		bl	CySysTickGetCountFlag
 5337 000a 0300     		movs	r3, r0
 5338 000c 012B     		cmp	r3, #1
 5339 000e 13D1     		bne	.L356
3104:Generated_Source\PSoC4/CyLib.c ****     {
3105:Generated_Source\PSoC4/CyLib.c ****         for (i=0u; i < CY_SYS_SYST_NUM_OF_CALLBACKS; i++)
 5340              		.loc 1 3105 0
 5341 0010 0023     		movs	r3, #0
 5342 0012 7B60     		str	r3, [r7, #4]
 5343 0014 0DE0     		b	.L353
 5344              	.L355:
3106:Generated_Source\PSoC4/CyLib.c ****         {
3107:Generated_Source\PSoC4/CyLib.c ****             if (CySysTickCallbacks[i] != (void *) 0)
 5345              		.loc 1 3107 0
 5346 0016 0A4B     		ldr	r3, .L357
 5347 0018 7A68     		ldr	r2, [r7, #4]
 5348 001a 9200     		lsls	r2, r2, #2
ARM GAS  C:\Users\essele\AppData\Local\Temp\ccaJcTi8.s 			page 150


 5349 001c D358     		ldr	r3, [r2, r3]
 5350 001e 002B     		cmp	r3, #0
 5351 0020 04D0     		beq	.L354
3108:Generated_Source\PSoC4/CyLib.c ****             {
3109:Generated_Source\PSoC4/CyLib.c ****                 (void)(CySysTickCallbacks[i])();
 5352              		.loc 1 3109 0
 5353 0022 074B     		ldr	r3, .L357
 5354 0024 7A68     		ldr	r2, [r7, #4]
 5355 0026 9200     		lsls	r2, r2, #2
 5356 0028 D358     		ldr	r3, [r2, r3]
 5357 002a 9847     		blx	r3
 5358              	.L354:
3105:Generated_Source\PSoC4/CyLib.c ****         {
 5359              		.loc 1 3105 0 discriminator 2
 5360 002c 7B68     		ldr	r3, [r7, #4]
 5361 002e 0133     		adds	r3, r3, #1
 5362 0030 7B60     		str	r3, [r7, #4]
 5363              	.L353:
3105:Generated_Source\PSoC4/CyLib.c ****         {
 5364              		.loc 1 3105 0 is_stmt 0 discriminator 1
 5365 0032 7B68     		ldr	r3, [r7, #4]
 5366 0034 042B     		cmp	r3, #4
 5367 0036 EED9     		bls	.L355
 5368              	.L356:
3110:Generated_Source\PSoC4/CyLib.c ****             }
3111:Generated_Source\PSoC4/CyLib.c ****         }
3112:Generated_Source\PSoC4/CyLib.c ****     }
3113:Generated_Source\PSoC4/CyLib.c **** }
 5369              		.loc 1 3113 0 is_stmt 1
 5370 0038 C046     		nop
 5371 003a BD46     		mov	sp, r7
 5372 003c 02B0     		add	sp, sp, #8
 5373              		@ sp needed
 5374 003e 80BD     		pop	{r7, pc}
 5375              	.L358:
 5376              		.align	2
 5377              	.L357:
 5378 0040 00000000 		.word	CySysTickCallbacks
 5379              		.cfi_endproc
 5380              	.LFE68:
 5381              		.size	CySysTickServiceCallbacks, .-CySysTickServiceCallbacks
 5382              		.section	.text.CyGetUniqueId,"ax",%progbits
 5383              		.align	2
 5384              		.global	CyGetUniqueId
 5385              		.code	16
 5386              		.thumb_func
 5387              		.type	CyGetUniqueId, %function
 5388              	CyGetUniqueId:
 5389              	.LFB69:
3114:Generated_Source\PSoC4/CyLib.c **** 
3115:Generated_Source\PSoC4/CyLib.c **** 
3116:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
3117:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyGetUniqueId
3118:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
3119:Generated_Source\PSoC4/CyLib.c **** *
3120:Generated_Source\PSoC4/CyLib.c **** *  Returns the 64-bit unique ID of the device. The uniqueness of the number is
3121:Generated_Source\PSoC4/CyLib.c **** *  guaranteed for 10 years due to the die lot number having a cycle life of 10
ARM GAS  C:\Users\essele\AppData\Local\Temp\ccaJcTi8.s 			page 151


3122:Generated_Source\PSoC4/CyLib.c **** *  years and even after 10 years, the probability of getting two identical
3123:Generated_Source\PSoC4/CyLib.c **** *  numbers is very small.
3124:Generated_Source\PSoC4/CyLib.c **** *
3125:Generated_Source\PSoC4/CyLib.c **** *  \param uniqueId: The pointer to a two element 32-bit unsigned integer array. Returns
3126:Generated_Source\PSoC4/CyLib.c **** *  the 64-bit unique ID of the device by loading them into the integer array
3127:Generated_Source\PSoC4/CyLib.c **** *  pointed to by uniqueId.
3128:Generated_Source\PSoC4/CyLib.c **** *
3129:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
3130:Generated_Source\PSoC4/CyLib.c **** void CyGetUniqueId(uint32* uniqueId)
3131:Generated_Source\PSoC4/CyLib.c **** {
 5390              		.loc 1 3131 0
 5391              		.cfi_startproc
 5392              		@ args = 0, pretend = 0, frame = 8
 5393              		@ frame_needed = 1, uses_anonymous_args = 0
 5394 0000 80B5     		push	{r7, lr}
 5395              		.cfi_def_cfa_offset 8
 5396              		.cfi_offset 7, -8
 5397              		.cfi_offset 14, -4
 5398 0002 82B0     		sub	sp, sp, #8
 5399              		.cfi_def_cfa_offset 16
 5400 0004 00AF     		add	r7, sp, #0
 5401              		.cfi_def_cfa_register 7
 5402 0006 7860     		str	r0, [r7, #4]
3132:Generated_Source\PSoC4/CyLib.c **** #if(CY_PSOC4)
3133:Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u]  =  (uint32)(* (reg8 *) CYREG_SFLASH_DIE_LOT0  );
 5403              		.loc 1 3133 0
 5404 0008 254B     		ldr	r3, .L360
 5405 000a 1B78     		ldrb	r3, [r3]
 5406 000c DBB2     		uxtb	r3, r3
 5407 000e 1A00     		movs	r2, r3
 5408 0010 7B68     		ldr	r3, [r7, #4]
 5409 0012 1A60     		str	r2, [r3]
3134:Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_LOT1  ) <<  8u);
 5410              		.loc 1 3134 0
 5411 0014 234B     		ldr	r3, .L360+4
 5412 0016 1B78     		ldrb	r3, [r3]
 5413 0018 DBB2     		uxtb	r3, r3
 5414 001a 1A02     		lsls	r2, r3, #8
 5415 001c 7B68     		ldr	r3, [r7, #4]
 5416 001e 1B68     		ldr	r3, [r3]
 5417 0020 1A43     		orrs	r2, r3
 5418 0022 7B68     		ldr	r3, [r7, #4]
 5419 0024 1A60     		str	r2, [r3]
3135:Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_LOT2  ) << 16u);
 5420              		.loc 1 3135 0
 5421 0026 204B     		ldr	r3, .L360+8
 5422 0028 1B78     		ldrb	r3, [r3]
 5423 002a DBB2     		uxtb	r3, r3
 5424 002c 1A04     		lsls	r2, r3, #16
 5425 002e 7B68     		ldr	r3, [r7, #4]
 5426 0030 1B68     		ldr	r3, [r3]
 5427 0032 1A43     		orrs	r2, r3
 5428 0034 7B68     		ldr	r3, [r7, #4]
 5429 0036 1A60     		str	r2, [r3]
3136:Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_WAFER ) << 24u);
 5430              		.loc 1 3136 0
 5431 0038 1C4B     		ldr	r3, .L360+12
ARM GAS  C:\Users\essele\AppData\Local\Temp\ccaJcTi8.s 			page 152


 5432 003a 1B78     		ldrb	r3, [r3]
 5433 003c DBB2     		uxtb	r3, r3
 5434 003e 1A06     		lsls	r2, r3, #24
 5435 0040 7B68     		ldr	r3, [r7, #4]
 5436 0042 1B68     		ldr	r3, [r3]
 5437 0044 1A43     		orrs	r2, r3
 5438 0046 7B68     		ldr	r3, [r7, #4]
 5439 0048 1A60     		str	r2, [r3]
3137:Generated_Source\PSoC4/CyLib.c **** 
3138:Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u]  =  (uint32)(* (reg8 *) CYREG_SFLASH_DIE_X     );
 5440              		.loc 1 3138 0
 5441 004a 7B68     		ldr	r3, [r7, #4]
 5442 004c 0433     		adds	r3, r3, #4
 5443 004e 184A     		ldr	r2, .L360+16
 5444 0050 1278     		ldrb	r2, [r2]
 5445 0052 D2B2     		uxtb	r2, r2
 5446 0054 1A60     		str	r2, [r3]
3139:Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_Y     ) <<  8u);
 5447              		.loc 1 3139 0
 5448 0056 174B     		ldr	r3, .L360+20
 5449 0058 1B78     		ldrb	r3, [r3]
 5450 005a DBB2     		uxtb	r3, r3
 5451 005c 1902     		lsls	r1, r3, #8
 5452 005e 7B68     		ldr	r3, [r7, #4]
 5453 0060 0433     		adds	r3, r3, #4
 5454 0062 7A68     		ldr	r2, [r7, #4]
 5455 0064 0432     		adds	r2, r2, #4
 5456 0066 1268     		ldr	r2, [r2]
 5457 0068 0A43     		orrs	r2, r1
 5458 006a 1A60     		str	r2, [r3]
3140:Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_SORT  ) << 16u);
 5459              		.loc 1 3140 0
 5460 006c 124B     		ldr	r3, .L360+24
 5461 006e 1B78     		ldrb	r3, [r3]
 5462 0070 DBB2     		uxtb	r3, r3
 5463 0072 1904     		lsls	r1, r3, #16
 5464 0074 7B68     		ldr	r3, [r7, #4]
 5465 0076 0433     		adds	r3, r3, #4
 5466 0078 7A68     		ldr	r2, [r7, #4]
 5467 007a 0432     		adds	r2, r2, #4
 5468 007c 1268     		ldr	r2, [r2]
 5469 007e 0A43     		orrs	r2, r1
 5470 0080 1A60     		str	r2, [r3]
3141:Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_MINOR ) << 24u);
 5471              		.loc 1 3141 0
 5472 0082 0E4B     		ldr	r3, .L360+28
 5473 0084 1B78     		ldrb	r3, [r3]
 5474 0086 DBB2     		uxtb	r3, r3
 5475 0088 1906     		lsls	r1, r3, #24
 5476 008a 7B68     		ldr	r3, [r7, #4]
 5477 008c 0433     		adds	r3, r3, #4
 5478 008e 7A68     		ldr	r2, [r7, #4]
 5479 0090 0432     		adds	r2, r2, #4
 5480 0092 1268     		ldr	r2, [r2]
 5481 0094 0A43     		orrs	r2, r1
 5482 0096 1A60     		str	r2, [r3]
3142:Generated_Source\PSoC4/CyLib.c **** #else
ARM GAS  C:\Users\essele\AppData\Local\Temp\ccaJcTi8.s 			page 153


3143:Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u]  =  (uint32) CY_GET_XTND_REG8((void CYFAR *) (CYREG_FLSHID_CUST_TABLES_LOT_LSB   )
3144:Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u] |= ((uint32) CY_GET_XTND_REG8((void CYFAR *) (CYREG_FLSHID_CUST_TABLES_LOT_MSB   )
3145:Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u] |= ((uint32) CY_GET_XTND_REG8((void CYFAR *) (CYREG_MLOGIC_REV_ID                )
3146:Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u] |= ((uint32) CY_GET_XTND_REG8((void CYFAR *) (CYREG_FLSHID_CUST_TABLES_WAFER_NUM )
3147:Generated_Source\PSoC4/CyLib.c **** 
3148:Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u]  =  (uint32) CY_GET_XTND_REG8((void CYFAR *) (CYREG_FLSHID_CUST_TABLES_X_LOC     )
3149:Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u] |= ((uint32) CY_GET_XTND_REG8((void CYFAR *) (CYREG_FLSHID_CUST_TABLES_Y_LOC     )
3150:Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u] |= ((uint32) CY_GET_XTND_REG8((void CYFAR *) (CYREG_FLSHID_CUST_TABLES_WRK_WK    )
3151:Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u] |= ((uint32) CY_GET_XTND_REG8((void CYFAR *) (CYREG_FLSHID_CUST_TABLES_FAB_YR    )
3152:Generated_Source\PSoC4/CyLib.c **** #endif  /* (CY_PSOC4) */
3153:Generated_Source\PSoC4/CyLib.c **** }
 5483              		.loc 1 3153 0
 5484 0098 C046     		nop
 5485 009a BD46     		mov	sp, r7
 5486 009c 02B0     		add	sp, sp, #8
 5487              		@ sp needed
 5488 009e 80BD     		pop	{r7, pc}
 5489              	.L361:
 5490              		.align	2
 5491              	.L360:
 5492 00a0 78F2FF0F 		.word	268431992
 5493 00a4 79F2FF0F 		.word	268431993
 5494 00a8 7AF2FF0F 		.word	268431994
 5495 00ac 7BF2FF0F 		.word	268431995
 5496 00b0 7CF2FF0F 		.word	268431996
 5497 00b4 7DF2FF0F 		.word	268431997
 5498 00b8 7EF2FF0F 		.word	268431998
 5499 00bc 7FF2FF0F 		.word	268431999
 5500              		.cfi_endproc
 5501              	.LFE69:
 5502              		.size	CyGetUniqueId, .-CyGetUniqueId
 5503              		.section	.text.CySysSetRamAccessArbPriority,"ax",%progbits
 5504              		.align	2
 5505              		.global	CySysSetRamAccessArbPriority
 5506              		.code	16
 5507              		.thumb_func
 5508              		.type	CySysSetRamAccessArbPriority, %function
 5509              	CySysSetRamAccessArbPriority:
 5510              	.LFB70:
3154:Generated_Source\PSoC4/CyLib.c **** 
3155:Generated_Source\PSoC4/CyLib.c **** 
3156:Generated_Source\PSoC4/CyLib.c **** #if (CY_IP_DMAC_PRESENT)
3157:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
3158:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysSetRamAccessArbPriority
3159:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
3160:Generated_Source\PSoC4/CyLib.c ****     *
3161:Generated_Source\PSoC4/CyLib.c ****     *  Sets RAM access priority between CPU and DMA. The RAM_CTL register is
3162:Generated_Source\PSoC4/CyLib.c ****     *  configured to set the priority. Please refer to the device TRM for more
3163:Generated_Source\PSoC4/CyLib.c ****     *  details.
3164:Generated_Source\PSoC4/CyLib.c ****     *
3165:Generated_Source\PSoC4/CyLib.c ****     *  This API is applicable for PSoC 4200M / PSoC 4200L / 4100S with 
3166:Generated_Source\PSoC4/CyLib.c ****     *  DMA devices only.
3167:Generated_Source\PSoC4/CyLib.c ****     *
3168:Generated_Source\PSoC4/CyLib.c ****     *  \param source:
3169:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_ARB_PRIORITY_CPU              CPU has priority (Default)
3170:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_ARB_PRIORITY_DMA              DMA has priority
3171:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_ARB_PRIORITY_ROUND            Round robin
ARM GAS  C:\Users\essele\AppData\Local\Temp\ccaJcTi8.s 			page 154


3172:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_ARB_PRIORITY_ROUND_STICKY     Round robin sticky
3173:Generated_Source\PSoC4/CyLib.c ****     *
3174:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
3175:Generated_Source\PSoC4/CyLib.c ****     void CySysSetRamAccessArbPriority(uint32 source)
3176:Generated_Source\PSoC4/CyLib.c ****     {
 5511              		.loc 1 3176 0
 5512              		.cfi_startproc
 5513              		@ args = 0, pretend = 0, frame = 16
 5514              		@ frame_needed = 1, uses_anonymous_args = 0
 5515 0000 80B5     		push	{r7, lr}
 5516              		.cfi_def_cfa_offset 8
 5517              		.cfi_offset 7, -8
 5518              		.cfi_offset 14, -4
 5519 0002 84B0     		sub	sp, sp, #16
 5520              		.cfi_def_cfa_offset 24
 5521 0004 00AF     		add	r7, sp, #0
 5522              		.cfi_def_cfa_register 7
 5523 0006 7860     		str	r0, [r7, #4]
3177:Generated_Source\PSoC4/CyLib.c ****         uint32 regTmp;
3178:Generated_Source\PSoC4/CyLib.c **** 
3179:Generated_Source\PSoC4/CyLib.c ****         regTmp  = CY_SYS_CPUSS_RAM_CTL_REG & ~CY_SYS_CPUSS_RAM_CTL_ARB_MASK;
 5524              		.loc 1 3179 0
 5525 0008 094B     		ldr	r3, .L363
 5526 000a 1B68     		ldr	r3, [r3]
 5527 000c 094A     		ldr	r2, .L363+4
 5528 000e 1340     		ands	r3, r2
 5529 0010 FB60     		str	r3, [r7, #12]
3180:Generated_Source\PSoC4/CyLib.c ****         regTmp |= ((uint32) (source << CY_SYS_CPUSS_RAM_CTL_ARB_SHIFT) & CY_SYS_CPUSS_RAM_CTL_ARB_M
 5530              		.loc 1 3180 0
 5531 0012 7B68     		ldr	r3, [r7, #4]
 5532 0014 5A04     		lsls	r2, r3, #17
 5533 0016 C023     		movs	r3, #192
 5534 0018 DB02     		lsls	r3, r3, #11
 5535 001a 1340     		ands	r3, r2
 5536 001c FA68     		ldr	r2, [r7, #12]
 5537 001e 1343     		orrs	r3, r2
 5538 0020 FB60     		str	r3, [r7, #12]
3181:Generated_Source\PSoC4/CyLib.c ****         CY_SYS_CPUSS_RAM_CTL_REG = regTmp;
 5539              		.loc 1 3181 0
 5540 0022 034B     		ldr	r3, .L363
 5541 0024 FA68     		ldr	r2, [r7, #12]
 5542 0026 1A60     		str	r2, [r3]
3182:Generated_Source\PSoC4/CyLib.c ****     }
 5543              		.loc 1 3182 0
 5544 0028 C046     		nop
 5545 002a BD46     		mov	sp, r7
 5546 002c 04B0     		add	sp, sp, #16
 5547              		@ sp needed
 5548 002e 80BD     		pop	{r7, pc}
 5549              	.L364:
 5550              		.align	2
 5551              	.L363:
 5552 0030 38001040 		.word	1074790456
 5553 0034 FFFFF9FF 		.word	-393217
 5554              		.cfi_endproc
 5555              	.LFE70:
 5556              		.size	CySysSetRamAccessArbPriority, .-CySysSetRamAccessArbPriority
ARM GAS  C:\Users\essele\AppData\Local\Temp\ccaJcTi8.s 			page 155


 5557              		.section	.text.CySysSetFlashAccessArbPriority,"ax",%progbits
 5558              		.align	2
 5559              		.global	CySysSetFlashAccessArbPriority
 5560              		.code	16
 5561              		.thumb_func
 5562              		.type	CySysSetFlashAccessArbPriority, %function
 5563              	CySysSetFlashAccessArbPriority:
 5564              	.LFB71:
3183:Generated_Source\PSoC4/CyLib.c **** 
3184:Generated_Source\PSoC4/CyLib.c **** 
3185:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
3186:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysSetFlashAccessArbPriority
3187:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
3188:Generated_Source\PSoC4/CyLib.c ****     *
3189:Generated_Source\PSoC4/CyLib.c ****     *  Sets flash access priority between CPU and DMA. The FLASH_CTL register is
3190:Generated_Source\PSoC4/CyLib.c ****     *  configured to set the priority. Please refer to the device TRM for more
3191:Generated_Source\PSoC4/CyLib.c ****     *  details.
3192:Generated_Source\PSoC4/CyLib.c ****     *
3193:Generated_Source\PSoC4/CyLib.c ****     *  This API is applicable for PSoC 4200M / PSoC 4200L / 4100S with 
3194:Generated_Source\PSoC4/CyLib.c ****     *  DMA devices only.
3195:Generated_Source\PSoC4/CyLib.c ****     *
3196:Generated_Source\PSoC4/CyLib.c ****     *  \param source:
3197:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_ARB_PRIORITY_CPU              CPU has priority (Default)
3198:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_ARB_PRIORITY_DMA              DMA has priority
3199:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_ARB_PRIORITY_ROUND            Round robin
3200:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_ARB_PRIORITY_ROUND_STICKY     Round robin sticky
3201:Generated_Source\PSoC4/CyLib.c ****     *
3202:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
3203:Generated_Source\PSoC4/CyLib.c ****     void CySysSetFlashAccessArbPriority(uint32 source)
3204:Generated_Source\PSoC4/CyLib.c ****     {
 5565              		.loc 1 3204 0
 5566              		.cfi_startproc
 5567              		@ args = 0, pretend = 0, frame = 16
 5568              		@ frame_needed = 1, uses_anonymous_args = 0
 5569 0000 80B5     		push	{r7, lr}
 5570              		.cfi_def_cfa_offset 8
 5571              		.cfi_offset 7, -8
 5572              		.cfi_offset 14, -4
 5573 0002 84B0     		sub	sp, sp, #16
 5574              		.cfi_def_cfa_offset 24
 5575 0004 00AF     		add	r7, sp, #0
 5576              		.cfi_def_cfa_register 7
 5577 0006 7860     		str	r0, [r7, #4]
3205:Generated_Source\PSoC4/CyLib.c ****         uint32 regTmp;
3206:Generated_Source\PSoC4/CyLib.c **** 
3207:Generated_Source\PSoC4/CyLib.c ****         regTmp  = CY_SYS_CPUSS_FLASH_CTL_REG & ~CY_SYS_CPUSS_FLASH_CTL_ARB_MASK;
 5578              		.loc 1 3207 0
 5579 0008 094B     		ldr	r3, .L366
 5580 000a 1B68     		ldr	r3, [r3]
 5581 000c 094A     		ldr	r2, .L366+4
 5582 000e 1340     		ands	r3, r2
 5583 0010 FB60     		str	r3, [r7, #12]
3208:Generated_Source\PSoC4/CyLib.c ****         regTmp |= ((uint32) (source << CY_SYS_CPUSS_FLASH_CTL_ARB_SHIFT) & CY_SYS_CPUSS_FLASH_CTL_A
 5584              		.loc 1 3208 0
 5585 0012 7B68     		ldr	r3, [r7, #4]
 5586 0014 5A04     		lsls	r2, r3, #17
 5587 0016 C023     		movs	r3, #192
ARM GAS  C:\Users\essele\AppData\Local\Temp\ccaJcTi8.s 			page 156


 5588 0018 DB02     		lsls	r3, r3, #11
 5589 001a 1340     		ands	r3, r2
 5590 001c FA68     		ldr	r2, [r7, #12]
 5591 001e 1343     		orrs	r3, r2
 5592 0020 FB60     		str	r3, [r7, #12]
3209:Generated_Source\PSoC4/CyLib.c ****         CY_SYS_CPUSS_FLASH_CTL_REG = regTmp;
 5593              		.loc 1 3209 0
 5594 0022 034B     		ldr	r3, .L366
 5595 0024 FA68     		ldr	r2, [r7, #12]
 5596 0026 1A60     		str	r2, [r3]
3210:Generated_Source\PSoC4/CyLib.c ****     }
 5597              		.loc 1 3210 0
 5598 0028 C046     		nop
 5599 002a BD46     		mov	sp, r7
 5600 002c 04B0     		add	sp, sp, #16
 5601              		@ sp needed
 5602 002e 80BD     		pop	{r7, pc}
 5603              	.L367:
 5604              		.align	2
 5605              	.L366:
 5606 0030 30001040 		.word	1074790448
 5607 0034 FFFFF9FF 		.word	-393217
 5608              		.cfi_endproc
 5609              	.LFE71:
 5610              		.size	CySysSetFlashAccessArbPriority, .-CySysSetFlashAccessArbPriority
 5611              		.section	.text.CySysSetDmacAccessArbPriority,"ax",%progbits
 5612              		.align	2
 5613              		.global	CySysSetDmacAccessArbPriority
 5614              		.code	16
 5615              		.thumb_func
 5616              		.type	CySysSetDmacAccessArbPriority, %function
 5617              	CySysSetDmacAccessArbPriority:
 5618              	.LFB72:
3211:Generated_Source\PSoC4/CyLib.c **** 
3212:Generated_Source\PSoC4/CyLib.c **** 
3213:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
3214:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysSetDmacAccessArbPriority
3215:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
3216:Generated_Source\PSoC4/CyLib.c ****     *
3217:Generated_Source\PSoC4/CyLib.c ****     *  Sets DMAC slave interface access priority between CPU and DMA. The DMAC_CTL
3218:Generated_Source\PSoC4/CyLib.c ****     *  register is configured to set the priority. Please refer to the device TRM
3219:Generated_Source\PSoC4/CyLib.c ****     *  for more details.
3220:Generated_Source\PSoC4/CyLib.c ****     *
3221:Generated_Source\PSoC4/CyLib.c ****     *  This API is applicable for PSoC 4200M / PSoC 4200L / 4100S with 
3222:Generated_Source\PSoC4/CyLib.c ****     *  DMA devices only.
3223:Generated_Source\PSoC4/CyLib.c ****     *
3224:Generated_Source\PSoC4/CyLib.c ****     *  \param source:
3225:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_ARB_PRIORITY_CPU              CPU has priority (Default)
3226:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_ARB_PRIORITY_DMA              DMA has priority
3227:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_ARB_PRIORITY_ROUND            Round robin
3228:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_ARB_PRIORITY_ROUND_STICKY     Round robin sticky
3229:Generated_Source\PSoC4/CyLib.c ****     *
3230:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
3231:Generated_Source\PSoC4/CyLib.c ****     void CySysSetDmacAccessArbPriority(uint32 source)
3232:Generated_Source\PSoC4/CyLib.c ****     {
 5619              		.loc 1 3232 0
 5620              		.cfi_startproc
ARM GAS  C:\Users\essele\AppData\Local\Temp\ccaJcTi8.s 			page 157


 5621              		@ args = 0, pretend = 0, frame = 16
 5622              		@ frame_needed = 1, uses_anonymous_args = 0
 5623 0000 80B5     		push	{r7, lr}
 5624              		.cfi_def_cfa_offset 8
 5625              		.cfi_offset 7, -8
 5626              		.cfi_offset 14, -4
 5627 0002 84B0     		sub	sp, sp, #16
 5628              		.cfi_def_cfa_offset 24
 5629 0004 00AF     		add	r7, sp, #0
 5630              		.cfi_def_cfa_register 7
 5631 0006 7860     		str	r0, [r7, #4]
3233:Generated_Source\PSoC4/CyLib.c ****         uint32 regTmp;
3234:Generated_Source\PSoC4/CyLib.c **** 
3235:Generated_Source\PSoC4/CyLib.c ****         regTmp  = CY_SYS_CPUSS_DMAC_CTL_REG & ~CY_SYS_CPUSS_DMAC_CTL_ARB_MASK;
 5632              		.loc 1 3235 0
 5633 0008 094B     		ldr	r3, .L369
 5634 000a 1B68     		ldr	r3, [r3]
 5635 000c 094A     		ldr	r2, .L369+4
 5636 000e 1340     		ands	r3, r2
 5637 0010 FB60     		str	r3, [r7, #12]
3236:Generated_Source\PSoC4/CyLib.c ****         regTmp |= ((uint32) (source << CY_SYS_CPUSS_DMAC_CTL_ARB_SHIFT) & CY_SYS_CPUSS_DMAC_CTL_ARB
 5638              		.loc 1 3236 0
 5639 0012 7B68     		ldr	r3, [r7, #4]
 5640 0014 5A04     		lsls	r2, r3, #17
 5641 0016 C023     		movs	r3, #192
 5642 0018 DB02     		lsls	r3, r3, #11
 5643 001a 1340     		ands	r3, r2
 5644 001c FA68     		ldr	r2, [r7, #12]
 5645 001e 1343     		orrs	r3, r2
 5646 0020 FB60     		str	r3, [r7, #12]
3237:Generated_Source\PSoC4/CyLib.c ****         CY_SYS_CPUSS_DMAC_CTL_REG = regTmp;
 5647              		.loc 1 3237 0
 5648 0022 034B     		ldr	r3, .L369
 5649 0024 FA68     		ldr	r2, [r7, #12]
 5650 0026 1A60     		str	r2, [r3]
3238:Generated_Source\PSoC4/CyLib.c ****     }
 5651              		.loc 1 3238 0
 5652 0028 C046     		nop
 5653 002a BD46     		mov	sp, r7
 5654 002c 04B0     		add	sp, sp, #16
 5655              		@ sp needed
 5656 002e 80BD     		pop	{r7, pc}
 5657              	.L370:
 5658              		.align	2
 5659              	.L369:
 5660 0030 3C001040 		.word	1074790460
 5661 0034 FFFFF9FF 		.word	-393217
 5662              		.cfi_endproc
 5663              	.LFE72:
 5664              		.size	CySysSetDmacAccessArbPriority, .-CySysSetDmacAccessArbPriority
 5665              		.section	.text.CySysSetPeripheralAccessArbPriority,"ax",%progbits
 5666              		.align	2
 5667              		.global	CySysSetPeripheralAccessArbPriority
 5668              		.code	16
 5669              		.thumb_func
 5670              		.type	CySysSetPeripheralAccessArbPriority, %function
 5671              	CySysSetPeripheralAccessArbPriority:
ARM GAS  C:\Users\essele\AppData\Local\Temp\ccaJcTi8.s 			page 158


 5672              	.LFB73:
3239:Generated_Source\PSoC4/CyLib.c **** 
3240:Generated_Source\PSoC4/CyLib.c **** 
3241:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
3242:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysSetPeripheralAccessArbPriority
3243:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
3244:Generated_Source\PSoC4/CyLib.c ****     *
3245:Generated_Source\PSoC4/CyLib.c ****     *  Sets slave peripheral interface access priority between CPU and DMA.
3246:Generated_Source\PSoC4/CyLib.c ****     *  The SL_CTL register is configured to set the priority. Please refer to the
3247:Generated_Source\PSoC4/CyLib.c ****     *  device TRM for more details.
3248:Generated_Source\PSoC4/CyLib.c ****     *
3249:Generated_Source\PSoC4/CyLib.c ****     *  This API is applicable for PSoC 4200M / PSoC 4200L / 4100S with 
3250:Generated_Source\PSoC4/CyLib.c ****     *  DMA devices only.
3251:Generated_Source\PSoC4/CyLib.c ****     *
3252:Generated_Source\PSoC4/CyLib.c ****     *  \param  interfaceNumber: the slave interface number. Please refer to the
3253:Generated_Source\PSoC4/CyLib.c ****     *  device TRM for more details.
3254:Generated_Source\PSoC4/CyLib.c ****     *  \param source:
3255:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_ARB_PRIORITY_CPU              CPU has priority (Default)
3256:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_ARB_PRIORITY_DMA              DMA has priority
3257:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_ARB_PRIORITY_ROUND            Round robin
3258:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_ARB_PRIORITY_ROUND_STICKY     Round robin sticky
3259:Generated_Source\PSoC4/CyLib.c ****     *
3260:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
3261:Generated_Source\PSoC4/CyLib.c ****     void CySysSetPeripheralAccessArbPriority(uint32 interfaceNumber, uint32 source)
3262:Generated_Source\PSoC4/CyLib.c ****     {
 5673              		.loc 1 3262 0
 5674              		.cfi_startproc
 5675              		@ args = 0, pretend = 0, frame = 16
 5676              		@ frame_needed = 1, uses_anonymous_args = 0
 5677 0000 80B5     		push	{r7, lr}
 5678              		.cfi_def_cfa_offset 8
 5679              		.cfi_offset 7, -8
 5680              		.cfi_offset 14, -4
 5681 0002 84B0     		sub	sp, sp, #16
 5682              		.cfi_def_cfa_offset 24
 5683 0004 00AF     		add	r7, sp, #0
 5684              		.cfi_def_cfa_register 7
 5685 0006 7860     		str	r0, [r7, #4]
 5686 0008 3960     		str	r1, [r7]
3263:Generated_Source\PSoC4/CyLib.c ****         uint32 regTmp;
3264:Generated_Source\PSoC4/CyLib.c **** 
3265:Generated_Source\PSoC4/CyLib.c ****         if (interfaceNumber == 0u)
 5687              		.loc 1 3265 0
 5688 000a 7B68     		ldr	r3, [r7, #4]
 5689 000c 002B     		cmp	r3, #0
 5690 000e 10D1     		bne	.L372
3266:Generated_Source\PSoC4/CyLib.c ****         {
3267:Generated_Source\PSoC4/CyLib.c ****             regTmp  = CY_SYS_CPUSS_SL_CTL0_REG & ~CY_SYS_CPUSS_SL_CTL_ARB_MASK;
 5691              		.loc 1 3267 0
 5692 0010 1F4B     		ldr	r3, .L377
 5693 0012 1B68     		ldr	r3, [r3]
 5694 0014 1F4A     		ldr	r2, .L377+4
 5695 0016 1340     		ands	r3, r2
 5696 0018 FB60     		str	r3, [r7, #12]
3268:Generated_Source\PSoC4/CyLib.c ****             regTmp |= ((uint32) (source << CY_SYS_CPUSS_SL_CTL_ARB_SHIFT) & CY_SYS_CPUSS_SL_CTL_ARB
 5697              		.loc 1 3268 0
 5698 001a 3B68     		ldr	r3, [r7]
ARM GAS  C:\Users\essele\AppData\Local\Temp\ccaJcTi8.s 			page 159


 5699 001c 5A04     		lsls	r2, r3, #17
 5700 001e C023     		movs	r3, #192
 5701 0020 DB02     		lsls	r3, r3, #11
 5702 0022 1340     		ands	r3, r2
 5703 0024 FA68     		ldr	r2, [r7, #12]
 5704 0026 1343     		orrs	r3, r2
 5705 0028 FB60     		str	r3, [r7, #12]
3269:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CPUSS_SL_CTL0_REG = regTmp;
 5706              		.loc 1 3269 0
 5707 002a 194B     		ldr	r3, .L377
 5708 002c FA68     		ldr	r2, [r7, #12]
 5709 002e 1A60     		str	r2, [r3]
3270:Generated_Source\PSoC4/CyLib.c ****         } else
3271:Generated_Source\PSoC4/CyLib.c ****     #if (CY_IP_SL_NR >= 2)
3272:Generated_Source\PSoC4/CyLib.c ****         if (interfaceNumber == 1u)
3273:Generated_Source\PSoC4/CyLib.c ****         {
3274:Generated_Source\PSoC4/CyLib.c ****             regTmp  = CY_SYS_CPUSS_SL_CTL1_REG & ~CY_SYS_CPUSS_SL_CTL_ARB_MASK;
3275:Generated_Source\PSoC4/CyLib.c ****             regTmp |= ((uint32) (source << CY_SYS_CPUSS_SL_CTL_ARB_SHIFT) & CY_SYS_CPUSS_SL_CTL_ARB
3276:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CPUSS_SL_CTL1_REG = regTmp;
3277:Generated_Source\PSoC4/CyLib.c ****         } else
3278:Generated_Source\PSoC4/CyLib.c ****     #endif /* (CY_IP_SL_NR >= 1) */
3279:Generated_Source\PSoC4/CyLib.c ****     #if (CY_IP_SL_NR >= 3)
3280:Generated_Source\PSoC4/CyLib.c ****         if (interfaceNumber == 2u)
3281:Generated_Source\PSoC4/CyLib.c ****         {
3282:Generated_Source\PSoC4/CyLib.c ****             regTmp  = CY_SYS_CPUSS_SL_CTL2_REG & ~CY_SYS_CPUSS_SL_CTL_ARB_MASK;
3283:Generated_Source\PSoC4/CyLib.c ****             regTmp |= ((uint32) (source << CY_SYS_CPUSS_SL_CTL_ARB_SHIFT) & CY_SYS_CPUSS_SL_CTL_ARB
3284:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CPUSS_SL_CTL2_REG = regTmp;
3285:Generated_Source\PSoC4/CyLib.c ****         } else
3286:Generated_Source\PSoC4/CyLib.c ****     #endif /* (CY_IP_SL_NR >= 1) */
3287:Generated_Source\PSoC4/CyLib.c ****         {
3288:Generated_Source\PSoC4/CyLib.c ****             /* Halt CPU in debug mode if interface is invalid */
3289:Generated_Source\PSoC4/CyLib.c ****             CYASSERT(0u != 0u);
3290:Generated_Source\PSoC4/CyLib.c ****         }
3291:Generated_Source\PSoC4/CyLib.c ****     }
 5710              		.loc 1 3291 0
 5711 0030 2AE0     		b	.L376
 5712              	.L372:
3272:Generated_Source\PSoC4/CyLib.c ****         {
 5713              		.loc 1 3272 0
 5714 0032 7B68     		ldr	r3, [r7, #4]
 5715 0034 012B     		cmp	r3, #1
 5716 0036 10D1     		bne	.L374
3274:Generated_Source\PSoC4/CyLib.c ****             regTmp |= ((uint32) (source << CY_SYS_CPUSS_SL_CTL_ARB_SHIFT) & CY_SYS_CPUSS_SL_CTL_ARB
 5717              		.loc 1 3274 0
 5718 0038 174B     		ldr	r3, .L377+8
 5719 003a 1B68     		ldr	r3, [r3]
 5720 003c 154A     		ldr	r2, .L377+4
 5721 003e 1340     		ands	r3, r2
 5722 0040 FB60     		str	r3, [r7, #12]
3275:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CPUSS_SL_CTL1_REG = regTmp;
 5723              		.loc 1 3275 0
 5724 0042 3B68     		ldr	r3, [r7]
 5725 0044 5A04     		lsls	r2, r3, #17
 5726 0046 C023     		movs	r3, #192
 5727 0048 DB02     		lsls	r3, r3, #11
 5728 004a 1340     		ands	r3, r2
 5729 004c FA68     		ldr	r2, [r7, #12]
ARM GAS  C:\Users\essele\AppData\Local\Temp\ccaJcTi8.s 			page 160


 5730 004e 1343     		orrs	r3, r2
 5731 0050 FB60     		str	r3, [r7, #12]
3276:Generated_Source\PSoC4/CyLib.c ****         } else
 5732              		.loc 1 3276 0
 5733 0052 114B     		ldr	r3, .L377+8
 5734 0054 FA68     		ldr	r2, [r7, #12]
 5735 0056 1A60     		str	r2, [r3]
 5736              		.loc 1 3291 0
 5737 0058 16E0     		b	.L376
 5738              	.L374:
3280:Generated_Source\PSoC4/CyLib.c ****         {
 5739              		.loc 1 3280 0
 5740 005a 7B68     		ldr	r3, [r7, #4]
 5741 005c 022B     		cmp	r3, #2
 5742 005e 10D1     		bne	.L375
3282:Generated_Source\PSoC4/CyLib.c ****             regTmp |= ((uint32) (source << CY_SYS_CPUSS_SL_CTL_ARB_SHIFT) & CY_SYS_CPUSS_SL_CTL_ARB
 5743              		.loc 1 3282 0
 5744 0060 0E4B     		ldr	r3, .L377+12
 5745 0062 1B68     		ldr	r3, [r3]
 5746 0064 0B4A     		ldr	r2, .L377+4
 5747 0066 1340     		ands	r3, r2
 5748 0068 FB60     		str	r3, [r7, #12]
3283:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CPUSS_SL_CTL2_REG = regTmp;
 5749              		.loc 1 3283 0
 5750 006a 3B68     		ldr	r3, [r7]
 5751 006c 5A04     		lsls	r2, r3, #17
 5752 006e C023     		movs	r3, #192
 5753 0070 DB02     		lsls	r3, r3, #11
 5754 0072 1340     		ands	r3, r2
 5755 0074 FA68     		ldr	r2, [r7, #12]
 5756 0076 1343     		orrs	r3, r2
 5757 0078 FB60     		str	r3, [r7, #12]
3284:Generated_Source\PSoC4/CyLib.c ****         } else
 5758              		.loc 1 3284 0
 5759 007a 084B     		ldr	r3, .L377+12
 5760 007c FA68     		ldr	r2, [r7, #12]
 5761 007e 1A60     		str	r2, [r3]
 5762              		.loc 1 3291 0
 5763 0080 02E0     		b	.L376
 5764              	.L375:
3289:Generated_Source\PSoC4/CyLib.c ****         }
 5765              		.loc 1 3289 0 discriminator 1
 5766 0082 0020     		movs	r0, #0
 5767 0084 FFF7FEFF 		bl	CyHalt
 5768              	.L376:
 5769              		.loc 1 3291 0
 5770 0088 C046     		nop
 5771 008a BD46     		mov	sp, r7
 5772 008c 04B0     		add	sp, sp, #16
 5773              		@ sp needed
 5774 008e 80BD     		pop	{r7, pc}
 5775              	.L378:
 5776              		.align	2
 5777              	.L377:
 5778 0090 00011040 		.word	1074790656
 5779 0094 FFFFF9FF 		.word	-393217
 5780 0098 04011040 		.word	1074790660
ARM GAS  C:\Users\essele\AppData\Local\Temp\ccaJcTi8.s 			page 161


 5781 009c 08011040 		.word	1074790664
 5782              		.cfi_endproc
 5783              	.LFE73:
 5784              		.size	CySysSetPeripheralAccessArbPriority, .-CySysSetPeripheralAccessArbPriority
 5785              		.text
 5786              	.Letext0:
 5787              		.file 2 "Generated_Source\\PSoC4\\cytypes.h"
 5788              		.file 3 "Generated_Source\\PSoC4\\CyLib.h"
 5789              		.section	.debug_info,"",%progbits
 5790              	.Ldebug_info0:
 5791 0000 33120000 		.4byte	0x1233
 5792 0004 0400     		.2byte	0x4
 5793 0006 00000000 		.4byte	.Ldebug_abbrev0
 5794 000a 04       		.byte	0x4
 5795 000b 01       		.uleb128 0x1
 5796 000c 55010000 		.4byte	.LASF173
 5797 0010 0C       		.byte	0xc
 5798 0011 1A080000 		.4byte	.LASF174
 5799 0015 0B030000 		.4byte	.LASF175
 5800 0019 00000000 		.4byte	.Ldebug_ranges0+0
 5801 001d 00000000 		.4byte	0
 5802 0021 00000000 		.4byte	.Ldebug_line0
 5803 0025 02       		.uleb128 0x2
 5804 0026 01       		.byte	0x1
 5805 0027 06       		.byte	0x6
 5806 0028 6E0A0000 		.4byte	.LASF0
 5807 002c 02       		.uleb128 0x2
 5808 002d 01       		.byte	0x1
 5809 002e 08       		.byte	0x8
 5810 002f 3D090000 		.4byte	.LASF1
 5811 0033 02       		.uleb128 0x2
 5812 0034 02       		.byte	0x2
 5813 0035 05       		.byte	0x5
 5814 0036 4C070000 		.4byte	.LASF2
 5815 003a 02       		.uleb128 0x2
 5816 003b 02       		.byte	0x2
 5817 003c 07       		.byte	0x7
 5818 003d 7A0A0000 		.4byte	.LASF3
 5819 0041 02       		.uleb128 0x2
 5820 0042 04       		.byte	0x4
 5821 0043 05       		.byte	0x5
 5822 0044 5E070000 		.4byte	.LASF4
 5823 0048 02       		.uleb128 0x2
 5824 0049 04       		.byte	0x4
 5825 004a 07       		.byte	0x7
 5826 004b BB080000 		.4byte	.LASF5
 5827 004f 02       		.uleb128 0x2
 5828 0050 08       		.byte	0x8
 5829 0051 05       		.byte	0x5
 5830 0052 43050000 		.4byte	.LASF6
 5831 0056 02       		.uleb128 0x2
 5832 0057 08       		.byte	0x8
 5833 0058 07       		.byte	0x7
 5834 0059 E6020000 		.4byte	.LASF7
 5835 005d 03       		.uleb128 0x3
 5836 005e 04       		.byte	0x4
 5837 005f 05       		.byte	0x5
ARM GAS  C:\Users\essele\AppData\Local\Temp\ccaJcTi8.s 			page 162


 5838 0060 696E7400 		.ascii	"int\000"
 5839 0064 02       		.uleb128 0x2
 5840 0065 04       		.byte	0x4
 5841 0066 07       		.byte	0x7
 5842 0067 D1000000 		.4byte	.LASF8
 5843 006b 04       		.uleb128 0x4
 5844 006c 950A0000 		.4byte	.LASF9
 5845 0070 02       		.byte	0x2
 5846 0071 E401     		.2byte	0x1e4
 5847 0073 2C000000 		.4byte	0x2c
 5848 0077 04       		.uleb128 0x4
 5849 0078 81040000 		.4byte	.LASF10
 5850 007c 02       		.byte	0x2
 5851 007d E501     		.2byte	0x1e5
 5852 007f 3A000000 		.4byte	0x3a
 5853 0083 04       		.uleb128 0x4
 5854 0084 46060000 		.4byte	.LASF11
 5855 0088 02       		.byte	0x2
 5856 0089 E601     		.2byte	0x1e6
 5857 008b 48000000 		.4byte	0x48
 5858 008f 04       		.uleb128 0x4
 5859 0090 AB020000 		.4byte	.LASF12
 5860 0094 02       		.byte	0x2
 5861 0095 E901     		.2byte	0x1e9
 5862 0097 41000000 		.4byte	0x41
 5863 009b 02       		.uleb128 0x2
 5864 009c 04       		.byte	0x4
 5865 009d 04       		.byte	0x4
 5866 009e 9F020000 		.4byte	.LASF13
 5867 00a2 02       		.uleb128 0x2
 5868 00a3 08       		.byte	0x8
 5869 00a4 04       		.byte	0x4
 5870 00a5 9B0A0000 		.4byte	.LASF14
 5871 00a9 02       		.uleb128 0x2
 5872 00aa 01       		.byte	0x1
 5873 00ab 08       		.byte	0x8
 5874 00ac 3D040000 		.4byte	.LASF15
 5875 00b0 04       		.uleb128 0x4
 5876 00b1 19090000 		.4byte	.LASF16
 5877 00b5 02       		.byte	0x2
 5878 00b6 8602     		.2byte	0x286
 5879 00b8 48000000 		.4byte	0x48
 5880 00bc 04       		.uleb128 0x4
 5881 00bd 50010000 		.4byte	.LASF17
 5882 00c1 02       		.byte	0x2
 5883 00c2 8E02     		.2byte	0x28e
 5884 00c4 C8000000 		.4byte	0xc8
 5885 00c8 05       		.uleb128 0x5
 5886 00c9 6B000000 		.4byte	0x6b
 5887 00cd 04       		.uleb128 0x4
 5888 00ce FE060000 		.4byte	.LASF18
 5889 00d2 02       		.byte	0x2
 5890 00d3 9002     		.2byte	0x290
 5891 00d5 D9000000 		.4byte	0xd9
 5892 00d9 05       		.uleb128 0x5
 5893 00da 83000000 		.4byte	0x83
 5894 00de 04       		.uleb128 0x4
ARM GAS  C:\Users\essele\AppData\Local\Temp\ccaJcTi8.s 			page 163


 5895 00df 21060000 		.4byte	.LASF19
 5896 00e3 02       		.byte	0x2
 5897 00e4 A002     		.2byte	0x2a0
 5898 00e6 EA000000 		.4byte	0xea
 5899 00ea 06       		.uleb128 0x6
 5900 00eb 04       		.byte	0x4
 5901 00ec F0000000 		.4byte	0xf0
 5902 00f0 07       		.uleb128 0x7
 5903 00f1 02       		.uleb128 0x2
 5904 00f2 08       		.byte	0x8
 5905 00f3 04       		.byte	0x4
 5906 00f4 E4060000 		.4byte	.LASF20
 5907 00f8 02       		.uleb128 0x2
 5908 00f9 04       		.byte	0x4
 5909 00fa 07       		.byte	0x7
 5910 00fb 80080000 		.4byte	.LASF21
 5911 00ff 08       		.uleb128 0x8
 5912 0100 19040000 		.4byte	.LASF22
 5913 0104 03       		.byte	0x3
 5914 0105 F5       		.byte	0xf5
 5915 0106 EA000000 		.4byte	0xea
 5916 010a 09       		.uleb128 0x9
 5917 010b 0C       		.byte	0xc
 5918 010c 03       		.byte	0x3
 5919 010d AA01     		.2byte	0x1aa
 5920 010f 3B010000 		.4byte	0x13b
 5921 0113 0A       		.uleb128 0xa
 5922 0114 17070000 		.4byte	.LASF23
 5923 0118 03       		.byte	0x3
 5924 0119 AC01     		.2byte	0x1ac
 5925 011b 83000000 		.4byte	0x83
 5926 011f 00       		.byte	0
 5927 0120 0A       		.uleb128 0xa
 5928 0121 BB040000 		.4byte	.LASF24
 5929 0125 03       		.byte	0x3
 5930 0126 AD01     		.2byte	0x1ad
 5931 0128 83000000 		.4byte	0x83
 5932 012c 04       		.byte	0x4
 5933 012d 0A       		.uleb128 0xa
 5934 012e 80090000 		.4byte	.LASF25
 5935 0132 03       		.byte	0x3
 5936 0133 AE01     		.2byte	0x1ae
 5937 0135 83000000 		.4byte	0x83
 5938 0139 08       		.byte	0x8
 5939 013a 00       		.byte	0
 5940 013b 04       		.uleb128 0x4
 5941 013c A0040000 		.4byte	.LASF26
 5942 0140 03       		.byte	0x3
 5943 0141 AF01     		.2byte	0x1af
 5944 0143 0A010000 		.4byte	0x10a
 5945 0147 09       		.uleb128 0x9
 5946 0148 18       		.byte	0x18
 5947 0149 03       		.byte	0x3
 5948 014a B201     		.2byte	0x1b2
 5949 014c 5E010000 		.4byte	0x15e
 5950 0150 0B       		.uleb128 0xb
 5951 0151 706C6C00 		.ascii	"pll\000"
ARM GAS  C:\Users\essele\AppData\Local\Temp\ccaJcTi8.s 			page 164


 5952 0155 03       		.byte	0x3
 5953 0156 B401     		.2byte	0x1b4
 5954 0158 5E010000 		.4byte	0x15e
 5955 015c 00       		.byte	0
 5956 015d 00       		.byte	0
 5957 015e 0C       		.uleb128 0xc
 5958 015f 3B010000 		.4byte	0x13b
 5959 0163 6E010000 		.4byte	0x16e
 5960 0167 0D       		.uleb128 0xd
 5961 0168 F8000000 		.4byte	0xf8
 5962 016c 01       		.byte	0x1
 5963 016d 00       		.byte	0
 5964 016e 04       		.uleb128 0x4
 5965 016f 79020000 		.4byte	.LASF27
 5966 0173 03       		.byte	0x3
 5967 0174 B501     		.2byte	0x1b5
 5968 0176 47010000 		.4byte	0x147
 5969 017a 0E       		.uleb128 0xe
 5970 017b C3060000 		.4byte	.LASF28
 5971 017f 01       		.byte	0x1
 5972 0180 62       		.byte	0x62
 5973 0181 00000000 		.4byte	.LFB1
 5974 0185 20000000 		.4byte	.LFE1-.LFB1
 5975 0189 01       		.uleb128 0x1
 5976 018a 9C       		.byte	0x9c
 5977 018b 0E       		.uleb128 0xe
 5978 018c 58040000 		.4byte	.LASF29
 5979 0190 01       		.byte	0x1
 5980 0191 82       		.byte	0x82
 5981 0192 00000000 		.4byte	.LFB2
 5982 0196 24000000 		.4byte	.LFE2-.LFB2
 5983 019a 01       		.uleb128 0x1
 5984 019b 9C       		.byte	0x9c
 5985 019c 0F       		.uleb128 0xf
 5986 019d 51050000 		.4byte	.LASF35
 5987 01a1 01       		.byte	0x1
 5988 01a2 A6       		.byte	0xa6
 5989 01a3 00000000 		.4byte	.LFB3
 5990 01a7 54010000 		.4byte	.LFE3-.LFB3
 5991 01ab 01       		.uleb128 0x1
 5992 01ac 9C       		.byte	0x9c
 5993 01ad 04020000 		.4byte	0x204
 5994 01b1 10       		.uleb128 0x10
 5995 01b2 6900     		.ascii	"i\000"
 5996 01b4 01       		.byte	0x1
 5997 01b5 A9       		.byte	0xa9
 5998 01b6 83000000 		.4byte	0x83
 5999 01ba 02       		.uleb128 0x2
 6000 01bb 91       		.byte	0x91
 6001 01bc 6C       		.sleb128 -20
 6002 01bd 11       		.uleb128 0x11
 6003 01be 0D040000 		.4byte	.LASF30
 6004 01c2 01       		.byte	0x1
 6005 01c3 AC       		.byte	0xac
 6006 01c4 83000000 		.4byte	0x83
 6007 01c8 02       		.uleb128 0x2
 6008 01c9 91       		.byte	0x91
ARM GAS  C:\Users\essele\AppData\Local\Temp\ccaJcTi8.s 			page 165


 6009 01ca 68       		.sleb128 -24
 6010 01cb 11       		.uleb128 0x11
 6011 01cc 2B010000 		.4byte	.LASF31
 6012 01d0 01       		.byte	0x1
 6013 01d1 AD       		.byte	0xad
 6014 01d2 6B000000 		.4byte	0x6b
 6015 01d6 02       		.uleb128 0x2
 6016 01d7 91       		.byte	0x91
 6017 01d8 63       		.sleb128 -29
 6018 01d9 11       		.uleb128 0x11
 6019 01da 53030000 		.4byte	.LASF32
 6020 01de 01       		.byte	0x1
 6021 01df AE       		.byte	0xae
 6022 01e0 83000000 		.4byte	0x83
 6023 01e4 02       		.uleb128 0x2
 6024 01e5 91       		.byte	0x91
 6025 01e6 5C       		.sleb128 -36
 6026 01e7 11       		.uleb128 0x11
 6027 01e8 47080000 		.4byte	.LASF33
 6028 01ec 01       		.byte	0x1
 6029 01ed AF       		.byte	0xaf
 6030 01ee 83000000 		.4byte	0x83
 6031 01f2 02       		.uleb128 0x2
 6032 01f3 91       		.byte	0x91
 6033 01f4 64       		.sleb128 -28
 6034 01f5 11       		.uleb128 0x11
 6035 01f6 00000000 		.4byte	.LASF34
 6036 01fa 01       		.byte	0x1
 6037 01fb B0       		.byte	0xb0
 6038 01fc D9000000 		.4byte	0xd9
 6039 0200 02       		.uleb128 0x2
 6040 0201 91       		.byte	0x91
 6041 0202 58       		.sleb128 -40
 6042 0203 00       		.byte	0
 6043 0204 12       		.uleb128 0x12
 6044 0205 F2090000 		.4byte	.LASF36
 6045 0209 01       		.byte	0x1
 6046 020a 1301     		.2byte	0x113
 6047 020c 00000000 		.4byte	.LFB4
 6048 0210 78000000 		.4byte	.LFE4-.LFB4
 6049 0214 01       		.uleb128 0x1
 6050 0215 9C       		.byte	0x9c
 6051 0216 37020000 		.4byte	0x237
 6052 021a 13       		.uleb128 0x13
 6053 021b 6900     		.ascii	"i\000"
 6054 021d 01       		.byte	0x1
 6055 021e 1601     		.2byte	0x116
 6056 0220 83000000 		.4byte	0x83
 6057 0224 02       		.uleb128 0x2
 6058 0225 91       		.byte	0x91
 6059 0226 74       		.sleb128 -12
 6060 0227 14       		.uleb128 0x14
 6061 0228 0D040000 		.4byte	.LASF30
 6062 022c 01       		.byte	0x1
 6063 022d 1901     		.2byte	0x119
 6064 022f 83000000 		.4byte	0x83
 6065 0233 02       		.uleb128 0x2
ARM GAS  C:\Users\essele\AppData\Local\Temp\ccaJcTi8.s 			page 166


 6066 0234 91       		.byte	0x91
 6067 0235 70       		.sleb128 -16
 6068 0236 00       		.byte	0
 6069 0237 15       		.uleb128 0x15
 6070 0238 3A010000 		.4byte	.LASF40
 6071 023c 01       		.byte	0x1
 6072 023d 4B01     		.2byte	0x14b
 6073 023f 83000000 		.4byte	0x83
 6074 0243 00000000 		.4byte	.LFB5
 6075 0247 20000000 		.4byte	.LFE5-.LFB5
 6076 024b 01       		.uleb128 0x1
 6077 024c 9C       		.byte	0x9c
 6078 024d 12       		.uleb128 0x12
 6079 024e A1070000 		.4byte	.LASF37
 6080 0252 01       		.byte	0x1
 6081 0253 6601     		.2byte	0x166
 6082 0255 00000000 		.4byte	.LFB6
 6083 0259 38010000 		.4byte	.LFE6-.LFB6
 6084 025d 01       		.uleb128 0x1
 6085 025e 9C       		.byte	0x9c
 6086 025f 8F020000 		.4byte	0x28f
 6087 0263 13       		.uleb128 0x13
 6088 0264 6900     		.ascii	"i\000"
 6089 0266 01       		.byte	0x1
 6090 0267 6901     		.2byte	0x169
 6091 0269 83000000 		.4byte	0x83
 6092 026d 02       		.uleb128 0x2
 6093 026e 91       		.byte	0x91
 6094 026f 74       		.sleb128 -12
 6095 0270 14       		.uleb128 0x14
 6096 0271 B6000000 		.4byte	.LASF38
 6097 0275 01       		.byte	0x1
 6098 0276 6C01     		.2byte	0x16c
 6099 0278 83000000 		.4byte	0x83
 6100 027c 02       		.uleb128 0x2
 6101 027d 91       		.byte	0x91
 6102 027e 6C       		.sleb128 -20
 6103 027f 14       		.uleb128 0x14
 6104 0280 0D040000 		.4byte	.LASF30
 6105 0284 01       		.byte	0x1
 6106 0285 7001     		.2byte	0x170
 6107 0287 83000000 		.4byte	0x83
 6108 028b 02       		.uleb128 0x2
 6109 028c 91       		.byte	0x91
 6110 028d 70       		.sleb128 -16
 6111 028e 00       		.byte	0
 6112 028f 12       		.uleb128 0x12
 6113 0290 DE000000 		.4byte	.LASF39
 6114 0294 01       		.byte	0x1
 6115 0295 BB01     		.2byte	0x1bb
 6116 0297 00000000 		.4byte	.LFB7
 6117 029b C4000000 		.4byte	.LFE7-.LFB7
 6118 029f 01       		.uleb128 0x1
 6119 02a0 9C       		.byte	0x9c
 6120 02a1 D1020000 		.4byte	0x2d1
 6121 02a5 13       		.uleb128 0x13
 6122 02a6 6900     		.ascii	"i\000"
ARM GAS  C:\Users\essele\AppData\Local\Temp\ccaJcTi8.s 			page 167


 6123 02a8 01       		.byte	0x1
 6124 02a9 BE01     		.2byte	0x1be
 6125 02ab 83000000 		.4byte	0x83
 6126 02af 02       		.uleb128 0x2
 6127 02b0 91       		.byte	0x91
 6128 02b1 74       		.sleb128 -12
 6129 02b2 14       		.uleb128 0x14
 6130 02b3 B6000000 		.4byte	.LASF38
 6131 02b7 01       		.byte	0x1
 6132 02b8 C101     		.2byte	0x1c1
 6133 02ba 83000000 		.4byte	0x83
 6134 02be 02       		.uleb128 0x2
 6135 02bf 91       		.byte	0x91
 6136 02c0 6C       		.sleb128 -20
 6137 02c1 14       		.uleb128 0x14
 6138 02c2 0D040000 		.4byte	.LASF30
 6139 02c6 01       		.byte	0x1
 6140 02c7 C501     		.2byte	0x1c5
 6141 02c9 83000000 		.4byte	0x83
 6142 02cd 02       		.uleb128 0x2
 6143 02ce 91       		.byte	0x91
 6144 02cf 70       		.sleb128 -16
 6145 02d0 00       		.byte	0
 6146 02d1 15       		.uleb128 0x15
 6147 02d2 63020000 		.4byte	.LASF41
 6148 02d6 01       		.byte	0x1
 6149 02d7 F001     		.2byte	0x1f0
 6150 02d9 83000000 		.4byte	0x83
 6151 02dd 00000000 		.4byte	.LFB8
 6152 02e1 20000000 		.4byte	.LFE8-.LFB8
 6153 02e5 01       		.uleb128 0x1
 6154 02e6 9C       		.byte	0x9c
 6155 02e7 16       		.uleb128 0x16
 6156 02e8 68040000 		.4byte	.LASF42
 6157 02ec 01       		.byte	0x1
 6158 02ed 1B02     		.2byte	0x21b
 6159 02ef 00000000 		.4byte	.LFB9
 6160 02f3 70000000 		.4byte	.LFE9-.LFB9
 6161 02f7 01       		.uleb128 0x1
 6162 02f8 9C       		.byte	0x9c
 6163 02f9 2B030000 		.4byte	0x32b
 6164 02fd 17       		.uleb128 0x17
 6165 02fe F3030000 		.4byte	.LASF45
 6166 0302 01       		.byte	0x1
 6167 0303 1B02     		.2byte	0x21b
 6168 0305 83000000 		.4byte	0x83
 6169 0309 02       		.uleb128 0x2
 6170 030a 91       		.byte	0x91
 6171 030b 64       		.sleb128 -28
 6172 030c 14       		.uleb128 0x14
 6173 030d 2B010000 		.4byte	.LASF31
 6174 0311 01       		.byte	0x1
 6175 0312 1D02     		.2byte	0x21d
 6176 0314 6B000000 		.4byte	0x6b
 6177 0318 02       		.uleb128 0x2
 6178 0319 91       		.byte	0x91
 6179 031a 6B       		.sleb128 -21
ARM GAS  C:\Users\essele\AppData\Local\Temp\ccaJcTi8.s 			page 168


 6180 031b 14       		.uleb128 0x14
 6181 031c 10070000 		.4byte	.LASF43
 6182 0320 01       		.byte	0x1
 6183 0321 1E02     		.2byte	0x21e
 6184 0323 83000000 		.4byte	0x83
 6185 0327 02       		.uleb128 0x2
 6186 0328 91       		.byte	0x91
 6187 0329 6C       		.sleb128 -20
 6188 032a 00       		.byte	0
 6189 032b 12       		.uleb128 0x12
 6190 032c 16010000 		.4byte	.LASF44
 6191 0330 01       		.byte	0x1
 6192 0331 6302     		.2byte	0x263
 6193 0333 00000000 		.4byte	.LFB10
 6194 0337 50000000 		.4byte	.LFE10-.LFB10
 6195 033b 01       		.uleb128 0x1
 6196 033c 9C       		.byte	0x9c
 6197 033d 51030000 		.4byte	0x351
 6198 0341 17       		.uleb128 0x17
 6199 0342 4C030000 		.4byte	.LASF46
 6200 0346 01       		.byte	0x1
 6201 0347 6302     		.2byte	0x263
 6202 0349 83000000 		.4byte	0x83
 6203 034d 02       		.uleb128 0x2
 6204 034e 91       		.byte	0x91
 6205 034f 74       		.sleb128 -12
 6206 0350 00       		.byte	0
 6207 0351 18       		.uleb128 0x18
 6208 0352 60030000 		.4byte	.LASF57
 6209 0356 01       		.byte	0x1
 6210 0357 8802     		.2byte	0x288
 6211 0359 83000000 		.4byte	0x83
 6212 035d 00000000 		.4byte	.LFB11
 6213 0361 4C000000 		.4byte	.LFE11-.LFB11
 6214 0365 01       		.uleb128 0x1
 6215 0366 9C       		.byte	0x9c
 6216 0367 8A030000 		.4byte	0x38a
 6217 036b 14       		.uleb128 0x14
 6218 036c 2B010000 		.4byte	.LASF31
 6219 0370 01       		.byte	0x1
 6220 0371 8A02     		.2byte	0x28a
 6221 0373 6B000000 		.4byte	0x6b
 6222 0377 02       		.uleb128 0x2
 6223 0378 91       		.byte	0x91
 6224 0379 6B       		.sleb128 -21
 6225 037a 14       		.uleb128 0x14
 6226 037b A20A0000 		.4byte	.LASF47
 6227 037f 01       		.byte	0x1
 6228 0380 8B02     		.2byte	0x28b
 6229 0382 83000000 		.4byte	0x83
 6230 0386 02       		.uleb128 0x2
 6231 0387 91       		.byte	0x91
 6232 0388 6C       		.sleb128 -20
 6233 0389 00       		.byte	0
 6234 038a 16       		.uleb128 0x16
 6235 038b E3070000 		.4byte	.LASF48
 6236 038f 01       		.byte	0x1
ARM GAS  C:\Users\essele\AppData\Local\Temp\ccaJcTi8.s 			page 169


 6237 0390 C502     		.2byte	0x2c5
 6238 0392 00000000 		.4byte	.LFB12
 6239 0396 48000000 		.4byte	.LFE12-.LFB12
 6240 039a 01       		.uleb128 0x1
 6241 039b 9C       		.byte	0x9c
 6242 039c BF030000 		.4byte	0x3bf
 6243 03a0 17       		.uleb128 0x17
 6244 03a1 56070000 		.4byte	.LASF49
 6245 03a5 01       		.byte	0x1
 6246 03a6 C502     		.2byte	0x2c5
 6247 03a8 83000000 		.4byte	0x83
 6248 03ac 02       		.uleb128 0x2
 6249 03ad 91       		.byte	0x91
 6250 03ae 64       		.sleb128 -28
 6251 03af 14       		.uleb128 0x14
 6252 03b0 2B010000 		.4byte	.LASF31
 6253 03b4 01       		.byte	0x1
 6254 03b5 C702     		.2byte	0x2c7
 6255 03b7 6B000000 		.4byte	0x6b
 6256 03bb 02       		.uleb128 0x2
 6257 03bc 91       		.byte	0x91
 6258 03bd 6F       		.sleb128 -17
 6259 03be 00       		.byte	0
 6260 03bf 16       		.uleb128 0x16
 6261 03c0 2E0A0000 		.4byte	.LASF50
 6262 03c4 01       		.byte	0x1
 6263 03c5 FF02     		.2byte	0x2ff
 6264 03c7 00000000 		.4byte	.LFB13
 6265 03cb 24020000 		.4byte	.LFE13-.LFB13
 6266 03cf 01       		.uleb128 0x1
 6267 03d0 9C       		.byte	0x9c
 6268 03d1 4E040000 		.4byte	0x44e
 6269 03d5 17       		.uleb128 0x17
 6270 03d6 0D040000 		.4byte	.LASF30
 6271 03da 01       		.byte	0x1
 6272 03db FF02     		.2byte	0x2ff
 6273 03dd 83000000 		.4byte	0x83
 6274 03e1 02       		.uleb128 0x2
 6275 03e2 91       		.byte	0x91
 6276 03e3 5C       		.sleb128 -36
 6277 03e4 14       		.uleb128 0x14
 6278 03e5 E2090000 		.4byte	.LASF51
 6279 03e9 01       		.byte	0x1
 6280 03ea 0503     		.2byte	0x305
 6281 03ec 6B000000 		.4byte	0x6b
 6282 03f0 02       		.uleb128 0x2
 6283 03f1 91       		.byte	0x91
 6284 03f2 6F       		.sleb128 -17
 6285 03f3 14       		.uleb128 0x14
 6286 03f4 EA090000 		.4byte	.LASF52
 6287 03f8 01       		.byte	0x1
 6288 03f9 0603     		.2byte	0x306
 6289 03fb 6B000000 		.4byte	0x6b
 6290 03ff 02       		.uleb128 0x2
 6291 0400 91       		.byte	0x91
 6292 0401 6E       		.sleb128 -18
 6293 0402 14       		.uleb128 0x14
ARM GAS  C:\Users\essele\AppData\Local\Temp\ccaJcTi8.s 			page 170


 6294 0403 22090000 		.4byte	.LASF53
 6295 0407 01       		.byte	0x1
 6296 0408 0703     		.2byte	0x307
 6297 040a 6B000000 		.4byte	0x6b
 6298 040e 02       		.uleb128 0x2
 6299 040f 91       		.byte	0x91
 6300 0410 62       		.sleb128 -30
 6301 0411 14       		.uleb128 0x14
 6302 0412 1E070000 		.4byte	.LASF54
 6303 0416 01       		.byte	0x1
 6304 0417 0803     		.2byte	0x308
 6305 0419 6B000000 		.4byte	0x6b
 6306 041d 02       		.uleb128 0x2
 6307 041e 91       		.byte	0x91
 6308 041f 6D       		.sleb128 -19
 6309 0420 14       		.uleb128 0x14
 6310 0421 DC060000 		.4byte	.LASF55
 6311 0425 01       		.byte	0x1
 6312 0426 0C03     		.2byte	0x30c
 6313 0428 83000000 		.4byte	0x83
 6314 042c 02       		.uleb128 0x2
 6315 042d 91       		.byte	0x91
 6316 042e 68       		.sleb128 -24
 6317 042f 14       		.uleb128 0x14
 6318 0430 BA070000 		.4byte	.LASF56
 6319 0434 01       		.byte	0x1
 6320 0435 1003     		.2byte	0x310
 6321 0437 83000000 		.4byte	0x83
 6322 043b 02       		.uleb128 0x2
 6323 043c 91       		.byte	0x91
 6324 043d 64       		.sleb128 -28
 6325 043e 14       		.uleb128 0x14
 6326 043f 2B010000 		.4byte	.LASF31
 6327 0443 01       		.byte	0x1
 6328 0444 1303     		.2byte	0x313
 6329 0446 6B000000 		.4byte	0x6b
 6330 044a 02       		.uleb128 0x2
 6331 044b 91       		.byte	0x91
 6332 044c 63       		.sleb128 -29
 6333 044d 00       		.byte	0
 6334 044e 18       		.uleb128 0x18
 6335 044f 35060000 		.4byte	.LASF58
 6336 0453 01       		.byte	0x1
 6337 0454 7F04     		.2byte	0x47f
 6338 0456 B0000000 		.4byte	0xb0
 6339 045a 00000000 		.4byte	.LFB14
 6340 045e 68000000 		.4byte	.LFE14-.LFB14
 6341 0462 01       		.uleb128 0x1
 6342 0463 9C       		.byte	0x9c
 6343 0464 87040000 		.4byte	0x487
 6344 0468 17       		.uleb128 0x17
 6345 0469 33090000 		.4byte	.LASF59
 6346 046d 01       		.byte	0x1
 6347 046e 7F04     		.2byte	0x47f
 6348 0470 83000000 		.4byte	0x83
 6349 0474 02       		.uleb128 0x2
 6350 0475 91       		.byte	0x91
ARM GAS  C:\Users\essele\AppData\Local\Temp\ccaJcTi8.s 			page 171


 6351 0476 6C       		.sleb128 -20
 6352 0477 14       		.uleb128 0x14
 6353 0478 9A000000 		.4byte	.LASF60
 6354 047c 01       		.byte	0x1
 6355 047d 8104     		.2byte	0x481
 6356 047f B0000000 		.4byte	0xb0
 6357 0483 02       		.uleb128 0x2
 6358 0484 91       		.byte	0x91
 6359 0485 74       		.sleb128 -12
 6360 0486 00       		.byte	0
 6361 0487 19       		.uleb128 0x19
 6362 0488 8F020000 		.4byte	.LASF61
 6363 048c 01       		.byte	0x1
 6364 048d 0D05     		.2byte	0x50d
 6365 048f 00000000 		.4byte	.LFB15
 6366 0493 20000000 		.4byte	.LFE15-.LFB15
 6367 0497 01       		.uleb128 0x1
 6368 0498 9C       		.byte	0x9c
 6369 0499 1A       		.uleb128 0x1a
 6370 049a DF040000 		.4byte	.LASF62
 6371 049e 01       		.byte	0x1
 6372 049f 2F05     		.2byte	0x52f
 6373 04a1 83000000 		.4byte	0x83
 6374 04a5 00000000 		.4byte	.LFB16
 6375 04a9 24000000 		.4byte	.LFE16-.LFB16
 6376 04ad 01       		.uleb128 0x1
 6377 04ae 9C       		.byte	0x9c
 6378 04af C3040000 		.4byte	0x4c3
 6379 04b3 14       		.uleb128 0x14
 6380 04b4 B7060000 		.4byte	.LASF63
 6381 04b8 01       		.byte	0x1
 6382 04b9 3105     		.2byte	0x531
 6383 04bb 83000000 		.4byte	0x83
 6384 04bf 02       		.uleb128 0x2
 6385 04c0 91       		.byte	0x91
 6386 04c1 74       		.sleb128 -12
 6387 04c2 00       		.byte	0
 6388 04c3 16       		.uleb128 0x16
 6389 04c4 A2080000 		.4byte	.LASF64
 6390 04c8 01       		.byte	0x1
 6391 04c9 B705     		.2byte	0x5b7
 6392 04cb 00000000 		.4byte	.LFB17
 6393 04cf 98000000 		.4byte	.LFE17-.LFB17
 6394 04d3 01       		.uleb128 0x1
 6395 04d4 9C       		.byte	0x9c
 6396 04d5 43050000 		.4byte	0x543
 6397 04d9 17       		.uleb128 0x17
 6398 04da 2E060000 		.4byte	.LASF65
 6399 04de 01       		.byte	0x1
 6400 04df B705     		.2byte	0x5b7
 6401 04e1 83000000 		.4byte	0x83
 6402 04e5 02       		.uleb128 0x2
 6403 04e6 91       		.byte	0x91
 6404 04e7 64       		.sleb128 -28
 6405 04e8 17       		.uleb128 0x17
 6406 04e9 06050000 		.4byte	.LASF66
 6407 04ed 01       		.byte	0x1
ARM GAS  C:\Users\essele\AppData\Local\Temp\ccaJcTi8.s 			page 172


 6408 04ee B705     		.2byte	0x5b7
 6409 04f0 83000000 		.4byte	0x83
 6410 04f4 02       		.uleb128 0x2
 6411 04f5 91       		.byte	0x91
 6412 04f6 60       		.sleb128 -32
 6413 04f7 17       		.uleb128 0x17
 6414 04f8 F8000000 		.4byte	.LASF67
 6415 04fc 01       		.byte	0x1
 6416 04fd B705     		.2byte	0x5b7
 6417 04ff 83000000 		.4byte	0x83
 6418 0503 02       		.uleb128 0x2
 6419 0504 91       		.byte	0x91
 6420 0505 5C       		.sleb128 -36
 6421 0506 17       		.uleb128 0x17
 6422 0507 D4080000 		.4byte	.LASF68
 6423 050b 01       		.byte	0x1
 6424 050c B705     		.2byte	0x5b7
 6425 050e 83000000 		.4byte	0x83
 6426 0512 02       		.uleb128 0x2
 6427 0513 91       		.byte	0x91
 6428 0514 58       		.sleb128 -40
 6429 0515 17       		.uleb128 0x17
 6430 0516 14080000 		.4byte	.LASF69
 6431 051a 01       		.byte	0x1
 6432 051b B705     		.2byte	0x5b7
 6433 051d 83000000 		.4byte	0x83
 6434 0521 02       		.uleb128 0x2
 6435 0522 91       		.byte	0x91
 6436 0523 00       		.sleb128 0
 6437 0524 14       		.uleb128 0x14
 6438 0525 2B010000 		.4byte	.LASF31
 6439 0529 01       		.byte	0x1
 6440 052a B905     		.2byte	0x5b9
 6441 052c 6B000000 		.4byte	0x6b
 6442 0530 02       		.uleb128 0x2
 6443 0531 91       		.byte	0x91
 6444 0532 6F       		.sleb128 -17
 6445 0533 14       		.uleb128 0x14
 6446 0534 53030000 		.4byte	.LASF32
 6447 0538 01       		.byte	0x1
 6448 0539 BA05     		.2byte	0x5ba
 6449 053b 83000000 		.4byte	0x83
 6450 053f 02       		.uleb128 0x2
 6451 0540 91       		.byte	0x91
 6452 0541 68       		.sleb128 -24
 6453 0542 00       		.byte	0
 6454 0543 18       		.uleb128 0x18
 6455 0544 75070000 		.4byte	.LASF70
 6456 0548 01       		.byte	0x1
 6457 0549 EA05     		.2byte	0x5ea
 6458 054b B0000000 		.4byte	0xb0
 6459 054f 00000000 		.4byte	.LFB18
 6460 0553 E4010000 		.4byte	.LFE18-.LFB18
 6461 0557 01       		.uleb128 0x1
 6462 0558 9C       		.byte	0x9c
 6463 0559 03060000 		.4byte	0x603
 6464 055d 17       		.uleb128 0x17
ARM GAS  C:\Users\essele\AppData\Local\Temp\ccaJcTi8.s 			page 173


 6465 055e 0D040000 		.4byte	.LASF30
 6466 0562 01       		.byte	0x1
 6467 0563 EA05     		.2byte	0x5ea
 6468 0565 83000000 		.4byte	0x83
 6469 0569 02       		.uleb128 0x2
 6470 056a 91       		.byte	0x91
 6471 056b 4C       		.sleb128 -52
 6472 056c 17       		.uleb128 0x17
 6473 056d 33070000 		.4byte	.LASF71
 6474 0571 01       		.byte	0x1
 6475 0572 EA05     		.2byte	0x5ea
 6476 0574 83000000 		.4byte	0x83
 6477 0578 02       		.uleb128 0x2
 6478 0579 91       		.byte	0x91
 6479 057a 48       		.sleb128 -56
 6480 057b 1B       		.uleb128 0x1b
 6481 057c 65737200 		.ascii	"esr\000"
 6482 0580 01       		.byte	0x1
 6483 0581 EA05     		.2byte	0x5ea
 6484 0583 83000000 		.4byte	0x83
 6485 0587 02       		.uleb128 0x2
 6486 0588 91       		.byte	0x91
 6487 0589 44       		.sleb128 -60
 6488 058a 17       		.uleb128 0x17
 6489 058b 12050000 		.4byte	.LASF72
 6490 058f 01       		.byte	0x1
 6491 0590 EA05     		.2byte	0x5ea
 6492 0592 83000000 		.4byte	0x83
 6493 0596 02       		.uleb128 0x2
 6494 0597 91       		.byte	0x91
 6495 0598 40       		.sleb128 -64
 6496 0599 14       		.uleb128 0x14
 6497 059a 9A000000 		.4byte	.LASF60
 6498 059e 01       		.byte	0x1
 6499 059f EC05     		.2byte	0x5ec
 6500 05a1 B0000000 		.4byte	0xb0
 6501 05a5 02       		.uleb128 0x2
 6502 05a6 91       		.byte	0x91
 6503 05a7 6C       		.sleb128 -20
 6504 05a8 14       		.uleb128 0x14
 6505 05a9 2E060000 		.4byte	.LASF65
 6506 05ad 01       		.byte	0x1
 6507 05ae EE05     		.2byte	0x5ee
 6508 05b0 83000000 		.4byte	0x83
 6509 05b4 02       		.uleb128 0x2
 6510 05b5 91       		.byte	0x91
 6511 05b6 5C       		.sleb128 -36
 6512 05b7 14       		.uleb128 0x14
 6513 05b8 06050000 		.4byte	.LASF66
 6514 05bc 01       		.byte	0x1
 6515 05bd EF05     		.2byte	0x5ef
 6516 05bf 83000000 		.4byte	0x83
 6517 05c3 02       		.uleb128 0x2
 6518 05c4 91       		.byte	0x91
 6519 05c5 68       		.sleb128 -24
 6520 05c6 14       		.uleb128 0x14
 6521 05c7 F8000000 		.4byte	.LASF67
ARM GAS  C:\Users\essele\AppData\Local\Temp\ccaJcTi8.s 			page 174


 6522 05cb 01       		.byte	0x1
 6523 05cc F005     		.2byte	0x5f0
 6524 05ce 83000000 		.4byte	0x83
 6525 05d2 02       		.uleb128 0x2
 6526 05d3 91       		.byte	0x91
 6527 05d4 54       		.sleb128 -44
 6528 05d5 14       		.uleb128 0x14
 6529 05d6 D4080000 		.4byte	.LASF68
 6530 05da 01       		.byte	0x1
 6531 05db F105     		.2byte	0x5f1
 6532 05dd 83000000 		.4byte	0x83
 6533 05e1 02       		.uleb128 0x2
 6534 05e2 91       		.byte	0x91
 6535 05e3 64       		.sleb128 -28
 6536 05e4 14       		.uleb128 0x14
 6537 05e5 14080000 		.4byte	.LASF69
 6538 05e9 01       		.byte	0x1
 6539 05ea F205     		.2byte	0x5f2
 6540 05ec 83000000 		.4byte	0x83
 6541 05f0 02       		.uleb128 0x2
 6542 05f1 91       		.byte	0x91
 6543 05f2 60       		.sleb128 -32
 6544 05f3 14       		.uleb128 0x14
 6545 05f4 0C050000 		.4byte	.LASF73
 6546 05f8 01       		.byte	0x1
 6547 05f9 F405     		.2byte	0x5f4
 6548 05fb 83000000 		.4byte	0x83
 6549 05ff 02       		.uleb128 0x2
 6550 0600 91       		.byte	0x91
 6551 0601 58       		.sleb128 -40
 6552 0602 00       		.byte	0
 6553 0603 18       		.uleb128 0x18
 6554 0604 AB090000 		.4byte	.LASF74
 6555 0608 01       		.byte	0x1
 6556 0609 8106     		.2byte	0x681
 6557 060b B0000000 		.4byte	0xb0
 6558 060f 00000000 		.4byte	.LFB19
 6559 0613 10010000 		.4byte	.LFE19-.LFB19
 6560 0617 01       		.uleb128 0x1
 6561 0618 9C       		.byte	0x9c
 6562 0619 69060000 		.4byte	0x669
 6563 061d 1B       		.uleb128 0x1b
 6564 061e 706C6C00 		.ascii	"pll\000"
 6565 0622 01       		.byte	0x1
 6566 0623 8106     		.2byte	0x681
 6567 0625 83000000 		.4byte	0x83
 6568 0629 02       		.uleb128 0x2
 6569 062a 91       		.byte	0x91
 6570 062b 5C       		.sleb128 -36
 6571 062c 17       		.uleb128 0x17
 6572 062d B2060000 		.4byte	.LASF75
 6573 0631 01       		.byte	0x1
 6574 0632 8106     		.2byte	0x681
 6575 0634 83000000 		.4byte	0x83
 6576 0638 02       		.uleb128 0x2
 6577 0639 91       		.byte	0x91
 6578 063a 58       		.sleb128 -40
ARM GAS  C:\Users\essele\AppData\Local\Temp\ccaJcTi8.s 			page 175


 6579 063b 14       		.uleb128 0x14
 6580 063c 06040000 		.4byte	.LASF76
 6581 0640 01       		.byte	0x1
 6582 0641 8306     		.2byte	0x683
 6583 0643 83000000 		.4byte	0x83
 6584 0647 02       		.uleb128 0x2
 6585 0648 91       		.byte	0x91
 6586 0649 6C       		.sleb128 -20
 6587 064a 14       		.uleb128 0x14
 6588 064b 2B010000 		.4byte	.LASF31
 6589 064f 01       		.byte	0x1
 6590 0650 8406     		.2byte	0x684
 6591 0652 6B000000 		.4byte	0x6b
 6592 0656 02       		.uleb128 0x2
 6593 0657 91       		.byte	0x91
 6594 0658 67       		.sleb128 -25
 6595 0659 14       		.uleb128 0x14
 6596 065a 9A000000 		.4byte	.LASF60
 6597 065e 01       		.byte	0x1
 6598 065f 8506     		.2byte	0x685
 6599 0661 B0000000 		.4byte	0xb0
 6600 0665 02       		.uleb128 0x2
 6601 0666 91       		.byte	0x91
 6602 0667 68       		.sleb128 -24
 6603 0668 00       		.byte	0
 6604 0669 18       		.uleb128 0x18
 6605 066a 85090000 		.4byte	.LASF77
 6606 066e 01       		.byte	0x1
 6607 066f C406     		.2byte	0x6c4
 6608 0671 83000000 		.4byte	0x83
 6609 0675 00000000 		.4byte	.LFB20
 6610 0679 70000000 		.4byte	.LFE20-.LFB20
 6611 067d 01       		.uleb128 0x1
 6612 067e 9C       		.byte	0x9c
 6613 067f B1060000 		.4byte	0x6b1
 6614 0683 1B       		.uleb128 0x1b
 6615 0684 706C6C00 		.ascii	"pll\000"
 6616 0688 01       		.byte	0x1
 6617 0689 C406     		.2byte	0x6c4
 6618 068b 83000000 		.4byte	0x83
 6619 068f 02       		.uleb128 0x2
 6620 0690 91       		.byte	0x91
 6621 0691 64       		.sleb128 -28
 6622 0692 14       		.uleb128 0x14
 6623 0693 2B010000 		.4byte	.LASF31
 6624 0697 01       		.byte	0x1
 6625 0698 C606     		.2byte	0x6c6
 6626 069a 6B000000 		.4byte	0x6b
 6627 069e 02       		.uleb128 0x2
 6628 069f 91       		.byte	0x91
 6629 06a0 6B       		.sleb128 -21
 6630 06a1 14       		.uleb128 0x14
 6631 06a2 9A000000 		.4byte	.LASF60
 6632 06a6 01       		.byte	0x1
 6633 06a7 C706     		.2byte	0x6c7
 6634 06a9 83000000 		.4byte	0x83
 6635 06ad 02       		.uleb128 0x2
ARM GAS  C:\Users\essele\AppData\Local\Temp\ccaJcTi8.s 			page 176


 6636 06ae 91       		.byte	0x91
 6637 06af 6C       		.sleb128 -20
 6638 06b0 00       		.byte	0
 6639 06b1 16       		.uleb128 0x16
 6640 06b2 62080000 		.4byte	.LASF78
 6641 06b6 01       		.byte	0x1
 6642 06b7 E906     		.2byte	0x6e9
 6643 06b9 00000000 		.4byte	.LFB21
 6644 06bd 54000000 		.4byte	.LFE21-.LFB21
 6645 06c1 01       		.uleb128 0x1
 6646 06c2 9C       		.byte	0x9c
 6647 06c3 E6060000 		.4byte	0x6e6
 6648 06c7 1B       		.uleb128 0x1b
 6649 06c8 706C6C00 		.ascii	"pll\000"
 6650 06cc 01       		.byte	0x1
 6651 06cd E906     		.2byte	0x6e9
 6652 06cf 83000000 		.4byte	0x83
 6653 06d3 02       		.uleb128 0x2
 6654 06d4 91       		.byte	0x91
 6655 06d5 64       		.sleb128 -28
 6656 06d6 14       		.uleb128 0x14
 6657 06d7 2B010000 		.4byte	.LASF31
 6658 06db 01       		.byte	0x1
 6659 06dc EB06     		.2byte	0x6eb
 6660 06de 6B000000 		.4byte	0x6b
 6661 06e2 02       		.uleb128 0x2
 6662 06e3 91       		.byte	0x91
 6663 06e4 6F       		.sleb128 -17
 6664 06e5 00       		.byte	0
 6665 06e6 18       		.uleb128 0x18
 6666 06e7 F5040000 		.4byte	.LASF79
 6667 06eb 01       		.byte	0x1
 6668 06ec 1607     		.2byte	0x716
 6669 06ee B0000000 		.4byte	0xb0
 6670 06f2 00000000 		.4byte	.LFB22
 6671 06f6 D4000000 		.4byte	.LFE22-.LFB22
 6672 06fa 01       		.uleb128 0x1
 6673 06fb 9C       		.byte	0x9c
 6674 06fc 79070000 		.4byte	0x779
 6675 0700 1B       		.uleb128 0x1b
 6676 0701 706C6C00 		.ascii	"pll\000"
 6677 0705 01       		.byte	0x1
 6678 0706 1607     		.2byte	0x716
 6679 0708 83000000 		.4byte	0x83
 6680 070c 02       		.uleb128 0x2
 6681 070d 91       		.byte	0x91
 6682 070e 5C       		.sleb128 -36
 6683 070f 17       		.uleb128 0x17
 6684 0710 88040000 		.4byte	.LASF80
 6685 0714 01       		.byte	0x1
 6686 0715 1607     		.2byte	0x716
 6687 0717 83000000 		.4byte	0x83
 6688 071b 02       		.uleb128 0x2
 6689 071c 91       		.byte	0x91
 6690 071d 58       		.sleb128 -40
 6691 071e 17       		.uleb128 0x17
 6692 071f 2B020000 		.4byte	.LASF81
ARM GAS  C:\Users\essele\AppData\Local\Temp\ccaJcTi8.s 			page 177


 6693 0723 01       		.byte	0x1
 6694 0724 1607     		.2byte	0x716
 6695 0726 83000000 		.4byte	0x83
 6696 072a 02       		.uleb128 0x2
 6697 072b 91       		.byte	0x91
 6698 072c 54       		.sleb128 -44
 6699 072d 17       		.uleb128 0x17
 6700 072e 8D0A0000 		.4byte	.LASF82
 6701 0732 01       		.byte	0x1
 6702 0733 1607     		.2byte	0x716
 6703 0735 83000000 		.4byte	0x83
 6704 0739 02       		.uleb128 0x2
 6705 073a 91       		.byte	0x91
 6706 073b 50       		.sleb128 -48
 6707 073c 14       		.uleb128 0x14
 6708 073d 53030000 		.4byte	.LASF32
 6709 0741 01       		.byte	0x1
 6710 0742 1807     		.2byte	0x718
 6711 0744 83000000 		.4byte	0x83
 6712 0748 02       		.uleb128 0x2
 6713 0749 91       		.byte	0x91
 6714 074a 60       		.sleb128 -32
 6715 074b 13       		.uleb128 0x13
 6716 074c 746D7000 		.ascii	"tmp\000"
 6717 0750 01       		.byte	0x1
 6718 0751 1907     		.2byte	0x719
 6719 0753 B0000000 		.4byte	0xb0
 6720 0757 02       		.uleb128 0x2
 6721 0758 91       		.byte	0x91
 6722 0759 64       		.sleb128 -28
 6723 075a 14       		.uleb128 0x14
 6724 075b 2B010000 		.4byte	.LASF31
 6725 075f 01       		.byte	0x1
 6726 0760 1A07     		.2byte	0x71a
 6727 0762 6B000000 		.4byte	0x6b
 6728 0766 02       		.uleb128 0x2
 6729 0767 91       		.byte	0x91
 6730 0768 6B       		.sleb128 -21
 6731 0769 14       		.uleb128 0x14
 6732 076a 9A000000 		.4byte	.LASF60
 6733 076e 01       		.byte	0x1
 6734 076f 1B07     		.2byte	0x71b
 6735 0771 B0000000 		.4byte	0xb0
 6736 0775 02       		.uleb128 0x2
 6737 0776 91       		.byte	0x91
 6738 0777 6C       		.sleb128 -20
 6739 0778 00       		.byte	0
 6740 0779 16       		.uleb128 0x16
 6741 077a 89080000 		.4byte	.LASF83
 6742 077e 01       		.byte	0x1
 6743 077f 5A07     		.2byte	0x75a
 6744 0781 00000000 		.4byte	.LFB23
 6745 0785 6C000000 		.4byte	.LFE23-.LFB23
 6746 0789 01       		.uleb128 0x1
 6747 078a 9C       		.byte	0x9c
 6748 078b CC070000 		.4byte	0x7cc
 6749 078f 1B       		.uleb128 0x1b
ARM GAS  C:\Users\essele\AppData\Local\Temp\ccaJcTi8.s 			page 178


 6750 0790 706C6C00 		.ascii	"pll\000"
 6751 0794 01       		.byte	0x1
 6752 0795 5A07     		.2byte	0x75a
 6753 0797 83000000 		.4byte	0x83
 6754 079b 02       		.uleb128 0x2
 6755 079c 91       		.byte	0x91
 6756 079d 64       		.sleb128 -28
 6757 079e 17       		.uleb128 0x17
 6758 079f 12040000 		.4byte	.LASF84
 6759 07a3 01       		.byte	0x1
 6760 07a4 5A07     		.2byte	0x75a
 6761 07a6 83000000 		.4byte	0x83
 6762 07aa 02       		.uleb128 0x2
 6763 07ab 91       		.byte	0x91
 6764 07ac 60       		.sleb128 -32
 6765 07ad 14       		.uleb128 0x14
 6766 07ae 53030000 		.4byte	.LASF32
 6767 07b2 01       		.byte	0x1
 6768 07b3 5C07     		.2byte	0x75c
 6769 07b5 83000000 		.4byte	0x83
 6770 07b9 02       		.uleb128 0x2
 6771 07ba 91       		.byte	0x91
 6772 07bb 68       		.sleb128 -24
 6773 07bc 14       		.uleb128 0x14
 6774 07bd 2B010000 		.4byte	.LASF31
 6775 07c1 01       		.byte	0x1
 6776 07c2 5D07     		.2byte	0x75d
 6777 07c4 6B000000 		.4byte	0x6b
 6778 07c8 02       		.uleb128 0x2
 6779 07c9 91       		.byte	0x91
 6780 07ca 6F       		.sleb128 -17
 6781 07cb 00       		.byte	0
 6782 07cc 1C       		.uleb128 0x1c
 6783 07cd EC050000 		.4byte	.LASF85
 6784 07d1 01       		.byte	0x1
 6785 07d2 7B07     		.2byte	0x77b
 6786 07d4 83000000 		.4byte	0x83
 6787 07d8 00000000 		.4byte	.LFB24
 6788 07dc 58000000 		.4byte	.LFE24-.LFB24
 6789 07e0 01       		.uleb128 0x1
 6790 07e1 9C       		.byte	0x9c
 6791 07e2 14080000 		.4byte	0x814
 6792 07e6 1B       		.uleb128 0x1b
 6793 07e7 706C6C00 		.ascii	"pll\000"
 6794 07eb 01       		.byte	0x1
 6795 07ec 7B07     		.2byte	0x77b
 6796 07ee 83000000 		.4byte	0x83
 6797 07f2 02       		.uleb128 0x2
 6798 07f3 91       		.byte	0x91
 6799 07f4 64       		.sleb128 -28
 6800 07f5 14       		.uleb128 0x14
 6801 07f6 B7060000 		.4byte	.LASF63
 6802 07fa 01       		.byte	0x1
 6803 07fb 7D07     		.2byte	0x77d
 6804 07fd 83000000 		.4byte	0x83
 6805 0801 02       		.uleb128 0x2
 6806 0802 91       		.byte	0x91
ARM GAS  C:\Users\essele\AppData\Local\Temp\ccaJcTi8.s 			page 179


 6807 0803 68       		.sleb128 -24
 6808 0804 14       		.uleb128 0x14
 6809 0805 2B010000 		.4byte	.LASF31
 6810 0809 01       		.byte	0x1
 6811 080a 7E07     		.2byte	0x77e
 6812 080c 6B000000 		.4byte	0x6b
 6813 0810 02       		.uleb128 0x2
 6814 0811 91       		.byte	0x91
 6815 0812 6F       		.sleb128 -17
 6816 0813 00       		.byte	0
 6817 0814 1C       		.uleb128 0x1c
 6818 0815 4D060000 		.4byte	.LASF86
 6819 0819 01       		.byte	0x1
 6820 081a 9E07     		.2byte	0x79e
 6821 081c B0000000 		.4byte	0xb0
 6822 0820 00000000 		.4byte	.LFB25
 6823 0824 54000000 		.4byte	.LFE25-.LFB25
 6824 0828 01       		.uleb128 0x1
 6825 0829 9C       		.byte	0x9c
 6826 082a 6B080000 		.4byte	0x86b
 6827 082e 1B       		.uleb128 0x1b
 6828 082f 706C6C00 		.ascii	"pll\000"
 6829 0833 01       		.byte	0x1
 6830 0834 9E07     		.2byte	0x79e
 6831 0836 83000000 		.4byte	0x83
 6832 083a 02       		.uleb128 0x2
 6833 083b 91       		.byte	0x91
 6834 083c 64       		.sleb128 -28
 6835 083d 14       		.uleb128 0x14
 6836 083e 67070000 		.4byte	.LASF87
 6837 0842 01       		.byte	0x1
 6838 0843 A007     		.2byte	0x7a0
 6839 0845 83000000 		.4byte	0x83
 6840 0849 02       		.uleb128 0x2
 6841 084a 91       		.byte	0x91
 6842 084b 6C       		.sleb128 -20
 6843 084c 14       		.uleb128 0x14
 6844 084d A20A0000 		.4byte	.LASF47
 6845 0851 01       		.byte	0x1
 6846 0852 A107     		.2byte	0x7a1
 6847 0854 83000000 		.4byte	0x83
 6848 0858 02       		.uleb128 0x2
 6849 0859 91       		.byte	0x91
 6850 085a 70       		.sleb128 -16
 6851 085b 14       		.uleb128 0x14
 6852 085c B7060000 		.4byte	.LASF63
 6853 0860 01       		.byte	0x1
 6854 0861 A207     		.2byte	0x7a2
 6855 0863 B0000000 		.4byte	0xb0
 6856 0867 02       		.uleb128 0x2
 6857 0868 91       		.byte	0x91
 6858 0869 74       		.sleb128 -12
 6859 086a 00       		.byte	0
 6860 086b 18       		.uleb128 0x18
 6861 086c 43000000 		.4byte	.LASF88
 6862 0870 01       		.byte	0x1
 6863 0871 C707     		.2byte	0x7c7
ARM GAS  C:\Users\essele\AppData\Local\Temp\ccaJcTi8.s 			page 180


 6864 0873 83000000 		.4byte	0x83
 6865 0877 00000000 		.4byte	.LFB26
 6866 087b 74000000 		.4byte	.LFE26-.LFB26
 6867 087f 01       		.uleb128 0x1
 6868 0880 9C       		.byte	0x9c
 6869 0881 B3080000 		.4byte	0x8b3
 6870 0885 1B       		.uleb128 0x1b
 6871 0886 706C6C00 		.ascii	"pll\000"
 6872 088a 01       		.byte	0x1
 6873 088b C707     		.2byte	0x7c7
 6874 088d 83000000 		.4byte	0x83
 6875 0891 02       		.uleb128 0x2
 6876 0892 91       		.byte	0x91
 6877 0893 64       		.sleb128 -28
 6878 0894 14       		.uleb128 0x14
 6879 0895 9A000000 		.4byte	.LASF60
 6880 0899 01       		.byte	0x1
 6881 089a C907     		.2byte	0x7c9
 6882 089c 83000000 		.4byte	0x83
 6883 08a0 02       		.uleb128 0x2
 6884 08a1 91       		.byte	0x91
 6885 08a2 6C       		.sleb128 -20
 6886 08a3 14       		.uleb128 0x14
 6887 08a4 2B010000 		.4byte	.LASF31
 6888 08a8 01       		.byte	0x1
 6889 08a9 CA07     		.2byte	0x7ca
 6890 08ab 6B000000 		.4byte	0x6b
 6891 08af 02       		.uleb128 0x2
 6892 08b0 91       		.byte	0x91
 6893 08b1 6B       		.sleb128 -21
 6894 08b2 00       		.byte	0
 6895 08b3 18       		.uleb128 0x18
 6896 08b4 C4020000 		.4byte	.LASF89
 6897 08b8 01       		.byte	0x1
 6898 08b9 FB07     		.2byte	0x7fb
 6899 08bb B0000000 		.4byte	0xb0
 6900 08bf 00000000 		.4byte	.LFB27
 6901 08c3 6C010000 		.4byte	.LFE27-.LFB27
 6902 08c7 01       		.uleb128 0x1
 6903 08c8 9C       		.byte	0x9c
 6904 08c9 AB090000 		.4byte	0x9ab
 6905 08cd 1B       		.uleb128 0x1b
 6906 08ce 706C6C00 		.ascii	"pll\000"
 6907 08d2 01       		.byte	0x1
 6908 08d3 FB07     		.2byte	0x7fb
 6909 08d5 83000000 		.4byte	0x83
 6910 08d9 02       		.uleb128 0x2
 6911 08da 91       		.byte	0x91
 6912 08db 4C       		.sleb128 -52
 6913 08dc 17       		.uleb128 0x17
 6914 08dd A7030000 		.4byte	.LASF90
 6915 08e1 01       		.byte	0x1
 6916 08e2 FB07     		.2byte	0x7fb
 6917 08e4 83000000 		.4byte	0x83
 6918 08e8 02       		.uleb128 0x2
 6919 08e9 91       		.byte	0x91
 6920 08ea 48       		.sleb128 -56
ARM GAS  C:\Users\essele\AppData\Local\Temp\ccaJcTi8.s 			page 181


 6921 08eb 17       		.uleb128 0x17
 6922 08ec D4060000 		.4byte	.LASF91
 6923 08f0 01       		.byte	0x1
 6924 08f1 FB07     		.2byte	0x7fb
 6925 08f3 83000000 		.4byte	0x83
 6926 08f7 02       		.uleb128 0x2
 6927 08f8 91       		.byte	0x91
 6928 08f9 44       		.sleb128 -60
 6929 08fa 17       		.uleb128 0x17
 6930 08fb 56070000 		.4byte	.LASF49
 6931 08ff 01       		.byte	0x1
 6932 0900 FB07     		.2byte	0x7fb
 6933 0902 83000000 		.4byte	0x83
 6934 0906 02       		.uleb128 0x2
 6935 0907 91       		.byte	0x91
 6936 0908 40       		.sleb128 -64
 6937 0909 17       		.uleb128 0x17
 6938 090a 0E010000 		.4byte	.LASF92
 6939 090e 01       		.byte	0x1
 6940 090f FB07     		.2byte	0x7fb
 6941 0911 83000000 		.4byte	0x83
 6942 0915 02       		.uleb128 0x2
 6943 0916 91       		.byte	0x91
 6944 0917 00       		.sleb128 0
 6945 0918 14       		.uleb128 0x14
 6946 0919 78030000 		.4byte	.LASF93
 6947 091d 01       		.byte	0x1
 6948 091e FD07     		.2byte	0x7fd
 6949 0920 83000000 		.4byte	0x83
 6950 0924 02       		.uleb128 0x2
 6951 0925 91       		.byte	0x91
 6952 0926 60       		.sleb128 -32
 6953 0927 14       		.uleb128 0x14
 6954 0928 7B080000 		.4byte	.LASF94
 6955 092c 01       		.byte	0x1
 6956 092d FE07     		.2byte	0x7fe
 6957 092f 83000000 		.4byte	0x83
 6958 0933 02       		.uleb128 0x2
 6959 0934 91       		.byte	0x91
 6960 0935 5C       		.sleb128 -36
 6961 0936 14       		.uleb128 0x14
 6962 0937 DE030000 		.4byte	.LASF95
 6963 093b 01       		.byte	0x1
 6964 093c 0008     		.2byte	0x800
 6965 093e 83000000 		.4byte	0x83
 6966 0942 02       		.uleb128 0x2
 6967 0943 91       		.byte	0x91
 6968 0944 74       		.sleb128 -12
 6969 0945 14       		.uleb128 0x14
 6970 0946 4F080000 		.4byte	.LASF96
 6971 094a 01       		.byte	0x1
 6972 094b 0108     		.2byte	0x801
 6973 094d 83000000 		.4byte	0x83
 6974 0951 02       		.uleb128 0x2
 6975 0952 91       		.byte	0x91
 6976 0953 70       		.sleb128 -16
 6977 0954 13       		.uleb128 0x13
ARM GAS  C:\Users\essele\AppData\Local\Temp\ccaJcTi8.s 			page 182


 6978 0955 7100     		.ascii	"q\000"
 6979 0957 01       		.byte	0x1
 6980 0958 0308     		.2byte	0x803
 6981 095a 83000000 		.4byte	0x83
 6982 095e 02       		.uleb128 0x2
 6983 095f 91       		.byte	0x91
 6984 0960 6C       		.sleb128 -20
 6985 0961 13       		.uleb128 0x13
 6986 0962 7000     		.ascii	"p\000"
 6987 0964 01       		.byte	0x1
 6988 0965 0408     		.2byte	0x804
 6989 0967 83000000 		.4byte	0x83
 6990 096b 02       		.uleb128 0x2
 6991 096c 91       		.byte	0x91
 6992 096d 58       		.sleb128 -40
 6993 096e 14       		.uleb128 0x14
 6994 096f DE070000 		.4byte	.LASF97
 6995 0973 01       		.byte	0x1
 6996 0974 0608     		.2byte	0x806
 6997 0976 83000000 		.4byte	0x83
 6998 097a 02       		.uleb128 0x2
 6999 097b 91       		.byte	0x91
 7000 097c 54       		.sleb128 -44
 7001 097d 14       		.uleb128 0x14
 7002 097e CC000000 		.4byte	.LASF98
 7003 0982 01       		.byte	0x1
 7004 0983 0708     		.2byte	0x807
 7005 0985 8F000000 		.4byte	0x8f
 7006 0989 02       		.uleb128 0x2
 7007 098a 91       		.byte	0x91
 7008 098b 50       		.sleb128 -48
 7009 098c 13       		.uleb128 0x13
 7010 098d 746D7000 		.ascii	"tmp\000"
 7011 0991 01       		.byte	0x1
 7012 0992 0908     		.2byte	0x809
 7013 0994 B0000000 		.4byte	0xb0
 7014 0998 02       		.uleb128 0x2
 7015 0999 91       		.byte	0x91
 7016 099a 64       		.sleb128 -28
 7017 099b 14       		.uleb128 0x14
 7018 099c 9A000000 		.4byte	.LASF60
 7019 09a0 01       		.byte	0x1
 7020 09a1 0A08     		.2byte	0x80a
 7021 09a3 B0000000 		.4byte	0xb0
 7022 09a7 02       		.uleb128 0x2
 7023 09a8 91       		.byte	0x91
 7024 09a9 68       		.sleb128 -24
 7025 09aa 00       		.byte	0
 7026 09ab 16       		.uleb128 0x16
 7027 09ac 590A0000 		.4byte	.LASF99
 7028 09b0 01       		.byte	0x1
 7029 09b1 5C08     		.2byte	0x85c
 7030 09b3 00000000 		.4byte	.LFB28
 7031 09b7 7C000000 		.4byte	.LFE28-.LFB28
 7032 09bb 01       		.uleb128 0x1
 7033 09bc 9C       		.byte	0x9c
 7034 09bd FE090000 		.4byte	0x9fe
ARM GAS  C:\Users\essele\AppData\Local\Temp\ccaJcTi8.s 			page 183


 7035 09c1 1B       		.uleb128 0x1b
 7036 09c2 706C6C00 		.ascii	"pll\000"
 7037 09c6 01       		.byte	0x1
 7038 09c7 5C08     		.2byte	0x85c
 7039 09c9 83000000 		.4byte	0x83
 7040 09cd 02       		.uleb128 0x2
 7041 09ce 91       		.byte	0x91
 7042 09cf 64       		.sleb128 -28
 7043 09d0 17       		.uleb128 0x17
 7044 09d1 39080000 		.4byte	.LASF100
 7045 09d5 01       		.byte	0x1
 7046 09d6 5C08     		.2byte	0x85c
 7047 09d8 83000000 		.4byte	0x83
 7048 09dc 02       		.uleb128 0x2
 7049 09dd 91       		.byte	0x91
 7050 09de 60       		.sleb128 -32
 7051 09df 14       		.uleb128 0x14
 7052 09e0 53030000 		.4byte	.LASF32
 7053 09e4 01       		.byte	0x1
 7054 09e5 5E08     		.2byte	0x85e
 7055 09e7 83000000 		.4byte	0x83
 7056 09eb 02       		.uleb128 0x2
 7057 09ec 91       		.byte	0x91
 7058 09ed 68       		.sleb128 -24
 7059 09ee 14       		.uleb128 0x14
 7060 09ef 2B010000 		.4byte	.LASF31
 7061 09f3 01       		.byte	0x1
 7062 09f4 5F08     		.2byte	0x85f
 7063 09f6 6B000000 		.4byte	0x6b
 7064 09fa 02       		.uleb128 0x2
 7065 09fb 91       		.byte	0x91
 7066 09fc 6F       		.sleb128 -17
 7067 09fd 00       		.byte	0
 7068 09fe 18       		.uleb128 0x18
 7069 09ff 05060000 		.4byte	.LASF101
 7070 0a03 01       		.byte	0x1
 7071 0a04 9E08     		.2byte	0x89e
 7072 0a06 B0000000 		.4byte	0xb0
 7073 0a0a 00000000 		.4byte	.LFB29
 7074 0a0e 8C000000 		.4byte	.LFE29-.LFB29
 7075 0a12 01       		.uleb128 0x1
 7076 0a13 9C       		.byte	0x9c
 7077 0a14 730A0000 		.4byte	0xa73
 7078 0a18 1B       		.uleb128 0x1b
 7079 0a19 706C6C00 		.ascii	"pll\000"
 7080 0a1d 01       		.byte	0x1
 7081 0a1e 9E08     		.2byte	0x89e
 7082 0a20 83000000 		.4byte	0x83
 7083 0a24 02       		.uleb128 0x2
 7084 0a25 91       		.byte	0x91
 7085 0a26 5C       		.sleb128 -36
 7086 0a27 17       		.uleb128 0x17
 7087 0a28 56070000 		.4byte	.LASF49
 7088 0a2c 01       		.byte	0x1
 7089 0a2d 9E08     		.2byte	0x89e
 7090 0a2f 83000000 		.4byte	0x83
 7091 0a33 02       		.uleb128 0x2
ARM GAS  C:\Users\essele\AppData\Local\Temp\ccaJcTi8.s 			page 184


 7092 0a34 91       		.byte	0x91
 7093 0a35 58       		.sleb128 -40
 7094 0a36 14       		.uleb128 0x14
 7095 0a37 10070000 		.4byte	.LASF43
 7096 0a3b 01       		.byte	0x1
 7097 0a3c A008     		.2byte	0x8a0
 7098 0a3e 83000000 		.4byte	0x83
 7099 0a42 02       		.uleb128 0x2
 7100 0a43 91       		.byte	0x91
 7101 0a44 60       		.sleb128 -32
 7102 0a45 14       		.uleb128 0x14
 7103 0a46 2B010000 		.4byte	.LASF31
 7104 0a4a 01       		.byte	0x1
 7105 0a4b A108     		.2byte	0x8a1
 7106 0a4d 6B000000 		.4byte	0x6b
 7107 0a51 02       		.uleb128 0x2
 7108 0a52 91       		.byte	0x91
 7109 0a53 6B       		.sleb128 -21
 7110 0a54 14       		.uleb128 0x14
 7111 0a55 9A000000 		.4byte	.LASF60
 7112 0a59 01       		.byte	0x1
 7113 0a5a A208     		.2byte	0x8a2
 7114 0a5c B0000000 		.4byte	0xb0
 7115 0a60 02       		.uleb128 0x2
 7116 0a61 91       		.byte	0x91
 7117 0a62 6C       		.sleb128 -20
 7118 0a63 13       		.uleb128 0x13
 7119 0a64 746D7000 		.ascii	"tmp\000"
 7120 0a68 01       		.byte	0x1
 7121 0a69 A308     		.2byte	0x8a3
 7122 0a6b B0000000 		.4byte	0xb0
 7123 0a6f 02       		.uleb128 0x2
 7124 0a70 91       		.byte	0x91
 7125 0a71 64       		.sleb128 -28
 7126 0a72 00       		.byte	0
 7127 0a73 16       		.uleb128 0x16
 7128 0a74 E3010000 		.4byte	.LASF102
 7129 0a78 01       		.byte	0x1
 7130 0a79 DA08     		.2byte	0x8da
 7131 0a7b 00000000 		.4byte	.LFB30
 7132 0a7f 64000000 		.4byte	.LFE30-.LFB30
 7133 0a83 01       		.uleb128 0x1
 7134 0a84 9C       		.byte	0x9c
 7135 0a85 990A0000 		.4byte	0xa99
 7136 0a89 17       		.uleb128 0x17
 7137 0a8a 4F0A0000 		.4byte	.LASF103
 7138 0a8e 01       		.byte	0x1
 7139 0a8f DA08     		.2byte	0x8da
 7140 0a91 83000000 		.4byte	0x83
 7141 0a95 02       		.uleb128 0x2
 7142 0a96 91       		.byte	0x91
 7143 0a97 74       		.sleb128 -12
 7144 0a98 00       		.byte	0
 7145 0a99 19       		.uleb128 0x19
 7146 0a9a AF0A0000 		.4byte	.LASF104
 7147 0a9e 01       		.byte	0x1
 7148 0a9f F808     		.2byte	0x8f8
ARM GAS  C:\Users\essele\AppData\Local\Temp\ccaJcTi8.s 			page 185


 7149 0aa1 00000000 		.4byte	.LFB31
 7150 0aa5 2C000000 		.4byte	.LFE31-.LFB31
 7151 0aa9 01       		.uleb128 0x1
 7152 0aaa 9C       		.byte	0x9c
 7153 0aab 15       		.uleb128 0x15
 7154 0aac 10020000 		.4byte	.LASF105
 7155 0ab0 01       		.byte	0x1
 7156 0ab1 0A09     		.2byte	0x90a
 7157 0ab3 83000000 		.4byte	0x83
 7158 0ab7 00000000 		.4byte	.LFB32
 7159 0abb 18000000 		.4byte	.LFE32-.LFB32
 7160 0abf 01       		.uleb128 0x1
 7161 0ac0 9C       		.byte	0x9c
 7162 0ac1 19       		.uleb128 0x19
 7163 0ac2 DA080000 		.4byte	.LASF106
 7164 0ac6 01       		.byte	0x1
 7165 0ac7 1A09     		.2byte	0x91a
 7166 0ac9 00000000 		.4byte	.LFB33
 7167 0acd 14000000 		.4byte	.LFE33-.LFB33
 7168 0ad1 01       		.uleb128 0x1
 7169 0ad2 9C       		.byte	0x9c
 7170 0ad3 1A       		.uleb128 0x1a
 7171 0ad4 82050000 		.4byte	.LASF107
 7172 0ad8 01       		.byte	0x1
 7173 0ad9 3409     		.2byte	0x934
 7174 0adb 83000000 		.4byte	0x83
 7175 0adf 00000000 		.4byte	.LFB34
 7176 0ae3 30000000 		.4byte	.LFE34-.LFB34
 7177 0ae7 01       		.uleb128 0x1
 7178 0ae8 9C       		.byte	0x9c
 7179 0ae9 0C0B0000 		.4byte	0xb0c
 7180 0aed 17       		.uleb128 0x17
 7181 0aee FD020000 		.4byte	.LASF108
 7182 0af2 01       		.byte	0x1
 7183 0af3 3409     		.2byte	0x934
 7184 0af5 83000000 		.4byte	0x83
 7185 0af9 02       		.uleb128 0x2
 7186 0afa 91       		.byte	0x91
 7187 0afb 6C       		.sleb128 -20
 7188 0afc 14       		.uleb128 0x14
 7189 0afd 9A000000 		.4byte	.LASF60
 7190 0b01 01       		.byte	0x1
 7191 0b02 3609     		.2byte	0x936
 7192 0b04 83000000 		.4byte	0x83
 7193 0b08 02       		.uleb128 0x2
 7194 0b09 91       		.byte	0x91
 7195 0b0a 74       		.sleb128 -12
 7196 0b0b 00       		.byte	0
 7197 0b0c 1A       		.uleb128 0x1a
 7198 0b0d F0060000 		.4byte	.LASF109
 7199 0b11 01       		.byte	0x1
 7200 0b12 4B09     		.2byte	0x94b
 7201 0b14 83000000 		.4byte	0x83
 7202 0b18 00000000 		.4byte	.LFB35
 7203 0b1c 24000000 		.4byte	.LFE35-.LFB35
 7204 0b20 01       		.uleb128 0x1
 7205 0b21 9C       		.byte	0x9c
ARM GAS  C:\Users\essele\AppData\Local\Temp\ccaJcTi8.s 			page 186


 7206 0b22 360B0000 		.4byte	0xb36
 7207 0b26 14       		.uleb128 0x14
 7208 0b27 FD030000 		.4byte	.LASF110
 7209 0b2b 01       		.byte	0x1
 7210 0b2c 4D09     		.2byte	0x94d
 7211 0b2e 83000000 		.4byte	0x83
 7212 0b32 02       		.uleb128 0x2
 7213 0b33 91       		.byte	0x91
 7214 0b34 74       		.sleb128 -12
 7215 0b35 00       		.byte	0
 7216 0b36 12       		.uleb128 0x12
 7217 0b37 4A020000 		.4byte	.LASF111
 7218 0b3b 01       		.byte	0x1
 7219 0b3c 6209     		.2byte	0x962
 7220 0b3e 00000000 		.4byte	.LFB36
 7221 0b42 1C000000 		.4byte	.LFE36-.LFB36
 7222 0b46 01       		.uleb128 0x1
 7223 0b47 9C       		.byte	0x9c
 7224 0b48 5C0B0000 		.4byte	0xb5c
 7225 0b4c 17       		.uleb128 0x17
 7226 0b4d 95060000 		.4byte	.LASF112
 7227 0b51 01       		.byte	0x1
 7228 0b52 6209     		.2byte	0x962
 7229 0b54 83000000 		.4byte	0x83
 7230 0b58 02       		.uleb128 0x2
 7231 0b59 91       		.byte	0x91
 7232 0b5a 74       		.sleb128 -12
 7233 0b5b 00       		.byte	0
 7234 0b5c 18       		.uleb128 0x18
 7235 0b5d 8F070000 		.4byte	.LASF113
 7236 0b61 01       		.byte	0x1
 7237 0b62 7B09     		.2byte	0x97b
 7238 0b64 DE000000 		.4byte	0xde
 7239 0b68 00000000 		.4byte	.LFB37
 7240 0b6c 48000000 		.4byte	.LFE37-.LFB37
 7241 0b70 01       		.uleb128 0x1
 7242 0b71 9C       		.byte	0x9c
 7243 0b72 B30B0000 		.4byte	0xbb3
 7244 0b76 17       		.uleb128 0x17
 7245 0b77 40080000 		.4byte	.LASF114
 7246 0b7b 01       		.byte	0x1
 7247 0b7c 7B09     		.2byte	0x97b
 7248 0b7e 6B000000 		.4byte	0x6b
 7249 0b82 02       		.uleb128 0x2
 7250 0b83 91       		.byte	0x91
 7251 0b84 6F       		.sleb128 -17
 7252 0b85 17       		.uleb128 0x17
 7253 0b86 6A050000 		.4byte	.LASF115
 7254 0b8a 01       		.byte	0x1
 7255 0b8b 7B09     		.2byte	0x97b
 7256 0b8d DE000000 		.4byte	0xde
 7257 0b91 02       		.uleb128 0x2
 7258 0b92 91       		.byte	0x91
 7259 0b93 68       		.sleb128 -24
 7260 0b94 14       		.uleb128 0x14
 7261 0b95 C6030000 		.4byte	.LASF116
 7262 0b99 01       		.byte	0x1
ARM GAS  C:\Users\essele\AppData\Local\Temp\ccaJcTi8.s 			page 187


 7263 0b9a 7D09     		.2byte	0x97d
 7264 0b9c DE000000 		.4byte	0xde
 7265 0ba0 02       		.uleb128 0x2
 7266 0ba1 91       		.byte	0x91
 7267 0ba2 70       		.sleb128 -16
 7268 0ba3 14       		.uleb128 0x14
 7269 0ba4 5A090000 		.4byte	.LASF117
 7270 0ba8 01       		.byte	0x1
 7271 0ba9 7E09     		.2byte	0x97e
 7272 0bab B30B0000 		.4byte	0xbb3
 7273 0baf 02       		.uleb128 0x2
 7274 0bb0 91       		.byte	0x91
 7275 0bb1 74       		.sleb128 -12
 7276 0bb2 00       		.byte	0
 7277 0bb3 06       		.uleb128 0x6
 7278 0bb4 04       		.byte	0x4
 7279 0bb5 DE000000 		.4byte	0xde
 7280 0bb9 18       		.uleb128 0x18
 7281 0bba B5050000 		.4byte	.LASF118
 7282 0bbe 01       		.byte	0x1
 7283 0bbf 9D09     		.2byte	0x99d
 7284 0bc1 DE000000 		.4byte	0xde
 7285 0bc5 00000000 		.4byte	.LFB38
 7286 0bc9 34000000 		.4byte	.LFE38-.LFB38
 7287 0bcd 01       		.uleb128 0x1
 7288 0bce 9C       		.byte	0x9c
 7289 0bcf F20B0000 		.4byte	0xbf2
 7290 0bd3 17       		.uleb128 0x17
 7291 0bd4 40080000 		.4byte	.LASF114
 7292 0bd8 01       		.byte	0x1
 7293 0bd9 9D09     		.2byte	0x99d
 7294 0bdb 6B000000 		.4byte	0x6b
 7295 0bdf 02       		.uleb128 0x2
 7296 0be0 91       		.byte	0x91
 7297 0be1 6F       		.sleb128 -17
 7298 0be2 14       		.uleb128 0x14
 7299 0be3 5A090000 		.4byte	.LASF117
 7300 0be7 01       		.byte	0x1
 7301 0be8 9F09     		.2byte	0x99f
 7302 0bea B30B0000 		.4byte	0xbb3
 7303 0bee 02       		.uleb128 0x2
 7304 0bef 91       		.byte	0x91
 7305 0bf0 74       		.sleb128 -12
 7306 0bf1 00       		.byte	0
 7307 0bf2 18       		.uleb128 0x18
 7308 0bf3 91040000 		.4byte	.LASF119
 7309 0bf7 01       		.byte	0x1
 7310 0bf8 B309     		.2byte	0x9b3
 7311 0bfa DE000000 		.4byte	0xde
 7312 0bfe 00000000 		.4byte	.LFB39
 7313 0c02 4C000000 		.4byte	.LFE39-.LFB39
 7314 0c06 01       		.uleb128 0x1
 7315 0c07 9C       		.byte	0x9c
 7316 0c08 490C0000 		.4byte	0xc49
 7317 0c0c 17       		.uleb128 0x17
 7318 0c0d 40080000 		.4byte	.LASF114
 7319 0c11 01       		.byte	0x1
ARM GAS  C:\Users\essele\AppData\Local\Temp\ccaJcTi8.s 			page 188


 7320 0c12 B309     		.2byte	0x9b3
 7321 0c14 6B000000 		.4byte	0x6b
 7322 0c18 02       		.uleb128 0x2
 7323 0c19 91       		.byte	0x91
 7324 0c1a 6F       		.sleb128 -17
 7325 0c1b 17       		.uleb128 0x17
 7326 0c1c 6A050000 		.4byte	.LASF115
 7327 0c20 01       		.byte	0x1
 7328 0c21 B309     		.2byte	0x9b3
 7329 0c23 DE000000 		.4byte	0xde
 7330 0c27 02       		.uleb128 0x2
 7331 0c28 91       		.byte	0x91
 7332 0c29 68       		.sleb128 -24
 7333 0c2a 14       		.uleb128 0x14
 7334 0c2b C6030000 		.4byte	.LASF116
 7335 0c2f 01       		.byte	0x1
 7336 0c30 B509     		.2byte	0x9b5
 7337 0c32 DE000000 		.4byte	0xde
 7338 0c36 02       		.uleb128 0x2
 7339 0c37 91       		.byte	0x91
 7340 0c38 70       		.sleb128 -16
 7341 0c39 14       		.uleb128 0x14
 7342 0c3a 5A090000 		.4byte	.LASF117
 7343 0c3e 01       		.byte	0x1
 7344 0c3f B609     		.2byte	0x9b6
 7345 0c41 B30B0000 		.4byte	0xbb3
 7346 0c45 02       		.uleb128 0x2
 7347 0c46 91       		.byte	0x91
 7348 0c47 74       		.sleb128 -12
 7349 0c48 00       		.byte	0
 7350 0c49 18       		.uleb128 0x18
 7351 0c4a 0C000000 		.4byte	.LASF120
 7352 0c4e 01       		.byte	0x1
 7353 0c4f CF09     		.2byte	0x9cf
 7354 0c51 DE000000 		.4byte	0xde
 7355 0c55 00000000 		.4byte	.LFB40
 7356 0c59 36000000 		.4byte	.LFE40-.LFB40
 7357 0c5d 01       		.uleb128 0x1
 7358 0c5e 9C       		.byte	0x9c
 7359 0c5f 820C0000 		.4byte	0xc82
 7360 0c63 17       		.uleb128 0x17
 7361 0c64 40080000 		.4byte	.LASF114
 7362 0c68 01       		.byte	0x1
 7363 0c69 CF09     		.2byte	0x9cf
 7364 0c6b 6B000000 		.4byte	0x6b
 7365 0c6f 02       		.uleb128 0x2
 7366 0c70 91       		.byte	0x91
 7367 0c71 6F       		.sleb128 -17
 7368 0c72 14       		.uleb128 0x14
 7369 0c73 5A090000 		.4byte	.LASF117
 7370 0c77 01       		.byte	0x1
 7371 0c78 D109     		.2byte	0x9d1
 7372 0c7a B30B0000 		.4byte	0xbb3
 7373 0c7e 02       		.uleb128 0x2
 7374 0c7f 91       		.byte	0x91
 7375 0c80 74       		.sleb128 -12
 7376 0c81 00       		.byte	0
ARM GAS  C:\Users\essele\AppData\Local\Temp\ccaJcTi8.s 			page 189


 7377 0c82 16       		.uleb128 0x16
 7378 0c83 32000000 		.4byte	.LASF121
 7379 0c87 01       		.byte	0x1
 7380 0c88 E209     		.2byte	0x9e2
 7381 0c8a 00000000 		.4byte	.LFB41
 7382 0c8e A8000000 		.4byte	.LFE41-.LFB41
 7383 0c92 01       		.uleb128 0x1
 7384 0c93 9C       		.byte	0x9c
 7385 0c94 E40C0000 		.4byte	0xce4
 7386 0c98 17       		.uleb128 0x17
 7387 0c99 40080000 		.4byte	.LASF114
 7388 0c9d 01       		.byte	0x1
 7389 0c9e E209     		.2byte	0x9e2
 7390 0ca0 6B000000 		.4byte	0x6b
 7391 0ca4 02       		.uleb128 0x2
 7392 0ca5 91       		.byte	0x91
 7393 0ca6 5F       		.sleb128 -33
 7394 0ca7 17       		.uleb128 0x17
 7395 0ca8 C2070000 		.4byte	.LASF122
 7396 0cac 01       		.byte	0x1
 7397 0cad E209     		.2byte	0x9e2
 7398 0caf 6B000000 		.4byte	0x6b
 7399 0cb3 02       		.uleb128 0x2
 7400 0cb4 91       		.byte	0x91
 7401 0cb5 5E       		.sleb128 -34
 7402 0cb6 14       		.uleb128 0x14
 7403 0cb7 2B010000 		.4byte	.LASF31
 7404 0cbb 01       		.byte	0x1
 7405 0cbc E409     		.2byte	0x9e4
 7406 0cbe 6B000000 		.4byte	0x6b
 7407 0cc2 02       		.uleb128 0x2
 7408 0cc3 91       		.byte	0x91
 7409 0cc4 6B       		.sleb128 -21
 7410 0cc5 14       		.uleb128 0x14
 7411 0cc6 A5020000 		.4byte	.LASF123
 7412 0cca 01       		.byte	0x1
 7413 0ccb E509     		.2byte	0x9e5
 7414 0ccd 83000000 		.4byte	0x83
 7415 0cd1 02       		.uleb128 0x2
 7416 0cd2 91       		.byte	0x91
 7417 0cd3 6C       		.sleb128 -20
 7418 0cd4 14       		.uleb128 0x14
 7419 0cd5 5A030000 		.4byte	.LASF124
 7420 0cd9 01       		.byte	0x1
 7421 0cda E609     		.2byte	0x9e6
 7422 0cdc 83000000 		.4byte	0x83
 7423 0ce0 02       		.uleb128 0x2
 7424 0ce1 91       		.byte	0x91
 7425 0ce2 64       		.sleb128 -28
 7426 0ce3 00       		.byte	0
 7427 0ce4 18       		.uleb128 0x18
 7428 0ce5 5E000000 		.4byte	.LASF125
 7429 0ce9 01       		.byte	0x1
 7430 0cea 040A     		.2byte	0xa04
 7431 0cec 6B000000 		.4byte	0x6b
 7432 0cf0 00000000 		.4byte	.LFB42
 7433 0cf4 58000000 		.4byte	.LFE42-.LFB42
ARM GAS  C:\Users\essele\AppData\Local\Temp\ccaJcTi8.s 			page 190


 7434 0cf8 01       		.uleb128 0x1
 7435 0cf9 9C       		.byte	0x9c
 7436 0cfa 1D0D0000 		.4byte	0xd1d
 7437 0cfe 17       		.uleb128 0x17
 7438 0cff 40080000 		.4byte	.LASF114
 7439 0d03 01       		.byte	0x1
 7440 0d04 040A     		.2byte	0xa04
 7441 0d06 6B000000 		.4byte	0x6b
 7442 0d0a 02       		.uleb128 0x2
 7443 0d0b 91       		.byte	0x91
 7444 0d0c 6F       		.sleb128 -17
 7445 0d0d 14       		.uleb128 0x14
 7446 0d0e C2070000 		.4byte	.LASF122
 7447 0d12 01       		.byte	0x1
 7448 0d13 060A     		.2byte	0xa06
 7449 0d15 6B000000 		.4byte	0x6b
 7450 0d19 02       		.uleb128 0x2
 7451 0d1a 91       		.byte	0x91
 7452 0d1b 77       		.sleb128 -9
 7453 0d1c 00       		.byte	0
 7454 0d1d 12       		.uleb128 0x12
 7455 0d1e 430A0000 		.4byte	.LASF126
 7456 0d22 01       		.byte	0x1
 7457 0d23 190A     		.2byte	0xa19
 7458 0d25 00000000 		.4byte	.LFB43
 7459 0d29 2C000000 		.4byte	.LFE43-.LFB43
 7460 0d2d 01       		.uleb128 0x1
 7461 0d2e 9C       		.byte	0x9c
 7462 0d2f 430D0000 		.4byte	0xd43
 7463 0d33 17       		.uleb128 0x17
 7464 0d34 40080000 		.4byte	.LASF114
 7465 0d38 01       		.byte	0x1
 7466 0d39 190A     		.2byte	0xa19
 7467 0d3b 6B000000 		.4byte	0x6b
 7468 0d3f 02       		.uleb128 0x2
 7469 0d40 91       		.byte	0x91
 7470 0d41 77       		.sleb128 -9
 7471 0d42 00       		.byte	0
 7472 0d43 1A       		.uleb128 0x1a
 7473 0d44 8B030000 		.4byte	.LASF127
 7474 0d48 01       		.byte	0x1
 7475 0d49 2B0A     		.2byte	0xa2b
 7476 0d4b 6B000000 		.4byte	0x6b
 7477 0d4f 00000000 		.4byte	.LFB44
 7478 0d53 30000000 		.4byte	.LFE44-.LFB44
 7479 0d57 01       		.uleb128 0x1
 7480 0d58 9C       		.byte	0x9c
 7481 0d59 6D0D0000 		.4byte	0xd6d
 7482 0d5d 17       		.uleb128 0x17
 7483 0d5e 40080000 		.4byte	.LASF114
 7484 0d62 01       		.byte	0x1
 7485 0d63 2B0A     		.2byte	0xa2b
 7486 0d65 6B000000 		.4byte	0x6b
 7487 0d69 02       		.uleb128 0x2
 7488 0d6a 91       		.byte	0x91
 7489 0d6b 77       		.sleb128 -9
 7490 0d6c 00       		.byte	0
ARM GAS  C:\Users\essele\AppData\Local\Temp\ccaJcTi8.s 			page 191


 7491 0d6d 12       		.uleb128 0x12
 7492 0d6e F2010000 		.4byte	.LASF128
 7493 0d72 01       		.byte	0x1
 7494 0d73 3B0A     		.2byte	0xa3b
 7495 0d75 00000000 		.4byte	.LFB45
 7496 0d79 2C000000 		.4byte	.LFE45-.LFB45
 7497 0d7d 01       		.uleb128 0x1
 7498 0d7e 9C       		.byte	0x9c
 7499 0d7f 930D0000 		.4byte	0xd93
 7500 0d83 17       		.uleb128 0x17
 7501 0d84 40080000 		.4byte	.LASF114
 7502 0d88 01       		.byte	0x1
 7503 0d89 3B0A     		.2byte	0xa3b
 7504 0d8b 6B000000 		.4byte	0x6b
 7505 0d8f 02       		.uleb128 0x2
 7506 0d90 91       		.byte	0x91
 7507 0d91 77       		.sleb128 -9
 7508 0d92 00       		.byte	0
 7509 0d93 12       		.uleb128 0x12
 7510 0d94 E3030000 		.4byte	.LASF129
 7511 0d98 01       		.byte	0x1
 7512 0d99 490A     		.2byte	0xa49
 7513 0d9b 00000000 		.4byte	.LFB46
 7514 0d9f 2C000000 		.4byte	.LFE46-.LFB46
 7515 0da3 01       		.uleb128 0x1
 7516 0da4 9C       		.byte	0x9c
 7517 0da5 B90D0000 		.4byte	0xdb9
 7518 0da9 17       		.uleb128 0x17
 7519 0daa 40080000 		.4byte	.LASF114
 7520 0dae 01       		.byte	0x1
 7521 0daf 490A     		.2byte	0xa49
 7522 0db1 6B000000 		.4byte	0x6b
 7523 0db5 02       		.uleb128 0x2
 7524 0db6 91       		.byte	0x91
 7525 0db7 77       		.sleb128 -9
 7526 0db8 00       		.byte	0
 7527 0db9 12       		.uleb128 0x12
 7528 0dba 2B040000 		.4byte	.LASF130
 7529 0dbe 01       		.byte	0x1
 7530 0dbf 580A     		.2byte	0xa58
 7531 0dc1 00000000 		.4byte	.LFB47
 7532 0dc5 2C000000 		.4byte	.LFE47-.LFB47
 7533 0dc9 01       		.uleb128 0x1
 7534 0dca 9C       		.byte	0x9c
 7535 0dcb DF0D0000 		.4byte	0xddf
 7536 0dcf 17       		.uleb128 0x17
 7537 0dd0 40080000 		.4byte	.LASF114
 7538 0dd4 01       		.byte	0x1
 7539 0dd5 580A     		.2byte	0xa58
 7540 0dd7 6B000000 		.4byte	0x6b
 7541 0ddb 02       		.uleb128 0x2
 7542 0ddc 91       		.byte	0x91
 7543 0ddd 77       		.sleb128 -9
 7544 0dde 00       		.byte	0
 7545 0ddf 12       		.uleb128 0x12
 7546 0de0 04030000 		.4byte	.LASF131
 7547 0de4 01       		.byte	0x1
ARM GAS  C:\Users\essele\AppData\Local\Temp\ccaJcTi8.s 			page 192


 7548 0de5 670A     		.2byte	0xa67
 7549 0de7 00000000 		.4byte	.LFB48
 7550 0deb 16000000 		.4byte	.LFE48-.LFB48
 7551 0def 01       		.uleb128 0x1
 7552 0df0 9C       		.byte	0x9c
 7553 0df1 050E0000 		.4byte	0xe05
 7554 0df5 17       		.uleb128 0x17
 7555 0df6 FD020000 		.4byte	.LASF108
 7556 0dfa 01       		.byte	0x1
 7557 0dfb 670A     		.2byte	0xa67
 7558 0dfd 6B000000 		.4byte	0x6b
 7559 0e01 02       		.uleb128 0x2
 7560 0e02 91       		.byte	0x91
 7561 0e03 77       		.sleb128 -9
 7562 0e04 00       		.byte	0
 7563 0e05 19       		.uleb128 0x19
 7564 0e06 09090000 		.4byte	.LASF132
 7565 0e0a 01       		.byte	0x1
 7566 0e0b 7F0A     		.2byte	0xa7f
 7567 0e0d 00000000 		.4byte	.LFB49
 7568 0e11 24000000 		.4byte	.LFE49-.LFB49
 7569 0e15 01       		.uleb128 0x1
 7570 0e16 9C       		.byte	0x9c
 7571 0e17 16       		.uleb128 0x16
 7572 0e18 2A000000 		.4byte	.LASF133
 7573 0e1c 01       		.byte	0x1
 7574 0e1d 930A     		.2byte	0xa93
 7575 0e1f 00000000 		.4byte	.LFB50
 7576 0e23 4C000000 		.4byte	.LFE50-.LFB50
 7577 0e27 01       		.uleb128 0x1
 7578 0e28 9C       		.byte	0x9c
 7579 0e29 3D0E0000 		.4byte	0xe3d
 7580 0e2d 17       		.uleb128 0x17
 7581 0e2e 8D000000 		.4byte	.LASF134
 7582 0e32 01       		.byte	0x1
 7583 0e33 930A     		.2byte	0xa93
 7584 0e35 83000000 		.4byte	0x83
 7585 0e39 02       		.uleb128 0x2
 7586 0e3a 91       		.byte	0x91
 7587 0e3b 74       		.sleb128 -12
 7588 0e3c 00       		.byte	0
 7589 0e3d 16       		.uleb128 0x16
 7590 0e3e DC020000 		.4byte	.LASF135
 7591 0e42 01       		.byte	0x1
 7592 0e43 AA0A     		.2byte	0xaaa
 7593 0e45 00000000 		.4byte	.LFB51
 7594 0e49 28000000 		.4byte	.LFE51-.LFB51
 7595 0e4d 01       		.uleb128 0x1
 7596 0e4e 9C       		.byte	0x9c
 7597 0e4f 630E0000 		.4byte	0xe63
 7598 0e53 17       		.uleb128 0x17
 7599 0e54 9E090000 		.4byte	.LASF136
 7600 0e58 01       		.byte	0x1
 7601 0e59 AA0A     		.2byte	0xaaa
 7602 0e5b 77000000 		.4byte	0x77
 7603 0e5f 02       		.uleb128 0x2
 7604 0e60 91       		.byte	0x91
ARM GAS  C:\Users\essele\AppData\Local\Temp\ccaJcTi8.s 			page 193


 7605 0e61 76       		.sleb128 -10
 7606 0e62 00       		.byte	0
 7607 0e63 16       		.uleb128 0x16
 7608 0e64 57020000 		.4byte	.LASF137
 7609 0e68 01       		.byte	0x1
 7610 0e69 B80A     		.2byte	0xab8
 7611 0e6b 00000000 		.4byte	.LFB52
 7612 0e6f 84000000 		.4byte	.LFE52-.LFB52
 7613 0e73 01       		.uleb128 0x1
 7614 0e74 9C       		.byte	0x9c
 7615 0e75 890E0000 		.4byte	0xe89
 7616 0e79 17       		.uleb128 0x17
 7617 0e7a 0D040000 		.4byte	.LASF30
 7618 0e7e 01       		.byte	0x1
 7619 0e7f B80A     		.2byte	0xab8
 7620 0e81 83000000 		.4byte	0x83
 7621 0e85 02       		.uleb128 0x2
 7622 0e86 91       		.byte	0x91
 7623 0e87 74       		.sleb128 -12
 7624 0e88 00       		.byte	0
 7625 0e89 1D       		.uleb128 0x1d
 7626 0e8a 6C060000 		.4byte	.LASF138
 7627 0e8e 01       		.byte	0x1
 7628 0e8f D80A     		.2byte	0xad8
 7629 0e91 00000000 		.4byte	.LFB53
 7630 0e95 24000000 		.4byte	.LFE53-.LFB53
 7631 0e99 01       		.uleb128 0x1
 7632 0e9a 9C       		.byte	0x9c
 7633 0e9b 16       		.uleb128 0x16
 7634 0e9c 54080000 		.4byte	.LASF139
 7635 0ea0 01       		.byte	0x1
 7636 0ea1 F50A     		.2byte	0xaf5
 7637 0ea3 00000000 		.4byte	.LFB54
 7638 0ea7 60000000 		.4byte	.LFE54-.LFB54
 7639 0eab 01       		.uleb128 0x1
 7640 0eac 9C       		.byte	0x9c
 7641 0ead BF0E0000 		.4byte	0xebf
 7642 0eb1 13       		.uleb128 0x13
 7643 0eb2 6900     		.ascii	"i\000"
 7644 0eb4 01       		.byte	0x1
 7645 0eb5 F70A     		.2byte	0xaf7
 7646 0eb7 83000000 		.4byte	0x83
 7647 0ebb 02       		.uleb128 0x2
 7648 0ebc 91       		.byte	0x91
 7649 0ebd 74       		.sleb128 -12
 7650 0ebe 00       		.byte	0
 7651 0ebf 1D       		.uleb128 0x1d
 7652 0ec0 72050000 		.4byte	.LASF140
 7653 0ec4 01       		.byte	0x1
 7654 0ec5 130B     		.2byte	0xb13
 7655 0ec7 00000000 		.4byte	.LFB55
 7656 0ecb 20000000 		.4byte	.LFE55-.LFB55
 7657 0ecf 01       		.uleb128 0x1
 7658 0ed0 9C       		.byte	0x9c
 7659 0ed1 19       		.uleb128 0x19
 7660 0ed2 7D030000 		.4byte	.LASF141
 7661 0ed6 01       		.byte	0x1
ARM GAS  C:\Users\essele\AppData\Local\Temp\ccaJcTi8.s 			page 194


 7662 0ed7 240B     		.2byte	0xb24
 7663 0ed9 00000000 		.4byte	.LFB56
 7664 0edd 1C000000 		.4byte	.LFE56-.LFB56
 7665 0ee1 01       		.uleb128 0x1
 7666 0ee2 9C       		.byte	0x9c
 7667 0ee3 19       		.uleb128 0x19
 7668 0ee4 BC090000 		.4byte	.LASF142
 7669 0ee8 01       		.byte	0x1
 7670 0ee9 340B     		.2byte	0xb34
 7671 0eeb 00000000 		.4byte	.LFB57
 7672 0eef 1C000000 		.4byte	.LFE57-.LFB57
 7673 0ef3 01       		.uleb128 0x1
 7674 0ef4 9C       		.byte	0x9c
 7675 0ef5 19       		.uleb128 0x19
 7676 0ef6 FA070000 		.4byte	.LASF143
 7677 0efa 01       		.byte	0x1
 7678 0efb 440B     		.2byte	0xb44
 7679 0efd 00000000 		.4byte	.LFB58
 7680 0f01 1C000000 		.4byte	.LFE58-.LFB58
 7681 0f05 01       		.uleb128 0x1
 7682 0f06 9C       		.byte	0x9c
 7683 0f07 12       		.uleb128 0x12
 7684 0f08 39070000 		.4byte	.LASF144
 7685 0f0c 01       		.byte	0x1
 7686 0f0d 550B     		.2byte	0xb55
 7687 0f0f 00000000 		.4byte	.LFB59
 7688 0f13 20000000 		.4byte	.LFE59-.LFB59
 7689 0f17 01       		.uleb128 0x1
 7690 0f18 9C       		.byte	0x9c
 7691 0f19 2D0F0000 		.4byte	0xf2d
 7692 0f1d 17       		.uleb128 0x17
 7693 0f1e 5A030000 		.4byte	.LASF124
 7694 0f22 01       		.byte	0x1
 7695 0f23 550B     		.2byte	0xb55
 7696 0f25 83000000 		.4byte	0x83
 7697 0f29 02       		.uleb128 0x2
 7698 0f2a 91       		.byte	0x91
 7699 0f2b 74       		.sleb128 -12
 7700 0f2c 00       		.byte	0
 7701 0f2d 15       		.uleb128 0x15
 7702 0f2e B1020000 		.4byte	.LASF145
 7703 0f32 01       		.byte	0x1
 7704 0f33 650B     		.2byte	0xb65
 7705 0f35 83000000 		.4byte	0x83
 7706 0f39 00000000 		.4byte	.LFB60
 7707 0f3d 18000000 		.4byte	.LFE60-.LFB60
 7708 0f41 01       		.uleb128 0x1
 7709 0f42 9C       		.byte	0x9c
 7710 0f43 15       		.uleb128 0x15
 7711 0f44 DA050000 		.4byte	.LASF146
 7712 0f48 01       		.byte	0x1
 7713 0f49 750B     		.2byte	0xb75
 7714 0f4b 83000000 		.4byte	0x83
 7715 0f4f 00000000 		.4byte	.LFB61
 7716 0f53 18000000 		.4byte	.LFE61-.LFB61
 7717 0f57 01       		.uleb128 0x1
 7718 0f58 9C       		.byte	0x9c
ARM GAS  C:\Users\essele\AppData\Local\Temp\ccaJcTi8.s 			page 195


 7719 0f59 12       		.uleb128 0x12
 7720 0f5a 9A060000 		.4byte	.LASF147
 7721 0f5e 01       		.byte	0x1
 7722 0f5f 950B     		.2byte	0xb95
 7723 0f61 00000000 		.4byte	.LFB62
 7724 0f65 34000000 		.4byte	.LFE62-.LFB62
 7725 0f69 01       		.uleb128 0x1
 7726 0f6a 9C       		.byte	0x9c
 7727 0f6b 7F0F0000 		.4byte	0xf7f
 7728 0f6f 17       		.uleb128 0x17
 7729 0f70 04070000 		.4byte	.LASF148
 7730 0f74 01       		.byte	0x1
 7731 0f75 950B     		.2byte	0xb95
 7732 0f77 83000000 		.4byte	0x83
 7733 0f7b 02       		.uleb128 0x2
 7734 0f7c 91       		.byte	0x91
 7735 0f7d 74       		.sleb128 -12
 7736 0f7e 00       		.byte	0
 7737 0f7f 15       		.uleb128 0x15
 7738 0f80 F1080000 		.4byte	.LASF149
 7739 0f84 01       		.byte	0x1
 7740 0f85 AE0B     		.2byte	0xbae
 7741 0f87 83000000 		.4byte	0x83
 7742 0f8b 00000000 		.4byte	.LFB63
 7743 0f8f 18000000 		.4byte	.LFE63-.LFB63
 7744 0f93 01       		.uleb128 0x1
 7745 0f94 9C       		.byte	0x9c
 7746 0f95 15       		.uleb128 0x15
 7747 0f96 42040000 		.4byte	.LASF150
 7748 0f9a 01       		.byte	0x1
 7749 0f9b C50B     		.2byte	0xbc5
 7750 0f9d 83000000 		.4byte	0x83
 7751 0fa1 00000000 		.4byte	.LFB64
 7752 0fa5 18000000 		.4byte	.LFE64-.LFB64
 7753 0fa9 01       		.uleb128 0x1
 7754 0faa 9C       		.byte	0x9c
 7755 0fab 19       		.uleb128 0x19
 7756 0fac 1B000000 		.4byte	.LASF151
 7757 0fb0 01       		.byte	0x1
 7758 0fb1 D20B     		.2byte	0xbd2
 7759 0fb3 00000000 		.4byte	.LFB65
 7760 0fb7 14000000 		.4byte	.LFE65-.LFB65
 7761 0fbb 01       		.uleb128 0x1
 7762 0fbc 9C       		.byte	0x9c
 7763 0fbd 1A       		.uleb128 0x1a
 7764 0fbe 35020000 		.4byte	.LASF152
 7765 0fc2 01       		.byte	0x1
 7766 0fc3 F50B     		.2byte	0xbf5
 7767 0fc5 FF000000 		.4byte	0xff
 7768 0fc9 00000000 		.4byte	.LFB66
 7769 0fcd 2C000000 		.4byte	.LFE66-.LFB66
 7770 0fd1 01       		.uleb128 0x1
 7771 0fd2 9C       		.byte	0x9c
 7772 0fd3 05100000 		.4byte	0x1005
 7773 0fd7 17       		.uleb128 0x17
 7774 0fd8 40080000 		.4byte	.LASF114
 7775 0fdc 01       		.byte	0x1
ARM GAS  C:\Users\essele\AppData\Local\Temp\ccaJcTi8.s 			page 196


 7776 0fdd F50B     		.2byte	0xbf5
 7777 0fdf 83000000 		.4byte	0x83
 7778 0fe3 02       		.uleb128 0x2
 7779 0fe4 91       		.byte	0x91
 7780 0fe5 6C       		.sleb128 -20
 7781 0fe6 17       		.uleb128 0x17
 7782 0fe7 77090000 		.4byte	.LASF153
 7783 0feb 01       		.byte	0x1
 7784 0fec F50B     		.2byte	0xbf5
 7785 0fee FF000000 		.4byte	0xff
 7786 0ff2 02       		.uleb128 0x2
 7787 0ff3 91       		.byte	0x91
 7788 0ff4 68       		.sleb128 -24
 7789 0ff5 14       		.uleb128 0x14
 7790 0ff6 CD080000 		.4byte	.LASF154
 7791 0ffa 01       		.byte	0x1
 7792 0ffb F70B     		.2byte	0xbf7
 7793 0ffd FF000000 		.4byte	0xff
 7794 1001 02       		.uleb128 0x2
 7795 1002 91       		.byte	0x91
 7796 1003 74       		.sleb128 -12
 7797 1004 00       		.byte	0
 7798 1005 1A       		.uleb128 0x1a
 7799 1006 B1030000 		.4byte	.LASF155
 7800 100a 01       		.byte	0x1
 7801 100b 0D0C     		.2byte	0xc0d
 7802 100d FF000000 		.4byte	0xff
 7803 1011 00000000 		.4byte	.LFB67
 7804 1015 1C000000 		.4byte	.LFE67-.LFB67
 7805 1019 01       		.uleb128 0x1
 7806 101a 9C       		.byte	0x9c
 7807 101b 2F100000 		.4byte	0x102f
 7808 101f 17       		.uleb128 0x17
 7809 1020 40080000 		.4byte	.LASF114
 7810 1024 01       		.byte	0x1
 7811 1025 0D0C     		.2byte	0xc0d
 7812 1027 83000000 		.4byte	0x83
 7813 102b 02       		.uleb128 0x2
 7814 102c 91       		.byte	0x91
 7815 102d 74       		.sleb128 -12
 7816 102e 00       		.byte	0
 7817 102f 1E       		.uleb128 0x1e
 7818 1030 7B060000 		.4byte	.LASF176
 7819 1034 01       		.byte	0x1
 7820 1035 1A0C     		.2byte	0xc1a
 7821 1037 00000000 		.4byte	.LFB68
 7822 103b 44000000 		.4byte	.LFE68-.LFB68
 7823 103f 01       		.uleb128 0x1
 7824 1040 9C       		.byte	0x9c
 7825 1041 53100000 		.4byte	0x1053
 7826 1045 13       		.uleb128 0x13
 7827 1046 6900     		.ascii	"i\000"
 7828 1048 01       		.byte	0x1
 7829 1049 1C0C     		.2byte	0xc1c
 7830 104b 83000000 		.4byte	0x83
 7831 104f 02       		.uleb128 0x2
 7832 1050 91       		.byte	0x91
ARM GAS  C:\Users\essele\AppData\Local\Temp\ccaJcTi8.s 			page 197


 7833 1051 74       		.sleb128 -12
 7834 1052 00       		.byte	0
 7835 1053 12       		.uleb128 0x12
 7836 1054 69090000 		.4byte	.LASF156
 7837 1058 01       		.byte	0x1
 7838 1059 3A0C     		.2byte	0xc3a
 7839 105b 00000000 		.4byte	.LFB69
 7840 105f C0000000 		.4byte	.LFE69-.LFB69
 7841 1063 01       		.uleb128 0x1
 7842 1064 9C       		.byte	0x9c
 7843 1065 79100000 		.4byte	0x1079
 7844 1069 17       		.uleb128 0x17
 7845 106a 72080000 		.4byte	.LASF157
 7846 106e 01       		.byte	0x1
 7847 106f 3A0C     		.2byte	0xc3a
 7848 1071 79100000 		.4byte	0x1079
 7849 1075 02       		.uleb128 0x2
 7850 1076 91       		.byte	0x91
 7851 1077 74       		.sleb128 -12
 7852 1078 00       		.byte	0
 7853 1079 06       		.uleb128 0x6
 7854 107a 04       		.byte	0x4
 7855 107b 83000000 		.4byte	0x83
 7856 107f 12       		.uleb128 0x12
 7857 1080 C2040000 		.4byte	.LASF158
 7858 1084 01       		.byte	0x1
 7859 1085 670C     		.2byte	0xc67
 7860 1087 00000000 		.4byte	.LFB70
 7861 108b 38000000 		.4byte	.LFE70-.LFB70
 7862 108f 01       		.uleb128 0x1
 7863 1090 9C       		.byte	0x9c
 7864 1091 B4100000 		.4byte	0x10b4
 7865 1095 17       		.uleb128 0x17
 7866 1096 39080000 		.4byte	.LASF100
 7867 109a 01       		.byte	0x1
 7868 109b 670C     		.2byte	0xc67
 7869 109d 83000000 		.4byte	0x83
 7870 10a1 02       		.uleb128 0x2
 7871 10a2 91       		.byte	0x91
 7872 10a3 6C       		.sleb128 -20
 7873 10a4 14       		.uleb128 0x14
 7874 10a5 53030000 		.4byte	.LASF32
 7875 10a9 01       		.byte	0x1
 7876 10aa 690C     		.2byte	0xc69
 7877 10ac 83000000 		.4byte	0x83
 7878 10b0 02       		.uleb128 0x2
 7879 10b1 91       		.byte	0x91
 7880 10b2 74       		.sleb128 -12
 7881 10b3 00       		.byte	0
 7882 10b4 12       		.uleb128 0x12
 7883 10b5 96050000 		.4byte	.LASF159
 7884 10b9 01       		.byte	0x1
 7885 10ba 830C     		.2byte	0xc83
 7886 10bc 00000000 		.4byte	.LFB71
 7887 10c0 38000000 		.4byte	.LFE71-.LFB71
 7888 10c4 01       		.uleb128 0x1
 7889 10c5 9C       		.byte	0x9c
ARM GAS  C:\Users\essele\AppData\Local\Temp\ccaJcTi8.s 			page 198


 7890 10c6 E9100000 		.4byte	0x10e9
 7891 10ca 17       		.uleb128 0x17
 7892 10cb 39080000 		.4byte	.LASF100
 7893 10cf 01       		.byte	0x1
 7894 10d0 830C     		.2byte	0xc83
 7895 10d2 83000000 		.4byte	0x83
 7896 10d6 02       		.uleb128 0x2
 7897 10d7 91       		.byte	0x91
 7898 10d8 6C       		.sleb128 -20
 7899 10d9 14       		.uleb128 0x14
 7900 10da 53030000 		.4byte	.LASF32
 7901 10de 01       		.byte	0x1
 7902 10df 850C     		.2byte	0xc85
 7903 10e1 83000000 		.4byte	0x83
 7904 10e5 02       		.uleb128 0x2
 7905 10e6 91       		.byte	0x91
 7906 10e7 74       		.sleb128 -12
 7907 10e8 00       		.byte	0
 7908 10e9 12       		.uleb128 0x12
 7909 10ea 6F000000 		.4byte	.LASF160
 7910 10ee 01       		.byte	0x1
 7911 10ef 9F0C     		.2byte	0xc9f
 7912 10f1 00000000 		.4byte	.LFB72
 7913 10f5 38000000 		.4byte	.LFE72-.LFB72
 7914 10f9 01       		.uleb128 0x1
 7915 10fa 9C       		.byte	0x9c
 7916 10fb 1E110000 		.4byte	0x111e
 7917 10ff 17       		.uleb128 0x17
 7918 1100 39080000 		.4byte	.LASF100
 7919 1104 01       		.byte	0x1
 7920 1105 9F0C     		.2byte	0xc9f
 7921 1107 83000000 		.4byte	0x83
 7922 110b 02       		.uleb128 0x2
 7923 110c 91       		.byte	0x91
 7924 110d 6C       		.sleb128 -20
 7925 110e 14       		.uleb128 0x14
 7926 110f 53030000 		.4byte	.LASF32
 7927 1113 01       		.byte	0x1
 7928 1114 A10C     		.2byte	0xca1
 7929 1116 83000000 		.4byte	0x83
 7930 111a 02       		.uleb128 0x2
 7931 111b 91       		.byte	0x91
 7932 111c 74       		.sleb128 -12
 7933 111d 00       		.byte	0
 7934 111e 16       		.uleb128 0x16
 7935 111f 1F050000 		.4byte	.LASF161
 7936 1123 01       		.byte	0x1
 7937 1124 BD0C     		.2byte	0xcbd
 7938 1126 00000000 		.4byte	.LFB73
 7939 112a A0000000 		.4byte	.LFE73-.LFB73
 7940 112e 01       		.uleb128 0x1
 7941 112f 9C       		.byte	0x9c
 7942 1130 62110000 		.4byte	0x1162
 7943 1134 17       		.uleb128 0x17
 7944 1135 FE000000 		.4byte	.LASF162
 7945 1139 01       		.byte	0x1
 7946 113a BD0C     		.2byte	0xcbd
ARM GAS  C:\Users\essele\AppData\Local\Temp\ccaJcTi8.s 			page 199


 7947 113c 83000000 		.4byte	0x83
 7948 1140 02       		.uleb128 0x2
 7949 1141 91       		.byte	0x91
 7950 1142 6C       		.sleb128 -20
 7951 1143 17       		.uleb128 0x17
 7952 1144 39080000 		.4byte	.LASF100
 7953 1148 01       		.byte	0x1
 7954 1149 BD0C     		.2byte	0xcbd
 7955 114b 83000000 		.4byte	0x83
 7956 114f 02       		.uleb128 0x2
 7957 1150 91       		.byte	0x91
 7958 1151 68       		.sleb128 -24
 7959 1152 14       		.uleb128 0x14
 7960 1153 53030000 		.4byte	.LASF32
 7961 1157 01       		.byte	0x1
 7962 1158 BF0C     		.2byte	0xcbf
 7963 115a 83000000 		.4byte	0x83
 7964 115e 02       		.uleb128 0x2
 7965 115f 91       		.byte	0x91
 7966 1160 74       		.sleb128 -12
 7967 1161 00       		.byte	0
 7968 1162 0C       		.uleb128 0xc
 7969 1163 FF000000 		.4byte	0xff
 7970 1167 72110000 		.4byte	0x1172
 7971 116b 0D       		.uleb128 0xd
 7972 116c F8000000 		.4byte	0xf8
 7973 1170 04       		.byte	0x4
 7974 1171 00       		.byte	0
 7975 1172 11       		.uleb128 0x11
 7976 1173 C7050000 		.4byte	.LASF163
 7977 1177 01       		.byte	0x1
 7978 1178 22       		.byte	0x22
 7979 1179 62110000 		.4byte	0x1162
 7980 117d 05       		.uleb128 0x5
 7981 117e 03       		.byte	0x3
 7982 117f 00000000 		.4byte	CySysTickCallbacks
 7983 1183 1F       		.uleb128 0x1f
 7984 1184 99030000 		.4byte	.LASF164
 7985 1188 01       		.byte	0x1
 7986 1189 1B       		.byte	0x1b
 7987 118a 83000000 		.4byte	0x83
 7988 118e 05       		.uleb128 0x5
 7989 118f 03       		.byte	0x3
 7990 1190 00000000 		.4byte	cydelayFreqHz
 7991 1194 1F       		.uleb128 0x1f
 7992 1195 A7000000 		.4byte	.LASF165
 7993 1199 01       		.byte	0x1
 7994 119a 1C       		.byte	0x1c
 7995 119b 83000000 		.4byte	0x83
 7996 119f 05       		.uleb128 0x5
 7997 11a0 03       		.byte	0x3
 7998 11a1 00000000 		.4byte	cydelayFreqKhz
 7999 11a5 1F       		.uleb128 0x1f
 8000 11a6 4B090000 		.4byte	.LASF166
 8001 11aa 01       		.byte	0x1
 8002 11ab 1D       		.byte	0x1d
 8003 11ac 6B000000 		.4byte	0x6b
ARM GAS  C:\Users\essele\AppData\Local\Temp\ccaJcTi8.s 			page 200


 8004 11b0 05       		.uleb128 0x5
 8005 11b1 03       		.byte	0x3
 8006 11b2 00000000 		.4byte	cydelayFreqMhz
 8007 11b6 1F       		.uleb128 0x1f
 8008 11b7 D5090000 		.4byte	.LASF167
 8009 11bb 01       		.byte	0x1
 8010 11bc 1E       		.byte	0x1e
 8011 11bd 83000000 		.4byte	0x83
 8012 11c1 05       		.uleb128 0x5
 8013 11c2 03       		.byte	0x3
 8014 11c3 00000000 		.4byte	cydelay32kMs
 8015 11c7 1F       		.uleb128 0x1f
 8016 11c8 FF010000 		.4byte	.LASF168
 8017 11cc 01       		.byte	0x1
 8018 11cd 36       		.byte	0x36
 8019 11ce 83000000 		.4byte	0x83
 8020 11d2 05       		.uleb128 0x5
 8021 11d3 03       		.byte	0x3
 8022 11d4 00000000 		.4byte	CySysTickInitVar
 8023 11d8 0C       		.uleb128 0xc
 8024 11d9 E8110000 		.4byte	0x11e8
 8025 11dd E8110000 		.4byte	0x11e8
 8026 11e1 0D       		.uleb128 0xd
 8027 11e2 F8000000 		.4byte	0xf8
 8028 11e6 2D       		.byte	0x2d
 8029 11e7 00       		.byte	0
 8030 11e8 20       		.uleb128 0x20
 8031 11e9 6B000000 		.4byte	0x6b
 8032 11ed 1F       		.uleb128 0x1f
 8033 11ee CD030000 		.4byte	.LASF169
 8034 11f2 01       		.byte	0x1
 8035 11f3 3B       		.byte	0x3b
 8036 11f4 FE110000 		.4byte	0x11fe
 8037 11f8 05       		.uleb128 0x5
 8038 11f9 03       		.byte	0x3
 8039 11fa 00000000 		.4byte	cyImoFreqMhz2Reg
 8040 11fe 20       		.uleb128 0x20
 8041 11ff D8110000 		.4byte	0x11d8
 8042 1203 1F       		.uleb128 0x1f
 8043 1204 0C0A0000 		.4byte	.LASF170
 8044 1208 01       		.byte	0x1
 8045 1209 4C       		.byte	0x4c
 8046 120a 83000000 		.4byte	0x83
 8047 120e 05       		.uleb128 0x5
 8048 120f 03       		.byte	0x3
 8049 1210 00000000 		.4byte	CySysClkImoTrim4
 8050 1214 1F       		.uleb128 0x1f
 8051 1215 1D0A0000 		.4byte	.LASF171
 8052 1219 01       		.byte	0x1
 8053 121a 4D       		.byte	0x4d
 8054 121b 83000000 		.4byte	0x83
 8055 121f 05       		.uleb128 0x5
 8056 1220 03       		.byte	0x3
 8057 1221 00000000 		.4byte	CySysClkImoTrim5
 8058 1225 1F       		.uleb128 0x1f
 8059 1226 CB070000 		.4byte	.LASF172
 8060 122a 01       		.byte	0x1
ARM GAS  C:\Users\essele\AppData\Local\Temp\ccaJcTi8.s 			page 201


 8061 122b 51       		.byte	0x51
 8062 122c 83000000 		.4byte	0x83
 8063 1230 05       		.uleb128 0x5
 8064 1231 03       		.byte	0x3
 8065 1232 00000000 		.4byte	CySysClkPumpConfig
 8066 1236 00       		.byte	0
 8067              		.section	.debug_abbrev,"",%progbits
 8068              	.Ldebug_abbrev0:
 8069 0000 01       		.uleb128 0x1
 8070 0001 11       		.uleb128 0x11
 8071 0002 01       		.byte	0x1
 8072 0003 25       		.uleb128 0x25
 8073 0004 0E       		.uleb128 0xe
 8074 0005 13       		.uleb128 0x13
 8075 0006 0B       		.uleb128 0xb
 8076 0007 03       		.uleb128 0x3
 8077 0008 0E       		.uleb128 0xe
 8078 0009 1B       		.uleb128 0x1b
 8079 000a 0E       		.uleb128 0xe
 8080 000b 55       		.uleb128 0x55
 8081 000c 17       		.uleb128 0x17
 8082 000d 11       		.uleb128 0x11
 8083 000e 01       		.uleb128 0x1
 8084 000f 10       		.uleb128 0x10
 8085 0010 17       		.uleb128 0x17
 8086 0011 00       		.byte	0
 8087 0012 00       		.byte	0
 8088 0013 02       		.uleb128 0x2
 8089 0014 24       		.uleb128 0x24
 8090 0015 00       		.byte	0
 8091 0016 0B       		.uleb128 0xb
 8092 0017 0B       		.uleb128 0xb
 8093 0018 3E       		.uleb128 0x3e
 8094 0019 0B       		.uleb128 0xb
 8095 001a 03       		.uleb128 0x3
 8096 001b 0E       		.uleb128 0xe
 8097 001c 00       		.byte	0
 8098 001d 00       		.byte	0
 8099 001e 03       		.uleb128 0x3
 8100 001f 24       		.uleb128 0x24
 8101 0020 00       		.byte	0
 8102 0021 0B       		.uleb128 0xb
 8103 0022 0B       		.uleb128 0xb
 8104 0023 3E       		.uleb128 0x3e
 8105 0024 0B       		.uleb128 0xb
 8106 0025 03       		.uleb128 0x3
 8107 0026 08       		.uleb128 0x8
 8108 0027 00       		.byte	0
 8109 0028 00       		.byte	0
 8110 0029 04       		.uleb128 0x4
 8111 002a 16       		.uleb128 0x16
 8112 002b 00       		.byte	0
 8113 002c 03       		.uleb128 0x3
 8114 002d 0E       		.uleb128 0xe
 8115 002e 3A       		.uleb128 0x3a
 8116 002f 0B       		.uleb128 0xb
 8117 0030 3B       		.uleb128 0x3b
ARM GAS  C:\Users\essele\AppData\Local\Temp\ccaJcTi8.s 			page 202


 8118 0031 05       		.uleb128 0x5
 8119 0032 49       		.uleb128 0x49
 8120 0033 13       		.uleb128 0x13
 8121 0034 00       		.byte	0
 8122 0035 00       		.byte	0
 8123 0036 05       		.uleb128 0x5
 8124 0037 35       		.uleb128 0x35
 8125 0038 00       		.byte	0
 8126 0039 49       		.uleb128 0x49
 8127 003a 13       		.uleb128 0x13
 8128 003b 00       		.byte	0
 8129 003c 00       		.byte	0
 8130 003d 06       		.uleb128 0x6
 8131 003e 0F       		.uleb128 0xf
 8132 003f 00       		.byte	0
 8133 0040 0B       		.uleb128 0xb
 8134 0041 0B       		.uleb128 0xb
 8135 0042 49       		.uleb128 0x49
 8136 0043 13       		.uleb128 0x13
 8137 0044 00       		.byte	0
 8138 0045 00       		.byte	0
 8139 0046 07       		.uleb128 0x7
 8140 0047 15       		.uleb128 0x15
 8141 0048 00       		.byte	0
 8142 0049 27       		.uleb128 0x27
 8143 004a 19       		.uleb128 0x19
 8144 004b 00       		.byte	0
 8145 004c 00       		.byte	0
 8146 004d 08       		.uleb128 0x8
 8147 004e 16       		.uleb128 0x16
 8148 004f 00       		.byte	0
 8149 0050 03       		.uleb128 0x3
 8150 0051 0E       		.uleb128 0xe
 8151 0052 3A       		.uleb128 0x3a
 8152 0053 0B       		.uleb128 0xb
 8153 0054 3B       		.uleb128 0x3b
 8154 0055 0B       		.uleb128 0xb
 8155 0056 49       		.uleb128 0x49
 8156 0057 13       		.uleb128 0x13
 8157 0058 00       		.byte	0
 8158 0059 00       		.byte	0
 8159 005a 09       		.uleb128 0x9
 8160 005b 13       		.uleb128 0x13
 8161 005c 01       		.byte	0x1
 8162 005d 0B       		.uleb128 0xb
 8163 005e 0B       		.uleb128 0xb
 8164 005f 3A       		.uleb128 0x3a
 8165 0060 0B       		.uleb128 0xb
 8166 0061 3B       		.uleb128 0x3b
 8167 0062 05       		.uleb128 0x5
 8168 0063 01       		.uleb128 0x1
 8169 0064 13       		.uleb128 0x13
 8170 0065 00       		.byte	0
 8171 0066 00       		.byte	0
 8172 0067 0A       		.uleb128 0xa
 8173 0068 0D       		.uleb128 0xd
 8174 0069 00       		.byte	0
ARM GAS  C:\Users\essele\AppData\Local\Temp\ccaJcTi8.s 			page 203


 8175 006a 03       		.uleb128 0x3
 8176 006b 0E       		.uleb128 0xe
 8177 006c 3A       		.uleb128 0x3a
 8178 006d 0B       		.uleb128 0xb
 8179 006e 3B       		.uleb128 0x3b
 8180 006f 05       		.uleb128 0x5
 8181 0070 49       		.uleb128 0x49
 8182 0071 13       		.uleb128 0x13
 8183 0072 38       		.uleb128 0x38
 8184 0073 0B       		.uleb128 0xb
 8185 0074 00       		.byte	0
 8186 0075 00       		.byte	0
 8187 0076 0B       		.uleb128 0xb
 8188 0077 0D       		.uleb128 0xd
 8189 0078 00       		.byte	0
 8190 0079 03       		.uleb128 0x3
 8191 007a 08       		.uleb128 0x8
 8192 007b 3A       		.uleb128 0x3a
 8193 007c 0B       		.uleb128 0xb
 8194 007d 3B       		.uleb128 0x3b
 8195 007e 05       		.uleb128 0x5
 8196 007f 49       		.uleb128 0x49
 8197 0080 13       		.uleb128 0x13
 8198 0081 38       		.uleb128 0x38
 8199 0082 0B       		.uleb128 0xb
 8200 0083 00       		.byte	0
 8201 0084 00       		.byte	0
 8202 0085 0C       		.uleb128 0xc
 8203 0086 01       		.uleb128 0x1
 8204 0087 01       		.byte	0x1
 8205 0088 49       		.uleb128 0x49
 8206 0089 13       		.uleb128 0x13
 8207 008a 01       		.uleb128 0x1
 8208 008b 13       		.uleb128 0x13
 8209 008c 00       		.byte	0
 8210 008d 00       		.byte	0
 8211 008e 0D       		.uleb128 0xd
 8212 008f 21       		.uleb128 0x21
 8213 0090 00       		.byte	0
 8214 0091 49       		.uleb128 0x49
 8215 0092 13       		.uleb128 0x13
 8216 0093 2F       		.uleb128 0x2f
 8217 0094 0B       		.uleb128 0xb
 8218 0095 00       		.byte	0
 8219 0096 00       		.byte	0
 8220 0097 0E       		.uleb128 0xe
 8221 0098 2E       		.uleb128 0x2e
 8222 0099 00       		.byte	0
 8223 009a 3F       		.uleb128 0x3f
 8224 009b 19       		.uleb128 0x19
 8225 009c 03       		.uleb128 0x3
 8226 009d 0E       		.uleb128 0xe
 8227 009e 3A       		.uleb128 0x3a
 8228 009f 0B       		.uleb128 0xb
 8229 00a0 3B       		.uleb128 0x3b
 8230 00a1 0B       		.uleb128 0xb
 8231 00a2 27       		.uleb128 0x27
ARM GAS  C:\Users\essele\AppData\Local\Temp\ccaJcTi8.s 			page 204


 8232 00a3 19       		.uleb128 0x19
 8233 00a4 11       		.uleb128 0x11
 8234 00a5 01       		.uleb128 0x1
 8235 00a6 12       		.uleb128 0x12
 8236 00a7 06       		.uleb128 0x6
 8237 00a8 40       		.uleb128 0x40
 8238 00a9 18       		.uleb128 0x18
 8239 00aa 9642     		.uleb128 0x2116
 8240 00ac 19       		.uleb128 0x19
 8241 00ad 00       		.byte	0
 8242 00ae 00       		.byte	0
 8243 00af 0F       		.uleb128 0xf
 8244 00b0 2E       		.uleb128 0x2e
 8245 00b1 01       		.byte	0x1
 8246 00b2 3F       		.uleb128 0x3f
 8247 00b3 19       		.uleb128 0x19
 8248 00b4 03       		.uleb128 0x3
 8249 00b5 0E       		.uleb128 0xe
 8250 00b6 3A       		.uleb128 0x3a
 8251 00b7 0B       		.uleb128 0xb
 8252 00b8 3B       		.uleb128 0x3b
 8253 00b9 0B       		.uleb128 0xb
 8254 00ba 27       		.uleb128 0x27
 8255 00bb 19       		.uleb128 0x19
 8256 00bc 11       		.uleb128 0x11
 8257 00bd 01       		.uleb128 0x1
 8258 00be 12       		.uleb128 0x12
 8259 00bf 06       		.uleb128 0x6
 8260 00c0 40       		.uleb128 0x40
 8261 00c1 18       		.uleb128 0x18
 8262 00c2 9642     		.uleb128 0x2116
 8263 00c4 19       		.uleb128 0x19
 8264 00c5 01       		.uleb128 0x1
 8265 00c6 13       		.uleb128 0x13
 8266 00c7 00       		.byte	0
 8267 00c8 00       		.byte	0
 8268 00c9 10       		.uleb128 0x10
 8269 00ca 34       		.uleb128 0x34
 8270 00cb 00       		.byte	0
 8271 00cc 03       		.uleb128 0x3
 8272 00cd 08       		.uleb128 0x8
 8273 00ce 3A       		.uleb128 0x3a
 8274 00cf 0B       		.uleb128 0xb
 8275 00d0 3B       		.uleb128 0x3b
 8276 00d1 0B       		.uleb128 0xb
 8277 00d2 49       		.uleb128 0x49
 8278 00d3 13       		.uleb128 0x13
 8279 00d4 02       		.uleb128 0x2
 8280 00d5 18       		.uleb128 0x18
 8281 00d6 00       		.byte	0
 8282 00d7 00       		.byte	0
 8283 00d8 11       		.uleb128 0x11
 8284 00d9 34       		.uleb128 0x34
 8285 00da 00       		.byte	0
 8286 00db 03       		.uleb128 0x3
 8287 00dc 0E       		.uleb128 0xe
 8288 00dd 3A       		.uleb128 0x3a
ARM GAS  C:\Users\essele\AppData\Local\Temp\ccaJcTi8.s 			page 205


 8289 00de 0B       		.uleb128 0xb
 8290 00df 3B       		.uleb128 0x3b
 8291 00e0 0B       		.uleb128 0xb
 8292 00e1 49       		.uleb128 0x49
 8293 00e2 13       		.uleb128 0x13
 8294 00e3 02       		.uleb128 0x2
 8295 00e4 18       		.uleb128 0x18
 8296 00e5 00       		.byte	0
 8297 00e6 00       		.byte	0
 8298 00e7 12       		.uleb128 0x12
 8299 00e8 2E       		.uleb128 0x2e
 8300 00e9 01       		.byte	0x1
 8301 00ea 3F       		.uleb128 0x3f
 8302 00eb 19       		.uleb128 0x19
 8303 00ec 03       		.uleb128 0x3
 8304 00ed 0E       		.uleb128 0xe
 8305 00ee 3A       		.uleb128 0x3a
 8306 00ef 0B       		.uleb128 0xb
 8307 00f0 3B       		.uleb128 0x3b
 8308 00f1 05       		.uleb128 0x5
 8309 00f2 27       		.uleb128 0x27
 8310 00f3 19       		.uleb128 0x19
 8311 00f4 11       		.uleb128 0x11
 8312 00f5 01       		.uleb128 0x1
 8313 00f6 12       		.uleb128 0x12
 8314 00f7 06       		.uleb128 0x6
 8315 00f8 40       		.uleb128 0x40
 8316 00f9 18       		.uleb128 0x18
 8317 00fa 9742     		.uleb128 0x2117
 8318 00fc 19       		.uleb128 0x19
 8319 00fd 01       		.uleb128 0x1
 8320 00fe 13       		.uleb128 0x13
 8321 00ff 00       		.byte	0
 8322 0100 00       		.byte	0
 8323 0101 13       		.uleb128 0x13
 8324 0102 34       		.uleb128 0x34
 8325 0103 00       		.byte	0
 8326 0104 03       		.uleb128 0x3
 8327 0105 08       		.uleb128 0x8
 8328 0106 3A       		.uleb128 0x3a
 8329 0107 0B       		.uleb128 0xb
 8330 0108 3B       		.uleb128 0x3b
 8331 0109 05       		.uleb128 0x5
 8332 010a 49       		.uleb128 0x49
 8333 010b 13       		.uleb128 0x13
 8334 010c 02       		.uleb128 0x2
 8335 010d 18       		.uleb128 0x18
 8336 010e 00       		.byte	0
 8337 010f 00       		.byte	0
 8338 0110 14       		.uleb128 0x14
 8339 0111 34       		.uleb128 0x34
 8340 0112 00       		.byte	0
 8341 0113 03       		.uleb128 0x3
 8342 0114 0E       		.uleb128 0xe
 8343 0115 3A       		.uleb128 0x3a
 8344 0116 0B       		.uleb128 0xb
 8345 0117 3B       		.uleb128 0x3b
ARM GAS  C:\Users\essele\AppData\Local\Temp\ccaJcTi8.s 			page 206


 8346 0118 05       		.uleb128 0x5
 8347 0119 49       		.uleb128 0x49
 8348 011a 13       		.uleb128 0x13
 8349 011b 02       		.uleb128 0x2
 8350 011c 18       		.uleb128 0x18
 8351 011d 00       		.byte	0
 8352 011e 00       		.byte	0
 8353 011f 15       		.uleb128 0x15
 8354 0120 2E       		.uleb128 0x2e
 8355 0121 00       		.byte	0
 8356 0122 3F       		.uleb128 0x3f
 8357 0123 19       		.uleb128 0x19
 8358 0124 03       		.uleb128 0x3
 8359 0125 0E       		.uleb128 0xe
 8360 0126 3A       		.uleb128 0x3a
 8361 0127 0B       		.uleb128 0xb
 8362 0128 3B       		.uleb128 0x3b
 8363 0129 05       		.uleb128 0x5
 8364 012a 27       		.uleb128 0x27
 8365 012b 19       		.uleb128 0x19
 8366 012c 49       		.uleb128 0x49
 8367 012d 13       		.uleb128 0x13
 8368 012e 11       		.uleb128 0x11
 8369 012f 01       		.uleb128 0x1
 8370 0130 12       		.uleb128 0x12
 8371 0131 06       		.uleb128 0x6
 8372 0132 40       		.uleb128 0x40
 8373 0133 18       		.uleb128 0x18
 8374 0134 9742     		.uleb128 0x2117
 8375 0136 19       		.uleb128 0x19
 8376 0137 00       		.byte	0
 8377 0138 00       		.byte	0
 8378 0139 16       		.uleb128 0x16
 8379 013a 2E       		.uleb128 0x2e
 8380 013b 01       		.byte	0x1
 8381 013c 3F       		.uleb128 0x3f
 8382 013d 19       		.uleb128 0x19
 8383 013e 03       		.uleb128 0x3
 8384 013f 0E       		.uleb128 0xe
 8385 0140 3A       		.uleb128 0x3a
 8386 0141 0B       		.uleb128 0xb
 8387 0142 3B       		.uleb128 0x3b
 8388 0143 05       		.uleb128 0x5
 8389 0144 27       		.uleb128 0x27
 8390 0145 19       		.uleb128 0x19
 8391 0146 11       		.uleb128 0x11
 8392 0147 01       		.uleb128 0x1
 8393 0148 12       		.uleb128 0x12
 8394 0149 06       		.uleb128 0x6
 8395 014a 40       		.uleb128 0x40
 8396 014b 18       		.uleb128 0x18
 8397 014c 9642     		.uleb128 0x2116
 8398 014e 19       		.uleb128 0x19
 8399 014f 01       		.uleb128 0x1
 8400 0150 13       		.uleb128 0x13
 8401 0151 00       		.byte	0
 8402 0152 00       		.byte	0
ARM GAS  C:\Users\essele\AppData\Local\Temp\ccaJcTi8.s 			page 207


 8403 0153 17       		.uleb128 0x17
 8404 0154 05       		.uleb128 0x5
 8405 0155 00       		.byte	0
 8406 0156 03       		.uleb128 0x3
 8407 0157 0E       		.uleb128 0xe
 8408 0158 3A       		.uleb128 0x3a
 8409 0159 0B       		.uleb128 0xb
 8410 015a 3B       		.uleb128 0x3b
 8411 015b 05       		.uleb128 0x5
 8412 015c 49       		.uleb128 0x49
 8413 015d 13       		.uleb128 0x13
 8414 015e 02       		.uleb128 0x2
 8415 015f 18       		.uleb128 0x18
 8416 0160 00       		.byte	0
 8417 0161 00       		.byte	0
 8418 0162 18       		.uleb128 0x18
 8419 0163 2E       		.uleb128 0x2e
 8420 0164 01       		.byte	0x1
 8421 0165 3F       		.uleb128 0x3f
 8422 0166 19       		.uleb128 0x19
 8423 0167 03       		.uleb128 0x3
 8424 0168 0E       		.uleb128 0xe
 8425 0169 3A       		.uleb128 0x3a
 8426 016a 0B       		.uleb128 0xb
 8427 016b 3B       		.uleb128 0x3b
 8428 016c 05       		.uleb128 0x5
 8429 016d 27       		.uleb128 0x27
 8430 016e 19       		.uleb128 0x19
 8431 016f 49       		.uleb128 0x49
 8432 0170 13       		.uleb128 0x13
 8433 0171 11       		.uleb128 0x11
 8434 0172 01       		.uleb128 0x1
 8435 0173 12       		.uleb128 0x12
 8436 0174 06       		.uleb128 0x6
 8437 0175 40       		.uleb128 0x40
 8438 0176 18       		.uleb128 0x18
 8439 0177 9642     		.uleb128 0x2116
 8440 0179 19       		.uleb128 0x19
 8441 017a 01       		.uleb128 0x1
 8442 017b 13       		.uleb128 0x13
 8443 017c 00       		.byte	0
 8444 017d 00       		.byte	0
 8445 017e 19       		.uleb128 0x19
 8446 017f 2E       		.uleb128 0x2e
 8447 0180 00       		.byte	0
 8448 0181 3F       		.uleb128 0x3f
 8449 0182 19       		.uleb128 0x19
 8450 0183 03       		.uleb128 0x3
 8451 0184 0E       		.uleb128 0xe
 8452 0185 3A       		.uleb128 0x3a
 8453 0186 0B       		.uleb128 0xb
 8454 0187 3B       		.uleb128 0x3b
 8455 0188 05       		.uleb128 0x5
 8456 0189 27       		.uleb128 0x27
 8457 018a 19       		.uleb128 0x19
 8458 018b 11       		.uleb128 0x11
 8459 018c 01       		.uleb128 0x1
ARM GAS  C:\Users\essele\AppData\Local\Temp\ccaJcTi8.s 			page 208


 8460 018d 12       		.uleb128 0x12
 8461 018e 06       		.uleb128 0x6
 8462 018f 40       		.uleb128 0x40
 8463 0190 18       		.uleb128 0x18
 8464 0191 9742     		.uleb128 0x2117
 8465 0193 19       		.uleb128 0x19
 8466 0194 00       		.byte	0
 8467 0195 00       		.byte	0
 8468 0196 1A       		.uleb128 0x1a
 8469 0197 2E       		.uleb128 0x2e
 8470 0198 01       		.byte	0x1
 8471 0199 3F       		.uleb128 0x3f
 8472 019a 19       		.uleb128 0x19
 8473 019b 03       		.uleb128 0x3
 8474 019c 0E       		.uleb128 0xe
 8475 019d 3A       		.uleb128 0x3a
 8476 019e 0B       		.uleb128 0xb
 8477 019f 3B       		.uleb128 0x3b
 8478 01a0 05       		.uleb128 0x5
 8479 01a1 27       		.uleb128 0x27
 8480 01a2 19       		.uleb128 0x19
 8481 01a3 49       		.uleb128 0x49
 8482 01a4 13       		.uleb128 0x13
 8483 01a5 11       		.uleb128 0x11
 8484 01a6 01       		.uleb128 0x1
 8485 01a7 12       		.uleb128 0x12
 8486 01a8 06       		.uleb128 0x6
 8487 01a9 40       		.uleb128 0x40
 8488 01aa 18       		.uleb128 0x18
 8489 01ab 9742     		.uleb128 0x2117
 8490 01ad 19       		.uleb128 0x19
 8491 01ae 01       		.uleb128 0x1
 8492 01af 13       		.uleb128 0x13
 8493 01b0 00       		.byte	0
 8494 01b1 00       		.byte	0
 8495 01b2 1B       		.uleb128 0x1b
 8496 01b3 05       		.uleb128 0x5
 8497 01b4 00       		.byte	0
 8498 01b5 03       		.uleb128 0x3
 8499 01b6 08       		.uleb128 0x8
 8500 01b7 3A       		.uleb128 0x3a
 8501 01b8 0B       		.uleb128 0xb
 8502 01b9 3B       		.uleb128 0x3b
 8503 01ba 05       		.uleb128 0x5
 8504 01bb 49       		.uleb128 0x49
 8505 01bc 13       		.uleb128 0x13
 8506 01bd 02       		.uleb128 0x2
 8507 01be 18       		.uleb128 0x18
 8508 01bf 00       		.byte	0
 8509 01c0 00       		.byte	0
 8510 01c1 1C       		.uleb128 0x1c
 8511 01c2 2E       		.uleb128 0x2e
 8512 01c3 01       		.byte	0x1
 8513 01c4 03       		.uleb128 0x3
 8514 01c5 0E       		.uleb128 0xe
 8515 01c6 3A       		.uleb128 0x3a
 8516 01c7 0B       		.uleb128 0xb
ARM GAS  C:\Users\essele\AppData\Local\Temp\ccaJcTi8.s 			page 209


 8517 01c8 3B       		.uleb128 0x3b
 8518 01c9 05       		.uleb128 0x5
 8519 01ca 27       		.uleb128 0x27
 8520 01cb 19       		.uleb128 0x19
 8521 01cc 49       		.uleb128 0x49
 8522 01cd 13       		.uleb128 0x13
 8523 01ce 11       		.uleb128 0x11
 8524 01cf 01       		.uleb128 0x1
 8525 01d0 12       		.uleb128 0x12
 8526 01d1 06       		.uleb128 0x6
 8527 01d2 40       		.uleb128 0x40
 8528 01d3 18       		.uleb128 0x18
 8529 01d4 9642     		.uleb128 0x2116
 8530 01d6 19       		.uleb128 0x19
 8531 01d7 01       		.uleb128 0x1
 8532 01d8 13       		.uleb128 0x13
 8533 01d9 00       		.byte	0
 8534 01da 00       		.byte	0
 8535 01db 1D       		.uleb128 0x1d
 8536 01dc 2E       		.uleb128 0x2e
 8537 01dd 00       		.byte	0
 8538 01de 3F       		.uleb128 0x3f
 8539 01df 19       		.uleb128 0x19
 8540 01e0 03       		.uleb128 0x3
 8541 01e1 0E       		.uleb128 0xe
 8542 01e2 3A       		.uleb128 0x3a
 8543 01e3 0B       		.uleb128 0xb
 8544 01e4 3B       		.uleb128 0x3b
 8545 01e5 05       		.uleb128 0x5
 8546 01e6 27       		.uleb128 0x27
 8547 01e7 19       		.uleb128 0x19
 8548 01e8 11       		.uleb128 0x11
 8549 01e9 01       		.uleb128 0x1
 8550 01ea 12       		.uleb128 0x12
 8551 01eb 06       		.uleb128 0x6
 8552 01ec 40       		.uleb128 0x40
 8553 01ed 18       		.uleb128 0x18
 8554 01ee 9642     		.uleb128 0x2116
 8555 01f0 19       		.uleb128 0x19
 8556 01f1 00       		.byte	0
 8557 01f2 00       		.byte	0
 8558 01f3 1E       		.uleb128 0x1e
 8559 01f4 2E       		.uleb128 0x2e
 8560 01f5 01       		.byte	0x1
 8561 01f6 03       		.uleb128 0x3
 8562 01f7 0E       		.uleb128 0xe
 8563 01f8 3A       		.uleb128 0x3a
 8564 01f9 0B       		.uleb128 0xb
 8565 01fa 3B       		.uleb128 0x3b
 8566 01fb 05       		.uleb128 0x5
 8567 01fc 27       		.uleb128 0x27
 8568 01fd 19       		.uleb128 0x19
 8569 01fe 11       		.uleb128 0x11
 8570 01ff 01       		.uleb128 0x1
 8571 0200 12       		.uleb128 0x12
 8572 0201 06       		.uleb128 0x6
 8573 0202 40       		.uleb128 0x40
ARM GAS  C:\Users\essele\AppData\Local\Temp\ccaJcTi8.s 			page 210


 8574 0203 18       		.uleb128 0x18
 8575 0204 9642     		.uleb128 0x2116
 8576 0206 19       		.uleb128 0x19
 8577 0207 01       		.uleb128 0x1
 8578 0208 13       		.uleb128 0x13
 8579 0209 00       		.byte	0
 8580 020a 00       		.byte	0
 8581 020b 1F       		.uleb128 0x1f
 8582 020c 34       		.uleb128 0x34
 8583 020d 00       		.byte	0
 8584 020e 03       		.uleb128 0x3
 8585 020f 0E       		.uleb128 0xe
 8586 0210 3A       		.uleb128 0x3a
 8587 0211 0B       		.uleb128 0xb
 8588 0212 3B       		.uleb128 0x3b
 8589 0213 0B       		.uleb128 0xb
 8590 0214 49       		.uleb128 0x49
 8591 0215 13       		.uleb128 0x13
 8592 0216 3F       		.uleb128 0x3f
 8593 0217 19       		.uleb128 0x19
 8594 0218 02       		.uleb128 0x2
 8595 0219 18       		.uleb128 0x18
 8596 021a 00       		.byte	0
 8597 021b 00       		.byte	0
 8598 021c 20       		.uleb128 0x20
 8599 021d 26       		.uleb128 0x26
 8600 021e 00       		.byte	0
 8601 021f 49       		.uleb128 0x49
 8602 0220 13       		.uleb128 0x13
 8603 0221 00       		.byte	0
 8604 0222 00       		.byte	0
 8605 0223 00       		.byte	0
 8606              		.section	.debug_aranges,"",%progbits
 8607 0000 5C020000 		.4byte	0x25c
 8608 0004 0200     		.2byte	0x2
 8609 0006 00000000 		.4byte	.Ldebug_info0
 8610 000a 04       		.byte	0x4
 8611 000b 00       		.byte	0
 8612 000c 0000     		.2byte	0
 8613 000e 0000     		.2byte	0
 8614 0010 00000000 		.4byte	.LFB1
 8615 0014 20000000 		.4byte	.LFE1-.LFB1
 8616 0018 00000000 		.4byte	.LFB2
 8617 001c 24000000 		.4byte	.LFE2-.LFB2
 8618 0020 00000000 		.4byte	.LFB3
 8619 0024 54010000 		.4byte	.LFE3-.LFB3
 8620 0028 00000000 		.4byte	.LFB4
 8621 002c 78000000 		.4byte	.LFE4-.LFB4
 8622 0030 00000000 		.4byte	.LFB5
 8623 0034 20000000 		.4byte	.LFE5-.LFB5
 8624 0038 00000000 		.4byte	.LFB6
 8625 003c 38010000 		.4byte	.LFE6-.LFB6
 8626 0040 00000000 		.4byte	.LFB7
 8627 0044 C4000000 		.4byte	.LFE7-.LFB7
 8628 0048 00000000 		.4byte	.LFB8
 8629 004c 20000000 		.4byte	.LFE8-.LFB8
 8630 0050 00000000 		.4byte	.LFB9
ARM GAS  C:\Users\essele\AppData\Local\Temp\ccaJcTi8.s 			page 211


 8631 0054 70000000 		.4byte	.LFE9-.LFB9
 8632 0058 00000000 		.4byte	.LFB10
 8633 005c 50000000 		.4byte	.LFE10-.LFB10
 8634 0060 00000000 		.4byte	.LFB11
 8635 0064 4C000000 		.4byte	.LFE11-.LFB11
 8636 0068 00000000 		.4byte	.LFB12
 8637 006c 48000000 		.4byte	.LFE12-.LFB12
 8638 0070 00000000 		.4byte	.LFB13
 8639 0074 24020000 		.4byte	.LFE13-.LFB13
 8640 0078 00000000 		.4byte	.LFB14
 8641 007c 68000000 		.4byte	.LFE14-.LFB14
 8642 0080 00000000 		.4byte	.LFB15
 8643 0084 20000000 		.4byte	.LFE15-.LFB15
 8644 0088 00000000 		.4byte	.LFB16
 8645 008c 24000000 		.4byte	.LFE16-.LFB16
 8646 0090 00000000 		.4byte	.LFB17
 8647 0094 98000000 		.4byte	.LFE17-.LFB17
 8648 0098 00000000 		.4byte	.LFB18
 8649 009c E4010000 		.4byte	.LFE18-.LFB18
 8650 00a0 00000000 		.4byte	.LFB19
 8651 00a4 10010000 		.4byte	.LFE19-.LFB19
 8652 00a8 00000000 		.4byte	.LFB20
 8653 00ac 70000000 		.4byte	.LFE20-.LFB20
 8654 00b0 00000000 		.4byte	.LFB21
 8655 00b4 54000000 		.4byte	.LFE21-.LFB21
 8656 00b8 00000000 		.4byte	.LFB22
 8657 00bc D4000000 		.4byte	.LFE22-.LFB22
 8658 00c0 00000000 		.4byte	.LFB23
 8659 00c4 6C000000 		.4byte	.LFE23-.LFB23
 8660 00c8 00000000 		.4byte	.LFB24
 8661 00cc 58000000 		.4byte	.LFE24-.LFB24
 8662 00d0 00000000 		.4byte	.LFB25
 8663 00d4 54000000 		.4byte	.LFE25-.LFB25
 8664 00d8 00000000 		.4byte	.LFB26
 8665 00dc 74000000 		.4byte	.LFE26-.LFB26
 8666 00e0 00000000 		.4byte	.LFB27
 8667 00e4 6C010000 		.4byte	.LFE27-.LFB27
 8668 00e8 00000000 		.4byte	.LFB28
 8669 00ec 7C000000 		.4byte	.LFE28-.LFB28
 8670 00f0 00000000 		.4byte	.LFB29
 8671 00f4 8C000000 		.4byte	.LFE29-.LFB29
 8672 00f8 00000000 		.4byte	.LFB30
 8673 00fc 64000000 		.4byte	.LFE30-.LFB30
 8674 0100 00000000 		.4byte	.LFB31
 8675 0104 2C000000 		.4byte	.LFE31-.LFB31
 8676 0108 00000000 		.4byte	.LFB32
 8677 010c 18000000 		.4byte	.LFE32-.LFB32
 8678 0110 00000000 		.4byte	.LFB33
 8679 0114 14000000 		.4byte	.LFE33-.LFB33
 8680 0118 00000000 		.4byte	.LFB34
 8681 011c 30000000 		.4byte	.LFE34-.LFB34
 8682 0120 00000000 		.4byte	.LFB35
 8683 0124 24000000 		.4byte	.LFE35-.LFB35
 8684 0128 00000000 		.4byte	.LFB36
 8685 012c 1C000000 		.4byte	.LFE36-.LFB36
 8686 0130 00000000 		.4byte	.LFB37
 8687 0134 48000000 		.4byte	.LFE37-.LFB37
ARM GAS  C:\Users\essele\AppData\Local\Temp\ccaJcTi8.s 			page 212


 8688 0138 00000000 		.4byte	.LFB38
 8689 013c 34000000 		.4byte	.LFE38-.LFB38
 8690 0140 00000000 		.4byte	.LFB39
 8691 0144 4C000000 		.4byte	.LFE39-.LFB39
 8692 0148 00000000 		.4byte	.LFB40
 8693 014c 36000000 		.4byte	.LFE40-.LFB40
 8694 0150 00000000 		.4byte	.LFB41
 8695 0154 A8000000 		.4byte	.LFE41-.LFB41
 8696 0158 00000000 		.4byte	.LFB42
 8697 015c 58000000 		.4byte	.LFE42-.LFB42
 8698 0160 00000000 		.4byte	.LFB43
 8699 0164 2C000000 		.4byte	.LFE43-.LFB43
 8700 0168 00000000 		.4byte	.LFB44
 8701 016c 30000000 		.4byte	.LFE44-.LFB44
 8702 0170 00000000 		.4byte	.LFB45
 8703 0174 2C000000 		.4byte	.LFE45-.LFB45
 8704 0178 00000000 		.4byte	.LFB46
 8705 017c 2C000000 		.4byte	.LFE46-.LFB46
 8706 0180 00000000 		.4byte	.LFB47
 8707 0184 2C000000 		.4byte	.LFE47-.LFB47
 8708 0188 00000000 		.4byte	.LFB48
 8709 018c 16000000 		.4byte	.LFE48-.LFB48
 8710 0190 00000000 		.4byte	.LFB49
 8711 0194 24000000 		.4byte	.LFE49-.LFB49
 8712 0198 00000000 		.4byte	.LFB50
 8713 019c 4C000000 		.4byte	.LFE50-.LFB50
 8714 01a0 00000000 		.4byte	.LFB51
 8715 01a4 28000000 		.4byte	.LFE51-.LFB51
 8716 01a8 00000000 		.4byte	.LFB52
 8717 01ac 84000000 		.4byte	.LFE52-.LFB52
 8718 01b0 00000000 		.4byte	.LFB53
 8719 01b4 24000000 		.4byte	.LFE53-.LFB53
 8720 01b8 00000000 		.4byte	.LFB54
 8721 01bc 60000000 		.4byte	.LFE54-.LFB54
 8722 01c0 00000000 		.4byte	.LFB55
 8723 01c4 20000000 		.4byte	.LFE55-.LFB55
 8724 01c8 00000000 		.4byte	.LFB56
 8725 01cc 1C000000 		.4byte	.LFE56-.LFB56
 8726 01d0 00000000 		.4byte	.LFB57
 8727 01d4 1C000000 		.4byte	.LFE57-.LFB57
 8728 01d8 00000000 		.4byte	.LFB58
 8729 01dc 1C000000 		.4byte	.LFE58-.LFB58
 8730 01e0 00000000 		.4byte	.LFB59
 8731 01e4 20000000 		.4byte	.LFE59-.LFB59
 8732 01e8 00000000 		.4byte	.LFB60
 8733 01ec 18000000 		.4byte	.LFE60-.LFB60
 8734 01f0 00000000 		.4byte	.LFB61
 8735 01f4 18000000 		.4byte	.LFE61-.LFB61
 8736 01f8 00000000 		.4byte	.LFB62
 8737 01fc 34000000 		.4byte	.LFE62-.LFB62
 8738 0200 00000000 		.4byte	.LFB63
 8739 0204 18000000 		.4byte	.LFE63-.LFB63
 8740 0208 00000000 		.4byte	.LFB64
 8741 020c 18000000 		.4byte	.LFE64-.LFB64
 8742 0210 00000000 		.4byte	.LFB65
 8743 0214 14000000 		.4byte	.LFE65-.LFB65
 8744 0218 00000000 		.4byte	.LFB66
ARM GAS  C:\Users\essele\AppData\Local\Temp\ccaJcTi8.s 			page 213


 8745 021c 2C000000 		.4byte	.LFE66-.LFB66
 8746 0220 00000000 		.4byte	.LFB67
 8747 0224 1C000000 		.4byte	.LFE67-.LFB67
 8748 0228 00000000 		.4byte	.LFB68
 8749 022c 44000000 		.4byte	.LFE68-.LFB68
 8750 0230 00000000 		.4byte	.LFB69
 8751 0234 C0000000 		.4byte	.LFE69-.LFB69
 8752 0238 00000000 		.4byte	.LFB70
 8753 023c 38000000 		.4byte	.LFE70-.LFB70
 8754 0240 00000000 		.4byte	.LFB71
 8755 0244 38000000 		.4byte	.LFE71-.LFB71
 8756 0248 00000000 		.4byte	.LFB72
 8757 024c 38000000 		.4byte	.LFE72-.LFB72
 8758 0250 00000000 		.4byte	.LFB73
 8759 0254 A0000000 		.4byte	.LFE73-.LFB73
 8760 0258 00000000 		.4byte	0
 8761 025c 00000000 		.4byte	0
 8762              		.section	.debug_ranges,"",%progbits
 8763              	.Ldebug_ranges0:
 8764 0000 00000000 		.4byte	.LFB1
 8765 0004 20000000 		.4byte	.LFE1
 8766 0008 00000000 		.4byte	.LFB2
 8767 000c 24000000 		.4byte	.LFE2
 8768 0010 00000000 		.4byte	.LFB3
 8769 0014 54010000 		.4byte	.LFE3
 8770 0018 00000000 		.4byte	.LFB4
 8771 001c 78000000 		.4byte	.LFE4
 8772 0020 00000000 		.4byte	.LFB5
 8773 0024 20000000 		.4byte	.LFE5
 8774 0028 00000000 		.4byte	.LFB6
 8775 002c 38010000 		.4byte	.LFE6
 8776 0030 00000000 		.4byte	.LFB7
 8777 0034 C4000000 		.4byte	.LFE7
 8778 0038 00000000 		.4byte	.LFB8
 8779 003c 20000000 		.4byte	.LFE8
 8780 0040 00000000 		.4byte	.LFB9
 8781 0044 70000000 		.4byte	.LFE9
 8782 0048 00000000 		.4byte	.LFB10
 8783 004c 50000000 		.4byte	.LFE10
 8784 0050 00000000 		.4byte	.LFB11
 8785 0054 4C000000 		.4byte	.LFE11
 8786 0058 00000000 		.4byte	.LFB12
 8787 005c 48000000 		.4byte	.LFE12
 8788 0060 00000000 		.4byte	.LFB13
 8789 0064 24020000 		.4byte	.LFE13
 8790 0068 00000000 		.4byte	.LFB14
 8791 006c 68000000 		.4byte	.LFE14
 8792 0070 00000000 		.4byte	.LFB15
 8793 0074 20000000 		.4byte	.LFE15
 8794 0078 00000000 		.4byte	.LFB16
 8795 007c 24000000 		.4byte	.LFE16
 8796 0080 00000000 		.4byte	.LFB17
 8797 0084 98000000 		.4byte	.LFE17
 8798 0088 00000000 		.4byte	.LFB18
 8799 008c E4010000 		.4byte	.LFE18
 8800 0090 00000000 		.4byte	.LFB19
 8801 0094 10010000 		.4byte	.LFE19
ARM GAS  C:\Users\essele\AppData\Local\Temp\ccaJcTi8.s 			page 214


 8802 0098 00000000 		.4byte	.LFB20
 8803 009c 70000000 		.4byte	.LFE20
 8804 00a0 00000000 		.4byte	.LFB21
 8805 00a4 54000000 		.4byte	.LFE21
 8806 00a8 00000000 		.4byte	.LFB22
 8807 00ac D4000000 		.4byte	.LFE22
 8808 00b0 00000000 		.4byte	.LFB23
 8809 00b4 6C000000 		.4byte	.LFE23
 8810 00b8 00000000 		.4byte	.LFB24
 8811 00bc 58000000 		.4byte	.LFE24
 8812 00c0 00000000 		.4byte	.LFB25
 8813 00c4 54000000 		.4byte	.LFE25
 8814 00c8 00000000 		.4byte	.LFB26
 8815 00cc 74000000 		.4byte	.LFE26
 8816 00d0 00000000 		.4byte	.LFB27
 8817 00d4 6C010000 		.4byte	.LFE27
 8818 00d8 00000000 		.4byte	.LFB28
 8819 00dc 7C000000 		.4byte	.LFE28
 8820 00e0 00000000 		.4byte	.LFB29
 8821 00e4 8C000000 		.4byte	.LFE29
 8822 00e8 00000000 		.4byte	.LFB30
 8823 00ec 64000000 		.4byte	.LFE30
 8824 00f0 00000000 		.4byte	.LFB31
 8825 00f4 2C000000 		.4byte	.LFE31
 8826 00f8 00000000 		.4byte	.LFB32
 8827 00fc 18000000 		.4byte	.LFE32
 8828 0100 00000000 		.4byte	.LFB33
 8829 0104 14000000 		.4byte	.LFE33
 8830 0108 00000000 		.4byte	.LFB34
 8831 010c 30000000 		.4byte	.LFE34
 8832 0110 00000000 		.4byte	.LFB35
 8833 0114 24000000 		.4byte	.LFE35
 8834 0118 00000000 		.4byte	.LFB36
 8835 011c 1C000000 		.4byte	.LFE36
 8836 0120 00000000 		.4byte	.LFB37
 8837 0124 48000000 		.4byte	.LFE37
 8838 0128 00000000 		.4byte	.LFB38
 8839 012c 34000000 		.4byte	.LFE38
 8840 0130 00000000 		.4byte	.LFB39
 8841 0134 4C000000 		.4byte	.LFE39
 8842 0138 00000000 		.4byte	.LFB40
 8843 013c 36000000 		.4byte	.LFE40
 8844 0140 00000000 		.4byte	.LFB41
 8845 0144 A8000000 		.4byte	.LFE41
 8846 0148 00000000 		.4byte	.LFB42
 8847 014c 58000000 		.4byte	.LFE42
 8848 0150 00000000 		.4byte	.LFB43
 8849 0154 2C000000 		.4byte	.LFE43
 8850 0158 00000000 		.4byte	.LFB44
 8851 015c 30000000 		.4byte	.LFE44
 8852 0160 00000000 		.4byte	.LFB45
 8853 0164 2C000000 		.4byte	.LFE45
 8854 0168 00000000 		.4byte	.LFB46
 8855 016c 2C000000 		.4byte	.LFE46
 8856 0170 00000000 		.4byte	.LFB47
 8857 0174 2C000000 		.4byte	.LFE47
 8858 0178 00000000 		.4byte	.LFB48
ARM GAS  C:\Users\essele\AppData\Local\Temp\ccaJcTi8.s 			page 215


 8859 017c 16000000 		.4byte	.LFE48
 8860 0180 00000000 		.4byte	.LFB49
 8861 0184 24000000 		.4byte	.LFE49
 8862 0188 00000000 		.4byte	.LFB50
 8863 018c 4C000000 		.4byte	.LFE50
 8864 0190 00000000 		.4byte	.LFB51
 8865 0194 28000000 		.4byte	.LFE51
 8866 0198 00000000 		.4byte	.LFB52
 8867 019c 84000000 		.4byte	.LFE52
 8868 01a0 00000000 		.4byte	.LFB53
 8869 01a4 24000000 		.4byte	.LFE53
 8870 01a8 00000000 		.4byte	.LFB54
 8871 01ac 60000000 		.4byte	.LFE54
 8872 01b0 00000000 		.4byte	.LFB55
 8873 01b4 20000000 		.4byte	.LFE55
 8874 01b8 00000000 		.4byte	.LFB56
 8875 01bc 1C000000 		.4byte	.LFE56
 8876 01c0 00000000 		.4byte	.LFB57
 8877 01c4 1C000000 		.4byte	.LFE57
 8878 01c8 00000000 		.4byte	.LFB58
 8879 01cc 1C000000 		.4byte	.LFE58
 8880 01d0 00000000 		.4byte	.LFB59
 8881 01d4 20000000 		.4byte	.LFE59
 8882 01d8 00000000 		.4byte	.LFB60
 8883 01dc 18000000 		.4byte	.LFE60
 8884 01e0 00000000 		.4byte	.LFB61
 8885 01e4 18000000 		.4byte	.LFE61
 8886 01e8 00000000 		.4byte	.LFB62
 8887 01ec 34000000 		.4byte	.LFE62
 8888 01f0 00000000 		.4byte	.LFB63
 8889 01f4 18000000 		.4byte	.LFE63
 8890 01f8 00000000 		.4byte	.LFB64
 8891 01fc 18000000 		.4byte	.LFE64
 8892 0200 00000000 		.4byte	.LFB65
 8893 0204 14000000 		.4byte	.LFE65
 8894 0208 00000000 		.4byte	.LFB66
 8895 020c 2C000000 		.4byte	.LFE66
 8896 0210 00000000 		.4byte	.LFB67
 8897 0214 1C000000 		.4byte	.LFE67
 8898 0218 00000000 		.4byte	.LFB68
 8899 021c 44000000 		.4byte	.LFE68
 8900 0220 00000000 		.4byte	.LFB69
 8901 0224 C0000000 		.4byte	.LFE69
 8902 0228 00000000 		.4byte	.LFB70
 8903 022c 38000000 		.4byte	.LFE70
 8904 0230 00000000 		.4byte	.LFB71
 8905 0234 38000000 		.4byte	.LFE71
 8906 0238 00000000 		.4byte	.LFB72
 8907 023c 38000000 		.4byte	.LFE72
 8908 0240 00000000 		.4byte	.LFB73
 8909 0244 A0000000 		.4byte	.LFE73
 8910 0248 00000000 		.4byte	0
 8911 024c 00000000 		.4byte	0
 8912              		.section	.debug_line,"",%progbits
 8913              	.Ldebug_line0:
 8914 0000 4E090000 		.section	.debug_str,"MS",%progbits,1
 8914      02004D00 
ARM GAS  C:\Users\essele\AppData\Local\Temp\ccaJcTi8.s 			page 216


 8914      00000201 
 8914      FB0E0D00 
 8914      01010101 
 8915              	.LASF34:
 8916 0000 666C6173 		.ascii	"flashCtlReg\000"
 8916      6843746C 
 8916      52656700 
 8917              	.LASF120:
 8918 000c 4379496E 		.ascii	"CyIntGetVector\000"
 8918      74476574 
 8918      56656374 
 8918      6F7200
 8919              	.LASF151:
 8920 001b 43795379 		.ascii	"CySysTickClear\000"
 8920      73546963 
 8920      6B436C65 
 8920      617200
 8921              	.LASF133:
 8922 002a 43794465 		.ascii	"CyDelay\000"
 8922      6C617900 
 8923              	.LASF121:
 8924 0032 4379496E 		.ascii	"CyIntSetPriority\000"
 8924      74536574 
 8924      5072696F 
 8924      72697479 
 8924      00
 8925              	.LASF88:
 8926 0043 43795379 		.ascii	"CySysClkPllGetUnlockStatus\000"
 8926      73436C6B 
 8926      506C6C47 
 8926      6574556E 
 8926      6C6F636B 
 8927              	.LASF125:
 8928 005e 4379496E 		.ascii	"CyIntGetPriority\000"
 8928      74476574 
 8928      5072696F 
 8928      72697479 
 8928      00
 8929              	.LASF160:
 8930 006f 43795379 		.ascii	"CySysSetDmacAccessArbPriority\000"
 8930      73536574 
 8930      446D6163 
 8930      41636365 
 8930      73734172 
 8931              	.LASF134:
 8932 008d 6D696C6C 		.ascii	"milliseconds\000"
 8932      69736563 
 8932      6F6E6473 
 8932      00
 8933              	.LASF60:
 8934 009a 72657475 		.ascii	"returnStatus\000"
 8934      726E5374 
 8934      61747573 
 8934      00
 8935              	.LASF165:
 8936 00a7 63796465 		.ascii	"cydelayFreqKhz\000"
 8936      6C617946 
ARM GAS  C:\Users\essele\AppData\Local\Temp\ccaJcTi8.s 			page 217


 8936      7265714B 
 8936      687A00
 8937              	.LASF38:
 8938 00b6 43795379 		.ascii	"CySysClkUsbCuSortTrim\000"
 8938      73436C6B 
 8938      55736243 
 8938      75536F72 
 8938      74547269 
 8939              	.LASF98:
 8940 00cc 66657272 		.ascii	"ferr\000"
 8940      00
 8941              	.LASF8:
 8942 00d1 756E7369 		.ascii	"unsigned int\000"
 8942      676E6564 
 8942      20696E74 
 8942      00
 8943              	.LASF39:
 8944 00de 43795379 		.ascii	"CySysClkImoDisableUsbLock\000"
 8944      73436C6B 
 8944      496D6F44 
 8944      69736162 
 8944      6C655573 
 8945              	.LASF67:
 8946 00f8 66547269 		.ascii	"fTrim\000"
 8946      6D00
 8947              	.LASF162:
 8948 00fe 696E7465 		.ascii	"interfaceNumber\000"
 8948      72666163 
 8948      654E756D 
 8948      62657200 
 8949              	.LASF92:
 8950 010e 66726571 		.ascii	"freqTol\000"
 8950      546F6C00 
 8951              	.LASF44:
 8952 0116 43795379 		.ascii	"CySysEnablePumpClock\000"
 8952      73456E61 
 8952      626C6550 
 8952      756D7043 
 8952      6C6F636B 
 8953              	.LASF31:
 8954 012b 696E7465 		.ascii	"interruptState\000"
 8954      72727570 
 8954      74537461 
 8954      746500
 8955              	.LASF40:
 8956 013a 43795379 		.ascii	"CySysClkImoGetWcoLock\000"
 8956      73436C6B 
 8956      496D6F47 
 8956      65745763 
 8956      6F4C6F63 
 8957              	.LASF17:
 8958 0150 72656738 		.ascii	"reg8\000"
 8958      00
 8959              	.LASF173:
 8960 0155 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 8960      43313120 
 8960      352E342E 
ARM GAS  C:\Users\essele\AppData\Local\Temp\ccaJcTi8.s 			page 218


 8960      31203230 
 8960      31363036 
 8961 0188 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m0 -mthumb -g -O"
 8961      20726576 
 8961      6973696F 
 8961      6E203233 
 8961      37373135 
 8962 01bb 30202D66 		.ascii	"0 -ffunction-sections -ffat-lto-objects\000"
 8962      66756E63 
 8962      74696F6E 
 8962      2D736563 
 8962      74696F6E 
 8963              	.LASF102:
 8964 01e3 43795379 		.ascii	"CySysLvdEnable\000"
 8964      734C7664 
 8964      456E6162 
 8964      6C6500
 8965              	.LASF128:
 8966 01f2 4379496E 		.ascii	"CyIntDisable\000"
 8966      74446973 
 8966      61626C65 
 8966      00
 8967              	.LASF168:
 8968 01ff 43795379 		.ascii	"CySysTickInitVar\000"
 8968      73546963 
 8968      6B496E69 
 8968      74566172 
 8968      00
 8969              	.LASF105:
 8970 0210 43795379 		.ascii	"CySysLvdGetInterruptSource\000"
 8970      734C7664 
 8970      47657449 
 8970      6E746572 
 8970      72757074 
 8971              	.LASF81:
 8972 022b 72656665 		.ascii	"reference\000"
 8972      72656E63 
 8972      6500
 8973              	.LASF152:
 8974 0235 43795379 		.ascii	"CySysTickSetCallback\000"
 8974      73546963 
 8974      6B536574 
 8974      43616C6C 
 8974      6261636B 
 8975              	.LASF111:
 8976 024a 4379456E 		.ascii	"CyEnableInts\000"
 8976      61626C65 
 8976      496E7473 
 8976      00
 8977              	.LASF137:
 8978 0257 43794465 		.ascii	"CyDelayFreq\000"
 8978      6C617946 
 8978      72657100 
 8979              	.LASF41:
 8980 0263 43795379 		.ascii	"CySysClkImoGetUsbLock\000"
 8980      73436C6B 
 8980      496D6F47 
ARM GAS  C:\Users\essele\AppData\Local\Temp\ccaJcTi8.s 			page 219


 8980      65745573 
 8980      624C6F63 
 8981              	.LASF27:
 8982 0279 63795F73 		.ascii	"cy_sys_clk_pll_struct\000"
 8982      79735F63 
 8982      6C6B5F70 
 8982      6C6C5F73 
 8982      74727563 
 8983              	.LASF61:
 8984 028f 43795379 		.ascii	"CySysClkEcoStop\000"
 8984      73436C6B 
 8984      45636F53 
 8984      746F7000 
 8985              	.LASF13:
 8986 029f 666C6F61 		.ascii	"float\000"
 8986      7400
 8987              	.LASF123:
 8988 02a5 73686966 		.ascii	"shift\000"
 8988      7400
 8989              	.LASF12:
 8990 02ab 696E7433 		.ascii	"int32\000"
 8990      3200
 8991              	.LASF145:
 8992 02b1 43795379 		.ascii	"CySysTickGetReload\000"
 8992      73546963 
 8992      6B476574 
 8992      52656C6F 
 8992      616400
 8993              	.LASF89:
 8994 02c4 43795379 		.ascii	"CySysClkPllSetFrequency\000"
 8994      73436C6B 
 8994      506C6C53 
 8994      65744672 
 8994      65717565 
 8995              	.LASF135:
 8996 02dc 43794465 		.ascii	"CyDelayUs\000"
 8996      6C617955 
 8996      7300
 8997              	.LASF7:
 8998 02e6 6C6F6E67 		.ascii	"long long unsigned int\000"
 8998      206C6F6E 
 8998      6720756E 
 8998      7369676E 
 8998      65642069 
 8999              	.LASF108:
 9000 02fd 72656173 		.ascii	"reason\000"
 9000      6F6E00
 9001              	.LASF131:
 9002 0304 43794861 		.ascii	"CyHalt\000"
 9002      6C7400
 9003              	.LASF175:
 9004 030b 5C5C4D61 		.ascii	"\\\\Mac\\Home\\Documents\\dev\\yaugi\\GPIB USB Adap"
 9004      635C486F 
 9004      6D655C44 
 9004      6F63756D 
 9004      656E7473 
 9005 0337 7465725C 		.ascii	"ter\\GPIB USB 1.cydsn\000"
ARM GAS  C:\Users\essele\AppData\Local\Temp\ccaJcTi8.s 			page 220


 9005      47504942 
 9005      20555342 
 9005      20312E63 
 9005      7964736E 
 9006              	.LASF46:
 9007 034c 656E6162 		.ascii	"enable\000"
 9007      6C6500
 9008              	.LASF32:
 9009 0353 72656754 		.ascii	"regTmp\000"
 9009      6D7000
 9010              	.LASF124:
 9011 035a 76616C75 		.ascii	"value\000"
 9011      6500
 9012              	.LASF57:
 9013 0360 43795379 		.ascii	"CySysClkGetSysclkSource\000"
 9013      73436C6B 
 9013      47657453 
 9013      7973636C 
 9013      6B536F75 
 9014              	.LASF93:
 9015 0378 714D696E 		.ascii	"qMin\000"
 9015      00
 9016              	.LASF141:
 9017 037d 43795379 		.ascii	"CySysTickStop\000"
 9017      73546963 
 9017      6B53746F 
 9017      7000
 9018              	.LASF127:
 9019 038b 4379496E 		.ascii	"CyIntGetState\000"
 9019      74476574 
 9019      53746174 
 9019      6500
 9020              	.LASF164:
 9021 0399 63796465 		.ascii	"cydelayFreqHz\000"
 9021      6C617946 
 9021      72657148 
 9021      7A00
 9022              	.LASF90:
 9023 03a7 696E7075 		.ascii	"inputFreq\000"
 9023      74467265 
 9023      7100
 9024              	.LASF155:
 9025 03b1 43795379 		.ascii	"CySysTickGetCallback\000"
 9025      73546963 
 9025      6B476574 
 9025      43616C6C 
 9025      6261636B 
 9026              	.LASF116:
 9027 03c6 6F6C6449 		.ascii	"oldIsr\000"
 9027      737200
 9028              	.LASF169:
 9029 03cd 6379496D 		.ascii	"cyImoFreqMhz2Reg\000"
 9029      6F467265 
 9029      714D687A 
 9029      32526567 
 9029      00
 9030              	.LASF95:
ARM GAS  C:\Users\essele\AppData\Local\Temp\ccaJcTi8.s 			page 221


 9031 03de 7156616C 		.ascii	"qVal\000"
 9031      00
 9032              	.LASF129:
 9033 03e3 4379496E 		.ascii	"CyIntSetPending\000"
 9033      74536574 
 9033      50656E64 
 9033      696E6700 
 9034              	.LASF45:
 9035 03f3 636C6B53 		.ascii	"clkSelect\000"
 9035      656C6563 
 9035      7400
 9036              	.LASF110:
 9037 03fd 696E7453 		.ascii	"intState\000"
 9037      74617465 
 9037      00
 9038              	.LASF76:
 9039 0406 636F756E 		.ascii	"counts\000"
 9039      747300
 9040              	.LASF30:
 9041 040d 66726571 		.ascii	"freq\000"
 9041      00
 9042              	.LASF84:
 9043 0412 62797061 		.ascii	"bypass\000"
 9043      737300
 9044              	.LASF22:
 9045 0419 63795379 		.ascii	"cySysTickCallback\000"
 9045      73546963 
 9045      6B43616C 
 9045      6C626163 
 9045      6B00
 9046              	.LASF130:
 9047 042b 4379496E 		.ascii	"CyIntClearPending\000"
 9047      74436C65 
 9047      61725065 
 9047      6E64696E 
 9047      6700
 9048              	.LASF15:
 9049 043d 63686172 		.ascii	"char\000"
 9049      00
 9050              	.LASF150:
 9051 0442 43795379 		.ascii	"CySysTickGetCountFlag\000"
 9051      73546963 
 9051      6B476574 
 9051      436F756E 
 9051      74466C61 
 9052              	.LASF29:
 9053 0458 43795379 		.ascii	"CySysClkImoStop\000"
 9053      73436C6B 
 9053      496D6F53 
 9053      746F7000 
 9054              	.LASF42:
 9055 0468 43795379 		.ascii	"CySysClkWriteHfclkDirect\000"
 9055      73436C6B 
 9055      57726974 
 9055      65486663 
 9055      6C6B4469 
 9056              	.LASF10:
ARM GAS  C:\Users\essele\AppData\Local\Temp\ccaJcTi8.s 			page 222


 9057 0481 75696E74 		.ascii	"uint16\000"
 9057      313600
 9058              	.LASF80:
 9059 0488 66656564 		.ascii	"feedback\000"
 9059      6261636B 
 9059      00
 9060              	.LASF119:
 9061 0491 4379496E 		.ascii	"CyIntSetVector\000"
 9061      74536574 
 9061      56656374 
 9061      6F7200
 9062              	.LASF26:
 9063 04a0 63795F73 		.ascii	"cy_sys_clk_pll_regs_struct\000"
 9063      79735F63 
 9063      6C6B5F70 
 9063      6C6C5F72 
 9063      6567735F 
 9064              	.LASF24:
 9065 04bb 73746174 		.ascii	"status\000"
 9065      757300
 9066              	.LASF158:
 9067 04c2 43795379 		.ascii	"CySysSetRamAccessArbPriority\000"
 9067      73536574 
 9067      52616D41 
 9067      63636573 
 9067      73417262 
 9068              	.LASF62:
 9069 04df 43795379 		.ascii	"CySysClkEcoReadStatus\000"
 9069      73436C6B 
 9069      45636F52 
 9069      65616453 
 9069      74617475 
 9070              	.LASF79:
 9071 04f5 43795379 		.ascii	"CySysClkPllSetPQ\000"
 9071      73436C6B 
 9071      506C6C53 
 9071      65745051 
 9071      00
 9072              	.LASF66:
 9073 0506 61547269 		.ascii	"aTrim\000"
 9073      6D00
 9074              	.LASF73:
 9075 050c 676D4D69 		.ascii	"gmMin\000"
 9075      6E00
 9076              	.LASF72:
 9077 0512 6D617841 		.ascii	"maxAmplitude\000"
 9077      6D706C69 
 9077      74756465 
 9077      00
 9078              	.LASF161:
 9079 051f 43795379 		.ascii	"CySysSetPeripheralAccessArbPriority\000"
 9079      73536574 
 9079      50657269 
 9079      70686572 
 9079      616C4163 
 9080              	.LASF6:
 9081 0543 6C6F6E67 		.ascii	"long long int\000"
ARM GAS  C:\Users\essele\AppData\Local\Temp\ccaJcTi8.s 			page 223


 9081      206C6F6E 
 9081      6720696E 
 9081      7400
 9082              	.LASF35:
 9083 0551 43795379 		.ascii	"CySysClkImoEnableWcoLock\000"
 9083      73436C6B 
 9083      496D6F45 
 9083      6E61626C 
 9083      6557636F 
 9084              	.LASF115:
 9085 056a 61646472 		.ascii	"address\000"
 9085      65737300 
 9086              	.LASF140:
 9087 0572 43795379 		.ascii	"CySysTickEnable\000"
 9087      73546963 
 9087      6B456E61 
 9087      626C6500 
 9088              	.LASF107:
 9089 0582 43795379 		.ascii	"CySysGetResetReason\000"
 9089      73476574 
 9089      52657365 
 9089      74526561 
 9089      736F6E00 
 9090              	.LASF159:
 9091 0596 43795379 		.ascii	"CySysSetFlashAccessArbPriority\000"
 9091      73536574 
 9091      466C6173 
 9091      68416363 
 9091      65737341 
 9092              	.LASF118:
 9093 05b5 4379496E 		.ascii	"CyIntGetSysVector\000"
 9093      74476574 
 9093      53797356 
 9093      6563746F 
 9093      7200
 9094              	.LASF163:
 9095 05c7 43795379 		.ascii	"CySysTickCallbacks\000"
 9095      73546963 
 9095      6B43616C 
 9095      6C626163 
 9095      6B7300
 9096              	.LASF146:
 9097 05da 43795379 		.ascii	"CySysTickGetValue\000"
 9097      73546963 
 9097      6B476574 
 9097      56616C75 
 9097      6500
 9098              	.LASF85:
 9099 05ec 43795379 		.ascii	"CySysClkPllGetBypassMode\000"
 9099      73436C6B 
 9099      506C6C47 
 9099      65744279 
 9099      70617373 
 9100              	.LASF101:
 9101 0605 43795379 		.ascii	"CySysClkPllSetOutputDivider\000"
 9101      73436C6B 
 9101      506C6C53 
ARM GAS  C:\Users\essele\AppData\Local\Temp\ccaJcTi8.s 			page 224


 9101      65744F75 
 9101      74707574 
 9102              	.LASF19:
 9103 0621 63796973 		.ascii	"cyisraddress\000"
 9103      72616464 
 9103      72657373 
 9103      00
 9104              	.LASF65:
 9105 062e 77445472 		.ascii	"wDTrim\000"
 9105      696D00
 9106              	.LASF58:
 9107 0635 43795379 		.ascii	"CySysClkEcoStart\000"
 9107      73436C6B 
 9107      45636F53 
 9107      74617274 
 9107      00
 9108              	.LASF11:
 9109 0646 75696E74 		.ascii	"uint32\000"
 9109      333200
 9110              	.LASF86:
 9111 064d 43795379 		.ascii	"CySysClkPllConfigChangeAllowed\000"
 9111      73436C6B 
 9111      506C6C43 
 9111      6F6E6669 
 9111      67436861 
 9112              	.LASF138:
 9113 066c 43795379 		.ascii	"CySysTickStart\000"
 9113      73546963 
 9113      6B537461 
 9113      727400
 9114              	.LASF176:
 9115 067b 43795379 		.ascii	"CySysTickServiceCallbacks\000"
 9115      73546963 
 9115      6B536572 
 9115      76696365 
 9115      43616C6C 
 9116              	.LASF112:
 9117 0695 6D61736B 		.ascii	"mask\000"
 9117      00
 9118              	.LASF147:
 9119 069a 43795379 		.ascii	"CySysTickSetClockSource\000"
 9119      73546963 
 9119      6B536574 
 9119      436C6F63 
 9119      6B536F75 
 9120              	.LASF75:
 9121 06b2 77616974 		.ascii	"wait\000"
 9121      00
 9122              	.LASF63:
 9123 06b7 72657475 		.ascii	"returnValue\000"
 9123      726E5661 
 9123      6C756500 
 9124              	.LASF28:
 9125 06c3 43795379 		.ascii	"CySysClkImoStart\000"
 9125      73436C6B 
 9125      496D6F53 
 9125      74617274 
ARM GAS  C:\Users\essele\AppData\Local\Temp\ccaJcTi8.s 			page 225


 9125      00
 9126              	.LASF91:
 9127 06d4 706C6C46 		.ascii	"pllFreq\000"
 9127      72657100 
 9128              	.LASF55:
 9129 06dc 77636F4C 		.ascii	"wcoLock\000"
 9129      6F636B00 
 9130              	.LASF20:
 9131 06e4 6C6F6E67 		.ascii	"long double\000"
 9131      20646F75 
 9131      626C6500 
 9132              	.LASF109:
 9133 06f0 43794469 		.ascii	"CyDisableInts\000"
 9133      7361626C 
 9133      65496E74 
 9133      7300
 9134              	.LASF18:
 9135 06fe 72656733 		.ascii	"reg32\000"
 9135      3200
 9136              	.LASF148:
 9137 0704 636C6F63 		.ascii	"clockSource\000"
 9137      6B536F75 
 9137      72636500 
 9138              	.LASF43:
 9139 0710 746D7052 		.ascii	"tmpReg\000"
 9139      656700
 9140              	.LASF23:
 9141 0717 636F6E66 		.ascii	"config\000"
 9141      696700
 9142              	.LASF54:
 9143 071e 63757272 		.ascii	"currentImoTrim2Value\000"
 9143      656E7449 
 9143      6D6F5472 
 9143      696D3256 
 9143      616C7565 
 9144              	.LASF71:
 9145 0733 634C6F61 		.ascii	"cLoad\000"
 9145      6400
 9146              	.LASF144:
 9147 0739 43795379 		.ascii	"CySysTickSetReload\000"
 9147      73546963 
 9147      6B536574 
 9147      52656C6F 
 9147      616400
 9148              	.LASF2:
 9149 074c 73686F72 		.ascii	"short int\000"
 9149      7420696E 
 9149      7400
 9150              	.LASF49:
 9151 0756 64697669 		.ascii	"divider\000"
 9151      64657200 
 9152              	.LASF4:
 9153 075e 6C6F6E67 		.ascii	"long int\000"
 9153      20696E74 
 9153      00
 9154              	.LASF87:
 9155 0767 706C6C42 		.ascii	"pllBypassMode\000"
ARM GAS  C:\Users\essele\AppData\Local\Temp\ccaJcTi8.s 			page 226


 9155      79706173 
 9155      734D6F64 
 9155      6500
 9156              	.LASF70:
 9157 0775 43795379 		.ascii	"CySysClkConfigureEcoDrive\000"
 9157      73436C6B 
 9157      436F6E66 
 9157      69677572 
 9157      6545636F 
 9158              	.LASF113:
 9159 078f 4379496E 		.ascii	"CyIntSetSysVector\000"
 9159      74536574 
 9159      53797356 
 9159      6563746F 
 9159      7200
 9160              	.LASF37:
 9161 07a1 43795379 		.ascii	"CySysClkImoEnableUsbLock\000"
 9161      73436C6B 
 9161      496D6F45 
 9161      6E61626C 
 9161      65557362 
 9162              	.LASF56:
 9163 07ba 7573624C 		.ascii	"usbLock\000"
 9163      6F636B00 
 9164              	.LASF122:
 9165 07c2 7072696F 		.ascii	"priority\000"
 9165      72697479 
 9165      00
 9166              	.LASF172:
 9167 07cb 43795379 		.ascii	"CySysClkPumpConfig\000"
 9167      73436C6B 
 9167      50756D70 
 9167      436F6E66 
 9167      696700
 9168              	.LASF97:
 9169 07de 6676636F 		.ascii	"fvco\000"
 9169      00
 9170              	.LASF48:
 9171 07e3 43795379 		.ascii	"CySysClkWriteSysclkDiv\000"
 9171      73436C6B 
 9171      57726974 
 9171      65537973 
 9171      636C6B44 
 9172              	.LASF143:
 9173 07fa 43795379 		.ascii	"CySysTickDisableInterrupt\000"
 9173      73546963 
 9173      6B446973 
 9173      61626C65 
 9173      496E7465 
 9174              	.LASF69:
 9175 0814 67547269 		.ascii	"gTrim\000"
 9175      6D00
 9176              	.LASF174:
 9177 081a 47656E65 		.ascii	"Generated_Source\\PSoC4\\CyLib.c\000"
 9177      72617465 
 9177      645F536F 
 9177      75726365 
ARM GAS  C:\Users\essele\AppData\Local\Temp\ccaJcTi8.s 			page 227


 9177      5C50536F 
 9178              	.LASF100:
 9179 0839 736F7572 		.ascii	"source\000"
 9179      636500
 9180              	.LASF114:
 9181 0840 6E756D62 		.ascii	"number\000"
 9181      657200
 9182              	.LASF33:
 9183 0847 6C664C69 		.ascii	"lfLimit\000"
 9183      6D697400 
 9184              	.LASF96:
 9185 084f 7056616C 		.ascii	"pVal\000"
 9185      00
 9186              	.LASF139:
 9187 0854 43795379 		.ascii	"CySysTickInit\000"
 9187      73546963 
 9187      6B496E69 
 9187      7400
 9188              	.LASF78:
 9189 0862 43795379 		.ascii	"CySysClkPllStop\000"
 9189      73436C6B 
 9189      506C6C53 
 9189      746F7000 
 9190              	.LASF157:
 9191 0872 756E6971 		.ascii	"uniqueId\000"
 9191      75654964 
 9191      00
 9192              	.LASF94:
 9193 087b 714D6178 		.ascii	"qMax\000"
 9193      00
 9194              	.LASF21:
 9195 0880 73697A65 		.ascii	"sizetype\000"
 9195      74797065 
 9195      00
 9196              	.LASF83:
 9197 0889 43795379 		.ascii	"CySysClkPllSetBypassMode\000"
 9197      73436C6B 
 9197      506C6C53 
 9197      65744279 
 9197      70617373 
 9198              	.LASF64:
 9199 08a2 43795379 		.ascii	"CySysClkConfigureEcoTrim\000"
 9199      73436C6B 
 9199      436F6E66 
 9199      69677572 
 9199      6545636F 
 9200              	.LASF5:
 9201 08bb 6C6F6E67 		.ascii	"long unsigned int\000"
 9201      20756E73 
 9201      69676E65 
 9201      6420696E 
 9201      7400
 9202              	.LASF154:
 9203 08cd 72657456 		.ascii	"retVal\000"
 9203      616C00
 9204              	.LASF68:
 9205 08d4 72547269 		.ascii	"rTrim\000"
ARM GAS  C:\Users\essele\AppData\Local\Temp\ccaJcTi8.s 			page 228


 9205      6D00
 9206              	.LASF106:
 9207 08da 43795379 		.ascii	"CySysLvdClearInterrupt\000"
 9207      734C7664 
 9207      436C6561 
 9207      72496E74 
 9207      65727275 
 9208              	.LASF149:
 9209 08f1 43795379 		.ascii	"CySysTickGetClockSource\000"
 9209      73546963 
 9209      6B476574 
 9209      436C6F63 
 9209      6B536F75 
 9210              	.LASF132:
 9211 0909 4379536F 		.ascii	"CySoftwareReset\000"
 9211      66747761 
 9211      72655265 
 9211      73657400 
 9212              	.LASF16:
 9213 0919 63797374 		.ascii	"cystatus\000"
 9213      61747573 
 9213      00
 9214              	.LASF53:
 9215 0922 6E657749 		.ascii	"newImoTrim2Value\000"
 9215      6D6F5472 
 9215      696D3256 
 9215      616C7565 
 9215      00
 9216              	.LASF59:
 9217 0933 74696D65 		.ascii	"timeoutUs\000"
 9217      6F757455 
 9217      7300
 9218              	.LASF1:
 9219 093d 756E7369 		.ascii	"unsigned char\000"
 9219      676E6564 
 9219      20636861 
 9219      7200
 9220              	.LASF166:
 9221 094b 63796465 		.ascii	"cydelayFreqMhz\000"
 9221      6C617946 
 9221      7265714D 
 9221      687A00
 9222              	.LASF117:
 9223 095a 72616D56 		.ascii	"ramVectorTable\000"
 9223      6563746F 
 9223      72546162 
 9223      6C6500
 9224              	.LASF156:
 9225 0969 43794765 		.ascii	"CyGetUniqueId\000"
 9225      74556E69 
 9225      71756549 
 9225      6400
 9226              	.LASF153:
 9227 0977 66756E63 		.ascii	"function\000"
 9227      74696F6E 
 9227      00
 9228              	.LASF25:
ARM GAS  C:\Users\essele\AppData\Local\Temp\ccaJcTi8.s 			page 229


 9229 0980 74657374 		.ascii	"test\000"
 9229      00
 9230              	.LASF77:
 9231 0985 43795379 		.ascii	"CySysClkPllGetLockStatus\000"
 9231      73436C6B 
 9231      506C6C47 
 9231      65744C6F 
 9231      636B5374 
 9232              	.LASF136:
 9233 099e 6D696372 		.ascii	"microseconds\000"
 9233      6F736563 
 9233      6F6E6473 
 9233      00
 9234              	.LASF74:
 9235 09ab 43795379 		.ascii	"CySysClkPllStart\000"
 9235      73436C6B 
 9235      506C6C53 
 9235      74617274 
 9235      00
 9236              	.LASF142:
 9237 09bc 43795379 		.ascii	"CySysTickEnableInterrupt\000"
 9237      73546963 
 9237      6B456E61 
 9237      626C6549 
 9237      6E746572 
 9238              	.LASF167:
 9239 09d5 63796465 		.ascii	"cydelay32kMs\000"
 9239      6C617933 
 9239      326B4D73 
 9239      00
 9240              	.LASF51:
 9241 09e2 62675472 		.ascii	"bgTrim4\000"
 9241      696D3400 
 9242              	.LASF52:
 9243 09ea 62675472 		.ascii	"bgTrim5\000"
 9243      696D3500 
 9244              	.LASF36:
 9245 09f2 43795379 		.ascii	"CySysClkImoDisableWcoLock\000"
 9245      73436C6B 
 9245      496D6F44 
 9245      69736162 
 9245      6C655763 
 9246              	.LASF170:
 9247 0a0c 43795379 		.ascii	"CySysClkImoTrim4\000"
 9247      73436C6B 
 9247      496D6F54 
 9247      72696D34 
 9247      00
 9248              	.LASF171:
 9249 0a1d 43795379 		.ascii	"CySysClkImoTrim5\000"
 9249      73436C6B 
 9249      496D6F54 
 9249      72696D35 
 9249      00
 9250              	.LASF50:
 9251 0a2e 43795379 		.ascii	"CySysClkWriteImoFreq\000"
 9251      73436C6B 
ARM GAS  C:\Users\essele\AppData\Local\Temp\ccaJcTi8.s 			page 230


 9251      57726974 
 9251      65496D6F 
 9251      46726571 
 9252              	.LASF126:
 9253 0a43 4379496E 		.ascii	"CyIntEnable\000"
 9253      74456E61 
 9253      626C6500 
 9254              	.LASF103:
 9255 0a4f 74687265 		.ascii	"threshold\000"
 9255      73686F6C 
 9255      6400
 9256              	.LASF99:
 9257 0a59 43795379 		.ascii	"CySysClkPllSetSource\000"
 9257      73436C6B 
 9257      506C6C53 
 9257      6574536F 
 9257      75726365 
 9258              	.LASF0:
 9259 0a6e 7369676E 		.ascii	"signed char\000"
 9259      65642063 
 9259      68617200 
 9260              	.LASF3:
 9261 0a7a 73686F72 		.ascii	"short unsigned int\000"
 9261      7420756E 
 9261      7369676E 
 9261      65642069 
 9261      6E7400
 9262              	.LASF82:
 9263 0a8d 63757272 		.ascii	"current\000"
 9263      656E7400 
 9264              	.LASF9:
 9265 0a95 75696E74 		.ascii	"uint8\000"
 9265      3800
 9266              	.LASF14:
 9267 0a9b 646F7562 		.ascii	"double\000"
 9267      6C6500
 9268              	.LASF47:
 9269 0aa2 73797363 		.ascii	"sysclkSource\000"
 9269      6C6B536F 
 9269      75726365 
 9269      00
 9270              	.LASF104:
 9271 0aaf 43795379 		.ascii	"CySysLvdDisable\000"
 9271      734C7664 
 9271      44697361 
 9271      626C6500 
 9272              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
