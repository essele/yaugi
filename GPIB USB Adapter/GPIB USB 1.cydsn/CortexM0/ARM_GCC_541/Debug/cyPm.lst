ARM GAS  C:\Users\essele\AppData\Local\Temp\cczC3umF.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m0
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 0
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"cyPm.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.CySysPmHibPinsDisableInputBuf,"ax",%progbits
  20              		.align	2
  21              		.code	16
  22              		.thumb_func
  23              		.type	CySysPmHibPinsDisableInputBuf, %function
  24              	CySysPmHibPinsDisableInputBuf:
  25              	.LFB0:
  26              		.file 1 "Generated_Source\\PSoC4\\cyPm.h"
   1:Generated_Source\PSoC4/cyPm.h **** /***************************************************************************//**
   2:Generated_Source\PSoC4/cyPm.h **** * \file cyPm.h
   3:Generated_Source\PSoC4/cyPm.h **** * \version 5.80
   4:Generated_Source\PSoC4/cyPm.h **** *
   5:Generated_Source\PSoC4/cyPm.h **** * \brief Provides the function definitions for the power management API.
   6:Generated_Source\PSoC4/cyPm.h **** *
   7:Generated_Source\PSoC4/cyPm.h **** * \note Documentation of the API's in this file is located in the System
   8:Generated_Source\PSoC4/cyPm.h **** * Reference Guide provided with PSoC Creator.
   9:Generated_Source\PSoC4/cyPm.h **** *
  10:Generated_Source\PSoC4/cyPm.h **** ********************************************************************************
  11:Generated_Source\PSoC4/cyPm.h **** * \copyright
  12:Generated_Source\PSoC4/cyPm.h **** * Copyright 2011-2018, Cypress Semiconductor Corporation.  All rights reserved.
  13:Generated_Source\PSoC4/cyPm.h **** * You may use this file only in accordance with the license, terms, conditions,
  14:Generated_Source\PSoC4/cyPm.h **** * disclaimers, and limitations in the end user license agreement accompanying
  15:Generated_Source\PSoC4/cyPm.h **** * the software package with which this file was provided.
  16:Generated_Source\PSoC4/cyPm.h **** *******************************************************************************/
  17:Generated_Source\PSoC4/cyPm.h **** 
  18:Generated_Source\PSoC4/cyPm.h **** #if !defined(CY_BOOT_CYPM_H)
  19:Generated_Source\PSoC4/cyPm.h **** #define CY_BOOT_CYPM_H
  20:Generated_Source\PSoC4/cyPm.h **** 
  21:Generated_Source\PSoC4/cyPm.h **** #include "cytypes.h"
  22:Generated_Source\PSoC4/cyPm.h **** #include "cypins.h"
  23:Generated_Source\PSoC4/cyPm.h **** 
  24:Generated_Source\PSoC4/cyPm.h **** 
  25:Generated_Source\PSoC4/cyPm.h **** /**
  26:Generated_Source\PSoC4/cyPm.h **** * \addtogroup group_power_management Power Management API
  27:Generated_Source\PSoC4/cyPm.h **** * @{
  28:Generated_Source\PSoC4/cyPm.h **** 
  29:Generated_Source\PSoC4/cyPm.h **** \brief PSoC 4 devices support the following power modes (in order of high to low power consumption)
  30:Generated_Source\PSoC4/cyPm.h **** Deep Sleep, Hibernate, and Stop. Active, Sleep and Deep-Sleep are standard ARM defined power modes,
  31:Generated_Source\PSoC4/cyPm.h **** ARM CPUs. Hibernate/Stop are even lower power modes that are entered from firmware just like Deep-S
ARM GAS  C:\Users\essele\AppData\Local\Temp\cczC3umF.s 			page 2


  32:Generated_Source\PSoC4/cyPm.h **** the CPU (and all peripherals) goes through a full reset.
  33:Generated_Source\PSoC4/cyPm.h **** 
  34:Generated_Source\PSoC4/cyPm.h **** There is a full range of power modes supported by PSoC devices to control power consumption and the
  35:Generated_Source\PSoC4/cyPm.h **** resources. See the following table for the supported power modes.
  36:Generated_Source\PSoC4/cyPm.h **** 
  37:Generated_Source\PSoC4/cyPm.h **** Mode        | PSoC 4000              | Rest Devices           |
  38:Generated_Source\PSoC4/cyPm.h **** ----------- | ---------------------- | ---------------------- |
  39:Generated_Source\PSoC4/cyPm.h **** Active      |          Y             |       Y                |
  40:Generated_Source\PSoC4/cyPm.h **** Sleep       |          Y             |       Y                |
  41:Generated_Source\PSoC4/cyPm.h **** Deep Sleep  |          Y             |       Y                |
  42:Generated_Source\PSoC4/cyPm.h **** Hibernate   |          Y             |       Y                |
  43:Generated_Source\PSoC4/cyPm.h **** Stop        |                        |       Y                |
  44:Generated_Source\PSoC4/cyPm.h **** 
  45:Generated_Source\PSoC4/cyPm.h **** For the ARM-based devices (PSoC 4), an interrupt is required for the CPU to wake up. The Power Mana
  46:Generated_Source\PSoC4/cyPm.h **** assumes that wakeup time is configured with a separate component (component-based wakeup time confi
  47:Generated_Source\PSoC4/cyPm.h **** interrupt to be issued on terminal count.
  48:Generated_Source\PSoC4/cyPm.h **** 
  49:Generated_Source\PSoC4/cyPm.h **** All pending interrupts should be cleared before the device is put into low power mode, even if they
  50:Generated_Source\PSoC4/cyPm.h **** 
  51:Generated_Source\PSoC4/cyPm.h **** The Power Management API is provided in the CyPm.c and CyPm.h files.
  52:Generated_Source\PSoC4/cyPm.h **** 
  53:Generated_Source\PSoC4/cyPm.h **** 
  54:Generated_Source\PSoC4/cyPm.h **** \section group_power_management_implementation Implementation
  55:Generated_Source\PSoC4/cyPm.h **** For PSoC 4100, PSoC 4000U and PSoC 4200 devices, the software should set EXT_VCCD bit in the PWR_CO
  56:Generated_Source\PSoC4/cyPm.h **** Vccd is shorted to Vddd on the board. This impacts the chip internal state transitions where it is 
  57:Generated_Source\PSoC4/cyPm.h **** whether Vccd is connected or floating to achieve minimum current in low power modes. Note Setting t
  58:Generated_Source\PSoC4/cyPm.h **** the active regulator and will lead to a system reset unless both Vddd and Vccd pins are supplied ex
  59:Generated_Source\PSoC4/cyPm.h **** the device TRM for more information.
  60:Generated_Source\PSoC4/cyPm.h **** 
  61:Generated_Source\PSoC4/cyPm.h **** It is safe to call PM APIs from the ISR. The wakeup conditions for Sleep and DeepSleep low power mo
  62:Generated_Source\PSoC4/cyPm.h **** in the following table.
  63:Generated_Source\PSoC4/cyPm.h **** 
  64:Generated_Source\PSoC4/cyPm.h **** Interrupts State  |  Condition                      | Wakeup    |   ISR Execution   |
  65:Generated_Source\PSoC4/cyPm.h **** ------------------|---------------------------------|-----------|------------------ |
  66:Generated_Source\PSoC4/cyPm.h **** Unmasked          | IRQ priority > current level    | Yes       |   Yes             |
  67:Generated_Source\PSoC4/cyPm.h **** Unmasked          | IRQ priority ≤ current level    | No        |   No              |
  68:Generated_Source\PSoC4/cyPm.h **** Masked            | IRQ priority > current level    | Yes       |   No              |
  69:Generated_Source\PSoC4/cyPm.h **** Masked            | IRQ priority ≤ current level    | No        |   No              |
  70:Generated_Source\PSoC4/cyPm.h **** 
  71:Generated_Source\PSoC4/cyPm.h **** 
  72:Generated_Source\PSoC4/cyPm.h **** \section group_power_management_clocks Clock Configuration
  73:Generated_Source\PSoC4/cyPm.h **** For PSoC 4100 BLE and PSoC 4200 BLE devices, the HFCLK source should be set to IMO before switching
  74:Generated_Source\PSoC4/cyPm.h **** power mode. The IMO should be enabled (by calling CySysClkImoStart(), if it is not) and HFCLK sourc
  75:Generated_Source\PSoC4/cyPm.h **** to IMO by calling CySysClkWriteHfclkDirect(CY_SYS_CLK_HFCLK_IMO).
  76:Generated_Source\PSoC4/cyPm.h **** 
  77:Generated_Source\PSoC4/cyPm.h **** If the System clock frequency is increased by switching to the IMO, the CySysFlashSetWaitCycles() f
  78:Generated_Source\PSoC4/cyPm.h **** appropriate parameter should be called beforehand. Also, it can optionally be called after lowering
  79:Generated_Source\PSoC4/cyPm.h **** frequency in order to improve CPU performance. See CySysFlashSetWaitCycles() description for the de
  80:Generated_Source\PSoC4/cyPm.h **** 
  81:Generated_Source\PSoC4/cyPm.h **** 
  82:Generated_Source\PSoC4/cyPm.h **** 
  83:Generated_Source\PSoC4/cyPm.h **** 
  84:Generated_Source\PSoC4/cyPm.h **** 
  85:Generated_Source\PSoC4/cyPm.h **** */
  86:Generated_Source\PSoC4/cyPm.h **** void CySysPmSleep(void);
  87:Generated_Source\PSoC4/cyPm.h **** void CySysPmDeepSleep(void);
  88:Generated_Source\PSoC4/cyPm.h **** 
ARM GAS  C:\Users\essele\AppData\Local\Temp\cczC3umF.s 			page 3


  89:Generated_Source\PSoC4/cyPm.h **** #if(CY_IP_SRSSV2)
  90:Generated_Source\PSoC4/cyPm.h ****     void CySysPmHibernate(void);
  91:Generated_Source\PSoC4/cyPm.h ****     void CySysPmFreezeIo(void);
  92:Generated_Source\PSoC4/cyPm.h ****     void CySysPmUnfreezeIo(void);
  93:Generated_Source\PSoC4/cyPm.h ****     uint32 CySysPmGetResetReason(void);
  94:Generated_Source\PSoC4/cyPm.h ****     void CySysPmStop(void);
  95:Generated_Source\PSoC4/cyPm.h ****     void CySysPmSetWakeupPolarity(uint32 polarity);
  96:Generated_Source\PSoC4/cyPm.h **** #else
  97:Generated_Source\PSoC4/cyPm.h ****     void CySysPmSetWakeupHoldoff(uint32 hfclkFrequencyMhz);
  98:Generated_Source\PSoC4/cyPm.h **** #endif /* (CY_IP_SRSSV2) */
  99:Generated_Source\PSoC4/cyPm.h **** 
 100:Generated_Source\PSoC4/cyPm.h **** /** @} group_power_management */
 101:Generated_Source\PSoC4/cyPm.h **** 
 102:Generated_Source\PSoC4/cyPm.h **** 
 103:Generated_Source\PSoC4/cyPm.h **** /*******************************************************************************
 104:Generated_Source\PSoC4/cyPm.h **** * The ARM compilers have the __wfi() intrinsic that inserts a WFI instruction
 105:Generated_Source\PSoC4/cyPm.h **** * into the instruction stream generated by the compiler. The GCC compiler has to
 106:Generated_Source\PSoC4/cyPm.h **** * execute assembly language instruction.
 107:Generated_Source\PSoC4/cyPm.h **** *******************************************************************************/
 108:Generated_Source\PSoC4/cyPm.h **** #if defined(__ARMCC_VERSION)    /* Instristic for Keil compilers */
 109:Generated_Source\PSoC4/cyPm.h ****     #define CY_PM_WFI       __wfi()
 110:Generated_Source\PSoC4/cyPm.h **** #else   /* ASM for GCC & IAR */
 111:Generated_Source\PSoC4/cyPm.h ****     #define CY_PM_WFI       __asm volatile ("WFI \n")
 112:Generated_Source\PSoC4/cyPm.h **** #endif /* __ARMCC_VERSION */
 113:Generated_Source\PSoC4/cyPm.h **** 
 114:Generated_Source\PSoC4/cyPm.h **** #if(CY_IP_SRSSV2)
 115:Generated_Source\PSoC4/cyPm.h **** 
 116:Generated_Source\PSoC4/cyPm.h ****     /* CySysPmSetWakeupPolarity() */
 117:Generated_Source\PSoC4/cyPm.h ****     #define CY_PM_STOP_WAKEUP_ACTIVE_LOW        ((uint32)(0x0u))    /**< Logical zero will wakeup t
 118:Generated_Source\PSoC4/cyPm.h ****     #define CY_PM_STOP_WAKEUP_ACTIVE_HIGH       ((uint32)(0x1u))    /**< Logical one will wakeup th
 119:Generated_Source\PSoC4/cyPm.h ****     #define CY_PM_STOP_WAKEUP_POLARITY          (CY_PM_STOP_WAKEUP_ACTIVE_LOW)
 120:Generated_Source\PSoC4/cyPm.h **** 
 121:Generated_Source\PSoC4/cyPm.h ****     /* CySysPmGetResetReason() */
 122:Generated_Source\PSoC4/cyPm.h ****     #define CY_PM_RESET_REASON_UNKN             (0u)    /**< Unknown reset reason. */
 123:Generated_Source\PSoC4/cyPm.h ****     #define CY_PM_RESET_REASON_XRES             (1u)    /**< Transition from OFF/XRES to RESET */
 124:Generated_Source\PSoC4/cyPm.h ****     #define CY_PM_RESET_REASON_WAKEUP_HIB       (2u)    /**< Transition/wakeup from HIBERNATE to RE
 125:Generated_Source\PSoC4/cyPm.h ****     #define CY_PM_RESET_REASON_WAKEUP_STOP      (3u)    /**< Transition/wakeup from STOP to RESET *
 126:Generated_Source\PSoC4/cyPm.h **** 
 127:Generated_Source\PSoC4/cyPm.h **** #endif /* (CY_IP_SRSSV2) */
 128:Generated_Source\PSoC4/cyPm.h **** 
 129:Generated_Source\PSoC4/cyPm.h **** 
 130:Generated_Source\PSoC4/cyPm.h **** /***************************************
 131:Generated_Source\PSoC4/cyPm.h **** *              Registers
 132:Generated_Source\PSoC4/cyPm.h **** ***************************************/
 133:Generated_Source\PSoC4/cyPm.h **** 
 134:Generated_Source\PSoC4/cyPm.h **** /* Power Mode Control */
 135:Generated_Source\PSoC4/cyPm.h **** #define CY_PM_PWR_CONTROL_REG               (*(reg32 *) CYREG_PWR_CONTROL)
 136:Generated_Source\PSoC4/cyPm.h **** #define CY_PM_PWR_CONTROL_PTR               ( (reg32 *) CYREG_PWR_CONTROL)
 137:Generated_Source\PSoC4/cyPm.h **** 
 138:Generated_Source\PSoC4/cyPm.h **** /* CPU System Control Register */
 139:Generated_Source\PSoC4/cyPm.h **** #if (CY_IP_CPUSS_CM0)
 140:Generated_Source\PSoC4/cyPm.h ****     #define CY_PM_CPU_SCR_REG                   (*(reg32 *) CYREG_CM0_SCR)
 141:Generated_Source\PSoC4/cyPm.h ****     #define CY_PM_CPU_SCR_PTR                   ( (reg32 *) CYREG_CM0_SCR)
 142:Generated_Source\PSoC4/cyPm.h **** #else /* CY_IP_CPUSS_CM0PLUS */
 143:Generated_Source\PSoC4/cyPm.h ****     #define CY_PM_CPU_SCR_REG                   (*(reg32 *) CYREG_CM0P_SCR)
 144:Generated_Source\PSoC4/cyPm.h ****     #define CY_PM_CPU_SCR_PTR                   ( (reg32 *) CYREG_CM0P_SCR)
 145:Generated_Source\PSoC4/cyPm.h **** #endif /* (CY_IP_CPUSS_CM0) */
ARM GAS  C:\Users\essele\AppData\Local\Temp\cczC3umF.s 			page 4


 146:Generated_Source\PSoC4/cyPm.h **** 
 147:Generated_Source\PSoC4/cyPm.h **** /* Power System Key & Delay Register */
 148:Generated_Source\PSoC4/cyPm.h **** #define CY_PM_PWR_KEY_DELAY_REG             (*(reg32 *) CYREG_PWR_KEY_DELAY)
 149:Generated_Source\PSoC4/cyPm.h **** #define CY_PM_PWR_KEY_DELAY_PTR             ( (reg32 *) CYREG_PWR_KEY_DELAY)
 150:Generated_Source\PSoC4/cyPm.h **** 
 151:Generated_Source\PSoC4/cyPm.h **** 
 152:Generated_Source\PSoC4/cyPm.h **** #if(CY_IP_SRSSV2)
 153:Generated_Source\PSoC4/cyPm.h ****     /* Hibernate wakeup value for PWR_KEY_DELAY */
 154:Generated_Source\PSoC4/cyPm.h ****     #define CY_SFLASH_HIB_KEY_DELAY_REG     (*(reg16 *) CYREG_SFLASH_HIB_KEY_DELAY)
 155:Generated_Source\PSoC4/cyPm.h ****     #define CY_SFLASH_HIB_KEY_DELAY_PTR     ( (reg16 *) CYREG_SFLASH_HIB_KEY_DELAY)
 156:Generated_Source\PSoC4/cyPm.h **** #endif  /* (CY_IP_SRSSV2) */
 157:Generated_Source\PSoC4/cyPm.h **** 
 158:Generated_Source\PSoC4/cyPm.h **** /* Deep Sleep wakeup value for PWR_KEY_DELAY */
 159:Generated_Source\PSoC4/cyPm.h **** #define CY_SFLASH_DPSLP_KEY_DELAY_REG       (*(reg16 *) CYREG_SFLASH_DPSLP_KEY_DELAY)
 160:Generated_Source\PSoC4/cyPm.h **** #define CY_SFLASH_DPSLP_KEY_DELAY_PTR       ( (reg16 *) CYREG_SFLASH_DPSLP_KEY_DELAY)
 161:Generated_Source\PSoC4/cyPm.h **** 
 162:Generated_Source\PSoC4/cyPm.h **** /* Power Stop Mode Register */
 163:Generated_Source\PSoC4/cyPm.h **** #if(CY_IP_SRSSV2)
 164:Generated_Source\PSoC4/cyPm.h ****     #define CY_PM_PWR_STOP_REG              (*(reg32 *) CYREG_PWR_STOP)
 165:Generated_Source\PSoC4/cyPm.h ****     #define CY_PM_PWR_STOP_PTR              ( (reg32 *) CYREG_PWR_STOP)
 166:Generated_Source\PSoC4/cyPm.h **** #endif /* (CY_IP_SRSSV2) */
 167:Generated_Source\PSoC4/cyPm.h **** 
 168:Generated_Source\PSoC4/cyPm.h **** #if (CY_PSOC4_4100 || CY_PSOC4_4200 || CY_PSOC4_4000U)
 169:Generated_Source\PSoC4/cyPm.h ****     /* CPU Subsystem Configuration */
 170:Generated_Source\PSoC4/cyPm.h ****     #define CY_PM_CPUSS_CONFIG_REG             (*(reg32 *) CYREG_CPUSS_CONFIG)
 171:Generated_Source\PSoC4/cyPm.h ****     #define CY_PM_CPUSS_CONFIG_PTR             ( (reg32 *) CYREG_CPUSS_CONFIG)
 172:Generated_Source\PSoC4/cyPm.h **** #endif /* (CY_PSOC4_4100 || CY_PSOC4_4200 || CY_PSOC4_4000U) */
 173:Generated_Source\PSoC4/cyPm.h **** 
 174:Generated_Source\PSoC4/cyPm.h **** 
 175:Generated_Source\PSoC4/cyPm.h **** /***************************************
 176:Generated_Source\PSoC4/cyPm.h **** *       Register Constants
 177:Generated_Source\PSoC4/cyPm.h **** ***************************************/
 178:Generated_Source\PSoC4/cyPm.h **** 
 179:Generated_Source\PSoC4/cyPm.h **** /* CM0 System Control Register Constants */
 180:Generated_Source\PSoC4/cyPm.h **** #define CY_PM_CPU_SCR_SLEEPDEEP             ((uint32)(0x04u))
 181:Generated_Source\PSoC4/cyPm.h **** 
 182:Generated_Source\PSoC4/cyPm.h **** #if(CY_IP_SRSSV2)
 183:Generated_Source\PSoC4/cyPm.h ****     /* Power Mode Control Constants */
 184:Generated_Source\PSoC4/cyPm.h ****     #define CY_PM_PWR_CONTROL_HIBERNATE         (0x80000000u)
 185:Generated_Source\PSoC4/cyPm.h **** 
 186:Generated_Source\PSoC4/cyPm.h ****     /* Power Mode Stop Constants */
 187:Generated_Source\PSoC4/cyPm.h ****     #define CY_PM_PWR_STOP_POLARITY_SHIFT       (16u)
 188:Generated_Source\PSoC4/cyPm.h ****     #define CY_PM_PWR_STOP_POLARITY             ((uint32)((uint32)1u << CY_PM_PWR_STOP_POLARITY_SHI
 189:Generated_Source\PSoC4/cyPm.h ****     #define CY_PM_PWR_STOP_FREEZE_SHIFT         (17u)
 190:Generated_Source\PSoC4/cyPm.h ****     #define CY_PM_PWR_STOP_FREEZE               ((uint32)((uint32)1u << CY_PM_PWR_STOP_FREEZE_SHIFT
 191:Generated_Source\PSoC4/cyPm.h ****     #define CY_PM_PWR_STOP_UNLOCK_SHIFT         (8u)
 192:Generated_Source\PSoC4/cyPm.h ****     #define CY_PM_PWR_STOP_UNLOCK_MASK          ((uint32)((uint32)0xFFu << CY_PM_PWR_STOP_UNLOCK_SH
 193:Generated_Source\PSoC4/cyPm.h ****     #define CY_PM_PWR_STOP_UNLOCK               ((uint32)((uint32)0x3Au << CY_PM_PWR_STOP_UNLOCK_SH
 194:Generated_Source\PSoC4/cyPm.h ****     #define CY_PM_PWR_STOP_STOP_SHIFT           (31u)
 195:Generated_Source\PSoC4/cyPm.h ****     #define CY_PM_PWR_STOP_STOP                 ((uint32)((uint32)1u << CY_PM_PWR_STOP_STOP_SHIFT))
 196:Generated_Source\PSoC4/cyPm.h ****     #define CY_PM_PWR_STOP_TOKEN_MASK           ((uint32)(0xFFu))
 197:Generated_Source\PSoC4/cyPm.h ****     #define CY_PM_PWR_STOP_TOKEN_XRES           ((uint32)(0x00u))
 198:Generated_Source\PSoC4/cyPm.h ****     #define CY_PM_PWR_STOP_TOKEN_HIB            ((uint32)(0xF1u))
 199:Generated_Source\PSoC4/cyPm.h ****     #define CY_PM_PWR_STOP_TOKEN_STOP           ((uint32)(0xF2u))
 200:Generated_Source\PSoC4/cyPm.h **** #else
 201:Generated_Source\PSoC4/cyPm.h ****     #define CY_PM_PWR_KEY_DELAY_REG_DEFAULT     ((uint32) 248u)
 202:Generated_Source\PSoC4/cyPm.h ****     #define CY_PM_PWR_KEY_DELAY_FREQ_DEFAULT    (48u)
ARM GAS  C:\Users\essele\AppData\Local\Temp\cczC3umF.s 			page 5


 203:Generated_Source\PSoC4/cyPm.h **** #endif /* (CY_IP_SRSSV2) */
 204:Generated_Source\PSoC4/cyPm.h **** 
 205:Generated_Source\PSoC4/cyPm.h **** #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
 206:Generated_Source\PSoC4/cyPm.h ****     #define CY_PM_WCO_DPLL_WAKEUP_DELAY         (35u)
 207:Generated_Source\PSoC4/cyPm.h ****     #define CY_PM_WCO_DPLL_LF_LIMIT_TEMP_DRIFT  (4u)
 208:Generated_Source\PSoC4/cyPm.h **** #endif /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */
 209:Generated_Source\PSoC4/cyPm.h **** 
 210:Generated_Source\PSoC4/cyPm.h **** #if (CY_PSOC4_4100 || CY_PSOC4_4200 || CY_PSOC4_4000U)
 211:Generated_Source\PSoC4/cyPm.h ****     /* 0 - normal operation, 1 - Flash Accelerator in bypass mode */
 212:Generated_Source\PSoC4/cyPm.h ****     #define CY_PM_CPUSS_CONFIG_FLSH_ACC_BYPASS      ((uint32) 0x02u)
 213:Generated_Source\PSoC4/cyPm.h **** #endif /* (CY_PSOC4_4100 || CY_PSOC4_4200 || CY_PSOC4_4000U) */
 214:Generated_Source\PSoC4/cyPm.h **** 
 215:Generated_Source\PSoC4/cyPm.h **** 
 216:Generated_Source\PSoC4/cyPm.h **** #if (CY_IP_SRSSV2)
 217:Generated_Source\PSoC4/cyPm.h ****     #if (CY_IP_HOBTO_DEVICE)
 218:Generated_Source\PSoC4/cyPm.h ****         /*******************************************************************************
 219:Generated_Source\PSoC4/cyPm.h ****         * Function Name: CySysPmHibPinsDisableInputBuf
 220:Generated_Source\PSoC4/cyPm.h ****         ****************************************************************************//**
 221:Generated_Source\PSoC4/cyPm.h ****         *
 222:Generated_Source\PSoC4/cyPm.h ****         *  Disable the input buffer for all the port. This is required before Hibernate
 223:Generated_Source\PSoC4/cyPm.h ****         *  mode entry as the operation of the input buffer is not guaranteed if VCCD
 224:Generated_Source\PSoC4/cyPm.h ****         *  drops down to 1.0 V.
 225:Generated_Source\PSoC4/cyPm.h ****         *
 226:Generated_Source\PSoC4/cyPm.h ****         *******************************************************************************/
 227:Generated_Source\PSoC4/cyPm.h ****         static CY_INLINE void CySysPmHibPinsDisableInputBuf(void)
 228:Generated_Source\PSoC4/cyPm.h ****         {
  27              		.loc 1 228 0
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 0
  30              		@ frame_needed = 1, uses_anonymous_args = 0
  31 0000 80B5     		push	{r7, lr}
  32              		.cfi_def_cfa_offset 8
  33              		.cfi_offset 7, -8
  34              		.cfi_offset 14, -4
  35 0002 00AF     		add	r7, sp, #0
  36              		.cfi_def_cfa_register 7
 229:Generated_Source\PSoC4/cyPm.h ****             #ifdef CYREG_GPIO_PRT0_PC
 230:Generated_Source\PSoC4/cyPm.h ****                 CY_CLEAR_REG32_FIELD(CYREG_GPIO_PRT0_PC, CYFLD_GPIO_PRT_PORT_IB_MODE_SEL);
  37              		.loc 1 230 0
  38 0004 284B     		ldr	r3, .L2
  39 0006 284A     		ldr	r2, .L2
  40 0008 1268     		ldr	r2, [r2]
  41 000a 9200     		lsls	r2, r2, #2
  42 000c 9208     		lsrs	r2, r2, #2
  43 000e 1A60     		str	r2, [r3]
 231:Generated_Source\PSoC4/cyPm.h ****             #endif /* CYREG_GPIO_PRT0_PC */
 232:Generated_Source\PSoC4/cyPm.h **** 
 233:Generated_Source\PSoC4/cyPm.h ****             #ifdef CYREG_GPIO_PRT1_PC
 234:Generated_Source\PSoC4/cyPm.h ****                 CY_CLEAR_REG32_FIELD( CYREG_GPIO_PRT1_PC, CYFLD_GPIO_PRT_PORT_IB_MODE_SEL);
  44              		.loc 1 234 0
  45 0010 264B     		ldr	r3, .L2+4
  46 0012 264A     		ldr	r2, .L2+4
  47 0014 1268     		ldr	r2, [r2]
  48 0016 9200     		lsls	r2, r2, #2
  49 0018 9208     		lsrs	r2, r2, #2
  50 001a 1A60     		str	r2, [r3]
 235:Generated_Source\PSoC4/cyPm.h ****             #endif /* CYREG_GPIO_PRT1_PC */
ARM GAS  C:\Users\essele\AppData\Local\Temp\cczC3umF.s 			page 6


 236:Generated_Source\PSoC4/cyPm.h **** 
 237:Generated_Source\PSoC4/cyPm.h ****             #ifdef CYREG_GPIO_PRT2_PC
 238:Generated_Source\PSoC4/cyPm.h ****                 CY_CLEAR_REG32_FIELD( CYREG_GPIO_PRT2_PC, CYFLD_GPIO_PRT_PORT_IB_MODE_SEL);
  51              		.loc 1 238 0
  52 001c 244B     		ldr	r3, .L2+8
  53 001e 244A     		ldr	r2, .L2+8
  54 0020 1268     		ldr	r2, [r2]
  55 0022 9200     		lsls	r2, r2, #2
  56 0024 9208     		lsrs	r2, r2, #2
  57 0026 1A60     		str	r2, [r3]
 239:Generated_Source\PSoC4/cyPm.h ****             #endif /* CYREG_GPIO_PRT2_PC */
 240:Generated_Source\PSoC4/cyPm.h **** 
 241:Generated_Source\PSoC4/cyPm.h ****             #ifdef CYREG_GPIO_PRT3_PC
 242:Generated_Source\PSoC4/cyPm.h ****                 CY_CLEAR_REG32_FIELD( CYREG_GPIO_PRT3_PC, CYFLD_GPIO_PRT_PORT_IB_MODE_SEL);
  58              		.loc 1 242 0
  59 0028 224B     		ldr	r3, .L2+12
  60 002a 224A     		ldr	r2, .L2+12
  61 002c 1268     		ldr	r2, [r2]
  62 002e 9200     		lsls	r2, r2, #2
  63 0030 9208     		lsrs	r2, r2, #2
  64 0032 1A60     		str	r2, [r3]
 243:Generated_Source\PSoC4/cyPm.h ****             #endif /* CYREG_GPIO_PRT3_PC */
 244:Generated_Source\PSoC4/cyPm.h **** 
 245:Generated_Source\PSoC4/cyPm.h ****             #ifdef CYREG_GPIO_PRT4_PC
 246:Generated_Source\PSoC4/cyPm.h ****                 CY_CLEAR_REG32_FIELD( CYREG_GPIO_PRT4_PC, CYFLD_GPIO_PRT_PORT_IB_MODE_SEL);
  65              		.loc 1 246 0
  66 0034 204B     		ldr	r3, .L2+16
  67 0036 204A     		ldr	r2, .L2+16
  68 0038 1268     		ldr	r2, [r2]
  69 003a 9200     		lsls	r2, r2, #2
  70 003c 9208     		lsrs	r2, r2, #2
  71 003e 1A60     		str	r2, [r3]
 247:Generated_Source\PSoC4/cyPm.h ****             #endif /* CYREG_GPIO_PRT4_PC */
 248:Generated_Source\PSoC4/cyPm.h **** 
 249:Generated_Source\PSoC4/cyPm.h ****             #ifdef CYREG_GPIO_PRT5_PC
 250:Generated_Source\PSoC4/cyPm.h ****                 CY_CLEAR_REG32_FIELD( CYREG_GPIO_PRT5_PC, CYFLD_GPIO_PRT_PORT_IB_MODE_SEL);
  72              		.loc 1 250 0
  73 0040 1E4B     		ldr	r3, .L2+20
  74 0042 1E4A     		ldr	r2, .L2+20
  75 0044 1268     		ldr	r2, [r2]
  76 0046 9200     		lsls	r2, r2, #2
  77 0048 9208     		lsrs	r2, r2, #2
  78 004a 1A60     		str	r2, [r3]
 251:Generated_Source\PSoC4/cyPm.h ****             #endif /* CYREG_GPIO_PRT5_PC */
 252:Generated_Source\PSoC4/cyPm.h **** 
 253:Generated_Source\PSoC4/cyPm.h ****             #ifdef CYREG_GPIO_PRT6_PC
 254:Generated_Source\PSoC4/cyPm.h ****                 CY_CLEAR_REG32_FIELD( CYREG_GPIO_PRT6_PC, CYFLD_GPIO_PRT_PORT_IB_MODE_SEL);
  79              		.loc 1 254 0
  80 004c 1C4B     		ldr	r3, .L2+24
  81 004e 1C4A     		ldr	r2, .L2+24
  82 0050 1268     		ldr	r2, [r2]
  83 0052 9200     		lsls	r2, r2, #2
  84 0054 9208     		lsrs	r2, r2, #2
  85 0056 1A60     		str	r2, [r3]
 255:Generated_Source\PSoC4/cyPm.h ****             #endif /* CYREG_GPIO_PRT6_PC */
 256:Generated_Source\PSoC4/cyPm.h **** 
 257:Generated_Source\PSoC4/cyPm.h ****             #ifdef CYREG_GPIO_PRT7_PC
ARM GAS  C:\Users\essele\AppData\Local\Temp\cczC3umF.s 			page 7


 258:Generated_Source\PSoC4/cyPm.h ****                 CY_CLEAR_REG32_FIELD( CYREG_GPIO_PRT7_PC, CYFLD_GPIO_PRT_PORT_IB_MODE_SEL);
  86              		.loc 1 258 0
  87 0058 1A4B     		ldr	r3, .L2+28
  88 005a 1A4A     		ldr	r2, .L2+28
  89 005c 1268     		ldr	r2, [r2]
  90 005e 9200     		lsls	r2, r2, #2
  91 0060 9208     		lsrs	r2, r2, #2
  92 0062 1A60     		str	r2, [r3]
 259:Generated_Source\PSoC4/cyPm.h ****             #endif /* CYREG_GPIO_PRT7_PC */
 260:Generated_Source\PSoC4/cyPm.h **** 
 261:Generated_Source\PSoC4/cyPm.h ****             #ifdef CYREG_GPIO_PRT8_PC
 262:Generated_Source\PSoC4/cyPm.h ****                 CY_CLEAR_REG32_FIELD( CYREG_GPIO_PRT8_PC, CYFLD_GPIO_PRT_PORT_IB_MODE_SEL);
  93              		.loc 1 262 0
  94 0064 184B     		ldr	r3, .L2+32
  95 0066 184A     		ldr	r2, .L2+32
  96 0068 1268     		ldr	r2, [r2]
  97 006a 9200     		lsls	r2, r2, #2
  98 006c 9208     		lsrs	r2, r2, #2
  99 006e 1A60     		str	r2, [r3]
 263:Generated_Source\PSoC4/cyPm.h ****             #endif /* CYREG_GPIO_PRT8_PC */
 264:Generated_Source\PSoC4/cyPm.h **** 
 265:Generated_Source\PSoC4/cyPm.h ****             #ifdef CYREG_GPIO_PRT9_PC
 266:Generated_Source\PSoC4/cyPm.h ****                 CY_CLEAR_REG32_FIELD( CYREG_GPIO_PRT9_PC, CYFLD_GPIO_PRT_PORT_IB_MODE_SEL);
 100              		.loc 1 266 0
 101 0070 164B     		ldr	r3, .L2+36
 102 0072 164A     		ldr	r2, .L2+36
 103 0074 1268     		ldr	r2, [r2]
 104 0076 9200     		lsls	r2, r2, #2
 105 0078 9208     		lsrs	r2, r2, #2
 106 007a 1A60     		str	r2, [r3]
 267:Generated_Source\PSoC4/cyPm.h ****             #endif /* CYREG_GPIO_PRT9_PC */
 268:Generated_Source\PSoC4/cyPm.h **** 
 269:Generated_Source\PSoC4/cyPm.h ****             #ifdef CYREG_GPIO_PRT10_PC
 270:Generated_Source\PSoC4/cyPm.h ****                 CY_CLEAR_REG32_FIELD(CYREG_GPIO_PRT10_PC, CYFLD_GPIO_PRT_PORT_IB_MODE_SEL);
 107              		.loc 1 270 0
 108 007c 144B     		ldr	r3, .L2+40
 109 007e 144A     		ldr	r2, .L2+40
 110 0080 1268     		ldr	r2, [r2]
 111 0082 9200     		lsls	r2, r2, #2
 112 0084 9208     		lsrs	r2, r2, #2
 113 0086 1A60     		str	r2, [r3]
 271:Generated_Source\PSoC4/cyPm.h ****             #endif /* CYREG_GPIO_PRT10_PC */
 272:Generated_Source\PSoC4/cyPm.h **** 
 273:Generated_Source\PSoC4/cyPm.h ****             #ifdef CYREG_GPIO_PRT11_PC
 274:Generated_Source\PSoC4/cyPm.h ****                 CY_CLEAR_REG32_FIELD(CYREG_GPIO_PRT11_PC, CYFLD_GPIO_PRT_PORT_IB_MODE_SEL);
 114              		.loc 1 274 0
 115 0088 124B     		ldr	r3, .L2+44
 116 008a 124A     		ldr	r2, .L2+44
 117 008c 1268     		ldr	r2, [r2]
 118 008e 9200     		lsls	r2, r2, #2
 119 0090 9208     		lsrs	r2, r2, #2
 120 0092 1A60     		str	r2, [r3]
 275:Generated_Source\PSoC4/cyPm.h ****             #endif /* CYREG_GPIO_PRT11_PC */
 276:Generated_Source\PSoC4/cyPm.h **** 
 277:Generated_Source\PSoC4/cyPm.h ****             #ifdef CYREG_GPIO_PRT12_PC
 278:Generated_Source\PSoC4/cyPm.h ****                 CY_CLEAR_REG32_FIELD(CYREG_GPIO_PRT12_PC, CYFLD_GPIO_PRT_PORT_IB_MODE_SEL);
 121              		.loc 1 278 0
ARM GAS  C:\Users\essele\AppData\Local\Temp\cczC3umF.s 			page 8


 122 0094 104B     		ldr	r3, .L2+48
 123 0096 104A     		ldr	r2, .L2+48
 124 0098 1268     		ldr	r2, [r2]
 125 009a 9200     		lsls	r2, r2, #2
 126 009c 9208     		lsrs	r2, r2, #2
 127 009e 1A60     		str	r2, [r3]
 279:Generated_Source\PSoC4/cyPm.h ****             #endif /* CYREG_GPIO_PRT12_PC */
 280:Generated_Source\PSoC4/cyPm.h **** 
 281:Generated_Source\PSoC4/cyPm.h ****             #ifdef CYREG_GPIO_PRT13_PC
 282:Generated_Source\PSoC4/cyPm.h ****                 CY_CLEAR_REG32_FIELD(CYREG_GPIO_PRT13_PC, CYFLD_GPIO_PRT_PORT_IB_MODE_SEL);
 283:Generated_Source\PSoC4/cyPm.h ****             #endif /* CYREG_GPIO_PRT13_PC */
 284:Generated_Source\PSoC4/cyPm.h **** 
 285:Generated_Source\PSoC4/cyPm.h ****             #ifdef CYREG_GPIO_PRT14_PC
 286:Generated_Source\PSoC4/cyPm.h ****                 CY_CLEAR_REG32_FIELD(CYREG_GPIO_PRT14_PC, CYFLD_GPIO_PRT_PORT_IB_MODE_SEL);
 287:Generated_Source\PSoC4/cyPm.h ****             #endif /* CYREG_GPIO_PRT14_PC */
 288:Generated_Source\PSoC4/cyPm.h **** 
 289:Generated_Source\PSoC4/cyPm.h ****             #ifdef CYREG_GPIO_PRT15_PC
 290:Generated_Source\PSoC4/cyPm.h ****                 CY_CLEAR_REG32_FIELD(CYREG_GPIO_PRT15_PC, CYFLD_GPIO_PRT_PORT_IB_MODE_SEL);
 291:Generated_Source\PSoC4/cyPm.h ****             #endif /* CYREG_GPIO_PRT15_PC */
 292:Generated_Source\PSoC4/cyPm.h ****         }
 128              		.loc 1 292 0
 129 00a0 C046     		nop
 130 00a2 BD46     		mov	sp, r7
 131              		@ sp needed
 132 00a4 80BD     		pop	{r7, pc}
 133              	.L3:
 134 00a6 C046     		.align	2
 135              	.L2:
 136 00a8 08000440 		.word	1074003976
 137 00ac 08010440 		.word	1074004232
 138 00b0 08020440 		.word	1074004488
 139 00b4 08030440 		.word	1074004744
 140 00b8 08040440 		.word	1074005000
 141 00bc 08050440 		.word	1074005256
 142 00c0 08060440 		.word	1074005512
 143 00c4 08070440 		.word	1074005768
 144 00c8 08080440 		.word	1074006024
 145 00cc 08090440 		.word	1074006280
 146 00d0 080A0440 		.word	1074006536
 147 00d4 080B0440 		.word	1074006792
 148 00d8 080C0440 		.word	1074007048
 149              		.cfi_endproc
 150              	.LFE0:
 151              		.size	CySysPmHibPinsDisableInputBuf, .-CySysPmHibPinsDisableInputBuf
 152              		.section	.text.CySysPmSleep,"ax",%progbits
 153              		.align	2
 154              		.global	CySysPmSleep
 155              		.code	16
 156              		.thumb_func
 157              		.type	CySysPmSleep, %function
 158              	CySysPmSleep:
 159              	.LFB2:
 160              		.file 2 "Generated_Source\\PSoC4\\cyPm.c"
   1:Generated_Source\PSoC4/cyPm.c **** /***************************************************************************//**
   2:Generated_Source\PSoC4/cyPm.c **** * \file cyPm.c
   3:Generated_Source\PSoC4/cyPm.c **** * \version 5.80
   4:Generated_Source\PSoC4/cyPm.c **** *
ARM GAS  C:\Users\essele\AppData\Local\Temp\cczC3umF.s 			page 9


   5:Generated_Source\PSoC4/cyPm.c **** * \brief Provides an API for the power management.
   6:Generated_Source\PSoC4/cyPm.c **** *
   7:Generated_Source\PSoC4/cyPm.c **** * \note Documentation of the API's in this file is located in the System
   8:Generated_Source\PSoC4/cyPm.c **** * Reference Guide provided with PSoC Creator.
   9:Generated_Source\PSoC4/cyPm.c **** *
  10:Generated_Source\PSoC4/cyPm.c **** ********************************************************************************
  11:Generated_Source\PSoC4/cyPm.c **** * \copyright
  12:Generated_Source\PSoC4/cyPm.c **** * Copyright 2011-2018, Cypress Semiconductor Corporation.  All rights reserved.
  13:Generated_Source\PSoC4/cyPm.c **** * You may use this file only in accordance with the license, terms, conditions,
  14:Generated_Source\PSoC4/cyPm.c **** * disclaimers, and limitations in the end user license agreement accompanying
  15:Generated_Source\PSoC4/cyPm.c **** * the software package with which this file was provided.
  16:Generated_Source\PSoC4/cyPm.c **** *******************************************************************************/
  17:Generated_Source\PSoC4/cyPm.c **** 
  18:Generated_Source\PSoC4/cyPm.c **** #include "cyPm.h"
  19:Generated_Source\PSoC4/cyPm.c **** #include "CyLib.h"
  20:Generated_Source\PSoC4/cyPm.c **** #include "CyFlash.h"
  21:Generated_Source\PSoC4/cyPm.c **** 
  22:Generated_Source\PSoC4/cyPm.c **** 
  23:Generated_Source\PSoC4/cyPm.c **** /*******************************************************************************
  24:Generated_Source\PSoC4/cyPm.c **** * Function Name: CySysPmSleep
  25:Generated_Source\PSoC4/cyPm.c **** ****************************************************************************//**
  26:Generated_Source\PSoC4/cyPm.c **** *
  27:Generated_Source\PSoC4/cyPm.c **** * Puts the part into the Sleep state. This is a CPU-centric power mode.
  28:Generated_Source\PSoC4/cyPm.c **** * It means that the CPU has indicated that it is in the sleep mode and
  29:Generated_Source\PSoC4/cyPm.c **** * its main clock can be removed. It is identical to Active from a peripheral
  30:Generated_Source\PSoC4/cyPm.c **** * point of view. Any enabled interrupts can cause wakeup from the Sleep mode.
  31:Generated_Source\PSoC4/cyPm.c **** *
  32:Generated_Source\PSoC4/cyPm.c **** *******************************************************************************/
  33:Generated_Source\PSoC4/cyPm.c **** void CySysPmSleep(void)
  34:Generated_Source\PSoC4/cyPm.c **** {
 161              		.loc 2 34 0
 162              		.cfi_startproc
 163              		@ args = 0, pretend = 0, frame = 8
 164              		@ frame_needed = 1, uses_anonymous_args = 0
 165 0000 90B5     		push	{r4, r7, lr}
 166              		.cfi_def_cfa_offset 12
 167              		.cfi_offset 4, -12
 168              		.cfi_offset 7, -8
 169              		.cfi_offset 14, -4
 170 0002 83B0     		sub	sp, sp, #12
 171              		.cfi_def_cfa_offset 24
 172 0004 00AF     		add	r7, sp, #0
 173              		.cfi_def_cfa_register 7
  35:Generated_Source\PSoC4/cyPm.c ****     uint8 interruptState;
  36:Generated_Source\PSoC4/cyPm.c **** 
  37:Generated_Source\PSoC4/cyPm.c ****     interruptState = CyEnterCriticalSection();
 174              		.loc 2 37 0
 175 0006 FC1D     		adds	r4, r7, #7
 176 0008 FFF7FEFF 		bl	CyEnterCriticalSection
 177 000c 0300     		movs	r3, r0
 178 000e 2370     		strb	r3, [r4]
  38:Generated_Source\PSoC4/cyPm.c **** 
  39:Generated_Source\PSoC4/cyPm.c ****     /* CPU enters Sleep mode upon execution of WFI */
  40:Generated_Source\PSoC4/cyPm.c ****     CY_PM_CPU_SCR_REG &= (uint32) (~CY_PM_CPU_SCR_SLEEPDEEP);
 179              		.loc 2 40 0
 180 0010 074B     		ldr	r3, .L5
 181 0012 074A     		ldr	r2, .L5
ARM GAS  C:\Users\essele\AppData\Local\Temp\cczC3umF.s 			page 10


 182 0014 1268     		ldr	r2, [r2]
 183 0016 0421     		movs	r1, #4
 184 0018 8A43     		bics	r2, r1
 185 001a 1A60     		str	r2, [r3]
  41:Generated_Source\PSoC4/cyPm.c **** 
  42:Generated_Source\PSoC4/cyPm.c ****     /* Sleep and wait for interrupt */
  43:Generated_Source\PSoC4/cyPm.c ****     CY_PM_WFI;
 186              		.loc 2 43 0
 187              		.syntax divided
 188              	@ 43 "Generated_Source\PSoC4\cyPm.c" 1
 189 001c 30BF     		WFI 
 190              	
 191              	@ 0 "" 2
  44:Generated_Source\PSoC4/cyPm.c **** 
  45:Generated_Source\PSoC4/cyPm.c ****     CyExitCriticalSection(interruptState);
 192              		.loc 2 45 0
 193              		.thumb
 194              		.syntax unified
 195 001e FB1D     		adds	r3, r7, #7
 196 0020 1B78     		ldrb	r3, [r3]
 197 0022 1800     		movs	r0, r3
 198 0024 FFF7FEFF 		bl	CyExitCriticalSection
  46:Generated_Source\PSoC4/cyPm.c **** }
 199              		.loc 2 46 0
 200 0028 C046     		nop
 201 002a BD46     		mov	sp, r7
 202 002c 03B0     		add	sp, sp, #12
 203              		@ sp needed
 204 002e 90BD     		pop	{r4, r7, pc}
 205              	.L6:
 206              		.align	2
 207              	.L5:
 208 0030 10ED00E0 		.word	-536810224
 209              		.cfi_endproc
 210              	.LFE2:
 211              		.size	CySysPmSleep, .-CySysPmSleep
 212              		.section	.text.CySysPmDeepSleep,"ax",%progbits
 213              		.align	2
 214              		.global	CySysPmDeepSleep
 215              		.code	16
 216              		.thumb_func
 217              		.type	CySysPmDeepSleep, %function
 218              	CySysPmDeepSleep:
 219              	.LFB3:
  47:Generated_Source\PSoC4/cyPm.c **** 
  48:Generated_Source\PSoC4/cyPm.c **** 
  49:Generated_Source\PSoC4/cyPm.c **** /*******************************************************************************
  50:Generated_Source\PSoC4/cyPm.c **** * Function Name: CySysPmDeepSleep
  51:Generated_Source\PSoC4/cyPm.c **** ****************************************************************************//**
  52:Generated_Source\PSoC4/cyPm.c **** *
  53:Generated_Source\PSoC4/cyPm.c **** * Puts the part into the Deep Sleep state. If the firmware attempts to enter
  54:Generated_Source\PSoC4/cyPm.c **** * this mode before the system is ready (that is, when
  55:Generated_Source\PSoC4/cyPm.c **** * PWR_CONTROL.LPM_READY = 0), then the device will go into the Sleep mode
  56:Generated_Source\PSoC4/cyPm.c **** * instead and automatically enter the originally intended mode when the
  57:Generated_Source\PSoC4/cyPm.c **** * holdoff expires.
  58:Generated_Source\PSoC4/cyPm.c **** *
  59:Generated_Source\PSoC4/cyPm.c **** * The wakeup occurs when an interrupt is received from a DeepSleep or
ARM GAS  C:\Users\essele\AppData\Local\Temp\cczC3umF.s 			page 11


  60:Generated_Source\PSoC4/cyPm.c **** * Hibernate peripheral. For more details, see a corresponding
  61:Generated_Source\PSoC4/cyPm.c **** * peripheral's datasheet.
  62:Generated_Source\PSoC4/cyPm.c **** *
  63:Generated_Source\PSoC4/cyPm.c **** *******************************************************************************/
  64:Generated_Source\PSoC4/cyPm.c **** void CySysPmDeepSleep(void)
  65:Generated_Source\PSoC4/cyPm.c **** {
 220              		.loc 2 65 0
 221              		.cfi_startproc
 222              		@ args = 0, pretend = 0, frame = 16
 223              		@ frame_needed = 1, uses_anonymous_args = 0
 224 0000 90B5     		push	{r4, r7, lr}
 225              		.cfi_def_cfa_offset 12
 226              		.cfi_offset 4, -12
 227              		.cfi_offset 7, -8
 228              		.cfi_offset 14, -4
 229 0002 85B0     		sub	sp, sp, #20
 230              		.cfi_def_cfa_offset 32
 231 0004 00AF     		add	r7, sp, #0
 232              		.cfi_def_cfa_register 7
  66:Generated_Source\PSoC4/cyPm.c ****     uint8 interruptState;
  67:Generated_Source\PSoC4/cyPm.c ****     #if(CY_IP_SRSSV2)
  68:Generated_Source\PSoC4/cyPm.c ****         volatile uint32 clkSelectReg;
  69:Generated_Source\PSoC4/cyPm.c ****     #endif /* (CY_IP_SRSSV2) */
  70:Generated_Source\PSoC4/cyPm.c ****     
  71:Generated_Source\PSoC4/cyPm.c ****     #if(CY_IP_ECO_SRSSLT)
  72:Generated_Source\PSoC4/cyPm.c ****         volatile uint32 pllResoreFlag = 0u;
  73:Generated_Source\PSoC4/cyPm.c ****     #endif /* (CY_IP_ECO_SRSSLT) */
  74:Generated_Source\PSoC4/cyPm.c **** 
  75:Generated_Source\PSoC4/cyPm.c ****     #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
  76:Generated_Source\PSoC4/cyPm.c ****         uint32 regTmp = 0u;
 233              		.loc 2 76 0
 234 0006 0023     		movs	r3, #0
 235 0008 FB60     		str	r3, [r7, #12]
  77:Generated_Source\PSoC4/cyPm.c ****     #endif /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */
  78:Generated_Source\PSoC4/cyPm.c ****     
  79:Generated_Source\PSoC4/cyPm.c ****     interruptState = CyEnterCriticalSection();
 236              		.loc 2 79 0
 237 000a 0B23     		movs	r3, #11
 238 000c FC18     		adds	r4, r7, r3
 239 000e FFF7FEFF 		bl	CyEnterCriticalSection
 240 0012 0300     		movs	r3, r0
 241 0014 2370     		strb	r3, [r4]
  80:Generated_Source\PSoC4/cyPm.c **** 
  81:Generated_Source\PSoC4/cyPm.c ****     #if(CY_IP_ECO_SRSSLT)
  82:Generated_Source\PSoC4/cyPm.c ****         if(0u != (CY_SYS_ECO_CLK_SELECT_REG & CY_SYS_ECO_CLK_SELECT_ECO_PLL_MASK))
  83:Generated_Source\PSoC4/cyPm.c ****         {
  84:Generated_Source\PSoC4/cyPm.c ****             pllResoreFlag = 1u;
  85:Generated_Source\PSoC4/cyPm.c ****             
  86:Generated_Source\PSoC4/cyPm.c ****             /* Set default state = IMO for HFCLK_SEL bit mask */
  87:Generated_Source\PSoC4/cyPm.c ****             CY_SYS_CLK_SELECT_REG &= (uint32)(~CY_SYS_CLK_SELECT_DIRECT_SEL_MASK);
  88:Generated_Source\PSoC4/cyPm.c ****         }
  89:Generated_Source\PSoC4/cyPm.c ****     #endif /* (CY_IP_ECO_SRSSLT) */
  90:Generated_Source\PSoC4/cyPm.c **** 
  91:Generated_Source\PSoC4/cyPm.c ****     #if(CY_IP_SRSSV2)
  92:Generated_Source\PSoC4/cyPm.c ****         /* Device enters DeepSleep mode when CPU asserts SLEEPDEEP signal */
  93:Generated_Source\PSoC4/cyPm.c ****         CY_PM_PWR_CONTROL_REG &= (uint32) (~CY_PM_PWR_CONTROL_HIBERNATE);
 242              		.loc 2 93 0
ARM GAS  C:\Users\essele\AppData\Local\Temp\cczC3umF.s 			page 12


 243 0016 274B     		ldr	r3, .L10
 244 0018 264A     		ldr	r2, .L10
 245 001a 1268     		ldr	r2, [r2]
 246 001c 5200     		lsls	r2, r2, #1
 247 001e 5208     		lsrs	r2, r2, #1
 248 0020 1A60     		str	r2, [r3]
  94:Generated_Source\PSoC4/cyPm.c ****     #endif /* (CY_IP_SRSSV2) */
  95:Generated_Source\PSoC4/cyPm.c **** 
  96:Generated_Source\PSoC4/cyPm.c ****     #if (CY_IP_CPUSS && CY_IP_SRSSV2)
  97:Generated_Source\PSoC4/cyPm.c ****         CY_PM_CPUSS_CONFIG_REG |= CY_PM_CPUSS_CONFIG_FLSH_ACC_BYPASS;
  98:Generated_Source\PSoC4/cyPm.c ****     #endif /* (CY_IP_CPUSS && CY_IP_SRSSV2) */
  99:Generated_Source\PSoC4/cyPm.c ****     
 100:Generated_Source\PSoC4/cyPm.c ****     #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
 101:Generated_Source\PSoC4/cyPm.c ****         if (0u != (CY_SYS_CLK_WCO_CONFIG_REG & CY_SYS_CLK_WCO_CONFIG_DPLL_ENABLE))
 249              		.loc 2 101 0
 250 0022 254B     		ldr	r3, .L10+4
 251 0024 1A68     		ldr	r2, [r3]
 252 0026 8023     		movs	r3, #128
 253 0028 DB05     		lsls	r3, r3, #23
 254 002a 1340     		ands	r3, r2
 255 002c 0ED0     		beq	.L8
 102:Generated_Source\PSoC4/cyPm.c ****         {
 103:Generated_Source\PSoC4/cyPm.c ****             regTmp  = CY_SYS_CLK_WCO_DPLL_REG & ~(CY_SYS_CLK_WCO_CONFIG_DPLL_LF_LIMIT_MASK);
 256              		.loc 2 103 0
 257 002e 234B     		ldr	r3, .L10+8
 258 0030 1B68     		ldr	r3, [r3]
 259 0032 234A     		ldr	r2, .L10+12
 260 0034 1340     		ands	r3, r2
 261 0036 FB60     		str	r3, [r7, #12]
 104:Generated_Source\PSoC4/cyPm.c ****             CY_SYS_CLK_WCO_DPLL_REG = (regTmp | (((CY_SYS_CLK_IMO_TRIM1_REG + CY_PM_WCO_DPLL_LF_LIM
 262              		.loc 2 104 0
 263 0038 204B     		ldr	r3, .L10+8
 264 003a 224A     		ldr	r2, .L10+16
 265 003c 1268     		ldr	r2, [r2]
 266 003e 0432     		adds	r2, r2, #4
 267 0040 FF21     		movs	r1, #255
 268 0042 0A40     		ands	r2, r1
 105:Generated_Source\PSoC4/cyPm.c ****                                                   CY_SYS_CLK_WCO_CONFIG_DPLL_LF_LIMIT_MAX) << 
 269              		.loc 2 105 0
 270 0044 9105     		lsls	r1, r2, #22
 104:Generated_Source\PSoC4/cyPm.c ****             CY_SYS_CLK_WCO_DPLL_REG = (regTmp | (((CY_SYS_CLK_IMO_TRIM1_REG + CY_PM_WCO_DPLL_LF_LIM
 271              		.loc 2 104 0
 272 0046 FA68     		ldr	r2, [r7, #12]
 273 0048 0A43     		orrs	r2, r1
 274 004a 1A60     		str	r2, [r3]
 275              	.L8:
 106:Generated_Source\PSoC4/cyPm.c ****                                                  CY_SYS_CLK_WCO_CONFIG_DPLL_LF_LIMIT_SHIFT));
 107:Generated_Source\PSoC4/cyPm.c ****         }
 108:Generated_Source\PSoC4/cyPm.c ****     #endif /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */
 109:Generated_Source\PSoC4/cyPm.c **** 
 110:Generated_Source\PSoC4/cyPm.c ****     /* Adjust delay to wait for references to settle on wakeup from Deep Sleep */
 111:Generated_Source\PSoC4/cyPm.c ****     CY_PM_PWR_KEY_DELAY_REG = CY_SFLASH_DPSLP_KEY_DELAY_REG;
 276              		.loc 2 111 0
 277 004c 1E4B     		ldr	r3, .L10+20
 278 004e 1F4A     		ldr	r2, .L10+24
 279 0050 1288     		ldrh	r2, [r2]
 280 0052 92B2     		uxth	r2, r2
ARM GAS  C:\Users\essele\AppData\Local\Temp\cczC3umF.s 			page 13


 281 0054 1A60     		str	r2, [r3]
 112:Generated_Source\PSoC4/cyPm.c **** 
 113:Generated_Source\PSoC4/cyPm.c ****     /* CPU enters DeepSleep/Hibernate mode upon execution of WFI */
 114:Generated_Source\PSoC4/cyPm.c ****     CY_PM_CPU_SCR_REG |= CY_PM_CPU_SCR_SLEEPDEEP;
 282              		.loc 2 114 0
 283 0056 1E4B     		ldr	r3, .L10+28
 284 0058 1D4A     		ldr	r2, .L10+28
 285 005a 1268     		ldr	r2, [r2]
 286 005c 0421     		movs	r1, #4
 287 005e 0A43     		orrs	r2, r1
 288 0060 1A60     		str	r2, [r3]
 115:Generated_Source\PSoC4/cyPm.c **** 
 116:Generated_Source\PSoC4/cyPm.c ****     #if(CY_IP_SRSSV2)
 117:Generated_Source\PSoC4/cyPm.c ****         /* Preserve system clock configuration and
 118:Generated_Source\PSoC4/cyPm.c ****         * reduce sysclk to <=12 MHz (Cypress ID #158710, #179888).
 119:Generated_Source\PSoC4/cyPm.c ****         */
 120:Generated_Source\PSoC4/cyPm.c ****         clkSelectReg = CY_SYS_CLK_SELECT_REG;
 289              		.loc 2 120 0
 290 0062 1C4B     		ldr	r3, .L10+32
 291 0064 1B68     		ldr	r3, [r3]
 292 0066 7B60     		str	r3, [r7, #4]
 121:Generated_Source\PSoC4/cyPm.c ****         CySysClkWriteSysclkDiv(CY_SYS_CLK_SYSCLK_DIV4);
 293              		.loc 2 121 0
 294 0068 0220     		movs	r0, #2
 295 006a FFF7FEFF 		bl	CySysClkWriteSysclkDiv
 122:Generated_Source\PSoC4/cyPm.c ****     #endif /* (CY_IP_SRSSV2) */
 123:Generated_Source\PSoC4/cyPm.c ****     
 124:Generated_Source\PSoC4/cyPm.c ****     /* Sleep and wait for interrupt */
 125:Generated_Source\PSoC4/cyPm.c ****     CY_PM_WFI;
 296              		.loc 2 125 0
 297              		.syntax divided
 298              	@ 125 "Generated_Source\PSoC4\cyPm.c" 1
 299 006e 30BF     		WFI 
 300              	
 301              	@ 0 "" 2
 126:Generated_Source\PSoC4/cyPm.c **** 
 127:Generated_Source\PSoC4/cyPm.c ****     #if(CY_IP_SRSSV2)
 128:Generated_Source\PSoC4/cyPm.c ****         /* Restore system clock configuration */
 129:Generated_Source\PSoC4/cyPm.c ****         CY_SYS_CLK_SELECT_REG = clkSelectReg;
 302              		.loc 2 129 0
 303              		.thumb
 304              		.syntax unified
 305 0070 184B     		ldr	r3, .L10+32
 306 0072 7A68     		ldr	r2, [r7, #4]
 307 0074 1A60     		str	r2, [r3]
 130:Generated_Source\PSoC4/cyPm.c ****     #endif /* (CY_IP_SRSSV2) */
 131:Generated_Source\PSoC4/cyPm.c **** 
 132:Generated_Source\PSoC4/cyPm.c ****     #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
 133:Generated_Source\PSoC4/cyPm.c ****         if (0u != (CY_SYS_CLK_WCO_CONFIG_REG & CY_SYS_CLK_WCO_CONFIG_DPLL_ENABLE))
 308              		.loc 2 133 0
 309 0076 104B     		ldr	r3, .L10+4
 310 0078 1A68     		ldr	r2, [r3]
 311 007a 8023     		movs	r3, #128
 312 007c DB05     		lsls	r3, r3, #23
 313 007e 1340     		ands	r3, r2
 314 0080 0DD0     		beq	.L9
 134:Generated_Source\PSoC4/cyPm.c ****         {
ARM GAS  C:\Users\essele\AppData\Local\Temp\cczC3umF.s 			page 14


 135:Generated_Source\PSoC4/cyPm.c ****             CyDelayUs(CY_PM_WCO_DPLL_WAKEUP_DELAY);
 315              		.loc 2 135 0
 316 0082 2320     		movs	r0, #35
 317 0084 FFF7FEFF 		bl	CyDelayUs
 136:Generated_Source\PSoC4/cyPm.c ****             regTmp  = CY_SYS_CLK_WCO_DPLL_REG & ~(CY_SYS_CLK_WCO_CONFIG_DPLL_LF_LIMIT_MASK);
 318              		.loc 2 136 0
 319 0088 0C4B     		ldr	r3, .L10+8
 320 008a 1B68     		ldr	r3, [r3]
 321 008c 0C4A     		ldr	r2, .L10+12
 322 008e 1340     		ands	r3, r2
 323 0090 FB60     		str	r3, [r7, #12]
 137:Generated_Source\PSoC4/cyPm.c ****             CY_SYS_CLK_WCO_DPLL_REG = (regTmp | (CY_SYS_CLK_WCO_CONFIG_DPLL_LF_LIMIT_MAX << 
 324              		.loc 2 137 0
 325 0092 0A4B     		ldr	r3, .L10+8
 326 0094 FA68     		ldr	r2, [r7, #12]
 327 0096 FF21     		movs	r1, #255
 328 0098 8905     		lsls	r1, r1, #22
 329 009a 0A43     		orrs	r2, r1
 330 009c 1A60     		str	r2, [r3]
 331              	.L9:
 138:Generated_Source\PSoC4/cyPm.c ****                                                  CY_SYS_CLK_WCO_CONFIG_DPLL_LF_LIMIT_SHIFT));
 139:Generated_Source\PSoC4/cyPm.c ****         }
 140:Generated_Source\PSoC4/cyPm.c ****     #endif /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */    
 141:Generated_Source\PSoC4/cyPm.c ****     
 142:Generated_Source\PSoC4/cyPm.c ****     #if (CY_IP_CPUSS && CY_IP_SRSSV2)
 143:Generated_Source\PSoC4/cyPm.c ****         CY_PM_CPUSS_CONFIG_REG &= (uint32) (~CY_PM_CPUSS_CONFIG_FLSH_ACC_BYPASS);
 144:Generated_Source\PSoC4/cyPm.c ****     #endif /* (CY_IP_CPUSS && CY_IP_SRSSV2) */
 145:Generated_Source\PSoC4/cyPm.c **** 
 146:Generated_Source\PSoC4/cyPm.c ****     #if(CY_IP_ECO_SRSSLT)
 147:Generated_Source\PSoC4/cyPm.c ****         if(0u != pllResoreFlag)
 148:Generated_Source\PSoC4/cyPm.c ****         {
 149:Generated_Source\PSoC4/cyPm.c ****             CySysClkWriteHfclkDirect(CY_SYS_CLK_HFCLK_PLL0);
 150:Generated_Source\PSoC4/cyPm.c ****         }
 151:Generated_Source\PSoC4/cyPm.c ****     #endif /* (CY_IP_ECO_SRSSLT) */    
 152:Generated_Source\PSoC4/cyPm.c **** 
 153:Generated_Source\PSoC4/cyPm.c ****     CyExitCriticalSection(interruptState);
 332              		.loc 2 153 0
 333 009e 0B23     		movs	r3, #11
 334 00a0 FB18     		adds	r3, r7, r3
 335 00a2 1B78     		ldrb	r3, [r3]
 336 00a4 1800     		movs	r0, r3
 337 00a6 FFF7FEFF 		bl	CyExitCriticalSection
 154:Generated_Source\PSoC4/cyPm.c **** }
 338              		.loc 2 154 0
 339 00aa C046     		nop
 340 00ac BD46     		mov	sp, r7
 341 00ae 05B0     		add	sp, sp, #20
 342              		@ sp needed
 343 00b0 90BD     		pop	{r4, r7, pc}
 344              	.L11:
 345 00b2 C046     		.align	2
 346              	.L10:
 347 00b4 00000B40 		.word	1074462720
 348 00b8 00002240 		.word	1075970048
 349 00bc 08002240 		.word	1075970056
 350 00c0 FFFF3FC0 		.word	-1069547521
 351 00c4 28FF0B40 		.word	1074528040
ARM GAS  C:\Users\essele\AppData\Local\Temp\cczC3umF.s 			page 15


 352 00c8 0C000B40 		.word	1074462732
 353 00cc 52F2FF0F 		.word	268431954
 354 00d0 10ED00E0 		.word	-536810224
 355 00d4 00010B40 		.word	1074462976
 356              		.cfi_endproc
 357              	.LFE3:
 358              		.size	CySysPmDeepSleep, .-CySysPmDeepSleep
 359              		.section	.text.CySysPmHibernate,"ax",%progbits
 360              		.align	2
 361              		.global	CySysPmHibernate
 362              		.code	16
 363              		.thumb_func
 364              		.type	CySysPmHibernate, %function
 365              	CySysPmHibernate:
 366              	.LFB4:
 155:Generated_Source\PSoC4/cyPm.c **** 
 156:Generated_Source\PSoC4/cyPm.c **** 
 157:Generated_Source\PSoC4/cyPm.c **** #if(CY_IP_SRSSV2)
 158:Generated_Source\PSoC4/cyPm.c **** 
 159:Generated_Source\PSoC4/cyPm.c ****     /*******************************************************************************
 160:Generated_Source\PSoC4/cyPm.c ****     * Function Name: CySysPmHibernate
 161:Generated_Source\PSoC4/cyPm.c ****     ****************************************************************************//**
 162:Generated_Source\PSoC4/cyPm.c ****     *
 163:Generated_Source\PSoC4/cyPm.c ****     * Puts the part into the Hibernate state. Only SRAM and UDBs are retained;
 164:Generated_Source\PSoC4/cyPm.c ****     * most internal supplies are off. Wakeup is possible from a pin or a hibernate
 165:Generated_Source\PSoC4/cyPm.c ****     * comparator only.
 166:Generated_Source\PSoC4/cyPm.c ****     *
 167:Generated_Source\PSoC4/cyPm.c ****     * It is expected that the firmware has already frozen the IO-Cells using
 168:Generated_Source\PSoC4/cyPm.c ****     * CySysPmFreezeIo() function before the call to this function. If this is
 169:Generated_Source\PSoC4/cyPm.c ****     * omitted, the IO-cells will be frozen in the same way as they are
 170:Generated_Source\PSoC4/cyPm.c ****     * in the Active to Deep Sleep transition, but will lose their state on wake up
 171:Generated_Source\PSoC4/cyPm.c ****     * (because of the reset occurring at that time).
 172:Generated_Source\PSoC4/cyPm.c ****     *
 173:Generated_Source\PSoC4/cyPm.c ****     * Because all the CPU state is lost, the CPU will start up at the reset vector.
 174:Generated_Source\PSoC4/cyPm.c ****     * To save the firmware state through the Hibernate low power mode, a
 175:Generated_Source\PSoC4/cyPm.c ****     * corresponding variable should be defined with CY_NOINIT attribute. It
 176:Generated_Source\PSoC4/cyPm.c ****     * prevents data from being initialized to zero on startup. The interrupt
 177:Generated_Source\PSoC4/cyPm.c ****     * cause of the hibernate peripheral is retained, such that it can be either
 178:Generated_Source\PSoC4/cyPm.c ****     * read by the firmware or cause an interrupt after the firmware has booted and
 179:Generated_Source\PSoC4/cyPm.c ****     * enabled the corresponding interrupt. To distinguish the wakeup from
 180:Generated_Source\PSoC4/cyPm.c ****     * the Hibernate mode and the general Reset event, the
 181:Generated_Source\PSoC4/cyPm.c ****     * \ref CySysPmGetResetReason() function could be used.
 182:Generated_Source\PSoC4/cyPm.c ****     *
 183:Generated_Source\PSoC4/cyPm.c ****     *******************************************************************************/
 184:Generated_Source\PSoC4/cyPm.c ****     void CySysPmHibernate(void)
 185:Generated_Source\PSoC4/cyPm.c ****     {
 367              		.loc 2 185 0
 368              		.cfi_startproc
 369              		@ args = 0, pretend = 0, frame = 8
 370              		@ frame_needed = 1, uses_anonymous_args = 0
 371 0000 90B5     		push	{r4, r7, lr}
 372              		.cfi_def_cfa_offset 12
 373              		.cfi_offset 4, -12
 374              		.cfi_offset 7, -8
 375              		.cfi_offset 14, -4
 376 0002 83B0     		sub	sp, sp, #12
 377              		.cfi_def_cfa_offset 24
ARM GAS  C:\Users\essele\AppData\Local\Temp\cczC3umF.s 			page 16


 378 0004 00AF     		add	r7, sp, #0
 379              		.cfi_def_cfa_register 7
 186:Generated_Source\PSoC4/cyPm.c ****         uint8 interruptState;
 187:Generated_Source\PSoC4/cyPm.c **** 
 188:Generated_Source\PSoC4/cyPm.c ****         interruptState = CyEnterCriticalSection();
 380              		.loc 2 188 0
 381 0006 FC1D     		adds	r4, r7, #7
 382 0008 FFF7FEFF 		bl	CyEnterCriticalSection
 383 000c 0300     		movs	r3, r0
 384 000e 2370     		strb	r3, [r4]
 189:Generated_Source\PSoC4/cyPm.c **** 
 190:Generated_Source\PSoC4/cyPm.c ****         #if (CY_IP_HOBTO_DEVICE)
 191:Generated_Source\PSoC4/cyPm.c ****             /* Disable input buffers for all ports */
 192:Generated_Source\PSoC4/cyPm.c ****             CySysPmHibPinsDisableInputBuf();
 385              		.loc 2 192 0
 386 0010 FFF7FEFF 		bl	CySysPmHibPinsDisableInputBuf
 193:Generated_Source\PSoC4/cyPm.c ****         #endif /* (CY_IP_HOBTO_DEVICE) */
 194:Generated_Source\PSoC4/cyPm.c **** 
 195:Generated_Source\PSoC4/cyPm.c ****         /* Device enters Hibernate mode when CPU asserts SLEEPDEEP signal */
 196:Generated_Source\PSoC4/cyPm.c ****         CY_PM_PWR_CONTROL_REG |= CY_PM_PWR_CONTROL_HIBERNATE;
 387              		.loc 2 196 0
 388 0014 114B     		ldr	r3, .L13
 389 0016 114A     		ldr	r2, .L13
 390 0018 1268     		ldr	r2, [r2]
 391 001a 8021     		movs	r1, #128
 392 001c 0906     		lsls	r1, r1, #24
 393 001e 0A43     		orrs	r2, r1
 394 0020 1A60     		str	r2, [r3]
 197:Generated_Source\PSoC4/cyPm.c **** 
 198:Generated_Source\PSoC4/cyPm.c ****         /* Adjust delay to wait for references to settle on wakeup from hibernate */
 199:Generated_Source\PSoC4/cyPm.c ****         CY_PM_PWR_KEY_DELAY_REG = CY_SFLASH_HIB_KEY_DELAY_REG;
 395              		.loc 2 199 0
 396 0022 0F4B     		ldr	r3, .L13+4
 397 0024 0F4A     		ldr	r2, .L13+8
 398 0026 1288     		ldrh	r2, [r2]
 399 0028 92B2     		uxth	r2, r2
 400 002a 1A60     		str	r2, [r3]
 200:Generated_Source\PSoC4/cyPm.c **** 
 201:Generated_Source\PSoC4/cyPm.c ****         /* CPU enters DeepSleep/Hibernate mode upon execution of WFI */
 202:Generated_Source\PSoC4/cyPm.c ****         CY_PM_CPU_SCR_REG |= CY_PM_CPU_SCR_SLEEPDEEP;
 401              		.loc 2 202 0
 402 002c 0E4B     		ldr	r3, .L13+12
 403 002e 0E4A     		ldr	r2, .L13+12
 404 0030 1268     		ldr	r2, [r2]
 405 0032 0421     		movs	r1, #4
 406 0034 0A43     		orrs	r2, r1
 407 0036 1A60     		str	r2, [r3]
 203:Generated_Source\PSoC4/cyPm.c **** 
 204:Generated_Source\PSoC4/cyPm.c ****         /* Save token that will retain through a STOP/WAKEUP sequence
 205:Generated_Source\PSoC4/cyPm.c ****          * thus could be used by CySysPmGetResetReason() to differentiate
 206:Generated_Source\PSoC4/cyPm.c ****          * WAKEUP from a general RESET event.
 207:Generated_Source\PSoC4/cyPm.c ****          */
 208:Generated_Source\PSoC4/cyPm.c ****         CY_PM_PWR_STOP_REG = (CY_PM_PWR_STOP_REG & (uint32)(~CY_PM_PWR_STOP_TOKEN_MASK)) | CY_PM_PW
 408              		.loc 2 208 0
 409 0038 0C4B     		ldr	r3, .L13+16
 410 003a 0C4A     		ldr	r2, .L13+16
 411 003c 1268     		ldr	r2, [r2]
ARM GAS  C:\Users\essele\AppData\Local\Temp\cczC3umF.s 			page 17


 412 003e FF21     		movs	r1, #255
 413 0040 8A43     		bics	r2, r1
 414 0042 F121     		movs	r1, #241
 415 0044 0A43     		orrs	r2, r1
 416 0046 1A60     		str	r2, [r3]
 209:Generated_Source\PSoC4/cyPm.c **** 
 210:Generated_Source\PSoC4/cyPm.c ****         /* Sleep and wait for interrupt. Wakeup from Hibernate is performed
 211:Generated_Source\PSoC4/cyPm.c ****          * through RESET state, causing a normal Boot procedure to occur.
 212:Generated_Source\PSoC4/cyPm.c ****          * The WFI instruction doesn't put the core to sleep if its wake condition
 213:Generated_Source\PSoC4/cyPm.c ****          * is true when the instruction is executed.
 214:Generated_Source\PSoC4/cyPm.c ****          */
 215:Generated_Source\PSoC4/cyPm.c ****         CY_PM_WFI;
 417              		.loc 2 215 0
 418              		.syntax divided
 419              	@ 215 "Generated_Source\PSoC4\cyPm.c" 1
 420 0048 30BF     		WFI 
 421              	
 422              	@ 0 "" 2
 216:Generated_Source\PSoC4/cyPm.c **** 
 217:Generated_Source\PSoC4/cyPm.c ****         CyExitCriticalSection(interruptState);
 423              		.loc 2 217 0
 424              		.thumb
 425              		.syntax unified
 426 004a FB1D     		adds	r3, r7, #7
 427 004c 1B78     		ldrb	r3, [r3]
 428 004e 1800     		movs	r0, r3
 429 0050 FFF7FEFF 		bl	CyExitCriticalSection
 218:Generated_Source\PSoC4/cyPm.c ****     }
 430              		.loc 2 218 0
 431 0054 C046     		nop
 432 0056 BD46     		mov	sp, r7
 433 0058 03B0     		add	sp, sp, #12
 434              		@ sp needed
 435 005a 90BD     		pop	{r4, r7, pc}
 436              	.L14:
 437              		.align	2
 438              	.L13:
 439 005c 00000B40 		.word	1074462720
 440 0060 0C000B40 		.word	1074462732
 441 0064 50F2FF0F 		.word	268431952
 442 0068 10ED00E0 		.word	-536810224
 443 006c 2C000B40 		.word	1074462764
 444              		.cfi_endproc
 445              	.LFE4:
 446              		.size	CySysPmHibernate, .-CySysPmHibernate
 447              		.section	.text.CySysPmStop,"ax",%progbits
 448              		.align	2
 449              		.global	CySysPmStop
 450              		.code	16
 451              		.thumb_func
 452              		.type	CySysPmStop, %function
 453              	CySysPmStop:
 454              	.LFB5:
 219:Generated_Source\PSoC4/cyPm.c **** 
 220:Generated_Source\PSoC4/cyPm.c **** 
 221:Generated_Source\PSoC4/cyPm.c ****     /*******************************************************************************
 222:Generated_Source\PSoC4/cyPm.c ****     * Function Name: CySysPmStop
ARM GAS  C:\Users\essele\AppData\Local\Temp\cczC3umF.s 			page 18


 223:Generated_Source\PSoC4/cyPm.c ****     ****************************************************************************//**
 224:Generated_Source\PSoC4/cyPm.c ****     *
 225:Generated_Source\PSoC4/cyPm.c ****     * Puts the part into the Stop state. All internal supplies are off;
 226:Generated_Source\PSoC4/cyPm.c ****     * no state is retained.
 227:Generated_Source\PSoC4/cyPm.c ****     *
 228:Generated_Source\PSoC4/cyPm.c ****     * Wakeup from Stop is performed by toggling the wakeup pin, causing
 229:Generated_Source\PSoC4/cyPm.c ****     * a normal boot procedure to occur. To configure the wakeup pin,
 230:Generated_Source\PSoC4/cyPm.c ****     * the Digital Input Pin component should be placed on the schematic,
 231:Generated_Source\PSoC4/cyPm.c ****     * assigned to the wakeup pin, and resistively pulled up or down to the inverse
 232:Generated_Source\PSoC4/cyPm.c ****     * state of the wakeup polarity. To distinguish the wakeup from the Stop mode
 233:Generated_Source\PSoC4/cyPm.c ****     * and the general Reset event, \ref CySysPmGetResetReason() function could be
 234:Generated_Source\PSoC4/cyPm.c ****     * used.  The wakeup pin is active low by default. The wakeup pin polarity
 235:Generated_Source\PSoC4/cyPm.c ****     * could be changed with the \ref CySysPmSetWakeupPolarity() function.
 236:Generated_Source\PSoC4/cyPm.c ****     *
 237:Generated_Source\PSoC4/cyPm.c ****     * This function freezes IO cells implicitly. It is not possible to enter
 238:Generated_Source\PSoC4/cyPm.c ****     * the STOP mode before freezing the IO cells. The IO cells remain frozen after
 239:Generated_Source\PSoC4/cyPm.c ****     * awake from the Stop mode until the firmware unfreezes them after booting
 240:Generated_Source\PSoC4/cyPm.c ****     * explicitly with \ref CySysPmUnfreezeIo() function call.
 241:Generated_Source\PSoC4/cyPm.c ****     *
 242:Generated_Source\PSoC4/cyPm.c ****     *******************************************************************************/
 243:Generated_Source\PSoC4/cyPm.c ****     void CySysPmStop(void)
 244:Generated_Source\PSoC4/cyPm.c ****     {
 455              		.loc 2 244 0
 456              		.cfi_startproc
 457              		@ args = 0, pretend = 0, frame = 0
 458              		@ frame_needed = 1, uses_anonymous_args = 0
 459 0000 80B5     		push	{r7, lr}
 460              		.cfi_def_cfa_offset 8
 461              		.cfi_offset 7, -8
 462              		.cfi_offset 14, -4
 463 0002 00AF     		add	r7, sp, #0
 464              		.cfi_def_cfa_register 7
 245:Generated_Source\PSoC4/cyPm.c ****         (void) CyEnterCriticalSection();
 465              		.loc 2 245 0
 466 0004 FFF7FEFF 		bl	CyEnterCriticalSection
 246:Generated_Source\PSoC4/cyPm.c **** 
 247:Generated_Source\PSoC4/cyPm.c ****         /* Update token to indicate Stop mode transition. Preserve only polarity. */
 248:Generated_Source\PSoC4/cyPm.c ****         CY_PM_PWR_STOP_REG = (CY_PM_PWR_STOP_REG & CY_PM_PWR_STOP_POLARITY) | CY_PM_PWR_STOP_TOKEN_
 467              		.loc 2 248 0
 468 0008 0B4B     		ldr	r3, .L16
 469 000a 0B4A     		ldr	r2, .L16
 470 000c 1168     		ldr	r1, [r2]
 471 000e 8022     		movs	r2, #128
 472 0010 5202     		lsls	r2, r2, #9
 473 0012 0A40     		ands	r2, r1
 474 0014 F221     		movs	r1, #242
 475 0016 0A43     		orrs	r2, r1
 476 0018 1A60     		str	r2, [r3]
 249:Generated_Source\PSoC4/cyPm.c **** 
 250:Generated_Source\PSoC4/cyPm.c ****         /* Freeze IO-Cells to save IO-Cell state */
 251:Generated_Source\PSoC4/cyPm.c ****         CySysPmFreezeIo();
 477              		.loc 2 251 0
 478 001a FFF7FEFF 		bl	CySysPmFreezeIo
 252:Generated_Source\PSoC4/cyPm.c **** 
 253:Generated_Source\PSoC4/cyPm.c ****         /* Initiates transition to Stop state */
 254:Generated_Source\PSoC4/cyPm.c ****         CY_PM_PWR_STOP_REG = CY_PM_PWR_STOP_REG | CY_PM_PWR_STOP_STOP;
 479              		.loc 2 254 0
ARM GAS  C:\Users\essele\AppData\Local\Temp\cczC3umF.s 			page 19


 480 001e 064B     		ldr	r3, .L16
 481 0020 054A     		ldr	r2, .L16
 482 0022 1268     		ldr	r2, [r2]
 483 0024 8021     		movs	r1, #128
 484 0026 0906     		lsls	r1, r1, #24
 485 0028 0A43     		orrs	r2, r1
 486 002a 1A60     		str	r2, [r3]
 255:Generated_Source\PSoC4/cyPm.c **** 
 256:Generated_Source\PSoC4/cyPm.c ****         /* Depending on the clock frequency and internal timing delays,
 257:Generated_Source\PSoC4/cyPm.c ****          * the final AHB transaction may or may not complete. To guard against
 258:Generated_Source\PSoC4/cyPm.c ****          * accidentally executing an unintended instruction, it is recommended
 259:Generated_Source\PSoC4/cyPm.c ****          * to add 2 NOP cycles after the final write to the STOP register.
 260:Generated_Source\PSoC4/cyPm.c ****          */
 261:Generated_Source\PSoC4/cyPm.c ****         CY_NOP;
 487              		.loc 2 261 0
 488              		.syntax divided
 489              	@ 261 "Generated_Source\PSoC4\cyPm.c" 1
 490 002c C046     		NOP
 491              	
 492              	@ 0 "" 2
 262:Generated_Source\PSoC4/cyPm.c ****         CY_NOP;
 493              		.loc 2 262 0
 494              	@ 262 "Generated_Source\PSoC4\cyPm.c" 1
 495 002e C046     		NOP
 496              	
 497              	@ 0 "" 2
 263:Generated_Source\PSoC4/cyPm.c **** 
 264:Generated_Source\PSoC4/cyPm.c ****         /* Should never get to this WFI instruction */
 265:Generated_Source\PSoC4/cyPm.c ****         CY_PM_WFI;
 498              		.loc 2 265 0
 499              	@ 265 "Generated_Source\PSoC4\cyPm.c" 1
 500 0030 30BF     		WFI 
 501              	
 502              	@ 0 "" 2
 266:Generated_Source\PSoC4/cyPm.c **** 
 267:Generated_Source\PSoC4/cyPm.c ****         /* Wakeup from Stop is performed by toggling of Wakeup pin,
 268:Generated_Source\PSoC4/cyPm.c ****          * causing a normal Boot procedure to occur. No need to exit
 269:Generated_Source\PSoC4/cyPm.c ****          * from the critical section.
 270:Generated_Source\PSoC4/cyPm.c ****          */
 271:Generated_Source\PSoC4/cyPm.c ****     }
 503              		.loc 2 271 0
 504              		.thumb
 505              		.syntax unified
 506 0032 C046     		nop
 507 0034 BD46     		mov	sp, r7
 508              		@ sp needed
 509 0036 80BD     		pop	{r7, pc}
 510              	.L17:
 511              		.align	2
 512              	.L16:
 513 0038 2C000B40 		.word	1074462764
 514              		.cfi_endproc
 515              	.LFE5:
 516              		.size	CySysPmStop, .-CySysPmStop
 517              		.section	.text.CySysPmSetWakeupPolarity,"ax",%progbits
 518              		.align	2
 519              		.global	CySysPmSetWakeupPolarity
ARM GAS  C:\Users\essele\AppData\Local\Temp\cczC3umF.s 			page 20


 520              		.code	16
 521              		.thumb_func
 522              		.type	CySysPmSetWakeupPolarity, %function
 523              	CySysPmSetWakeupPolarity:
 524              	.LFB6:
 272:Generated_Source\PSoC4/cyPm.c **** 
 273:Generated_Source\PSoC4/cyPm.c **** 
 274:Generated_Source\PSoC4/cyPm.c ****     /*******************************************************************************
 275:Generated_Source\PSoC4/cyPm.c ****     * Function Name: CySysPmSetWakeupPolarity
 276:Generated_Source\PSoC4/cyPm.c ****     ****************************************************************************//**
 277:Generated_Source\PSoC4/cyPm.c ****     *
 278:Generated_Source\PSoC4/cyPm.c ****     * Wake up from the stop mode is performed by toggling the wakeup pin,
 279:Generated_Source\PSoC4/cyPm.c ****     * causing a normal boot procedure to occur. This function assigns
 280:Generated_Source\PSoC4/cyPm.c ****     * the wakeup pin active level. Setting the wakeup pin to this level will cause
 281:Generated_Source\PSoC4/cyPm.c ****     * the wakeup from stop mode. The wakeup pin is active low by default.
 282:Generated_Source\PSoC4/cyPm.c ****     *
 283:Generated_Source\PSoC4/cyPm.c ****     * \param polarity
 284:Generated_Source\PSoC4/cyPm.c ****     * - \ref CY_PM_STOP_WAKEUP_ACTIVE_LOW Logical zero will wakeup the chip
 285:Generated_Source\PSoC4/cyPm.c ****     * - \ref CY_PM_STOP_WAKEUP_ACTIVE_HIGH Logical one will wakeup the chip
 286:Generated_Source\PSoC4/cyPm.c ****     *
 287:Generated_Source\PSoC4/cyPm.c ****     *******************************************************************************/
 288:Generated_Source\PSoC4/cyPm.c ****     void CySysPmSetWakeupPolarity(uint32 polarity)
 289:Generated_Source\PSoC4/cyPm.c ****     {
 525              		.loc 2 289 0
 526              		.cfi_startproc
 527              		@ args = 0, pretend = 0, frame = 16
 528              		@ frame_needed = 1, uses_anonymous_args = 0
 529 0000 90B5     		push	{r4, r7, lr}
 530              		.cfi_def_cfa_offset 12
 531              		.cfi_offset 4, -12
 532              		.cfi_offset 7, -8
 533              		.cfi_offset 14, -4
 534 0002 85B0     		sub	sp, sp, #20
 535              		.cfi_def_cfa_offset 32
 536 0004 00AF     		add	r7, sp, #0
 537              		.cfi_def_cfa_register 7
 538 0006 7860     		str	r0, [r7, #4]
 290:Generated_Source\PSoC4/cyPm.c ****         uint8 interruptState;
 291:Generated_Source\PSoC4/cyPm.c **** 
 292:Generated_Source\PSoC4/cyPm.c ****         interruptState = CyEnterCriticalSection();
 539              		.loc 2 292 0
 540 0008 0F23     		movs	r3, #15
 541 000a FC18     		adds	r4, r7, r3
 542 000c FFF7FEFF 		bl	CyEnterCriticalSection
 543 0010 0300     		movs	r3, r0
 544 0012 2370     		strb	r3, [r4]
 293:Generated_Source\PSoC4/cyPm.c **** 
 294:Generated_Source\PSoC4/cyPm.c ****         CY_PM_PWR_STOP_REG = (CY_PM_STOP_WAKEUP_ACTIVE_LOW != polarity) ?
 545              		.loc 2 294 0
 546 0014 0C4A     		ldr	r2, .L21
 295:Generated_Source\PSoC4/cyPm.c ****                             (CY_PM_PWR_STOP_REG | CY_PM_PWR_STOP_POLARITY) :
 547              		.loc 2 295 0
 548 0016 7B68     		ldr	r3, [r7, #4]
 549 0018 002B     		cmp	r3, #0
 550 001a 05D0     		beq	.L19
 551              		.loc 2 295 0 is_stmt 0 discriminator 1
 552 001c 0A4B     		ldr	r3, .L21
ARM GAS  C:\Users\essele\AppData\Local\Temp\cczC3umF.s 			page 21


 553 001e 1B68     		ldr	r3, [r3]
 554 0020 8021     		movs	r1, #128
 555 0022 4902     		lsls	r1, r1, #9
 556 0024 0B43     		orrs	r3, r1
 557 0026 03E0     		b	.L20
 558              	.L19:
 296:Generated_Source\PSoC4/cyPm.c ****                             (CY_PM_PWR_STOP_REG & (uint32) (~CY_PM_PWR_STOP_POLARITY));
 559              		.loc 2 296 0 is_stmt 1 discriminator 2
 560 0028 074B     		ldr	r3, .L21
 561 002a 1B68     		ldr	r3, [r3]
 295:Generated_Source\PSoC4/cyPm.c ****                             (CY_PM_PWR_STOP_REG | CY_PM_PWR_STOP_POLARITY) :
 562              		.loc 2 295 0 discriminator 2
 563 002c 0749     		ldr	r1, .L21+4
 564 002e 0B40     		ands	r3, r1
 565              	.L20:
 294:Generated_Source\PSoC4/cyPm.c ****                             (CY_PM_PWR_STOP_REG | CY_PM_PWR_STOP_POLARITY) :
 566              		.loc 2 294 0
 567 0030 1360     		str	r3, [r2]
 297:Generated_Source\PSoC4/cyPm.c **** 
 298:Generated_Source\PSoC4/cyPm.c ****         CyExitCriticalSection(interruptState);
 568              		.loc 2 298 0
 569 0032 0F23     		movs	r3, #15
 570 0034 FB18     		adds	r3, r7, r3
 571 0036 1B78     		ldrb	r3, [r3]
 572 0038 1800     		movs	r0, r3
 573 003a FFF7FEFF 		bl	CyExitCriticalSection
 299:Generated_Source\PSoC4/cyPm.c ****     }
 574              		.loc 2 299 0
 575 003e C046     		nop
 576 0040 BD46     		mov	sp, r7
 577 0042 05B0     		add	sp, sp, #20
 578              		@ sp needed
 579 0044 90BD     		pop	{r4, r7, pc}
 580              	.L22:
 581 0046 C046     		.align	2
 582              	.L21:
 583 0048 2C000B40 		.word	1074462764
 584 004c FFFFFEFF 		.word	-65537
 585              		.cfi_endproc
 586              	.LFE6:
 587              		.size	CySysPmSetWakeupPolarity, .-CySysPmSetWakeupPolarity
 588              		.section	.text.CySysPmGetResetReason,"ax",%progbits
 589              		.align	2
 590              		.global	CySysPmGetResetReason
 591              		.code	16
 592              		.thumb_func
 593              		.type	CySysPmGetResetReason, %function
 594              	CySysPmGetResetReason:
 595              	.LFB7:
 300:Generated_Source\PSoC4/cyPm.c **** 
 301:Generated_Source\PSoC4/cyPm.c **** 
 302:Generated_Source\PSoC4/cyPm.c ****     /*******************************************************************************
 303:Generated_Source\PSoC4/cyPm.c ****     * Function Name: CySysPmGetResetReason
 304:Generated_Source\PSoC4/cyPm.c ****     ****************************************************************************//**
 305:Generated_Source\PSoC4/cyPm.c ****     *
 306:Generated_Source\PSoC4/cyPm.c ****     * Retrieves the last reset reason - transition from OFF/XRES/STOP/HIBERNATE to
 307:Generated_Source\PSoC4/cyPm.c ****     * the RESET state. Note that waking up from STOP using XRES will be perceived
ARM GAS  C:\Users\essele\AppData\Local\Temp\cczC3umF.s 			page 22


 308:Generated_Source\PSoC4/cyPm.c ****     * as a general RESET.
 309:Generated_Source\PSoC4/cyPm.c ****     *
 310:Generated_Source\PSoC4/cyPm.c ****     * \return CY_PM_RESET_REASON_UNKN          Unknown reset reason.
 311:Generated_Source\PSoC4/cyPm.c ****     * \return CY_PM_RESET_REASON_XRES          Transition from OFF/XRES to RESET
 312:Generated_Source\PSoC4/cyPm.c ****     * \return CY_PM_RESET_REASON_WAKEUP_HIB    Transition/wakeup from HIBERNATE to RESET
 313:Generated_Source\PSoC4/cyPm.c ****     * \return CY_PM_RESET_REASON_WAKEUP_STOP   Transition/wakeup from STOP to RESET
 314:Generated_Source\PSoC4/cyPm.c ****     *
 315:Generated_Source\PSoC4/cyPm.c ****     *******************************************************************************/
 316:Generated_Source\PSoC4/cyPm.c ****     uint32 CySysPmGetResetReason(void)
 317:Generated_Source\PSoC4/cyPm.c ****     {
 596              		.loc 2 317 0
 597              		.cfi_startproc
 598              		@ args = 0, pretend = 0, frame = 8
 599              		@ frame_needed = 1, uses_anonymous_args = 0
 600 0000 80B5     		push	{r7, lr}
 601              		.cfi_def_cfa_offset 8
 602              		.cfi_offset 7, -8
 603              		.cfi_offset 14, -4
 604 0002 82B0     		sub	sp, sp, #8
 605              		.cfi_def_cfa_offset 16
 606 0004 00AF     		add	r7, sp, #0
 607              		.cfi_def_cfa_register 7
 318:Generated_Source\PSoC4/cyPm.c ****         uint32 reason = CY_PM_RESET_REASON_UNKN;
 608              		.loc 2 318 0
 609 0006 0023     		movs	r3, #0
 610 0008 7B60     		str	r3, [r7, #4]
 319:Generated_Source\PSoC4/cyPm.c **** 
 320:Generated_Source\PSoC4/cyPm.c ****         switch(CY_PM_PWR_STOP_REG & CY_PM_PWR_STOP_TOKEN_MASK)
 611              		.loc 2 320 0
 612 000a 0C4B     		ldr	r3, .L30
 613 000c 1B68     		ldr	r3, [r3]
 614 000e FF22     		movs	r2, #255
 615 0010 1340     		ands	r3, r2
 616 0012 F12B     		cmp	r3, #241
 617 0014 07D0     		beq	.L25
 618 0016 F22B     		cmp	r3, #242
 619 0018 08D0     		beq	.L26
 620 001a 002B     		cmp	r3, #0
 621 001c 00D0     		beq	.L27
 321:Generated_Source\PSoC4/cyPm.c ****         {
 322:Generated_Source\PSoC4/cyPm.c ****         /* Power up, XRES */
 323:Generated_Source\PSoC4/cyPm.c ****         case CY_PM_PWR_STOP_TOKEN_XRES:
 324:Generated_Source\PSoC4/cyPm.c ****             reason = CY_PM_RESET_REASON_XRES;
 325:Generated_Source\PSoC4/cyPm.c ****             break;
 326:Generated_Source\PSoC4/cyPm.c **** 
 327:Generated_Source\PSoC4/cyPm.c ****         /* Wakeup from Hibernate */
 328:Generated_Source\PSoC4/cyPm.c ****         case CY_PM_PWR_STOP_TOKEN_HIB:
 329:Generated_Source\PSoC4/cyPm.c ****             reason = CY_PM_RESET_REASON_WAKEUP_HIB;
 330:Generated_Source\PSoC4/cyPm.c ****             break;
 331:Generated_Source\PSoC4/cyPm.c **** 
 332:Generated_Source\PSoC4/cyPm.c ****         /* Wakeup from Stop (through WAKEUP pin assert) */
 333:Generated_Source\PSoC4/cyPm.c ****         case CY_PM_PWR_STOP_TOKEN_STOP:
 334:Generated_Source\PSoC4/cyPm.c ****             reason = CY_PM_RESET_REASON_WAKEUP_STOP;
 335:Generated_Source\PSoC4/cyPm.c ****             break;
 336:Generated_Source\PSoC4/cyPm.c **** 
 337:Generated_Source\PSoC4/cyPm.c ****         /* Unknown reason */
 338:Generated_Source\PSoC4/cyPm.c ****         default:
ARM GAS  C:\Users\essele\AppData\Local\Temp\cczC3umF.s 			page 23


 339:Generated_Source\PSoC4/cyPm.c ****             break;
 622              		.loc 2 339 0
 623 001e 08E0     		b	.L28
 624              	.L27:
 324:Generated_Source\PSoC4/cyPm.c ****             break;
 625              		.loc 2 324 0
 626 0020 0123     		movs	r3, #1
 627 0022 7B60     		str	r3, [r7, #4]
 325:Generated_Source\PSoC4/cyPm.c **** 
 628              		.loc 2 325 0
 629 0024 05E0     		b	.L28
 630              	.L25:
 329:Generated_Source\PSoC4/cyPm.c ****             break;
 631              		.loc 2 329 0
 632 0026 0223     		movs	r3, #2
 633 0028 7B60     		str	r3, [r7, #4]
 330:Generated_Source\PSoC4/cyPm.c **** 
 634              		.loc 2 330 0
 635 002a 02E0     		b	.L28
 636              	.L26:
 334:Generated_Source\PSoC4/cyPm.c ****             break;
 637              		.loc 2 334 0
 638 002c 0323     		movs	r3, #3
 639 002e 7B60     		str	r3, [r7, #4]
 335:Generated_Source\PSoC4/cyPm.c **** 
 640              		.loc 2 335 0
 641 0030 C046     		nop
 642              	.L28:
 340:Generated_Source\PSoC4/cyPm.c ****         }
 341:Generated_Source\PSoC4/cyPm.c **** 
 342:Generated_Source\PSoC4/cyPm.c ****         return (reason);
 643              		.loc 2 342 0
 644 0032 7B68     		ldr	r3, [r7, #4]
 343:Generated_Source\PSoC4/cyPm.c ****     }
 645              		.loc 2 343 0
 646 0034 1800     		movs	r0, r3
 647 0036 BD46     		mov	sp, r7
 648 0038 02B0     		add	sp, sp, #8
 649              		@ sp needed
 650 003a 80BD     		pop	{r7, pc}
 651              	.L31:
 652              		.align	2
 653              	.L30:
 654 003c 2C000B40 		.word	1074462764
 655              		.cfi_endproc
 656              	.LFE7:
 657              		.size	CySysPmGetResetReason, .-CySysPmGetResetReason
 658              		.section	.text.CySysPmFreezeIo,"ax",%progbits
 659              		.align	2
 660              		.global	CySysPmFreezeIo
 661              		.code	16
 662              		.thumb_func
 663              		.type	CySysPmFreezeIo, %function
 664              	CySysPmFreezeIo:
 665              	.LFB8:
 344:Generated_Source\PSoC4/cyPm.c **** 
 345:Generated_Source\PSoC4/cyPm.c **** 
ARM GAS  C:\Users\essele\AppData\Local\Temp\cczC3umF.s 			page 24


 346:Generated_Source\PSoC4/cyPm.c ****     /*******************************************************************************
 347:Generated_Source\PSoC4/cyPm.c ****     * Function Name: CySysPmFreezeIo
 348:Generated_Source\PSoC4/cyPm.c ****     ****************************************************************************//**
 349:Generated_Source\PSoC4/cyPm.c ****     *
 350:Generated_Source\PSoC4/cyPm.c ****     * Freezes IO-Cells directly to save the IO-Cell state on wake up from the
 351:Generated_Source\PSoC4/cyPm.c ****     * Hibernate or Stop state. It is not required to call this function before
 352:Generated_Source\PSoC4/cyPm.c ****     * entering the Stop mode, since \ref CySysPmStop() function freezes IO-Cells
 353:Generated_Source\PSoC4/cyPm.c ****     * implicitly.
 354:Generated_Source\PSoC4/cyPm.c ****     *
 355:Generated_Source\PSoC4/cyPm.c ****     * This API is not available for PSoC 4000 family of devices.
 356:Generated_Source\PSoC4/cyPm.c ****     *
 357:Generated_Source\PSoC4/cyPm.c ****     *******************************************************************************/
 358:Generated_Source\PSoC4/cyPm.c ****     void CySysPmFreezeIo(void)
 359:Generated_Source\PSoC4/cyPm.c ****     {
 666              		.loc 2 359 0
 667              		.cfi_startproc
 668              		@ args = 0, pretend = 0, frame = 8
 669              		@ frame_needed = 1, uses_anonymous_args = 0
 670 0000 90B5     		push	{r4, r7, lr}
 671              		.cfi_def_cfa_offset 12
 672              		.cfi_offset 4, -12
 673              		.cfi_offset 7, -8
 674              		.cfi_offset 14, -4
 675 0002 83B0     		sub	sp, sp, #12
 676              		.cfi_def_cfa_offset 24
 677 0004 00AF     		add	r7, sp, #0
 678              		.cfi_def_cfa_register 7
 360:Generated_Source\PSoC4/cyPm.c ****         uint8 interruptState;
 361:Generated_Source\PSoC4/cyPm.c **** 
 362:Generated_Source\PSoC4/cyPm.c ****         interruptState = CyEnterCriticalSection();
 679              		.loc 2 362 0
 680 0006 FC1D     		adds	r4, r7, #7
 681 0008 FFF7FEFF 		bl	CyEnterCriticalSection
 682 000c 0300     		movs	r3, r0
 683 000e 2370     		strb	r3, [r4]
 363:Generated_Source\PSoC4/cyPm.c **** 
 364:Generated_Source\PSoC4/cyPm.c ****         /* Check FREEZE state to avoid recurrent IO-Cells freeze attempt,
 365:Generated_Source\PSoC4/cyPm.c ****          * since the second call to this function will cause accidental switch
 366:Generated_Source\PSoC4/cyPm.c ****          * to the STOP mode (the system will enter STOP mode immediately after
 367:Generated_Source\PSoC4/cyPm.c ****          * writing to STOP bit since both UNLOCK and FREEZE have been set correctly
 368:Generated_Source\PSoC4/cyPm.c ****          * in a previous call to this function).
 369:Generated_Source\PSoC4/cyPm.c ****          */
 370:Generated_Source\PSoC4/cyPm.c ****         if (0u == (CY_PM_PWR_STOP_REG & CY_PM_PWR_STOP_FREEZE))
 684              		.loc 2 370 0
 685 0010 0F4B     		ldr	r3, .L34
 686 0012 1A68     		ldr	r2, [r3]
 687 0014 8023     		movs	r3, #128
 688 0016 9B02     		lsls	r3, r3, #10
 689 0018 1340     		ands	r3, r2
 690 001a 0FD1     		bne	.L33
 371:Generated_Source\PSoC4/cyPm.c ****         {
 372:Generated_Source\PSoC4/cyPm.c ****             /* Preserve last reset reason and disable overrides the next freeze command by peripher
 373:Generated_Source\PSoC4/cyPm.c ****             CY_PM_PWR_STOP_REG = CY_PM_PWR_STOP_STOP | CY_PM_PWR_STOP_FREEZE | CY_PM_PWR_STOP_UNLOC
 691              		.loc 2 373 0
 692 001c 0C4B     		ldr	r3, .L34
 374:Generated_Source\PSoC4/cyPm.c ****                                 (CY_PM_PWR_STOP_REG & (CY_PM_PWR_STOP_TOKEN_MASK | CY_PM_PWR_STOP_P
 693              		.loc 2 374 0
ARM GAS  C:\Users\essele\AppData\Local\Temp\cczC3umF.s 			page 25


 694 001e 0C4A     		ldr	r2, .L34
 695 0020 1268     		ldr	r2, [r2]
 696 0022 0C49     		ldr	r1, .L34+4
 697 0024 0A40     		ands	r2, r1
 373:Generated_Source\PSoC4/cyPm.c ****                                 (CY_PM_PWR_STOP_REG & (CY_PM_PWR_STOP_TOKEN_MASK | CY_PM_PWR_STOP_P
 698              		.loc 2 373 0
 699 0026 0C49     		ldr	r1, .L34+8
 700 0028 0A43     		orrs	r2, r1
 701 002a 1A60     		str	r2, [r3]
 375:Generated_Source\PSoC4/cyPm.c **** 
 376:Generated_Source\PSoC4/cyPm.c ****             /* If reading after writing, read this register three times to delay
 377:Generated_Source\PSoC4/cyPm.c ****             *  enough time for internal settling.
 378:Generated_Source\PSoC4/cyPm.c ****             */
 379:Generated_Source\PSoC4/cyPm.c ****             (void) CY_PM_PWR_STOP_REG;
 702              		.loc 2 379 0
 703 002c 084B     		ldr	r3, .L34
 704 002e 1B68     		ldr	r3, [r3]
 380:Generated_Source\PSoC4/cyPm.c ****             (void) CY_PM_PWR_STOP_REG;
 705              		.loc 2 380 0
 706 0030 074B     		ldr	r3, .L34
 707 0032 1B68     		ldr	r3, [r3]
 381:Generated_Source\PSoC4/cyPm.c **** 
 382:Generated_Source\PSoC4/cyPm.c ****             /* Second write causes the freeze of IO-Cells to save IO-Cell state */
 383:Generated_Source\PSoC4/cyPm.c ****             CY_PM_PWR_STOP_REG = CY_PM_PWR_STOP_REG;
 708              		.loc 2 383 0
 709 0034 064B     		ldr	r3, .L34
 710 0036 064A     		ldr	r2, .L34
 711 0038 1268     		ldr	r2, [r2]
 712 003a 1A60     		str	r2, [r3]
 713              	.L33:
 384:Generated_Source\PSoC4/cyPm.c ****         }
 385:Generated_Source\PSoC4/cyPm.c **** 
 386:Generated_Source\PSoC4/cyPm.c ****         CyExitCriticalSection(interruptState);
 714              		.loc 2 386 0
 715 003c FB1D     		adds	r3, r7, #7
 716 003e 1B78     		ldrb	r3, [r3]
 717 0040 1800     		movs	r0, r3
 718 0042 FFF7FEFF 		bl	CyExitCriticalSection
 387:Generated_Source\PSoC4/cyPm.c ****     }
 719              		.loc 2 387 0
 720 0046 C046     		nop
 721 0048 BD46     		mov	sp, r7
 722 004a 03B0     		add	sp, sp, #12
 723              		@ sp needed
 724 004c 90BD     		pop	{r4, r7, pc}
 725              	.L35:
 726 004e C046     		.align	2
 727              	.L34:
 728 0050 2C000B40 		.word	1074462764
 729 0054 FF000100 		.word	65791
 730 0058 003A0280 		.word	-2147337728
 731              		.cfi_endproc
 732              	.LFE8:
 733              		.size	CySysPmFreezeIo, .-CySysPmFreezeIo
 734              		.section	.text.CySysPmUnfreezeIo,"ax",%progbits
 735              		.align	2
 736              		.global	CySysPmUnfreezeIo
ARM GAS  C:\Users\essele\AppData\Local\Temp\cczC3umF.s 			page 26


 737              		.code	16
 738              		.thumb_func
 739              		.type	CySysPmUnfreezeIo, %function
 740              	CySysPmUnfreezeIo:
 741              	.LFB9:
 388:Generated_Source\PSoC4/cyPm.c **** 
 389:Generated_Source\PSoC4/cyPm.c **** 
 390:Generated_Source\PSoC4/cyPm.c ****     /*******************************************************************************
 391:Generated_Source\PSoC4/cyPm.c ****     * Function Name: CySysPmUnfreezeIo
 392:Generated_Source\PSoC4/cyPm.c ****     ****************************************************************************//**
 393:Generated_Source\PSoC4/cyPm.c ****     *
 394:Generated_Source\PSoC4/cyPm.c ****     * The IO-Cells remain frozen after awake from Hibernate or Stop mode until
 395:Generated_Source\PSoC4/cyPm.c ****     * the firmware unfreezes them after booting. The call of this function
 396:Generated_Source\PSoC4/cyPm.c ****     * unfreezes IO-Cells explicitly.
 397:Generated_Source\PSoC4/cyPm.c ****     *
 398:Generated_Source\PSoC4/cyPm.c ****     * If the firmware intent is to retain the data value on the port, then the
 399:Generated_Source\PSoC4/cyPm.c ****     * value must be read and re-written to the data register before calling this
 400:Generated_Source\PSoC4/cyPm.c ****     * API. Furthermore, the drive mode must be re-programmed.  If this is not done,
 401:Generated_Source\PSoC4/cyPm.c ****     * the pin state will change to default state the moment the freeze is removed.
 402:Generated_Source\PSoC4/cyPm.c ****     *
 403:Generated_Source\PSoC4/cyPm.c ****     * This API is not available for PSoC 4000 family of devices.
 404:Generated_Source\PSoC4/cyPm.c ****     *
 405:Generated_Source\PSoC4/cyPm.c ****     *******************************************************************************/
 406:Generated_Source\PSoC4/cyPm.c ****     void CySysPmUnfreezeIo(void)
 407:Generated_Source\PSoC4/cyPm.c ****     {
 742              		.loc 2 407 0
 743              		.cfi_startproc
 744              		@ args = 0, pretend = 0, frame = 8
 745              		@ frame_needed = 1, uses_anonymous_args = 0
 746 0000 90B5     		push	{r4, r7, lr}
 747              		.cfi_def_cfa_offset 12
 748              		.cfi_offset 4, -12
 749              		.cfi_offset 7, -8
 750              		.cfi_offset 14, -4
 751 0002 83B0     		sub	sp, sp, #12
 752              		.cfi_def_cfa_offset 24
 753 0004 00AF     		add	r7, sp, #0
 754              		.cfi_def_cfa_register 7
 408:Generated_Source\PSoC4/cyPm.c ****         uint8 interruptState;
 409:Generated_Source\PSoC4/cyPm.c **** 
 410:Generated_Source\PSoC4/cyPm.c ****         interruptState = CyEnterCriticalSection();
 755              		.loc 2 410 0
 756 0006 FC1D     		adds	r4, r7, #7
 757 0008 FFF7FEFF 		bl	CyEnterCriticalSection
 758 000c 0300     		movs	r3, r0
 759 000e 2370     		strb	r3, [r4]
 411:Generated_Source\PSoC4/cyPm.c **** 
 412:Generated_Source\PSoC4/cyPm.c ****         /* Preserve last reset reason and wakeup polarity. Then, unfreeze I/O:
 413:Generated_Source\PSoC4/cyPm.c ****          * write PWR_STOP.FREEZE=0, .UNLOCK=0x3A, .STOP=0, .TOKEN
 414:Generated_Source\PSoC4/cyPm.c ****          */
 415:Generated_Source\PSoC4/cyPm.c ****         CY_PM_PWR_STOP_REG = CY_PM_PWR_STOP_UNLOCK |
 760              		.loc 2 415 0
 761 0010 0D4B     		ldr	r3, .L37
 416:Generated_Source\PSoC4/cyPm.c ****                             (CY_PM_PWR_STOP_REG & (CY_PM_PWR_STOP_TOKEN_MASK | CY_PM_PWR_STOP_POLAR
 762              		.loc 2 416 0
 763 0012 0D4A     		ldr	r2, .L37
 764 0014 1268     		ldr	r2, [r2]
ARM GAS  C:\Users\essele\AppData\Local\Temp\cczC3umF.s 			page 27


 765 0016 0D49     		ldr	r1, .L37+4
 766 0018 0A40     		ands	r2, r1
 415:Generated_Source\PSoC4/cyPm.c ****                             (CY_PM_PWR_STOP_REG & (CY_PM_PWR_STOP_TOKEN_MASK | CY_PM_PWR_STOP_POLAR
 767              		.loc 2 415 0
 768 001a E821     		movs	r1, #232
 769 001c 8901     		lsls	r1, r1, #6
 770 001e 0A43     		orrs	r2, r1
 771 0020 1A60     		str	r2, [r3]
 417:Generated_Source\PSoC4/cyPm.c **** 
 418:Generated_Source\PSoC4/cyPm.c ****         /* If reading after writing, read this register three times to delay
 419:Generated_Source\PSoC4/cyPm.c ****         *  enough time for internal settling.
 420:Generated_Source\PSoC4/cyPm.c ****         */
 421:Generated_Source\PSoC4/cyPm.c ****         (void) CY_PM_PWR_STOP_REG;
 772              		.loc 2 421 0
 773 0022 094B     		ldr	r3, .L37
 774 0024 1B68     		ldr	r3, [r3]
 422:Generated_Source\PSoC4/cyPm.c ****         (void) CY_PM_PWR_STOP_REG;
 775              		.loc 2 422 0
 776 0026 084B     		ldr	r3, .L37
 777 0028 1B68     		ldr	r3, [r3]
 423:Generated_Source\PSoC4/cyPm.c **** 
 424:Generated_Source\PSoC4/cyPm.c ****         /* Lock STOP mode: write PWR_STOP.FREEZE=0, UNLOCK=0x00, STOP=0, .TOKEN */
 425:Generated_Source\PSoC4/cyPm.c ****         CY_PM_PWR_STOP_REG &= (CY_PM_PWR_STOP_TOKEN_MASK | CY_PM_PWR_STOP_POLARITY);
 778              		.loc 2 425 0
 779 002a 074B     		ldr	r3, .L37
 780 002c 064A     		ldr	r2, .L37
 781 002e 1268     		ldr	r2, [r2]
 782 0030 0649     		ldr	r1, .L37+4
 783 0032 0A40     		ands	r2, r1
 784 0034 1A60     		str	r2, [r3]
 426:Generated_Source\PSoC4/cyPm.c **** 
 427:Generated_Source\PSoC4/cyPm.c ****         CyExitCriticalSection(interruptState);
 785              		.loc 2 427 0
 786 0036 FB1D     		adds	r3, r7, #7
 787 0038 1B78     		ldrb	r3, [r3]
 788 003a 1800     		movs	r0, r3
 789 003c FFF7FEFF 		bl	CyExitCriticalSection
 428:Generated_Source\PSoC4/cyPm.c ****     }
 790              		.loc 2 428 0
 791 0040 C046     		nop
 792 0042 BD46     		mov	sp, r7
 793 0044 03B0     		add	sp, sp, #12
 794              		@ sp needed
 795 0046 90BD     		pop	{r4, r7, pc}
 796              	.L38:
 797              		.align	2
 798              	.L37:
 799 0048 2C000B40 		.word	1074462764
 800 004c FF000100 		.word	65791
 801              		.cfi_endproc
 802              	.LFE9:
 803              		.size	CySysPmUnfreezeIo, .-CySysPmUnfreezeIo
 804              		.text
 805              	.Letext0:
 806              		.file 3 "Generated_Source\\PSoC4\\cytypes.h"
 807              		.section	.debug_info,"",%progbits
 808              	.Ldebug_info0:
ARM GAS  C:\Users\essele\AppData\Local\Temp\cczC3umF.s 			page 28


 809 0000 22020000 		.4byte	0x222
 810 0004 0400     		.2byte	0x4
 811 0006 00000000 		.4byte	.Ldebug_abbrev0
 812 000a 04       		.byte	0x4
 813 000b 01       		.uleb128 0x1
 814 000c F7000000 		.4byte	.LASF28
 815 0010 0C       		.byte	0xc
 816 0011 4F020000 		.4byte	.LASF29
 817 0015 8F000000 		.4byte	.LASF30
 818 0019 00000000 		.4byte	.Ldebug_ranges0+0
 819 001d 00000000 		.4byte	0
 820 0021 00000000 		.4byte	.Ldebug_line0
 821 0025 02       		.uleb128 0x2
 822 0026 01       		.byte	0x1
 823 0027 06       		.byte	0x6
 824 0028 79020000 		.4byte	.LASF0
 825 002c 02       		.uleb128 0x2
 826 002d 01       		.byte	0x1
 827 002e 08       		.byte	0x8
 828 002f 81000000 		.4byte	.LASF1
 829 0033 02       		.uleb128 0x2
 830 0034 02       		.byte	0x2
 831 0035 05       		.byte	0x5
 832 0036 2B020000 		.4byte	.LASF2
 833 003a 02       		.uleb128 0x2
 834 003b 02       		.byte	0x2
 835 003c 07       		.byte	0x7
 836 003d 39000000 		.4byte	.LASF3
 837 0041 02       		.uleb128 0x2
 838 0042 04       		.byte	0x4
 839 0043 05       		.byte	0x5
 840 0044 46020000 		.4byte	.LASF4
 841 0048 02       		.uleb128 0x2
 842 0049 04       		.byte	0x4
 843 004a 07       		.byte	0x7
 844 004b DF000000 		.4byte	.LASF5
 845 004f 02       		.uleb128 0x2
 846 0050 08       		.byte	0x8
 847 0051 05       		.byte	0x5
 848 0052 0B020000 		.4byte	.LASF6
 849 0056 02       		.uleb128 0x2
 850 0057 08       		.byte	0x8
 851 0058 07       		.byte	0x7
 852 0059 C5010000 		.4byte	.LASF7
 853 005d 03       		.uleb128 0x3
 854 005e 04       		.byte	0x4
 855 005f 05       		.byte	0x5
 856 0060 696E7400 		.ascii	"int\000"
 857 0064 02       		.uleb128 0x2
 858 0065 04       		.byte	0x4
 859 0066 07       		.byte	0x7
 860 0067 B8010000 		.4byte	.LASF8
 861 006b 04       		.uleb128 0x4
 862 006c F1000000 		.4byte	.LASF9
 863 0070 03       		.byte	0x3
 864 0071 E401     		.2byte	0x1e4
 865 0073 2C000000 		.4byte	0x2c
ARM GAS  C:\Users\essele\AppData\Local\Temp\cczC3umF.s 			page 29


 866 0077 04       		.uleb128 0x4
 867 0078 AA010000 		.4byte	.LASF10
 868 007c 03       		.byte	0x3
 869 007d E501     		.2byte	0x1e5
 870 007f 3A000000 		.4byte	0x3a
 871 0083 04       		.uleb128 0x4
 872 0084 B1010000 		.4byte	.LASF11
 873 0088 03       		.byte	0x3
 874 0089 E601     		.2byte	0x1e6
 875 008b 48000000 		.4byte	0x48
 876 008f 02       		.uleb128 0x2
 877 0090 04       		.byte	0x4
 878 0091 04       		.byte	0x4
 879 0092 7B000000 		.4byte	.LASF12
 880 0096 02       		.uleb128 0x2
 881 0097 08       		.byte	0x8
 882 0098 04       		.byte	0x4
 883 0099 91010000 		.4byte	.LASF13
 884 009d 02       		.uleb128 0x2
 885 009e 01       		.byte	0x1
 886 009f 08       		.byte	0x8
 887 00a0 19020000 		.4byte	.LASF14
 888 00a4 04       		.uleb128 0x4
 889 00a5 00000000 		.4byte	.LASF15
 890 00a9 03       		.byte	0x3
 891 00aa 8F02     		.2byte	0x28f
 892 00ac B0000000 		.4byte	0xb0
 893 00b0 05       		.uleb128 0x5
 894 00b1 77000000 		.4byte	0x77
 895 00b5 04       		.uleb128 0x4
 896 00b6 06000000 		.4byte	.LASF16
 897 00ba 03       		.byte	0x3
 898 00bb 9002     		.2byte	0x290
 899 00bd C1000000 		.4byte	0xc1
 900 00c1 05       		.uleb128 0x5
 901 00c2 83000000 		.4byte	0x83
 902 00c6 02       		.uleb128 0x2
 903 00c7 08       		.byte	0x8
 904 00c8 04       		.byte	0x4
 905 00c9 6D020000 		.4byte	.LASF17
 906 00cd 02       		.uleb128 0x2
 907 00ce 04       		.byte	0x4
 908 00cf 07       		.byte	0x7
 909 00d0 02020000 		.4byte	.LASF18
 910 00d4 06       		.uleb128 0x6
 911 00d5 5D000000 		.4byte	.LASF31
 912 00d9 01       		.byte	0x1
 913 00da E3       		.byte	0xe3
 914 00db 00000000 		.4byte	.LFB0
 915 00df DC000000 		.4byte	.LFE0-.LFB0
 916 00e3 01       		.uleb128 0x1
 917 00e4 9C       		.byte	0x9c
 918 00e5 07       		.uleb128 0x7
 919 00e6 25000000 		.4byte	.LASF19
 920 00ea 02       		.byte	0x2
 921 00eb 21       		.byte	0x21
 922 00ec 00000000 		.4byte	.LFB2
ARM GAS  C:\Users\essele\AppData\Local\Temp\cczC3umF.s 			page 30


 923 00f0 34000000 		.4byte	.LFE2-.LFB2
 924 00f4 01       		.uleb128 0x1
 925 00f5 9C       		.byte	0x9c
 926 00f6 09010000 		.4byte	0x109
 927 00fa 08       		.uleb128 0x8
 928 00fb D0000000 		.4byte	.LASF21
 929 00ff 02       		.byte	0x2
 930 0100 23       		.byte	0x23
 931 0101 6B000000 		.4byte	0x6b
 932 0105 02       		.uleb128 0x2
 933 0106 91       		.byte	0x91
 934 0107 6F       		.sleb128 -17
 935 0108 00       		.byte	0
 936 0109 07       		.uleb128 0x7
 937 010a 35020000 		.4byte	.LASF20
 938 010e 02       		.byte	0x2
 939 010f 40       		.byte	0x40
 940 0110 00000000 		.4byte	.LFB3
 941 0114 D8000000 		.4byte	.LFE3-.LFB3
 942 0118 01       		.uleb128 0x1
 943 0119 9C       		.byte	0x9c
 944 011a 49010000 		.4byte	0x149
 945 011e 08       		.uleb128 0x8
 946 011f D0000000 		.4byte	.LASF21
 947 0123 02       		.byte	0x2
 948 0124 42       		.byte	0x42
 949 0125 6B000000 		.4byte	0x6b
 950 0129 02       		.uleb128 0x2
 951 012a 91       		.byte	0x91
 952 012b 6B       		.sleb128 -21
 953 012c 08       		.uleb128 0x8
 954 012d 1E020000 		.4byte	.LASF22
 955 0131 02       		.byte	0x2
 956 0132 44       		.byte	0x44
 957 0133 C1000000 		.4byte	0xc1
 958 0137 02       		.uleb128 0x2
 959 0138 91       		.byte	0x91
 960 0139 64       		.sleb128 -28
 961 013a 08       		.uleb128 0x8
 962 013b 32000000 		.4byte	.LASF23
 963 013f 02       		.byte	0x2
 964 0140 4C       		.byte	0x4c
 965 0141 83000000 		.4byte	0x83
 966 0145 02       		.uleb128 0x2
 967 0146 91       		.byte	0x91
 968 0147 6C       		.sleb128 -20
 969 0148 00       		.byte	0
 970 0149 07       		.uleb128 0x7
 971 014a 4C000000 		.4byte	.LASF24
 972 014e 02       		.byte	0x2
 973 014f B8       		.byte	0xb8
 974 0150 00000000 		.4byte	.LFB4
 975 0154 70000000 		.4byte	.LFE4-.LFB4
 976 0158 01       		.uleb128 0x1
 977 0159 9C       		.byte	0x9c
 978 015a 6D010000 		.4byte	0x16d
 979 015e 08       		.uleb128 0x8
ARM GAS  C:\Users\essele\AppData\Local\Temp\cczC3umF.s 			page 31


 980 015f D0000000 		.4byte	.LASF21
 981 0163 02       		.byte	0x2
 982 0164 BA       		.byte	0xba
 983 0165 6B000000 		.4byte	0x6b
 984 0169 02       		.uleb128 0x2
 985 016a 91       		.byte	0x91
 986 016b 6F       		.sleb128 -17
 987 016c 00       		.byte	0
 988 016d 09       		.uleb128 0x9
 989 016e 85010000 		.4byte	.LASF32
 990 0172 02       		.byte	0x2
 991 0173 F3       		.byte	0xf3
 992 0174 00000000 		.4byte	.LFB5
 993 0178 3C000000 		.4byte	.LFE5-.LFB5
 994 017c 01       		.uleb128 0x1
 995 017d 9C       		.byte	0x9c
 996 017e 0A       		.uleb128 0xa
 997 017f 0C000000 		.4byte	.LASF25
 998 0183 02       		.byte	0x2
 999 0184 2001     		.2byte	0x120
 1000 0186 00000000 		.4byte	.LFB6
 1001 018a 50000000 		.4byte	.LFE6-.LFB6
 1002 018e 01       		.uleb128 0x1
 1003 018f 9C       		.byte	0x9c
 1004 0190 B3010000 		.4byte	0x1b3
 1005 0194 0B       		.uleb128 0xb
 1006 0195 E3010000 		.4byte	.LASF33
 1007 0199 02       		.byte	0x2
 1008 019a 2001     		.2byte	0x120
 1009 019c 83000000 		.4byte	0x83
 1010 01a0 02       		.uleb128 0x2
 1011 01a1 91       		.byte	0x91
 1012 01a2 64       		.sleb128 -28
 1013 01a3 0C       		.uleb128 0xc
 1014 01a4 D0000000 		.4byte	.LASF21
 1015 01a8 02       		.byte	0x2
 1016 01a9 2201     		.2byte	0x122
 1017 01ab 6B000000 		.4byte	0x6b
 1018 01af 02       		.uleb128 0x2
 1019 01b0 91       		.byte	0x91
 1020 01b1 6F       		.sleb128 -17
 1021 01b2 00       		.byte	0
 1022 01b3 0D       		.uleb128 0xd
 1023 01b4 EC010000 		.4byte	.LASF34
 1024 01b8 02       		.byte	0x2
 1025 01b9 3C01     		.2byte	0x13c
 1026 01bb 83000000 		.4byte	0x83
 1027 01bf 00000000 		.4byte	.LFB7
 1028 01c3 40000000 		.4byte	.LFE7-.LFB7
 1029 01c7 01       		.uleb128 0x1
 1030 01c8 9C       		.byte	0x9c
 1031 01c9 DD010000 		.4byte	0x1dd
 1032 01cd 0C       		.uleb128 0xc
 1033 01ce DC010000 		.4byte	.LASF26
 1034 01d2 02       		.byte	0x2
 1035 01d3 3E01     		.2byte	0x13e
 1036 01d5 83000000 		.4byte	0x83
ARM GAS  C:\Users\essele\AppData\Local\Temp\cczC3umF.s 			page 32


 1037 01d9 02       		.uleb128 0x2
 1038 01da 91       		.byte	0x91
 1039 01db 74       		.sleb128 -12
 1040 01dc 00       		.byte	0
 1041 01dd 0A       		.uleb128 0xa
 1042 01de 85020000 		.4byte	.LASF27
 1043 01e2 02       		.byte	0x2
 1044 01e3 6601     		.2byte	0x166
 1045 01e5 00000000 		.4byte	.LFB8
 1046 01e9 5C000000 		.4byte	.LFE8-.LFB8
 1047 01ed 01       		.uleb128 0x1
 1048 01ee 9C       		.byte	0x9c
 1049 01ef 03020000 		.4byte	0x203
 1050 01f3 0C       		.uleb128 0xc
 1051 01f4 D0000000 		.4byte	.LASF21
 1052 01f8 02       		.byte	0x2
 1053 01f9 6801     		.2byte	0x168
 1054 01fb 6B000000 		.4byte	0x6b
 1055 01ff 02       		.uleb128 0x2
 1056 0200 91       		.byte	0x91
 1057 0201 6F       		.sleb128 -17
 1058 0202 00       		.byte	0
 1059 0203 0E       		.uleb128 0xe
 1060 0204 98010000 		.4byte	.LASF35
 1061 0208 02       		.byte	0x2
 1062 0209 9601     		.2byte	0x196
 1063 020b 00000000 		.4byte	.LFB9
 1064 020f 50000000 		.4byte	.LFE9-.LFB9
 1065 0213 01       		.uleb128 0x1
 1066 0214 9C       		.byte	0x9c
 1067 0215 0C       		.uleb128 0xc
 1068 0216 D0000000 		.4byte	.LASF21
 1069 021a 02       		.byte	0x2
 1070 021b 9801     		.2byte	0x198
 1071 021d 6B000000 		.4byte	0x6b
 1072 0221 02       		.uleb128 0x2
 1073 0222 91       		.byte	0x91
 1074 0223 6F       		.sleb128 -17
 1075 0224 00       		.byte	0
 1076 0225 00       		.byte	0
 1077              		.section	.debug_abbrev,"",%progbits
 1078              	.Ldebug_abbrev0:
 1079 0000 01       		.uleb128 0x1
 1080 0001 11       		.uleb128 0x11
 1081 0002 01       		.byte	0x1
 1082 0003 25       		.uleb128 0x25
 1083 0004 0E       		.uleb128 0xe
 1084 0005 13       		.uleb128 0x13
 1085 0006 0B       		.uleb128 0xb
 1086 0007 03       		.uleb128 0x3
 1087 0008 0E       		.uleb128 0xe
 1088 0009 1B       		.uleb128 0x1b
 1089 000a 0E       		.uleb128 0xe
 1090 000b 55       		.uleb128 0x55
 1091 000c 17       		.uleb128 0x17
 1092 000d 11       		.uleb128 0x11
 1093 000e 01       		.uleb128 0x1
ARM GAS  C:\Users\essele\AppData\Local\Temp\cczC3umF.s 			page 33


 1094 000f 10       		.uleb128 0x10
 1095 0010 17       		.uleb128 0x17
 1096 0011 00       		.byte	0
 1097 0012 00       		.byte	0
 1098 0013 02       		.uleb128 0x2
 1099 0014 24       		.uleb128 0x24
 1100 0015 00       		.byte	0
 1101 0016 0B       		.uleb128 0xb
 1102 0017 0B       		.uleb128 0xb
 1103 0018 3E       		.uleb128 0x3e
 1104 0019 0B       		.uleb128 0xb
 1105 001a 03       		.uleb128 0x3
 1106 001b 0E       		.uleb128 0xe
 1107 001c 00       		.byte	0
 1108 001d 00       		.byte	0
 1109 001e 03       		.uleb128 0x3
 1110 001f 24       		.uleb128 0x24
 1111 0020 00       		.byte	0
 1112 0021 0B       		.uleb128 0xb
 1113 0022 0B       		.uleb128 0xb
 1114 0023 3E       		.uleb128 0x3e
 1115 0024 0B       		.uleb128 0xb
 1116 0025 03       		.uleb128 0x3
 1117 0026 08       		.uleb128 0x8
 1118 0027 00       		.byte	0
 1119 0028 00       		.byte	0
 1120 0029 04       		.uleb128 0x4
 1121 002a 16       		.uleb128 0x16
 1122 002b 00       		.byte	0
 1123 002c 03       		.uleb128 0x3
 1124 002d 0E       		.uleb128 0xe
 1125 002e 3A       		.uleb128 0x3a
 1126 002f 0B       		.uleb128 0xb
 1127 0030 3B       		.uleb128 0x3b
 1128 0031 05       		.uleb128 0x5
 1129 0032 49       		.uleb128 0x49
 1130 0033 13       		.uleb128 0x13
 1131 0034 00       		.byte	0
 1132 0035 00       		.byte	0
 1133 0036 05       		.uleb128 0x5
 1134 0037 35       		.uleb128 0x35
 1135 0038 00       		.byte	0
 1136 0039 49       		.uleb128 0x49
 1137 003a 13       		.uleb128 0x13
 1138 003b 00       		.byte	0
 1139 003c 00       		.byte	0
 1140 003d 06       		.uleb128 0x6
 1141 003e 2E       		.uleb128 0x2e
 1142 003f 00       		.byte	0
 1143 0040 03       		.uleb128 0x3
 1144 0041 0E       		.uleb128 0xe
 1145 0042 3A       		.uleb128 0x3a
 1146 0043 0B       		.uleb128 0xb
 1147 0044 3B       		.uleb128 0x3b
 1148 0045 0B       		.uleb128 0xb
 1149 0046 27       		.uleb128 0x27
 1150 0047 19       		.uleb128 0x19
ARM GAS  C:\Users\essele\AppData\Local\Temp\cczC3umF.s 			page 34


 1151 0048 11       		.uleb128 0x11
 1152 0049 01       		.uleb128 0x1
 1153 004a 12       		.uleb128 0x12
 1154 004b 06       		.uleb128 0x6
 1155 004c 40       		.uleb128 0x40
 1156 004d 18       		.uleb128 0x18
 1157 004e 9742     		.uleb128 0x2117
 1158 0050 19       		.uleb128 0x19
 1159 0051 00       		.byte	0
 1160 0052 00       		.byte	0
 1161 0053 07       		.uleb128 0x7
 1162 0054 2E       		.uleb128 0x2e
 1163 0055 01       		.byte	0x1
 1164 0056 3F       		.uleb128 0x3f
 1165 0057 19       		.uleb128 0x19
 1166 0058 03       		.uleb128 0x3
 1167 0059 0E       		.uleb128 0xe
 1168 005a 3A       		.uleb128 0x3a
 1169 005b 0B       		.uleb128 0xb
 1170 005c 3B       		.uleb128 0x3b
 1171 005d 0B       		.uleb128 0xb
 1172 005e 27       		.uleb128 0x27
 1173 005f 19       		.uleb128 0x19
 1174 0060 11       		.uleb128 0x11
 1175 0061 01       		.uleb128 0x1
 1176 0062 12       		.uleb128 0x12
 1177 0063 06       		.uleb128 0x6
 1178 0064 40       		.uleb128 0x40
 1179 0065 18       		.uleb128 0x18
 1180 0066 9642     		.uleb128 0x2116
 1181 0068 19       		.uleb128 0x19
 1182 0069 01       		.uleb128 0x1
 1183 006a 13       		.uleb128 0x13
 1184 006b 00       		.byte	0
 1185 006c 00       		.byte	0
 1186 006d 08       		.uleb128 0x8
 1187 006e 34       		.uleb128 0x34
 1188 006f 00       		.byte	0
 1189 0070 03       		.uleb128 0x3
 1190 0071 0E       		.uleb128 0xe
 1191 0072 3A       		.uleb128 0x3a
 1192 0073 0B       		.uleb128 0xb
 1193 0074 3B       		.uleb128 0x3b
 1194 0075 0B       		.uleb128 0xb
 1195 0076 49       		.uleb128 0x49
 1196 0077 13       		.uleb128 0x13
 1197 0078 02       		.uleb128 0x2
 1198 0079 18       		.uleb128 0x18
 1199 007a 00       		.byte	0
 1200 007b 00       		.byte	0
 1201 007c 09       		.uleb128 0x9
 1202 007d 2E       		.uleb128 0x2e
 1203 007e 00       		.byte	0
 1204 007f 3F       		.uleb128 0x3f
 1205 0080 19       		.uleb128 0x19
 1206 0081 03       		.uleb128 0x3
 1207 0082 0E       		.uleb128 0xe
ARM GAS  C:\Users\essele\AppData\Local\Temp\cczC3umF.s 			page 35


 1208 0083 3A       		.uleb128 0x3a
 1209 0084 0B       		.uleb128 0xb
 1210 0085 3B       		.uleb128 0x3b
 1211 0086 0B       		.uleb128 0xb
 1212 0087 27       		.uleb128 0x27
 1213 0088 19       		.uleb128 0x19
 1214 0089 11       		.uleb128 0x11
 1215 008a 01       		.uleb128 0x1
 1216 008b 12       		.uleb128 0x12
 1217 008c 06       		.uleb128 0x6
 1218 008d 40       		.uleb128 0x40
 1219 008e 18       		.uleb128 0x18
 1220 008f 9642     		.uleb128 0x2116
 1221 0091 19       		.uleb128 0x19
 1222 0092 00       		.byte	0
 1223 0093 00       		.byte	0
 1224 0094 0A       		.uleb128 0xa
 1225 0095 2E       		.uleb128 0x2e
 1226 0096 01       		.byte	0x1
 1227 0097 3F       		.uleb128 0x3f
 1228 0098 19       		.uleb128 0x19
 1229 0099 03       		.uleb128 0x3
 1230 009a 0E       		.uleb128 0xe
 1231 009b 3A       		.uleb128 0x3a
 1232 009c 0B       		.uleb128 0xb
 1233 009d 3B       		.uleb128 0x3b
 1234 009e 05       		.uleb128 0x5
 1235 009f 27       		.uleb128 0x27
 1236 00a0 19       		.uleb128 0x19
 1237 00a1 11       		.uleb128 0x11
 1238 00a2 01       		.uleb128 0x1
 1239 00a3 12       		.uleb128 0x12
 1240 00a4 06       		.uleb128 0x6
 1241 00a5 40       		.uleb128 0x40
 1242 00a6 18       		.uleb128 0x18
 1243 00a7 9642     		.uleb128 0x2116
 1244 00a9 19       		.uleb128 0x19
 1245 00aa 01       		.uleb128 0x1
 1246 00ab 13       		.uleb128 0x13
 1247 00ac 00       		.byte	0
 1248 00ad 00       		.byte	0
 1249 00ae 0B       		.uleb128 0xb
 1250 00af 05       		.uleb128 0x5
 1251 00b0 00       		.byte	0
 1252 00b1 03       		.uleb128 0x3
 1253 00b2 0E       		.uleb128 0xe
 1254 00b3 3A       		.uleb128 0x3a
 1255 00b4 0B       		.uleb128 0xb
 1256 00b5 3B       		.uleb128 0x3b
 1257 00b6 05       		.uleb128 0x5
 1258 00b7 49       		.uleb128 0x49
 1259 00b8 13       		.uleb128 0x13
 1260 00b9 02       		.uleb128 0x2
 1261 00ba 18       		.uleb128 0x18
 1262 00bb 00       		.byte	0
 1263 00bc 00       		.byte	0
 1264 00bd 0C       		.uleb128 0xc
ARM GAS  C:\Users\essele\AppData\Local\Temp\cczC3umF.s 			page 36


 1265 00be 34       		.uleb128 0x34
 1266 00bf 00       		.byte	0
 1267 00c0 03       		.uleb128 0x3
 1268 00c1 0E       		.uleb128 0xe
 1269 00c2 3A       		.uleb128 0x3a
 1270 00c3 0B       		.uleb128 0xb
 1271 00c4 3B       		.uleb128 0x3b
 1272 00c5 05       		.uleb128 0x5
 1273 00c6 49       		.uleb128 0x49
 1274 00c7 13       		.uleb128 0x13
 1275 00c8 02       		.uleb128 0x2
 1276 00c9 18       		.uleb128 0x18
 1277 00ca 00       		.byte	0
 1278 00cb 00       		.byte	0
 1279 00cc 0D       		.uleb128 0xd
 1280 00cd 2E       		.uleb128 0x2e
 1281 00ce 01       		.byte	0x1
 1282 00cf 3F       		.uleb128 0x3f
 1283 00d0 19       		.uleb128 0x19
 1284 00d1 03       		.uleb128 0x3
 1285 00d2 0E       		.uleb128 0xe
 1286 00d3 3A       		.uleb128 0x3a
 1287 00d4 0B       		.uleb128 0xb
 1288 00d5 3B       		.uleb128 0x3b
 1289 00d6 05       		.uleb128 0x5
 1290 00d7 27       		.uleb128 0x27
 1291 00d8 19       		.uleb128 0x19
 1292 00d9 49       		.uleb128 0x49
 1293 00da 13       		.uleb128 0x13
 1294 00db 11       		.uleb128 0x11
 1295 00dc 01       		.uleb128 0x1
 1296 00dd 12       		.uleb128 0x12
 1297 00de 06       		.uleb128 0x6
 1298 00df 40       		.uleb128 0x40
 1299 00e0 18       		.uleb128 0x18
 1300 00e1 9742     		.uleb128 0x2117
 1301 00e3 19       		.uleb128 0x19
 1302 00e4 01       		.uleb128 0x1
 1303 00e5 13       		.uleb128 0x13
 1304 00e6 00       		.byte	0
 1305 00e7 00       		.byte	0
 1306 00e8 0E       		.uleb128 0xe
 1307 00e9 2E       		.uleb128 0x2e
 1308 00ea 01       		.byte	0x1
 1309 00eb 3F       		.uleb128 0x3f
 1310 00ec 19       		.uleb128 0x19
 1311 00ed 03       		.uleb128 0x3
 1312 00ee 0E       		.uleb128 0xe
 1313 00ef 3A       		.uleb128 0x3a
 1314 00f0 0B       		.uleb128 0xb
 1315 00f1 3B       		.uleb128 0x3b
 1316 00f2 05       		.uleb128 0x5
 1317 00f3 27       		.uleb128 0x27
 1318 00f4 19       		.uleb128 0x19
 1319 00f5 11       		.uleb128 0x11
 1320 00f6 01       		.uleb128 0x1
 1321 00f7 12       		.uleb128 0x12
ARM GAS  C:\Users\essele\AppData\Local\Temp\cczC3umF.s 			page 37


 1322 00f8 06       		.uleb128 0x6
 1323 00f9 40       		.uleb128 0x40
 1324 00fa 18       		.uleb128 0x18
 1325 00fb 9642     		.uleb128 0x2116
 1326 00fd 19       		.uleb128 0x19
 1327 00fe 00       		.byte	0
 1328 00ff 00       		.byte	0
 1329 0100 00       		.byte	0
 1330              		.section	.debug_aranges,"",%progbits
 1331 0000 5C000000 		.4byte	0x5c
 1332 0004 0200     		.2byte	0x2
 1333 0006 00000000 		.4byte	.Ldebug_info0
 1334 000a 04       		.byte	0x4
 1335 000b 00       		.byte	0
 1336 000c 0000     		.2byte	0
 1337 000e 0000     		.2byte	0
 1338 0010 00000000 		.4byte	.LFB0
 1339 0014 DC000000 		.4byte	.LFE0-.LFB0
 1340 0018 00000000 		.4byte	.LFB2
 1341 001c 34000000 		.4byte	.LFE2-.LFB2
 1342 0020 00000000 		.4byte	.LFB3
 1343 0024 D8000000 		.4byte	.LFE3-.LFB3
 1344 0028 00000000 		.4byte	.LFB4
 1345 002c 70000000 		.4byte	.LFE4-.LFB4
 1346 0030 00000000 		.4byte	.LFB5
 1347 0034 3C000000 		.4byte	.LFE5-.LFB5
 1348 0038 00000000 		.4byte	.LFB6
 1349 003c 50000000 		.4byte	.LFE6-.LFB6
 1350 0040 00000000 		.4byte	.LFB7
 1351 0044 40000000 		.4byte	.LFE7-.LFB7
 1352 0048 00000000 		.4byte	.LFB8
 1353 004c 5C000000 		.4byte	.LFE8-.LFB8
 1354 0050 00000000 		.4byte	.LFB9
 1355 0054 50000000 		.4byte	.LFE9-.LFB9
 1356 0058 00000000 		.4byte	0
 1357 005c 00000000 		.4byte	0
 1358              		.section	.debug_ranges,"",%progbits
 1359              	.Ldebug_ranges0:
 1360 0000 00000000 		.4byte	.LFB0
 1361 0004 DC000000 		.4byte	.LFE0
 1362 0008 00000000 		.4byte	.LFB2
 1363 000c 34000000 		.4byte	.LFE2
 1364 0010 00000000 		.4byte	.LFB3
 1365 0014 D8000000 		.4byte	.LFE3
 1366 0018 00000000 		.4byte	.LFB4
 1367 001c 70000000 		.4byte	.LFE4
 1368 0020 00000000 		.4byte	.LFB5
 1369 0024 3C000000 		.4byte	.LFE5
 1370 0028 00000000 		.4byte	.LFB6
 1371 002c 50000000 		.4byte	.LFE6
 1372 0030 00000000 		.4byte	.LFB7
 1373 0034 40000000 		.4byte	.LFE7
 1374 0038 00000000 		.4byte	.LFB8
 1375 003c 5C000000 		.4byte	.LFE8
 1376 0040 00000000 		.4byte	.LFB9
 1377 0044 50000000 		.4byte	.LFE9
 1378 0048 00000000 		.4byte	0
ARM GAS  C:\Users\essele\AppData\Local\Temp\cczC3umF.s 			page 38


 1379 004c 00000000 		.4byte	0
 1380              		.section	.debug_line,"",%progbits
 1381              	.Ldebug_line0:
 1382 0000 69010000 		.section	.debug_str,"MS",%progbits,1
 1382      02004B00 
 1382      00000201 
 1382      FB0E0D00 
 1382      01010101 
 1383              	.LASF15:
 1384 0000 72656731 		.ascii	"reg16\000"
 1384      3600
 1385              	.LASF16:
 1386 0006 72656733 		.ascii	"reg32\000"
 1386      3200
 1387              	.LASF25:
 1388 000c 43795379 		.ascii	"CySysPmSetWakeupPolarity\000"
 1388      73506D53 
 1388      65745761 
 1388      6B657570 
 1388      506F6C61 
 1389              	.LASF19:
 1390 0025 43795379 		.ascii	"CySysPmSleep\000"
 1390      73506D53 
 1390      6C656570 
 1390      00
 1391              	.LASF23:
 1392 0032 72656754 		.ascii	"regTmp\000"
 1392      6D7000
 1393              	.LASF3:
 1394 0039 73686F72 		.ascii	"short unsigned int\000"
 1394      7420756E 
 1394      7369676E 
 1394      65642069 
 1394      6E7400
 1395              	.LASF24:
 1396 004c 43795379 		.ascii	"CySysPmHibernate\000"
 1396      73506D48 
 1396      69626572 
 1396      6E617465 
 1396      00
 1397              	.LASF31:
 1398 005d 43795379 		.ascii	"CySysPmHibPinsDisableInputBuf\000"
 1398      73506D48 
 1398      69625069 
 1398      6E734469 
 1398      7361626C 
 1399              	.LASF12:
 1400 007b 666C6F61 		.ascii	"float\000"
 1400      7400
 1401              	.LASF1:
 1402 0081 756E7369 		.ascii	"unsigned char\000"
 1402      676E6564 
 1402      20636861 
 1402      7200
 1403              	.LASF30:
 1404 008f 5C5C4D61 		.ascii	"\\\\Mac\\Home\\Documents\\dev\\yaugi\\GPIB USB Adap"
 1404      635C486F 
ARM GAS  C:\Users\essele\AppData\Local\Temp\cczC3umF.s 			page 39


 1404      6D655C44 
 1404      6F63756D 
 1404      656E7473 
 1405 00bb 7465725C 		.ascii	"ter\\GPIB USB 1.cydsn\000"
 1405      47504942 
 1405      20555342 
 1405      20312E63 
 1405      7964736E 
 1406              	.LASF21:
 1407 00d0 696E7465 		.ascii	"interruptState\000"
 1407      72727570 
 1407      74537461 
 1407      746500
 1408              	.LASF5:
 1409 00df 6C6F6E67 		.ascii	"long unsigned int\000"
 1409      20756E73 
 1409      69676E65 
 1409      6420696E 
 1409      7400
 1410              	.LASF9:
 1411 00f1 75696E74 		.ascii	"uint8\000"
 1411      3800
 1412              	.LASF28:
 1413 00f7 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 1413      43313120 
 1413      352E342E 
 1413      31203230 
 1413      31363036 
 1414 012a 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m0 -mthumb -g -O"
 1414      20726576 
 1414      6973696F 
 1414      6E203233 
 1414      37373135 
 1415 015d 30202D66 		.ascii	"0 -ffunction-sections -ffat-lto-objects\000"
 1415      66756E63 
 1415      74696F6E 
 1415      2D736563 
 1415      74696F6E 
 1416              	.LASF32:
 1417 0185 43795379 		.ascii	"CySysPmStop\000"
 1417      73506D53 
 1417      746F7000 
 1418              	.LASF13:
 1419 0191 646F7562 		.ascii	"double\000"
 1419      6C6500
 1420              	.LASF35:
 1421 0198 43795379 		.ascii	"CySysPmUnfreezeIo\000"
 1421      73506D55 
 1421      6E667265 
 1421      657A6549 
 1421      6F00
 1422              	.LASF10:
 1423 01aa 75696E74 		.ascii	"uint16\000"
 1423      313600
 1424              	.LASF11:
 1425 01b1 75696E74 		.ascii	"uint32\000"
 1425      333200
ARM GAS  C:\Users\essele\AppData\Local\Temp\cczC3umF.s 			page 40


 1426              	.LASF8:
 1427 01b8 756E7369 		.ascii	"unsigned int\000"
 1427      676E6564 
 1427      20696E74 
 1427      00
 1428              	.LASF7:
 1429 01c5 6C6F6E67 		.ascii	"long long unsigned int\000"
 1429      206C6F6E 
 1429      6720756E 
 1429      7369676E 
 1429      65642069 
 1430              	.LASF26:
 1431 01dc 72656173 		.ascii	"reason\000"
 1431      6F6E00
 1432              	.LASF33:
 1433 01e3 706F6C61 		.ascii	"polarity\000"
 1433      72697479 
 1433      00
 1434              	.LASF34:
 1435 01ec 43795379 		.ascii	"CySysPmGetResetReason\000"
 1435      73506D47 
 1435      65745265 
 1435      73657452 
 1435      6561736F 
 1436              	.LASF18:
 1437 0202 73697A65 		.ascii	"sizetype\000"
 1437      74797065 
 1437      00
 1438              	.LASF6:
 1439 020b 6C6F6E67 		.ascii	"long long int\000"
 1439      206C6F6E 
 1439      6720696E 
 1439      7400
 1440              	.LASF14:
 1441 0219 63686172 		.ascii	"char\000"
 1441      00
 1442              	.LASF22:
 1443 021e 636C6B53 		.ascii	"clkSelectReg\000"
 1443      656C6563 
 1443      74526567 
 1443      00
 1444              	.LASF2:
 1445 022b 73686F72 		.ascii	"short int\000"
 1445      7420696E 
 1445      7400
 1446              	.LASF20:
 1447 0235 43795379 		.ascii	"CySysPmDeepSleep\000"
 1447      73506D44 
 1447      65657053 
 1447      6C656570 
 1447      00
 1448              	.LASF4:
 1449 0246 6C6F6E67 		.ascii	"long int\000"
 1449      20696E74 
 1449      00
 1450              	.LASF29:
 1451 024f 47656E65 		.ascii	"Generated_Source\\PSoC4\\cyPm.c\000"
ARM GAS  C:\Users\essele\AppData\Local\Temp\cczC3umF.s 			page 41


 1451      72617465 
 1451      645F536F 
 1451      75726365 
 1451      5C50536F 
 1452              	.LASF17:
 1453 026d 6C6F6E67 		.ascii	"long double\000"
 1453      20646F75 
 1453      626C6500 
 1454              	.LASF0:
 1455 0279 7369676E 		.ascii	"signed char\000"
 1455      65642063 
 1455      68617200 
 1456              	.LASF27:
 1457 0285 43795379 		.ascii	"CySysPmFreezeIo\000"
 1457      73506D46 
 1457      7265657A 
 1457      65496F00 
 1458              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
