ARM GAS  C:\Users\essele\AppData\Local\Temp\ccJaopFK.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m0
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 0
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"CyFlash.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.CySysFlashWriteRow,"ax",%progbits
  20              		.align	2
  21              		.global	CySysFlashWriteRow
  22              		.code	16
  23              		.thumb_func
  24              		.type	CySysFlashWriteRow, %function
  25              	CySysFlashWriteRow:
  26              	.LFB1:
  27              		.file 1 "Generated_Source\\PSoC4\\CyFlash.c"
   1:Generated_Source\PSoC4/CyFlash.c **** /***************************************************************************//**
   2:Generated_Source\PSoC4/CyFlash.c **** * \file CyFlash.c
   3:Generated_Source\PSoC4/CyFlash.c **** * \version 5.80
   4:Generated_Source\PSoC4/CyFlash.c **** *
   5:Generated_Source\PSoC4/CyFlash.c **** * \brief Provides an API for the FLASH.
   6:Generated_Source\PSoC4/CyFlash.c **** *
   7:Generated_Source\PSoC4/CyFlash.c **** * \note This code is endian agnostic.
   8:Generated_Source\PSoC4/CyFlash.c **** *
   9:Generated_Source\PSoC4/CyFlash.c **** * \note Documentation of the API's in this file is located in the System
  10:Generated_Source\PSoC4/CyFlash.c **** * Reference Guide provided with PSoC Creator.
  11:Generated_Source\PSoC4/CyFlash.c **** *
  12:Generated_Source\PSoC4/CyFlash.c **** ********************************************************************************
  13:Generated_Source\PSoC4/CyFlash.c **** * \copyright
  14:Generated_Source\PSoC4/CyFlash.c **** * Copyright 2010-2018, Cypress Semiconductor Corporation.  All rights reserved.
  15:Generated_Source\PSoC4/CyFlash.c **** * You may use this file only in accordance with the license, terms, conditions,
  16:Generated_Source\PSoC4/CyFlash.c **** * disclaimers, and limitations in the end user license agreement accompanying
  17:Generated_Source\PSoC4/CyFlash.c **** * the software package with which this file was provided.
  18:Generated_Source\PSoC4/CyFlash.c **** *******************************************************************************/
  19:Generated_Source\PSoC4/CyFlash.c **** 
  20:Generated_Source\PSoC4/CyFlash.c **** #include "CyFlash.h"
  21:Generated_Source\PSoC4/CyFlash.c **** 
  22:Generated_Source\PSoC4/CyFlash.c **** 
  23:Generated_Source\PSoC4/CyFlash.c **** /*******************************************************************************
  24:Generated_Source\PSoC4/CyFlash.c **** * Cypress identified a defect with the Flash write functionality of the
  25:Generated_Source\PSoC4/CyFlash.c **** * PSoC 4000, PSoC 4000U, PSoC 4100, and PSoC 4200 devices. The 
  26:Generated_Source\PSoC4/CyFlash.c **** * CySysFlashWriteRow() function now checks the data to be written and, if 
  27:Generated_Source\PSoC4/CyFlash.c **** * necessary, modifies it to have a non-zero checksum. After writing to Flash, 
  28:Generated_Source\PSoC4/CyFlash.c **** * the modified data is replaced (Flash program) with 
  29:Generated_Source\PSoC4/CyFlash.c **** * the correct (original) data.
  30:Generated_Source\PSoC4/CyFlash.c **** *******************************************************************************/
ARM GAS  C:\Users\essele\AppData\Local\Temp\ccJaopFK.s 			page 2


  31:Generated_Source\PSoC4/CyFlash.c **** #define CY_FLASH_CHECKSUM_WORKAROUND    (CY_PSOC4_4000 || CY_PSOC4_4100 || CY_PSOC4_4200 || CY_PSOC
  32:Generated_Source\PSoC4/CyFlash.c **** 
  33:Generated_Source\PSoC4/CyFlash.c **** #if (CY_IP_FM || ((!CY_PSOC4_4000) && CY_IP_SPCIF_SYNCHRONOUS) || (!CY_IP_FM) && CY_PSOC4_4000)
  34:Generated_Source\PSoC4/CyFlash.c ****     static CY_SYS_FLASH_CLOCK_BACKUP_STRUCT cySysFlashBackup;
  35:Generated_Source\PSoC4/CyFlash.c **** #endif /* (CY_IP_FM || ((!CY_PSOC4_4000) && CY_IP_SPCIF_SYNCHRONOUS) || (!CY_IP_FM) && CY_PSOC4_400
  36:Generated_Source\PSoC4/CyFlash.c **** 
  37:Generated_Source\PSoC4/CyFlash.c **** static cystatus CySysFlashClockBackup(void);
  38:Generated_Source\PSoC4/CyFlash.c **** static cystatus CySysFlashClockRestore(void);
  39:Generated_Source\PSoC4/CyFlash.c **** #if(CY_IP_SPCIF_SYNCHRONOUS)
  40:Generated_Source\PSoC4/CyFlash.c ****     static cystatus CySysFlashClockConfig(void);
  41:Generated_Source\PSoC4/CyFlash.c **** #endif  /* (CY_IP_SPCIF_SYNCHRONOUS) */
  42:Generated_Source\PSoC4/CyFlash.c **** 
  43:Generated_Source\PSoC4/CyFlash.c **** 
  44:Generated_Source\PSoC4/CyFlash.c **** /*******************************************************************************
  45:Generated_Source\PSoC4/CyFlash.c **** * Function Name: CySysFlashWriteRow
  46:Generated_Source\PSoC4/CyFlash.c **** ****************************************************************************//**
  47:Generated_Source\PSoC4/CyFlash.c **** *
  48:Generated_Source\PSoC4/CyFlash.c **** * Erases a row of Flash and programs it with the new data.
  49:Generated_Source\PSoC4/CyFlash.c **** *
  50:Generated_Source\PSoC4/CyFlash.c **** * The IMO must be enabled before calling this function. The operation of the
  51:Generated_Source\PSoC4/CyFlash.c **** * flash writing hardware is dependent on the IMO.
  52:Generated_Source\PSoC4/CyFlash.c **** *
  53:Generated_Source\PSoC4/CyFlash.c **** * For PSoC 4000, PSoC 4100 BLE and PSoC 4200 BLE devices (PSoC 4100 BLE and
  54:Generated_Source\PSoC4/CyFlash.c **** * PSoC 4200 BLE devices with 256K of Flash memory are not affected), this API
  55:Generated_Source\PSoC4/CyFlash.c **** * will automatically modify the clock settings for the device. Writing to
  56:Generated_Source\PSoC4/CyFlash.c **** * flash requires that changes be made to the IMO and HFCLK settings. The
  57:Generated_Source\PSoC4/CyFlash.c **** * configuration is restored before returning. This will impact the operation
  58:Generated_Source\PSoC4/CyFlash.c **** * of most of the hardware in the device.
  59:Generated_Source\PSoC4/CyFlash.c **** *
  60:Generated_Source\PSoC4/CyFlash.c **** * For PSoC 4000 devices this API will automatically modify the clock settings
  61:Generated_Source\PSoC4/CyFlash.c **** * for the device. Writing to flash requires that changes be made to the IMO
  62:Generated_Source\PSoC4/CyFlash.c **** * and HFCLK settings. The configuration is restored before returning. HFCLK
  63:Generated_Source\PSoC4/CyFlash.c **** * will have several frequency changes during the operation of this API between
  64:Generated_Source\PSoC4/CyFlash.c **** * a minimum frequency of the current IMO frequency divided by 8 and a maximum
  65:Generated_Source\PSoC4/CyFlash.c **** * frequency of 12 MHz. This will impact the operation of most of the hardware
  66:Generated_Source\PSoC4/CyFlash.c **** * in the device.
  67:Generated_Source\PSoC4/CyFlash.c **** *
  68:Generated_Source\PSoC4/CyFlash.c **** * \param rowNum The flash row number. The number of the flash rows is defined by
  69:Generated_Source\PSoC4/CyFlash.c **** * the \ref CY_FLASH_NUMBER_ROWS macro for the selected device. Refer to the
  70:Generated_Source\PSoC4/CyFlash.c **** * device datasheet for the details.
  71:Generated_Source\PSoC4/CyFlash.c **** * \note The target flash array is calculated based on the specified flash row.
  72:Generated_Source\PSoC4/CyFlash.c **** *
  73:Generated_Source\PSoC4/CyFlash.c **** * \param rowData Array of bytes to write. The size of the array must be equal to
  74:Generated_Source\PSoC4/CyFlash.c **** * the flash row size. The flash row size for the selected device is defined by
  75:Generated_Source\PSoC4/CyFlash.c **** * the \ref CY_FLASH_SIZEOF_ROW macro. Refer to the device datasheet for the
  76:Generated_Source\PSoC4/CyFlash.c **** * details.
  77:Generated_Source\PSoC4/CyFlash.c **** *
  78:Generated_Source\PSoC4/CyFlash.c **** * \return \ref group_flash_status_codes
  79:Generated_Source\PSoC4/CyFlash.c **** *
  80:Generated_Source\PSoC4/CyFlash.c **** *******************************************************************************/
  81:Generated_Source\PSoC4/CyFlash.c **** uint32 CySysFlashWriteRow(uint32 rowNum, const uint8 rowData[])
  82:Generated_Source\PSoC4/CyFlash.c **** {
  28              		.loc 1 82 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 288
  31              		@ frame_needed = 1, uses_anonymous_args = 0
  32 0000 90B5     		push	{r4, r7, lr}
ARM GAS  C:\Users\essele\AppData\Local\Temp\ccJaopFK.s 			page 3


  33              		.cfi_def_cfa_offset 12
  34              		.cfi_offset 4, -12
  35              		.cfi_offset 7, -8
  36              		.cfi_offset 14, -4
  37 0002 C9B0     		sub	sp, sp, #292
  38              		.cfi_def_cfa_offset 304
  39 0004 00AF     		add	r7, sp, #0
  40              		.cfi_def_cfa_register 7
  41 0006 7860     		str	r0, [r7, #4]
  42 0008 3960     		str	r1, [r7]
  83:Generated_Source\PSoC4/CyFlash.c ****     volatile uint32 retValue = CY_SYS_FLASH_SUCCESS;
  43              		.loc 1 83 0
  44 000a 0023     		movs	r3, #0
  45 000c 8C22     		movs	r2, #140
  46 000e 5200     		lsls	r2, r2, #1
  47 0010 BA18     		adds	r2, r7, r2
  48 0012 1360     		str	r3, [r2]
  84:Generated_Source\PSoC4/CyFlash.c ****     volatile uint32 clkCnfRetValue = CY_SYS_FLASH_SUCCESS;
  49              		.loc 1 84 0
  50 0014 0023     		movs	r3, #0
  51 0016 8A22     		movs	r2, #138
  52 0018 5200     		lsls	r2, r2, #1
  53 001a BA18     		adds	r2, r7, r2
  54 001c 1360     		str	r3, [r2]
  85:Generated_Source\PSoC4/CyFlash.c ****     volatile uint32 parameters[(CY_FLASH_SIZEOF_ROW + CY_FLASH_SRAM_ROM_DATA) / sizeof(uint32)];
  86:Generated_Source\PSoC4/CyFlash.c ****     uint8  interruptState;
  87:Generated_Source\PSoC4/CyFlash.c **** 
  88:Generated_Source\PSoC4/CyFlash.c ****     #if (CY_FLASH_CHECKSUM_WORKAROUND)
  89:Generated_Source\PSoC4/CyFlash.c ****         uint32 needChecksumWorkaround = 0u;
  90:Generated_Source\PSoC4/CyFlash.c ****         uint32 savedIndex = 0u;
  91:Generated_Source\PSoC4/CyFlash.c ****         uint32 savedValue = 0u;
  92:Generated_Source\PSoC4/CyFlash.c ****         uint32 checksum = 0u;
  93:Generated_Source\PSoC4/CyFlash.c ****         uint32 bits = 0u;
  94:Generated_Source\PSoC4/CyFlash.c ****         uint32 i;
  95:Generated_Source\PSoC4/CyFlash.c ****     #endif  /* (CY_FLASH_CHECKSUM_WORKAROUND) */
  96:Generated_Source\PSoC4/CyFlash.c **** 
  97:Generated_Source\PSoC4/CyFlash.c ****     if ((rowNum < CY_FLASH_NUMBER_ROWS) && (rowData != 0u))
  55              		.loc 1 97 0
  56 001e 7B68     		ldr	r3, [r7, #4]
  57 0020 FF2B     		cmp	r3, #255
  58 0022 00D9     		bls	.LCB27
  59 0024 C7E0     		b	.L2	@long jump
  60              	.LCB27:
  61              		.loc 1 97 0 is_stmt 0 discriminator 1
  62 0026 3B68     		ldr	r3, [r7]
  63 0028 002B     		cmp	r3, #0
  64 002a 00D1     		bne	.LCB30
  65 002c C3E0     		b	.L2	@long jump
  66              	.LCB30:
  98:Generated_Source\PSoC4/CyFlash.c ****     {
  99:Generated_Source\PSoC4/CyFlash.c ****         /* Copy data to be written into internal variable */
 100:Generated_Source\PSoC4/CyFlash.c ****         (void)memcpy((void *)&parameters[2u], rowData, CY_FLASH_SIZEOF_ROW);
  67              		.loc 1 100 0 is_stmt 1
  68 002e 8023     		movs	r3, #128
  69 0030 5A00     		lsls	r2, r3, #1
  70 0032 3968     		ldr	r1, [r7]
  71 0034 0C23     		movs	r3, #12
ARM GAS  C:\Users\essele\AppData\Local\Temp\ccJaopFK.s 			page 4


  72 0036 FB18     		adds	r3, r7, r3
  73 0038 0833     		adds	r3, r3, #8
  74 003a 1800     		movs	r0, r3
  75 003c FFF7FEFF 		bl	memcpy
 101:Generated_Source\PSoC4/CyFlash.c **** 
 102:Generated_Source\PSoC4/CyFlash.c ****         #if (CY_FLASH_CHECKSUM_WORKAROUND)
 103:Generated_Source\PSoC4/CyFlash.c **** 
 104:Generated_Source\PSoC4/CyFlash.c ****             for (i = 2u; i < ((CY_FLASH_SIZEOF_ROW / sizeof(uint32)) + 2u); i++)
 105:Generated_Source\PSoC4/CyFlash.c ****             {
 106:Generated_Source\PSoC4/CyFlash.c ****                 uint32 tmp = parameters[i];
 107:Generated_Source\PSoC4/CyFlash.c ****                 if (tmp != 0u)
 108:Generated_Source\PSoC4/CyFlash.c ****                 {
 109:Generated_Source\PSoC4/CyFlash.c ****                     checksum += tmp;
 110:Generated_Source\PSoC4/CyFlash.c ****                     bits |= tmp;
 111:Generated_Source\PSoC4/CyFlash.c ****                     savedIndex = i;
 112:Generated_Source\PSoC4/CyFlash.c ****                 }
 113:Generated_Source\PSoC4/CyFlash.c ****             }
 114:Generated_Source\PSoC4/CyFlash.c **** 
 115:Generated_Source\PSoC4/CyFlash.c ****             needChecksumWorkaround = ((checksum == 0u) && (bits != 0u)) ? 1u : 0u;
 116:Generated_Source\PSoC4/CyFlash.c ****             if (needChecksumWorkaround != 0u)
 117:Generated_Source\PSoC4/CyFlash.c ****             {
 118:Generated_Source\PSoC4/CyFlash.c ****                 savedValue = parameters[savedIndex];
 119:Generated_Source\PSoC4/CyFlash.c ****                 parameters[savedIndex] = 0u;
 120:Generated_Source\PSoC4/CyFlash.c ****             }
 121:Generated_Source\PSoC4/CyFlash.c ****         #endif  /* (CY_FLASH_CHECKSUM_WORKAROUND) */
 122:Generated_Source\PSoC4/CyFlash.c **** 
 123:Generated_Source\PSoC4/CyFlash.c ****         /* Load Flash Bytes */
 124:Generated_Source\PSoC4/CyFlash.c ****         parameters[0u] = (uint32) (CY_FLASH_GET_MACRO_FROM_ROW(rowNum)        << CY_FLASH_PARAM_MAC
 125:Generated_Source\PSoC4/CyFlash.c ****                          (uint32) (CY_FLASH_PAGE_LATCH_START_ADDR             << CY_FLASH_PARAM_ADD
 126:Generated_Source\PSoC4/CyFlash.c ****                          (uint32) (CY_FLASH_KEY_TWO(CY_FLASH_API_OPCODE_LOAD) << CY_FLASH_PARAM_KEY
  76              		.loc 1 126 0
  77 0040 7B68     		ldr	r3, [r7, #4]
  78 0042 634A     		ldr	r2, .L18
  79 0044 9342     		cmp	r3, r2
  80 0046 01D9     		bls	.L3
  81              		.loc 1 126 0 is_stmt 0 discriminator 1
  82 0048 624A     		ldr	r2, .L18+4
  83 004a 00E0     		b	.L4
  84              	.L3:
  85              		.loc 1 126 0 discriminator 2
  86 004c 624A     		ldr	r2, .L18+8
  87              	.L4:
 124:Generated_Source\PSoC4/CyFlash.c ****                          (uint32) (CY_FLASH_PAGE_LATCH_START_ADDR             << CY_FLASH_PARAM_ADD
  88              		.loc 1 124 0 is_stmt 1
  89 004e 634B     		ldr	r3, .L18+12
  90 0050 9021     		movs	r1, #144
  91 0052 4900     		lsls	r1, r1, #1
  92 0054 8C46     		mov	ip, r1
  93 0056 BC44     		add	ip, ip, r7
  94 0058 6344     		add	r3, r3, ip
  95 005a 1A60     		str	r2, [r3]
 127:Generated_Source\PSoC4/CyFlash.c ****                          CY_FLASH_KEY_ONE;
 128:Generated_Source\PSoC4/CyFlash.c ****         parameters[1u] = CY_FLASH_SIZEOF_ROW - 1u;
  96              		.loc 1 128 0
  97 005c 5F4B     		ldr	r3, .L18+12
  98 005e 9022     		movs	r2, #144
  99 0060 5200     		lsls	r2, r2, #1
ARM GAS  C:\Users\essele\AppData\Local\Temp\ccJaopFK.s 			page 5


 100 0062 9446     		mov	ip, r2
 101 0064 BC44     		add	ip, ip, r7
 102 0066 6344     		add	r3, r3, ip
 103 0068 FF22     		movs	r2, #255
 104 006a 5A60     		str	r2, [r3, #4]
 129:Generated_Source\PSoC4/CyFlash.c **** 
 130:Generated_Source\PSoC4/CyFlash.c ****         CY_FLASH_CPUSS_SYSARG_REG = (uint32) &parameters[0u];
 105              		.loc 1 130 0
 106 006c 5C4B     		ldr	r3, .L18+16
 107 006e 0C22     		movs	r2, #12
 108 0070 BA18     		adds	r2, r7, r2
 109 0072 1A60     		str	r2, [r3]
 131:Generated_Source\PSoC4/CyFlash.c ****         CY_FLASH_CPUSS_SYSREQ_REG = CY_FLASH_CPUSS_REQ_START | CY_FLASH_API_OPCODE_LOAD;
 110              		.loc 1 131 0
 111 0074 5B4B     		ldr	r3, .L18+20
 112 0076 5C4A     		ldr	r2, .L18+24
 113 0078 1A60     		str	r2, [r3]
 132:Generated_Source\PSoC4/CyFlash.c ****         CY_NOP;
 114              		.loc 1 132 0
 115              		.syntax divided
 116              	@ 132 "Generated_Source\PSoC4\CyFlash.c" 1
 117 007a C046     		NOP
 118              	
 119              	@ 0 "" 2
 133:Generated_Source\PSoC4/CyFlash.c ****         retValue = CY_FLASH_API_RETURN;
 120              		.loc 1 133 0
 121              		.thumb
 122              		.syntax unified
 123 007c 584B     		ldr	r3, .L18+16
 124 007e 1B68     		ldr	r3, [r3]
 125 0080 1B0F     		lsrs	r3, r3, #28
 126 0082 1A07     		lsls	r2, r3, #28
 127 0084 F023     		movs	r3, #240
 128 0086 1B06     		lsls	r3, r3, #24
 129 0088 9A42     		cmp	r2, r3
 130 008a 04D1     		bne	.L5
 131              		.loc 1 133 0 is_stmt 0 discriminator 1
 132 008c 544B     		ldr	r3, .L18+16
 133 008e 1B68     		ldr	r3, [r3]
 134 0090 FF22     		movs	r2, #255
 135 0092 1340     		ands	r3, r2
 136 0094 0DE0     		b	.L6
 137              	.L5:
 138              		.loc 1 133 0 discriminator 2
 139 0096 524B     		ldr	r3, .L18+16
 140 0098 1B68     		ldr	r3, [r3]
 141 009a 1B0F     		lsrs	r3, r3, #28
 142 009c 1A07     		lsls	r2, r3, #28
 143 009e A023     		movs	r3, #160
 144 00a0 1B06     		lsls	r3, r3, #24
 145 00a2 9A42     		cmp	r2, r3
 146 00a4 04D0     		beq	.L7
 147              		.loc 1 133 0 discriminator 4
 148 00a6 4E4B     		ldr	r3, .L18+16
 149 00a8 1B68     		ldr	r3, [r3]
 150 00aa FF22     		movs	r2, #255
 151 00ac 1340     		ands	r3, r2
ARM GAS  C:\Users\essele\AppData\Local\Temp\ccJaopFK.s 			page 6


 152 00ae 00E0     		b	.L6
 153              	.L7:
 154              		.loc 1 133 0 discriminator 5
 155 00b0 0023     		movs	r3, #0
 156              	.L6:
 157              		.loc 1 133 0 discriminator 8
 158 00b2 8C22     		movs	r2, #140
 159 00b4 5200     		lsls	r2, r2, #1
 160 00b6 BA18     		adds	r2, r7, r2
 161 00b8 1360     		str	r3, [r2]
 134:Generated_Source\PSoC4/CyFlash.c **** 
 135:Generated_Source\PSoC4/CyFlash.c ****         if(retValue == CY_SYS_FLASH_SUCCESS)
 162              		.loc 1 135 0 is_stmt 1 discriminator 8
 163 00ba 8C23     		movs	r3, #140
 164 00bc 5B00     		lsls	r3, r3, #1
 165 00be FB18     		adds	r3, r7, r3
 166 00c0 1B68     		ldr	r3, [r3]
 167 00c2 002B     		cmp	r3, #0
 168 00c4 00D0     		beq	.LCB118
 169 00c6 7BE0     		b	.L16	@long jump
 170              	.LCB118:
 136:Generated_Source\PSoC4/CyFlash.c ****         {
 137:Generated_Source\PSoC4/CyFlash.c ****             /***************************************************************
 138:Generated_Source\PSoC4/CyFlash.c ****             * Mask all the exceptions to guarantee that Flash write will
 139:Generated_Source\PSoC4/CyFlash.c ****             * occur in the atomic way. It will not affect system call
 140:Generated_Source\PSoC4/CyFlash.c ****             * execution (flash row write) since it is executed in the NMI
 141:Generated_Source\PSoC4/CyFlash.c ****             * context.
 142:Generated_Source\PSoC4/CyFlash.c ****             ***************************************************************/
 143:Generated_Source\PSoC4/CyFlash.c ****             interruptState = CyEnterCriticalSection();
 171              		.loc 1 143 0
 172 00c8 2023     		movs	r3, #32
 173 00ca FF33     		adds	r3, r3, #255
 174 00cc FC18     		adds	r4, r7, r3
 175 00ce FFF7FEFF 		bl	CyEnterCriticalSection
 176 00d2 0300     		movs	r3, r0
 177 00d4 2370     		strb	r3, [r4]
 144:Generated_Source\PSoC4/CyFlash.c **** 
 145:Generated_Source\PSoC4/CyFlash.c ****             clkCnfRetValue = CySysFlashClockBackup();
 178              		.loc 1 145 0
 179 00d6 FFF7FEFF 		bl	CySysFlashClockBackup
 180 00da 0300     		movs	r3, r0
 181 00dc 8A22     		movs	r2, #138
 182 00de 5200     		lsls	r2, r2, #1
 183 00e0 BA18     		adds	r2, r7, r2
 184 00e2 1360     		str	r3, [r2]
 146:Generated_Source\PSoC4/CyFlash.c **** 
 147:Generated_Source\PSoC4/CyFlash.c ****         #if(CY_IP_SPCIF_SYNCHRONOUS)
 148:Generated_Source\PSoC4/CyFlash.c ****             if(clkCnfRetValue == CY_SYS_FLASH_SUCCESS)
 149:Generated_Source\PSoC4/CyFlash.c ****             {
 150:Generated_Source\PSoC4/CyFlash.c ****                 retValue = CySysFlashClockConfig();
 151:Generated_Source\PSoC4/CyFlash.c ****             }
 152:Generated_Source\PSoC4/CyFlash.c ****         #endif  /* (CY_IP_SPCIF_SYNCHRONOUS) */
 153:Generated_Source\PSoC4/CyFlash.c **** 
 154:Generated_Source\PSoC4/CyFlash.c ****             if(retValue == CY_SYS_FLASH_SUCCESS)
 185              		.loc 1 154 0
 186 00e4 8C23     		movs	r3, #140
 187 00e6 5B00     		lsls	r3, r3, #1
ARM GAS  C:\Users\essele\AppData\Local\Temp\ccJaopFK.s 			page 7


 188 00e8 FB18     		adds	r3, r7, r3
 189 00ea 1B68     		ldr	r3, [r3]
 190 00ec 002B     		cmp	r3, #0
 191 00ee 3FD1     		bne	.L10
 155:Generated_Source\PSoC4/CyFlash.c ****             {
 156:Generated_Source\PSoC4/CyFlash.c ****                 /* Write Row */
 157:Generated_Source\PSoC4/CyFlash.c ****                 parameters[0u]  = (uint32) (((uint32) CY_FLASH_KEY_TWO(CY_FLASH_API_OPCODE_WRITE_RO
 192              		.loc 1 157 0
 193 00f0 3A4B     		ldr	r3, .L18+12
 194 00f2 9022     		movs	r2, #144
 195 00f4 5200     		lsls	r2, r2, #1
 196 00f6 9446     		mov	ip, r2
 197 00f8 BC44     		add	ip, ip, r7
 198 00fa 6344     		add	r3, r3, ip
 199 00fc 3B4A     		ldr	r2, .L18+28
 200 00fe 1A60     		str	r2, [r3]
 158:Generated_Source\PSoC4/CyFlash.c ****                 parameters[0u] |= (uint32)(rowNum << 16u);
 201              		.loc 1 158 0
 202 0100 364B     		ldr	r3, .L18+12
 203 0102 9022     		movs	r2, #144
 204 0104 5200     		lsls	r2, r2, #1
 205 0106 9446     		mov	ip, r2
 206 0108 BC44     		add	ip, ip, r7
 207 010a 6344     		add	r3, r3, ip
 208 010c 1A68     		ldr	r2, [r3]
 209 010e 7B68     		ldr	r3, [r7, #4]
 210 0110 1B04     		lsls	r3, r3, #16
 211 0112 1A43     		orrs	r2, r3
 212 0114 314B     		ldr	r3, .L18+12
 213 0116 9021     		movs	r1, #144
 214 0118 4900     		lsls	r1, r1, #1
 215 011a 8C46     		mov	ip, r1
 216 011c BC44     		add	ip, ip, r7
 217 011e 6344     		add	r3, r3, ip
 218 0120 1A60     		str	r2, [r3]
 159:Generated_Source\PSoC4/CyFlash.c **** 
 160:Generated_Source\PSoC4/CyFlash.c ****                 CY_FLASH_CPUSS_SYSARG_REG = (uint32) &parameters[0u];
 219              		.loc 1 160 0
 220 0122 2F4B     		ldr	r3, .L18+16
 221 0124 0C22     		movs	r2, #12
 222 0126 BA18     		adds	r2, r7, r2
 223 0128 1A60     		str	r2, [r3]
 161:Generated_Source\PSoC4/CyFlash.c ****                 CY_FLASH_CPUSS_SYSREQ_REG = CY_FLASH_CPUSS_REQ_START | CY_FLASH_API_OPCODE_WRITE_RO
 224              		.loc 1 161 0
 225 012a 2E4B     		ldr	r3, .L18+20
 226 012c 304A     		ldr	r2, .L18+32
 227 012e 1A60     		str	r2, [r3]
 162:Generated_Source\PSoC4/CyFlash.c ****                 CY_NOP;
 228              		.loc 1 162 0
 229              		.syntax divided
 230              	@ 162 "Generated_Source\PSoC4\CyFlash.c" 1
 231 0130 C046     		NOP
 232              	
 233              	@ 0 "" 2
 163:Generated_Source\PSoC4/CyFlash.c ****                 retValue = CY_FLASH_API_RETURN;
 234              		.loc 1 163 0
 235              		.thumb
ARM GAS  C:\Users\essele\AppData\Local\Temp\ccJaopFK.s 			page 8


 236              		.syntax unified
 237 0132 2B4B     		ldr	r3, .L18+16
 238 0134 1B68     		ldr	r3, [r3]
 239 0136 1B0F     		lsrs	r3, r3, #28
 240 0138 1A07     		lsls	r2, r3, #28
 241 013a F023     		movs	r3, #240
 242 013c 1B06     		lsls	r3, r3, #24
 243 013e 9A42     		cmp	r2, r3
 244 0140 04D1     		bne	.L11
 245              		.loc 1 163 0 is_stmt 0 discriminator 1
 246 0142 274B     		ldr	r3, .L18+16
 247 0144 1B68     		ldr	r3, [r3]
 248 0146 FF22     		movs	r2, #255
 249 0148 1340     		ands	r3, r2
 250 014a 0DE0     		b	.L12
 251              	.L11:
 252              		.loc 1 163 0 discriminator 2
 253 014c 244B     		ldr	r3, .L18+16
 254 014e 1B68     		ldr	r3, [r3]
 255 0150 1B0F     		lsrs	r3, r3, #28
 256 0152 1A07     		lsls	r2, r3, #28
 257 0154 A023     		movs	r3, #160
 258 0156 1B06     		lsls	r3, r3, #24
 259 0158 9A42     		cmp	r2, r3
 260 015a 04D0     		beq	.L13
 261              		.loc 1 163 0 discriminator 4
 262 015c 204B     		ldr	r3, .L18+16
 263 015e 1B68     		ldr	r3, [r3]
 264 0160 FF22     		movs	r2, #255
 265 0162 1340     		ands	r3, r2
 266 0164 00E0     		b	.L12
 267              	.L13:
 268              		.loc 1 163 0 discriminator 5
 269 0166 0023     		movs	r3, #0
 270              	.L12:
 271              		.loc 1 163 0 discriminator 8
 272 0168 8C22     		movs	r2, #140
 273 016a 5200     		lsls	r2, r2, #1
 274 016c BA18     		adds	r2, r7, r2
 275 016e 1360     		str	r3, [r2]
 276              	.L10:
 164:Generated_Source\PSoC4/CyFlash.c ****             }
 165:Generated_Source\PSoC4/CyFlash.c **** 
 166:Generated_Source\PSoC4/CyFlash.c ****             #if (CY_FLASH_CHECKSUM_WORKAROUND)
 167:Generated_Source\PSoC4/CyFlash.c **** 
 168:Generated_Source\PSoC4/CyFlash.c ****                 if ((retValue == CYRET_SUCCESS) && (needChecksumWorkaround != 0u))
 169:Generated_Source\PSoC4/CyFlash.c ****                 {
 170:Generated_Source\PSoC4/CyFlash.c ****                     (void)memset((void *)&parameters[2u], 0, CY_FLASH_SIZEOF_ROW);
 171:Generated_Source\PSoC4/CyFlash.c ****                     parameters[savedIndex] = savedValue;
 172:Generated_Source\PSoC4/CyFlash.c **** 
 173:Generated_Source\PSoC4/CyFlash.c ****                     /* Load Flash Bytes */
 174:Generated_Source\PSoC4/CyFlash.c ****                     parameters[0u] = (uint32) (CY_FLASH_GET_MACRO_FROM_ROW(rowNum)        << CY_FLA
 175:Generated_Source\PSoC4/CyFlash.c ****                                      (uint32) (CY_FLASH_PAGE_LATCH_START_ADDR             << CY_FLA
 176:Generated_Source\PSoC4/CyFlash.c ****                                      (uint32) (CY_FLASH_KEY_TWO(CY_FLASH_API_OPCODE_LOAD) << CY_FLA
 177:Generated_Source\PSoC4/CyFlash.c ****                                      CY_FLASH_KEY_ONE;
 178:Generated_Source\PSoC4/CyFlash.c ****                     parameters[1u] = CY_FLASH_SIZEOF_ROW - 1u;
 179:Generated_Source\PSoC4/CyFlash.c **** 
ARM GAS  C:\Users\essele\AppData\Local\Temp\ccJaopFK.s 			page 9


 180:Generated_Source\PSoC4/CyFlash.c ****                     CY_FLASH_CPUSS_SYSARG_REG = (uint32) &parameters[0u];
 181:Generated_Source\PSoC4/CyFlash.c ****                     CY_FLASH_CPUSS_SYSREQ_REG = CY_FLASH_CPUSS_REQ_START | CY_FLASH_API_OPCODE_LOAD
 182:Generated_Source\PSoC4/CyFlash.c ****                     CY_NOP;
 183:Generated_Source\PSoC4/CyFlash.c ****                     retValue = CY_FLASH_API_RETURN;
 184:Generated_Source\PSoC4/CyFlash.c **** 
 185:Generated_Source\PSoC4/CyFlash.c **** 
 186:Generated_Source\PSoC4/CyFlash.c ****                     if(retValue == CY_SYS_FLASH_SUCCESS)
 187:Generated_Source\PSoC4/CyFlash.c ****                     {
 188:Generated_Source\PSoC4/CyFlash.c ****                         /* Program Row */
 189:Generated_Source\PSoC4/CyFlash.c ****                         parameters[0u]  =
 190:Generated_Source\PSoC4/CyFlash.c ****                             (uint32) (((uint32) CY_FLASH_KEY_TWO(CY_FLASH_API_OPCODE_PROGRAM_ROW) <
 191:Generated_Source\PSoC4/CyFlash.c ****                                                     CY_FLASH_PARAM_KEY_TWO_OFFSET) | CY_FLASH_KEY_O
 192:Generated_Source\PSoC4/CyFlash.c ****                         parameters[0u] |= (uint32)(rowNum << 16u);
 193:Generated_Source\PSoC4/CyFlash.c **** 
 194:Generated_Source\PSoC4/CyFlash.c ****                         CY_FLASH_CPUSS_SYSARG_REG = (uint32) &parameters[0u];
 195:Generated_Source\PSoC4/CyFlash.c ****                         CY_FLASH_CPUSS_SYSREQ_REG = CY_FLASH_CPUSS_REQ_START | CY_FLASH_API_OPCODE_
 196:Generated_Source\PSoC4/CyFlash.c ****                         CY_NOP;
 197:Generated_Source\PSoC4/CyFlash.c ****                         retValue = CY_FLASH_API_RETURN;
 198:Generated_Source\PSoC4/CyFlash.c ****                     }
 199:Generated_Source\PSoC4/CyFlash.c ****                 }
 200:Generated_Source\PSoC4/CyFlash.c ****             #endif  /* (CY_FLASH_CHECKSUM_WORKAROUND) */
 201:Generated_Source\PSoC4/CyFlash.c **** 
 202:Generated_Source\PSoC4/CyFlash.c ****             if(clkCnfRetValue == CY_SYS_FLASH_SUCCESS)
 277              		.loc 1 202 0 is_stmt 1
 278 0170 8A23     		movs	r3, #138
 279 0172 5B00     		lsls	r3, r3, #1
 280 0174 FB18     		adds	r3, r7, r3
 281 0176 1B68     		ldr	r3, [r3]
 282 0178 002B     		cmp	r3, #0
 283 017a 14D1     		bne	.L15
 203:Generated_Source\PSoC4/CyFlash.c ****             {
 204:Generated_Source\PSoC4/CyFlash.c ****                 clkCnfRetValue = CySysFlashClockRestore();
 284              		.loc 1 204 0
 285 017c FFF7FEFF 		bl	CySysFlashClockRestore
 286 0180 0300     		movs	r3, r0
 287 0182 8A22     		movs	r2, #138
 288 0184 5200     		lsls	r2, r2, #1
 289 0186 BA18     		adds	r2, r7, r2
 290 0188 1360     		str	r3, [r2]
 205:Generated_Source\PSoC4/CyFlash.c **** 
 206:Generated_Source\PSoC4/CyFlash.c ****                 if(clkCnfRetValue != CY_SYS_FLASH_SUCCESS)
 291              		.loc 1 206 0
 292 018a 8A23     		movs	r3, #138
 293 018c 5B00     		lsls	r3, r3, #1
 294 018e FB18     		adds	r3, r7, r3
 295 0190 1B68     		ldr	r3, [r3]
 296 0192 002B     		cmp	r3, #0
 297 0194 07D0     		beq	.L15
 207:Generated_Source\PSoC4/CyFlash.c ****                 {
 208:Generated_Source\PSoC4/CyFlash.c ****                     retValue = clkCnfRetValue;
 298              		.loc 1 208 0
 299 0196 8A23     		movs	r3, #138
 300 0198 5B00     		lsls	r3, r3, #1
 301 019a FB18     		adds	r3, r7, r3
 302 019c 1B68     		ldr	r3, [r3]
 303 019e 8C22     		movs	r2, #140
 304 01a0 5200     		lsls	r2, r2, #1
ARM GAS  C:\Users\essele\AppData\Local\Temp\ccJaopFK.s 			page 10


 305 01a2 BA18     		adds	r2, r7, r2
 306 01a4 1360     		str	r3, [r2]
 307              	.L15:
 209:Generated_Source\PSoC4/CyFlash.c ****                 }
 210:Generated_Source\PSoC4/CyFlash.c ****             }
 211:Generated_Source\PSoC4/CyFlash.c **** 
 212:Generated_Source\PSoC4/CyFlash.c ****             CyExitCriticalSection(interruptState);
 308              		.loc 1 212 0
 309 01a6 2023     		movs	r3, #32
 310 01a8 FF33     		adds	r3, r3, #255
 311 01aa FB18     		adds	r3, r7, r3
 312 01ac 1B78     		ldrb	r3, [r3]
 313 01ae 1800     		movs	r0, r3
 314 01b0 FFF7FEFF 		bl	CyExitCriticalSection
 135:Generated_Source\PSoC4/CyFlash.c ****         {
 315              		.loc 1 135 0
 316 01b4 04E0     		b	.L16
 317              	.L2:
 213:Generated_Source\PSoC4/CyFlash.c ****         }
 214:Generated_Source\PSoC4/CyFlash.c ****     }
 215:Generated_Source\PSoC4/CyFlash.c ****     else
 216:Generated_Source\PSoC4/CyFlash.c ****     {
 217:Generated_Source\PSoC4/CyFlash.c ****         retValue = CY_SYS_FLASH_INVALID_ADDR;
 318              		.loc 1 217 0
 319 01b6 0423     		movs	r3, #4
 320 01b8 8C22     		movs	r2, #140
 321 01ba 5200     		lsls	r2, r2, #1
 322 01bc BA18     		adds	r2, r7, r2
 323 01be 1360     		str	r3, [r2]
 324              	.L16:
 218:Generated_Source\PSoC4/CyFlash.c ****     }
 219:Generated_Source\PSoC4/CyFlash.c **** 
 220:Generated_Source\PSoC4/CyFlash.c ****     return (retValue);
 325              		.loc 1 220 0
 326 01c0 8C23     		movs	r3, #140
 327 01c2 5B00     		lsls	r3, r3, #1
 328 01c4 FB18     		adds	r3, r7, r3
 329 01c6 1B68     		ldr	r3, [r3]
 221:Generated_Source\PSoC4/CyFlash.c **** }
 330              		.loc 1 221 0
 331 01c8 1800     		movs	r0, r3
 332 01ca BD46     		mov	sp, r7
 333 01cc 49B0     		add	sp, sp, #292
 334              		@ sp needed
 335 01ce 90BD     		pop	{r4, r7, pc}
 336              	.L19:
 337              		.align	2
 338              	.L18:
 339 01d0 FF010000 		.word	511
 340 01d4 B6D70001 		.word	16832438
 341 01d8 B6D70000 		.word	55222
 342 01dc ECFEFFFF 		.word	-276
 343 01e0 08001040 		.word	1074790408
 344 01e4 04001040 		.word	1074790404
 345 01e8 04000080 		.word	-2147483644
 346 01ec B6D80000 		.word	55478
 347 01f0 05000080 		.word	-2147483643
ARM GAS  C:\Users\essele\AppData\Local\Temp\ccJaopFK.s 			page 11


 348              		.cfi_endproc
 349              	.LFE1:
 350              		.size	CySysFlashWriteRow, .-CySysFlashWriteRow
 351              		.section	.text.CySysFlashSetWaitCycles,"ax",%progbits
 352              		.align	2
 353              		.global	CySysFlashSetWaitCycles
 354              		.code	16
 355              		.thumb_func
 356              		.type	CySysFlashSetWaitCycles, %function
 357              	CySysFlashSetWaitCycles:
 358              	.LFB2:
 222:Generated_Source\PSoC4/CyFlash.c **** 
 223:Generated_Source\PSoC4/CyFlash.c **** 
 224:Generated_Source\PSoC4/CyFlash.c **** 
 225:Generated_Source\PSoC4/CyFlash.c **** #if (CY_IP_FLASH_PARALLEL_PGM_EN && (CY_IP_FLASH_MACROS > 1u))
 226:Generated_Source\PSoC4/CyFlash.c **** /*******************************************************************************
 227:Generated_Source\PSoC4/CyFlash.c **** * Function Name: CySysFlashStartWriteRow
 228:Generated_Source\PSoC4/CyFlash.c **** ****************************************************************************//**
 229:Generated_Source\PSoC4/CyFlash.c **** *
 230:Generated_Source\PSoC4/CyFlash.c **** * Initiates a write to a row of Flash. A call to this API is non-blocking. 
 231:Generated_Source\PSoC4/CyFlash.c **** * Use CySysFlashResumeWriteRow() to resume flash writes and 
 232:Generated_Source\PSoC4/CyFlash.c **** * CySysFlashGetWriteRowStatus() to ascertain status of the write operation.
 233:Generated_Source\PSoC4/CyFlash.c **** *
 234:Generated_Source\PSoC4/CyFlash.c **** * The devices require HFCLK to be sourced by 48 MHz IMO during flash write.
 235:Generated_Source\PSoC4/CyFlash.c **** * This API will modify IMO configuration; it can be later restored to original
 236:Generated_Source\PSoC4/CyFlash.c **** * configuration by calling \ref CySysFlashGetWriteRowStatus().
 237:Generated_Source\PSoC4/CyFlash.c **** *
 238:Generated_Source\PSoC4/CyFlash.c **** * \note The non-blocking operation does not return success status 
 239:Generated_Source\PSoC4/CyFlash.c **** * CY_SYS_FLASH_SUCCESS until the last \ref CySysFlashResumeWriteRow API 
 240:Generated_Source\PSoC4/CyFlash.c **** * is complete. The CPUSS_SYSARG register will be reflecting the SRAM address 
 241:Generated_Source\PSoC4/CyFlash.c **** * during an ongoing non-blocking operation.
 242:Generated_Source\PSoC4/CyFlash.c **** *    
 243:Generated_Source\PSoC4/CyFlash.c **** * \param rowNum The flash row number. The number of the flash rows is defined by
 244:Generated_Source\PSoC4/CyFlash.c **** * the \ref CY_FLASH_NUMBER_ROWS macro for the selected device. Refer to the
 245:Generated_Source\PSoC4/CyFlash.c **** * device datasheet for the details.
 246:Generated_Source\PSoC4/CyFlash.c **** * \note The target flash array is calculated based on the specified flash row.
 247:Generated_Source\PSoC4/CyFlash.c **** *
 248:Generated_Source\PSoC4/CyFlash.c **** * \param rowData Array of bytes to write. The size of the array must be equal to
 249:Generated_Source\PSoC4/CyFlash.c **** * the flash row size. The flash row size for the selected device is defined by
 250:Generated_Source\PSoC4/CyFlash.c **** * the \ref CY_FLASH_SIZEOF_ROW macro. Refer to the device datasheet for the
 251:Generated_Source\PSoC4/CyFlash.c **** * details.
 252:Generated_Source\PSoC4/CyFlash.c **** *
 253:Generated_Source\PSoC4/CyFlash.c **** * \return \ref group_flash_status_codes
 254:Generated_Source\PSoC4/CyFlash.c **** *
 255:Generated_Source\PSoC4/CyFlash.c **** *******************************************************************************/
 256:Generated_Source\PSoC4/CyFlash.c **** uint32 CySysFlashStartWriteRow(uint32 rowNum, const uint8 rowData[])
 257:Generated_Source\PSoC4/CyFlash.c **** {
 258:Generated_Source\PSoC4/CyFlash.c ****     volatile uint32 retValue = CY_SYS_FLASH_SUCCESS;
 259:Generated_Source\PSoC4/CyFlash.c ****     volatile uint32 parameters[(CY_FLASH_SIZEOF_ROW + CY_FLASH_SRAM_ROM_DATA) / sizeof(uint32)];
 260:Generated_Source\PSoC4/CyFlash.c ****     uint8  interruptState;
 261:Generated_Source\PSoC4/CyFlash.c **** 
 262:Generated_Source\PSoC4/CyFlash.c **** #if(CY_IP_SPCIF_SYNCHRONOUS)
 263:Generated_Source\PSoC4/CyFlash.c ****     volatile uint32 clkCnfRetValue = CY_SYS_FLASH_SUCCESS;
 264:Generated_Source\PSoC4/CyFlash.c **** #endif  /* (CY_IP_SPCIF_SYNCHRONOUS) */    
 265:Generated_Source\PSoC4/CyFlash.c **** 
 266:Generated_Source\PSoC4/CyFlash.c ****     if ((rowNum < CY_FLASH_NUMBER_ROWS) && (rowData != 0u))
 267:Generated_Source\PSoC4/CyFlash.c ****     {
ARM GAS  C:\Users\essele\AppData\Local\Temp\ccJaopFK.s 			page 12


 268:Generated_Source\PSoC4/CyFlash.c ****         /* Copy data to be written into internal variable */
 269:Generated_Source\PSoC4/CyFlash.c ****         (void)memcpy((void *)&parameters[2u], rowData, CY_FLASH_SIZEOF_ROW);
 270:Generated_Source\PSoC4/CyFlash.c **** 
 271:Generated_Source\PSoC4/CyFlash.c ****         /* Load Flash Bytes */
 272:Generated_Source\PSoC4/CyFlash.c ****         parameters[0u] = (uint32) (CY_FLASH_GET_MACRO_FROM_ROW(rowNum)        << CY_FLASH_PARAM_MAC
 273:Generated_Source\PSoC4/CyFlash.c ****                          (uint32) (CY_FLASH_PAGE_LATCH_START_ADDR             << CY_FLASH_PARAM_ADD
 274:Generated_Source\PSoC4/CyFlash.c ****                          (uint32) (CY_FLASH_KEY_TWO(CY_FLASH_API_OPCODE_LOAD) << CY_FLASH_PARAM_KEY
 275:Generated_Source\PSoC4/CyFlash.c ****                          CY_FLASH_KEY_ONE;
 276:Generated_Source\PSoC4/CyFlash.c ****         parameters[1u] = CY_FLASH_SIZEOF_ROW - 1u;
 277:Generated_Source\PSoC4/CyFlash.c **** 
 278:Generated_Source\PSoC4/CyFlash.c ****         CY_FLASH_CPUSS_SYSARG_REG = (uint32) &parameters[0u];
 279:Generated_Source\PSoC4/CyFlash.c ****         CY_FLASH_CPUSS_SYSREQ_REG = CY_FLASH_CPUSS_REQ_START | CY_FLASH_API_OPCODE_LOAD;
 280:Generated_Source\PSoC4/CyFlash.c ****         CY_NOP;
 281:Generated_Source\PSoC4/CyFlash.c ****         retValue = CY_FLASH_API_RETURN;
 282:Generated_Source\PSoC4/CyFlash.c **** 
 283:Generated_Source\PSoC4/CyFlash.c ****         if(retValue == CY_SYS_FLASH_SUCCESS)
 284:Generated_Source\PSoC4/CyFlash.c ****         {
 285:Generated_Source\PSoC4/CyFlash.c ****             /***************************************************************
 286:Generated_Source\PSoC4/CyFlash.c ****             * Mask all the exceptions to guarantee that Flash write will
 287:Generated_Source\PSoC4/CyFlash.c ****             * occur in the atomic way. It will not affect system call
 288:Generated_Source\PSoC4/CyFlash.c ****             * execution (flash row write) since it is executed in the NMI
 289:Generated_Source\PSoC4/CyFlash.c ****             * context.
 290:Generated_Source\PSoC4/CyFlash.c ****             ***************************************************************/
 291:Generated_Source\PSoC4/CyFlash.c ****             interruptState = CyEnterCriticalSection();
 292:Generated_Source\PSoC4/CyFlash.c **** 
 293:Generated_Source\PSoC4/CyFlash.c ****         #if(CY_IP_SPCIF_SYNCHRONOUS)
 294:Generated_Source\PSoC4/CyFlash.c ****             clkCnfRetValue = CySysFlashClockBackup();
 295:Generated_Source\PSoC4/CyFlash.c ****             
 296:Generated_Source\PSoC4/CyFlash.c ****             if(clkCnfRetValue == CY_SYS_FLASH_SUCCESS)
 297:Generated_Source\PSoC4/CyFlash.c ****             {
 298:Generated_Source\PSoC4/CyFlash.c ****                 retValue = CySysFlashClockConfig();
 299:Generated_Source\PSoC4/CyFlash.c ****             }
 300:Generated_Source\PSoC4/CyFlash.c ****         #else
 301:Generated_Source\PSoC4/CyFlash.c ****             (void)CySysFlashClockBackup();
 302:Generated_Source\PSoC4/CyFlash.c ****         #endif  /* (CY_IP_SPCIF_SYNCHRONOUS) */
 303:Generated_Source\PSoC4/CyFlash.c **** 
 304:Generated_Source\PSoC4/CyFlash.c ****             if(retValue == CY_SYS_FLASH_SUCCESS)
 305:Generated_Source\PSoC4/CyFlash.c ****             {
 306:Generated_Source\PSoC4/CyFlash.c ****                 /* Non-blocking Write Row */
 307:Generated_Source\PSoC4/CyFlash.c ****                 parameters[0u]  = (uint32) (((uint32) CY_FLASH_KEY_TWO(CY_FLASH_API_OPCODE_NON_BLOC
 308:Generated_Source\PSoC4/CyFlash.c ****                                                         CY_FLASH_PARAM_KEY_TWO_OFFSET) | CY_FLASH_K
 309:Generated_Source\PSoC4/CyFlash.c ****                 parameters[0u] |= (uint32)(rowNum << 16u);
 310:Generated_Source\PSoC4/CyFlash.c **** 
 311:Generated_Source\PSoC4/CyFlash.c ****                 CY_FLASH_CPUSS_SYSARG_REG = (uint32) &parameters[0u];
 312:Generated_Source\PSoC4/CyFlash.c ****                 CY_FLASH_CPUSS_SYSREQ_REG = CY_FLASH_CPUSS_REQ_START | CY_FLASH_API_OPCODE_NON_BLOC
 313:Generated_Source\PSoC4/CyFlash.c ****                 CY_NOP;
 314:Generated_Source\PSoC4/CyFlash.c ****                 retValue = CY_FLASH_API_RETURN;
 315:Generated_Source\PSoC4/CyFlash.c ****             }
 316:Generated_Source\PSoC4/CyFlash.c **** 
 317:Generated_Source\PSoC4/CyFlash.c ****             CyExitCriticalSection(interruptState);
 318:Generated_Source\PSoC4/CyFlash.c ****         }
 319:Generated_Source\PSoC4/CyFlash.c ****     }
 320:Generated_Source\PSoC4/CyFlash.c ****     else
 321:Generated_Source\PSoC4/CyFlash.c ****     {
 322:Generated_Source\PSoC4/CyFlash.c ****         retValue = CY_SYS_FLASH_INVALID_ADDR;
 323:Generated_Source\PSoC4/CyFlash.c ****     }
 324:Generated_Source\PSoC4/CyFlash.c **** 
ARM GAS  C:\Users\essele\AppData\Local\Temp\ccJaopFK.s 			page 13


 325:Generated_Source\PSoC4/CyFlash.c ****     return (retValue);
 326:Generated_Source\PSoC4/CyFlash.c **** }
 327:Generated_Source\PSoC4/CyFlash.c **** 
 328:Generated_Source\PSoC4/CyFlash.c **** 
 329:Generated_Source\PSoC4/CyFlash.c **** /*******************************************************************************
 330:Generated_Source\PSoC4/CyFlash.c **** * Function Name: CySysFlashGetWriteRowStatus
 331:Generated_Source\PSoC4/CyFlash.c **** ****************************************************************************//**
 332:Generated_Source\PSoC4/CyFlash.c **** *
 333:Generated_Source\PSoC4/CyFlash.c **** * Returns the current status of the flash write operation.
 334:Generated_Source\PSoC4/CyFlash.c **** *
 335:Generated_Source\PSoC4/CyFlash.c **** ** \note The non-blocking operation does not return success status 
 336:Generated_Source\PSoC4/CyFlash.c **** * CY_SYS_FLASH_SUCCESS until the last \ref CySysFlashResumeWriteRow API 
 337:Generated_Source\PSoC4/CyFlash.c **** * is complete. The CPUSS_SYSARG register will be reflecting the SRAM address 
 338:Generated_Source\PSoC4/CyFlash.c **** * during an ongoing non-blocking operation.
 339:Generated_Source\PSoC4/CyFlash.c **** * Calling this API before starting a non-blocking write row operation 
 340:Generated_Source\PSoC4/CyFlash.c **** * using the \ref CySysFlashStartWriteRow() API will cause improper operation.
 341:Generated_Source\PSoC4/CyFlash.c **** *
 342:Generated_Source\PSoC4/CyFlash.c **** * \return \ref group_flash_status_codes
 343:Generated_Source\PSoC4/CyFlash.c **** *
 344:Generated_Source\PSoC4/CyFlash.c **** *******************************************************************************/
 345:Generated_Source\PSoC4/CyFlash.c **** uint32 CySysFlashGetWriteRowStatus(void)
 346:Generated_Source\PSoC4/CyFlash.c **** {
 347:Generated_Source\PSoC4/CyFlash.c ****     volatile uint32 retValue = CY_SYS_FLASH_SUCCESS;
 348:Generated_Source\PSoC4/CyFlash.c **** 
 349:Generated_Source\PSoC4/CyFlash.c ****     CY_NOP;
 350:Generated_Source\PSoC4/CyFlash.c ****     retValue = CY_FLASH_API_RETURN;
 351:Generated_Source\PSoC4/CyFlash.c **** 
 352:Generated_Source\PSoC4/CyFlash.c ****     (void) CySysFlashClockRestore();
 353:Generated_Source\PSoC4/CyFlash.c **** 
 354:Generated_Source\PSoC4/CyFlash.c ****     return (retValue);
 355:Generated_Source\PSoC4/CyFlash.c **** }
 356:Generated_Source\PSoC4/CyFlash.c **** 
 357:Generated_Source\PSoC4/CyFlash.c **** 
 358:Generated_Source\PSoC4/CyFlash.c **** /*******************************************************************************
 359:Generated_Source\PSoC4/CyFlash.c **** * Function Name: CySysFlashResumeWriteRow
 360:Generated_Source\PSoC4/CyFlash.c **** ****************************************************************************//**
 361:Generated_Source\PSoC4/CyFlash.c **** *
 362:Generated_Source\PSoC4/CyFlash.c **** * This API must be called, once the SPC interrupt is triggered to complete the
 363:Generated_Source\PSoC4/CyFlash.c **** * non-blocking operation. It is advised not to prolong calling this API for
 364:Generated_Source\PSoC4/CyFlash.c **** * more than 25 ms.
 365:Generated_Source\PSoC4/CyFlash.c **** *
 366:Generated_Source\PSoC4/CyFlash.c **** * The non-blocking write row API \ref CySysFlashStartWriteRow() requires that
 367:Generated_Source\PSoC4/CyFlash.c **** * this API be called 3 times to complete the write. This can be done by
 368:Generated_Source\PSoC4/CyFlash.c **** * configuring SPCIF interrupt and placing a call to this API.
 369:Generated_Source\PSoC4/CyFlash.c **** *
 370:Generated_Source\PSoC4/CyFlash.c **** * For CM0 based device, a non-blocking call to program a row of macro 0
 371:Generated_Source\PSoC4/CyFlash.c **** * requires the user to set the CPUSS_CONFIG.VECS_IN_RAM bit so that the
 372:Generated_Source\PSoC4/CyFlash.c **** * interrupt vector for the SPC is fetched from the SRAM rather than the FLASH.
 373:Generated_Source\PSoC4/CyFlash.c **** *
 374:Generated_Source\PSoC4/CyFlash.c **** * For CM0+ based device, if the user wants to keep the vector table in flash
 375:Generated_Source\PSoC4/CyFlash.c **** * when performing non-blocking flash write then they need to make sure the
 376:Generated_Source\PSoC4/CyFlash.c **** * vector table is placed in the flash macro which is not getting programmed by
 377:Generated_Source\PSoC4/CyFlash.c **** * configuring the VTOR register.
 378:Generated_Source\PSoC4/CyFlash.c **** *
 379:Generated_Source\PSoC4/CyFlash.c **** * \note The non-blocking operation does not return success status 
 380:Generated_Source\PSoC4/CyFlash.c **** * CY_SYS_FLASH_SUCCESS until the last Resume API is complete. 
 381:Generated_Source\PSoC4/CyFlash.c **** * The CPUSS_SYSARG register will be reflecting the SRAM address during an 
ARM GAS  C:\Users\essele\AppData\Local\Temp\ccJaopFK.s 			page 14


 382:Generated_Source\PSoC4/CyFlash.c **** * ongoing non-blocking operation.
 383:Generated_Source\PSoC4/CyFlash.c **** *
 384:Generated_Source\PSoC4/CyFlash.c **** * \return \ref group_flash_status_codes
 385:Generated_Source\PSoC4/CyFlash.c **** *
 386:Generated_Source\PSoC4/CyFlash.c **** *******************************************************************************/
 387:Generated_Source\PSoC4/CyFlash.c **** uint32 CySysFlashResumeWriteRow(void)
 388:Generated_Source\PSoC4/CyFlash.c **** {
 389:Generated_Source\PSoC4/CyFlash.c ****     volatile uint32 retValue = CY_SYS_FLASH_SUCCESS;
 390:Generated_Source\PSoC4/CyFlash.c ****     static volatile uint32 parameters[1u];
 391:Generated_Source\PSoC4/CyFlash.c **** 
 392:Generated_Source\PSoC4/CyFlash.c ****     /* Resume */
 393:Generated_Source\PSoC4/CyFlash.c ****     parameters[0u] = (uint32) (((uint32) CY_FLASH_KEY_TWO(CY_FLASH_API_OPCODE_RESUME_NON_BLOCKING) 
 394:Generated_Source\PSoC4/CyFlash.c ****                                          CY_FLASH_PARAM_KEY_TWO_OFFSET) | CY_FLASH_KEY_ONE);
 395:Generated_Source\PSoC4/CyFlash.c ****     CY_FLASH_CPUSS_SYSARG_REG = (uint32) &parameters[0u];
 396:Generated_Source\PSoC4/CyFlash.c ****     CY_FLASH_CPUSS_SYSREQ_REG = CY_FLASH_CPUSS_REQ_START | CY_FLASH_API_OPCODE_RESUME_NON_BLOCKING;
 397:Generated_Source\PSoC4/CyFlash.c ****     
 398:Generated_Source\PSoC4/CyFlash.c ****     CY_NOP;
 399:Generated_Source\PSoC4/CyFlash.c ****     retValue = CY_FLASH_API_RETURN;
 400:Generated_Source\PSoC4/CyFlash.c ****     
 401:Generated_Source\PSoC4/CyFlash.c ****     return (retValue);
 402:Generated_Source\PSoC4/CyFlash.c **** }
 403:Generated_Source\PSoC4/CyFlash.c **** 
 404:Generated_Source\PSoC4/CyFlash.c **** #endif /* (CY_IP_FLASH_PARALLEL_PGM_EN && (CY_IP_FLASH_MACROS > 1u)) */
 405:Generated_Source\PSoC4/CyFlash.c **** 
 406:Generated_Source\PSoC4/CyFlash.c **** 
 407:Generated_Source\PSoC4/CyFlash.c **** /*******************************************************************************
 408:Generated_Source\PSoC4/CyFlash.c **** * Function Name: CySysFlashSetWaitCycles
 409:Generated_Source\PSoC4/CyFlash.c **** ****************************************************************************//**
 410:Generated_Source\PSoC4/CyFlash.c **** *
 411:Generated_Source\PSoC4/CyFlash.c **** * Sets the number of clock cycles the cache will wait before it samples data
 412:Generated_Source\PSoC4/CyFlash.c **** * coming back from Flash. This function must be called before increasing the
 413:Generated_Source\PSoC4/CyFlash.c **** * SYSCLK clock frequency. It can optionally be called after lowering SYSCLK
 414:Generated_Source\PSoC4/CyFlash.c **** * clock frequency in order to improve the CPU performance.
 415:Generated_Source\PSoC4/CyFlash.c **** *
 416:Generated_Source\PSoC4/CyFlash.c **** * \param freq The System clock frequency in MHz.
 417:Generated_Source\PSoC4/CyFlash.c **** *
 418:Generated_Source\PSoC4/CyFlash.c **** * \note Invalid frequency will be ignored in Release mode and the CPU will be
 419:Generated_Source\PSoC4/CyFlash.c **** * halted if project is compiled in Debug mode.
 420:Generated_Source\PSoC4/CyFlash.c **** *
 421:Generated_Source\PSoC4/CyFlash.c **** *******************************************************************************/
 422:Generated_Source\PSoC4/CyFlash.c **** void CySysFlashSetWaitCycles(uint32 freq)
 423:Generated_Source\PSoC4/CyFlash.c **** {
 359              		.loc 1 423 0
 360              		.cfi_startproc
 361              		@ args = 0, pretend = 0, frame = 16
 362              		@ frame_needed = 1, uses_anonymous_args = 0
 363 0000 90B5     		push	{r4, r7, lr}
 364              		.cfi_def_cfa_offset 12
 365              		.cfi_offset 4, -12
 366              		.cfi_offset 7, -8
 367              		.cfi_offset 14, -4
 368 0002 85B0     		sub	sp, sp, #20
 369              		.cfi_def_cfa_offset 32
 370 0004 00AF     		add	r7, sp, #0
 371              		.cfi_def_cfa_register 7
 372 0006 7860     		str	r0, [r7, #4]
 424:Generated_Source\PSoC4/CyFlash.c ****     uint8  interruptState;
ARM GAS  C:\Users\essele\AppData\Local\Temp\ccJaopFK.s 			page 15


 425:Generated_Source\PSoC4/CyFlash.c **** 
 426:Generated_Source\PSoC4/CyFlash.c ****     interruptState = CyEnterCriticalSection();
 373              		.loc 1 426 0
 374 0008 0F23     		movs	r3, #15
 375 000a FC18     		adds	r4, r7, r3
 376 000c FFF7FEFF 		bl	CyEnterCriticalSection
 377 0010 0300     		movs	r3, r0
 378 0012 2370     		strb	r3, [r4]
 427:Generated_Source\PSoC4/CyFlash.c **** 
 428:Generated_Source\PSoC4/CyFlash.c ****     #if (CY_IP_CPUSS)
 429:Generated_Source\PSoC4/CyFlash.c **** 
 430:Generated_Source\PSoC4/CyFlash.c ****         if ( freq <= CY_FLASH_SYSCLK_BOUNDARY_MHZ )
 431:Generated_Source\PSoC4/CyFlash.c ****         {
 432:Generated_Source\PSoC4/CyFlash.c ****             CY_SYS_CLK_SELECT_REG &= (uint32)(~CY_FLASH_WAIT_STATE_EN);
 433:Generated_Source\PSoC4/CyFlash.c ****         }
 434:Generated_Source\PSoC4/CyFlash.c ****         else
 435:Generated_Source\PSoC4/CyFlash.c ****         {
 436:Generated_Source\PSoC4/CyFlash.c ****             CY_SYS_CLK_SELECT_REG |= CY_FLASH_WAIT_STATE_EN;
 437:Generated_Source\PSoC4/CyFlash.c ****         }
 438:Generated_Source\PSoC4/CyFlash.c ****     #else
 439:Generated_Source\PSoC4/CyFlash.c ****         #if (CY_IP_CPUSS_FLASHC_PRESENT)
 440:Generated_Source\PSoC4/CyFlash.c ****             /* CY_IP_FM and CY_IP_FS */
 441:Generated_Source\PSoC4/CyFlash.c ****             if (freq <= CY_FLASH_CTL_WS_0_FREQ_MAX)
 379              		.loc 1 441 0
 380 0014 7B68     		ldr	r3, [r7, #4]
 381 0016 102B     		cmp	r3, #16
 382 0018 06D8     		bhi	.L21
 442:Generated_Source\PSoC4/CyFlash.c ****             {
 443:Generated_Source\PSoC4/CyFlash.c ****                 CY_FLASH_CTL_REG = (CY_FLASH_CTL_REG & ~CY_FLASH_CTL_WS_MASK) | CY_FLASH_CTL_WS_0_V
 383              		.loc 1 443 0
 384 001a 164B     		ldr	r3, .L25
 385 001c 154A     		ldr	r2, .L25
 386 001e 1268     		ldr	r2, [r2]
 387 0020 0321     		movs	r1, #3
 388 0022 8A43     		bics	r2, r1
 389 0024 1A60     		str	r2, [r3]
 390 0026 1AE0     		b	.L22
 391              	.L21:
 444:Generated_Source\PSoC4/CyFlash.c ****             } else
 445:Generated_Source\PSoC4/CyFlash.c ****             if (freq <= CY_FLASH_CTL_WS_1_FREQ_MAX)
 392              		.loc 1 445 0
 393 0028 7B68     		ldr	r3, [r7, #4]
 394 002a 202B     		cmp	r3, #32
 395 002c 08D8     		bhi	.L23
 446:Generated_Source\PSoC4/CyFlash.c ****             {
 447:Generated_Source\PSoC4/CyFlash.c ****                 CY_FLASH_CTL_REG = (CY_FLASH_CTL_REG & ~CY_FLASH_CTL_WS_MASK) | CY_FLASH_CTL_WS_1_V
 396              		.loc 1 447 0
 397 002e 114B     		ldr	r3, .L25
 398 0030 104A     		ldr	r2, .L25
 399 0032 1268     		ldr	r2, [r2]
 400 0034 0321     		movs	r1, #3
 401 0036 8A43     		bics	r2, r1
 402 0038 0121     		movs	r1, #1
 403 003a 0A43     		orrs	r2, r1
 404 003c 1A60     		str	r2, [r3]
 405 003e 0EE0     		b	.L22
 406              	.L23:
ARM GAS  C:\Users\essele\AppData\Local\Temp\ccJaopFK.s 			page 16


 448:Generated_Source\PSoC4/CyFlash.c ****             } else
 449:Generated_Source\PSoC4/CyFlash.c ****             #if (CY_IP_FMLT || CY_IP_FSLT)
 450:Generated_Source\PSoC4/CyFlash.c ****                 if (freq <= CY_FLASH_CTL_WS_2_FREQ_MAX)
 407              		.loc 1 450 0
 408 0040 7B68     		ldr	r3, [r7, #4]
 409 0042 302B     		cmp	r3, #48
 410 0044 08D8     		bhi	.L24
 451:Generated_Source\PSoC4/CyFlash.c ****                 {
 452:Generated_Source\PSoC4/CyFlash.c ****                     CY_FLASH_CTL_REG = (CY_FLASH_CTL_REG & ~CY_FLASH_CTL_WS_MASK) | CY_FLASH_CTL_WS
 411              		.loc 1 452 0
 412 0046 0B4B     		ldr	r3, .L25
 413 0048 0A4A     		ldr	r2, .L25
 414 004a 1268     		ldr	r2, [r2]
 415 004c 0321     		movs	r1, #3
 416 004e 8A43     		bics	r2, r1
 417 0050 0221     		movs	r1, #2
 418 0052 0A43     		orrs	r2, r1
 419 0054 1A60     		str	r2, [r3]
 420 0056 02E0     		b	.L22
 421              	.L24:
 453:Generated_Source\PSoC4/CyFlash.c ****                 }
 454:Generated_Source\PSoC4/CyFlash.c ****                 else
 455:Generated_Source\PSoC4/CyFlash.c ****             #endif  /* (CY_IP_FMLT || CY_IP_FSLT) */
 456:Generated_Source\PSoC4/CyFlash.c ****         #endif /* (CY_IP_CPUSS_FLASHC_PRESENT) */
 457:Generated_Source\PSoC4/CyFlash.c ****         {
 458:Generated_Source\PSoC4/CyFlash.c ****             /* Halt CPU in debug mode if frequency is invalid */
 459:Generated_Source\PSoC4/CyFlash.c ****             CYASSERT(0u != 0u);
 422              		.loc 1 459 0 discriminator 1
 423 0058 0020     		movs	r0, #0
 424 005a FFF7FEFF 		bl	CyHalt
 425              	.L22:
 460:Generated_Source\PSoC4/CyFlash.c ****         }
 461:Generated_Source\PSoC4/CyFlash.c **** 
 462:Generated_Source\PSoC4/CyFlash.c ****     #endif  /* (CY_IP_CPUSS) */
 463:Generated_Source\PSoC4/CyFlash.c **** 
 464:Generated_Source\PSoC4/CyFlash.c ****     CyExitCriticalSection(interruptState);
 426              		.loc 1 464 0
 427 005e 0F23     		movs	r3, #15
 428 0060 FB18     		adds	r3, r7, r3
 429 0062 1B78     		ldrb	r3, [r3]
 430 0064 1800     		movs	r0, r3
 431 0066 FFF7FEFF 		bl	CyExitCriticalSection
 465:Generated_Source\PSoC4/CyFlash.c **** }
 432              		.loc 1 465 0
 433 006a C046     		nop
 434 006c BD46     		mov	sp, r7
 435 006e 05B0     		add	sp, sp, #20
 436              		@ sp needed
 437 0070 90BD     		pop	{r4, r7, pc}
 438              	.L26:
 439 0072 C046     		.align	2
 440              	.L25:
 441 0074 30001040 		.word	1074790448
 442              		.cfi_endproc
 443              	.LFE2:
 444              		.size	CySysFlashSetWaitCycles, .-CySysFlashSetWaitCycles
 445              		.section	.text.CySysSFlashWriteUserRow,"ax",%progbits
ARM GAS  C:\Users\essele\AppData\Local\Temp\ccJaopFK.s 			page 17


 446              		.align	2
 447              		.global	CySysSFlashWriteUserRow
 448              		.code	16
 449              		.thumb_func
 450              		.type	CySysSFlashWriteUserRow, %function
 451              	CySysSFlashWriteUserRow:
 452              	.LFB3:
 466:Generated_Source\PSoC4/CyFlash.c **** 
 467:Generated_Source\PSoC4/CyFlash.c **** 
 468:Generated_Source\PSoC4/CyFlash.c **** #if (CY_SFLASH_XTRA_ROWS)
 469:Generated_Source\PSoC4/CyFlash.c **** /*******************************************************************************
 470:Generated_Source\PSoC4/CyFlash.c **** * Function Name: CySysSFlashWriteUserRow
 471:Generated_Source\PSoC4/CyFlash.c **** ****************************************************************************//**
 472:Generated_Source\PSoC4/CyFlash.c **** *
 473:Generated_Source\PSoC4/CyFlash.c **** * Writes data to a row of SFlash user configurable area.
 474:Generated_Source\PSoC4/CyFlash.c **** *
 475:Generated_Source\PSoC4/CyFlash.c **** * This API is applicable for PSoC 4100 BLE, PSoC 4200 BLE, PSoC 4100M,
 476:Generated_Source\PSoC4/CyFlash.c **** * PSoC 4200M, and PSoC 4200L family of devices.
 477:Generated_Source\PSoC4/CyFlash.c **** *
 478:Generated_Source\PSoC4/CyFlash.c **** * \param rowNum The flash row number. The flash row number. The number of the
 479:Generated_Source\PSoC4/CyFlash.c **** * flash rows is defined by the CY_SFLASH_NUMBER_USERROWS macro for the selected
 480:Generated_Source\PSoC4/CyFlash.c **** * device. Valid range is 0-3. Refer to the device TRM for details.
 481:Generated_Source\PSoC4/CyFlash.c **** *
 482:Generated_Source\PSoC4/CyFlash.c **** * \param rowData Array of bytes to write. The size of the array must be equal to
 483:Generated_Source\PSoC4/CyFlash.c **** * the flash row size. The flash row size for the selected device is defined by
 484:Generated_Source\PSoC4/CyFlash.c **** * the \ref CY_SFLASH_SIZEOF_USERROW macro. Refer to the device TRM for the
 485:Generated_Source\PSoC4/CyFlash.c **** * details.
 486:Generated_Source\PSoC4/CyFlash.c **** *
 487:Generated_Source\PSoC4/CyFlash.c **** * \return \ref group_flash_status_codes
 488:Generated_Source\PSoC4/CyFlash.c **** *
 489:Generated_Source\PSoC4/CyFlash.c **** *******************************************************************************/
 490:Generated_Source\PSoC4/CyFlash.c **** uint32 CySysSFlashWriteUserRow(uint32 rowNum, const uint8 rowData[])
 491:Generated_Source\PSoC4/CyFlash.c **** {
 453              		.loc 1 491 0
 454              		.cfi_startproc
 455              		@ args = 0, pretend = 0, frame = 288
 456              		@ frame_needed = 1, uses_anonymous_args = 0
 457 0000 90B5     		push	{r4, r7, lr}
 458              		.cfi_def_cfa_offset 12
 459              		.cfi_offset 4, -12
 460              		.cfi_offset 7, -8
 461              		.cfi_offset 14, -4
 462 0002 C9B0     		sub	sp, sp, #292
 463              		.cfi_def_cfa_offset 304
 464 0004 00AF     		add	r7, sp, #0
 465              		.cfi_def_cfa_register 7
 466 0006 7860     		str	r0, [r7, #4]
 467 0008 3960     		str	r1, [r7]
 492:Generated_Source\PSoC4/CyFlash.c ****     volatile uint32 retValue = CY_SYS_FLASH_SUCCESS;
 468              		.loc 1 492 0
 469 000a 0023     		movs	r3, #0
 470 000c 8C22     		movs	r2, #140
 471 000e 5200     		lsls	r2, r2, #1
 472 0010 BA18     		adds	r2, r7, r2
 473 0012 1360     		str	r3, [r2]
 493:Generated_Source\PSoC4/CyFlash.c ****     volatile uint32 clkCnfRetValue = CY_SYS_FLASH_SUCCESS;
 474              		.loc 1 493 0
ARM GAS  C:\Users\essele\AppData\Local\Temp\ccJaopFK.s 			page 18


 475 0014 0023     		movs	r3, #0
 476 0016 8A22     		movs	r2, #138
 477 0018 5200     		lsls	r2, r2, #1
 478 001a BA18     		adds	r2, r7, r2
 479 001c 1360     		str	r3, [r2]
 494:Generated_Source\PSoC4/CyFlash.c ****     volatile uint32 parameters[(CY_FLASH_SIZEOF_ROW + CY_FLASH_SRAM_ROM_DATA)/4u];
 495:Generated_Source\PSoC4/CyFlash.c ****     uint8  interruptState;
 496:Generated_Source\PSoC4/CyFlash.c **** 
 497:Generated_Source\PSoC4/CyFlash.c **** 
 498:Generated_Source\PSoC4/CyFlash.c ****     if ((rowNum < CY_SFLASH_NUMBER_USERROWS) && (rowData != 0u))
 480              		.loc 1 498 0
 481 001e 7B68     		ldr	r3, [r7, #4]
 482 0020 032B     		cmp	r3, #3
 483 0022 00D9     		bls	.LCB401
 484 0024 AFE0     		b	.L28	@long jump
 485              	.LCB401:
 486              		.loc 1 498 0 is_stmt 0 discriminator 1
 487 0026 3B68     		ldr	r3, [r7]
 488 0028 002B     		cmp	r3, #0
 489 002a 00D1     		bne	.LCB404
 490 002c ABE0     		b	.L28	@long jump
 491              	.LCB404:
 499:Generated_Source\PSoC4/CyFlash.c ****     {
 500:Generated_Source\PSoC4/CyFlash.c ****         /* Load Flash Bytes */
 501:Generated_Source\PSoC4/CyFlash.c ****         parameters[0u] = (uint32) (CY_FLASH_GET_MACRO_FROM_ROW(rowNum)        << CY_FLASH_PARAM_MAC
 502:Generated_Source\PSoC4/CyFlash.c ****                          (uint32) (CY_FLASH_PAGE_LATCH_START_ADDR             << CY_FLASH_PARAM_ADD
 503:Generated_Source\PSoC4/CyFlash.c ****                          (uint32) (CY_FLASH_KEY_TWO(CY_FLASH_API_OPCODE_LOAD) << CY_FLASH_PARAM_KEY
 492              		.loc 1 503 0 is_stmt 1
 493 002e 7B68     		ldr	r3, [r7, #4]
 494 0030 5B4A     		ldr	r2, .L44
 495 0032 9342     		cmp	r3, r2
 496 0034 01D9     		bls	.L29
 497              		.loc 1 503 0 is_stmt 0 discriminator 1
 498 0036 5B4A     		ldr	r2, .L44+4
 499 0038 00E0     		b	.L30
 500              	.L29:
 501              		.loc 1 503 0 discriminator 2
 502 003a 5B4A     		ldr	r2, .L44+8
 503              	.L30:
 501:Generated_Source\PSoC4/CyFlash.c ****                          (uint32) (CY_FLASH_PAGE_LATCH_START_ADDR             << CY_FLASH_PARAM_ADD
 504              		.loc 1 501 0 is_stmt 1
 505 003c 5B4B     		ldr	r3, .L44+12
 506 003e 9021     		movs	r1, #144
 507 0040 4900     		lsls	r1, r1, #1
 508 0042 8C46     		mov	ip, r1
 509 0044 BC44     		add	ip, ip, r7
 510 0046 6344     		add	r3, r3, ip
 511 0048 1A60     		str	r2, [r3]
 504:Generated_Source\PSoC4/CyFlash.c ****                          CY_FLASH_KEY_ONE;
 505:Generated_Source\PSoC4/CyFlash.c ****         parameters[1u] = CY_FLASH_SIZEOF_ROW - 1u;
 512              		.loc 1 505 0
 513 004a 584B     		ldr	r3, .L44+12
 514 004c 9022     		movs	r2, #144
 515 004e 5200     		lsls	r2, r2, #1
 516 0050 9446     		mov	ip, r2
 517 0052 BC44     		add	ip, ip, r7
 518 0054 6344     		add	r3, r3, ip
ARM GAS  C:\Users\essele\AppData\Local\Temp\ccJaopFK.s 			page 19


 519 0056 FF22     		movs	r2, #255
 520 0058 5A60     		str	r2, [r3, #4]
 506:Generated_Source\PSoC4/CyFlash.c **** 
 507:Generated_Source\PSoC4/CyFlash.c ****         (void)memcpy((void *)&parameters[2u], rowData, CY_FLASH_SIZEOF_ROW);
 521              		.loc 1 507 0
 522 005a 8023     		movs	r3, #128
 523 005c 5A00     		lsls	r2, r3, #1
 524 005e 3968     		ldr	r1, [r7]
 525 0060 0C23     		movs	r3, #12
 526 0062 FB18     		adds	r3, r7, r3
 527 0064 0833     		adds	r3, r3, #8
 528 0066 1800     		movs	r0, r3
 529 0068 FFF7FEFF 		bl	memcpy
 508:Generated_Source\PSoC4/CyFlash.c ****         CY_FLASH_CPUSS_SYSARG_REG = (uint32) &parameters[0u];
 530              		.loc 1 508 0
 531 006c 504B     		ldr	r3, .L44+16
 532 006e 0C22     		movs	r2, #12
 533 0070 BA18     		adds	r2, r7, r2
 534 0072 1A60     		str	r2, [r3]
 509:Generated_Source\PSoC4/CyFlash.c ****         CY_FLASH_CPUSS_SYSREQ_REG = CY_FLASH_CPUSS_REQ_START | CY_FLASH_API_OPCODE_LOAD;
 535              		.loc 1 509 0
 536 0074 4F4B     		ldr	r3, .L44+20
 537 0076 504A     		ldr	r2, .L44+24
 538 0078 1A60     		str	r2, [r3]
 510:Generated_Source\PSoC4/CyFlash.c ****         CY_NOP;
 539              		.loc 1 510 0
 540              		.syntax divided
 541              	@ 510 "Generated_Source\PSoC4\CyFlash.c" 1
 542 007a C046     		NOP
 543              	
 544              	@ 0 "" 2
 511:Generated_Source\PSoC4/CyFlash.c ****         retValue = CY_FLASH_API_RETURN;
 545              		.loc 1 511 0
 546              		.thumb
 547              		.syntax unified
 548 007c 4C4B     		ldr	r3, .L44+16
 549 007e 1B68     		ldr	r3, [r3]
 550 0080 1B0F     		lsrs	r3, r3, #28
 551 0082 1A07     		lsls	r2, r3, #28
 552 0084 F023     		movs	r3, #240
 553 0086 1B06     		lsls	r3, r3, #24
 554 0088 9A42     		cmp	r2, r3
 555 008a 04D1     		bne	.L31
 556              		.loc 1 511 0 is_stmt 0 discriminator 1
 557 008c 484B     		ldr	r3, .L44+16
 558 008e 1B68     		ldr	r3, [r3]
 559 0090 FF22     		movs	r2, #255
 560 0092 1340     		ands	r3, r2
 561 0094 0DE0     		b	.L32
 562              	.L31:
 563              		.loc 1 511 0 discriminator 2
 564 0096 464B     		ldr	r3, .L44+16
 565 0098 1B68     		ldr	r3, [r3]
 566 009a 1B0F     		lsrs	r3, r3, #28
 567 009c 1A07     		lsls	r2, r3, #28
 568 009e A023     		movs	r3, #160
 569 00a0 1B06     		lsls	r3, r3, #24
ARM GAS  C:\Users\essele\AppData\Local\Temp\ccJaopFK.s 			page 20


 570 00a2 9A42     		cmp	r2, r3
 571 00a4 04D0     		beq	.L33
 572              		.loc 1 511 0 discriminator 4
 573 00a6 424B     		ldr	r3, .L44+16
 574 00a8 1B68     		ldr	r3, [r3]
 575 00aa FF22     		movs	r2, #255
 576 00ac 1340     		ands	r3, r2
 577 00ae 00E0     		b	.L32
 578              	.L33:
 579              		.loc 1 511 0 discriminator 5
 580 00b0 0023     		movs	r3, #0
 581              	.L32:
 582              		.loc 1 511 0 discriminator 8
 583 00b2 8C22     		movs	r2, #140
 584 00b4 5200     		lsls	r2, r2, #1
 585 00b6 BA18     		adds	r2, r7, r2
 586 00b8 1360     		str	r3, [r2]
 512:Generated_Source\PSoC4/CyFlash.c **** 
 513:Generated_Source\PSoC4/CyFlash.c ****         if(retValue == CY_SYS_FLASH_SUCCESS)
 587              		.loc 1 513 0 is_stmt 1 discriminator 8
 588 00ba 8C23     		movs	r3, #140
 589 00bc 5B00     		lsls	r3, r3, #1
 590 00be FB18     		adds	r3, r7, r3
 591 00c0 1B68     		ldr	r3, [r3]
 592 00c2 002B     		cmp	r3, #0
 593 00c4 64D1     		bne	.L42
 514:Generated_Source\PSoC4/CyFlash.c ****         {
 515:Generated_Source\PSoC4/CyFlash.c ****             /***************************************************************
 516:Generated_Source\PSoC4/CyFlash.c ****             * Mask all the exceptions to guarantee that Flash write will
 517:Generated_Source\PSoC4/CyFlash.c ****             * occur in the atomic way. It will not affect system call
 518:Generated_Source\PSoC4/CyFlash.c ****             * execution (flash row write) since it is executed in the NMI
 519:Generated_Source\PSoC4/CyFlash.c ****             * context.
 520:Generated_Source\PSoC4/CyFlash.c ****             ***************************************************************/
 521:Generated_Source\PSoC4/CyFlash.c ****             interruptState = CyEnterCriticalSection();
 594              		.loc 1 521 0
 595 00c6 2023     		movs	r3, #32
 596 00c8 FF33     		adds	r3, r3, #255
 597 00ca FC18     		adds	r4, r7, r3
 598 00cc FFF7FEFF 		bl	CyEnterCriticalSection
 599 00d0 0300     		movs	r3, r0
 600 00d2 2370     		strb	r3, [r4]
 522:Generated_Source\PSoC4/CyFlash.c **** 
 523:Generated_Source\PSoC4/CyFlash.c ****             clkCnfRetValue = CySysFlashClockBackup();
 601              		.loc 1 523 0
 602 00d4 FFF7FEFF 		bl	CySysFlashClockBackup
 603 00d8 0300     		movs	r3, r0
 604 00da 8A22     		movs	r2, #138
 605 00dc 5200     		lsls	r2, r2, #1
 606 00de BA18     		adds	r2, r7, r2
 607 00e0 1360     		str	r3, [r2]
 524:Generated_Source\PSoC4/CyFlash.c **** 
 525:Generated_Source\PSoC4/CyFlash.c ****         #if(CY_IP_SPCIF_SYNCHRONOUS)
 526:Generated_Source\PSoC4/CyFlash.c ****             if(clkCnfRetValue == CY_SYS_FLASH_SUCCESS)
 527:Generated_Source\PSoC4/CyFlash.c ****             {
 528:Generated_Source\PSoC4/CyFlash.c ****                 retValue = CySysFlashClockConfig();
 529:Generated_Source\PSoC4/CyFlash.c ****             }
 530:Generated_Source\PSoC4/CyFlash.c ****         #endif  /* (CY_IP_SPCIF_SYNCHRONOUS) */
ARM GAS  C:\Users\essele\AppData\Local\Temp\ccJaopFK.s 			page 21


 531:Generated_Source\PSoC4/CyFlash.c **** 
 532:Generated_Source\PSoC4/CyFlash.c ****             if(retValue == CY_SYS_FLASH_SUCCESS)
 608              		.loc 1 532 0
 609 00e2 8C23     		movs	r3, #140
 610 00e4 5B00     		lsls	r3, r3, #1
 611 00e6 FB18     		adds	r3, r7, r3
 612 00e8 1B68     		ldr	r3, [r3]
 613 00ea 002B     		cmp	r3, #0
 614 00ec 36D1     		bne	.L36
 533:Generated_Source\PSoC4/CyFlash.c ****             {
 534:Generated_Source\PSoC4/CyFlash.c ****                 /* Write User Sflash Row */
 535:Generated_Source\PSoC4/CyFlash.c ****                 parameters[0u]  = (uint32) (((uint32) CY_FLASH_KEY_TWO(CY_FLASH_API_OPCODE_WRITE_SF
 615              		.loc 1 535 0
 616 00ee 2F4B     		ldr	r3, .L44+12
 617 00f0 9022     		movs	r2, #144
 618 00f2 5200     		lsls	r2, r2, #1
 619 00f4 9446     		mov	ip, r2
 620 00f6 BC44     		add	ip, ip, r7
 621 00f8 6344     		add	r3, r3, ip
 622 00fa 304A     		ldr	r2, .L44+28
 623 00fc 1A60     		str	r2, [r3]
 536:Generated_Source\PSoC4/CyFlash.c ****                 parameters[1u] = (uint32) rowNum;
 624              		.loc 1 536 0
 625 00fe 2B4B     		ldr	r3, .L44+12
 626 0100 9022     		movs	r2, #144
 627 0102 5200     		lsls	r2, r2, #1
 628 0104 9446     		mov	ip, r2
 629 0106 BC44     		add	ip, ip, r7
 630 0108 6344     		add	r3, r3, ip
 631 010a 7A68     		ldr	r2, [r7, #4]
 632 010c 5A60     		str	r2, [r3, #4]
 537:Generated_Source\PSoC4/CyFlash.c **** 
 538:Generated_Source\PSoC4/CyFlash.c ****                 CY_FLASH_CPUSS_SYSARG_REG = (uint32) &parameters[0u];
 633              		.loc 1 538 0
 634 010e 284B     		ldr	r3, .L44+16
 635 0110 0C22     		movs	r2, #12
 636 0112 BA18     		adds	r2, r7, r2
 637 0114 1A60     		str	r2, [r3]
 539:Generated_Source\PSoC4/CyFlash.c ****                 CY_FLASH_CPUSS_SYSREQ_REG = CY_FLASH_CPUSS_REQ_START | CY_FLASH_API_OPCODE_WRITE_SF
 638              		.loc 1 539 0
 639 0116 274B     		ldr	r3, .L44+20
 640 0118 294A     		ldr	r2, .L44+32
 641 011a 1A60     		str	r2, [r3]
 540:Generated_Source\PSoC4/CyFlash.c ****                 CY_NOP;
 642              		.loc 1 540 0
 643              		.syntax divided
 644              	@ 540 "Generated_Source\PSoC4\CyFlash.c" 1
 645 011c C046     		NOP
 646              	
 647              	@ 0 "" 2
 541:Generated_Source\PSoC4/CyFlash.c ****                 retValue = CY_FLASH_API_RETURN;
 648              		.loc 1 541 0
 649              		.thumb
 650              		.syntax unified
 651 011e 244B     		ldr	r3, .L44+16
 652 0120 1B68     		ldr	r3, [r3]
 653 0122 1B0F     		lsrs	r3, r3, #28
ARM GAS  C:\Users\essele\AppData\Local\Temp\ccJaopFK.s 			page 22


 654 0124 1A07     		lsls	r2, r3, #28
 655 0126 F023     		movs	r3, #240
 656 0128 1B06     		lsls	r3, r3, #24
 657 012a 9A42     		cmp	r2, r3
 658 012c 04D1     		bne	.L37
 659              		.loc 1 541 0 is_stmt 0 discriminator 1
 660 012e 204B     		ldr	r3, .L44+16
 661 0130 1B68     		ldr	r3, [r3]
 662 0132 FF22     		movs	r2, #255
 663 0134 1340     		ands	r3, r2
 664 0136 0DE0     		b	.L38
 665              	.L37:
 666              		.loc 1 541 0 discriminator 2
 667 0138 1D4B     		ldr	r3, .L44+16
 668 013a 1B68     		ldr	r3, [r3]
 669 013c 1B0F     		lsrs	r3, r3, #28
 670 013e 1A07     		lsls	r2, r3, #28
 671 0140 A023     		movs	r3, #160
 672 0142 1B06     		lsls	r3, r3, #24
 673 0144 9A42     		cmp	r2, r3
 674 0146 04D0     		beq	.L39
 675              		.loc 1 541 0 discriminator 4
 676 0148 194B     		ldr	r3, .L44+16
 677 014a 1B68     		ldr	r3, [r3]
 678 014c FF22     		movs	r2, #255
 679 014e 1340     		ands	r3, r2
 680 0150 00E0     		b	.L38
 681              	.L39:
 682              		.loc 1 541 0 discriminator 5
 683 0152 0023     		movs	r3, #0
 684              	.L38:
 685              		.loc 1 541 0 discriminator 8
 686 0154 8C22     		movs	r2, #140
 687 0156 5200     		lsls	r2, r2, #1
 688 0158 BA18     		adds	r2, r7, r2
 689 015a 1360     		str	r3, [r2]
 690              	.L36:
 542:Generated_Source\PSoC4/CyFlash.c ****             }
 543:Generated_Source\PSoC4/CyFlash.c **** 
 544:Generated_Source\PSoC4/CyFlash.c ****             if(clkCnfRetValue == CY_SYS_FLASH_SUCCESS)
 691              		.loc 1 544 0 is_stmt 1
 692 015c 8A23     		movs	r3, #138
 693 015e 5B00     		lsls	r3, r3, #1
 694 0160 FB18     		adds	r3, r7, r3
 695 0162 1B68     		ldr	r3, [r3]
 696 0164 002B     		cmp	r3, #0
 697 0166 06D1     		bne	.L41
 545:Generated_Source\PSoC4/CyFlash.c ****             {
 546:Generated_Source\PSoC4/CyFlash.c ****                 clkCnfRetValue = CySysFlashClockRestore();
 698              		.loc 1 546 0
 699 0168 FFF7FEFF 		bl	CySysFlashClockRestore
 700 016c 0300     		movs	r3, r0
 701 016e 8A22     		movs	r2, #138
 702 0170 5200     		lsls	r2, r2, #1
 703 0172 BA18     		adds	r2, r7, r2
 704 0174 1360     		str	r3, [r2]
 705              	.L41:
ARM GAS  C:\Users\essele\AppData\Local\Temp\ccJaopFK.s 			page 23


 547:Generated_Source\PSoC4/CyFlash.c ****             }
 548:Generated_Source\PSoC4/CyFlash.c ****             CyExitCriticalSection(interruptState);
 706              		.loc 1 548 0
 707 0176 2023     		movs	r3, #32
 708 0178 FF33     		adds	r3, r3, #255
 709 017a FB18     		adds	r3, r7, r3
 710 017c 1B78     		ldrb	r3, [r3]
 711 017e 1800     		movs	r0, r3
 712 0180 FFF7FEFF 		bl	CyExitCriticalSection
 513:Generated_Source\PSoC4/CyFlash.c ****         {
 713              		.loc 1 513 0
 714 0184 04E0     		b	.L42
 715              	.L28:
 549:Generated_Source\PSoC4/CyFlash.c ****         }
 550:Generated_Source\PSoC4/CyFlash.c ****     }
 551:Generated_Source\PSoC4/CyFlash.c ****     else
 552:Generated_Source\PSoC4/CyFlash.c ****     {
 553:Generated_Source\PSoC4/CyFlash.c ****         retValue = CY_SYS_FLASH_INVALID_ADDR;
 716              		.loc 1 553 0
 717 0186 0423     		movs	r3, #4
 718 0188 8C22     		movs	r2, #140
 719 018a 5200     		lsls	r2, r2, #1
 720 018c BA18     		adds	r2, r7, r2
 721 018e 1360     		str	r3, [r2]
 722              	.L42:
 554:Generated_Source\PSoC4/CyFlash.c ****     }
 555:Generated_Source\PSoC4/CyFlash.c **** 
 556:Generated_Source\PSoC4/CyFlash.c ****     return (retValue);
 723              		.loc 1 556 0
 724 0190 8C23     		movs	r3, #140
 725 0192 5B00     		lsls	r3, r3, #1
 726 0194 FB18     		adds	r3, r7, r3
 727 0196 1B68     		ldr	r3, [r3]
 557:Generated_Source\PSoC4/CyFlash.c **** }
 728              		.loc 1 557 0
 729 0198 1800     		movs	r0, r3
 730 019a BD46     		mov	sp, r7
 731 019c 49B0     		add	sp, sp, #292
 732              		@ sp needed
 733 019e 90BD     		pop	{r4, r7, pc}
 734              	.L45:
 735              		.align	2
 736              	.L44:
 737 01a0 FF010000 		.word	511
 738 01a4 B6D70001 		.word	16832438
 739 01a8 B6D70000 		.word	55222
 740 01ac ECFEFFFF 		.word	-276
 741 01b0 08001040 		.word	1074790408
 742 01b4 04001040 		.word	1074790404
 743 01b8 04000080 		.word	-2147483644
 744 01bc B6EB0000 		.word	60342
 745 01c0 18000080 		.word	-2147483624
 746              		.cfi_endproc
 747              	.LFE3:
 748              		.size	CySysSFlashWriteUserRow, .-CySysSFlashWriteUserRow
 749              		.section	.text.CySysFlashClockBackup,"ax",%progbits
 750              		.align	2
ARM GAS  C:\Users\essele\AppData\Local\Temp\ccJaopFK.s 			page 24


 751              		.code	16
 752              		.thumb_func
 753              		.type	CySysFlashClockBackup, %function
 754              	CySysFlashClockBackup:
 755              	.LFB4:
 558:Generated_Source\PSoC4/CyFlash.c **** #endif /* (CY_SFLASH_XTRA_ROWS) */
 559:Generated_Source\PSoC4/CyFlash.c **** 
 560:Generated_Source\PSoC4/CyFlash.c **** 
 561:Generated_Source\PSoC4/CyFlash.c **** /*******************************************************************************
 562:Generated_Source\PSoC4/CyFlash.c **** * Function Name: CySysFlashClockBackup
 563:Generated_Source\PSoC4/CyFlash.c **** ****************************************************************************//**
 564:Generated_Source\PSoC4/CyFlash.c **** *
 565:Generated_Source\PSoC4/CyFlash.c **** * Backups the device clock configuration.
 566:Generated_Source\PSoC4/CyFlash.c **** *
 567:Generated_Source\PSoC4/CyFlash.c **** * \return The same as \ref CySysFlashWriteRow().
 568:Generated_Source\PSoC4/CyFlash.c **** *
 569:Generated_Source\PSoC4/CyFlash.c **** *******************************************************************************/
 570:Generated_Source\PSoC4/CyFlash.c **** static cystatus CySysFlashClockBackup(void)
 571:Generated_Source\PSoC4/CyFlash.c **** {
 756              		.loc 1 571 0
 757              		.cfi_startproc
 758              		@ args = 0, pretend = 0, frame = 8
 759              		@ frame_needed = 1, uses_anonymous_args = 0
 760 0000 80B5     		push	{r7, lr}
 761              		.cfi_def_cfa_offset 8
 762              		.cfi_offset 7, -8
 763              		.cfi_offset 14, -4
 764 0002 82B0     		sub	sp, sp, #8
 765              		.cfi_def_cfa_offset 16
 766 0004 00AF     		add	r7, sp, #0
 767              		.cfi_def_cfa_register 7
 572:Generated_Source\PSoC4/CyFlash.c ****     cystatus retValue = CY_SYS_FLASH_SUCCESS;
 768              		.loc 1 572 0
 769 0006 0023     		movs	r3, #0
 770 0008 7B60     		str	r3, [r7, #4]
 573:Generated_Source\PSoC4/CyFlash.c **** #if(!CY_IP_FM)
 574:Generated_Source\PSoC4/CyFlash.c ****     #if !(CY_PSOC4_4000)
 575:Generated_Source\PSoC4/CyFlash.c ****         #if (CY_IP_SPCIF_SYNCHRONOUS)
 576:Generated_Source\PSoC4/CyFlash.c ****             volatile uint32   parameters[2u];
 577:Generated_Source\PSoC4/CyFlash.c ****         #endif /* (CY_IP_SPCIF_SYNCHRONOUS) */
 578:Generated_Source\PSoC4/CyFlash.c ****     #endif  /* !(CY_PSOC4_4000) */
 579:Generated_Source\PSoC4/CyFlash.c **** #endif  /* (!CY_IP_FM) */
 580:Generated_Source\PSoC4/CyFlash.c **** 
 581:Generated_Source\PSoC4/CyFlash.c **** #if(CY_IP_FM)
 582:Generated_Source\PSoC4/CyFlash.c **** 
 583:Generated_Source\PSoC4/CyFlash.c ****     /***************************************************************
 584:Generated_Source\PSoC4/CyFlash.c ****     * Preserve IMO configuration that could be changed during
 585:Generated_Source\PSoC4/CyFlash.c ****     * system call execution (Cypress ID #150448).
 586:Generated_Source\PSoC4/CyFlash.c ****     ***************************************************************/
 587:Generated_Source\PSoC4/CyFlash.c ****     cySysFlashBackup.imoConfigReg = CY_SYS_CLK_IMO_CONFIG_REG;
 588:Generated_Source\PSoC4/CyFlash.c **** 
 589:Generated_Source\PSoC4/CyFlash.c **** #else   /* (CY_IP_FMLT) */
 590:Generated_Source\PSoC4/CyFlash.c **** 
 591:Generated_Source\PSoC4/CyFlash.c ****     #if (CY_PSOC4_4000)
 592:Generated_Source\PSoC4/CyFlash.c **** 
 593:Generated_Source\PSoC4/CyFlash.c ****         /***************************************************************************
 594:Generated_Source\PSoC4/CyFlash.c ****         * Perform firmware clock settings backup for the PSOC4 4000 devices (the
ARM GAS  C:\Users\essele\AppData\Local\Temp\ccJaopFK.s 			page 25


 595:Generated_Source\PSoC4/CyFlash.c ****         * corresponding system call is not available).
 596:Generated_Source\PSoC4/CyFlash.c ****         ***************************************************************************/
 597:Generated_Source\PSoC4/CyFlash.c **** 
 598:Generated_Source\PSoC4/CyFlash.c ****         /***************************************************************************
 599:Generated_Source\PSoC4/CyFlash.c ****         * The registers listed below are modified by CySysFlashClockConfig().
 600:Generated_Source\PSoC4/CyFlash.c ****         *
 601:Generated_Source\PSoC4/CyFlash.c ****         * The registers to be saved:
 602:Generated_Source\PSoC4/CyFlash.c ****         * - CY_SYS_CLK_IMO_CONFIG_REG - IMO enable state.
 603:Generated_Source\PSoC4/CyFlash.c ****         * - CY_SYS_CLK_SELECT_REG     - HFCLK source, divider, pump source. Save
 604:Generated_Source\PSoC4/CyFlash.c ****         *                               entire register as it can be directly
 605:Generated_Source\PSoC4/CyFlash.c ****         *                               written on restore (no special
 606:Generated_Source\PSoC4/CyFlash.c ****         *                               requirements).
 607:Generated_Source\PSoC4/CyFlash.c ****         * - CY_SYS_CLK_IMO_SELECT_REG - Save IMO frequency.
 608:Generated_Source\PSoC4/CyFlash.c ****         *
 609:Generated_Source\PSoC4/CyFlash.c ****         * The registers not to be saved:
 610:Generated_Source\PSoC4/CyFlash.c ****         * - CY_SYS_CLK_IMO_TRIM1_REG  - No need to save. Function of frequency.
 611:Generated_Source\PSoC4/CyFlash.c ****         *                               Restored by CySysClkWriteImoFreq().
 612:Generated_Source\PSoC4/CyFlash.c ****         * - CY_SYS_CLK_IMO_TRIM3_REG  - No need to save. Function of frequency.
 613:Generated_Source\PSoC4/CyFlash.c ****         *                               Restored by CySysClkWriteImoFreq().
 614:Generated_Source\PSoC4/CyFlash.c ****         * - REG_CPUSS_FLASH_CTL       - Flash wait cycles. Unmodified due to system
 615:Generated_Source\PSoC4/CyFlash.c ****         *                               clock 16 MHz limit.
 616:Generated_Source\PSoC4/CyFlash.c ****         ***************************************************************************/
 617:Generated_Source\PSoC4/CyFlash.c **** 
 618:Generated_Source\PSoC4/CyFlash.c ****         cySysFlashBackup.clkSelectReg = CY_SYS_CLK_SELECT_REG;
 619:Generated_Source\PSoC4/CyFlash.c ****         cySysFlashBackup.clkImoEna    = CY_SYS_CLK_IMO_CONFIG_REG & CY_SYS_CLK_IMO_CONFIG_ENABLE;
 620:Generated_Source\PSoC4/CyFlash.c ****         cySysFlashBackup.clkImoFreq   = CY_SYS_CLK_IMO_MIN_FREQ_MHZ + (CY_SYS_CLK_IMO_SELECT_REG <<
 621:Generated_Source\PSoC4/CyFlash.c **** 
 622:Generated_Source\PSoC4/CyFlash.c ****     #else
 623:Generated_Source\PSoC4/CyFlash.c **** 
 624:Generated_Source\PSoC4/CyFlash.c ****         #if (CY_IP_SPCIF_SYNCHRONOUS)
 625:Generated_Source\PSoC4/CyFlash.c ****             /* FM-Lite Clock Backup System Call */
 626:Generated_Source\PSoC4/CyFlash.c ****             parameters[0u] =
 627:Generated_Source\PSoC4/CyFlash.c ****                 (uint32) ((CY_FLASH_KEY_TWO(CY_FLASH_API_OPCODE_CLK_BACKUP) <<  CY_FLASH_PARAM_KEY_
 628:Generated_Source\PSoC4/CyFlash.c ****                             CY_FLASH_KEY_ONE);
 629:Generated_Source\PSoC4/CyFlash.c ****             parameters[1u] = (uint32) &cySysFlashBackup.clockSettings[0u];
 630:Generated_Source\PSoC4/CyFlash.c ****             CY_FLASH_CPUSS_SYSARG_REG = (uint32) &parameters[0u];
 631:Generated_Source\PSoC4/CyFlash.c ****             CY_FLASH_CPUSS_SYSREQ_REG = CY_FLASH_CPUSS_REQ_START | CY_FLASH_API_OPCODE_CLK_BACKUP;
 632:Generated_Source\PSoC4/CyFlash.c ****             CY_NOP;
 633:Generated_Source\PSoC4/CyFlash.c ****             retValue = CY_FLASH_API_RETURN;
 634:Generated_Source\PSoC4/CyFlash.c ****         #endif /* (CY_IP_SPCIF_SYNCHRONOUS) */
 635:Generated_Source\PSoC4/CyFlash.c **** 
 636:Generated_Source\PSoC4/CyFlash.c ****     #endif  /* (CY_PSOC4_4000) */
 637:Generated_Source\PSoC4/CyFlash.c **** 
 638:Generated_Source\PSoC4/CyFlash.c **** #endif  /* (CY_IP_FM) */
 639:Generated_Source\PSoC4/CyFlash.c **** 
 640:Generated_Source\PSoC4/CyFlash.c ****     return (retValue);
 771              		.loc 1 640 0
 772 000a 7B68     		ldr	r3, [r7, #4]
 641:Generated_Source\PSoC4/CyFlash.c **** }
 773              		.loc 1 641 0
 774 000c 1800     		movs	r0, r3
 775 000e BD46     		mov	sp, r7
 776 0010 02B0     		add	sp, sp, #8
 777              		@ sp needed
 778 0012 80BD     		pop	{r7, pc}
 779              		.cfi_endproc
 780              	.LFE4:
ARM GAS  C:\Users\essele\AppData\Local\Temp\ccJaopFK.s 			page 26


 781              		.size	CySysFlashClockBackup, .-CySysFlashClockBackup
 782              		.section	.text.CySysFlashClockRestore,"ax",%progbits
 783              		.align	2
 784              		.code	16
 785              		.thumb_func
 786              		.type	CySysFlashClockRestore, %function
 787              	CySysFlashClockRestore:
 788              	.LFB5:
 642:Generated_Source\PSoC4/CyFlash.c **** 
 643:Generated_Source\PSoC4/CyFlash.c **** 
 644:Generated_Source\PSoC4/CyFlash.c **** #if(CY_IP_SPCIF_SYNCHRONOUS)
 645:Generated_Source\PSoC4/CyFlash.c **** /*******************************************************************************
 646:Generated_Source\PSoC4/CyFlash.c **** * Function Name: CySysFlashClockConfig
 647:Generated_Source\PSoC4/CyFlash.c **** ****************************************************************************//**
 648:Generated_Source\PSoC4/CyFlash.c **** *
 649:Generated_Source\PSoC4/CyFlash.c **** * Configures the device clocks for the flash writing.
 650:Generated_Source\PSoC4/CyFlash.c **** *
 651:Generated_Source\PSoC4/CyFlash.c **** * \return The same as \ref CySysFlashWriteRow().
 652:Generated_Source\PSoC4/CyFlash.c **** *
 653:Generated_Source\PSoC4/CyFlash.c **** *******************************************************************************/
 654:Generated_Source\PSoC4/CyFlash.c **** static cystatus CySysFlashClockConfig(void)
 655:Generated_Source\PSoC4/CyFlash.c **** {
 656:Generated_Source\PSoC4/CyFlash.c ****     cystatus retValue = CY_SYS_FLASH_SUCCESS;
 657:Generated_Source\PSoC4/CyFlash.c **** 
 658:Generated_Source\PSoC4/CyFlash.c ****     /***************************************************************************
 659:Generated_Source\PSoC4/CyFlash.c ****     * The FM-Lite IP uses the IMO at 48MHz for the pump clock and SPC timer
 660:Generated_Source\PSoC4/CyFlash.c ****     * clock. The PUMP_SEL and HF clock must be set to IMO before calling Flash
 661:Generated_Source\PSoC4/CyFlash.c ****     * write or erase operation.
 662:Generated_Source\PSoC4/CyFlash.c ****     ***************************************************************************/
 663:Generated_Source\PSoC4/CyFlash.c **** #if (CY_PSOC4_4000)
 664:Generated_Source\PSoC4/CyFlash.c **** 
 665:Generated_Source\PSoC4/CyFlash.c ****     /***************************************************************************
 666:Generated_Source\PSoC4/CyFlash.c ****     * Perform firmware clock settings setup for the PSOC4 4000 devices (the
 667:Generated_Source\PSoC4/CyFlash.c ****     * corresponding system call is not reliable):
 668:Generated_Source\PSoC4/CyFlash.c ****     * - The IMO frequency should be 48 MHz
 669:Generated_Source\PSoC4/CyFlash.c ****     * - The IMO should be source for the HFCLK
 670:Generated_Source\PSoC4/CyFlash.c ****     * - The IMO should be the source for the charge pump clock
 671:Generated_Source\PSoC4/CyFlash.c ****     *
 672:Generated_Source\PSoC4/CyFlash.c ****     * Note The structure members used below are initialized by
 673:Generated_Source\PSoC4/CyFlash.c ****     * the CySysFlashClockBackup() function.
 674:Generated_Source\PSoC4/CyFlash.c ****     ***************************************************************************/
 675:Generated_Source\PSoC4/CyFlash.c ****     if ((cySysFlashBackup.clkImoFreq != 48u) ||
 676:Generated_Source\PSoC4/CyFlash.c ****         ((cySysFlashBackup.clkSelectReg & CY_SYS_CLK_SELECT_DIRECT_SEL_MASK) != CY_SYS_CLK_HFCLK_IM
 677:Generated_Source\PSoC4/CyFlash.c ****         (((cySysFlashBackup.clkSelectReg >> CY_SYS_CLK_SELECT_PUMP_SEL_SHIFT) & CY_SYS_CLK_SELECT_P
 678:Generated_Source\PSoC4/CyFlash.c ****             CY_SYS_CLK_SELECT_PUMP_SEL_IMO))
 679:Generated_Source\PSoC4/CyFlash.c ****     {
 680:Generated_Source\PSoC4/CyFlash.c ****         /***********************************************************************
 681:Generated_Source\PSoC4/CyFlash.c ****          Set HFCLK divider to divide-by-4 to ensure that System clock frequency
 682:Generated_Source\PSoC4/CyFlash.c ****         * is within the valid limit (16 MHz for the PSoC4 4000).
 683:Generated_Source\PSoC4/CyFlash.c ****         ***********************************************************************/
 684:Generated_Source\PSoC4/CyFlash.c ****         CySysClkWriteHfclkDiv(CY_SYS_CLK_HFCLK_DIV_4);
 685:Generated_Source\PSoC4/CyFlash.c **** 
 686:Generated_Source\PSoC4/CyFlash.c ****         /* The IMO frequency should be 48 MHz */
 687:Generated_Source\PSoC4/CyFlash.c ****         if (cySysFlashBackup.clkImoFreq != 48u)
 688:Generated_Source\PSoC4/CyFlash.c ****         {
 689:Generated_Source\PSoC4/CyFlash.c ****             CySysClkWriteImoFreq(48u);
 690:Generated_Source\PSoC4/CyFlash.c ****         }
ARM GAS  C:\Users\essele\AppData\Local\Temp\ccJaopFK.s 			page 27


 691:Generated_Source\PSoC4/CyFlash.c ****         CySysClkImoStart();
 692:Generated_Source\PSoC4/CyFlash.c **** 
 693:Generated_Source\PSoC4/CyFlash.c ****         /* The IMO should be source for the HFCLK */
 694:Generated_Source\PSoC4/CyFlash.c ****         CySysClkWriteHfclkDirect(CY_SYS_CLK_HFCLK_IMO);
 695:Generated_Source\PSoC4/CyFlash.c **** 
 696:Generated_Source\PSoC4/CyFlash.c ****         /* The IMO should be the source for the charge pump clock */
 697:Generated_Source\PSoC4/CyFlash.c ****         CY_SYS_CLK_SELECT_REG =  (CY_SYS_CLK_SELECT_REG &
 698:Generated_Source\PSoC4/CyFlash.c ****             ((uint32)~(uint32)(CY_SYS_CLK_SELECT_PUMP_SEL_MASK << CY_SYS_CLK_SELECT_PUMP_SEL_SHIFT)
 699:Generated_Source\PSoC4/CyFlash.c ****             ((uint32)((uint32)1u << CY_SYS_CLK_SELECT_PUMP_SEL_SHIFT));
 700:Generated_Source\PSoC4/CyFlash.c ****     }
 701:Generated_Source\PSoC4/CyFlash.c **** 
 702:Generated_Source\PSoC4/CyFlash.c **** #else
 703:Generated_Source\PSoC4/CyFlash.c **** 
 704:Generated_Source\PSoC4/CyFlash.c ****     /* FM-Lite Clock Configuration */
 705:Generated_Source\PSoC4/CyFlash.c ****     CY_FLASH_CPUSS_SYSARG_REG =
 706:Generated_Source\PSoC4/CyFlash.c ****         (uint32) ((CY_FLASH_KEY_TWO(CY_FLASH_API_OPCODE_CLK_CONFIG) <<  CY_FLASH_PARAM_KEY_TWO_OFFS
 707:Generated_Source\PSoC4/CyFlash.c ****                     CY_FLASH_KEY_ONE);
 708:Generated_Source\PSoC4/CyFlash.c ****     CY_FLASH_CPUSS_SYSREQ_REG = CY_FLASH_CPUSS_REQ_START | CY_FLASH_API_OPCODE_CLK_CONFIG;
 709:Generated_Source\PSoC4/CyFlash.c ****     CY_NOP;
 710:Generated_Source\PSoC4/CyFlash.c ****     retValue = CY_FLASH_API_RETURN;
 711:Generated_Source\PSoC4/CyFlash.c **** 
 712:Generated_Source\PSoC4/CyFlash.c **** #endif  /* (CY_PSOC4_4000) */
 713:Generated_Source\PSoC4/CyFlash.c **** 
 714:Generated_Source\PSoC4/CyFlash.c ****     return (retValue);
 715:Generated_Source\PSoC4/CyFlash.c **** }
 716:Generated_Source\PSoC4/CyFlash.c **** #endif  /* (CY_IP_SPCIF_SYNCHRONOUS) */
 717:Generated_Source\PSoC4/CyFlash.c **** 
 718:Generated_Source\PSoC4/CyFlash.c **** 
 719:Generated_Source\PSoC4/CyFlash.c **** /*******************************************************************************
 720:Generated_Source\PSoC4/CyFlash.c **** * Function Name: CySysFlashClockRestore
 721:Generated_Source\PSoC4/CyFlash.c **** ****************************************************************************//**
 722:Generated_Source\PSoC4/CyFlash.c **** *
 723:Generated_Source\PSoC4/CyFlash.c **** * Restores the device clock configuration.
 724:Generated_Source\PSoC4/CyFlash.c **** *
 725:Generated_Source\PSoC4/CyFlash.c **** * \return The same as \ref CySysFlashWriteRow().
 726:Generated_Source\PSoC4/CyFlash.c **** *
 727:Generated_Source\PSoC4/CyFlash.c **** *******************************************************************************/
 728:Generated_Source\PSoC4/CyFlash.c **** static cystatus CySysFlashClockRestore(void)
 729:Generated_Source\PSoC4/CyFlash.c **** {
 789              		.loc 1 729 0
 790              		.cfi_startproc
 791              		@ args = 0, pretend = 0, frame = 8
 792              		@ frame_needed = 1, uses_anonymous_args = 0
 793 0000 80B5     		push	{r7, lr}
 794              		.cfi_def_cfa_offset 8
 795              		.cfi_offset 7, -8
 796              		.cfi_offset 14, -4
 797 0002 82B0     		sub	sp, sp, #8
 798              		.cfi_def_cfa_offset 16
 799 0004 00AF     		add	r7, sp, #0
 800              		.cfi_def_cfa_register 7
 730:Generated_Source\PSoC4/CyFlash.c ****     cystatus retValue = CY_SYS_FLASH_SUCCESS;
 801              		.loc 1 730 0
 802 0006 0023     		movs	r3, #0
 803 0008 7B60     		str	r3, [r7, #4]
 731:Generated_Source\PSoC4/CyFlash.c **** #if(!CY_IP_FM)
 732:Generated_Source\PSoC4/CyFlash.c ****     #if !(CY_PSOC4_4000)
ARM GAS  C:\Users\essele\AppData\Local\Temp\ccJaopFK.s 			page 28


 733:Generated_Source\PSoC4/CyFlash.c ****         #if (CY_IP_SPCIF_SYNCHRONOUS)
 734:Generated_Source\PSoC4/CyFlash.c ****             volatile uint32   parameters[2u];
 735:Generated_Source\PSoC4/CyFlash.c ****         #endif /* (CY_IP_SPCIF_SYNCHRONOUS) */
 736:Generated_Source\PSoC4/CyFlash.c ****     #endif  /* !(CY_PSOC4_4000) */
 737:Generated_Source\PSoC4/CyFlash.c **** #endif  /* (!CY_IP_FM) */
 738:Generated_Source\PSoC4/CyFlash.c **** 
 739:Generated_Source\PSoC4/CyFlash.c **** #if(CY_IP_FM)
 740:Generated_Source\PSoC4/CyFlash.c **** 
 741:Generated_Source\PSoC4/CyFlash.c ****     /***************************************************************
 742:Generated_Source\PSoC4/CyFlash.c ****     * Restore IMO configuration that could be changed during
 743:Generated_Source\PSoC4/CyFlash.c ****     * system call execution (Cypress ID #150448).
 744:Generated_Source\PSoC4/CyFlash.c ****     ***************************************************************/
 745:Generated_Source\PSoC4/CyFlash.c ****     CY_SYS_CLK_IMO_CONFIG_REG = cySysFlashBackup.imoConfigReg;
 746:Generated_Source\PSoC4/CyFlash.c **** 
 747:Generated_Source\PSoC4/CyFlash.c **** #else
 748:Generated_Source\PSoC4/CyFlash.c **** 
 749:Generated_Source\PSoC4/CyFlash.c ****     #if (CY_PSOC4_4000)
 750:Generated_Source\PSoC4/CyFlash.c **** 
 751:Generated_Source\PSoC4/CyFlash.c ****         /***************************************************************************
 752:Generated_Source\PSoC4/CyFlash.c ****         * Perform firmware clock settings restore for the PSOC4 4000 devices (the
 753:Generated_Source\PSoC4/CyFlash.c ****         * corresponding system call is not available).
 754:Generated_Source\PSoC4/CyFlash.c ****         ***************************************************************************/
 755:Generated_Source\PSoC4/CyFlash.c **** 
 756:Generated_Source\PSoC4/CyFlash.c ****         /* Restore clock settings */
 757:Generated_Source\PSoC4/CyFlash.c ****         if ((cySysFlashBackup.clkImoFreq != 48u) ||
 758:Generated_Source\PSoC4/CyFlash.c ****             ((cySysFlashBackup.clkSelectReg & CY_SYS_CLK_SELECT_DIRECT_SEL_MASK) != CY_SYS_CLK_HFCL
 759:Generated_Source\PSoC4/CyFlash.c ****             (((cySysFlashBackup.clkSelectReg >> CY_SYS_CLK_SELECT_PUMP_SEL_SHIFT) & CY_SYS_CLK_SELE
 760:Generated_Source\PSoC4/CyFlash.c ****                 CY_SYS_CLK_SELECT_PUMP_SEL_IMO))
 761:Generated_Source\PSoC4/CyFlash.c ****         {
 762:Generated_Source\PSoC4/CyFlash.c ****             /* Restore IMO frequency if needed */
 763:Generated_Source\PSoC4/CyFlash.c ****             if (cySysFlashBackup.clkImoFreq != 48u)
 764:Generated_Source\PSoC4/CyFlash.c ****             {
 765:Generated_Source\PSoC4/CyFlash.c ****                 CySysClkWriteImoFreq(cySysFlashBackup.clkImoFreq);
 766:Generated_Source\PSoC4/CyFlash.c ****             }
 767:Generated_Source\PSoC4/CyFlash.c **** 
 768:Generated_Source\PSoC4/CyFlash.c ****             /* Restore HFCLK clock source */
 769:Generated_Source\PSoC4/CyFlash.c ****             CySysClkWriteHfclkDirect(cySysFlashBackup.clkSelectReg & CY_SYS_CLK_SELECT_DIRECT_SEL_M
 770:Generated_Source\PSoC4/CyFlash.c **** 
 771:Generated_Source\PSoC4/CyFlash.c ****             /* Restore HFCLK divider and source for pump  */
 772:Generated_Source\PSoC4/CyFlash.c ****             CY_SYS_CLK_SELECT_REG = cySysFlashBackup.clkSelectReg;
 773:Generated_Source\PSoC4/CyFlash.c **** 
 774:Generated_Source\PSoC4/CyFlash.c ****             /* Stop IMO if needed */
 775:Generated_Source\PSoC4/CyFlash.c ****             if (0u == cySysFlashBackup.clkImoEna)
 776:Generated_Source\PSoC4/CyFlash.c ****             {
 777:Generated_Source\PSoC4/CyFlash.c ****                 CySysClkImoStop();
 778:Generated_Source\PSoC4/CyFlash.c ****             }
 779:Generated_Source\PSoC4/CyFlash.c ****         }
 780:Generated_Source\PSoC4/CyFlash.c **** 
 781:Generated_Source\PSoC4/CyFlash.c ****     #else
 782:Generated_Source\PSoC4/CyFlash.c **** 
 783:Generated_Source\PSoC4/CyFlash.c ****         #if (CY_IP_SPCIF_SYNCHRONOUS)
 784:Generated_Source\PSoC4/CyFlash.c ****             /* FM-Lite Clock Restore */
 785:Generated_Source\PSoC4/CyFlash.c ****             parameters[0u] =
 786:Generated_Source\PSoC4/CyFlash.c ****                 (uint32) ((CY_FLASH_KEY_TWO(CY_FLASH_API_OPCODE_CLK_RESTORE) <<  CY_FLASH_PARAM_KEY
 787:Generated_Source\PSoC4/CyFlash.c ****                             CY_FLASH_KEY_ONE);
 788:Generated_Source\PSoC4/CyFlash.c ****             parameters[1u] = (uint32) &cySysFlashBackup.clockSettings[0u];
 789:Generated_Source\PSoC4/CyFlash.c ****             CY_FLASH_CPUSS_SYSARG_REG = (uint32) &parameters[0u];
ARM GAS  C:\Users\essele\AppData\Local\Temp\ccJaopFK.s 			page 29


 790:Generated_Source\PSoC4/CyFlash.c ****             CY_FLASH_CPUSS_SYSREQ_REG = CY_FLASH_CPUSS_REQ_START | CY_FLASH_API_OPCODE_CLK_RESTORE;
 791:Generated_Source\PSoC4/CyFlash.c ****             CY_NOP;
 792:Generated_Source\PSoC4/CyFlash.c ****             retValue = CY_FLASH_API_RETURN;
 793:Generated_Source\PSoC4/CyFlash.c ****         #endif /* (CY_IP_SPCIF_SYNCHRONOUS) */
 794:Generated_Source\PSoC4/CyFlash.c **** 
 795:Generated_Source\PSoC4/CyFlash.c ****     #endif  /* (CY_PSOC4_4000) */
 796:Generated_Source\PSoC4/CyFlash.c **** 
 797:Generated_Source\PSoC4/CyFlash.c **** #endif  /* (CY_IP_FM) */
 798:Generated_Source\PSoC4/CyFlash.c **** 
 799:Generated_Source\PSoC4/CyFlash.c ****     return (retValue);
 804              		.loc 1 799 0
 805 000a 7B68     		ldr	r3, [r7, #4]
 800:Generated_Source\PSoC4/CyFlash.c **** }
 806              		.loc 1 800 0
 807 000c 1800     		movs	r0, r3
 808 000e BD46     		mov	sp, r7
 809 0010 02B0     		add	sp, sp, #8
 810              		@ sp needed
 811 0012 80BD     		pop	{r7, pc}
 812              		.cfi_endproc
 813              	.LFE5:
 814              		.size	CySysFlashClockRestore, .-CySysFlashClockRestore
 815              		.text
 816              	.Letext0:
 817              		.file 2 "Generated_Source\\PSoC4\\cytypes.h"
 818              		.section	.debug_info,"",%progbits
 819              	.Ldebug_info0:
 820 0000 5F020000 		.4byte	0x25f
 821 0004 0400     		.2byte	0x4
 822 0006 00000000 		.4byte	.Ldebug_abbrev0
 823 000a 04       		.byte	0x4
 824 000b 01       		.uleb128 0x1
 825 000c D7000000 		.4byte	.LASF28
 826 0010 0C       		.byte	0xc
 827 0011 84010000 		.4byte	.LASF29
 828 0015 73000000 		.4byte	.LASF30
 829 0019 00000000 		.4byte	.Ldebug_ranges0+0
 830 001d 00000000 		.4byte	0
 831 0021 00000000 		.4byte	.Ldebug_line0
 832 0025 02       		.uleb128 0x2
 833 0026 01       		.byte	0x1
 834 0027 06       		.byte	0x6
 835 0028 3D020000 		.4byte	.LASF0
 836 002c 02       		.uleb128 0x2
 837 002d 01       		.byte	0x1
 838 002e 08       		.byte	0x8
 839 002f 5D000000 		.4byte	.LASF1
 840 0033 02       		.uleb128 0x2
 841 0034 02       		.byte	0x2
 842 0035 05       		.byte	0x5
 843 0036 6C010000 		.4byte	.LASF2
 844 003a 02       		.uleb128 0x2
 845 003b 02       		.byte	0x2
 846 003c 07       		.byte	0x7
 847 003d 37000000 		.4byte	.LASF3
 848 0041 02       		.uleb128 0x2
 849 0042 04       		.byte	0x4
ARM GAS  C:\Users\essele\AppData\Local\Temp\ccJaopFK.s 			page 30


 850 0043 05       		.byte	0x5
 851 0044 28020000 		.4byte	.LASF4
 852 0048 02       		.uleb128 0x2
 853 0049 04       		.byte	0x4
 854 004a 07       		.byte	0x7
 855 004b BF000000 		.4byte	.LASF5
 856 004f 02       		.uleb128 0x2
 857 0050 08       		.byte	0x8
 858 0051 05       		.byte	0x5
 859 0052 D4010000 		.4byte	.LASF6
 860 0056 02       		.uleb128 0x2
 861 0057 08       		.byte	0x8
 862 0058 07       		.byte	0x7
 863 0059 A5010000 		.4byte	.LASF7
 864 005d 03       		.uleb128 0x3
 865 005e 04       		.byte	0x4
 866 005f 05       		.byte	0x5
 867 0060 696E7400 		.ascii	"int\000"
 868 0064 02       		.uleb128 0x2
 869 0065 04       		.byte	0x4
 870 0066 07       		.byte	0x7
 871 0067 4A000000 		.4byte	.LASF8
 872 006b 04       		.uleb128 0x4
 873 006c D1000000 		.4byte	.LASF9
 874 0070 02       		.byte	0x2
 875 0071 E401     		.2byte	0x1e4
 876 0073 2C000000 		.4byte	0x2c
 877 0077 04       		.uleb128 0x4
 878 0078 76010000 		.4byte	.LASF10
 879 007c 02       		.byte	0x2
 880 007d E501     		.2byte	0x1e5
 881 007f 3A000000 		.4byte	0x3a
 882 0083 04       		.uleb128 0x4
 883 0084 7D010000 		.4byte	.LASF11
 884 0088 02       		.byte	0x2
 885 0089 E601     		.2byte	0x1e6
 886 008b 48000000 		.4byte	0x48
 887 008f 02       		.uleb128 0x2
 888 0090 04       		.byte	0x4
 889 0091 04       		.byte	0x4
 890 0092 57000000 		.4byte	.LASF12
 891 0096 02       		.uleb128 0x2
 892 0097 08       		.byte	0x8
 893 0098 04       		.byte	0x4
 894 0099 65010000 		.4byte	.LASF13
 895 009d 02       		.uleb128 0x2
 896 009e 01       		.byte	0x1
 897 009f 08       		.byte	0x8
 898 00a0 E2010000 		.4byte	.LASF14
 899 00a4 04       		.uleb128 0x4
 900 00a5 00000000 		.4byte	.LASF15
 901 00a9 02       		.byte	0x2
 902 00aa 8602     		.2byte	0x286
 903 00ac 48000000 		.4byte	0x48
 904 00b0 04       		.uleb128 0x4
 905 00b1 09000000 		.4byte	.LASF16
 906 00b5 02       		.byte	0x2
ARM GAS  C:\Users\essele\AppData\Local\Temp\ccJaopFK.s 			page 31


 907 00b6 9002     		.2byte	0x290
 908 00b8 BC000000 		.4byte	0xbc
 909 00bc 05       		.uleb128 0x5
 910 00bd 83000000 		.4byte	0x83
 911 00c1 02       		.uleb128 0x2
 912 00c2 08       		.byte	0x8
 913 00c3 04       		.byte	0x4
 914 00c4 31020000 		.4byte	.LASF17
 915 00c8 02       		.uleb128 0x2
 916 00c9 04       		.byte	0x4
 917 00ca 07       		.byte	0x7
 918 00cb CB010000 		.4byte	.LASF18
 919 00cf 06       		.uleb128 0x6
 920 00d0 49020000 		.4byte	.LASF26
 921 00d4 01       		.byte	0x1
 922 00d5 51       		.byte	0x51
 923 00d6 83000000 		.4byte	0x83
 924 00da 00000000 		.4byte	.LFB1
 925 00de F4010000 		.4byte	.LFE1-.LFB1
 926 00e2 01       		.uleb128 0x1
 927 00e3 9C       		.byte	0x9c
 928 00e4 40010000 		.4byte	0x140
 929 00e8 07       		.uleb128 0x7
 930 00e9 18000000 		.4byte	.LASF19
 931 00ed 01       		.byte	0x1
 932 00ee 51       		.byte	0x51
 933 00ef 83000000 		.4byte	0x83
 934 00f3 03       		.uleb128 0x3
 935 00f4 91       		.byte	0x91
 936 00f5 D47D     		.sleb128 -300
 937 00f7 07       		.uleb128 0x7
 938 00f8 6B000000 		.4byte	.LASF20
 939 00fc 01       		.byte	0x1
 940 00fd 51       		.byte	0x51
 941 00fe 40010000 		.4byte	0x140
 942 0102 03       		.uleb128 0x3
 943 0103 91       		.byte	0x91
 944 0104 D07D     		.sleb128 -304
 945 0106 08       		.uleb128 0x8
 946 0107 0F000000 		.4byte	.LASF21
 947 010b 01       		.byte	0x1
 948 010c 53       		.byte	0x53
 949 010d BC000000 		.4byte	0xbc
 950 0111 02       		.uleb128 0x2
 951 0112 91       		.byte	0x91
 952 0113 68       		.sleb128 -24
 953 0114 08       		.uleb128 0x8
 954 0115 EC010000 		.4byte	.LASF22
 955 0119 01       		.byte	0x1
 956 011a 54       		.byte	0x54
 957 011b BC000000 		.4byte	0xbc
 958 011f 02       		.uleb128 0x2
 959 0120 91       		.byte	0x91
 960 0121 64       		.sleb128 -28
 961 0122 08       		.uleb128 0x8
 962 0123 B4000000 		.4byte	.LASF23
 963 0127 01       		.byte	0x1
ARM GAS  C:\Users\essele\AppData\Local\Temp\ccJaopFK.s 			page 32


 964 0128 55       		.byte	0x55
 965 0129 5B010000 		.4byte	0x15b
 966 012d 03       		.uleb128 0x3
 967 012e 91       		.byte	0x91
 968 012f DC7D     		.sleb128 -292
 969 0131 08       		.uleb128 0x8
 970 0132 BC010000 		.4byte	.LASF24
 971 0136 01       		.byte	0x1
 972 0137 56       		.byte	0x56
 973 0138 6B000000 		.4byte	0x6b
 974 013c 02       		.uleb128 0x2
 975 013d 91       		.byte	0x91
 976 013e 6F       		.sleb128 -17
 977 013f 00       		.byte	0
 978 0140 09       		.uleb128 0x9
 979 0141 04       		.byte	0x4
 980 0142 46010000 		.4byte	0x146
 981 0146 0A       		.uleb128 0xa
 982 0147 6B000000 		.4byte	0x6b
 983 014b 0B       		.uleb128 0xb
 984 014c BC000000 		.4byte	0xbc
 985 0150 5B010000 		.4byte	0x15b
 986 0154 0C       		.uleb128 0xc
 987 0155 C8000000 		.4byte	0xc8
 988 0159 41       		.byte	0x41
 989 015a 00       		.byte	0
 990 015b 05       		.uleb128 0x5
 991 015c 4B010000 		.4byte	0x14b
 992 0160 0D       		.uleb128 0xd
 993 0161 5C020000 		.4byte	.LASF31
 994 0165 01       		.byte	0x1
 995 0166 A601     		.2byte	0x1a6
 996 0168 00000000 		.4byte	.LFB2
 997 016c 78000000 		.4byte	.LFE2-.LFB2
 998 0170 01       		.uleb128 0x1
 999 0171 9C       		.byte	0x9c
 1000 0172 95010000 		.4byte	0x195
 1001 0176 0E       		.uleb128 0xe
 1002 0177 E7010000 		.4byte	.LASF25
 1003 017b 01       		.byte	0x1
 1004 017c A601     		.2byte	0x1a6
 1005 017e 83000000 		.4byte	0x83
 1006 0182 02       		.uleb128 0x2
 1007 0183 91       		.byte	0x91
 1008 0184 64       		.sleb128 -28
 1009 0185 0F       		.uleb128 0xf
 1010 0186 BC010000 		.4byte	.LASF24
 1011 018a 01       		.byte	0x1
 1012 018b A801     		.2byte	0x1a8
 1013 018d 6B000000 		.4byte	0x6b
 1014 0191 02       		.uleb128 0x2
 1015 0192 91       		.byte	0x91
 1016 0193 6F       		.sleb128 -17
 1017 0194 00       		.byte	0
 1018 0195 10       		.uleb128 0x10
 1019 0196 1F000000 		.4byte	.LASF27
 1020 019a 01       		.byte	0x1
ARM GAS  C:\Users\essele\AppData\Local\Temp\ccJaopFK.s 			page 33


 1021 019b EA01     		.2byte	0x1ea
 1022 019d 83000000 		.4byte	0x83
 1023 01a1 00000000 		.4byte	.LFB3
 1024 01a5 C4010000 		.4byte	.LFE3-.LFB3
 1025 01a9 01       		.uleb128 0x1
 1026 01aa 9C       		.byte	0x9c
 1027 01ab 0D020000 		.4byte	0x20d
 1028 01af 0E       		.uleb128 0xe
 1029 01b0 18000000 		.4byte	.LASF19
 1030 01b4 01       		.byte	0x1
 1031 01b5 EA01     		.2byte	0x1ea
 1032 01b7 83000000 		.4byte	0x83
 1033 01bb 03       		.uleb128 0x3
 1034 01bc 91       		.byte	0x91
 1035 01bd D47D     		.sleb128 -300
 1036 01bf 0E       		.uleb128 0xe
 1037 01c0 6B000000 		.4byte	.LASF20
 1038 01c4 01       		.byte	0x1
 1039 01c5 EA01     		.2byte	0x1ea
 1040 01c7 40010000 		.4byte	0x140
 1041 01cb 03       		.uleb128 0x3
 1042 01cc 91       		.byte	0x91
 1043 01cd D07D     		.sleb128 -304
 1044 01cf 0F       		.uleb128 0xf
 1045 01d0 0F000000 		.4byte	.LASF21
 1046 01d4 01       		.byte	0x1
 1047 01d5 EC01     		.2byte	0x1ec
 1048 01d7 BC000000 		.4byte	0xbc
 1049 01db 02       		.uleb128 0x2
 1050 01dc 91       		.byte	0x91
 1051 01dd 68       		.sleb128 -24
 1052 01de 0F       		.uleb128 0xf
 1053 01df EC010000 		.4byte	.LASF22
 1054 01e3 01       		.byte	0x1
 1055 01e4 ED01     		.2byte	0x1ed
 1056 01e6 BC000000 		.4byte	0xbc
 1057 01ea 02       		.uleb128 0x2
 1058 01eb 91       		.byte	0x91
 1059 01ec 64       		.sleb128 -28
 1060 01ed 0F       		.uleb128 0xf
 1061 01ee B4000000 		.4byte	.LASF23
 1062 01f2 01       		.byte	0x1
 1063 01f3 EE01     		.2byte	0x1ee
 1064 01f5 0D020000 		.4byte	0x20d
 1065 01f9 03       		.uleb128 0x3
 1066 01fa 91       		.byte	0x91
 1067 01fb DC7D     		.sleb128 -292
 1068 01fd 0F       		.uleb128 0xf
 1069 01fe BC010000 		.4byte	.LASF24
 1070 0202 01       		.byte	0x1
 1071 0203 EF01     		.2byte	0x1ef
 1072 0205 6B000000 		.4byte	0x6b
 1073 0209 02       		.uleb128 0x2
 1074 020a 91       		.byte	0x91
 1075 020b 6F       		.sleb128 -17
 1076 020c 00       		.byte	0
 1077 020d 05       		.uleb128 0x5
ARM GAS  C:\Users\essele\AppData\Local\Temp\ccJaopFK.s 			page 34


 1078 020e 4B010000 		.4byte	0x14b
 1079 0212 11       		.uleb128 0x11
 1080 0213 12020000 		.4byte	.LASF32
 1081 0217 01       		.byte	0x1
 1082 0218 3A02     		.2byte	0x23a
 1083 021a A4000000 		.4byte	0xa4
 1084 021e 00000000 		.4byte	.LFB4
 1085 0222 14000000 		.4byte	.LFE4-.LFB4
 1086 0226 01       		.uleb128 0x1
 1087 0227 9C       		.byte	0x9c
 1088 0228 3C020000 		.4byte	0x23c
 1089 022c 0F       		.uleb128 0xf
 1090 022d 0F000000 		.4byte	.LASF21
 1091 0231 01       		.byte	0x1
 1092 0232 3C02     		.2byte	0x23c
 1093 0234 A4000000 		.4byte	0xa4
 1094 0238 02       		.uleb128 0x2
 1095 0239 91       		.byte	0x91
 1096 023a 74       		.sleb128 -12
 1097 023b 00       		.byte	0
 1098 023c 12       		.uleb128 0x12
 1099 023d FB010000 		.4byte	.LASF33
 1100 0241 01       		.byte	0x1
 1101 0242 D802     		.2byte	0x2d8
 1102 0244 A4000000 		.4byte	0xa4
 1103 0248 00000000 		.4byte	.LFB5
 1104 024c 14000000 		.4byte	.LFE5-.LFB5
 1105 0250 01       		.uleb128 0x1
 1106 0251 9C       		.byte	0x9c
 1107 0252 0F       		.uleb128 0xf
 1108 0253 0F000000 		.4byte	.LASF21
 1109 0257 01       		.byte	0x1
 1110 0258 DA02     		.2byte	0x2da
 1111 025a A4000000 		.4byte	0xa4
 1112 025e 02       		.uleb128 0x2
 1113 025f 91       		.byte	0x91
 1114 0260 74       		.sleb128 -12
 1115 0261 00       		.byte	0
 1116 0262 00       		.byte	0
 1117              		.section	.debug_abbrev,"",%progbits
 1118              	.Ldebug_abbrev0:
 1119 0000 01       		.uleb128 0x1
 1120 0001 11       		.uleb128 0x11
 1121 0002 01       		.byte	0x1
 1122 0003 25       		.uleb128 0x25
 1123 0004 0E       		.uleb128 0xe
 1124 0005 13       		.uleb128 0x13
 1125 0006 0B       		.uleb128 0xb
 1126 0007 03       		.uleb128 0x3
 1127 0008 0E       		.uleb128 0xe
 1128 0009 1B       		.uleb128 0x1b
 1129 000a 0E       		.uleb128 0xe
 1130 000b 55       		.uleb128 0x55
 1131 000c 17       		.uleb128 0x17
 1132 000d 11       		.uleb128 0x11
 1133 000e 01       		.uleb128 0x1
 1134 000f 10       		.uleb128 0x10
ARM GAS  C:\Users\essele\AppData\Local\Temp\ccJaopFK.s 			page 35


 1135 0010 17       		.uleb128 0x17
 1136 0011 00       		.byte	0
 1137 0012 00       		.byte	0
 1138 0013 02       		.uleb128 0x2
 1139 0014 24       		.uleb128 0x24
 1140 0015 00       		.byte	0
 1141 0016 0B       		.uleb128 0xb
 1142 0017 0B       		.uleb128 0xb
 1143 0018 3E       		.uleb128 0x3e
 1144 0019 0B       		.uleb128 0xb
 1145 001a 03       		.uleb128 0x3
 1146 001b 0E       		.uleb128 0xe
 1147 001c 00       		.byte	0
 1148 001d 00       		.byte	0
 1149 001e 03       		.uleb128 0x3
 1150 001f 24       		.uleb128 0x24
 1151 0020 00       		.byte	0
 1152 0021 0B       		.uleb128 0xb
 1153 0022 0B       		.uleb128 0xb
 1154 0023 3E       		.uleb128 0x3e
 1155 0024 0B       		.uleb128 0xb
 1156 0025 03       		.uleb128 0x3
 1157 0026 08       		.uleb128 0x8
 1158 0027 00       		.byte	0
 1159 0028 00       		.byte	0
 1160 0029 04       		.uleb128 0x4
 1161 002a 16       		.uleb128 0x16
 1162 002b 00       		.byte	0
 1163 002c 03       		.uleb128 0x3
 1164 002d 0E       		.uleb128 0xe
 1165 002e 3A       		.uleb128 0x3a
 1166 002f 0B       		.uleb128 0xb
 1167 0030 3B       		.uleb128 0x3b
 1168 0031 05       		.uleb128 0x5
 1169 0032 49       		.uleb128 0x49
 1170 0033 13       		.uleb128 0x13
 1171 0034 00       		.byte	0
 1172 0035 00       		.byte	0
 1173 0036 05       		.uleb128 0x5
 1174 0037 35       		.uleb128 0x35
 1175 0038 00       		.byte	0
 1176 0039 49       		.uleb128 0x49
 1177 003a 13       		.uleb128 0x13
 1178 003b 00       		.byte	0
 1179 003c 00       		.byte	0
 1180 003d 06       		.uleb128 0x6
 1181 003e 2E       		.uleb128 0x2e
 1182 003f 01       		.byte	0x1
 1183 0040 3F       		.uleb128 0x3f
 1184 0041 19       		.uleb128 0x19
 1185 0042 03       		.uleb128 0x3
 1186 0043 0E       		.uleb128 0xe
 1187 0044 3A       		.uleb128 0x3a
 1188 0045 0B       		.uleb128 0xb
 1189 0046 3B       		.uleb128 0x3b
 1190 0047 0B       		.uleb128 0xb
 1191 0048 27       		.uleb128 0x27
ARM GAS  C:\Users\essele\AppData\Local\Temp\ccJaopFK.s 			page 36


 1192 0049 19       		.uleb128 0x19
 1193 004a 49       		.uleb128 0x49
 1194 004b 13       		.uleb128 0x13
 1195 004c 11       		.uleb128 0x11
 1196 004d 01       		.uleb128 0x1
 1197 004e 12       		.uleb128 0x12
 1198 004f 06       		.uleb128 0x6
 1199 0050 40       		.uleb128 0x40
 1200 0051 18       		.uleb128 0x18
 1201 0052 9642     		.uleb128 0x2116
 1202 0054 19       		.uleb128 0x19
 1203 0055 01       		.uleb128 0x1
 1204 0056 13       		.uleb128 0x13
 1205 0057 00       		.byte	0
 1206 0058 00       		.byte	0
 1207 0059 07       		.uleb128 0x7
 1208 005a 05       		.uleb128 0x5
 1209 005b 00       		.byte	0
 1210 005c 03       		.uleb128 0x3
 1211 005d 0E       		.uleb128 0xe
 1212 005e 3A       		.uleb128 0x3a
 1213 005f 0B       		.uleb128 0xb
 1214 0060 3B       		.uleb128 0x3b
 1215 0061 0B       		.uleb128 0xb
 1216 0062 49       		.uleb128 0x49
 1217 0063 13       		.uleb128 0x13
 1218 0064 02       		.uleb128 0x2
 1219 0065 18       		.uleb128 0x18
 1220 0066 00       		.byte	0
 1221 0067 00       		.byte	0
 1222 0068 08       		.uleb128 0x8
 1223 0069 34       		.uleb128 0x34
 1224 006a 00       		.byte	0
 1225 006b 03       		.uleb128 0x3
 1226 006c 0E       		.uleb128 0xe
 1227 006d 3A       		.uleb128 0x3a
 1228 006e 0B       		.uleb128 0xb
 1229 006f 3B       		.uleb128 0x3b
 1230 0070 0B       		.uleb128 0xb
 1231 0071 49       		.uleb128 0x49
 1232 0072 13       		.uleb128 0x13
 1233 0073 02       		.uleb128 0x2
 1234 0074 18       		.uleb128 0x18
 1235 0075 00       		.byte	0
 1236 0076 00       		.byte	0
 1237 0077 09       		.uleb128 0x9
 1238 0078 0F       		.uleb128 0xf
 1239 0079 00       		.byte	0
 1240 007a 0B       		.uleb128 0xb
 1241 007b 0B       		.uleb128 0xb
 1242 007c 49       		.uleb128 0x49
 1243 007d 13       		.uleb128 0x13
 1244 007e 00       		.byte	0
 1245 007f 00       		.byte	0
 1246 0080 0A       		.uleb128 0xa
 1247 0081 26       		.uleb128 0x26
 1248 0082 00       		.byte	0
ARM GAS  C:\Users\essele\AppData\Local\Temp\ccJaopFK.s 			page 37


 1249 0083 49       		.uleb128 0x49
 1250 0084 13       		.uleb128 0x13
 1251 0085 00       		.byte	0
 1252 0086 00       		.byte	0
 1253 0087 0B       		.uleb128 0xb
 1254 0088 01       		.uleb128 0x1
 1255 0089 01       		.byte	0x1
 1256 008a 49       		.uleb128 0x49
 1257 008b 13       		.uleb128 0x13
 1258 008c 01       		.uleb128 0x1
 1259 008d 13       		.uleb128 0x13
 1260 008e 00       		.byte	0
 1261 008f 00       		.byte	0
 1262 0090 0C       		.uleb128 0xc
 1263 0091 21       		.uleb128 0x21
 1264 0092 00       		.byte	0
 1265 0093 49       		.uleb128 0x49
 1266 0094 13       		.uleb128 0x13
 1267 0095 2F       		.uleb128 0x2f
 1268 0096 0B       		.uleb128 0xb
 1269 0097 00       		.byte	0
 1270 0098 00       		.byte	0
 1271 0099 0D       		.uleb128 0xd
 1272 009a 2E       		.uleb128 0x2e
 1273 009b 01       		.byte	0x1
 1274 009c 3F       		.uleb128 0x3f
 1275 009d 19       		.uleb128 0x19
 1276 009e 03       		.uleb128 0x3
 1277 009f 0E       		.uleb128 0xe
 1278 00a0 3A       		.uleb128 0x3a
 1279 00a1 0B       		.uleb128 0xb
 1280 00a2 3B       		.uleb128 0x3b
 1281 00a3 05       		.uleb128 0x5
 1282 00a4 27       		.uleb128 0x27
 1283 00a5 19       		.uleb128 0x19
 1284 00a6 11       		.uleb128 0x11
 1285 00a7 01       		.uleb128 0x1
 1286 00a8 12       		.uleb128 0x12
 1287 00a9 06       		.uleb128 0x6
 1288 00aa 40       		.uleb128 0x40
 1289 00ab 18       		.uleb128 0x18
 1290 00ac 9642     		.uleb128 0x2116
 1291 00ae 19       		.uleb128 0x19
 1292 00af 01       		.uleb128 0x1
 1293 00b0 13       		.uleb128 0x13
 1294 00b1 00       		.byte	0
 1295 00b2 00       		.byte	0
 1296 00b3 0E       		.uleb128 0xe
 1297 00b4 05       		.uleb128 0x5
 1298 00b5 00       		.byte	0
 1299 00b6 03       		.uleb128 0x3
 1300 00b7 0E       		.uleb128 0xe
 1301 00b8 3A       		.uleb128 0x3a
 1302 00b9 0B       		.uleb128 0xb
 1303 00ba 3B       		.uleb128 0x3b
 1304 00bb 05       		.uleb128 0x5
 1305 00bc 49       		.uleb128 0x49
ARM GAS  C:\Users\essele\AppData\Local\Temp\ccJaopFK.s 			page 38


 1306 00bd 13       		.uleb128 0x13
 1307 00be 02       		.uleb128 0x2
 1308 00bf 18       		.uleb128 0x18
 1309 00c0 00       		.byte	0
 1310 00c1 00       		.byte	0
 1311 00c2 0F       		.uleb128 0xf
 1312 00c3 34       		.uleb128 0x34
 1313 00c4 00       		.byte	0
 1314 00c5 03       		.uleb128 0x3
 1315 00c6 0E       		.uleb128 0xe
 1316 00c7 3A       		.uleb128 0x3a
 1317 00c8 0B       		.uleb128 0xb
 1318 00c9 3B       		.uleb128 0x3b
 1319 00ca 05       		.uleb128 0x5
 1320 00cb 49       		.uleb128 0x49
 1321 00cc 13       		.uleb128 0x13
 1322 00cd 02       		.uleb128 0x2
 1323 00ce 18       		.uleb128 0x18
 1324 00cf 00       		.byte	0
 1325 00d0 00       		.byte	0
 1326 00d1 10       		.uleb128 0x10
 1327 00d2 2E       		.uleb128 0x2e
 1328 00d3 01       		.byte	0x1
 1329 00d4 3F       		.uleb128 0x3f
 1330 00d5 19       		.uleb128 0x19
 1331 00d6 03       		.uleb128 0x3
 1332 00d7 0E       		.uleb128 0xe
 1333 00d8 3A       		.uleb128 0x3a
 1334 00d9 0B       		.uleb128 0xb
 1335 00da 3B       		.uleb128 0x3b
 1336 00db 05       		.uleb128 0x5
 1337 00dc 27       		.uleb128 0x27
 1338 00dd 19       		.uleb128 0x19
 1339 00de 49       		.uleb128 0x49
 1340 00df 13       		.uleb128 0x13
 1341 00e0 11       		.uleb128 0x11
 1342 00e1 01       		.uleb128 0x1
 1343 00e2 12       		.uleb128 0x12
 1344 00e3 06       		.uleb128 0x6
 1345 00e4 40       		.uleb128 0x40
 1346 00e5 18       		.uleb128 0x18
 1347 00e6 9642     		.uleb128 0x2116
 1348 00e8 19       		.uleb128 0x19
 1349 00e9 01       		.uleb128 0x1
 1350 00ea 13       		.uleb128 0x13
 1351 00eb 00       		.byte	0
 1352 00ec 00       		.byte	0
 1353 00ed 11       		.uleb128 0x11
 1354 00ee 2E       		.uleb128 0x2e
 1355 00ef 01       		.byte	0x1
 1356 00f0 03       		.uleb128 0x3
 1357 00f1 0E       		.uleb128 0xe
 1358 00f2 3A       		.uleb128 0x3a
 1359 00f3 0B       		.uleb128 0xb
 1360 00f4 3B       		.uleb128 0x3b
 1361 00f5 05       		.uleb128 0x5
 1362 00f6 27       		.uleb128 0x27
ARM GAS  C:\Users\essele\AppData\Local\Temp\ccJaopFK.s 			page 39


 1363 00f7 19       		.uleb128 0x19
 1364 00f8 49       		.uleb128 0x49
 1365 00f9 13       		.uleb128 0x13
 1366 00fa 11       		.uleb128 0x11
 1367 00fb 01       		.uleb128 0x1
 1368 00fc 12       		.uleb128 0x12
 1369 00fd 06       		.uleb128 0x6
 1370 00fe 40       		.uleb128 0x40
 1371 00ff 18       		.uleb128 0x18
 1372 0100 9742     		.uleb128 0x2117
 1373 0102 19       		.uleb128 0x19
 1374 0103 01       		.uleb128 0x1
 1375 0104 13       		.uleb128 0x13
 1376 0105 00       		.byte	0
 1377 0106 00       		.byte	0
 1378 0107 12       		.uleb128 0x12
 1379 0108 2E       		.uleb128 0x2e
 1380 0109 01       		.byte	0x1
 1381 010a 03       		.uleb128 0x3
 1382 010b 0E       		.uleb128 0xe
 1383 010c 3A       		.uleb128 0x3a
 1384 010d 0B       		.uleb128 0xb
 1385 010e 3B       		.uleb128 0x3b
 1386 010f 05       		.uleb128 0x5
 1387 0110 27       		.uleb128 0x27
 1388 0111 19       		.uleb128 0x19
 1389 0112 49       		.uleb128 0x49
 1390 0113 13       		.uleb128 0x13
 1391 0114 11       		.uleb128 0x11
 1392 0115 01       		.uleb128 0x1
 1393 0116 12       		.uleb128 0x12
 1394 0117 06       		.uleb128 0x6
 1395 0118 40       		.uleb128 0x40
 1396 0119 18       		.uleb128 0x18
 1397 011a 9742     		.uleb128 0x2117
 1398 011c 19       		.uleb128 0x19
 1399 011d 00       		.byte	0
 1400 011e 00       		.byte	0
 1401 011f 00       		.byte	0
 1402              		.section	.debug_aranges,"",%progbits
 1403 0000 3C000000 		.4byte	0x3c
 1404 0004 0200     		.2byte	0x2
 1405 0006 00000000 		.4byte	.Ldebug_info0
 1406 000a 04       		.byte	0x4
 1407 000b 00       		.byte	0
 1408 000c 0000     		.2byte	0
 1409 000e 0000     		.2byte	0
 1410 0010 00000000 		.4byte	.LFB1
 1411 0014 F4010000 		.4byte	.LFE1-.LFB1
 1412 0018 00000000 		.4byte	.LFB2
 1413 001c 78000000 		.4byte	.LFE2-.LFB2
 1414 0020 00000000 		.4byte	.LFB3
 1415 0024 C4010000 		.4byte	.LFE3-.LFB3
 1416 0028 00000000 		.4byte	.LFB4
 1417 002c 14000000 		.4byte	.LFE4-.LFB4
 1418 0030 00000000 		.4byte	.LFB5
 1419 0034 14000000 		.4byte	.LFE5-.LFB5
ARM GAS  C:\Users\essele\AppData\Local\Temp\ccJaopFK.s 			page 40


 1420 0038 00000000 		.4byte	0
 1421 003c 00000000 		.4byte	0
 1422              		.section	.debug_ranges,"",%progbits
 1423              	.Ldebug_ranges0:
 1424 0000 00000000 		.4byte	.LFB1
 1425 0004 F4010000 		.4byte	.LFE1
 1426 0008 00000000 		.4byte	.LFB2
 1427 000c 78000000 		.4byte	.LFE2
 1428 0010 00000000 		.4byte	.LFB3
 1429 0014 C4010000 		.4byte	.LFE3
 1430 0018 00000000 		.4byte	.LFB4
 1431 001c 14000000 		.4byte	.LFE4
 1432 0020 00000000 		.4byte	.LFB5
 1433 0024 14000000 		.4byte	.LFE5
 1434 0028 00000000 		.4byte	0
 1435 002c 00000000 		.4byte	0
 1436              		.section	.debug_line,"",%progbits
 1437              	.Ldebug_line0:
 1438 0000 9F010000 		.section	.debug_str,"MS",%progbits,1
 1438      02004400 
 1438      00000201 
 1438      FB0E0D00 
 1438      01010101 
 1439              	.LASF15:
 1440 0000 63797374 		.ascii	"cystatus\000"
 1440      61747573 
 1440      00
 1441              	.LASF16:
 1442 0009 72656733 		.ascii	"reg32\000"
 1442      3200
 1443              	.LASF21:
 1444 000f 72657456 		.ascii	"retValue\000"
 1444      616C7565 
 1444      00
 1445              	.LASF19:
 1446 0018 726F774E 		.ascii	"rowNum\000"
 1446      756D00
 1447              	.LASF27:
 1448 001f 43795379 		.ascii	"CySysSFlashWriteUserRow\000"
 1448      7353466C 
 1448      61736857 
 1448      72697465 
 1448      55736572 
 1449              	.LASF3:
 1450 0037 73686F72 		.ascii	"short unsigned int\000"
 1450      7420756E 
 1450      7369676E 
 1450      65642069 
 1450      6E7400
 1451              	.LASF8:
 1452 004a 756E7369 		.ascii	"unsigned int\000"
 1452      676E6564 
 1452      20696E74 
 1452      00
 1453              	.LASF12:
 1454 0057 666C6F61 		.ascii	"float\000"
 1454      7400
ARM GAS  C:\Users\essele\AppData\Local\Temp\ccJaopFK.s 			page 41


 1455              	.LASF1:
 1456 005d 756E7369 		.ascii	"unsigned char\000"
 1456      676E6564 
 1456      20636861 
 1456      7200
 1457              	.LASF20:
 1458 006b 726F7744 		.ascii	"rowData\000"
 1458      61746100 
 1459              	.LASF30:
 1460 0073 5C5C4D61 		.ascii	"\\\\Mac\\Home\\Documents\\dev\\yaugi\\GPIB USB Adap"
 1460      635C486F 
 1460      6D655C44 
 1460      6F63756D 
 1460      656E7473 
 1461 009f 7465725C 		.ascii	"ter\\GPIB USB 1.cydsn\000"
 1461      47504942 
 1461      20555342 
 1461      20312E63 
 1461      7964736E 
 1462              	.LASF23:
 1463 00b4 70617261 		.ascii	"parameters\000"
 1463      6D657465 
 1463      727300
 1464              	.LASF5:
 1465 00bf 6C6F6E67 		.ascii	"long unsigned int\000"
 1465      20756E73 
 1465      69676E65 
 1465      6420696E 
 1465      7400
 1466              	.LASF9:
 1467 00d1 75696E74 		.ascii	"uint8\000"
 1467      3800
 1468              	.LASF28:
 1469 00d7 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 1469      43313120 
 1469      352E342E 
 1469      31203230 
 1469      31363036 
 1470 010a 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m0 -mthumb -g -O"
 1470      20726576 
 1470      6973696F 
 1470      6E203233 
 1470      37373135 
 1471 013d 30202D66 		.ascii	"0 -ffunction-sections -ffat-lto-objects\000"
 1471      66756E63 
 1471      74696F6E 
 1471      2D736563 
 1471      74696F6E 
 1472              	.LASF13:
 1473 0165 646F7562 		.ascii	"double\000"
 1473      6C6500
 1474              	.LASF2:
 1475 016c 73686F72 		.ascii	"short int\000"
 1475      7420696E 
 1475      7400
 1476              	.LASF10:
 1477 0176 75696E74 		.ascii	"uint16\000"
ARM GAS  C:\Users\essele\AppData\Local\Temp\ccJaopFK.s 			page 42


 1477      313600
 1478              	.LASF11:
 1479 017d 75696E74 		.ascii	"uint32\000"
 1479      333200
 1480              	.LASF29:
 1481 0184 47656E65 		.ascii	"Generated_Source\\PSoC4\\CyFlash.c\000"
 1481      72617465 
 1481      645F536F 
 1481      75726365 
 1481      5C50536F 
 1482              	.LASF7:
 1483 01a5 6C6F6E67 		.ascii	"long long unsigned int\000"
 1483      206C6F6E 
 1483      6720756E 
 1483      7369676E 
 1483      65642069 
 1484              	.LASF24:
 1485 01bc 696E7465 		.ascii	"interruptState\000"
 1485      72727570 
 1485      74537461 
 1485      746500
 1486              	.LASF18:
 1487 01cb 73697A65 		.ascii	"sizetype\000"
 1487      74797065 
 1487      00
 1488              	.LASF6:
 1489 01d4 6C6F6E67 		.ascii	"long long int\000"
 1489      206C6F6E 
 1489      6720696E 
 1489      7400
 1490              	.LASF14:
 1491 01e2 63686172 		.ascii	"char\000"
 1491      00
 1492              	.LASF25:
 1493 01e7 66726571 		.ascii	"freq\000"
 1493      00
 1494              	.LASF22:
 1495 01ec 636C6B43 		.ascii	"clkCnfRetValue\000"
 1495      6E665265 
 1495      7456616C 
 1495      756500
 1496              	.LASF33:
 1497 01fb 43795379 		.ascii	"CySysFlashClockRestore\000"
 1497      73466C61 
 1497      7368436C 
 1497      6F636B52 
 1497      6573746F 
 1498              	.LASF32:
 1499 0212 43795379 		.ascii	"CySysFlashClockBackup\000"
 1499      73466C61 
 1499      7368436C 
 1499      6F636B42 
 1499      61636B75 
 1500              	.LASF4:
 1501 0228 6C6F6E67 		.ascii	"long int\000"
 1501      20696E74 
 1501      00
ARM GAS  C:\Users\essele\AppData\Local\Temp\ccJaopFK.s 			page 43


 1502              	.LASF17:
 1503 0231 6C6F6E67 		.ascii	"long double\000"
 1503      20646F75 
 1503      626C6500 
 1504              	.LASF0:
 1505 023d 7369676E 		.ascii	"signed char\000"
 1505      65642063 
 1505      68617200 
 1506              	.LASF26:
 1507 0249 43795379 		.ascii	"CySysFlashWriteRow\000"
 1507      73466C61 
 1507      73685772 
 1507      69746552 
 1507      6F7700
 1508              	.LASF31:
 1509 025c 43795379 		.ascii	"CySysFlashSetWaitCycles\000"
 1509      73466C61 
 1509      73685365 
 1509      74576169 
 1509      74437963 
 1510              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
