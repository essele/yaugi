ARM GAS  C:\Users\essele\AppData\Local\Temp\ccDAmW0A.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m0
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 0
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"input.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.comm	last_buf,128,4
  20              		.global	last_buf_len
  21              		.bss
  22              		.align	2
  23              		.type	last_buf_len, %object
  24              		.size	last_buf_len, 4
  25              	last_buf_len:
  26 0000 00000000 		.space	4
  27              		.comm	input_buf,128,4
  28              		.global	input_buf_len
  29              		.align	2
  30              		.type	input_buf_len, %object
  31              		.size	input_buf_len, 4
  32              	input_buf_len:
  33 0004 00000000 		.space	4
  34              		.global	input_cursor_pos
  35              		.align	2
  36              		.type	input_cursor_pos, %object
  37              		.size	input_cursor_pos, 4
  38              	input_cursor_pos:
  39 0008 00000000 		.space	4
  40              		.comm	esc_buf,5,4
  41              		.global	escape
  42              		.align	2
  43              		.type	escape, %object
  44              		.size	escape, 4
  45              	escape:
  46 000c 00000000 		.space	4
  47              		.global	escapes
  48              		.section	.rodata
  49              		.align	2
  50              	.LC0:
  51 0000 1B5B4100 		.ascii	"\033[A\000"
  52              		.align	2
  53              	.LC1:
  54 0004 1B5B4200 		.ascii	"\033[B\000"
  55              		.align	2
  56              	.LC2:
  57 0008 1B5B4300 		.ascii	"\033[C\000"
ARM GAS  C:\Users\essele\AppData\Local\Temp\ccDAmW0A.s 			page 2


  58              		.align	2
  59              	.LC3:
  60 000c 1B5B4400 		.ascii	"\033[D\000"
  61              		.align	2
  62              		.type	escapes, %object
  63              		.size	escapes, 40
  64              	escapes:
  65 0010 00000000 		.word	.LC0
  66 0014 01100000 		.word	4097
  67 0018 04000000 		.word	.LC1
  68 001c 02100000 		.word	4098
  69 0020 08000000 		.word	.LC2
  70 0024 03100000 		.word	4099
  71 0028 0C000000 		.word	.LC3
  72 002c 04100000 		.word	4100
  73 0030 00000000 		.word	0
  74 0034 00000000 		.word	0
  75              		.section	.text.valid_escape,"ax",%progbits
  76              		.align	2
  77              		.global	valid_escape
  78              		.code	16
  79              		.thumb_func
  80              		.type	valid_escape, %function
  81              	valid_escape:
  82              	.LFB35:
  83              		.file 1 "input.c"
   1:input.c       **** /****
   2:input.c       ****  * YAUGI -- Yet Another USB GPIB Interface
   3:input.c       ****  * 
   4:input.c       ****  * Lee Essen, 2019
   5:input.c       ****  *
   6:input.c       ****  * This work is licensed under a Creative Commons 
   7:input.c       ****  * Attribution-NonCommercial-ShareAlike 4.0 International License.
   8:input.c       ****  *
   9:input.c       ****  */
  10:input.c       **** 
  11:input.c       **** 
  12:input.c       **** #include "input.h"
  13:input.c       **** #include "serial.h"
  14:input.c       **** #include <stdarg.h>
  15:input.c       **** #include <stdio.h>
  16:input.c       **** 
  17:input.c       **** 
  18:input.c       **** #define INPUT_BUF_SIZE 128
  19:input.c       **** #define PROMPT "yaugi> "
  20:input.c       **** 
  21:input.c       **** uint8_t last_buf[INPUT_BUF_SIZE];           // keep the last command for recall
  22:input.c       **** int     last_buf_len = 0;
  23:input.c       **** 
  24:input.c       **** uint8_t input_buf[INPUT_BUF_SIZE];
  25:input.c       **** int     input_buf_len = 0;
  26:input.c       **** int     input_cursor_pos = 0;
  27:input.c       **** 
  28:input.c       **** uint8_t esc_buf[5];
  29:input.c       **** int     escape = 0;
  30:input.c       **** 
  31:input.c       **** #define ESC_UP      0x1001
ARM GAS  C:\Users\essele\AppData\Local\Temp\ccDAmW0A.s 			page 3


  32:input.c       **** #define ESC_DOWN    0x1002
  33:input.c       **** #define ESC_LEFT    0x1003
  34:input.c       **** #define ESC_RIGHT   0x1004
  35:input.c       **** 
  36:input.c       **** struct escape_sequence {
  37:input.c       ****     char *seq;
  38:input.c       ****     int  val;
  39:input.c       **** };
  40:input.c       **** 
  41:input.c       **** const struct escape_sequence escapes[] = {
  42:input.c       ****     { "\x1b[A", ESC_UP },
  43:input.c       ****     { "\x1b[B", ESC_DOWN },
  44:input.c       ****     { "\x1b[C", ESC_LEFT },
  45:input.c       ****     { "\x1b[D", ESC_RIGHT },
  46:input.c       ****     { NULL, 0 }
  47:input.c       **** };
  48:input.c       **** 
  49:input.c       **** /**
  50:input.c       ****  * See if the current escape sequence is valid, and potentially complete
  51:input.c       ****  * we return 0 for valid but not complete, -1 for invalid, or the value
  52:input.c       ****  * if valid.
  53:input.c       ****  */
  54:input.c       **** 
  55:input.c       **** int valid_escape(uint8_t *buf, unsigned int len) {
  84              		.loc 1 55 0
  85              		.cfi_startproc
  86              		@ args = 0, pretend = 0, frame = 16
  87              		@ frame_needed = 1, uses_anonymous_args = 0
  88 0000 80B5     		push	{r7, lr}
  89              		.cfi_def_cfa_offset 8
  90              		.cfi_offset 7, -8
  91              		.cfi_offset 14, -4
  92 0002 84B0     		sub	sp, sp, #16
  93              		.cfi_def_cfa_offset 24
  94 0004 00AF     		add	r7, sp, #0
  95              		.cfi_def_cfa_register 7
  96 0006 7860     		str	r0, [r7, #4]
  97 0008 3960     		str	r1, [r7]
  56:input.c       ****     unsigned int i = 0;
  98              		.loc 1 56 0
  99 000a 0023     		movs	r3, #0
 100 000c FB60     		str	r3, [r7, #12]
  57:input.c       ****     
  58:input.c       ****     while(escapes[i].val != 0) {
 101              		.loc 1 58 0
 102 000e 21E0     		b	.L2
 103              	.L6:
  59:input.c       ****         if (memcmp(escapes[i].seq, buf, len) == 0) {
 104              		.loc 1 59 0
 105 0010 174B     		ldr	r3, .L7
 106 0012 FA68     		ldr	r2, [r7, #12]
 107 0014 D200     		lsls	r2, r2, #3
 108 0016 D358     		ldr	r3, [r2, r3]
 109 0018 3A68     		ldr	r2, [r7]
 110 001a 7968     		ldr	r1, [r7, #4]
 111 001c 1800     		movs	r0, r3
 112 001e FFF7FEFF 		bl	memcmp
ARM GAS  C:\Users\essele\AppData\Local\Temp\ccDAmW0A.s 			page 4


 113 0022 031E     		subs	r3, r0, #0
 114 0024 13D1     		bne	.L3
  60:input.c       ****             if (strlen(escapes[i].seq) == len) {
 115              		.loc 1 60 0
 116 0026 124B     		ldr	r3, .L7
 117 0028 FA68     		ldr	r2, [r7, #12]
 118 002a D200     		lsls	r2, r2, #3
 119 002c D358     		ldr	r3, [r2, r3]
 120 002e 1800     		movs	r0, r3
 121 0030 FFF7FEFF 		bl	strlen
 122 0034 0200     		movs	r2, r0
 123 0036 3B68     		ldr	r3, [r7]
 124 0038 9A42     		cmp	r2, r3
 125 003a 06D1     		bne	.L4
  61:input.c       ****                 return escapes[i].val;
 126              		.loc 1 61 0
 127 003c 0C4A     		ldr	r2, .L7
 128 003e FB68     		ldr	r3, [r7, #12]
 129 0040 DB00     		lsls	r3, r3, #3
 130 0042 D318     		adds	r3, r2, r3
 131 0044 0433     		adds	r3, r3, #4
 132 0046 1B68     		ldr	r3, [r3]
 133 0048 0EE0     		b	.L5
 134              	.L4:
  62:input.c       ****             } else {
  63:input.c       ****                 return 0;
 135              		.loc 1 63 0
 136 004a 0023     		movs	r3, #0
 137 004c 0CE0     		b	.L5
 138              	.L3:
  64:input.c       ****             }
  65:input.c       ****         }
  66:input.c       ****         i++;
 139              		.loc 1 66 0
 140 004e FB68     		ldr	r3, [r7, #12]
 141 0050 0133     		adds	r3, r3, #1
 142 0052 FB60     		str	r3, [r7, #12]
 143              	.L2:
  58:input.c       ****         if (memcmp(escapes[i].seq, buf, len) == 0) {
 144              		.loc 1 58 0
 145 0054 064A     		ldr	r2, .L7
 146 0056 FB68     		ldr	r3, [r7, #12]
 147 0058 DB00     		lsls	r3, r3, #3
 148 005a D318     		adds	r3, r2, r3
 149 005c 0433     		adds	r3, r3, #4
 150 005e 1B68     		ldr	r3, [r3]
 151 0060 002B     		cmp	r3, #0
 152 0062 D5D1     		bne	.L6
  67:input.c       ****     }
  68:input.c       ****     // No match at all
  69:input.c       ****     return -1;
 153              		.loc 1 69 0
 154 0064 0123     		movs	r3, #1
 155 0066 5B42     		rsbs	r3, r3, #0
 156              	.L5:
  70:input.c       **** }
 157              		.loc 1 70 0
ARM GAS  C:\Users\essele\AppData\Local\Temp\ccDAmW0A.s 			page 5


 158 0068 1800     		movs	r0, r3
 159 006a BD46     		mov	sp, r7
 160 006c 04B0     		add	sp, sp, #16
 161              		@ sp needed
 162 006e 80BD     		pop	{r7, pc}
 163              	.L8:
 164              		.align	2
 165              	.L7:
 166 0070 00000000 		.word	escapes
 167              		.cfi_endproc
 168              	.LFE35:
 169              		.size	valid_escape, .-valid_escape
 170              		.section	.rodata
 171              		.align	2
 172              	.LC7:
 173 0038 79617567 		.ascii	"yaugi> \000"
 173      693E2000 
 174              		.section	.text.input_start,"ax",%progbits
 175              		.align	2
 176              		.global	input_start
 177              		.code	16
 178              		.thumb_func
 179              		.type	input_start, %function
 180              	input_start:
 181              	.LFB36:
  71:input.c       **** 
  72:input.c       **** /**
  73:input.c       ****  * Called when we need to start the input of a new line, just cleans up
  74:input.c       ****  * and shows the prompt
  75:input.c       ****  */
  76:input.c       **** void input_start() {
 182              		.loc 1 76 0
 183              		.cfi_startproc
 184              		@ args = 0, pretend = 0, frame = 0
 185              		@ frame_needed = 1, uses_anonymous_args = 0
 186 0000 80B5     		push	{r7, lr}
 187              		.cfi_def_cfa_offset 8
 188              		.cfi_offset 7, -8
 189              		.cfi_offset 14, -4
 190 0002 00AF     		add	r7, sp, #0
 191              		.cfi_def_cfa_register 7
  77:input.c       ****     input_buf[0] = 0;
 192              		.loc 1 77 0
 193 0004 074B     		ldr	r3, .L10
 194 0006 0022     		movs	r2, #0
 195 0008 1A70     		strb	r2, [r3]
  78:input.c       ****     input_buf_len = 0;
 196              		.loc 1 78 0
 197 000a 074B     		ldr	r3, .L10+4
 198 000c 0022     		movs	r2, #0
 199 000e 1A60     		str	r2, [r3]
  79:input.c       ****     serial_add_string(PROMPT);
 200              		.loc 1 79 0
 201 0010 064B     		ldr	r3, .L10+8
 202 0012 1800     		movs	r0, r3
 203 0014 FFF7FEFF 		bl	serial_add_string
  80:input.c       ****     serial_flush();
ARM GAS  C:\Users\essele\AppData\Local\Temp\ccDAmW0A.s 			page 6


 204              		.loc 1 80 0
 205 0018 FFF7FEFF 		bl	serial_flush
  81:input.c       **** }
 206              		.loc 1 81 0
 207 001c C046     		nop
 208 001e BD46     		mov	sp, r7
 209              		@ sp needed
 210 0020 80BD     		pop	{r7, pc}
 211              	.L11:
 212 0022 C046     		.align	2
 213              	.L10:
 214 0024 00000000 		.word	input_buf
 215 0028 00000000 		.word	input_buf_len
 216 002c 38000000 		.word	.LC7
 217              		.cfi_endproc
 218              	.LFE36:
 219              		.size	input_start, .-input_start
 220              		.section	.text.input_getbuffer,"ax",%progbits
 221              		.align	2
 222              		.global	input_getbuffer
 223              		.code	16
 224              		.thumb_func
 225              		.type	input_getbuffer, %function
 226              	input_getbuffer:
 227              	.LFB37:
  82:input.c       **** 
  83:input.c       **** /**
  84:input.c       ****  * Allow access to the input buffer
  85:input.c       ****  */
  86:input.c       **** uint8_t *input_getbuffer() {
 228              		.loc 1 86 0
 229              		.cfi_startproc
 230              		@ args = 0, pretend = 0, frame = 0
 231              		@ frame_needed = 1, uses_anonymous_args = 0
 232 0000 80B5     		push	{r7, lr}
 233              		.cfi_def_cfa_offset 8
 234              		.cfi_offset 7, -8
 235              		.cfi_offset 14, -4
 236 0002 00AF     		add	r7, sp, #0
 237              		.cfi_def_cfa_register 7
  87:input.c       ****     return input_buf;
 238              		.loc 1 87 0
 239 0004 014B     		ldr	r3, .L14
  88:input.c       **** }
 240              		.loc 1 88 0
 241 0006 1800     		movs	r0, r3
 242 0008 BD46     		mov	sp, r7
 243              		@ sp needed
 244 000a 80BD     		pop	{r7, pc}
 245              	.L15:
 246              		.align	2
 247              	.L14:
 248 000c 00000000 		.word	input_buf
 249              		.cfi_endproc
 250              	.LFE37:
 251              		.size	input_getbuffer, .-input_getbuffer
 252              		.section	.text.input_getlength,"ax",%progbits
ARM GAS  C:\Users\essele\AppData\Local\Temp\ccDAmW0A.s 			page 7


 253              		.align	2
 254              		.global	input_getlength
 255              		.code	16
 256              		.thumb_func
 257              		.type	input_getlength, %function
 258              	input_getlength:
 259              	.LFB38:
  89:input.c       **** 
  90:input.c       **** unsigned int input_getlength() {
 260              		.loc 1 90 0
 261              		.cfi_startproc
 262              		@ args = 0, pretend = 0, frame = 0
 263              		@ frame_needed = 1, uses_anonymous_args = 0
 264 0000 80B5     		push	{r7, lr}
 265              		.cfi_def_cfa_offset 8
 266              		.cfi_offset 7, -8
 267              		.cfi_offset 14, -4
 268 0002 00AF     		add	r7, sp, #0
 269              		.cfi_def_cfa_register 7
  91:input.c       ****     return input_buf_len;
 270              		.loc 1 91 0
 271 0004 024B     		ldr	r3, .L18
 272 0006 1B68     		ldr	r3, [r3]
  92:input.c       **** }
 273              		.loc 1 92 0
 274 0008 1800     		movs	r0, r3
 275 000a BD46     		mov	sp, r7
 276              		@ sp needed
 277 000c 80BD     		pop	{r7, pc}
 278              	.L19:
 279 000e C046     		.align	2
 280              	.L18:
 281 0010 00000000 		.word	input_buf_len
 282              		.cfi_endproc
 283              	.LFE38:
 284              		.size	input_getlength, .-input_getlength
 285              		.section	.rodata
 286              		.align	2
 287              	.LC14:
 288 0040 7F00     		.ascii	"\177\000"
 289 0042 0000     		.align	2
 290              	.LC16:
 291 0044 08200800 		.ascii	"\010 \010\000"
 292              		.align	2
 293              	.LC19:
 294 0048 0D0A00   		.ascii	"\015\012\000"
 295 004b 00       		.align	2
 296              	.LC23:
 297 004c 0D1B5B4B 		.ascii	"\015\033[K\000"
 297      00
 298              		.section	.text.input_data,"ax",%progbits
 299              		.align	2
 300              		.global	input_data
 301              		.code	16
 302              		.thumb_func
 303              		.type	input_data, %function
 304              	input_data:
ARM GAS  C:\Users\essele\AppData\Local\Temp\ccDAmW0A.s 			page 8


 305              	.LFB39:
  93:input.c       **** 
  94:input.c       **** /**
  95:input.c       ****  * Handles incoming serial data, processes interactive stuff and then returns
  96:input.c       ****  * 1 when we are ready with the line, or 0 otherwise.
  97:input.c       ****  */
  98:input.c       **** int input_data() {
 306              		.loc 1 98 0
 307              		.cfi_startproc
 308              		@ args = 0, pretend = 0, frame = 8
 309              		@ frame_needed = 1, uses_anonymous_args = 0
 310 0000 80B5     		push	{r7, lr}
 311              		.cfi_def_cfa_offset 8
 312              		.cfi_offset 7, -8
 313              		.cfi_offset 14, -4
 314 0002 82B0     		sub	sp, sp, #8
 315              		.cfi_def_cfa_offset 16
 316 0004 00AF     		add	r7, sp, #0
 317              		.cfi_def_cfa_register 7
  99:input.c       ****     int c = serial_getbyte();
 318              		.loc 1 99 0
 319 0006 FFF7FEFF 		bl	serial_getbyte
 320 000a 0300     		movs	r3, r0
 321 000c 7B60     		str	r3, [r7, #4]
 100:input.c       ****     
 101:input.c       ****     // First check if we are in the middle of an escape sequence...
 102:input.c       ****     if (escape) {
 322              		.loc 1 102 0
 323 000e 5F4B     		ldr	r3, .L43
 324 0010 1B68     		ldr	r3, [r3]
 325 0012 002B     		cmp	r3, #0
 326 0014 24D0     		beq	.L21
 103:input.c       ****         esc_buf[escape++] = c;
 327              		.loc 1 103 0
 328 0016 5D4B     		ldr	r3, .L43
 329 0018 1B68     		ldr	r3, [r3]
 330 001a 591C     		adds	r1, r3, #1
 331 001c 5B4A     		ldr	r2, .L43
 332 001e 1160     		str	r1, [r2]
 333 0020 7A68     		ldr	r2, [r7, #4]
 334 0022 D1B2     		uxtb	r1, r2
 335 0024 5A4A     		ldr	r2, .L43+4
 336 0026 D154     		strb	r1, [r2, r3]
 104:input.c       ****         
 105:input.c       ****         c = valid_escape(esc_buf, escape);
 337              		.loc 1 105 0
 338 0028 584B     		ldr	r3, .L43
 339 002a 1B68     		ldr	r3, [r3]
 340 002c 1A00     		movs	r2, r3
 341 002e 584B     		ldr	r3, .L43+4
 342 0030 1100     		movs	r1, r2
 343 0032 1800     		movs	r0, r3
 344 0034 FFF7FEFF 		bl	valid_escape
 345 0038 0300     		movs	r3, r0
 346 003a 7B60     		str	r3, [r7, #4]
 106:input.c       ****         if (c == -1) {
 347              		.loc 1 106 0
ARM GAS  C:\Users\essele\AppData\Local\Temp\ccDAmW0A.s 			page 9


 348 003c 7B68     		ldr	r3, [r7, #4]
 349 003e 0133     		adds	r3, r3, #1
 350 0040 05D1     		bne	.L22
 107:input.c       ****             // Not valid... we'll translate into a '?'
 108:input.c       ****             c = '?';
 351              		.loc 1 108 0
 352 0042 3F23     		movs	r3, #63
 353 0044 7B60     		str	r3, [r7, #4]
 109:input.c       ****             escape = 0;
 354              		.loc 1 109 0
 355 0046 514B     		ldr	r3, .L43
 356 0048 0022     		movs	r2, #0
 357 004a 1A60     		str	r2, [r3]
 358 004c 08E0     		b	.L21
 359              	.L22:
 110:input.c       ****         } else if (c != 0) {
 360              		.loc 1 110 0
 361 004e 7B68     		ldr	r3, [r7, #4]
 362 0050 002B     		cmp	r3, #0
 363 0052 03D0     		beq	.L23
 111:input.c       ****             // Must be a complete one...
 112:input.c       ****             escape = 0;
 364              		.loc 1 112 0
 365 0054 4D4B     		ldr	r3, .L43
 366 0056 0022     		movs	r2, #0
 367 0058 1A60     		str	r2, [r3]
 368 005a 01E0     		b	.L21
 369              	.L23:
 113:input.c       ****         } else {
 114:input.c       ****             // Partial match ... do nothing more
 115:input.c       ****             return 0;
 370              		.loc 1 115 0
 371 005c 0023     		movs	r3, #0
 372 005e 91E0     		b	.L39
 373              	.L21:
 116:input.c       ****         }
 117:input.c       ****     }
 118:input.c       ****     
 119:input.c       ****     // Now we can process incoming keys/data...
 120:input.c       ****     switch(c) {
 374              		.loc 1 120 0
 375 0060 7B68     		ldr	r3, [r7, #4]
 376 0062 1B2B     		cmp	r3, #27
 377 0064 15D0     		beq	.L26
 378 0066 07DC     		bgt	.L27
 379 0068 0A2B     		cmp	r3, #10
 380 006a 00D1     		bne	.LCB251
 381 006c 84E0     		b	.L40	@long jump
 382              	.LCB251:
 383 006e 0D2B     		cmp	r3, #13
 384 0070 36D0     		beq	.L29
 385 0072 082B     		cmp	r3, #8
 386 0074 24D0     		beq	.L30
 387 0076 6EE0     		b	.L25
 388              	.L27:
 389 0078 464A     		ldr	r2, .L43+8
 390 007a 9342     		cmp	r3, r2
ARM GAS  C:\Users\essele\AppData\Local\Temp\ccDAmW0A.s 			page 10


 391 007c 4DD0     		beq	.L31
 392 007e 454A     		ldr	r2, .L43+8
 393 0080 9342     		cmp	r3, r2
 394 0082 02DC     		bgt	.L32
 395 0084 7F2B     		cmp	r3, #127
 396 0086 0BD0     		beq	.L33
 397 0088 65E0     		b	.L25
 398              	.L32:
 399 008a 434A     		ldr	r2, .L43+12
 400 008c 9342     		cmp	r3, r2
 401 008e 62DC     		bgt	.L25
 121:input.c       ****         case 0x1b:      // Escape
 122:input.c       ****                         esc_buf[0] = 0x1b;
 123:input.c       ****                         escape = 1;
 124:input.c       ****                         break;
 125:input.c       ****                         
 126:input.c       ****         case 0x7f:      // Backspace
 127:input.c       ****                         if (input_buf_len > 0) {
 128:input.c       ****                             input_buf_len--;
 129:input.c       ****                             serial_add_string("\x7f");
 130:input.c       ****                             serial_flush();
 131:input.c       ****                         }
 132:input.c       ****                         break;
 133:input.c       **** 
 134:input.c       ****         case 0x08:      // Delete
 135:input.c       ****                         if (input_buf_len > 0) {
 136:input.c       ****                             input_buf_len--;
 137:input.c       ****                             serial_add_string("\x08 \x08");
 138:input.c       ****                             serial_flush();
 139:input.c       ****                         }
 140:input.c       ****                         break;
 141:input.c       ****                         
 142:input.c       ****         case '\n':      // Newline, just ignore
 143:input.c       ****                         break;
 144:input.c       ****                         
 145:input.c       ****         case '\r':      // Carriage return, end of line...
 146:input.c       ****                         input_buf[input_buf_len] = 0;
 147:input.c       ****                         serial_add_string("\r\n");
 148:input.c       ****                         serial_flush();
 149:input.c       ****                         
 150:input.c       ****                         // Keep the last command (if there was one)
 151:input.c       ****                         if (input_buf_len > 0) {
 152:input.c       ****                             memcpy(last_buf, input_buf, input_buf_len);
 153:input.c       ****                             last_buf_len = input_buf_len;
 154:input.c       ****                         }
 155:input.c       ****                         return 1;
 156:input.c       ****                         break;
 157:input.c       ****                         
 158:input.c       ****         case ESC_UP:    // Recall the last buffer
 159:input.c       ****                         memcpy(input_buf, last_buf, last_buf_len);
 160:input.c       ****                         input_buf_len = last_buf_len;
 161:input.c       ****                         
 162:input.c       ****                         // Clear the line, redraw the prompt and the line
 163:input.c       ****                         serial_add_string("\r\x1b[K");
 164:input.c       ****                         serial_add_string(PROMPT);
 165:input.c       ****                         serial_add(input_buf, input_buf_len);
 166:input.c       ****                         serial_flush();
ARM GAS  C:\Users\essele\AppData\Local\Temp\ccDAmW0A.s 			page 11


 167:input.c       ****                         break;
 168:input.c       ****                         
 169:input.c       ****         case ESC_DOWN:
 170:input.c       ****         case ESC_LEFT:
 171:input.c       ****         case ESC_RIGHT:
 172:input.c       ****                         break;
 402              		.loc 1 172 0
 403 0090 77E0     		b	.L35
 404              	.L26:
 122:input.c       ****                         escape = 1;
 405              		.loc 1 122 0
 406 0092 3F4B     		ldr	r3, .L43+4
 407 0094 1B22     		movs	r2, #27
 408 0096 1A70     		strb	r2, [r3]
 123:input.c       ****                         break;
 409              		.loc 1 123 0
 410 0098 3C4B     		ldr	r3, .L43
 411 009a 0122     		movs	r2, #1
 412 009c 1A60     		str	r2, [r3]
 124:input.c       ****                         
 413              		.loc 1 124 0
 414 009e 70E0     		b	.L35
 415              	.L33:
 127:input.c       ****                             input_buf_len--;
 416              		.loc 1 127 0
 417 00a0 3E4B     		ldr	r3, .L43+16
 418 00a2 1B68     		ldr	r3, [r3]
 419 00a4 002B     		cmp	r3, #0
 420 00a6 69DD     		ble	.L41
 128:input.c       ****                             serial_add_string("\x7f");
 421              		.loc 1 128 0
 422 00a8 3C4B     		ldr	r3, .L43+16
 423 00aa 1B68     		ldr	r3, [r3]
 424 00ac 5A1E     		subs	r2, r3, #1
 425 00ae 3B4B     		ldr	r3, .L43+16
 426 00b0 1A60     		str	r2, [r3]
 129:input.c       ****                             serial_flush();
 427              		.loc 1 129 0
 428 00b2 3B4B     		ldr	r3, .L43+20
 429 00b4 1800     		movs	r0, r3
 430 00b6 FFF7FEFF 		bl	serial_add_string
 130:input.c       ****                         }
 431              		.loc 1 130 0
 432 00ba FFF7FEFF 		bl	serial_flush
 132:input.c       **** 
 433              		.loc 1 132 0
 434 00be 5DE0     		b	.L41
 435              	.L30:
 135:input.c       ****                             input_buf_len--;
 436              		.loc 1 135 0
 437 00c0 364B     		ldr	r3, .L43+16
 438 00c2 1B68     		ldr	r3, [r3]
 439 00c4 002B     		cmp	r3, #0
 440 00c6 5BDD     		ble	.L42
 136:input.c       ****                             serial_add_string("\x08 \x08");
 441              		.loc 1 136 0
 442 00c8 344B     		ldr	r3, .L43+16
ARM GAS  C:\Users\essele\AppData\Local\Temp\ccDAmW0A.s 			page 12


 443 00ca 1B68     		ldr	r3, [r3]
 444 00cc 5A1E     		subs	r2, r3, #1
 445 00ce 334B     		ldr	r3, .L43+16
 446 00d0 1A60     		str	r2, [r3]
 137:input.c       ****                             serial_flush();
 447              		.loc 1 137 0
 448 00d2 344B     		ldr	r3, .L43+24
 449 00d4 1800     		movs	r0, r3
 450 00d6 FFF7FEFF 		bl	serial_add_string
 138:input.c       ****                         }
 451              		.loc 1 138 0
 452 00da FFF7FEFF 		bl	serial_flush
 140:input.c       ****                         
 453              		.loc 1 140 0
 454 00de 4FE0     		b	.L42
 455              	.L29:
 146:input.c       ****                         serial_add_string("\r\n");
 456              		.loc 1 146 0
 457 00e0 2E4B     		ldr	r3, .L43+16
 458 00e2 1B68     		ldr	r3, [r3]
 459 00e4 304A     		ldr	r2, .L43+28
 460 00e6 0021     		movs	r1, #0
 461 00e8 D154     		strb	r1, [r2, r3]
 147:input.c       ****                         serial_flush();
 462              		.loc 1 147 0
 463 00ea 304B     		ldr	r3, .L43+32
 464 00ec 1800     		movs	r0, r3
 465 00ee FFF7FEFF 		bl	serial_add_string
 148:input.c       ****                         
 466              		.loc 1 148 0
 467 00f2 FFF7FEFF 		bl	serial_flush
 151:input.c       ****                             memcpy(last_buf, input_buf, input_buf_len);
 468              		.loc 1 151 0
 469 00f6 294B     		ldr	r3, .L43+16
 470 00f8 1B68     		ldr	r3, [r3]
 471 00fa 002B     		cmp	r3, #0
 472 00fc 0BDD     		ble	.L38
 152:input.c       ****                             last_buf_len = input_buf_len;
 473              		.loc 1 152 0
 474 00fe 274B     		ldr	r3, .L43+16
 475 0100 1B68     		ldr	r3, [r3]
 476 0102 1A00     		movs	r2, r3
 477 0104 2849     		ldr	r1, .L43+28
 478 0106 2A4B     		ldr	r3, .L43+36
 479 0108 1800     		movs	r0, r3
 480 010a FFF7FEFF 		bl	memcpy
 153:input.c       ****                         }
 481              		.loc 1 153 0
 482 010e 234B     		ldr	r3, .L43+16
 483 0110 1A68     		ldr	r2, [r3]
 484 0112 284B     		ldr	r3, .L43+40
 485 0114 1A60     		str	r2, [r3]
 486              	.L38:
 155:input.c       ****                         break;
 487              		.loc 1 155 0
 488 0116 0123     		movs	r3, #1
 489 0118 34E0     		b	.L39
ARM GAS  C:\Users\essele\AppData\Local\Temp\ccDAmW0A.s 			page 13


 490              	.L31:
 159:input.c       ****                         input_buf_len = last_buf_len;
 491              		.loc 1 159 0
 492 011a 264B     		ldr	r3, .L43+40
 493 011c 1B68     		ldr	r3, [r3]
 494 011e 1A00     		movs	r2, r3
 495 0120 2349     		ldr	r1, .L43+36
 496 0122 214B     		ldr	r3, .L43+28
 497 0124 1800     		movs	r0, r3
 498 0126 FFF7FEFF 		bl	memcpy
 160:input.c       ****                         
 499              		.loc 1 160 0
 500 012a 224B     		ldr	r3, .L43+40
 501 012c 1A68     		ldr	r2, [r3]
 502 012e 1B4B     		ldr	r3, .L43+16
 503 0130 1A60     		str	r2, [r3]
 163:input.c       ****                         serial_add_string(PROMPT);
 504              		.loc 1 163 0
 505 0132 214B     		ldr	r3, .L43+44
 506 0134 1800     		movs	r0, r3
 507 0136 FFF7FEFF 		bl	serial_add_string
 164:input.c       ****                         serial_add(input_buf, input_buf_len);
 508              		.loc 1 164 0
 509 013a 204B     		ldr	r3, .L43+48
 510 013c 1800     		movs	r0, r3
 511 013e FFF7FEFF 		bl	serial_add_string
 165:input.c       ****                         serial_flush();
 512              		.loc 1 165 0
 513 0142 164B     		ldr	r3, .L43+16
 514 0144 1A68     		ldr	r2, [r3]
 515 0146 184B     		ldr	r3, .L43+28
 516 0148 1100     		movs	r1, r2
 517 014a 1800     		movs	r0, r3
 518 014c FFF7FEFF 		bl	serial_add
 166:input.c       ****                         break;
 519              		.loc 1 166 0
 520 0150 FFF7FEFF 		bl	serial_flush
 167:input.c       ****                         
 521              		.loc 1 167 0
 522 0154 15E0     		b	.L35
 523              	.L25:
 173:input.c       ****     
 174:input.c       ****         default:        // Normal character
 175:input.c       ****                         input_buf[input_buf_len++] = c;
 524              		.loc 1 175 0
 525 0156 114B     		ldr	r3, .L43+16
 526 0158 1B68     		ldr	r3, [r3]
 527 015a 591C     		adds	r1, r3, #1
 528 015c 0F4A     		ldr	r2, .L43+16
 529 015e 1160     		str	r1, [r2]
 530 0160 7A68     		ldr	r2, [r7, #4]
 531 0162 D1B2     		uxtb	r1, r2
 532 0164 104A     		ldr	r2, .L43+28
 533 0166 D154     		strb	r1, [r2, r3]
 176:input.c       ****                         serial_add((uint8_t *)&c, 1);
 534              		.loc 1 176 0
 535 0168 3B1D     		adds	r3, r7, #4
ARM GAS  C:\Users\essele\AppData\Local\Temp\ccDAmW0A.s 			page 14


 536 016a 0121     		movs	r1, #1
 537 016c 1800     		movs	r0, r3
 538 016e FFF7FEFF 		bl	serial_add
 177:input.c       ****                         serial_flush();
 539              		.loc 1 177 0
 540 0172 FFF7FEFF 		bl	serial_flush
 178:input.c       ****                         break;
 541              		.loc 1 178 0
 542 0176 04E0     		b	.L35
 543              	.L40:
 143:input.c       ****                         
 544              		.loc 1 143 0
 545 0178 C046     		nop
 546 017a 02E0     		b	.L35
 547              	.L41:
 132:input.c       **** 
 548              		.loc 1 132 0
 549 017c C046     		nop
 550 017e 00E0     		b	.L35
 551              	.L42:
 140:input.c       ****                         
 552              		.loc 1 140 0
 553 0180 C046     		nop
 554              	.L35:
 179:input.c       **** 
 180:input.c       ****     }
 181:input.c       ****     return 0;
 555              		.loc 1 181 0
 556 0182 0023     		movs	r3, #0
 557              	.L39:
 182:input.c       **** }
 558              		.loc 1 182 0 discriminator 1
 559 0184 1800     		movs	r0, r3
 560 0186 BD46     		mov	sp, r7
 561 0188 02B0     		add	sp, sp, #8
 562              		@ sp needed
 563 018a 80BD     		pop	{r7, pc}
 564              	.L44:
 565              		.align	2
 566              	.L43:
 567 018c 00000000 		.word	escape
 568 0190 00000000 		.word	esc_buf
 569 0194 01100000 		.word	4097
 570 0198 04100000 		.word	4100
 571 019c 00000000 		.word	input_buf_len
 572 01a0 40000000 		.word	.LC14
 573 01a4 44000000 		.word	.LC16
 574 01a8 00000000 		.word	input_buf
 575 01ac 48000000 		.word	.LC19
 576 01b0 00000000 		.word	last_buf
 577 01b4 00000000 		.word	last_buf_len
 578 01b8 4C000000 		.word	.LC23
 579 01bc 38000000 		.word	.LC7
 580              		.cfi_endproc
 581              	.LFE39:
 582              		.size	input_data, .-input_data
 583              		.section	.text.input_printf,"ax",%progbits
ARM GAS  C:\Users\essele\AppData\Local\Temp\ccDAmW0A.s 			page 15


 584              		.align	2
 585              		.global	input_printf
 586              		.code	16
 587              		.thumb_func
 588              		.type	input_printf, %function
 589              	input_printf:
 590              	.LFB40:
 183:input.c       **** 
 184:input.c       **** /**
 185:input.c       ****  * If we need to show some output then we need to clear the line, send the output and
 186:input.c       ****  * then recreate the state on the following line.
 187:input.c       ****  *
 188:input.c       ****  * Two ways of doing this...
 189:input.c       ****  */
 190:input.c       **** void input_printf(char *fmt, ...) {
 591              		.loc 1 190 0
 592              		.cfi_startproc
 593              		@ args = 4, pretend = 16, frame = 8
 594              		@ frame_needed = 1, uses_anonymous_args = 1
 595 0000 0FB4     		push	{r0, r1, r2, r3}
 596              		.cfi_def_cfa_offset 16
 597 0002 80B5     		push	{r7, lr}
 598              		.cfi_def_cfa_offset 24
 599              		.cfi_offset 7, -24
 600              		.cfi_offset 14, -20
 601 0004 82B0     		sub	sp, sp, #8
 602              		.cfi_def_cfa_offset 32
 603 0006 00AF     		add	r7, sp, #0
 604              		.cfi_def_cfa_register 7
 191:input.c       ****     
 192:input.c       ****     va_list args;
 193:input.c       ****     va_start(args, fmt);
 605              		.loc 1 193 0
 606 0008 1423     		movs	r3, #20
 607 000a FB18     		adds	r3, r7, r3
 608 000c 7B60     		str	r3, [r7, #4]
 194:input.c       **** 
 195:input.c       ****     serial_add_string("\r\x1b[K");
 609              		.loc 1 195 0
 610 000e 124B     		ldr	r3, .L46
 611 0010 1800     		movs	r0, r3
 612 0012 FFF7FEFF 		bl	serial_add_string
 196:input.c       ****     serial_vprintf(fmt, args);
 613              		.loc 1 196 0
 614 0016 7A68     		ldr	r2, [r7, #4]
 615 0018 3B69     		ldr	r3, [r7, #16]
 616 001a 1100     		movs	r1, r2
 617 001c 1800     		movs	r0, r3
 618 001e FFF7FEFF 		bl	serial_vprintf
 197:input.c       ****     serial_add_string("\r\n");
 619              		.loc 1 197 0
 620 0022 0E4B     		ldr	r3, .L46+4
 621 0024 1800     		movs	r0, r3
 622 0026 FFF7FEFF 		bl	serial_add_string
 198:input.c       ****     serial_add_string(PROMPT);
 623              		.loc 1 198 0
 624 002a 0D4B     		ldr	r3, .L46+8
ARM GAS  C:\Users\essele\AppData\Local\Temp\ccDAmW0A.s 			page 16


 625 002c 1800     		movs	r0, r3
 626 002e FFF7FEFF 		bl	serial_add_string
 199:input.c       ****     serial_add(input_buf, input_buf_len);
 627              		.loc 1 199 0
 628 0032 0C4B     		ldr	r3, .L46+12
 629 0034 1A68     		ldr	r2, [r3]
 630 0036 0C4B     		ldr	r3, .L46+16
 631 0038 1100     		movs	r1, r2
 632 003a 1800     		movs	r0, r3
 633 003c FFF7FEFF 		bl	serial_add
 200:input.c       ****     serial_flush();
 634              		.loc 1 200 0
 635 0040 FFF7FEFF 		bl	serial_flush
 201:input.c       ****     serial_flush();
 636              		.loc 1 201 0
 637 0044 FFF7FEFF 		bl	serial_flush
 202:input.c       **** }
 638              		.loc 1 202 0
 639 0048 C046     		nop
 640 004a BD46     		mov	sp, r7
 641 004c 02B0     		add	sp, sp, #8
 642              		@ sp needed
 643 004e 80BC     		pop	{r7}
 644 0050 08BC     		pop	{r3}
 645 0052 04B0     		add	sp, sp, #16
 646 0054 1847     		bx	r3
 647              	.L47:
 648 0056 C046     		.align	2
 649              	.L46:
 650 0058 4C000000 		.word	.LC23
 651 005c 48000000 		.word	.LC19
 652 0060 38000000 		.word	.LC7
 653 0064 00000000 		.word	input_buf_len
 654 0068 00000000 		.word	input_buf
 655              		.cfi_endproc
 656              	.LFE40:
 657              		.size	input_printf, .-input_printf
 658              		.section	.text.input_show_output,"ax",%progbits
 659              		.align	2
 660              		.global	input_show_output
 661              		.code	16
 662              		.thumb_func
 663              		.type	input_show_output, %function
 664              	input_show_output:
 665              	.LFB41:
 203:input.c       **** 
 204:input.c       **** void input_show_output(uint8_t *output, int len) {
 666              		.loc 1 204 0
 667              		.cfi_startproc
 668              		@ args = 0, pretend = 0, frame = 8
 669              		@ frame_needed = 1, uses_anonymous_args = 0
 670 0000 80B5     		push	{r7, lr}
 671              		.cfi_def_cfa_offset 8
 672              		.cfi_offset 7, -8
 673              		.cfi_offset 14, -4
 674 0002 82B0     		sub	sp, sp, #8
 675              		.cfi_def_cfa_offset 16
ARM GAS  C:\Users\essele\AppData\Local\Temp\ccDAmW0A.s 			page 17


 676 0004 00AF     		add	r7, sp, #0
 677              		.cfi_def_cfa_register 7
 678 0006 7860     		str	r0, [r7, #4]
 679 0008 3960     		str	r1, [r7]
 205:input.c       ****     serial_add_string("\r\x1b[K");
 680              		.loc 1 205 0
 681 000a 0F4B     		ldr	r3, .L49
 682 000c 1800     		movs	r0, r3
 683 000e FFF7FEFF 		bl	serial_add_string
 206:input.c       ****     serial_add(output, len);
 684              		.loc 1 206 0
 685 0012 3A68     		ldr	r2, [r7]
 686 0014 7B68     		ldr	r3, [r7, #4]
 687 0016 1100     		movs	r1, r2
 688 0018 1800     		movs	r0, r3
 689 001a FFF7FEFF 		bl	serial_add
 207:input.c       ****     serial_add_string("\r\n");
 690              		.loc 1 207 0
 691 001e 0B4B     		ldr	r3, .L49+4
 692 0020 1800     		movs	r0, r3
 693 0022 FFF7FEFF 		bl	serial_add_string
 208:input.c       ****     serial_add_string(PROMPT);
 694              		.loc 1 208 0
 695 0026 0A4B     		ldr	r3, .L49+8
 696 0028 1800     		movs	r0, r3
 697 002a FFF7FEFF 		bl	serial_add_string
 209:input.c       ****     serial_add(input_buf, input_buf_len);
 698              		.loc 1 209 0
 699 002e 094B     		ldr	r3, .L49+12
 700 0030 1A68     		ldr	r2, [r3]
 701 0032 094B     		ldr	r3, .L49+16
 702 0034 1100     		movs	r1, r2
 703 0036 1800     		movs	r0, r3
 704 0038 FFF7FEFF 		bl	serial_add
 210:input.c       ****     serial_flush();
 705              		.loc 1 210 0
 706 003c FFF7FEFF 		bl	serial_flush
 211:input.c       **** }
 707              		.loc 1 211 0
 708 0040 C046     		nop
 709 0042 BD46     		mov	sp, r7
 710 0044 02B0     		add	sp, sp, #8
 711              		@ sp needed
 712 0046 80BD     		pop	{r7, pc}
 713              	.L50:
 714              		.align	2
 715              	.L49:
 716 0048 4C000000 		.word	.LC23
 717 004c 48000000 		.word	.LC19
 718 0050 38000000 		.word	.LC7
 719 0054 00000000 		.word	input_buf_len
 720 0058 00000000 		.word	input_buf
 721              		.cfi_endproc
 722              	.LFE41:
 723              		.size	input_show_output, .-input_show_output
 724              		.section	.text.input_remove_cmdline,"ax",%progbits
 725              		.align	2
ARM GAS  C:\Users\essele\AppData\Local\Temp\ccDAmW0A.s 			page 18


 726              		.global	input_remove_cmdline
 727              		.code	16
 728              		.thumb_func
 729              		.type	input_remove_cmdline, %function
 730              	input_remove_cmdline:
 731              	.LFB42:
 212:input.c       **** 
 213:input.c       **** void input_remove_cmdline() {
 732              		.loc 1 213 0
 733              		.cfi_startproc
 734              		@ args = 0, pretend = 0, frame = 0
 735              		@ frame_needed = 1, uses_anonymous_args = 0
 736 0000 80B5     		push	{r7, lr}
 737              		.cfi_def_cfa_offset 8
 738              		.cfi_offset 7, -8
 739              		.cfi_offset 14, -4
 740 0002 00AF     		add	r7, sp, #0
 741              		.cfi_def_cfa_register 7
 214:input.c       ****     serial_add_string("\r\x1b[K");
 742              		.loc 1 214 0
 743 0004 034B     		ldr	r3, .L52
 744 0006 1800     		movs	r0, r3
 745 0008 FFF7FEFF 		bl	serial_add_string
 215:input.c       **** }
 746              		.loc 1 215 0
 747 000c C046     		nop
 748 000e BD46     		mov	sp, r7
 749              		@ sp needed
 750 0010 80BD     		pop	{r7, pc}
 751              	.L53:
 752 0012 C046     		.align	2
 753              	.L52:
 754 0014 4C000000 		.word	.LC23
 755              		.cfi_endproc
 756              	.LFE42:
 757              		.size	input_remove_cmdline, .-input_remove_cmdline
 758              		.section	.text.input_redraw_cmdline,"ax",%progbits
 759              		.align	2
 760              		.global	input_redraw_cmdline
 761              		.code	16
 762              		.thumb_func
 763              		.type	input_redraw_cmdline, %function
 764              	input_redraw_cmdline:
 765              	.LFB43:
 216:input.c       **** 
 217:input.c       **** void input_redraw_cmdline() {
 766              		.loc 1 217 0
 767              		.cfi_startproc
 768              		@ args = 0, pretend = 0, frame = 0
 769              		@ frame_needed = 1, uses_anonymous_args = 0
 770 0000 80B5     		push	{r7, lr}
 771              		.cfi_def_cfa_offset 8
 772              		.cfi_offset 7, -8
 773              		.cfi_offset 14, -4
 774 0002 00AF     		add	r7, sp, #0
 775              		.cfi_def_cfa_register 7
 218:input.c       ****     serial_add_string("\r\n");
ARM GAS  C:\Users\essele\AppData\Local\Temp\ccDAmW0A.s 			page 19


 776              		.loc 1 218 0
 777 0004 094B     		ldr	r3, .L55
 778 0006 1800     		movs	r0, r3
 779 0008 FFF7FEFF 		bl	serial_add_string
 219:input.c       ****     serial_add_string(PROMPT);
 780              		.loc 1 219 0
 781 000c 084B     		ldr	r3, .L55+4
 782 000e 1800     		movs	r0, r3
 783 0010 FFF7FEFF 		bl	serial_add_string
 220:input.c       ****     serial_add(input_buf, input_buf_len);
 784              		.loc 1 220 0
 785 0014 074B     		ldr	r3, .L55+8
 786 0016 1A68     		ldr	r2, [r3]
 787 0018 074B     		ldr	r3, .L55+12
 788 001a 1100     		movs	r1, r2
 789 001c 1800     		movs	r0, r3
 790 001e FFF7FEFF 		bl	serial_add
 221:input.c       ****     serial_flush();
 791              		.loc 1 221 0
 792 0022 FFF7FEFF 		bl	serial_flush
 222:input.c       **** }
 793              		.loc 1 222 0
 794 0026 C046     		nop
 795 0028 BD46     		mov	sp, r7
 796              		@ sp needed
 797 002a 80BD     		pop	{r7, pc}
 798              	.L56:
 799              		.align	2
 800              	.L55:
 801 002c 48000000 		.word	.LC19
 802 0030 38000000 		.word	.LC7
 803 0034 00000000 		.word	input_buf_len
 804 0038 00000000 		.word	input_buf
 805              		.cfi_endproc
 806              	.LFE43:
 807              		.size	input_redraw_cmdline, .-input_redraw_cmdline
 808              		.text
 809              	.Letext0:
 810              		.file 2 "c:\\program files (x86)\\cypress\\psoc creator\\4.2\\psoc creator\\import\\gnu\\arm\\5.4.
 811              		.file 3 "c:\\program files (x86)\\cypress\\psoc creator\\4.2\\psoc creator\\import\\gnu\\arm\\5.4.
 812              		.file 4 "c:\\program files (x86)\\cypress\\psoc creator\\4.2\\psoc creator\\import\\gnu\\arm\\5.4.
 813              		.file 5 "<built-in>"
 814              		.section	.debug_info,"",%progbits
 815              	.Ldebug_info0:
 816 0000 ED020000 		.4byte	0x2ed
 817 0004 0400     		.2byte	0x4
 818 0006 00000000 		.4byte	.Ldebug_abbrev0
 819 000a 04       		.byte	0x4
 820 000b 01       		.uleb128 0x1
 821 000c 03010000 		.4byte	.LASF38
 822 0010 0C       		.byte	0xc
 823 0011 EB010000 		.4byte	.LASF39
 824 0015 C2000000 		.4byte	.LASF40
 825 0019 00000000 		.4byte	.Ldebug_ranges0+0
 826 001d 00000000 		.4byte	0
 827 0021 00000000 		.4byte	.Ldebug_line0
 828 0025 02       		.uleb128 0x2
ARM GAS  C:\Users\essele\AppData\Local\Temp\ccDAmW0A.s 			page 20


 829 0026 01       		.byte	0x1
 830 0027 06       		.byte	0x6
 831 0028 86020000 		.4byte	.LASF0
 832 002c 03       		.uleb128 0x3
 833 002d 00000000 		.4byte	.LASF9
 834 0031 02       		.byte	0x2
 835 0032 1D       		.byte	0x1d
 836 0033 37000000 		.4byte	0x37
 837 0037 02       		.uleb128 0x2
 838 0038 01       		.byte	0x1
 839 0039 08       		.byte	0x8
 840 003a 95000000 		.4byte	.LASF1
 841 003e 02       		.uleb128 0x2
 842 003f 02       		.byte	0x2
 843 0040 05       		.byte	0x5
 844 0041 2C020000 		.4byte	.LASF2
 845 0045 02       		.uleb128 0x2
 846 0046 02       		.byte	0x2
 847 0047 07       		.byte	0x7
 848 0048 2E000000 		.4byte	.LASF3
 849 004c 02       		.uleb128 0x2
 850 004d 04       		.byte	0x4
 851 004e 05       		.byte	0x5
 852 004f 71020000 		.4byte	.LASF4
 853 0053 02       		.uleb128 0x2
 854 0054 04       		.byte	0x4
 855 0055 07       		.byte	0x7
 856 0056 B0000000 		.4byte	.LASF5
 857 005a 02       		.uleb128 0x2
 858 005b 08       		.byte	0x8
 859 005c 05       		.byte	0x5
 860 005d 19020000 		.4byte	.LASF6
 861 0061 02       		.uleb128 0x2
 862 0062 08       		.byte	0x8
 863 0063 07       		.byte	0x7
 864 0064 C7010000 		.4byte	.LASF7
 865 0068 04       		.uleb128 0x4
 866 0069 04       		.byte	0x4
 867 006a 05       		.byte	0x5
 868 006b 696E7400 		.ascii	"int\000"
 869 006f 02       		.uleb128 0x2
 870 0070 04       		.byte	0x4
 871 0071 07       		.byte	0x7
 872 0072 BA010000 		.4byte	.LASF8
 873 0076 03       		.uleb128 0x3
 874 0077 DE010000 		.4byte	.LASF10
 875 007b 03       		.byte	0x3
 876 007c 18       		.byte	0x18
 877 007d 2C000000 		.4byte	0x2c
 878 0081 02       		.uleb128 0x2
 879 0082 04       		.byte	0x4
 880 0083 04       		.byte	0x4
 881 0084 76000000 		.4byte	.LASF11
 882 0088 02       		.uleb128 0x2
 883 0089 08       		.byte	0x8
 884 008a 04       		.byte	0x4
 885 008b 99010000 		.4byte	.LASF12
ARM GAS  C:\Users\essele\AppData\Local\Temp\ccDAmW0A.s 			page 21


 886 008f 02       		.uleb128 0x2
 887 0090 01       		.byte	0x1
 888 0091 08       		.byte	0x8
 889 0092 27020000 		.4byte	.LASF13
 890 0096 02       		.uleb128 0x2
 891 0097 08       		.byte	0x8
 892 0098 04       		.byte	0x4
 893 0099 7A020000 		.4byte	.LASF14
 894 009d 02       		.uleb128 0x2
 895 009e 04       		.byte	0x4
 896 009f 07       		.byte	0x7
 897 00a0 F3010000 		.4byte	.LASF15
 898 00a4 05       		.uleb128 0x5
 899 00a5 04       		.byte	0x4
 900 00a6 06       		.uleb128 0x6
 901 00a7 04       		.byte	0x4
 902 00a8 8F000000 		.4byte	0x8f
 903 00ac 03       		.uleb128 0x3
 904 00ad 7C000000 		.4byte	.LASF16
 905 00b1 04       		.byte	0x4
 906 00b2 28       		.byte	0x28
 907 00b3 B7000000 		.4byte	0xb7
 908 00b7 07       		.uleb128 0x7
 909 00b8 8B000000 		.4byte	.LASF18
 910 00bc 04       		.byte	0x4
 911 00bd 05       		.byte	0x5
 912 00be 00       		.byte	0
 913 00bf CE000000 		.4byte	0xce
 914 00c3 08       		.uleb128 0x8
 915 00c4 E6010000 		.4byte	.LASF41
 916 00c8 A4000000 		.4byte	0xa4
 917 00cc 00       		.byte	0
 918 00cd 00       		.byte	0
 919 00ce 03       		.uleb128 0x3
 920 00cf 91010000 		.4byte	.LASF17
 921 00d3 04       		.byte	0x4
 922 00d4 62       		.byte	0x62
 923 00d5 AC000000 		.4byte	0xac
 924 00d9 07       		.uleb128 0x7
 925 00da A9020000 		.4byte	.LASF19
 926 00de 08       		.byte	0x8
 927 00df 01       		.byte	0x1
 928 00e0 24       		.byte	0x24
 929 00e1 FE000000 		.4byte	0xfe
 930 00e5 09       		.uleb128 0x9
 931 00e6 73657100 		.ascii	"seq\000"
 932 00ea 01       		.byte	0x1
 933 00eb 25       		.byte	0x25
 934 00ec A6000000 		.4byte	0xa6
 935 00f0 00       		.byte	0
 936 00f1 09       		.uleb128 0x9
 937 00f2 76616C00 		.ascii	"val\000"
 938 00f6 01       		.byte	0x1
 939 00f7 26       		.byte	0x26
 940 00f8 68000000 		.4byte	0x68
 941 00fc 04       		.byte	0x4
 942 00fd 00       		.byte	0
ARM GAS  C:\Users\essele\AppData\Local\Temp\ccDAmW0A.s 			page 22


 943 00fe 0A       		.uleb128 0xa
 944 00ff 56000000 		.4byte	.LASF42
 945 0103 01       		.byte	0x1
 946 0104 37       		.byte	0x37
 947 0105 68000000 		.4byte	0x68
 948 0109 00000000 		.4byte	.LFB35
 949 010d 74000000 		.4byte	.LFE35-.LFB35
 950 0111 01       		.uleb128 0x1
 951 0112 9C       		.byte	0x9c
 952 0113 40010000 		.4byte	0x140
 953 0117 0B       		.uleb128 0xb
 954 0118 62756600 		.ascii	"buf\000"
 955 011c 01       		.byte	0x1
 956 011d 37       		.byte	0x37
 957 011e 40010000 		.4byte	0x140
 958 0122 02       		.uleb128 0x2
 959 0123 91       		.byte	0x91
 960 0124 6C       		.sleb128 -20
 961 0125 0B       		.uleb128 0xb
 962 0126 6C656E00 		.ascii	"len\000"
 963 012a 01       		.byte	0x1
 964 012b 37       		.byte	0x37
 965 012c 6F000000 		.4byte	0x6f
 966 0130 02       		.uleb128 0x2
 967 0131 91       		.byte	0x91
 968 0132 68       		.sleb128 -24
 969 0133 0C       		.uleb128 0xc
 970 0134 6900     		.ascii	"i\000"
 971 0136 01       		.byte	0x1
 972 0137 38       		.byte	0x38
 973 0138 6F000000 		.4byte	0x6f
 974 013c 02       		.uleb128 0x2
 975 013d 91       		.byte	0x91
 976 013e 74       		.sleb128 -12
 977 013f 00       		.byte	0
 978 0140 06       		.uleb128 0x6
 979 0141 04       		.byte	0x4
 980 0142 76000000 		.4byte	0x76
 981 0146 0D       		.uleb128 0xd
 982 0147 22000000 		.4byte	.LASF27
 983 014b 01       		.byte	0x1
 984 014c 4C       		.byte	0x4c
 985 014d 00000000 		.4byte	.LFB36
 986 0151 30000000 		.4byte	.LFE36-.LFB36
 987 0155 01       		.uleb128 0x1
 988 0156 9C       		.byte	0x9c
 989 0157 0E       		.uleb128 0xe
 990 0158 AA010000 		.4byte	.LASF20
 991 015c 01       		.byte	0x1
 992 015d 56       		.byte	0x56
 993 015e 40010000 		.4byte	0x140
 994 0162 00000000 		.4byte	.LFB37
 995 0166 10000000 		.4byte	.LFE37-.LFB37
 996 016a 01       		.uleb128 0x1
 997 016b 9C       		.byte	0x9c
 998 016c 0E       		.uleb128 0xe
 999 016d FC010000 		.4byte	.LASF21
ARM GAS  C:\Users\essele\AppData\Local\Temp\ccDAmW0A.s 			page 23


 1000 0171 01       		.byte	0x1
 1001 0172 5A       		.byte	0x5a
 1002 0173 6F000000 		.4byte	0x6f
 1003 0177 00000000 		.4byte	.LFB38
 1004 017b 14000000 		.4byte	.LFE38-.LFB38
 1005 017f 01       		.uleb128 0x1
 1006 0180 9C       		.byte	0x9c
 1007 0181 0F       		.uleb128 0xf
 1008 0182 6B000000 		.4byte	.LASF22
 1009 0186 01       		.byte	0x1
 1010 0187 62       		.byte	0x62
 1011 0188 68000000 		.4byte	0x68
 1012 018c 00000000 		.4byte	.LFB39
 1013 0190 C0010000 		.4byte	.LFE39-.LFB39
 1014 0194 01       		.uleb128 0x1
 1015 0195 9C       		.byte	0x9c
 1016 0196 A7010000 		.4byte	0x1a7
 1017 019a 0C       		.uleb128 0xc
 1018 019b 6300     		.ascii	"c\000"
 1019 019d 01       		.byte	0x1
 1020 019e 63       		.byte	0x63
 1021 019f 68000000 		.4byte	0x68
 1022 01a3 02       		.uleb128 0x2
 1023 01a4 91       		.byte	0x91
 1024 01a5 74       		.sleb128 -12
 1025 01a6 00       		.byte	0
 1026 01a7 10       		.uleb128 0x10
 1027 01a8 0C020000 		.4byte	.LASF23
 1028 01ac 01       		.byte	0x1
 1029 01ad BE       		.byte	0xbe
 1030 01ae 00000000 		.4byte	.LFB40
 1031 01b2 6C000000 		.4byte	.LFE40-.LFB40
 1032 01b6 01       		.uleb128 0x1
 1033 01b7 9C       		.byte	0x9c
 1034 01b8 DA010000 		.4byte	0x1da
 1035 01bc 0B       		.uleb128 0xb
 1036 01bd 666D7400 		.ascii	"fmt\000"
 1037 01c1 01       		.byte	0x1
 1038 01c2 BE       		.byte	0xbe
 1039 01c3 A6000000 		.4byte	0xa6
 1040 01c7 02       		.uleb128 0x2
 1041 01c8 91       		.byte	0x91
 1042 01c9 70       		.sleb128 -16
 1043 01ca 11       		.uleb128 0x11
 1044 01cb 12       		.uleb128 0x12
 1045 01cc 36020000 		.4byte	.LASF24
 1046 01d0 01       		.byte	0x1
 1047 01d1 C0       		.byte	0xc0
 1048 01d2 CE000000 		.4byte	0xce
 1049 01d6 02       		.uleb128 0x2
 1050 01d7 91       		.byte	0x91
 1051 01d8 64       		.sleb128 -28
 1052 01d9 00       		.byte	0
 1053 01da 10       		.uleb128 0x10
 1054 01db 5F020000 		.4byte	.LASF25
 1055 01df 01       		.byte	0x1
 1056 01e0 CC       		.byte	0xcc
ARM GAS  C:\Users\essele\AppData\Local\Temp\ccDAmW0A.s 			page 24


 1057 01e1 00000000 		.4byte	.LFB41
 1058 01e5 5C000000 		.4byte	.LFE41-.LFB41
 1059 01e9 01       		.uleb128 0x1
 1060 01ea 9C       		.byte	0x9c
 1061 01eb 0C020000 		.4byte	0x20c
 1062 01ef 13       		.uleb128 0x13
 1063 01f0 3B020000 		.4byte	.LASF26
 1064 01f4 01       		.byte	0x1
 1065 01f5 CC       		.byte	0xcc
 1066 01f6 40010000 		.4byte	0x140
 1067 01fa 02       		.uleb128 0x2
 1068 01fb 91       		.byte	0x91
 1069 01fc 74       		.sleb128 -12
 1070 01fd 0B       		.uleb128 0xb
 1071 01fe 6C656E00 		.ascii	"len\000"
 1072 0202 01       		.byte	0x1
 1073 0203 CC       		.byte	0xcc
 1074 0204 68000000 		.4byte	0x68
 1075 0208 02       		.uleb128 0x2
 1076 0209 91       		.byte	0x91
 1077 020a 70       		.sleb128 -16
 1078 020b 00       		.byte	0
 1079 020c 0D       		.uleb128 0xd
 1080 020d 41000000 		.4byte	.LASF28
 1081 0211 01       		.byte	0x1
 1082 0212 D5       		.byte	0xd5
 1083 0213 00000000 		.4byte	.LFB42
 1084 0217 18000000 		.4byte	.LFE42-.LFB42
 1085 021b 01       		.uleb128 0x1
 1086 021c 9C       		.byte	0x9c
 1087 021d 0D       		.uleb128 0xd
 1088 021e 4A020000 		.4byte	.LASF29
 1089 0222 01       		.byte	0x1
 1090 0223 D9       		.byte	0xd9
 1091 0224 00000000 		.4byte	.LFB43
 1092 0228 3C000000 		.4byte	.LFE43-.LFB43
 1093 022c 01       		.uleb128 0x1
 1094 022d 9C       		.byte	0x9c
 1095 022e 14       		.uleb128 0x14
 1096 022f 76000000 		.4byte	0x76
 1097 0233 3E020000 		.4byte	0x23e
 1098 0237 15       		.uleb128 0x15
 1099 0238 9D000000 		.4byte	0x9d
 1100 023c 7F       		.byte	0x7f
 1101 023d 00       		.byte	0
 1102 023e 16       		.uleb128 0x16
 1103 023f 92020000 		.4byte	.LASF30
 1104 0243 01       		.byte	0x1
 1105 0244 15       		.byte	0x15
 1106 0245 2E020000 		.4byte	0x22e
 1107 0249 05       		.uleb128 0x5
 1108 024a 03       		.byte	0x3
 1109 024b 00000000 		.4byte	last_buf
 1110 024f 16       		.uleb128 0x16
 1111 0250 A3000000 		.4byte	.LASF31
 1112 0254 01       		.byte	0x1
 1113 0255 16       		.byte	0x16
ARM GAS  C:\Users\essele\AppData\Local\Temp\ccDAmW0A.s 			page 25


 1114 0256 68000000 		.4byte	0x68
 1115 025a 05       		.uleb128 0x5
 1116 025b 03       		.byte	0x3
 1117 025c 00000000 		.4byte	last_buf_len
 1118 0260 16       		.uleb128 0x16
 1119 0261 A0010000 		.4byte	.LASF32
 1120 0265 01       		.byte	0x1
 1121 0266 18       		.byte	0x18
 1122 0267 2E020000 		.4byte	0x22e
 1123 026b 05       		.uleb128 0x5
 1124 026c 03       		.byte	0x3
 1125 026d 00000000 		.4byte	input_buf
 1126 0271 16       		.uleb128 0x16
 1127 0272 9B020000 		.4byte	.LASF33
 1128 0276 01       		.byte	0x1
 1129 0277 19       		.byte	0x19
 1130 0278 68000000 		.4byte	0x68
 1131 027c 05       		.uleb128 0x5
 1132 027d 03       		.byte	0x3
 1133 027e 00000000 		.4byte	input_buf_len
 1134 0282 16       		.uleb128 0x16
 1135 0283 11000000 		.4byte	.LASF34
 1136 0287 01       		.byte	0x1
 1137 0288 1A       		.byte	0x1a
 1138 0289 68000000 		.4byte	0x68
 1139 028d 05       		.uleb128 0x5
 1140 028e 03       		.byte	0x3
 1141 028f 00000000 		.4byte	input_cursor_pos
 1142 0293 14       		.uleb128 0x14
 1143 0294 76000000 		.4byte	0x76
 1144 0298 A3020000 		.4byte	0x2a3
 1145 029c 15       		.uleb128 0x15
 1146 029d 9D000000 		.4byte	0x9d
 1147 02a1 04       		.byte	0x4
 1148 02a2 00       		.byte	0
 1149 02a3 16       		.uleb128 0x16
 1150 02a4 42020000 		.4byte	.LASF35
 1151 02a8 01       		.byte	0x1
 1152 02a9 1C       		.byte	0x1c
 1153 02aa 93020000 		.4byte	0x293
 1154 02ae 05       		.uleb128 0x5
 1155 02af 03       		.byte	0x3
 1156 02b0 00000000 		.4byte	esc_buf
 1157 02b4 16       		.uleb128 0x16
 1158 02b5 0A000000 		.4byte	.LASF36
 1159 02b9 01       		.byte	0x1
 1160 02ba 1D       		.byte	0x1d
 1161 02bb 68000000 		.4byte	0x68
 1162 02bf 05       		.uleb128 0x5
 1163 02c0 03       		.byte	0x3
 1164 02c1 00000000 		.4byte	escape
 1165 02c5 14       		.uleb128 0x14
 1166 02c6 D5020000 		.4byte	0x2d5
 1167 02ca D5020000 		.4byte	0x2d5
 1168 02ce 15       		.uleb128 0x15
 1169 02cf 9D000000 		.4byte	0x9d
 1170 02d3 04       		.byte	0x4
ARM GAS  C:\Users\essele\AppData\Local\Temp\ccDAmW0A.s 			page 26


 1171 02d4 00       		.byte	0
 1172 02d5 17       		.uleb128 0x17
 1173 02d6 D9000000 		.4byte	0xd9
 1174 02da 16       		.uleb128 0x16
 1175 02db 63000000 		.4byte	.LASF37
 1176 02df 01       		.byte	0x1
 1177 02e0 29       		.byte	0x29
 1178 02e1 EB020000 		.4byte	0x2eb
 1179 02e5 05       		.uleb128 0x5
 1180 02e6 03       		.byte	0x3
 1181 02e7 00000000 		.4byte	escapes
 1182 02eb 17       		.uleb128 0x17
 1183 02ec C5020000 		.4byte	0x2c5
 1184 02f0 00       		.byte	0
 1185              		.section	.debug_abbrev,"",%progbits
 1186              	.Ldebug_abbrev0:
 1187 0000 01       		.uleb128 0x1
 1188 0001 11       		.uleb128 0x11
 1189 0002 01       		.byte	0x1
 1190 0003 25       		.uleb128 0x25
 1191 0004 0E       		.uleb128 0xe
 1192 0005 13       		.uleb128 0x13
 1193 0006 0B       		.uleb128 0xb
 1194 0007 03       		.uleb128 0x3
 1195 0008 0E       		.uleb128 0xe
 1196 0009 1B       		.uleb128 0x1b
 1197 000a 0E       		.uleb128 0xe
 1198 000b 55       		.uleb128 0x55
 1199 000c 17       		.uleb128 0x17
 1200 000d 11       		.uleb128 0x11
 1201 000e 01       		.uleb128 0x1
 1202 000f 10       		.uleb128 0x10
 1203 0010 17       		.uleb128 0x17
 1204 0011 00       		.byte	0
 1205 0012 00       		.byte	0
 1206 0013 02       		.uleb128 0x2
 1207 0014 24       		.uleb128 0x24
 1208 0015 00       		.byte	0
 1209 0016 0B       		.uleb128 0xb
 1210 0017 0B       		.uleb128 0xb
 1211 0018 3E       		.uleb128 0x3e
 1212 0019 0B       		.uleb128 0xb
 1213 001a 03       		.uleb128 0x3
 1214 001b 0E       		.uleb128 0xe
 1215 001c 00       		.byte	0
 1216 001d 00       		.byte	0
 1217 001e 03       		.uleb128 0x3
 1218 001f 16       		.uleb128 0x16
 1219 0020 00       		.byte	0
 1220 0021 03       		.uleb128 0x3
 1221 0022 0E       		.uleb128 0xe
 1222 0023 3A       		.uleb128 0x3a
 1223 0024 0B       		.uleb128 0xb
 1224 0025 3B       		.uleb128 0x3b
 1225 0026 0B       		.uleb128 0xb
 1226 0027 49       		.uleb128 0x49
 1227 0028 13       		.uleb128 0x13
ARM GAS  C:\Users\essele\AppData\Local\Temp\ccDAmW0A.s 			page 27


 1228 0029 00       		.byte	0
 1229 002a 00       		.byte	0
 1230 002b 04       		.uleb128 0x4
 1231 002c 24       		.uleb128 0x24
 1232 002d 00       		.byte	0
 1233 002e 0B       		.uleb128 0xb
 1234 002f 0B       		.uleb128 0xb
 1235 0030 3E       		.uleb128 0x3e
 1236 0031 0B       		.uleb128 0xb
 1237 0032 03       		.uleb128 0x3
 1238 0033 08       		.uleb128 0x8
 1239 0034 00       		.byte	0
 1240 0035 00       		.byte	0
 1241 0036 05       		.uleb128 0x5
 1242 0037 0F       		.uleb128 0xf
 1243 0038 00       		.byte	0
 1244 0039 0B       		.uleb128 0xb
 1245 003a 0B       		.uleb128 0xb
 1246 003b 00       		.byte	0
 1247 003c 00       		.byte	0
 1248 003d 06       		.uleb128 0x6
 1249 003e 0F       		.uleb128 0xf
 1250 003f 00       		.byte	0
 1251 0040 0B       		.uleb128 0xb
 1252 0041 0B       		.uleb128 0xb
 1253 0042 49       		.uleb128 0x49
 1254 0043 13       		.uleb128 0x13
 1255 0044 00       		.byte	0
 1256 0045 00       		.byte	0
 1257 0046 07       		.uleb128 0x7
 1258 0047 13       		.uleb128 0x13
 1259 0048 01       		.byte	0x1
 1260 0049 03       		.uleb128 0x3
 1261 004a 0E       		.uleb128 0xe
 1262 004b 0B       		.uleb128 0xb
 1263 004c 0B       		.uleb128 0xb
 1264 004d 3A       		.uleb128 0x3a
 1265 004e 0B       		.uleb128 0xb
 1266 004f 3B       		.uleb128 0x3b
 1267 0050 0B       		.uleb128 0xb
 1268 0051 01       		.uleb128 0x1
 1269 0052 13       		.uleb128 0x13
 1270 0053 00       		.byte	0
 1271 0054 00       		.byte	0
 1272 0055 08       		.uleb128 0x8
 1273 0056 0D       		.uleb128 0xd
 1274 0057 00       		.byte	0
 1275 0058 03       		.uleb128 0x3
 1276 0059 0E       		.uleb128 0xe
 1277 005a 49       		.uleb128 0x49
 1278 005b 13       		.uleb128 0x13
 1279 005c 38       		.uleb128 0x38
 1280 005d 0B       		.uleb128 0xb
 1281 005e 34       		.uleb128 0x34
 1282 005f 19       		.uleb128 0x19
 1283 0060 00       		.byte	0
 1284 0061 00       		.byte	0
ARM GAS  C:\Users\essele\AppData\Local\Temp\ccDAmW0A.s 			page 28


 1285 0062 09       		.uleb128 0x9
 1286 0063 0D       		.uleb128 0xd
 1287 0064 00       		.byte	0
 1288 0065 03       		.uleb128 0x3
 1289 0066 08       		.uleb128 0x8
 1290 0067 3A       		.uleb128 0x3a
 1291 0068 0B       		.uleb128 0xb
 1292 0069 3B       		.uleb128 0x3b
 1293 006a 0B       		.uleb128 0xb
 1294 006b 49       		.uleb128 0x49
 1295 006c 13       		.uleb128 0x13
 1296 006d 38       		.uleb128 0x38
 1297 006e 0B       		.uleb128 0xb
 1298 006f 00       		.byte	0
 1299 0070 00       		.byte	0
 1300 0071 0A       		.uleb128 0xa
 1301 0072 2E       		.uleb128 0x2e
 1302 0073 01       		.byte	0x1
 1303 0074 3F       		.uleb128 0x3f
 1304 0075 19       		.uleb128 0x19
 1305 0076 03       		.uleb128 0x3
 1306 0077 0E       		.uleb128 0xe
 1307 0078 3A       		.uleb128 0x3a
 1308 0079 0B       		.uleb128 0xb
 1309 007a 3B       		.uleb128 0x3b
 1310 007b 0B       		.uleb128 0xb
 1311 007c 27       		.uleb128 0x27
 1312 007d 19       		.uleb128 0x19
 1313 007e 49       		.uleb128 0x49
 1314 007f 13       		.uleb128 0x13
 1315 0080 11       		.uleb128 0x11
 1316 0081 01       		.uleb128 0x1
 1317 0082 12       		.uleb128 0x12
 1318 0083 06       		.uleb128 0x6
 1319 0084 40       		.uleb128 0x40
 1320 0085 18       		.uleb128 0x18
 1321 0086 9642     		.uleb128 0x2116
 1322 0088 19       		.uleb128 0x19
 1323 0089 01       		.uleb128 0x1
 1324 008a 13       		.uleb128 0x13
 1325 008b 00       		.byte	0
 1326 008c 00       		.byte	0
 1327 008d 0B       		.uleb128 0xb
 1328 008e 05       		.uleb128 0x5
 1329 008f 00       		.byte	0
 1330 0090 03       		.uleb128 0x3
 1331 0091 08       		.uleb128 0x8
 1332 0092 3A       		.uleb128 0x3a
 1333 0093 0B       		.uleb128 0xb
 1334 0094 3B       		.uleb128 0x3b
 1335 0095 0B       		.uleb128 0xb
 1336 0096 49       		.uleb128 0x49
 1337 0097 13       		.uleb128 0x13
 1338 0098 02       		.uleb128 0x2
 1339 0099 18       		.uleb128 0x18
 1340 009a 00       		.byte	0
 1341 009b 00       		.byte	0
ARM GAS  C:\Users\essele\AppData\Local\Temp\ccDAmW0A.s 			page 29


 1342 009c 0C       		.uleb128 0xc
 1343 009d 34       		.uleb128 0x34
 1344 009e 00       		.byte	0
 1345 009f 03       		.uleb128 0x3
 1346 00a0 08       		.uleb128 0x8
 1347 00a1 3A       		.uleb128 0x3a
 1348 00a2 0B       		.uleb128 0xb
 1349 00a3 3B       		.uleb128 0x3b
 1350 00a4 0B       		.uleb128 0xb
 1351 00a5 49       		.uleb128 0x49
 1352 00a6 13       		.uleb128 0x13
 1353 00a7 02       		.uleb128 0x2
 1354 00a8 18       		.uleb128 0x18
 1355 00a9 00       		.byte	0
 1356 00aa 00       		.byte	0
 1357 00ab 0D       		.uleb128 0xd
 1358 00ac 2E       		.uleb128 0x2e
 1359 00ad 00       		.byte	0
 1360 00ae 3F       		.uleb128 0x3f
 1361 00af 19       		.uleb128 0x19
 1362 00b0 03       		.uleb128 0x3
 1363 00b1 0E       		.uleb128 0xe
 1364 00b2 3A       		.uleb128 0x3a
 1365 00b3 0B       		.uleb128 0xb
 1366 00b4 3B       		.uleb128 0x3b
 1367 00b5 0B       		.uleb128 0xb
 1368 00b6 11       		.uleb128 0x11
 1369 00b7 01       		.uleb128 0x1
 1370 00b8 12       		.uleb128 0x12
 1371 00b9 06       		.uleb128 0x6
 1372 00ba 40       		.uleb128 0x40
 1373 00bb 18       		.uleb128 0x18
 1374 00bc 9642     		.uleb128 0x2116
 1375 00be 19       		.uleb128 0x19
 1376 00bf 00       		.byte	0
 1377 00c0 00       		.byte	0
 1378 00c1 0E       		.uleb128 0xe
 1379 00c2 2E       		.uleb128 0x2e
 1380 00c3 00       		.byte	0
 1381 00c4 3F       		.uleb128 0x3f
 1382 00c5 19       		.uleb128 0x19
 1383 00c6 03       		.uleb128 0x3
 1384 00c7 0E       		.uleb128 0xe
 1385 00c8 3A       		.uleb128 0x3a
 1386 00c9 0B       		.uleb128 0xb
 1387 00ca 3B       		.uleb128 0x3b
 1388 00cb 0B       		.uleb128 0xb
 1389 00cc 49       		.uleb128 0x49
 1390 00cd 13       		.uleb128 0x13
 1391 00ce 11       		.uleb128 0x11
 1392 00cf 01       		.uleb128 0x1
 1393 00d0 12       		.uleb128 0x12
 1394 00d1 06       		.uleb128 0x6
 1395 00d2 40       		.uleb128 0x40
 1396 00d3 18       		.uleb128 0x18
 1397 00d4 9742     		.uleb128 0x2117
 1398 00d6 19       		.uleb128 0x19
ARM GAS  C:\Users\essele\AppData\Local\Temp\ccDAmW0A.s 			page 30


 1399 00d7 00       		.byte	0
 1400 00d8 00       		.byte	0
 1401 00d9 0F       		.uleb128 0xf
 1402 00da 2E       		.uleb128 0x2e
 1403 00db 01       		.byte	0x1
 1404 00dc 3F       		.uleb128 0x3f
 1405 00dd 19       		.uleb128 0x19
 1406 00de 03       		.uleb128 0x3
 1407 00df 0E       		.uleb128 0xe
 1408 00e0 3A       		.uleb128 0x3a
 1409 00e1 0B       		.uleb128 0xb
 1410 00e2 3B       		.uleb128 0x3b
 1411 00e3 0B       		.uleb128 0xb
 1412 00e4 49       		.uleb128 0x49
 1413 00e5 13       		.uleb128 0x13
 1414 00e6 11       		.uleb128 0x11
 1415 00e7 01       		.uleb128 0x1
 1416 00e8 12       		.uleb128 0x12
 1417 00e9 06       		.uleb128 0x6
 1418 00ea 40       		.uleb128 0x40
 1419 00eb 18       		.uleb128 0x18
 1420 00ec 9642     		.uleb128 0x2116
 1421 00ee 19       		.uleb128 0x19
 1422 00ef 01       		.uleb128 0x1
 1423 00f0 13       		.uleb128 0x13
 1424 00f1 00       		.byte	0
 1425 00f2 00       		.byte	0
 1426 00f3 10       		.uleb128 0x10
 1427 00f4 2E       		.uleb128 0x2e
 1428 00f5 01       		.byte	0x1
 1429 00f6 3F       		.uleb128 0x3f
 1430 00f7 19       		.uleb128 0x19
 1431 00f8 03       		.uleb128 0x3
 1432 00f9 0E       		.uleb128 0xe
 1433 00fa 3A       		.uleb128 0x3a
 1434 00fb 0B       		.uleb128 0xb
 1435 00fc 3B       		.uleb128 0x3b
 1436 00fd 0B       		.uleb128 0xb
 1437 00fe 27       		.uleb128 0x27
 1438 00ff 19       		.uleb128 0x19
 1439 0100 11       		.uleb128 0x11
 1440 0101 01       		.uleb128 0x1
 1441 0102 12       		.uleb128 0x12
 1442 0103 06       		.uleb128 0x6
 1443 0104 40       		.uleb128 0x40
 1444 0105 18       		.uleb128 0x18
 1445 0106 9642     		.uleb128 0x2116
 1446 0108 19       		.uleb128 0x19
 1447 0109 01       		.uleb128 0x1
 1448 010a 13       		.uleb128 0x13
 1449 010b 00       		.byte	0
 1450 010c 00       		.byte	0
 1451 010d 11       		.uleb128 0x11
 1452 010e 18       		.uleb128 0x18
 1453 010f 00       		.byte	0
 1454 0110 00       		.byte	0
 1455 0111 00       		.byte	0
ARM GAS  C:\Users\essele\AppData\Local\Temp\ccDAmW0A.s 			page 31


 1456 0112 12       		.uleb128 0x12
 1457 0113 34       		.uleb128 0x34
 1458 0114 00       		.byte	0
 1459 0115 03       		.uleb128 0x3
 1460 0116 0E       		.uleb128 0xe
 1461 0117 3A       		.uleb128 0x3a
 1462 0118 0B       		.uleb128 0xb
 1463 0119 3B       		.uleb128 0x3b
 1464 011a 0B       		.uleb128 0xb
 1465 011b 49       		.uleb128 0x49
 1466 011c 13       		.uleb128 0x13
 1467 011d 02       		.uleb128 0x2
 1468 011e 18       		.uleb128 0x18
 1469 011f 00       		.byte	0
 1470 0120 00       		.byte	0
 1471 0121 13       		.uleb128 0x13
 1472 0122 05       		.uleb128 0x5
 1473 0123 00       		.byte	0
 1474 0124 03       		.uleb128 0x3
 1475 0125 0E       		.uleb128 0xe
 1476 0126 3A       		.uleb128 0x3a
 1477 0127 0B       		.uleb128 0xb
 1478 0128 3B       		.uleb128 0x3b
 1479 0129 0B       		.uleb128 0xb
 1480 012a 49       		.uleb128 0x49
 1481 012b 13       		.uleb128 0x13
 1482 012c 02       		.uleb128 0x2
 1483 012d 18       		.uleb128 0x18
 1484 012e 00       		.byte	0
 1485 012f 00       		.byte	0
 1486 0130 14       		.uleb128 0x14
 1487 0131 01       		.uleb128 0x1
 1488 0132 01       		.byte	0x1
 1489 0133 49       		.uleb128 0x49
 1490 0134 13       		.uleb128 0x13
 1491 0135 01       		.uleb128 0x1
 1492 0136 13       		.uleb128 0x13
 1493 0137 00       		.byte	0
 1494 0138 00       		.byte	0
 1495 0139 15       		.uleb128 0x15
 1496 013a 21       		.uleb128 0x21
 1497 013b 00       		.byte	0
 1498 013c 49       		.uleb128 0x49
 1499 013d 13       		.uleb128 0x13
 1500 013e 2F       		.uleb128 0x2f
 1501 013f 0B       		.uleb128 0xb
 1502 0140 00       		.byte	0
 1503 0141 00       		.byte	0
 1504 0142 16       		.uleb128 0x16
 1505 0143 34       		.uleb128 0x34
 1506 0144 00       		.byte	0
 1507 0145 03       		.uleb128 0x3
 1508 0146 0E       		.uleb128 0xe
 1509 0147 3A       		.uleb128 0x3a
 1510 0148 0B       		.uleb128 0xb
 1511 0149 3B       		.uleb128 0x3b
 1512 014a 0B       		.uleb128 0xb
ARM GAS  C:\Users\essele\AppData\Local\Temp\ccDAmW0A.s 			page 32


 1513 014b 49       		.uleb128 0x49
 1514 014c 13       		.uleb128 0x13
 1515 014d 3F       		.uleb128 0x3f
 1516 014e 19       		.uleb128 0x19
 1517 014f 02       		.uleb128 0x2
 1518 0150 18       		.uleb128 0x18
 1519 0151 00       		.byte	0
 1520 0152 00       		.byte	0
 1521 0153 17       		.uleb128 0x17
 1522 0154 26       		.uleb128 0x26
 1523 0155 00       		.byte	0
 1524 0156 49       		.uleb128 0x49
 1525 0157 13       		.uleb128 0x13
 1526 0158 00       		.byte	0
 1527 0159 00       		.byte	0
 1528 015a 00       		.byte	0
 1529              		.section	.debug_aranges,"",%progbits
 1530 0000 5C000000 		.4byte	0x5c
 1531 0004 0200     		.2byte	0x2
 1532 0006 00000000 		.4byte	.Ldebug_info0
 1533 000a 04       		.byte	0x4
 1534 000b 00       		.byte	0
 1535 000c 0000     		.2byte	0
 1536 000e 0000     		.2byte	0
 1537 0010 00000000 		.4byte	.LFB35
 1538 0014 74000000 		.4byte	.LFE35-.LFB35
 1539 0018 00000000 		.4byte	.LFB36
 1540 001c 30000000 		.4byte	.LFE36-.LFB36
 1541 0020 00000000 		.4byte	.LFB37
 1542 0024 10000000 		.4byte	.LFE37-.LFB37
 1543 0028 00000000 		.4byte	.LFB38
 1544 002c 14000000 		.4byte	.LFE38-.LFB38
 1545 0030 00000000 		.4byte	.LFB39
 1546 0034 C0010000 		.4byte	.LFE39-.LFB39
 1547 0038 00000000 		.4byte	.LFB40
 1548 003c 6C000000 		.4byte	.LFE40-.LFB40
 1549 0040 00000000 		.4byte	.LFB41
 1550 0044 5C000000 		.4byte	.LFE41-.LFB41
 1551 0048 00000000 		.4byte	.LFB42
 1552 004c 18000000 		.4byte	.LFE42-.LFB42
 1553 0050 00000000 		.4byte	.LFB43
 1554 0054 3C000000 		.4byte	.LFE43-.LFB43
 1555 0058 00000000 		.4byte	0
 1556 005c 00000000 		.4byte	0
 1557              		.section	.debug_ranges,"",%progbits
 1558              	.Ldebug_ranges0:
 1559 0000 00000000 		.4byte	.LFB35
 1560 0004 74000000 		.4byte	.LFE35
 1561 0008 00000000 		.4byte	.LFB36
 1562 000c 30000000 		.4byte	.LFE36
 1563 0010 00000000 		.4byte	.LFB37
 1564 0014 10000000 		.4byte	.LFE37
 1565 0018 00000000 		.4byte	.LFB38
 1566 001c 14000000 		.4byte	.LFE38
 1567 0020 00000000 		.4byte	.LFB39
 1568 0024 C0010000 		.4byte	.LFE39
 1569 0028 00000000 		.4byte	.LFB40
ARM GAS  C:\Users\essele\AppData\Local\Temp\ccDAmW0A.s 			page 33


 1570 002c 6C000000 		.4byte	.LFE40
 1571 0030 00000000 		.4byte	.LFB41
 1572 0034 5C000000 		.4byte	.LFE41
 1573 0038 00000000 		.4byte	.LFB42
 1574 003c 18000000 		.4byte	.LFE42
 1575 0040 00000000 		.4byte	.LFB43
 1576 0044 3C000000 		.4byte	.LFE43
 1577 0048 00000000 		.4byte	0
 1578 004c 00000000 		.4byte	0
 1579              		.section	.debug_line,"",%progbits
 1580              	.Ldebug_line0:
 1581 0000 AD020000 		.section	.debug_str,"MS",%progbits,1
 1581      0200AB01 
 1581      00000201 
 1581      FB0E0D00 
 1581      01010101 
 1582              	.LASF9:
 1583 0000 5F5F7569 		.ascii	"__uint8_t\000"
 1583      6E74385F 
 1583      7400
 1584              	.LASF36:
 1585 000a 65736361 		.ascii	"escape\000"
 1585      706500
 1586              	.LASF34:
 1587 0011 696E7075 		.ascii	"input_cursor_pos\000"
 1587      745F6375 
 1587      72736F72 
 1587      5F706F73 
 1587      00
 1588              	.LASF27:
 1589 0022 696E7075 		.ascii	"input_start\000"
 1589      745F7374 
 1589      61727400 
 1590              	.LASF3:
 1591 002e 73686F72 		.ascii	"short unsigned int\000"
 1591      7420756E 
 1591      7369676E 
 1591      65642069 
 1591      6E7400
 1592              	.LASF28:
 1593 0041 696E7075 		.ascii	"input_remove_cmdline\000"
 1593      745F7265 
 1593      6D6F7665 
 1593      5F636D64 
 1593      6C696E65 
 1594              	.LASF42:
 1595 0056 76616C69 		.ascii	"valid_escape\000"
 1595      645F6573 
 1595      63617065 
 1595      00
 1596              	.LASF37:
 1597 0063 65736361 		.ascii	"escapes\000"
 1597      70657300 
 1598              	.LASF22:
 1599 006b 696E7075 		.ascii	"input_data\000"
 1599      745F6461 
 1599      746100
ARM GAS  C:\Users\essele\AppData\Local\Temp\ccDAmW0A.s 			page 34


 1600              	.LASF11:
 1601 0076 666C6F61 		.ascii	"float\000"
 1601      7400
 1602              	.LASF16:
 1603 007c 5F5F676E 		.ascii	"__gnuc_va_list\000"
 1603      75635F76 
 1603      615F6C69 
 1603      737400
 1604              	.LASF18:
 1605 008b 5F5F7661 		.ascii	"__va_list\000"
 1605      5F6C6973 
 1605      7400
 1606              	.LASF1:
 1607 0095 756E7369 		.ascii	"unsigned char\000"
 1607      676E6564 
 1607      20636861 
 1607      7200
 1608              	.LASF31:
 1609 00a3 6C617374 		.ascii	"last_buf_len\000"
 1609      5F627566 
 1609      5F6C656E 
 1609      00
 1610              	.LASF5:
 1611 00b0 6C6F6E67 		.ascii	"long unsigned int\000"
 1611      20756E73 
 1611      69676E65 
 1611      6420696E 
 1611      7400
 1612              	.LASF40:
 1613 00c2 5C5C4D61 		.ascii	"\\\\Mac\\Home\\Documents\\dev\\yaugi\\GPIB USB Adap"
 1613      635C486F 
 1613      6D655C44 
 1613      6F63756D 
 1613      656E7473 
 1614 00ee 7465725C 		.ascii	"ter\\GPIB USB 1.cydsn\000"
 1614      47504942 
 1614      20555342 
 1614      20312E63 
 1614      7964736E 
 1615              	.LASF38:
 1616 0103 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 1616      43313120 
 1616      352E342E 
 1616      31203230 
 1616      31363036 
 1617 0136 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m0 -mthumb -g -O"
 1617      20726576 
 1617      6973696F 
 1617      6E203233 
 1617      37373135 
 1618 0169 30202D66 		.ascii	"0 -ffunction-sections -ffat-lto-objects\000"
 1618      66756E63 
 1618      74696F6E 
 1618      2D736563 
 1618      74696F6E 
 1619              	.LASF17:
 1620 0191 76615F6C 		.ascii	"va_list\000"
ARM GAS  C:\Users\essele\AppData\Local\Temp\ccDAmW0A.s 			page 35


 1620      69737400 
 1621              	.LASF12:
 1622 0199 646F7562 		.ascii	"double\000"
 1622      6C6500
 1623              	.LASF32:
 1624 01a0 696E7075 		.ascii	"input_buf\000"
 1624      745F6275 
 1624      6600
 1625              	.LASF20:
 1626 01aa 696E7075 		.ascii	"input_getbuffer\000"
 1626      745F6765 
 1626      74627566 
 1626      66657200 
 1627              	.LASF8:
 1628 01ba 756E7369 		.ascii	"unsigned int\000"
 1628      676E6564 
 1628      20696E74 
 1628      00
 1629              	.LASF7:
 1630 01c7 6C6F6E67 		.ascii	"long long unsigned int\000"
 1630      206C6F6E 
 1630      6720756E 
 1630      7369676E 
 1630      65642069 
 1631              	.LASF10:
 1632 01de 75696E74 		.ascii	"uint8_t\000"
 1632      385F7400 
 1633              	.LASF41:
 1634 01e6 5F5F6170 		.ascii	"__ap\000"
 1634      00
 1635              	.LASF39:
 1636 01eb 696E7075 		.ascii	"input.c\000"
 1636      742E6300 
 1637              	.LASF15:
 1638 01f3 73697A65 		.ascii	"sizetype\000"
 1638      74797065 
 1638      00
 1639              	.LASF21:
 1640 01fc 696E7075 		.ascii	"input_getlength\000"
 1640      745F6765 
 1640      746C656E 
 1640      67746800 
 1641              	.LASF23:
 1642 020c 696E7075 		.ascii	"input_printf\000"
 1642      745F7072 
 1642      696E7466 
 1642      00
 1643              	.LASF6:
 1644 0219 6C6F6E67 		.ascii	"long long int\000"
 1644      206C6F6E 
 1644      6720696E 
 1644      7400
 1645              	.LASF13:
 1646 0227 63686172 		.ascii	"char\000"
 1646      00
 1647              	.LASF2:
 1648 022c 73686F72 		.ascii	"short int\000"
ARM GAS  C:\Users\essele\AppData\Local\Temp\ccDAmW0A.s 			page 36


 1648      7420696E 
 1648      7400
 1649              	.LASF24:
 1650 0236 61726773 		.ascii	"args\000"
 1650      00
 1651              	.LASF26:
 1652 023b 6F757470 		.ascii	"output\000"
 1652      757400
 1653              	.LASF35:
 1654 0242 6573635F 		.ascii	"esc_buf\000"
 1654      62756600 
 1655              	.LASF29:
 1656 024a 696E7075 		.ascii	"input_redraw_cmdline\000"
 1656      745F7265 
 1656      64726177 
 1656      5F636D64 
 1656      6C696E65 
 1657              	.LASF25:
 1658 025f 696E7075 		.ascii	"input_show_output\000"
 1658      745F7368 
 1658      6F775F6F 
 1658      75747075 
 1658      7400
 1659              	.LASF4:
 1660 0271 6C6F6E67 		.ascii	"long int\000"
 1660      20696E74 
 1660      00
 1661              	.LASF14:
 1662 027a 6C6F6E67 		.ascii	"long double\000"
 1662      20646F75 
 1662      626C6500 
 1663              	.LASF0:
 1664 0286 7369676E 		.ascii	"signed char\000"
 1664      65642063 
 1664      68617200 
 1665              	.LASF30:
 1666 0292 6C617374 		.ascii	"last_buf\000"
 1666      5F627566 
 1666      00
 1667              	.LASF33:
 1668 029b 696E7075 		.ascii	"input_buf_len\000"
 1668      745F6275 
 1668      665F6C65 
 1668      6E00
 1669              	.LASF19:
 1670 02a9 65736361 		.ascii	"escape_sequence\000"
 1670      70655F73 
 1670      65717565 
 1670      6E636500 
 1671              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
