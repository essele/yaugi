ARM GAS  C:\Users\essele\AppData\Local\Temp\ccyS5Pdr.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m0
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 0
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"input.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.comm	last_buf,128,4
  20              		.global	last_buf_len
  21              		.bss
  22              		.align	2
  23              		.type	last_buf_len, %object
  24              		.size	last_buf_len, 4
  25              	last_buf_len:
  26 0000 00000000 		.space	4
  27              		.comm	input_buf,128,4
  28              		.global	input_buf_len
  29              		.align	2
  30              		.type	input_buf_len, %object
  31              		.size	input_buf_len, 4
  32              	input_buf_len:
  33 0004 00000000 		.space	4
  34              		.global	input_cursor_pos
  35              		.align	2
  36              		.type	input_cursor_pos, %object
  37              		.size	input_cursor_pos, 4
  38              	input_cursor_pos:
  39 0008 00000000 		.space	4
  40              		.comm	esc_buf,5,4
  41              		.global	escape
  42              		.align	2
  43              		.type	escape, %object
  44              		.size	escape, 4
  45              	escape:
  46 000c 00000000 		.space	4
  47              		.global	escapes
  48              		.section	.rodata
  49              		.align	2
  50              	.LC0:
  51 0000 1B5B4100 		.ascii	"\033[A\000"
  52              		.align	2
  53              	.LC1:
  54 0004 1B5B4200 		.ascii	"\033[B\000"
  55              		.align	2
  56              	.LC2:
  57 0008 1B5B4300 		.ascii	"\033[C\000"
ARM GAS  C:\Users\essele\AppData\Local\Temp\ccyS5Pdr.s 			page 2


  58              		.align	2
  59              	.LC3:
  60 000c 1B5B4400 		.ascii	"\033[D\000"
  61              		.align	2
  62              		.type	escapes, %object
  63              		.size	escapes, 40
  64              	escapes:
  65 0010 00000000 		.word	.LC0
  66 0014 01100000 		.word	4097
  67 0018 04000000 		.word	.LC1
  68 001c 02100000 		.word	4098
  69 0020 08000000 		.word	.LC2
  70 0024 03100000 		.word	4099
  71 0028 0C000000 		.word	.LC3
  72 002c 04100000 		.word	4100
  73 0030 00000000 		.word	0
  74 0034 00000000 		.word	0
  75              		.section	.text.valid_escape,"ax",%progbits
  76              		.align	2
  77              		.global	valid_escape
  78              		.code	16
  79              		.thumb_func
  80              		.type	valid_escape, %function
  81              	valid_escape:
  82              	.LFB35:
  83              		.file 1 "input.c"
   1:input.c       **** /****
   2:input.c       ****  * YAUGI -- Yet Another USB GPIB Interface
   3:input.c       ****  * 
   4:input.c       ****  * Lee Essen, 2019
   5:input.c       ****  *
   6:input.c       ****  * This work is licensed under a Creative Commons 
   7:input.c       ****  * Attribution-NonCommercial-ShareAlike 4.0 International License.
   8:input.c       ****  *
   9:input.c       ****  */
  10:input.c       **** 
  11:input.c       **** 
  12:input.c       **** #include "input.h"
  13:input.c       **** #include "serial.h"
  14:input.c       **** #include <stdarg.h>
  15:input.c       **** #include <stdio.h>
  16:input.c       **** 
  17:input.c       **** 
  18:input.c       **** #define INPUT_BUF_SIZE 128
  19:input.c       **** #define PROMPT "yaugi> "
  20:input.c       **** 
  21:input.c       **** uint8_t last_buf[INPUT_BUF_SIZE];           // keep the last command for recall
  22:input.c       **** int     last_buf_len = 0;
  23:input.c       **** 
  24:input.c       **** uint8_t input_buf[INPUT_BUF_SIZE];
  25:input.c       **** int     input_buf_len = 0;
  26:input.c       **** int     input_cursor_pos = 0;
  27:input.c       **** 
  28:input.c       **** uint8_t esc_buf[5];
  29:input.c       **** int     escape = 0;
  30:input.c       **** 
  31:input.c       **** #define ESC_UP      0x1001
ARM GAS  C:\Users\essele\AppData\Local\Temp\ccyS5Pdr.s 			page 3


  32:input.c       **** #define ESC_DOWN    0x1002
  33:input.c       **** #define ESC_LEFT    0x1003
  34:input.c       **** #define ESC_RIGHT   0x1004
  35:input.c       **** 
  36:input.c       **** struct escape_sequence {
  37:input.c       ****     char *seq;
  38:input.c       ****     int  val;
  39:input.c       **** };
  40:input.c       **** 
  41:input.c       **** const struct escape_sequence escapes[] = {
  42:input.c       ****     { "\x1b[A", ESC_UP },
  43:input.c       ****     { "\x1b[B", ESC_DOWN },
  44:input.c       ****     { "\x1b[C", ESC_LEFT },
  45:input.c       ****     { "\x1b[D", ESC_RIGHT },
  46:input.c       ****     { NULL, 0 }
  47:input.c       **** };
  48:input.c       **** 
  49:input.c       **** /**
  50:input.c       ****  * See if the current escape sequence is valid, and potentially complete
  51:input.c       ****  * we return 0 for valid but not complete, -1 for invalid, or the value
  52:input.c       ****  * if valid.
  53:input.c       ****  */
  54:input.c       **** 
  55:input.c       **** int valid_escape(uint8_t *buf, unsigned int len) {
  84              		.loc 1 55 0
  85              		.cfi_startproc
  86              		@ args = 0, pretend = 0, frame = 16
  87              		@ frame_needed = 1, uses_anonymous_args = 0
  88 0000 80B5     		push	{r7, lr}
  89              		.cfi_def_cfa_offset 8
  90              		.cfi_offset 7, -8
  91              		.cfi_offset 14, -4
  92 0002 84B0     		sub	sp, sp, #16
  93              		.cfi_def_cfa_offset 24
  94 0004 00AF     		add	r7, sp, #0
  95              		.cfi_def_cfa_register 7
  96 0006 7860     		str	r0, [r7, #4]
  97 0008 3960     		str	r1, [r7]
  56:input.c       ****     unsigned int i = 0;
  98              		.loc 1 56 0
  99 000a 0023     		movs	r3, #0
 100 000c FB60     		str	r3, [r7, #12]
  57:input.c       ****     
  58:input.c       ****     while(escapes[i].val != 0) {
 101              		.loc 1 58 0
 102 000e 21E0     		b	.L2
 103              	.L6:
  59:input.c       ****         if (memcmp(escapes[i].seq, buf, len) == 0) {
 104              		.loc 1 59 0
 105 0010 174B     		ldr	r3, .L7
 106 0012 FA68     		ldr	r2, [r7, #12]
 107 0014 D200     		lsls	r2, r2, #3
 108 0016 D358     		ldr	r3, [r2, r3]
 109 0018 3A68     		ldr	r2, [r7]
 110 001a 7968     		ldr	r1, [r7, #4]
 111 001c 1800     		movs	r0, r3
 112 001e FFF7FEFF 		bl	memcmp
ARM GAS  C:\Users\essele\AppData\Local\Temp\ccyS5Pdr.s 			page 4


 113 0022 031E     		subs	r3, r0, #0
 114 0024 13D1     		bne	.L3
  60:input.c       ****             if (strlen(escapes[i].seq) == len) {
 115              		.loc 1 60 0
 116 0026 124B     		ldr	r3, .L7
 117 0028 FA68     		ldr	r2, [r7, #12]
 118 002a D200     		lsls	r2, r2, #3
 119 002c D358     		ldr	r3, [r2, r3]
 120 002e 1800     		movs	r0, r3
 121 0030 FFF7FEFF 		bl	strlen
 122 0034 0200     		movs	r2, r0
 123 0036 3B68     		ldr	r3, [r7]
 124 0038 9A42     		cmp	r2, r3
 125 003a 06D1     		bne	.L4
  61:input.c       ****                 return escapes[i].val;
 126              		.loc 1 61 0
 127 003c 0C4A     		ldr	r2, .L7
 128 003e FB68     		ldr	r3, [r7, #12]
 129 0040 DB00     		lsls	r3, r3, #3
 130 0042 D318     		adds	r3, r2, r3
 131 0044 0433     		adds	r3, r3, #4
 132 0046 1B68     		ldr	r3, [r3]
 133 0048 0EE0     		b	.L5
 134              	.L4:
  62:input.c       ****             } else {
  63:input.c       ****                 return 0;
 135              		.loc 1 63 0
 136 004a 0023     		movs	r3, #0
 137 004c 0CE0     		b	.L5
 138              	.L3:
  64:input.c       ****             }
  65:input.c       ****         }
  66:input.c       ****         i++;
 139              		.loc 1 66 0
 140 004e FB68     		ldr	r3, [r7, #12]
 141 0050 0133     		adds	r3, r3, #1
 142 0052 FB60     		str	r3, [r7, #12]
 143              	.L2:
  58:input.c       ****         if (memcmp(escapes[i].seq, buf, len) == 0) {
 144              		.loc 1 58 0
 145 0054 064A     		ldr	r2, .L7
 146 0056 FB68     		ldr	r3, [r7, #12]
 147 0058 DB00     		lsls	r3, r3, #3
 148 005a D318     		adds	r3, r2, r3
 149 005c 0433     		adds	r3, r3, #4
 150 005e 1B68     		ldr	r3, [r3]
 151 0060 002B     		cmp	r3, #0
 152 0062 D5D1     		bne	.L6
  67:input.c       ****     }
  68:input.c       ****     // No match at all
  69:input.c       ****     return -1;
 153              		.loc 1 69 0
 154 0064 0123     		movs	r3, #1
 155 0066 5B42     		rsbs	r3, r3, #0
 156              	.L5:
  70:input.c       **** }
 157              		.loc 1 70 0
ARM GAS  C:\Users\essele\AppData\Local\Temp\ccyS5Pdr.s 			page 5


 158 0068 1800     		movs	r0, r3
 159 006a BD46     		mov	sp, r7
 160 006c 04B0     		add	sp, sp, #16
 161              		@ sp needed
 162 006e 80BD     		pop	{r7, pc}
 163              	.L8:
 164              		.align	2
 165              	.L7:
 166 0070 00000000 		.word	escapes
 167              		.cfi_endproc
 168              	.LFE35:
 169              		.size	valid_escape, .-valid_escape
 170              		.section	.rodata
 171              		.align	2
 172              	.LC7:
 173 0038 79617567 		.ascii	"yaugi> \000"
 173      693E2000 
 174              		.section	.text.input_start,"ax",%progbits
 175              		.align	2
 176              		.global	input_start
 177              		.code	16
 178              		.thumb_func
 179              		.type	input_start, %function
 180              	input_start:
 181              	.LFB36:
  71:input.c       **** 
  72:input.c       **** /**
  73:input.c       ****  * Called when we need to start the input of a new line, just cleans up
  74:input.c       ****  * and shows the prompt
  75:input.c       ****  */
  76:input.c       **** void input_start() {
 182              		.loc 1 76 0
 183              		.cfi_startproc
 184              		@ args = 0, pretend = 0, frame = 0
 185              		@ frame_needed = 1, uses_anonymous_args = 0
 186 0000 80B5     		push	{r7, lr}
 187              		.cfi_def_cfa_offset 8
 188              		.cfi_offset 7, -8
 189              		.cfi_offset 14, -4
 190 0002 00AF     		add	r7, sp, #0
 191              		.cfi_def_cfa_register 7
  77:input.c       ****     input_buf[0] = 0;
 192              		.loc 1 77 0
 193 0004 074B     		ldr	r3, .L10
 194 0006 0022     		movs	r2, #0
 195 0008 1A70     		strb	r2, [r3]
  78:input.c       ****     input_buf_len = 0;
 196              		.loc 1 78 0
 197 000a 074B     		ldr	r3, .L10+4
 198 000c 0022     		movs	r2, #0
 199 000e 1A60     		str	r2, [r3]
  79:input.c       ****     serial_add_string(PROMPT);
 200              		.loc 1 79 0
 201 0010 064B     		ldr	r3, .L10+8
 202 0012 1800     		movs	r0, r3
 203 0014 FFF7FEFF 		bl	serial_add_string
  80:input.c       ****     serial_flush();
ARM GAS  C:\Users\essele\AppData\Local\Temp\ccyS5Pdr.s 			page 6


 204              		.loc 1 80 0
 205 0018 FFF7FEFF 		bl	serial_flush
  81:input.c       **** }
 206              		.loc 1 81 0
 207 001c C046     		nop
 208 001e BD46     		mov	sp, r7
 209              		@ sp needed
 210 0020 80BD     		pop	{r7, pc}
 211              	.L11:
 212 0022 C046     		.align	2
 213              	.L10:
 214 0024 00000000 		.word	input_buf
 215 0028 00000000 		.word	input_buf_len
 216 002c 38000000 		.word	.LC7
 217              		.cfi_endproc
 218              	.LFE36:
 219              		.size	input_start, .-input_start
 220              		.section	.text.input_getbuffer,"ax",%progbits
 221              		.align	2
 222              		.global	input_getbuffer
 223              		.code	16
 224              		.thumb_func
 225              		.type	input_getbuffer, %function
 226              	input_getbuffer:
 227              	.LFB37:
  82:input.c       **** 
  83:input.c       **** /**
  84:input.c       ****  * Allow access to the input buffer
  85:input.c       ****  */
  86:input.c       **** uint8_t *input_getbuffer() {
 228              		.loc 1 86 0
 229              		.cfi_startproc
 230              		@ args = 0, pretend = 0, frame = 0
 231              		@ frame_needed = 1, uses_anonymous_args = 0
 232 0000 80B5     		push	{r7, lr}
 233              		.cfi_def_cfa_offset 8
 234              		.cfi_offset 7, -8
 235              		.cfi_offset 14, -4
 236 0002 00AF     		add	r7, sp, #0
 237              		.cfi_def_cfa_register 7
  87:input.c       ****     return input_buf;
 238              		.loc 1 87 0
 239 0004 014B     		ldr	r3, .L14
  88:input.c       **** }
 240              		.loc 1 88 0
 241 0006 1800     		movs	r0, r3
 242 0008 BD46     		mov	sp, r7
 243              		@ sp needed
 244 000a 80BD     		pop	{r7, pc}
 245              	.L15:
 246              		.align	2
 247              	.L14:
 248 000c 00000000 		.word	input_buf
 249              		.cfi_endproc
 250              	.LFE37:
 251              		.size	input_getbuffer, .-input_getbuffer
 252              		.section	.text.input_getlength,"ax",%progbits
ARM GAS  C:\Users\essele\AppData\Local\Temp\ccyS5Pdr.s 			page 7


 253              		.align	2
 254              		.global	input_getlength
 255              		.code	16
 256              		.thumb_func
 257              		.type	input_getlength, %function
 258              	input_getlength:
 259              	.LFB38:
  89:input.c       **** 
  90:input.c       **** unsigned int input_getlength() {
 260              		.loc 1 90 0
 261              		.cfi_startproc
 262              		@ args = 0, pretend = 0, frame = 0
 263              		@ frame_needed = 1, uses_anonymous_args = 0
 264 0000 80B5     		push	{r7, lr}
 265              		.cfi_def_cfa_offset 8
 266              		.cfi_offset 7, -8
 267              		.cfi_offset 14, -4
 268 0002 00AF     		add	r7, sp, #0
 269              		.cfi_def_cfa_register 7
  91:input.c       ****     return input_buf_len;
 270              		.loc 1 91 0
 271 0004 024B     		ldr	r3, .L18
 272 0006 1B68     		ldr	r3, [r3]
  92:input.c       **** }
 273              		.loc 1 92 0
 274 0008 1800     		movs	r0, r3
 275 000a BD46     		mov	sp, r7
 276              		@ sp needed
 277 000c 80BD     		pop	{r7, pc}
 278              	.L19:
 279 000e C046     		.align	2
 280              	.L18:
 281 0010 00000000 		.word	input_buf_len
 282              		.cfi_endproc
 283              	.LFE38:
 284              		.size	input_getlength, .-input_getlength
 285              		.section	.rodata
 286              		.align	2
 287              	.LC14:
 288 0040 7F00     		.ascii	"\177\000"
 289 0042 0000     		.align	2
 290              	.LC16:
 291 0044 08200800 		.ascii	"\010 \010\000"
 292              		.align	2
 293              	.LC19:
 294 0048 0D0A00   		.ascii	"\015\012\000"
 295 004b 00       		.align	2
 296              	.LC23:
 297 004c 0D1B5B4B 		.ascii	"\015\033[K\000"
 297      00
 298              		.section	.text.input_data,"ax",%progbits
 299              		.align	2
 300              		.global	input_data
 301              		.code	16
 302              		.thumb_func
 303              		.type	input_data, %function
 304              	input_data:
ARM GAS  C:\Users\essele\AppData\Local\Temp\ccyS5Pdr.s 			page 8


 305              	.LFB39:
  93:input.c       **** 
  94:input.c       **** /**
  95:input.c       ****  * Handles incoming serial data, processes interactive stuff and then returns
  96:input.c       ****  * 1 when we are ready with the line, or 0 otherwise.
  97:input.c       ****  */
  98:input.c       **** int input_data() {
 306              		.loc 1 98 0
 307              		.cfi_startproc
 308              		@ args = 0, pretend = 0, frame = 8
 309              		@ frame_needed = 1, uses_anonymous_args = 0
 310 0000 80B5     		push	{r7, lr}
 311              		.cfi_def_cfa_offset 8
 312              		.cfi_offset 7, -8
 313              		.cfi_offset 14, -4
 314 0002 82B0     		sub	sp, sp, #8
 315              		.cfi_def_cfa_offset 16
 316 0004 00AF     		add	r7, sp, #0
 317              		.cfi_def_cfa_register 7
  99:input.c       ****     int c = serial_getbyte();
 318              		.loc 1 99 0
 319 0006 FFF7FEFF 		bl	serial_getbyte
 320 000a 0300     		movs	r3, r0
 321 000c 7B60     		str	r3, [r7, #4]
 100:input.c       ****     
 101:input.c       ****     // First check if we are in the middle of an escape sequence...
 102:input.c       ****     if (escape) {
 322              		.loc 1 102 0
 323 000e 5F4B     		ldr	r3, .L43
 324 0010 1B68     		ldr	r3, [r3]
 325 0012 002B     		cmp	r3, #0
 326 0014 24D0     		beq	.L21
 103:input.c       ****         esc_buf[escape++] = c;
 327              		.loc 1 103 0
 328 0016 5D4B     		ldr	r3, .L43
 329 0018 1B68     		ldr	r3, [r3]
 330 001a 591C     		adds	r1, r3, #1
 331 001c 5B4A     		ldr	r2, .L43
 332 001e 1160     		str	r1, [r2]
 333 0020 7A68     		ldr	r2, [r7, #4]
 334 0022 D1B2     		uxtb	r1, r2
 335 0024 5A4A     		ldr	r2, .L43+4
 336 0026 D154     		strb	r1, [r2, r3]
 104:input.c       ****         
 105:input.c       ****         c = valid_escape(esc_buf, escape);
 337              		.loc 1 105 0
 338 0028 584B     		ldr	r3, .L43
 339 002a 1B68     		ldr	r3, [r3]
 340 002c 1A00     		movs	r2, r3
 341 002e 584B     		ldr	r3, .L43+4
 342 0030 1100     		movs	r1, r2
 343 0032 1800     		movs	r0, r3
 344 0034 FFF7FEFF 		bl	valid_escape
 345 0038 0300     		movs	r3, r0
 346 003a 7B60     		str	r3, [r7, #4]
 106:input.c       ****         if (c == -1) {
 347              		.loc 1 106 0
ARM GAS  C:\Users\essele\AppData\Local\Temp\ccyS5Pdr.s 			page 9


 348 003c 7B68     		ldr	r3, [r7, #4]
 349 003e 0133     		adds	r3, r3, #1
 350 0040 05D1     		bne	.L22
 107:input.c       ****             // Not valid... we'll translate into a '?'
 108:input.c       ****             c = '?';
 351              		.loc 1 108 0
 352 0042 3F23     		movs	r3, #63
 353 0044 7B60     		str	r3, [r7, #4]
 109:input.c       ****             escape = 0;
 354              		.loc 1 109 0
 355 0046 514B     		ldr	r3, .L43
 356 0048 0022     		movs	r2, #0
 357 004a 1A60     		str	r2, [r3]
 358 004c 08E0     		b	.L21
 359              	.L22:
 110:input.c       ****         } else if (c != 0) {
 360              		.loc 1 110 0
 361 004e 7B68     		ldr	r3, [r7, #4]
 362 0050 002B     		cmp	r3, #0
 363 0052 03D0     		beq	.L23
 111:input.c       ****             // Must be a complete one...
 112:input.c       ****             escape = 0;
 364              		.loc 1 112 0
 365 0054 4D4B     		ldr	r3, .L43
 366 0056 0022     		movs	r2, #0
 367 0058 1A60     		str	r2, [r3]
 368 005a 01E0     		b	.L21
 369              	.L23:
 113:input.c       ****         } else {
 114:input.c       ****             // Partial match ... do nothing more
 115:input.c       ****             return 0;
 370              		.loc 1 115 0
 371 005c 0023     		movs	r3, #0
 372 005e 91E0     		b	.L39
 373              	.L21:
 116:input.c       ****         }
 117:input.c       ****     }
 118:input.c       ****     
 119:input.c       ****     // Now we can process incoming keys/data...
 120:input.c       ****     switch(c) {
 374              		.loc 1 120 0
 375 0060 7B68     		ldr	r3, [r7, #4]
 376 0062 1B2B     		cmp	r3, #27
 377 0064 15D0     		beq	.L26
 378 0066 07DC     		bgt	.L27
 379 0068 0A2B     		cmp	r3, #10
 380 006a 00D1     		bne	.LCB251
 381 006c 84E0     		b	.L40	@long jump
 382              	.LCB251:
 383 006e 0D2B     		cmp	r3, #13
 384 0070 36D0     		beq	.L29
 385 0072 082B     		cmp	r3, #8
 386 0074 24D0     		beq	.L30
 387 0076 6EE0     		b	.L25
 388              	.L27:
 389 0078 464A     		ldr	r2, .L43+8
 390 007a 9342     		cmp	r3, r2
ARM GAS  C:\Users\essele\AppData\Local\Temp\ccyS5Pdr.s 			page 10


 391 007c 4DD0     		beq	.L31
 392 007e 454A     		ldr	r2, .L43+8
 393 0080 9342     		cmp	r3, r2
 394 0082 02DC     		bgt	.L32
 395 0084 7F2B     		cmp	r3, #127
 396 0086 0BD0     		beq	.L33
 397 0088 65E0     		b	.L25
 398              	.L32:
 399 008a 434A     		ldr	r2, .L43+12
 400 008c 9342     		cmp	r3, r2
 401 008e 62DC     		bgt	.L25
 121:input.c       ****         case 0x1b:      // Escape
 122:input.c       ****                         esc_buf[0] = 0x1b;
 123:input.c       ****                         escape = 1;
 124:input.c       ****                         break;
 125:input.c       ****                         
 126:input.c       ****         case 0x7f:      // Backspace
 127:input.c       ****                         if (input_buf_len > 0) {
 128:input.c       ****                             input_buf_len--;
 129:input.c       ****                             serial_add_string("\x7f");
 130:input.c       ****                             serial_flush();
 131:input.c       ****                         }
 132:input.c       ****                         break;
 133:input.c       **** 
 134:input.c       ****         case 0x08:      // Delete
 135:input.c       ****                         if (input_buf_len > 0) {
 136:input.c       ****                             input_buf_len--;
 137:input.c       ****                             serial_add_string("\x08 \x08");
 138:input.c       ****                             serial_flush();
 139:input.c       ****                         }
 140:input.c       ****                         break;
 141:input.c       ****                         
 142:input.c       ****         case '\n':      // Newline, just ignore
 143:input.c       ****                         break;
 144:input.c       ****                         
 145:input.c       ****         case '\r':      // Carriage return, end of line...
 146:input.c       ****                         input_buf[input_buf_len] = 0;
 147:input.c       ****                         serial_add_string("\r\n");
 148:input.c       ****                         serial_flush();
 149:input.c       ****                         
 150:input.c       ****                         // Keep the last command (if there was one)
 151:input.c       ****                         if (input_buf_len > 0) {
 152:input.c       ****                             memcpy(last_buf, input_buf, input_buf_len);
 153:input.c       ****                             last_buf_len = input_buf_len;
 154:input.c       ****                         }
 155:input.c       ****                         return 1;
 156:input.c       ****                         break;
 157:input.c       ****                         
 158:input.c       ****         case ESC_UP:    // Recall the last buffer
 159:input.c       ****                         memcpy(input_buf, last_buf, last_buf_len);
 160:input.c       ****                         input_buf_len = last_buf_len;
 161:input.c       ****                         
 162:input.c       ****                         // Clear the line, redraw the prompt and the line
 163:input.c       ****                         serial_add_string("\r\x1b[K");
 164:input.c       ****                         serial_add_string(PROMPT);
 165:input.c       ****                         serial_add(input_buf, input_buf_len);
 166:input.c       ****                         serial_flush();
ARM GAS  C:\Users\essele\AppData\Local\Temp\ccyS5Pdr.s 			page 11


 167:input.c       ****                         break;
 168:input.c       ****                         
 169:input.c       ****         case ESC_DOWN:
 170:input.c       ****         case ESC_LEFT:
 171:input.c       ****         case ESC_RIGHT:
 172:input.c       ****                         break;
 402              		.loc 1 172 0
 403 0090 77E0     		b	.L35
 404              	.L26:
 122:input.c       ****                         escape = 1;
 405              		.loc 1 122 0
 406 0092 3F4B     		ldr	r3, .L43+4
 407 0094 1B22     		movs	r2, #27
 408 0096 1A70     		strb	r2, [r3]
 123:input.c       ****                         break;
 409              		.loc 1 123 0
 410 0098 3C4B     		ldr	r3, .L43
 411 009a 0122     		movs	r2, #1
 412 009c 1A60     		str	r2, [r3]
 124:input.c       ****                         
 413              		.loc 1 124 0
 414 009e 70E0     		b	.L35
 415              	.L33:
 127:input.c       ****                             input_buf_len--;
 416              		.loc 1 127 0
 417 00a0 3E4B     		ldr	r3, .L43+16
 418 00a2 1B68     		ldr	r3, [r3]
 419 00a4 002B     		cmp	r3, #0
 420 00a6 69DD     		ble	.L41
 128:input.c       ****                             serial_add_string("\x7f");
 421              		.loc 1 128 0
 422 00a8 3C4B     		ldr	r3, .L43+16
 423 00aa 1B68     		ldr	r3, [r3]
 424 00ac 5A1E     		subs	r2, r3, #1
 425 00ae 3B4B     		ldr	r3, .L43+16
 426 00b0 1A60     		str	r2, [r3]
 129:input.c       ****                             serial_flush();
 427              		.loc 1 129 0
 428 00b2 3B4B     		ldr	r3, .L43+20
 429 00b4 1800     		movs	r0, r3
 430 00b6 FFF7FEFF 		bl	serial_add_string
 130:input.c       ****                         }
 431              		.loc 1 130 0
 432 00ba FFF7FEFF 		bl	serial_flush
 132:input.c       **** 
 433              		.loc 1 132 0
 434 00be 5DE0     		b	.L41
 435              	.L30:
 135:input.c       ****                             input_buf_len--;
 436              		.loc 1 135 0
 437 00c0 364B     		ldr	r3, .L43+16
 438 00c2 1B68     		ldr	r3, [r3]
 439 00c4 002B     		cmp	r3, #0
 440 00c6 5BDD     		ble	.L42
 136:input.c       ****                             serial_add_string("\x08 \x08");
 441              		.loc 1 136 0
 442 00c8 344B     		ldr	r3, .L43+16
ARM GAS  C:\Users\essele\AppData\Local\Temp\ccyS5Pdr.s 			page 12


 443 00ca 1B68     		ldr	r3, [r3]
 444 00cc 5A1E     		subs	r2, r3, #1
 445 00ce 334B     		ldr	r3, .L43+16
 446 00d0 1A60     		str	r2, [r3]
 137:input.c       ****                             serial_flush();
 447              		.loc 1 137 0
 448 00d2 344B     		ldr	r3, .L43+24
 449 00d4 1800     		movs	r0, r3
 450 00d6 FFF7FEFF 		bl	serial_add_string
 138:input.c       ****                         }
 451              		.loc 1 138 0
 452 00da FFF7FEFF 		bl	serial_flush
 140:input.c       ****                         
 453              		.loc 1 140 0
 454 00de 4FE0     		b	.L42
 455              	.L29:
 146:input.c       ****                         serial_add_string("\r\n");
 456              		.loc 1 146 0
 457 00e0 2E4B     		ldr	r3, .L43+16
 458 00e2 1B68     		ldr	r3, [r3]
 459 00e4 304A     		ldr	r2, .L43+28
 460 00e6 0021     		movs	r1, #0
 461 00e8 D154     		strb	r1, [r2, r3]
 147:input.c       ****                         serial_flush();
 462              		.loc 1 147 0
 463 00ea 304B     		ldr	r3, .L43+32
 464 00ec 1800     		movs	r0, r3
 465 00ee FFF7FEFF 		bl	serial_add_string
 148:input.c       ****                         
 466              		.loc 1 148 0
 467 00f2 FFF7FEFF 		bl	serial_flush
 151:input.c       ****                             memcpy(last_buf, input_buf, input_buf_len);
 468              		.loc 1 151 0
 469 00f6 294B     		ldr	r3, .L43+16
 470 00f8 1B68     		ldr	r3, [r3]
 471 00fa 002B     		cmp	r3, #0
 472 00fc 0BDD     		ble	.L38
 152:input.c       ****                             last_buf_len = input_buf_len;
 473              		.loc 1 152 0
 474 00fe 274B     		ldr	r3, .L43+16
 475 0100 1B68     		ldr	r3, [r3]
 476 0102 1A00     		movs	r2, r3
 477 0104 2849     		ldr	r1, .L43+28
 478 0106 2A4B     		ldr	r3, .L43+36
 479 0108 1800     		movs	r0, r3
 480 010a FFF7FEFF 		bl	memcpy
 153:input.c       ****                         }
 481              		.loc 1 153 0
 482 010e 234B     		ldr	r3, .L43+16
 483 0110 1A68     		ldr	r2, [r3]
 484 0112 284B     		ldr	r3, .L43+40
 485 0114 1A60     		str	r2, [r3]
 486              	.L38:
 155:input.c       ****                         break;
 487              		.loc 1 155 0
 488 0116 0123     		movs	r3, #1
 489 0118 34E0     		b	.L39
ARM GAS  C:\Users\essele\AppData\Local\Temp\ccyS5Pdr.s 			page 13


 490              	.L31:
 159:input.c       ****                         input_buf_len = last_buf_len;
 491              		.loc 1 159 0
 492 011a 264B     		ldr	r3, .L43+40
 493 011c 1B68     		ldr	r3, [r3]
 494 011e 1A00     		movs	r2, r3
 495 0120 2349     		ldr	r1, .L43+36
 496 0122 214B     		ldr	r3, .L43+28
 497 0124 1800     		movs	r0, r3
 498 0126 FFF7FEFF 		bl	memcpy
 160:input.c       ****                         
 499              		.loc 1 160 0
 500 012a 224B     		ldr	r3, .L43+40
 501 012c 1A68     		ldr	r2, [r3]
 502 012e 1B4B     		ldr	r3, .L43+16
 503 0130 1A60     		str	r2, [r3]
 163:input.c       ****                         serial_add_string(PROMPT);
 504              		.loc 1 163 0
 505 0132 214B     		ldr	r3, .L43+44
 506 0134 1800     		movs	r0, r3
 507 0136 FFF7FEFF 		bl	serial_add_string
 164:input.c       ****                         serial_add(input_buf, input_buf_len);
 508              		.loc 1 164 0
 509 013a 204B     		ldr	r3, .L43+48
 510 013c 1800     		movs	r0, r3
 511 013e FFF7FEFF 		bl	serial_add_string
 165:input.c       ****                         serial_flush();
 512              		.loc 1 165 0
 513 0142 164B     		ldr	r3, .L43+16
 514 0144 1A68     		ldr	r2, [r3]
 515 0146 184B     		ldr	r3, .L43+28
 516 0148 1100     		movs	r1, r2
 517 014a 1800     		movs	r0, r3
 518 014c FFF7FEFF 		bl	serial_add
 166:input.c       ****                         break;
 519              		.loc 1 166 0
 520 0150 FFF7FEFF 		bl	serial_flush
 167:input.c       ****                         
 521              		.loc 1 167 0
 522 0154 15E0     		b	.L35
 523              	.L25:
 173:input.c       ****     
 174:input.c       ****         default:        // Normal character
 175:input.c       ****                         input_buf[input_buf_len++] = c;
 524              		.loc 1 175 0
 525 0156 114B     		ldr	r3, .L43+16
 526 0158 1B68     		ldr	r3, [r3]
 527 015a 591C     		adds	r1, r3, #1
 528 015c 0F4A     		ldr	r2, .L43+16
 529 015e 1160     		str	r1, [r2]
 530 0160 7A68     		ldr	r2, [r7, #4]
 531 0162 D1B2     		uxtb	r1, r2
 532 0164 104A     		ldr	r2, .L43+28
 533 0166 D154     		strb	r1, [r2, r3]
 176:input.c       ****                         serial_add((uint8_t *)&c, 1);
 534              		.loc 1 176 0
 535 0168 3B1D     		adds	r3, r7, #4
ARM GAS  C:\Users\essele\AppData\Local\Temp\ccyS5Pdr.s 			page 14


 536 016a 0121     		movs	r1, #1
 537 016c 1800     		movs	r0, r3
 538 016e FFF7FEFF 		bl	serial_add
 177:input.c       ****                         serial_flush();
 539              		.loc 1 177 0
 540 0172 FFF7FEFF 		bl	serial_flush
 178:input.c       ****                         break;
 541              		.loc 1 178 0
 542 0176 04E0     		b	.L35
 543              	.L40:
 143:input.c       ****                         
 544              		.loc 1 143 0
 545 0178 C046     		nop
 546 017a 02E0     		b	.L35
 547              	.L41:
 132:input.c       **** 
 548              		.loc 1 132 0
 549 017c C046     		nop
 550 017e 00E0     		b	.L35
 551              	.L42:
 140:input.c       ****                         
 552              		.loc 1 140 0
 553 0180 C046     		nop
 554              	.L35:
 179:input.c       **** 
 180:input.c       ****     }
 181:input.c       ****     return 0;
 555              		.loc 1 181 0
 556 0182 0023     		movs	r3, #0
 557              	.L39:
 182:input.c       **** }
 558              		.loc 1 182 0 discriminator 1
 559 0184 1800     		movs	r0, r3
 560 0186 BD46     		mov	sp, r7
 561 0188 02B0     		add	sp, sp, #8
 562              		@ sp needed
 563 018a 80BD     		pop	{r7, pc}
 564              	.L44:
 565              		.align	2
 566              	.L43:
 567 018c 00000000 		.word	escape
 568 0190 00000000 		.word	esc_buf
 569 0194 01100000 		.word	4097
 570 0198 04100000 		.word	4100
 571 019c 00000000 		.word	input_buf_len
 572 01a0 40000000 		.word	.LC14
 573 01a4 44000000 		.word	.LC16
 574 01a8 00000000 		.word	input_buf
 575 01ac 48000000 		.word	.LC19
 576 01b0 00000000 		.word	last_buf
 577 01b4 00000000 		.word	last_buf_len
 578 01b8 4C000000 		.word	.LC23
 579 01bc 38000000 		.word	.LC7
 580              		.cfi_endproc
 581              	.LFE39:
 582              		.size	input_data, .-input_data
 583              		.section	.text.input_printf,"ax",%progbits
ARM GAS  C:\Users\essele\AppData\Local\Temp\ccyS5Pdr.s 			page 15


 584              		.align	2
 585              		.global	input_printf
 586              		.code	16
 587              		.thumb_func
 588              		.type	input_printf, %function
 589              	input_printf:
 590              	.LFB40:
 183:input.c       **** 
 184:input.c       **** /**
 185:input.c       ****  * If we need to show some output then we need to clear the line, send the output and
 186:input.c       ****  * then recreate the state on the following line.
 187:input.c       ****  *
 188:input.c       ****  * Two ways of doing this...
 189:input.c       ****  */
 190:input.c       **** void input_printf(char *fmt, ...) {
 591              		.loc 1 190 0
 592              		.cfi_startproc
 593              		@ args = 4, pretend = 16, frame = 8
 594              		@ frame_needed = 1, uses_anonymous_args = 1
 595 0000 0FB4     		push	{r0, r1, r2, r3}
 596              		.cfi_def_cfa_offset 16
 597 0002 80B5     		push	{r7, lr}
 598              		.cfi_def_cfa_offset 24
 599              		.cfi_offset 7, -24
 600              		.cfi_offset 14, -20
 601 0004 82B0     		sub	sp, sp, #8
 602              		.cfi_def_cfa_offset 32
 603 0006 00AF     		add	r7, sp, #0
 604              		.cfi_def_cfa_register 7
 191:input.c       ****     
 192:input.c       ****     va_list args;
 193:input.c       ****     va_start(args, fmt);
 605              		.loc 1 193 0
 606 0008 1423     		movs	r3, #20
 607 000a FB18     		adds	r3, r7, r3
 608 000c 7B60     		str	r3, [r7, #4]
 194:input.c       **** 
 195:input.c       ****     serial_add_string("\r\x1b[K");
 609              		.loc 1 195 0
 610 000e 124B     		ldr	r3, .L46
 611 0010 1800     		movs	r0, r3
 612 0012 FFF7FEFF 		bl	serial_add_string
 196:input.c       ****     serial_vprintf(fmt, args);
 613              		.loc 1 196 0
 614 0016 7A68     		ldr	r2, [r7, #4]
 615 0018 3B69     		ldr	r3, [r7, #16]
 616 001a 1100     		movs	r1, r2
 617 001c 1800     		movs	r0, r3
 618 001e FFF7FEFF 		bl	serial_vprintf
 197:input.c       ****     serial_add_string("\r\n");
 619              		.loc 1 197 0
 620 0022 0E4B     		ldr	r3, .L46+4
 621 0024 1800     		movs	r0, r3
 622 0026 FFF7FEFF 		bl	serial_add_string
 198:input.c       ****     serial_add_string(PROMPT);
 623              		.loc 1 198 0
 624 002a 0D4B     		ldr	r3, .L46+8
ARM GAS  C:\Users\essele\AppData\Local\Temp\ccyS5Pdr.s 			page 16


 625 002c 1800     		movs	r0, r3
 626 002e FFF7FEFF 		bl	serial_add_string
 199:input.c       ****     serial_add(input_buf, input_buf_len);
 627              		.loc 1 199 0
 628 0032 0C4B     		ldr	r3, .L46+12
 629 0034 1A68     		ldr	r2, [r3]
 630 0036 0C4B     		ldr	r3, .L46+16
 631 0038 1100     		movs	r1, r2
 632 003a 1800     		movs	r0, r3
 633 003c FFF7FEFF 		bl	serial_add
 200:input.c       ****     serial_flush();
 634              		.loc 1 200 0
 635 0040 FFF7FEFF 		bl	serial_flush
 201:input.c       ****     serial_flush();
 636              		.loc 1 201 0
 637 0044 FFF7FEFF 		bl	serial_flush
 202:input.c       **** }
 638              		.loc 1 202 0
 639 0048 C046     		nop
 640 004a BD46     		mov	sp, r7
 641 004c 02B0     		add	sp, sp, #8
 642              		@ sp needed
 643 004e 80BC     		pop	{r7}
 644 0050 08BC     		pop	{r3}
 645 0052 04B0     		add	sp, sp, #16
 646 0054 1847     		bx	r3
 647              	.L47:
 648 0056 C046     		.align	2
 649              	.L46:
 650 0058 4C000000 		.word	.LC23
 651 005c 48000000 		.word	.LC19
 652 0060 38000000 		.word	.LC7
 653 0064 00000000 		.word	input_buf_len
 654 0068 00000000 		.word	input_buf
 655              		.cfi_endproc
 656              	.LFE40:
 657              		.size	input_printf, .-input_printf
 658              		.section	.text.input_show_output,"ax",%progbits
 659              		.align	2
 660              		.global	input_show_output
 661              		.code	16
 662              		.thumb_func
 663              		.type	input_show_output, %function
 664              	input_show_output:
 665              	.LFB41:
 203:input.c       **** 
 204:input.c       **** void input_show_output(uint8_t *output, int len) {
 666              		.loc 1 204 0
 667              		.cfi_startproc
 668              		@ args = 0, pretend = 0, frame = 8
 669              		@ frame_needed = 1, uses_anonymous_args = 0
 670 0000 80B5     		push	{r7, lr}
 671              		.cfi_def_cfa_offset 8
 672              		.cfi_offset 7, -8
 673              		.cfi_offset 14, -4
 674 0002 82B0     		sub	sp, sp, #8
 675              		.cfi_def_cfa_offset 16
ARM GAS  C:\Users\essele\AppData\Local\Temp\ccyS5Pdr.s 			page 17


 676 0004 00AF     		add	r7, sp, #0
 677              		.cfi_def_cfa_register 7
 678 0006 7860     		str	r0, [r7, #4]
 679 0008 3960     		str	r1, [r7]
 205:input.c       ****     serial_add_string("\r\x1b[K");
 680              		.loc 1 205 0
 681 000a 0F4B     		ldr	r3, .L49
 682 000c 1800     		movs	r0, r3
 683 000e FFF7FEFF 		bl	serial_add_string
 206:input.c       ****     serial_add(output, len);
 684              		.loc 1 206 0
 685 0012 3A68     		ldr	r2, [r7]
 686 0014 7B68     		ldr	r3, [r7, #4]
 687 0016 1100     		movs	r1, r2
 688 0018 1800     		movs	r0, r3
 689 001a FFF7FEFF 		bl	serial_add
 207:input.c       ****     serial_add_string("\r\n");
 690              		.loc 1 207 0
 691 001e 0B4B     		ldr	r3, .L49+4
 692 0020 1800     		movs	r0, r3
 693 0022 FFF7FEFF 		bl	serial_add_string
 208:input.c       ****     serial_add_string(PROMPT);
 694              		.loc 1 208 0
 695 0026 0A4B     		ldr	r3, .L49+8
 696 0028 1800     		movs	r0, r3
 697 002a FFF7FEFF 		bl	serial_add_string
 209:input.c       ****     serial_add(input_buf, input_buf_len);
 698              		.loc 1 209 0
 699 002e 094B     		ldr	r3, .L49+12
 700 0030 1A68     		ldr	r2, [r3]
 701 0032 094B     		ldr	r3, .L49+16
 702 0034 1100     		movs	r1, r2
 703 0036 1800     		movs	r0, r3
 704 0038 FFF7FEFF 		bl	serial_add
 210:input.c       ****     serial_flush();
 705              		.loc 1 210 0
 706 003c FFF7FEFF 		bl	serial_flush
 211:input.c       **** }
 707              		.loc 1 211 0
 708 0040 C046     		nop
 709 0042 BD46     		mov	sp, r7
 710 0044 02B0     		add	sp, sp, #8
 711              		@ sp needed
 712 0046 80BD     		pop	{r7, pc}
 713              	.L50:
 714              		.align	2
 715              	.L49:
 716 0048 4C000000 		.word	.LC23
 717 004c 48000000 		.word	.LC19
 718 0050 38000000 		.word	.LC7
 719 0054 00000000 		.word	input_buf_len
 720 0058 00000000 		.word	input_buf
 721              		.cfi_endproc
 722              	.LFE41:
 723              		.size	input_show_output, .-input_show_output
 724              		.text
 725              	.Letext0:
ARM GAS  C:\Users\essele\AppData\Local\Temp\ccyS5Pdr.s 			page 18


 726              		.file 2 "c:\\program files (x86)\\cypress\\psoc creator\\4.2\\psoc creator\\import\\gnu\\arm\\5.4.
 727              		.file 3 "c:\\program files (x86)\\cypress\\psoc creator\\4.2\\psoc creator\\import\\gnu\\arm\\5.4.
 728              		.file 4 "c:\\program files (x86)\\cypress\\psoc creator\\4.2\\psoc creator\\import\\gnu\\arm\\5.4.
 729              		.file 5 "<built-in>"
 730              		.section	.debug_info,"",%progbits
 731              	.Ldebug_info0:
 732 0000 CB020000 		.4byte	0x2cb
 733 0004 0400     		.2byte	0x4
 734 0006 00000000 		.4byte	.Ldebug_abbrev0
 735 000a 04       		.byte	0x4
 736 000b 01       		.uleb128 0x1
 737 000c EE000000 		.4byte	.LASF35
 738 0010 0C       		.byte	0xc
 739 0011 D6010000 		.4byte	.LASF36
 740 0015 AD000000 		.4byte	.LASF37
 741 0019 00000000 		.4byte	.Ldebug_ranges0+0
 742 001d 00000000 		.4byte	0
 743 0021 00000000 		.4byte	.Ldebug_line0
 744 0025 02       		.uleb128 0x2
 745 0026 01       		.byte	0x1
 746 0027 06       		.byte	0x6
 747 0028 5C020000 		.4byte	.LASF0
 748 002c 03       		.uleb128 0x3
 749 002d 00000000 		.4byte	.LASF9
 750 0031 02       		.byte	0x2
 751 0032 1D       		.byte	0x1d
 752 0033 37000000 		.4byte	0x37
 753 0037 02       		.uleb128 0x2
 754 0038 01       		.byte	0x1
 755 0039 08       		.byte	0x8
 756 003a 80000000 		.4byte	.LASF1
 757 003e 02       		.uleb128 0x2
 758 003f 02       		.byte	0x2
 759 0040 05       		.byte	0x5
 760 0041 17020000 		.4byte	.LASF2
 761 0045 02       		.uleb128 0x2
 762 0046 02       		.byte	0x2
 763 0047 07       		.byte	0x7
 764 0048 2E000000 		.4byte	.LASF3
 765 004c 02       		.uleb128 0x2
 766 004d 04       		.byte	0x4
 767 004e 05       		.byte	0x5
 768 004f 47020000 		.4byte	.LASF4
 769 0053 02       		.uleb128 0x2
 770 0054 04       		.byte	0x4
 771 0055 07       		.byte	0x7
 772 0056 9B000000 		.4byte	.LASF5
 773 005a 02       		.uleb128 0x2
 774 005b 08       		.byte	0x8
 775 005c 05       		.byte	0x5
 776 005d 04020000 		.4byte	.LASF6
 777 0061 02       		.uleb128 0x2
 778 0062 08       		.byte	0x8
 779 0063 07       		.byte	0x7
 780 0064 B2010000 		.4byte	.LASF7
 781 0068 04       		.uleb128 0x4
 782 0069 04       		.byte	0x4
ARM GAS  C:\Users\essele\AppData\Local\Temp\ccyS5Pdr.s 			page 19


 783 006a 05       		.byte	0x5
 784 006b 696E7400 		.ascii	"int\000"
 785 006f 02       		.uleb128 0x2
 786 0070 04       		.byte	0x4
 787 0071 07       		.byte	0x7
 788 0072 A5010000 		.4byte	.LASF8
 789 0076 03       		.uleb128 0x3
 790 0077 C9010000 		.4byte	.LASF10
 791 007b 03       		.byte	0x3
 792 007c 18       		.byte	0x18
 793 007d 2C000000 		.4byte	0x2c
 794 0081 02       		.uleb128 0x2
 795 0082 04       		.byte	0x4
 796 0083 04       		.byte	0x4
 797 0084 61000000 		.4byte	.LASF11
 798 0088 02       		.uleb128 0x2
 799 0089 08       		.byte	0x8
 800 008a 04       		.byte	0x4
 801 008b 84010000 		.4byte	.LASF12
 802 008f 02       		.uleb128 0x2
 803 0090 01       		.byte	0x1
 804 0091 08       		.byte	0x8
 805 0092 12020000 		.4byte	.LASF13
 806 0096 02       		.uleb128 0x2
 807 0097 08       		.byte	0x8
 808 0098 04       		.byte	0x4
 809 0099 50020000 		.4byte	.LASF14
 810 009d 02       		.uleb128 0x2
 811 009e 04       		.byte	0x4
 812 009f 07       		.byte	0x7
 813 00a0 DE010000 		.4byte	.LASF15
 814 00a4 05       		.uleb128 0x5
 815 00a5 04       		.byte	0x4
 816 00a6 06       		.uleb128 0x6
 817 00a7 04       		.byte	0x4
 818 00a8 8F000000 		.4byte	0x8f
 819 00ac 03       		.uleb128 0x3
 820 00ad 67000000 		.4byte	.LASF16
 821 00b1 04       		.byte	0x4
 822 00b2 28       		.byte	0x28
 823 00b3 B7000000 		.4byte	0xb7
 824 00b7 07       		.uleb128 0x7
 825 00b8 76000000 		.4byte	.LASF18
 826 00bc 04       		.byte	0x4
 827 00bd 05       		.byte	0x5
 828 00be 00       		.byte	0
 829 00bf CE000000 		.4byte	0xce
 830 00c3 08       		.uleb128 0x8
 831 00c4 D1010000 		.4byte	.LASF38
 832 00c8 A4000000 		.4byte	0xa4
 833 00cc 00       		.byte	0
 834 00cd 00       		.byte	0
 835 00ce 03       		.uleb128 0x3
 836 00cf 7C010000 		.4byte	.LASF17
 837 00d3 04       		.byte	0x4
 838 00d4 62       		.byte	0x62
 839 00d5 AC000000 		.4byte	0xac
ARM GAS  C:\Users\essele\AppData\Local\Temp\ccyS5Pdr.s 			page 20


 840 00d9 07       		.uleb128 0x7
 841 00da 7F020000 		.4byte	.LASF19
 842 00de 08       		.byte	0x8
 843 00df 01       		.byte	0x1
 844 00e0 24       		.byte	0x24
 845 00e1 FE000000 		.4byte	0xfe
 846 00e5 09       		.uleb128 0x9
 847 00e6 73657100 		.ascii	"seq\000"
 848 00ea 01       		.byte	0x1
 849 00eb 25       		.byte	0x25
 850 00ec A6000000 		.4byte	0xa6
 851 00f0 00       		.byte	0
 852 00f1 09       		.uleb128 0x9
 853 00f2 76616C00 		.ascii	"val\000"
 854 00f6 01       		.byte	0x1
 855 00f7 26       		.byte	0x26
 856 00f8 68000000 		.4byte	0x68
 857 00fc 04       		.byte	0x4
 858 00fd 00       		.byte	0
 859 00fe 0A       		.uleb128 0xa
 860 00ff 41000000 		.4byte	.LASF39
 861 0103 01       		.byte	0x1
 862 0104 37       		.byte	0x37
 863 0105 68000000 		.4byte	0x68
 864 0109 00000000 		.4byte	.LFB35
 865 010d 74000000 		.4byte	.LFE35-.LFB35
 866 0111 01       		.uleb128 0x1
 867 0112 9C       		.byte	0x9c
 868 0113 40010000 		.4byte	0x140
 869 0117 0B       		.uleb128 0xb
 870 0118 62756600 		.ascii	"buf\000"
 871 011c 01       		.byte	0x1
 872 011d 37       		.byte	0x37
 873 011e 40010000 		.4byte	0x140
 874 0122 02       		.uleb128 0x2
 875 0123 91       		.byte	0x91
 876 0124 6C       		.sleb128 -20
 877 0125 0B       		.uleb128 0xb
 878 0126 6C656E00 		.ascii	"len\000"
 879 012a 01       		.byte	0x1
 880 012b 37       		.byte	0x37
 881 012c 6F000000 		.4byte	0x6f
 882 0130 02       		.uleb128 0x2
 883 0131 91       		.byte	0x91
 884 0132 68       		.sleb128 -24
 885 0133 0C       		.uleb128 0xc
 886 0134 6900     		.ascii	"i\000"
 887 0136 01       		.byte	0x1
 888 0137 38       		.byte	0x38
 889 0138 6F000000 		.4byte	0x6f
 890 013c 02       		.uleb128 0x2
 891 013d 91       		.byte	0x91
 892 013e 74       		.sleb128 -12
 893 013f 00       		.byte	0
 894 0140 06       		.uleb128 0x6
 895 0141 04       		.byte	0x4
 896 0142 76000000 		.4byte	0x76
ARM GAS  C:\Users\essele\AppData\Local\Temp\ccyS5Pdr.s 			page 21


 897 0146 0D       		.uleb128 0xd
 898 0147 22000000 		.4byte	.LASF40
 899 014b 01       		.byte	0x1
 900 014c 4C       		.byte	0x4c
 901 014d 00000000 		.4byte	.LFB36
 902 0151 30000000 		.4byte	.LFE36-.LFB36
 903 0155 01       		.uleb128 0x1
 904 0156 9C       		.byte	0x9c
 905 0157 0E       		.uleb128 0xe
 906 0158 95010000 		.4byte	.LASF20
 907 015c 01       		.byte	0x1
 908 015d 56       		.byte	0x56
 909 015e 40010000 		.4byte	0x140
 910 0162 00000000 		.4byte	.LFB37
 911 0166 10000000 		.4byte	.LFE37-.LFB37
 912 016a 01       		.uleb128 0x1
 913 016b 9C       		.byte	0x9c
 914 016c 0E       		.uleb128 0xe
 915 016d E7010000 		.4byte	.LASF21
 916 0171 01       		.byte	0x1
 917 0172 5A       		.byte	0x5a
 918 0173 6F000000 		.4byte	0x6f
 919 0177 00000000 		.4byte	.LFB38
 920 017b 14000000 		.4byte	.LFE38-.LFB38
 921 017f 01       		.uleb128 0x1
 922 0180 9C       		.byte	0x9c
 923 0181 0F       		.uleb128 0xf
 924 0182 56000000 		.4byte	.LASF22
 925 0186 01       		.byte	0x1
 926 0187 62       		.byte	0x62
 927 0188 68000000 		.4byte	0x68
 928 018c 00000000 		.4byte	.LFB39
 929 0190 C0010000 		.4byte	.LFE39-.LFB39
 930 0194 01       		.uleb128 0x1
 931 0195 9C       		.byte	0x9c
 932 0196 A7010000 		.4byte	0x1a7
 933 019a 0C       		.uleb128 0xc
 934 019b 6300     		.ascii	"c\000"
 935 019d 01       		.byte	0x1
 936 019e 63       		.byte	0x63
 937 019f 68000000 		.4byte	0x68
 938 01a3 02       		.uleb128 0x2
 939 01a4 91       		.byte	0x91
 940 01a5 74       		.sleb128 -12
 941 01a6 00       		.byte	0
 942 01a7 10       		.uleb128 0x10
 943 01a8 F7010000 		.4byte	.LASF23
 944 01ac 01       		.byte	0x1
 945 01ad BE       		.byte	0xbe
 946 01ae 00000000 		.4byte	.LFB40
 947 01b2 6C000000 		.4byte	.LFE40-.LFB40
 948 01b6 01       		.uleb128 0x1
 949 01b7 9C       		.byte	0x9c
 950 01b8 DA010000 		.4byte	0x1da
 951 01bc 0B       		.uleb128 0xb
 952 01bd 666D7400 		.ascii	"fmt\000"
 953 01c1 01       		.byte	0x1
ARM GAS  C:\Users\essele\AppData\Local\Temp\ccyS5Pdr.s 			page 22


 954 01c2 BE       		.byte	0xbe
 955 01c3 A6000000 		.4byte	0xa6
 956 01c7 02       		.uleb128 0x2
 957 01c8 91       		.byte	0x91
 958 01c9 70       		.sleb128 -16
 959 01ca 11       		.uleb128 0x11
 960 01cb 12       		.uleb128 0x12
 961 01cc 21020000 		.4byte	.LASF24
 962 01d0 01       		.byte	0x1
 963 01d1 C0       		.byte	0xc0
 964 01d2 CE000000 		.4byte	0xce
 965 01d6 02       		.uleb128 0x2
 966 01d7 91       		.byte	0x91
 967 01d8 64       		.sleb128 -28
 968 01d9 00       		.byte	0
 969 01da 10       		.uleb128 0x10
 970 01db 35020000 		.4byte	.LASF25
 971 01df 01       		.byte	0x1
 972 01e0 CC       		.byte	0xcc
 973 01e1 00000000 		.4byte	.LFB41
 974 01e5 5C000000 		.4byte	.LFE41-.LFB41
 975 01e9 01       		.uleb128 0x1
 976 01ea 9C       		.byte	0x9c
 977 01eb 0C020000 		.4byte	0x20c
 978 01ef 13       		.uleb128 0x13
 979 01f0 26020000 		.4byte	.LASF26
 980 01f4 01       		.byte	0x1
 981 01f5 CC       		.byte	0xcc
 982 01f6 40010000 		.4byte	0x140
 983 01fa 02       		.uleb128 0x2
 984 01fb 91       		.byte	0x91
 985 01fc 74       		.sleb128 -12
 986 01fd 0B       		.uleb128 0xb
 987 01fe 6C656E00 		.ascii	"len\000"
 988 0202 01       		.byte	0x1
 989 0203 CC       		.byte	0xcc
 990 0204 68000000 		.4byte	0x68
 991 0208 02       		.uleb128 0x2
 992 0209 91       		.byte	0x91
 993 020a 70       		.sleb128 -16
 994 020b 00       		.byte	0
 995 020c 14       		.uleb128 0x14
 996 020d 76000000 		.4byte	0x76
 997 0211 1C020000 		.4byte	0x21c
 998 0215 15       		.uleb128 0x15
 999 0216 9D000000 		.4byte	0x9d
 1000 021a 7F       		.byte	0x7f
 1001 021b 00       		.byte	0
 1002 021c 16       		.uleb128 0x16
 1003 021d 68020000 		.4byte	.LASF27
 1004 0221 01       		.byte	0x1
 1005 0222 15       		.byte	0x15
 1006 0223 0C020000 		.4byte	0x20c
 1007 0227 05       		.uleb128 0x5
 1008 0228 03       		.byte	0x3
 1009 0229 00000000 		.4byte	last_buf
 1010 022d 16       		.uleb128 0x16
ARM GAS  C:\Users\essele\AppData\Local\Temp\ccyS5Pdr.s 			page 23


 1011 022e 8E000000 		.4byte	.LASF28
 1012 0232 01       		.byte	0x1
 1013 0233 16       		.byte	0x16
 1014 0234 68000000 		.4byte	0x68
 1015 0238 05       		.uleb128 0x5
 1016 0239 03       		.byte	0x3
 1017 023a 00000000 		.4byte	last_buf_len
 1018 023e 16       		.uleb128 0x16
 1019 023f 8B010000 		.4byte	.LASF29
 1020 0243 01       		.byte	0x1
 1021 0244 18       		.byte	0x18
 1022 0245 0C020000 		.4byte	0x20c
 1023 0249 05       		.uleb128 0x5
 1024 024a 03       		.byte	0x3
 1025 024b 00000000 		.4byte	input_buf
 1026 024f 16       		.uleb128 0x16
 1027 0250 71020000 		.4byte	.LASF30
 1028 0254 01       		.byte	0x1
 1029 0255 19       		.byte	0x19
 1030 0256 68000000 		.4byte	0x68
 1031 025a 05       		.uleb128 0x5
 1032 025b 03       		.byte	0x3
 1033 025c 00000000 		.4byte	input_buf_len
 1034 0260 16       		.uleb128 0x16
 1035 0261 11000000 		.4byte	.LASF31
 1036 0265 01       		.byte	0x1
 1037 0266 1A       		.byte	0x1a
 1038 0267 68000000 		.4byte	0x68
 1039 026b 05       		.uleb128 0x5
 1040 026c 03       		.byte	0x3
 1041 026d 00000000 		.4byte	input_cursor_pos
 1042 0271 14       		.uleb128 0x14
 1043 0272 76000000 		.4byte	0x76
 1044 0276 81020000 		.4byte	0x281
 1045 027a 15       		.uleb128 0x15
 1046 027b 9D000000 		.4byte	0x9d
 1047 027f 04       		.byte	0x4
 1048 0280 00       		.byte	0
 1049 0281 16       		.uleb128 0x16
 1050 0282 2D020000 		.4byte	.LASF32
 1051 0286 01       		.byte	0x1
 1052 0287 1C       		.byte	0x1c
 1053 0288 71020000 		.4byte	0x271
 1054 028c 05       		.uleb128 0x5
 1055 028d 03       		.byte	0x3
 1056 028e 00000000 		.4byte	esc_buf
 1057 0292 16       		.uleb128 0x16
 1058 0293 0A000000 		.4byte	.LASF33
 1059 0297 01       		.byte	0x1
 1060 0298 1D       		.byte	0x1d
 1061 0299 68000000 		.4byte	0x68
 1062 029d 05       		.uleb128 0x5
 1063 029e 03       		.byte	0x3
 1064 029f 00000000 		.4byte	escape
 1065 02a3 14       		.uleb128 0x14
 1066 02a4 B3020000 		.4byte	0x2b3
 1067 02a8 B3020000 		.4byte	0x2b3
ARM GAS  C:\Users\essele\AppData\Local\Temp\ccyS5Pdr.s 			page 24


 1068 02ac 15       		.uleb128 0x15
 1069 02ad 9D000000 		.4byte	0x9d
 1070 02b1 04       		.byte	0x4
 1071 02b2 00       		.byte	0
 1072 02b3 17       		.uleb128 0x17
 1073 02b4 D9000000 		.4byte	0xd9
 1074 02b8 16       		.uleb128 0x16
 1075 02b9 4E000000 		.4byte	.LASF34
 1076 02bd 01       		.byte	0x1
 1077 02be 29       		.byte	0x29
 1078 02bf C9020000 		.4byte	0x2c9
 1079 02c3 05       		.uleb128 0x5
 1080 02c4 03       		.byte	0x3
 1081 02c5 00000000 		.4byte	escapes
 1082 02c9 17       		.uleb128 0x17
 1083 02ca A3020000 		.4byte	0x2a3
 1084 02ce 00       		.byte	0
 1085              		.section	.debug_abbrev,"",%progbits
 1086              	.Ldebug_abbrev0:
 1087 0000 01       		.uleb128 0x1
 1088 0001 11       		.uleb128 0x11
 1089 0002 01       		.byte	0x1
 1090 0003 25       		.uleb128 0x25
 1091 0004 0E       		.uleb128 0xe
 1092 0005 13       		.uleb128 0x13
 1093 0006 0B       		.uleb128 0xb
 1094 0007 03       		.uleb128 0x3
 1095 0008 0E       		.uleb128 0xe
 1096 0009 1B       		.uleb128 0x1b
 1097 000a 0E       		.uleb128 0xe
 1098 000b 55       		.uleb128 0x55
 1099 000c 17       		.uleb128 0x17
 1100 000d 11       		.uleb128 0x11
 1101 000e 01       		.uleb128 0x1
 1102 000f 10       		.uleb128 0x10
 1103 0010 17       		.uleb128 0x17
 1104 0011 00       		.byte	0
 1105 0012 00       		.byte	0
 1106 0013 02       		.uleb128 0x2
 1107 0014 24       		.uleb128 0x24
 1108 0015 00       		.byte	0
 1109 0016 0B       		.uleb128 0xb
 1110 0017 0B       		.uleb128 0xb
 1111 0018 3E       		.uleb128 0x3e
 1112 0019 0B       		.uleb128 0xb
 1113 001a 03       		.uleb128 0x3
 1114 001b 0E       		.uleb128 0xe
 1115 001c 00       		.byte	0
 1116 001d 00       		.byte	0
 1117 001e 03       		.uleb128 0x3
 1118 001f 16       		.uleb128 0x16
 1119 0020 00       		.byte	0
 1120 0021 03       		.uleb128 0x3
 1121 0022 0E       		.uleb128 0xe
 1122 0023 3A       		.uleb128 0x3a
 1123 0024 0B       		.uleb128 0xb
 1124 0025 3B       		.uleb128 0x3b
ARM GAS  C:\Users\essele\AppData\Local\Temp\ccyS5Pdr.s 			page 25


 1125 0026 0B       		.uleb128 0xb
 1126 0027 49       		.uleb128 0x49
 1127 0028 13       		.uleb128 0x13
 1128 0029 00       		.byte	0
 1129 002a 00       		.byte	0
 1130 002b 04       		.uleb128 0x4
 1131 002c 24       		.uleb128 0x24
 1132 002d 00       		.byte	0
 1133 002e 0B       		.uleb128 0xb
 1134 002f 0B       		.uleb128 0xb
 1135 0030 3E       		.uleb128 0x3e
 1136 0031 0B       		.uleb128 0xb
 1137 0032 03       		.uleb128 0x3
 1138 0033 08       		.uleb128 0x8
 1139 0034 00       		.byte	0
 1140 0035 00       		.byte	0
 1141 0036 05       		.uleb128 0x5
 1142 0037 0F       		.uleb128 0xf
 1143 0038 00       		.byte	0
 1144 0039 0B       		.uleb128 0xb
 1145 003a 0B       		.uleb128 0xb
 1146 003b 00       		.byte	0
 1147 003c 00       		.byte	0
 1148 003d 06       		.uleb128 0x6
 1149 003e 0F       		.uleb128 0xf
 1150 003f 00       		.byte	0
 1151 0040 0B       		.uleb128 0xb
 1152 0041 0B       		.uleb128 0xb
 1153 0042 49       		.uleb128 0x49
 1154 0043 13       		.uleb128 0x13
 1155 0044 00       		.byte	0
 1156 0045 00       		.byte	0
 1157 0046 07       		.uleb128 0x7
 1158 0047 13       		.uleb128 0x13
 1159 0048 01       		.byte	0x1
 1160 0049 03       		.uleb128 0x3
 1161 004a 0E       		.uleb128 0xe
 1162 004b 0B       		.uleb128 0xb
 1163 004c 0B       		.uleb128 0xb
 1164 004d 3A       		.uleb128 0x3a
 1165 004e 0B       		.uleb128 0xb
 1166 004f 3B       		.uleb128 0x3b
 1167 0050 0B       		.uleb128 0xb
 1168 0051 01       		.uleb128 0x1
 1169 0052 13       		.uleb128 0x13
 1170 0053 00       		.byte	0
 1171 0054 00       		.byte	0
 1172 0055 08       		.uleb128 0x8
 1173 0056 0D       		.uleb128 0xd
 1174 0057 00       		.byte	0
 1175 0058 03       		.uleb128 0x3
 1176 0059 0E       		.uleb128 0xe
 1177 005a 49       		.uleb128 0x49
 1178 005b 13       		.uleb128 0x13
 1179 005c 38       		.uleb128 0x38
 1180 005d 0B       		.uleb128 0xb
 1181 005e 34       		.uleb128 0x34
ARM GAS  C:\Users\essele\AppData\Local\Temp\ccyS5Pdr.s 			page 26


 1182 005f 19       		.uleb128 0x19
 1183 0060 00       		.byte	0
 1184 0061 00       		.byte	0
 1185 0062 09       		.uleb128 0x9
 1186 0063 0D       		.uleb128 0xd
 1187 0064 00       		.byte	0
 1188 0065 03       		.uleb128 0x3
 1189 0066 08       		.uleb128 0x8
 1190 0067 3A       		.uleb128 0x3a
 1191 0068 0B       		.uleb128 0xb
 1192 0069 3B       		.uleb128 0x3b
 1193 006a 0B       		.uleb128 0xb
 1194 006b 49       		.uleb128 0x49
 1195 006c 13       		.uleb128 0x13
 1196 006d 38       		.uleb128 0x38
 1197 006e 0B       		.uleb128 0xb
 1198 006f 00       		.byte	0
 1199 0070 00       		.byte	0
 1200 0071 0A       		.uleb128 0xa
 1201 0072 2E       		.uleb128 0x2e
 1202 0073 01       		.byte	0x1
 1203 0074 3F       		.uleb128 0x3f
 1204 0075 19       		.uleb128 0x19
 1205 0076 03       		.uleb128 0x3
 1206 0077 0E       		.uleb128 0xe
 1207 0078 3A       		.uleb128 0x3a
 1208 0079 0B       		.uleb128 0xb
 1209 007a 3B       		.uleb128 0x3b
 1210 007b 0B       		.uleb128 0xb
 1211 007c 27       		.uleb128 0x27
 1212 007d 19       		.uleb128 0x19
 1213 007e 49       		.uleb128 0x49
 1214 007f 13       		.uleb128 0x13
 1215 0080 11       		.uleb128 0x11
 1216 0081 01       		.uleb128 0x1
 1217 0082 12       		.uleb128 0x12
 1218 0083 06       		.uleb128 0x6
 1219 0084 40       		.uleb128 0x40
 1220 0085 18       		.uleb128 0x18
 1221 0086 9642     		.uleb128 0x2116
 1222 0088 19       		.uleb128 0x19
 1223 0089 01       		.uleb128 0x1
 1224 008a 13       		.uleb128 0x13
 1225 008b 00       		.byte	0
 1226 008c 00       		.byte	0
 1227 008d 0B       		.uleb128 0xb
 1228 008e 05       		.uleb128 0x5
 1229 008f 00       		.byte	0
 1230 0090 03       		.uleb128 0x3
 1231 0091 08       		.uleb128 0x8
 1232 0092 3A       		.uleb128 0x3a
 1233 0093 0B       		.uleb128 0xb
 1234 0094 3B       		.uleb128 0x3b
 1235 0095 0B       		.uleb128 0xb
 1236 0096 49       		.uleb128 0x49
 1237 0097 13       		.uleb128 0x13
 1238 0098 02       		.uleb128 0x2
ARM GAS  C:\Users\essele\AppData\Local\Temp\ccyS5Pdr.s 			page 27


 1239 0099 18       		.uleb128 0x18
 1240 009a 00       		.byte	0
 1241 009b 00       		.byte	0
 1242 009c 0C       		.uleb128 0xc
 1243 009d 34       		.uleb128 0x34
 1244 009e 00       		.byte	0
 1245 009f 03       		.uleb128 0x3
 1246 00a0 08       		.uleb128 0x8
 1247 00a1 3A       		.uleb128 0x3a
 1248 00a2 0B       		.uleb128 0xb
 1249 00a3 3B       		.uleb128 0x3b
 1250 00a4 0B       		.uleb128 0xb
 1251 00a5 49       		.uleb128 0x49
 1252 00a6 13       		.uleb128 0x13
 1253 00a7 02       		.uleb128 0x2
 1254 00a8 18       		.uleb128 0x18
 1255 00a9 00       		.byte	0
 1256 00aa 00       		.byte	0
 1257 00ab 0D       		.uleb128 0xd
 1258 00ac 2E       		.uleb128 0x2e
 1259 00ad 00       		.byte	0
 1260 00ae 3F       		.uleb128 0x3f
 1261 00af 19       		.uleb128 0x19
 1262 00b0 03       		.uleb128 0x3
 1263 00b1 0E       		.uleb128 0xe
 1264 00b2 3A       		.uleb128 0x3a
 1265 00b3 0B       		.uleb128 0xb
 1266 00b4 3B       		.uleb128 0x3b
 1267 00b5 0B       		.uleb128 0xb
 1268 00b6 11       		.uleb128 0x11
 1269 00b7 01       		.uleb128 0x1
 1270 00b8 12       		.uleb128 0x12
 1271 00b9 06       		.uleb128 0x6
 1272 00ba 40       		.uleb128 0x40
 1273 00bb 18       		.uleb128 0x18
 1274 00bc 9642     		.uleb128 0x2116
 1275 00be 19       		.uleb128 0x19
 1276 00bf 00       		.byte	0
 1277 00c0 00       		.byte	0
 1278 00c1 0E       		.uleb128 0xe
 1279 00c2 2E       		.uleb128 0x2e
 1280 00c3 00       		.byte	0
 1281 00c4 3F       		.uleb128 0x3f
 1282 00c5 19       		.uleb128 0x19
 1283 00c6 03       		.uleb128 0x3
 1284 00c7 0E       		.uleb128 0xe
 1285 00c8 3A       		.uleb128 0x3a
 1286 00c9 0B       		.uleb128 0xb
 1287 00ca 3B       		.uleb128 0x3b
 1288 00cb 0B       		.uleb128 0xb
 1289 00cc 49       		.uleb128 0x49
 1290 00cd 13       		.uleb128 0x13
 1291 00ce 11       		.uleb128 0x11
 1292 00cf 01       		.uleb128 0x1
 1293 00d0 12       		.uleb128 0x12
 1294 00d1 06       		.uleb128 0x6
 1295 00d2 40       		.uleb128 0x40
ARM GAS  C:\Users\essele\AppData\Local\Temp\ccyS5Pdr.s 			page 28


 1296 00d3 18       		.uleb128 0x18
 1297 00d4 9742     		.uleb128 0x2117
 1298 00d6 19       		.uleb128 0x19
 1299 00d7 00       		.byte	0
 1300 00d8 00       		.byte	0
 1301 00d9 0F       		.uleb128 0xf
 1302 00da 2E       		.uleb128 0x2e
 1303 00db 01       		.byte	0x1
 1304 00dc 3F       		.uleb128 0x3f
 1305 00dd 19       		.uleb128 0x19
 1306 00de 03       		.uleb128 0x3
 1307 00df 0E       		.uleb128 0xe
 1308 00e0 3A       		.uleb128 0x3a
 1309 00e1 0B       		.uleb128 0xb
 1310 00e2 3B       		.uleb128 0x3b
 1311 00e3 0B       		.uleb128 0xb
 1312 00e4 49       		.uleb128 0x49
 1313 00e5 13       		.uleb128 0x13
 1314 00e6 11       		.uleb128 0x11
 1315 00e7 01       		.uleb128 0x1
 1316 00e8 12       		.uleb128 0x12
 1317 00e9 06       		.uleb128 0x6
 1318 00ea 40       		.uleb128 0x40
 1319 00eb 18       		.uleb128 0x18
 1320 00ec 9642     		.uleb128 0x2116
 1321 00ee 19       		.uleb128 0x19
 1322 00ef 01       		.uleb128 0x1
 1323 00f0 13       		.uleb128 0x13
 1324 00f1 00       		.byte	0
 1325 00f2 00       		.byte	0
 1326 00f3 10       		.uleb128 0x10
 1327 00f4 2E       		.uleb128 0x2e
 1328 00f5 01       		.byte	0x1
 1329 00f6 3F       		.uleb128 0x3f
 1330 00f7 19       		.uleb128 0x19
 1331 00f8 03       		.uleb128 0x3
 1332 00f9 0E       		.uleb128 0xe
 1333 00fa 3A       		.uleb128 0x3a
 1334 00fb 0B       		.uleb128 0xb
 1335 00fc 3B       		.uleb128 0x3b
 1336 00fd 0B       		.uleb128 0xb
 1337 00fe 27       		.uleb128 0x27
 1338 00ff 19       		.uleb128 0x19
 1339 0100 11       		.uleb128 0x11
 1340 0101 01       		.uleb128 0x1
 1341 0102 12       		.uleb128 0x12
 1342 0103 06       		.uleb128 0x6
 1343 0104 40       		.uleb128 0x40
 1344 0105 18       		.uleb128 0x18
 1345 0106 9642     		.uleb128 0x2116
 1346 0108 19       		.uleb128 0x19
 1347 0109 01       		.uleb128 0x1
 1348 010a 13       		.uleb128 0x13
 1349 010b 00       		.byte	0
 1350 010c 00       		.byte	0
 1351 010d 11       		.uleb128 0x11
 1352 010e 18       		.uleb128 0x18
ARM GAS  C:\Users\essele\AppData\Local\Temp\ccyS5Pdr.s 			page 29


 1353 010f 00       		.byte	0
 1354 0110 00       		.byte	0
 1355 0111 00       		.byte	0
 1356 0112 12       		.uleb128 0x12
 1357 0113 34       		.uleb128 0x34
 1358 0114 00       		.byte	0
 1359 0115 03       		.uleb128 0x3
 1360 0116 0E       		.uleb128 0xe
 1361 0117 3A       		.uleb128 0x3a
 1362 0118 0B       		.uleb128 0xb
 1363 0119 3B       		.uleb128 0x3b
 1364 011a 0B       		.uleb128 0xb
 1365 011b 49       		.uleb128 0x49
 1366 011c 13       		.uleb128 0x13
 1367 011d 02       		.uleb128 0x2
 1368 011e 18       		.uleb128 0x18
 1369 011f 00       		.byte	0
 1370 0120 00       		.byte	0
 1371 0121 13       		.uleb128 0x13
 1372 0122 05       		.uleb128 0x5
 1373 0123 00       		.byte	0
 1374 0124 03       		.uleb128 0x3
 1375 0125 0E       		.uleb128 0xe
 1376 0126 3A       		.uleb128 0x3a
 1377 0127 0B       		.uleb128 0xb
 1378 0128 3B       		.uleb128 0x3b
 1379 0129 0B       		.uleb128 0xb
 1380 012a 49       		.uleb128 0x49
 1381 012b 13       		.uleb128 0x13
 1382 012c 02       		.uleb128 0x2
 1383 012d 18       		.uleb128 0x18
 1384 012e 00       		.byte	0
 1385 012f 00       		.byte	0
 1386 0130 14       		.uleb128 0x14
 1387 0131 01       		.uleb128 0x1
 1388 0132 01       		.byte	0x1
 1389 0133 49       		.uleb128 0x49
 1390 0134 13       		.uleb128 0x13
 1391 0135 01       		.uleb128 0x1
 1392 0136 13       		.uleb128 0x13
 1393 0137 00       		.byte	0
 1394 0138 00       		.byte	0
 1395 0139 15       		.uleb128 0x15
 1396 013a 21       		.uleb128 0x21
 1397 013b 00       		.byte	0
 1398 013c 49       		.uleb128 0x49
 1399 013d 13       		.uleb128 0x13
 1400 013e 2F       		.uleb128 0x2f
 1401 013f 0B       		.uleb128 0xb
 1402 0140 00       		.byte	0
 1403 0141 00       		.byte	0
 1404 0142 16       		.uleb128 0x16
 1405 0143 34       		.uleb128 0x34
 1406 0144 00       		.byte	0
 1407 0145 03       		.uleb128 0x3
 1408 0146 0E       		.uleb128 0xe
 1409 0147 3A       		.uleb128 0x3a
ARM GAS  C:\Users\essele\AppData\Local\Temp\ccyS5Pdr.s 			page 30


 1410 0148 0B       		.uleb128 0xb
 1411 0149 3B       		.uleb128 0x3b
 1412 014a 0B       		.uleb128 0xb
 1413 014b 49       		.uleb128 0x49
 1414 014c 13       		.uleb128 0x13
 1415 014d 3F       		.uleb128 0x3f
 1416 014e 19       		.uleb128 0x19
 1417 014f 02       		.uleb128 0x2
 1418 0150 18       		.uleb128 0x18
 1419 0151 00       		.byte	0
 1420 0152 00       		.byte	0
 1421 0153 17       		.uleb128 0x17
 1422 0154 26       		.uleb128 0x26
 1423 0155 00       		.byte	0
 1424 0156 49       		.uleb128 0x49
 1425 0157 13       		.uleb128 0x13
 1426 0158 00       		.byte	0
 1427 0159 00       		.byte	0
 1428 015a 00       		.byte	0
 1429              		.section	.debug_aranges,"",%progbits
 1430 0000 4C000000 		.4byte	0x4c
 1431 0004 0200     		.2byte	0x2
 1432 0006 00000000 		.4byte	.Ldebug_info0
 1433 000a 04       		.byte	0x4
 1434 000b 00       		.byte	0
 1435 000c 0000     		.2byte	0
 1436 000e 0000     		.2byte	0
 1437 0010 00000000 		.4byte	.LFB35
 1438 0014 74000000 		.4byte	.LFE35-.LFB35
 1439 0018 00000000 		.4byte	.LFB36
 1440 001c 30000000 		.4byte	.LFE36-.LFB36
 1441 0020 00000000 		.4byte	.LFB37
 1442 0024 10000000 		.4byte	.LFE37-.LFB37
 1443 0028 00000000 		.4byte	.LFB38
 1444 002c 14000000 		.4byte	.LFE38-.LFB38
 1445 0030 00000000 		.4byte	.LFB39
 1446 0034 C0010000 		.4byte	.LFE39-.LFB39
 1447 0038 00000000 		.4byte	.LFB40
 1448 003c 6C000000 		.4byte	.LFE40-.LFB40
 1449 0040 00000000 		.4byte	.LFB41
 1450 0044 5C000000 		.4byte	.LFE41-.LFB41
 1451 0048 00000000 		.4byte	0
 1452 004c 00000000 		.4byte	0
 1453              		.section	.debug_ranges,"",%progbits
 1454              	.Ldebug_ranges0:
 1455 0000 00000000 		.4byte	.LFB35
 1456 0004 74000000 		.4byte	.LFE35
 1457 0008 00000000 		.4byte	.LFB36
 1458 000c 30000000 		.4byte	.LFE36
 1459 0010 00000000 		.4byte	.LFB37
 1460 0014 10000000 		.4byte	.LFE37
 1461 0018 00000000 		.4byte	.LFB38
 1462 001c 14000000 		.4byte	.LFE38
 1463 0020 00000000 		.4byte	.LFB39
 1464 0024 C0010000 		.4byte	.LFE39
 1465 0028 00000000 		.4byte	.LFB40
 1466 002c 6C000000 		.4byte	.LFE40
ARM GAS  C:\Users\essele\AppData\Local\Temp\ccyS5Pdr.s 			page 31


 1467 0030 00000000 		.4byte	.LFB41
 1468 0034 5C000000 		.4byte	.LFE41
 1469 0038 00000000 		.4byte	0
 1470 003c 00000000 		.4byte	0
 1471              		.section	.debug_line,"",%progbits
 1472              	.Ldebug_line0:
 1473 0000 86020000 		.section	.debug_str,"MS",%progbits,1
 1473      0200AB01 
 1473      00000201 
 1473      FB0E0D00 
 1473      01010101 
 1474              	.LASF9:
 1475 0000 5F5F7569 		.ascii	"__uint8_t\000"
 1475      6E74385F 
 1475      7400
 1476              	.LASF33:
 1477 000a 65736361 		.ascii	"escape\000"
 1477      706500
 1478              	.LASF31:
 1479 0011 696E7075 		.ascii	"input_cursor_pos\000"
 1479      745F6375 
 1479      72736F72 
 1479      5F706F73 
 1479      00
 1480              	.LASF40:
 1481 0022 696E7075 		.ascii	"input_start\000"
 1481      745F7374 
 1481      61727400 
 1482              	.LASF3:
 1483 002e 73686F72 		.ascii	"short unsigned int\000"
 1483      7420756E 
 1483      7369676E 
 1483      65642069 
 1483      6E7400
 1484              	.LASF39:
 1485 0041 76616C69 		.ascii	"valid_escape\000"
 1485      645F6573 
 1485      63617065 
 1485      00
 1486              	.LASF34:
 1487 004e 65736361 		.ascii	"escapes\000"
 1487      70657300 
 1488              	.LASF22:
 1489 0056 696E7075 		.ascii	"input_data\000"
 1489      745F6461 
 1489      746100
 1490              	.LASF11:
 1491 0061 666C6F61 		.ascii	"float\000"
 1491      7400
 1492              	.LASF16:
 1493 0067 5F5F676E 		.ascii	"__gnuc_va_list\000"
 1493      75635F76 
 1493      615F6C69 
 1493      737400
 1494              	.LASF18:
 1495 0076 5F5F7661 		.ascii	"__va_list\000"
 1495      5F6C6973 
ARM GAS  C:\Users\essele\AppData\Local\Temp\ccyS5Pdr.s 			page 32


 1495      7400
 1496              	.LASF1:
 1497 0080 756E7369 		.ascii	"unsigned char\000"
 1497      676E6564 
 1497      20636861 
 1497      7200
 1498              	.LASF28:
 1499 008e 6C617374 		.ascii	"last_buf_len\000"
 1499      5F627566 
 1499      5F6C656E 
 1499      00
 1500              	.LASF5:
 1501 009b 6C6F6E67 		.ascii	"long unsigned int\000"
 1501      20756E73 
 1501      69676E65 
 1501      6420696E 
 1501      7400
 1502              	.LASF37:
 1503 00ad 5C5C4D61 		.ascii	"\\\\Mac\\Home\\Documents\\dev\\yaugi\\GPIB USB Adap"
 1503      635C486F 
 1503      6D655C44 
 1503      6F63756D 
 1503      656E7473 
 1504 00d9 7465725C 		.ascii	"ter\\GPIB USB 1.cydsn\000"
 1504      47504942 
 1504      20555342 
 1504      20312E63 
 1504      7964736E 
 1505              	.LASF35:
 1506 00ee 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 1506      43313120 
 1506      352E342E 
 1506      31203230 
 1506      31363036 
 1507 0121 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m0 -mthumb -g -O"
 1507      20726576 
 1507      6973696F 
 1507      6E203233 
 1507      37373135 
 1508 0154 30202D66 		.ascii	"0 -ffunction-sections -ffat-lto-objects\000"
 1508      66756E63 
 1508      74696F6E 
 1508      2D736563 
 1508      74696F6E 
 1509              	.LASF17:
 1510 017c 76615F6C 		.ascii	"va_list\000"
 1510      69737400 
 1511              	.LASF12:
 1512 0184 646F7562 		.ascii	"double\000"
 1512      6C6500
 1513              	.LASF29:
 1514 018b 696E7075 		.ascii	"input_buf\000"
 1514      745F6275 
 1514      6600
 1515              	.LASF20:
 1516 0195 696E7075 		.ascii	"input_getbuffer\000"
 1516      745F6765 
ARM GAS  C:\Users\essele\AppData\Local\Temp\ccyS5Pdr.s 			page 33


 1516      74627566 
 1516      66657200 
 1517              	.LASF8:
 1518 01a5 756E7369 		.ascii	"unsigned int\000"
 1518      676E6564 
 1518      20696E74 
 1518      00
 1519              	.LASF7:
 1520 01b2 6C6F6E67 		.ascii	"long long unsigned int\000"
 1520      206C6F6E 
 1520      6720756E 
 1520      7369676E 
 1520      65642069 
 1521              	.LASF10:
 1522 01c9 75696E74 		.ascii	"uint8_t\000"
 1522      385F7400 
 1523              	.LASF38:
 1524 01d1 5F5F6170 		.ascii	"__ap\000"
 1524      00
 1525              	.LASF36:
 1526 01d6 696E7075 		.ascii	"input.c\000"
 1526      742E6300 
 1527              	.LASF15:
 1528 01de 73697A65 		.ascii	"sizetype\000"
 1528      74797065 
 1528      00
 1529              	.LASF21:
 1530 01e7 696E7075 		.ascii	"input_getlength\000"
 1530      745F6765 
 1530      746C656E 
 1530      67746800 
 1531              	.LASF23:
 1532 01f7 696E7075 		.ascii	"input_printf\000"
 1532      745F7072 
 1532      696E7466 
 1532      00
 1533              	.LASF6:
 1534 0204 6C6F6E67 		.ascii	"long long int\000"
 1534      206C6F6E 
 1534      6720696E 
 1534      7400
 1535              	.LASF13:
 1536 0212 63686172 		.ascii	"char\000"
 1536      00
 1537              	.LASF2:
 1538 0217 73686F72 		.ascii	"short int\000"
 1538      7420696E 
 1538      7400
 1539              	.LASF24:
 1540 0221 61726773 		.ascii	"args\000"
 1540      00
 1541              	.LASF26:
 1542 0226 6F757470 		.ascii	"output\000"
 1542      757400
 1543              	.LASF32:
 1544 022d 6573635F 		.ascii	"esc_buf\000"
 1544      62756600 
ARM GAS  C:\Users\essele\AppData\Local\Temp\ccyS5Pdr.s 			page 34


 1545              	.LASF25:
 1546 0235 696E7075 		.ascii	"input_show_output\000"
 1546      745F7368 
 1546      6F775F6F 
 1546      75747075 
 1546      7400
 1547              	.LASF4:
 1548 0247 6C6F6E67 		.ascii	"long int\000"
 1548      20696E74 
 1548      00
 1549              	.LASF14:
 1550 0250 6C6F6E67 		.ascii	"long double\000"
 1550      20646F75 
 1550      626C6500 
 1551              	.LASF0:
 1552 025c 7369676E 		.ascii	"signed char\000"
 1552      65642063 
 1552      68617200 
 1553              	.LASF27:
 1554 0268 6C617374 		.ascii	"last_buf\000"
 1554      5F627566 
 1554      00
 1555              	.LASF30:
 1556 0271 696E7075 		.ascii	"input_buf_len\000"
 1556      745F6275 
 1556      665F6C65 
 1556      6E00
 1557              	.LASF19:
 1558 027f 65736361 		.ascii	"escape_sequence\000"
 1558      70655F73 
 1558      65717565 
 1558      6E636500 
 1559              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
