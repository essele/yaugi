ARM GAS  C:\Users\essele\AppData\Local\Temp\ccmz8StT.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m0
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 0
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"USBUART.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.USBUART_Init,"ax",%progbits
  20              		.align	2
  21              		.global	USBUART_Init
  22              		.code	16
  23              		.thumb_func
  24              		.type	USBUART_Init, %function
  25              	USBUART_Init:
  26              	.LFB2:
  27              		.file 1 "Generated_Source\\PSoC4\\USBUART.c"
   1:Generated_Source\PSoC4/USBUART.c **** /***************************************************************************//**
   2:Generated_Source\PSoC4/USBUART.c **** * \file USBUART.c
   3:Generated_Source\PSoC4/USBUART.c **** * \version 3.20
   4:Generated_Source\PSoC4/USBUART.c **** *
   5:Generated_Source\PSoC4/USBUART.c **** * \brief
   6:Generated_Source\PSoC4/USBUART.c **** *  This file contains the global USBFS API functions.
   7:Generated_Source\PSoC4/USBUART.c **** *
   8:Generated_Source\PSoC4/USBUART.c **** * Note:
   9:Generated_Source\PSoC4/USBUART.c **** *  Many of the functions use an endpoint number. SRAM arrays are sized with 9
  10:Generated_Source\PSoC4/USBUART.c **** *  elements, so they are indexed directly by epNumber.  The SIE and ARB
  11:Generated_Source\PSoC4/USBUART.c **** *  registers are indexed by variations of epNumber - 1.
  12:Generated_Source\PSoC4/USBUART.c **** *
  13:Generated_Source\PSoC4/USBUART.c **** ********************************************************************************
  14:Generated_Source\PSoC4/USBUART.c **** * \copyright
  15:Generated_Source\PSoC4/USBUART.c **** * Copyright 2008-2016, Cypress Semiconductor Corporation.  All rights reserved.
  16:Generated_Source\PSoC4/USBUART.c **** * You may use this file only in accordance with the license, terms, conditions,
  17:Generated_Source\PSoC4/USBUART.c **** * disclaimers, and limitations in the end user license agreement accompanying
  18:Generated_Source\PSoC4/USBUART.c **** * the software package with which this file was provided.
  19:Generated_Source\PSoC4/USBUART.c **** *******************************************************************************/
  20:Generated_Source\PSoC4/USBUART.c **** 
  21:Generated_Source\PSoC4/USBUART.c **** #include "USBUART_pvt.h"
  22:Generated_Source\PSoC4/USBUART.c **** #include "USBUART_cydmac.h"
  23:Generated_Source\PSoC4/USBUART.c **** #include "USBUART_hid.h"
  24:Generated_Source\PSoC4/USBUART.c **** #include "USBUART_Dp.h"
  25:Generated_Source\PSoC4/USBUART.c **** 
  26:Generated_Source\PSoC4/USBUART.c **** 
  27:Generated_Source\PSoC4/USBUART.c **** /***************************************
  28:Generated_Source\PSoC4/USBUART.c **** * Global data allocation
  29:Generated_Source\PSoC4/USBUART.c **** ***************************************/
  30:Generated_Source\PSoC4/USBUART.c **** 
ARM GAS  C:\Users\essele\AppData\Local\Temp\ccmz8StT.s 			page 2


  31:Generated_Source\PSoC4/USBUART.c **** /** Indicates whether the USBFS has been initialized. The variable is
  32:Generated_Source\PSoC4/USBUART.c **** * initialized to 0 after device reset and set to 1 the first time USBFS_Start()
  33:Generated_Source\PSoC4/USBUART.c **** * is called. This allows the Component to restart without reinitialization after
  34:Generated_Source\PSoC4/USBUART.c **** * the first call to the USBFS_Start() routine.
  35:Generated_Source\PSoC4/USBUART.c **** * If re-initialization of the Component is required, the variable should be set
  36:Generated_Source\PSoC4/USBUART.c **** * to 0 before the USBFS_Start() routine is called. Alternatively, the USBFS can
  37:Generated_Source\PSoC4/USBUART.c **** * be reinitialized by calling both USBFS_Init() and USBFS_InitComponent()
  38:Generated_Source\PSoC4/USBUART.c **** * functions.
  39:Generated_Source\PSoC4/USBUART.c **** */
  40:Generated_Source\PSoC4/USBUART.c **** uint8 USBUART_initVar = 0u;
  41:Generated_Source\PSoC4/USBUART.c **** 
  42:Generated_Source\PSoC4/USBUART.c **** #if (USBUART_EP_MANAGEMENT_DMA)
  43:Generated_Source\PSoC4/USBUART.c ****     #if (CY_PSOC4)
  44:Generated_Source\PSoC4/USBUART.c ****         static void USBUART_InitEpDma(void);
  45:Generated_Source\PSoC4/USBUART.c **** 
  46:Generated_Source\PSoC4/USBUART.c ****         /* DMA chanels assigend for endpoints. */
  47:Generated_Source\PSoC4/USBUART.c ****         const uint8 USBUART_DmaChan[USBUART_MAX_EP] =
  48:Generated_Source\PSoC4/USBUART.c ****         {
  49:Generated_Source\PSoC4/USBUART.c ****             0u,
  50:Generated_Source\PSoC4/USBUART.c ****             0u,
  51:Generated_Source\PSoC4/USBUART.c ****             0u,
  52:Generated_Source\PSoC4/USBUART.c ****             0u,
  53:Generated_Source\PSoC4/USBUART.c ****             0u,
  54:Generated_Source\PSoC4/USBUART.c ****             0u,
  55:Generated_Source\PSoC4/USBUART.c ****             0u,
  56:Generated_Source\PSoC4/USBUART.c ****             0u,
  57:Generated_Source\PSoC4/USBUART.c ****             0u,
  58:Generated_Source\PSoC4/USBUART.c ****         };        
  59:Generated_Source\PSoC4/USBUART.c ****     #else
  60:Generated_Source\PSoC4/USBUART.c ****         /* DMA chanels assigend for endpoints. */
  61:Generated_Source\PSoC4/USBUART.c ****         uint8 USBUART_DmaChan[USBUART_MAX_EP];
  62:Generated_Source\PSoC4/USBUART.c ****         
  63:Generated_Source\PSoC4/USBUART.c ****         /* DMA TDs require for PSoC 3/5LP operation. */
  64:Generated_Source\PSoC4/USBUART.c ****         uint8 USBUART_DmaTd[USBUART_MAX_EP];
  65:Generated_Source\PSoC4/USBUART.c ****     #endif /* (CY_PSOC4) */
  66:Generated_Source\PSoC4/USBUART.c **** #endif /* (USBUART_EP_MANAGEMENT_DMA) */
  67:Generated_Source\PSoC4/USBUART.c **** 
  68:Generated_Source\PSoC4/USBUART.c **** #if (USBUART_EP_MANAGEMENT_DMA_AUTO)
  69:Generated_Source\PSoC4/USBUART.c **** #if (CY_PSOC4)
  70:Generated_Source\PSoC4/USBUART.c ****     /* Number of DMA bursts. */
  71:Generated_Source\PSoC4/USBUART.c ****     uint8  USBUART_DmaEpBurstCnt   [USBUART_MAX_EP];
  72:Generated_Source\PSoC4/USBUART.c ****     
  73:Generated_Source\PSoC4/USBUART.c ****     /* Number of bytes to transfer in last DMA burst. */
  74:Generated_Source\PSoC4/USBUART.c ****     uint8  USBUART_DmaEpLastBurstEl[USBUART_MAX_EP];
  75:Generated_Source\PSoC4/USBUART.c **** 
  76:Generated_Source\PSoC4/USBUART.c ****     /* Storage for arrays above. */
  77:Generated_Source\PSoC4/USBUART.c ****     uint8  USBUART_DmaEpBurstCntBackup  [USBUART_MAX_EP];
  78:Generated_Source\PSoC4/USBUART.c ****     uint32 USBUART_DmaEpBufferAddrBackup[USBUART_MAX_EP];
  79:Generated_Source\PSoC4/USBUART.c ****      
  80:Generated_Source\PSoC4/USBUART.c ****     /* DMA trigger mux output for usb.dma_req[0-7]. */
  81:Generated_Source\PSoC4/USBUART.c ****     const uint8 USBUART_DmaReqOut[USBUART_MAX_EP] =
  82:Generated_Source\PSoC4/USBUART.c ****     {
  83:Generated_Source\PSoC4/USBUART.c ****         0u,
  84:Generated_Source\PSoC4/USBUART.c ****         USBUART_ep1_dma__TR_OUTPUT,
  85:Generated_Source\PSoC4/USBUART.c ****         USBUART_ep2_dma__TR_OUTPUT,
  86:Generated_Source\PSoC4/USBUART.c ****         USBUART_ep3_dma__TR_OUTPUT,
  87:Generated_Source\PSoC4/USBUART.c ****         0u,
ARM GAS  C:\Users\essele\AppData\Local\Temp\ccmz8StT.s 			page 3


  88:Generated_Source\PSoC4/USBUART.c ****         0u,
  89:Generated_Source\PSoC4/USBUART.c ****         0u,
  90:Generated_Source\PSoC4/USBUART.c ****         0u,
  91:Generated_Source\PSoC4/USBUART.c ****         0u,
  92:Generated_Source\PSoC4/USBUART.c ****     };
  93:Generated_Source\PSoC4/USBUART.c **** 
  94:Generated_Source\PSoC4/USBUART.c ****     /* DMA trigger mux output for usb.dma_burstend[0-7]. */
  95:Generated_Source\PSoC4/USBUART.c ****     const uint8 USBUART_DmaBurstEndOut[USBUART_MAX_EP] =
  96:Generated_Source\PSoC4/USBUART.c ****     {
  97:Generated_Source\PSoC4/USBUART.c ****         0u,
  98:Generated_Source\PSoC4/USBUART.c ****         USBUART_BURSTEND_0_TR_OUTPUT,
  99:Generated_Source\PSoC4/USBUART.c ****         USBUART_BURSTEND_1_TR_OUTPUT,
 100:Generated_Source\PSoC4/USBUART.c ****         USBUART_BURSTEND_2_TR_OUTPUT,
 101:Generated_Source\PSoC4/USBUART.c ****         USBUART_BURSTEND_3_TR_OUTPUT,
 102:Generated_Source\PSoC4/USBUART.c ****         USBUART_BURSTEND_4_TR_OUTPUT,
 103:Generated_Source\PSoC4/USBUART.c ****         USBUART_BURSTEND_5_TR_OUTPUT,
 104:Generated_Source\PSoC4/USBUART.c ****         USBUART_BURSTEND_6_TR_OUTPUT,
 105:Generated_Source\PSoC4/USBUART.c ****         USBUART_BURSTEND_7_TR_OUTPUT
 106:Generated_Source\PSoC4/USBUART.c ****     };
 107:Generated_Source\PSoC4/USBUART.c ****     
 108:Generated_Source\PSoC4/USBUART.c **** #else
 109:Generated_Source\PSoC4/USBUART.c ****     #if (USBUART_EP_DMA_AUTO_OPT == 0u)
 110:Generated_Source\PSoC4/USBUART.c ****         static uint8 clearInDataRdyStatus = USBUART_ARB_EPX_CFG_DEFAULT;
 111:Generated_Source\PSoC4/USBUART.c ****         uint8 USBUART_DmaNextTd[USBUART_MAX_EP];
 112:Generated_Source\PSoC4/USBUART.c ****         const uint8 USBUART_epX_TD_TERMOUT_EN[USBUART_MAX_EP] =
 113:Generated_Source\PSoC4/USBUART.c ****         {
 114:Generated_Source\PSoC4/USBUART.c ****             0u,
 115:Generated_Source\PSoC4/USBUART.c ****             0u,
 116:Generated_Source\PSoC4/USBUART.c ****             0u,
 117:Generated_Source\PSoC4/USBUART.c ****             0u,
 118:Generated_Source\PSoC4/USBUART.c ****             0u,
 119:Generated_Source\PSoC4/USBUART.c ****             0u,
 120:Generated_Source\PSoC4/USBUART.c ****             0u,
 121:Generated_Source\PSoC4/USBUART.c ****             0u,
 122:Generated_Source\PSoC4/USBUART.c ****             0u,
 123:Generated_Source\PSoC4/USBUART.c ****         };
 124:Generated_Source\PSoC4/USBUART.c **** 
 125:Generated_Source\PSoC4/USBUART.c ****         volatile uint16 USBUART_inLength[USBUART_MAX_EP];
 126:Generated_Source\PSoC4/USBUART.c ****         const uint8 *USBUART_inDataPointer[USBUART_MAX_EP];
 127:Generated_Source\PSoC4/USBUART.c ****         volatile uint8 USBUART_inBufFull[USBUART_MAX_EP];
 128:Generated_Source\PSoC4/USBUART.c ****     #endif /* (USBUART_EP_DMA_AUTO_OPT == 0u) */
 129:Generated_Source\PSoC4/USBUART.c **** #endif /* (CY_PSOC4) */
 130:Generated_Source\PSoC4/USBUART.c **** #endif /* (USBUART_EP_MANAGEMENT_DMA_AUTO) */
 131:Generated_Source\PSoC4/USBUART.c **** 
 132:Generated_Source\PSoC4/USBUART.c **** 
 133:Generated_Source\PSoC4/USBUART.c **** /*******************************************************************************
 134:Generated_Source\PSoC4/USBUART.c **** * Function Name: USBUART_Start
 135:Generated_Source\PSoC4/USBUART.c **** ****************************************************************************//**
 136:Generated_Source\PSoC4/USBUART.c **** *
 137:Generated_Source\PSoC4/USBUART.c **** *   This function performs all required initialization for the USBFS component.
 138:Generated_Source\PSoC4/USBUART.c **** *   After this function call, the USB device initiates communication with the
 139:Generated_Source\PSoC4/USBUART.c **** *   host by pull-up D+ line. This is the preferred method to begin component
 140:Generated_Source\PSoC4/USBUART.c **** *   operation.
 141:Generated_Source\PSoC4/USBUART.c **** *
 142:Generated_Source\PSoC4/USBUART.c **** *   Note that global interrupts have to be enabled because interrupts are
 143:Generated_Source\PSoC4/USBUART.c **** *   required for USBFS component operation.
 144:Generated_Source\PSoC4/USBUART.c **** *
ARM GAS  C:\Users\essele\AppData\Local\Temp\ccmz8StT.s 			page 4


 145:Generated_Source\PSoC4/USBUART.c **** *   PSoC 4200L devices: when USBFS component configured to DMA with Automatic
 146:Generated_Source\PSoC4/USBUART.c **** *   Buffer Management, the DMA interrupt priority is changed to the highest
 147:Generated_Source\PSoC4/USBUART.c **** *   (priority 0) inside this function.
 148:Generated_Source\PSoC4/USBUART.c **** *
 149:Generated_Source\PSoC4/USBUART.c **** *   PSoC 3/PSoC 5LP devices: when USBFS component configured to DMA with
 150:Generated_Source\PSoC4/USBUART.c **** *   Automatic Buffer Management, the Arbiter interrupt priority is changed to
 151:Generated_Source\PSoC4/USBUART.c **** *   the highest (priority 0) inside this function.
 152:Generated_Source\PSoC4/USBUART.c **** *
 153:Generated_Source\PSoC4/USBUART.c **** *  \param device
 154:Generated_Source\PSoC4/USBUART.c **** *          Contains the device number of the desired device descriptor.
 155:Generated_Source\PSoC4/USBUART.c **** *          The device number can be found in the Device Descriptor Tab of
 156:Generated_Source\PSoC4/USBUART.c **** *          "Configure" dialog, under the settings of desired Device Descriptor,
 157:Generated_Source\PSoC4/USBUART.c **** *          in the "Device Number" field.
 158:Generated_Source\PSoC4/USBUART.c **** *  \param mode:
 159:Generated_Source\PSoC4/USBUART.c **** *   The operating voltage. This determines whether the voltage regulator
 160:Generated_Source\PSoC4/USBUART.c **** *   is enabled for 5V operation or if pass through mode is used for 3.3V
 161:Generated_Source\PSoC4/USBUART.c **** *   operation. Symbolic names and their associated values are given in the
 162:Generated_Source\PSoC4/USBUART.c **** *   following list.
 163:Generated_Source\PSoC4/USBUART.c **** *
 164:Generated_Source\PSoC4/USBUART.c **** *       *USBUART_3V_OPERATION* - Disable voltage regulator and pass-
 165:Generated_Source\PSoC4/USBUART.c **** *                                      through Vcc for pull-up
 166:Generated_Source\PSoC4/USBUART.c **** *
 167:Generated_Source\PSoC4/USBUART.c **** *       *USBUART_5V_OPERATION* - Enable voltage regulator and use
 168:Generated_Source\PSoC4/USBUART.c **** *                                      regulator for pull-up
 169:Generated_Source\PSoC4/USBUART.c **** *
 170:Generated_Source\PSoC4/USBUART.c **** *       *USBUART_DWR_POWER_OPERATION* - Enable or disable the voltage
 171:Generated_Source\PSoC4/USBUART.c **** *                                      regulator depending on the power supply
 172:Generated_Source\PSoC4/USBUART.c **** *                                      voltage configuration in the DWR tab.
 173:Generated_Source\PSoC4/USBUART.c **** *                                      For PSoC 3/5LP devices, the VDDD supply
 174:Generated_Source\PSoC4/USBUART.c **** *                                      voltage is considered and for PSoC 4A-L,
 175:Generated_Source\PSoC4/USBUART.c **** *                                      the VBUS supply voltage is considered.*
 176:Generated_Source\PSoC4/USBUART.c **** * \globalvars
 177:Generated_Source\PSoC4/USBUART.c **** *  \ref USBUART_initVar
 178:Generated_Source\PSoC4/USBUART.c **** *
 179:Generated_Source\PSoC4/USBUART.c **** * \sideeffect
 180:Generated_Source\PSoC4/USBUART.c **** *   This function will reset all communication states to default.
 181:Generated_Source\PSoC4/USBUART.c **** *
 182:Generated_Source\PSoC4/USBUART.c **** * \reentrant
 183:Generated_Source\PSoC4/USBUART.c **** *  No.
 184:Generated_Source\PSoC4/USBUART.c **** *
 185:Generated_Source\PSoC4/USBUART.c **** *******************************************************************************/
 186:Generated_Source\PSoC4/USBUART.c **** void USBUART_Start(uint8 device, uint8 mode) 
 187:Generated_Source\PSoC4/USBUART.c **** {
 188:Generated_Source\PSoC4/USBUART.c ****     if (0u == USBUART_initVar)
 189:Generated_Source\PSoC4/USBUART.c ****     {
 190:Generated_Source\PSoC4/USBUART.c ****         USBUART_Init();
 191:Generated_Source\PSoC4/USBUART.c ****         USBUART_initVar = 1u;
 192:Generated_Source\PSoC4/USBUART.c ****     }
 193:Generated_Source\PSoC4/USBUART.c **** 
 194:Generated_Source\PSoC4/USBUART.c ****     USBUART_InitComponent(device, mode);
 195:Generated_Source\PSoC4/USBUART.c **** }
 196:Generated_Source\PSoC4/USBUART.c **** 
 197:Generated_Source\PSoC4/USBUART.c **** 
 198:Generated_Source\PSoC4/USBUART.c **** /*******************************************************************************
 199:Generated_Source\PSoC4/USBUART.c **** * Function Name: USBUART_Init
 200:Generated_Source\PSoC4/USBUART.c **** ****************************************************************************//**
 201:Generated_Source\PSoC4/USBUART.c **** *
ARM GAS  C:\Users\essele\AppData\Local\Temp\ccmz8StT.s 			page 5


 202:Generated_Source\PSoC4/USBUART.c **** * This function initializes or restores the component according to the
 203:Generated_Source\PSoC4/USBUART.c **** * customizer Configure dialog settings. It is not necessary to call
 204:Generated_Source\PSoC4/USBUART.c **** * USBUART_Init() because the USBUART_Start() routine calls
 205:Generated_Source\PSoC4/USBUART.c **** * this function and is the preferred method to begin component operation.
 206:Generated_Source\PSoC4/USBUART.c **** *
 207:Generated_Source\PSoC4/USBUART.c **** * \reentrant
 208:Generated_Source\PSoC4/USBUART.c **** *  No.
 209:Generated_Source\PSoC4/USBUART.c **** *
 210:Generated_Source\PSoC4/USBUART.c **** *******************************************************************************/
 211:Generated_Source\PSoC4/USBUART.c **** void USBUART_Init(void) 
 212:Generated_Source\PSoC4/USBUART.c **** {
  28              		.loc 1 212 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32 0000 10B5     		push	{r4, lr}
  33              		.cfi_def_cfa_offset 8
  34              		.cfi_offset 4, -8
  35              		.cfi_offset 14, -4
 213:Generated_Source\PSoC4/USBUART.c **** #if (CY_PSOC4)
 214:Generated_Source\PSoC4/USBUART.c ****     /* Enable clock to USB IP. */
 215:Generated_Source\PSoC4/USBUART.c ****     USBUART_USB_CLK_EN_REG = USBUART_USB_CLK_CSR_CLK_EN;
  36              		.loc 1 215 0
  37 0002 0122     		movs	r2, #1
  38 0004 244B     		ldr	r3, .L3
  39 0006 1A60     		str	r2, [r3]
 216:Generated_Source\PSoC4/USBUART.c **** 
 217:Generated_Source\PSoC4/USBUART.c ****     /* The internal regulator (CR1.REG_ENABLE) is enabled in
 218:Generated_Source\PSoC4/USBUART.c ****     * USBUART_InitComponent() if it is required.
 219:Generated_Source\PSoC4/USBUART.c ****     */
 220:Generated_Source\PSoC4/USBUART.c **** 
 221:Generated_Source\PSoC4/USBUART.c ****     /* Enable USBIO control on drive mode of D+ and D- pins. */
 222:Generated_Source\PSoC4/USBUART.c ****     USBUART_USBIO_CR1_REG &= ~ (uint32) USBUART_USBIO_CR1_IOMODE;
  40              		.loc 1 222 0
  41 0008 244A     		ldr	r2, .L3+4
  42 000a 1368     		ldr	r3, [r2]
  43 000c 2021     		movs	r1, #32
  44 000e 8B43     		bics	r3, r1
  45 0010 1360     		str	r3, [r2]
 223:Generated_Source\PSoC4/USBUART.c **** 
 224:Generated_Source\PSoC4/USBUART.c ****     /* Set number of LF CLK to detect UBS bus reset. */
 225:Generated_Source\PSoC4/USBUART.c ****     USBUART_BUS_RST_CNT_REG = USBUART_DEFUALT_BUS_RST_CNT;
  46              		.loc 1 225 0
  47 0012 0A22     		movs	r2, #10
  48 0014 224B     		ldr	r3, .L3+8
  49 0016 1A60     		str	r2, [r3]
 226:Generated_Source\PSoC4/USBUART.c **** 
 227:Generated_Source\PSoC4/USBUART.c ****     /* Select VBUS detection source and clear PHY isolate. The application level
 228:Generated_Source\PSoC4/USBUART.c ****     * must ensure that VBUS is valid. There is no need to wait 2us before VBUS is valid.
 229:Generated_Source\PSoC4/USBUART.c ****     */
 230:Generated_Source\PSoC4/USBUART.c ****     USBUART_POWER_CTRL_REG = USBUART_DEFAULT_POWER_CTRL_VBUS;
  50              		.loc 1 230 0
  51 0018 224C     		ldr	r4, .L3+12
  52 001a 234B     		ldr	r3, .L3+16
  53 001c 2360     		str	r3, [r4]
 231:Generated_Source\PSoC4/USBUART.c **** 
 232:Generated_Source\PSoC4/USBUART.c ****     /* Enable PHY detector and single-ended and differential receivers. */
ARM GAS  C:\Users\essele\AppData\Local\Temp\ccmz8StT.s 			page 6


 233:Generated_Source\PSoC4/USBUART.c ****     USBUART_POWER_CTRL_REG |= USBUART_DEFAULT_POWER_CTRL_PHY;
  54              		.loc 1 233 0
  55 001e 2368     		ldr	r3, [r4]
  56 0020 224A     		ldr	r2, .L3+20
  57 0022 1343     		orrs	r3, r2
  58 0024 2360     		str	r3, [r4]
 234:Generated_Source\PSoC4/USBUART.c **** 
 235:Generated_Source\PSoC4/USBUART.c ****     /* Suspend clear sequence. */
 236:Generated_Source\PSoC4/USBUART.c ****     USBUART_POWER_CTRL_REG &= (uint32) ~USBUART_POWER_CTRL_SUSPEND;
  59              		.loc 1 236 0
  60 0026 2368     		ldr	r3, [r4]
  61 0028 0422     		movs	r2, #4
  62 002a 9343     		bics	r3, r2
  63 002c 2360     		str	r3, [r4]
 237:Generated_Source\PSoC4/USBUART.c ****     CyDelayUs(USBUART_WAIT_SUSPEND_DEL_DISABLE);
  64              		.loc 1 237 0
  65 002e 0220     		movs	r0, #2
  66 0030 FFF7FEFF 		bl	CyDelayUs
  67              	.LVL0:
 238:Generated_Source\PSoC4/USBUART.c ****     USBUART_POWER_CTRL_REG &= (uint32) ~USBUART_POWER_CTRL_SUSPEND_DEL;
  68              		.loc 1 238 0
  69 0034 2368     		ldr	r3, [r4]
  70 0036 0822     		movs	r2, #8
  71 0038 9343     		bics	r3, r2
  72 003a 2360     		str	r3, [r4]
 239:Generated_Source\PSoC4/USBUART.c **** 
 240:Generated_Source\PSoC4/USBUART.c ****     /* Sets IMO lock options and clear all other bits. */
 241:Generated_Source\PSoC4/USBUART.c ****     USBUART_CR1_REG = USBUART_DEFUALT_CR1;
  73              		.loc 1 241 0
  74 003c FFF7FEFF 		bl	CySysClkImoGetUsbLock
  75              	.LVL1:
  76 0040 0028     		cmp	r0, #0
  77 0042 00D0     		beq	.L2
  78 0044 0220     		movs	r0, #2
  79              	.L2:
  80              		.loc 1 241 0 is_stmt 0 discriminator 4
  81 0046 1A4B     		ldr	r3, .L3+24
  82 0048 1860     		str	r0, [r3]
 242:Generated_Source\PSoC4/USBUART.c **** 
 243:Generated_Source\PSoC4/USBUART.c ****     /* Configure level (hi, lo, med) for each interrupt source. */
 244:Generated_Source\PSoC4/USBUART.c ****     USBUART_INTR_LVL_SEL_REG = USBUART_DEFAULT_INTR_LVL_SEL;
  83              		.loc 1 244 0 is_stmt 1 discriminator 4
  84 004a 1A4A     		ldr	r2, .L3+28
  85 004c 1A4B     		ldr	r3, .L3+32
  86 004e 1A60     		str	r2, [r3]
 245:Generated_Source\PSoC4/USBUART.c **** 
 246:Generated_Source\PSoC4/USBUART.c ****     /* Configure interrupt sources from: SOF, Bus Reset and EP0. */
 247:Generated_Source\PSoC4/USBUART.c ****     USBUART_INTR_SIE_MASK_REG = USBUART_DEFAULT_INTR_SIE_MASK;
  87              		.loc 1 247 0 discriminator 4
  88 0050 0722     		movs	r2, #7
  89 0052 1A4B     		ldr	r3, .L3+36
  90 0054 1A60     		str	r2, [r3]
 248:Generated_Source\PSoC4/USBUART.c **** 
 249:Generated_Source\PSoC4/USBUART.c **** #else
 250:Generated_Source\PSoC4/USBUART.c ****     uint8 enableInterrupts = CyEnterCriticalSection();
 251:Generated_Source\PSoC4/USBUART.c **** 
 252:Generated_Source\PSoC4/USBUART.c **** #if (USBUART_EP_MANAGEMENT_DMA)
ARM GAS  C:\Users\essele\AppData\Local\Temp\ccmz8StT.s 			page 7


 253:Generated_Source\PSoC4/USBUART.c ****     uint16 i;
 254:Generated_Source\PSoC4/USBUART.c **** #endif /* (USBUART_EP_MANAGEMENT_DMA) */
 255:Generated_Source\PSoC4/USBUART.c **** 
 256:Generated_Source\PSoC4/USBUART.c ****     /* Enable USB block. */
 257:Generated_Source\PSoC4/USBUART.c ****     USBUART_PM_ACT_CFG_REG |= USBUART_PM_ACT_EN_FSUSB;
 258:Generated_Source\PSoC4/USBUART.c ****     /* Enable USB block for Standby Power Mode. */
 259:Generated_Source\PSoC4/USBUART.c ****     USBUART_PM_STBY_CFG_REG |= USBUART_PM_STBY_EN_FSUSB;
 260:Generated_Source\PSoC4/USBUART.c **** 
 261:Generated_Source\PSoC4/USBUART.c ****     /* Enable core clock. */
 262:Generated_Source\PSoC4/USBUART.c ****     USBUART_USB_CLK_EN_REG = USBUART_USB_CLK_ENABLE;
 263:Generated_Source\PSoC4/USBUART.c **** 
 264:Generated_Source\PSoC4/USBUART.c ****     USBUART_CR1_REG = USBUART_CR1_ENABLE_LOCK;
 265:Generated_Source\PSoC4/USBUART.c **** 
 266:Generated_Source\PSoC4/USBUART.c ****     /* ENABLING USBIO PADS IN USB MODE FROM I/O MODE. */
 267:Generated_Source\PSoC4/USBUART.c ****     /* Ensure USB transmit enable is low (USB_USBIO_CR0.ten). - Manual Transmission - Disabled. */
 268:Generated_Source\PSoC4/USBUART.c ****     USBUART_USBIO_CR0_REG &= (uint8) ~USBUART_USBIO_CR0_TEN;
 269:Generated_Source\PSoC4/USBUART.c ****     CyDelayUs(USBUART_WAIT_REG_STABILITY_50NS);  /* ~50ns delay. */
 270:Generated_Source\PSoC4/USBUART.c ****     /* Disable USBIO by asserting PM.USB_CR0.fsusbio_pd_n(Inverted.
 271:Generated_Source\PSoC4/USBUART.c ****     *  high. These bits will be set low by the power manager out-of-reset.
 272:Generated_Source\PSoC4/USBUART.c ****     *  Also confirm USBIO pull-up is disabled.
 273:Generated_Source\PSoC4/USBUART.c ****     */
 274:Generated_Source\PSoC4/USBUART.c ****     USBUART_PM_USB_CR0_REG &= (uint8) ~(USBUART_PM_USB_CR0_PD_N |
 275:Generated_Source\PSoC4/USBUART.c ****                                                  USBUART_PM_USB_CR0_PD_PULLUP_N);
 276:Generated_Source\PSoC4/USBUART.c **** 
 277:Generated_Source\PSoC4/USBUART.c ****     /* Select IOMODE to USB mode. */
 278:Generated_Source\PSoC4/USBUART.c ****     USBUART_USBIO_CR1_REG &= (uint8) ~USBUART_USBIO_CR1_IOMODE;
 279:Generated_Source\PSoC4/USBUART.c **** 
 280:Generated_Source\PSoC4/USBUART.c ****     /* Enable USBIO reference by setting PM.USB_CR0.fsusbio_ref_en. */
 281:Generated_Source\PSoC4/USBUART.c ****     USBUART_PM_USB_CR0_REG |= USBUART_PM_USB_CR0_REF_EN;
 282:Generated_Source\PSoC4/USBUART.c ****     /* Reference is available for 1us after regulator is enabled. */
 283:Generated_Source\PSoC4/USBUART.c ****     CyDelayUs(USBUART_WAIT_REG_STABILITY_1US);
 284:Generated_Source\PSoC4/USBUART.c ****     /* OR 40us after power is restored. */
 285:Generated_Source\PSoC4/USBUART.c ****     CyDelayUs(USBUART_WAIT_VREF_RESTORE);
 286:Generated_Source\PSoC4/USBUART.c ****     /* Ensure single-ended disable bits are low (PRT15.INP_DIS[7:6])(input receiver enabled). */
 287:Generated_Source\PSoC4/USBUART.c ****     USBUART_DM_INP_DIS_REG &= (uint8) ~USBUART_DM_MASK;
 288:Generated_Source\PSoC4/USBUART.c ****     USBUART_DP_INP_DIS_REG &= (uint8) ~USBUART_DP_MASK;
 289:Generated_Source\PSoC4/USBUART.c **** 
 290:Generated_Source\PSoC4/USBUART.c ****     /* Enable USBIO. */
 291:Generated_Source\PSoC4/USBUART.c ****     USBUART_PM_USB_CR0_REG |= USBUART_PM_USB_CR0_PD_N;
 292:Generated_Source\PSoC4/USBUART.c ****     CyDelayUs(USBUART_WAIT_PD_PULLUP_N_ENABLE);
 293:Generated_Source\PSoC4/USBUART.c ****     /* Set USBIO pull-up enable. */
 294:Generated_Source\PSoC4/USBUART.c ****     USBUART_PM_USB_CR0_REG |= USBUART_PM_USB_CR0_PD_PULLUP_N;
 295:Generated_Source\PSoC4/USBUART.c **** 
 296:Generated_Source\PSoC4/USBUART.c ****     /* Reset Arbiter Write Address register for endpoint 1. */
 297:Generated_Source\PSoC4/USBUART.c ****     CY_SET_REG8(USBUART_ARB_RW1_WA_PTR,     0u);
 298:Generated_Source\PSoC4/USBUART.c ****     CY_SET_REG8(USBUART_ARB_RW1_WA_MSB_PTR, 0u);
 299:Generated_Source\PSoC4/USBUART.c **** 
 300:Generated_Source\PSoC4/USBUART.c **** #if (USBUART_EP_MANAGEMENT_DMA)
 301:Generated_Source\PSoC4/USBUART.c ****     /* Initialize transfer descriptor. This will be used to detect DMA state - initialized or not. 
 302:Generated_Source\PSoC4/USBUART.c ****     for (i = 0u; i < USBUART_MAX_EP; ++i)
 303:Generated_Source\PSoC4/USBUART.c ****     {
 304:Generated_Source\PSoC4/USBUART.c ****         USBUART_DmaTd[i] = DMA_INVALID_TD;
 305:Generated_Source\PSoC4/USBUART.c **** 
 306:Generated_Source\PSoC4/USBUART.c ****     #if (USBUART_EP_MANAGEMENT_DMA_AUTO && (USBUART_EP_DMA_AUTO_OPT == 0u))
 307:Generated_Source\PSoC4/USBUART.c ****         USBUART_DmaNextTd[i] = DMA_INVALID_TD;
 308:Generated_Source\PSoC4/USBUART.c ****     #endif /* (USBUART_EP_MANAGEMENT_DMA_AUTO && (USBUART_EP_DMA_AUTO_OPT == 0u)) */
 309:Generated_Source\PSoC4/USBUART.c ****     }
ARM GAS  C:\Users\essele\AppData\Local\Temp\ccmz8StT.s 			page 8


 310:Generated_Source\PSoC4/USBUART.c **** #endif /* (USBUART_EP_MANAGEMENT_DMA) */
 311:Generated_Source\PSoC4/USBUART.c **** 
 312:Generated_Source\PSoC4/USBUART.c ****     CyExitCriticalSection(enableInterrupts);
 313:Generated_Source\PSoC4/USBUART.c **** #endif /* (CY_PSOC4) */
 314:Generated_Source\PSoC4/USBUART.c **** 
 315:Generated_Source\PSoC4/USBUART.c ****     /* Configure interrupts from USB block. */
 316:Generated_Source\PSoC4/USBUART.c **** #if (CY_PSOC4)
 317:Generated_Source\PSoC4/USBUART.c ****     /* Configure hi_int: set handler and priority. */
 318:Generated_Source\PSoC4/USBUART.c ****     CyIntSetPriority     (USBUART_INTR_HI_VECT_NUM,  USBUART_INTR_HI_PRIORITY);
  91              		.loc 1 318 0 discriminator 4
  92 0056 0321     		movs	r1, #3
  93 0058 1E20     		movs	r0, #30
  94 005a FFF7FEFF 		bl	CyIntSetPriority
  95              	.LVL2:
 319:Generated_Source\PSoC4/USBUART.c ****     (void) CyIntSetVector(USBUART_INTR_HI_VECT_NUM, &USBUART_INTR_HI_ISR);
  96              		.loc 1 319 0 discriminator 4
  97 005e 1849     		ldr	r1, .L3+40
  98 0060 1E20     		movs	r0, #30
  99 0062 FFF7FEFF 		bl	CyIntSetVector
 100              	.LVL3:
 320:Generated_Source\PSoC4/USBUART.c **** 
 321:Generated_Source\PSoC4/USBUART.c ****     /* Configure lo_int: set handler and priority. */
 322:Generated_Source\PSoC4/USBUART.c ****     CyIntSetPriority     (USBUART_INTR_LO_VECT_NUM,  USBUART_INTR_LO_PRIORITY);
 101              		.loc 1 322 0 discriminator 4
 102 0066 0321     		movs	r1, #3
 103 0068 1F20     		movs	r0, #31
 104 006a FFF7FEFF 		bl	CyIntSetPriority
 105              	.LVL4:
 323:Generated_Source\PSoC4/USBUART.c ****     (void) CyIntSetVector(USBUART_INTR_LO_VECT_NUM, &USBUART_INTR_LO_ISR);
 106              		.loc 1 323 0 discriminator 4
 107 006e 1549     		ldr	r1, .L3+44
 108 0070 1F20     		movs	r0, #31
 109 0072 FFF7FEFF 		bl	CyIntSetVector
 110              	.LVL5:
 324:Generated_Source\PSoC4/USBUART.c **** 
 325:Generated_Source\PSoC4/USBUART.c ****     /* Configure med_int: set handler and priority (routed through DSI). */
 326:Generated_Source\PSoC4/USBUART.c ****     CyIntSetPriority     (USBUART_INTR_MED_VECT_NUM,  USBUART_INTR_MED_PRIORITY);
 111              		.loc 1 326 0 discriminator 4
 112 0076 0321     		movs	r1, #3
 113 0078 0020     		movs	r0, #0
 114 007a FFF7FEFF 		bl	CyIntSetPriority
 115              	.LVL6:
 327:Generated_Source\PSoC4/USBUART.c ****     (void) CyIntSetVector(USBUART_INTR_MED_VECT_NUM, &USBUART_INTR_MED_ISR);
 116              		.loc 1 327 0 discriminator 4
 117 007e 1249     		ldr	r1, .L3+48
 118 0080 0020     		movs	r0, #0
 119 0082 FFF7FEFF 		bl	CyIntSetVector
 120              	.LVL7:
 328:Generated_Source\PSoC4/USBUART.c **** 
 329:Generated_Source\PSoC4/USBUART.c **** #else
 330:Generated_Source\PSoC4/USBUART.c ****     /* Set bus reset interrupt. */
 331:Generated_Source\PSoC4/USBUART.c ****     CyIntSetPriority(USBUART_BUS_RESET_VECT_NUM, USBUART_BUS_RESET_PRIOR);
 332:Generated_Source\PSoC4/USBUART.c ****     (void) CyIntSetVector(USBUART_BUS_RESET_VECT_NUM,   &USBUART_BUS_RESET_ISR);
 333:Generated_Source\PSoC4/USBUART.c **** 
 334:Generated_Source\PSoC4/USBUART.c ****     /* Set Control Endpoint Interrupt. */
 335:Generated_Source\PSoC4/USBUART.c ****     CyIntSetPriority(USBUART_EP_0_VECT_NUM, USBUART_EP_0_PRIOR);
 336:Generated_Source\PSoC4/USBUART.c ****     (void) CyIntSetVector(USBUART_EP_0_VECT_NUM,   &USBUART_EP_0_ISR);
ARM GAS  C:\Users\essele\AppData\Local\Temp\ccmz8StT.s 			page 9


 337:Generated_Source\PSoC4/USBUART.c **** 
 338:Generated_Source\PSoC4/USBUART.c ****     /* Set SOF interrupt. */
 339:Generated_Source\PSoC4/USBUART.c ****     #if (USBUART_SOF_ISR_ACTIVE)
 340:Generated_Source\PSoC4/USBUART.c ****         CyIntSetPriority     (USBUART_SOF_VECT_NUM,  USBUART_SOF_PRIOR);
 341:Generated_Source\PSoC4/USBUART.c ****         (void) CyIntSetVector(USBUART_SOF_VECT_NUM, &USBUART_SOF_ISR);
 342:Generated_Source\PSoC4/USBUART.c ****     #endif /* (USBUART_SOF_ISR_ACTIVE) */
 343:Generated_Source\PSoC4/USBUART.c **** 
 344:Generated_Source\PSoC4/USBUART.c ****     /* Set Data Endpoint 1 Interrupt. */
 345:Generated_Source\PSoC4/USBUART.c ****     #if (USBUART_EP1_ISR_ACTIVE)
 346:Generated_Source\PSoC4/USBUART.c ****         CyIntSetPriority     (USBUART_EP_1_VECT_NUM,  USBUART_EP_1_PRIOR);
 347:Generated_Source\PSoC4/USBUART.c ****         (void) CyIntSetVector(USBUART_EP_1_VECT_NUM,  &USBUART_EP_1_ISR);
 348:Generated_Source\PSoC4/USBUART.c ****     #endif /* (USBUART_EP1_ISR_ACTIVE) */
 349:Generated_Source\PSoC4/USBUART.c **** 
 350:Generated_Source\PSoC4/USBUART.c ****     /* Set Data Endpoint 2 Interrupt. */
 351:Generated_Source\PSoC4/USBUART.c ****     #if (USBUART_EP2_ISR_ACTIVE)
 352:Generated_Source\PSoC4/USBUART.c ****         CyIntSetPriority     (USBUART_EP_2_VECT_NUM,  USBUART_EP_2_PRIOR);
 353:Generated_Source\PSoC4/USBUART.c ****         (void) CyIntSetVector(USBUART_EP_2_VECT_NUM, &USBUART_EP_2_ISR);
 354:Generated_Source\PSoC4/USBUART.c ****     #endif /* (USBUART_EP2_ISR_ACTIVE) */
 355:Generated_Source\PSoC4/USBUART.c **** 
 356:Generated_Source\PSoC4/USBUART.c ****     /* Set Data Endpoint 3 Interrupt. */
 357:Generated_Source\PSoC4/USBUART.c ****     #if (USBUART_EP3_ISR_ACTIVE)
 358:Generated_Source\PSoC4/USBUART.c ****         CyIntSetPriority     (USBUART_EP_3_VECT_NUM,  USBUART_EP_3_PRIOR);
 359:Generated_Source\PSoC4/USBUART.c ****         (void) CyIntSetVector(USBUART_EP_3_VECT_NUM, &USBUART_EP_3_ISR);
 360:Generated_Source\PSoC4/USBUART.c ****     #endif /* (USBUART_EP3_ISR_ACTIVE) */
 361:Generated_Source\PSoC4/USBUART.c **** 
 362:Generated_Source\PSoC4/USBUART.c ****     /* Set Data Endpoint 4 Interrupt. */
 363:Generated_Source\PSoC4/USBUART.c ****     #if (USBUART_EP4_ISR_ACTIVE)
 364:Generated_Source\PSoC4/USBUART.c ****         CyIntSetPriority     (USBUART_EP_4_VECT_NUM,  USBUART_EP_4_PRIOR);
 365:Generated_Source\PSoC4/USBUART.c ****         (void) CyIntSetVector(USBUART_EP_4_VECT_NUM, &USBUART_EP_4_ISR);
 366:Generated_Source\PSoC4/USBUART.c ****     #endif /* (USBUART_EP4_ISR_ACTIVE) */
 367:Generated_Source\PSoC4/USBUART.c **** 
 368:Generated_Source\PSoC4/USBUART.c ****     /* Set Data Endpoint 5 Interrupt. */
 369:Generated_Source\PSoC4/USBUART.c ****     #if (USBUART_EP5_ISR_ACTIVE)
 370:Generated_Source\PSoC4/USBUART.c ****         CyIntSetPriority     (USBUART_EP_5_VECT_NUM,  USBUART_EP_5_PRIOR);
 371:Generated_Source\PSoC4/USBUART.c ****         (void) CyIntSetVector(USBUART_EP_5_VECT_NUM, &USBUART_EP_5_ISR);
 372:Generated_Source\PSoC4/USBUART.c ****     #endif /* (USBUART_EP5_ISR_ACTIVE) */
 373:Generated_Source\PSoC4/USBUART.c **** 
 374:Generated_Source\PSoC4/USBUART.c ****     /* Set Data Endpoint 6 Interrupt. */
 375:Generated_Source\PSoC4/USBUART.c ****     #if (USBUART_EP6_ISR_ACTIVE)
 376:Generated_Source\PSoC4/USBUART.c ****         CyIntSetPriority     (USBUART_EP_6_VECT_NUM,  USBUART_EP_6_PRIOR);
 377:Generated_Source\PSoC4/USBUART.c ****         (void) CyIntSetVector(USBUART_EP_6_VECT_NUM, &USBUART_EP_6_ISR);
 378:Generated_Source\PSoC4/USBUART.c ****     #endif /* (USBUART_EP6_ISR_ACTIVE) */
 379:Generated_Source\PSoC4/USBUART.c **** 
 380:Generated_Source\PSoC4/USBUART.c ****      /* Set Data Endpoint 7 Interrupt. */
 381:Generated_Source\PSoC4/USBUART.c ****     #if (USBUART_EP7_ISR_ACTIVE)
 382:Generated_Source\PSoC4/USBUART.c ****         CyIntSetPriority     (USBUART_EP_7_VECT_NUM,  USBUART_EP_7_PRIOR);
 383:Generated_Source\PSoC4/USBUART.c ****         (void) CyIntSetVector(USBUART_EP_7_VECT_NUM, &USBUART_EP_7_ISR);
 384:Generated_Source\PSoC4/USBUART.c ****     #endif /* (USBUART_EP7_ISR_ACTIVE) */
 385:Generated_Source\PSoC4/USBUART.c **** 
 386:Generated_Source\PSoC4/USBUART.c ****     /* Set Data Endpoint 8 Interrupt. */
 387:Generated_Source\PSoC4/USBUART.c ****     #if (USBUART_EP8_ISR_ACTIVE)
 388:Generated_Source\PSoC4/USBUART.c ****         CyIntSetPriority     (USBUART_EP_8_VECT_NUM,  USBUART_EP_8_PRIOR);
 389:Generated_Source\PSoC4/USBUART.c ****         (void) CyIntSetVector(USBUART_EP_8_VECT_NUM, &USBUART_EP_8_ISR);
 390:Generated_Source\PSoC4/USBUART.c ****     #endif /* (USBUART_EP8_ISR_ACTIVE) */
 391:Generated_Source\PSoC4/USBUART.c **** 
 392:Generated_Source\PSoC4/USBUART.c ****     /* Set ARB Interrupt. */
 393:Generated_Source\PSoC4/USBUART.c ****     #if (USBUART_EP_MANAGEMENT_DMA && USBUART_ARB_ISR_ACTIVE)
ARM GAS  C:\Users\essele\AppData\Local\Temp\ccmz8StT.s 			page 10


 394:Generated_Source\PSoC4/USBUART.c ****         CyIntSetPriority     (USBUART_ARB_VECT_NUM,  USBUART_ARB_PRIOR);
 395:Generated_Source\PSoC4/USBUART.c ****         (void) CyIntSetVector(USBUART_ARB_VECT_NUM, &USBUART_ARB_ISR);
 396:Generated_Source\PSoC4/USBUART.c ****     #endif /* (USBUART_EP_MANAGEMENT_DMA && USBUART_ARB_ISR_ACTIVE) */
 397:Generated_Source\PSoC4/USBUART.c **** #endif /* (CY_PSOC4) */
 398:Generated_Source\PSoC4/USBUART.c **** 
 399:Generated_Source\PSoC4/USBUART.c ****     /* Common: Configure GPIO interrupt for wakeup. */
 400:Generated_Source\PSoC4/USBUART.c **** #if (USBUART_DP_ISR_ACTIVE)
 401:Generated_Source\PSoC4/USBUART.c ****     CyIntSetPriority     (USBUART_DP_INTC_VECT_NUM,  USBUART_DP_INTC_PRIORITY);
 121              		.loc 1 401 0 discriminator 4
 122 0086 0321     		movs	r1, #3
 123 0088 0520     		movs	r0, #5
 124 008a FFF7FEFF 		bl	CyIntSetPriority
 125              	.LVL8:
 402:Generated_Source\PSoC4/USBUART.c ****     (void) CyIntSetVector(USBUART_DP_INTC_VECT_NUM, &USBUART_DP_ISR);
 126              		.loc 1 402 0 discriminator 4
 127 008e 0F49     		ldr	r1, .L3+52
 128 0090 0520     		movs	r0, #5
 129 0092 FFF7FEFF 		bl	CyIntSetVector
 130              	.LVL9:
 403:Generated_Source\PSoC4/USBUART.c **** #endif /* (USBUART_DP_ISR_ACTIVE) */
 404:Generated_Source\PSoC4/USBUART.c **** 
 405:Generated_Source\PSoC4/USBUART.c **** #if (USBUART_EP_MANAGEMENT_DMA && CY_PSOC4)
 406:Generated_Source\PSoC4/USBUART.c ****     /* Initialize DMA channels. */
 407:Generated_Source\PSoC4/USBUART.c ****     USBUART_InitEpDma();
 408:Generated_Source\PSoC4/USBUART.c **** #endif /* (USBUART_EP_MANAGEMENT_DMA && CY_PSOC4) */
 409:Generated_Source\PSoC4/USBUART.c **** }
 131              		.loc 1 409 0 discriminator 4
 132              		@ sp needed
 133 0096 10BD     		pop	{r4, pc}
 134              	.L4:
 135              		.align	2
 136              	.L3:
 137 0098 74022C40 		.word	1076626036
 138 009c 48002C40 		.word	1076625480
 139 00a0 30032C40 		.word	1076626224
 140 00a4 00202C40 		.word	1076633600
 141 00a8 03000004 		.word	67108867
 142 00ac 0C0000B8 		.word	-1207959540
 143 00b0 24002C40 		.word	1076625444
 144 00b4 1A001500 		.word	1376282
 145 00b8 30202C40 		.word	1076633648
 146 00bc 28202C40 		.word	1076633640
 147 00c0 00000000 		.word	USBUART_INTR_HI_ISR
 148 00c4 00000000 		.word	USBUART_INTR_LO_ISR
 149 00c8 00000000 		.word	USBUART_INTR_MED_ISR
 150 00cc 00000000 		.word	USBUART_DP_ISR
 151              		.cfi_endproc
 152              	.LFE2:
 153              		.size	USBUART_Init, .-USBUART_Init
 154              		.section	.text.USBUART_InitComponent,"ax",%progbits
 155              		.align	2
 156              		.global	USBUART_InitComponent
 157              		.code	16
 158              		.thumb_func
 159              		.type	USBUART_InitComponent, %function
 160              	USBUART_InitComponent:
 161              	.LFB3:
ARM GAS  C:\Users\essele\AppData\Local\Temp\ccmz8StT.s 			page 11


 410:Generated_Source\PSoC4/USBUART.c **** 
 411:Generated_Source\PSoC4/USBUART.c **** 
 412:Generated_Source\PSoC4/USBUART.c **** /*******************************************************************************
 413:Generated_Source\PSoC4/USBUART.c **** * Function Name: USBUART_InitComponent
 414:Generated_Source\PSoC4/USBUART.c **** ****************************************************************************//**
 415:Generated_Source\PSoC4/USBUART.c **** *
 416:Generated_Source\PSoC4/USBUART.c **** *   This function initializes the component’s global variables and initiates
 417:Generated_Source\PSoC4/USBUART.c **** *   communication with the host by pull-up D+ line.
 418:Generated_Source\PSoC4/USBUART.c **** *
 419:Generated_Source\PSoC4/USBUART.c **** * \param device:
 420:Generated_Source\PSoC4/USBUART.c **** *   Contains the device number of the desired device descriptor. The device
 421:Generated_Source\PSoC4/USBUART.c **** *   number can be found in the Device Descriptor Tab of "Configure" dialog,
 422:Generated_Source\PSoC4/USBUART.c **** *   under the settings of desired Device Descriptor, in the *Device Number*
 423:Generated_Source\PSoC4/USBUART.c **** *   field.
 424:Generated_Source\PSoC4/USBUART.c **** *  \param mode:
 425:Generated_Source\PSoC4/USBUART.c **** *   The operating voltage. This determines whether the voltage regulator
 426:Generated_Source\PSoC4/USBUART.c **** *   is enabled for 5V operation or if pass through mode is used for 3.3V
 427:Generated_Source\PSoC4/USBUART.c **** *   operation. Symbolic names and their associated values are given in the
 428:Generated_Source\PSoC4/USBUART.c **** *   following list.
 429:Generated_Source\PSoC4/USBUART.c **** *
 430:Generated_Source\PSoC4/USBUART.c **** *       *USBUART_3V_OPERATION* - Disable voltage regulator and pass-
 431:Generated_Source\PSoC4/USBUART.c **** *                                      through Vcc for pull-up
 432:Generated_Source\PSoC4/USBUART.c **** *
 433:Generated_Source\PSoC4/USBUART.c **** *       *USBUART_5V_OPERATION* - Enable voltage regulator and use
 434:Generated_Source\PSoC4/USBUART.c **** *                                      regulator for pull-up
 435:Generated_Source\PSoC4/USBUART.c **** *
 436:Generated_Source\PSoC4/USBUART.c **** *       *USBUART_DWR_POWER_OPERATION* - Enable or disable the voltage
 437:Generated_Source\PSoC4/USBUART.c **** *                                      regulator depending on the power supply
 438:Generated_Source\PSoC4/USBUART.c **** *                                      voltage configuration in the DWR tab.
 439:Generated_Source\PSoC4/USBUART.c **** *                                      For PSoC 3/5LP devices, the VDDD supply
 440:Generated_Source\PSoC4/USBUART.c **** *                                      voltage is considered and for PSoC 4A-L,
 441:Generated_Source\PSoC4/USBUART.c **** *                                      the VBUS supply voltage is considered.
 442:Generated_Source\PSoC4/USBUART.c **** *
 443:Generated_Source\PSoC4/USBUART.c **** * \globalvars
 444:Generated_Source\PSoC4/USBUART.c **** *   \ref USBUART_device
 445:Generated_Source\PSoC4/USBUART.c **** *   \ref USBUART_transferState
 446:Generated_Source\PSoC4/USBUART.c **** *   \ref USBUART_configuration
 447:Generated_Source\PSoC4/USBUART.c **** *   \ref USBUART_deviceStatus
 448:Generated_Source\PSoC4/USBUART.c **** *
 449:Generated_Source\PSoC4/USBUART.c **** *   \ref USBUART_deviceAddress - Contains the current device address. This
 450:Generated_Source\PSoC4/USBUART.c **** *       variable is initialized to zero in this API. The Host starts to communicate
 451:Generated_Source\PSoC4/USBUART.c **** *      to the device with address 0 and then sets it to a whatever value using a
 452:Generated_Source\PSoC4/USBUART.c **** *      SET_ADDRESS request.
 453:Generated_Source\PSoC4/USBUART.c **** *
 454:Generated_Source\PSoC4/USBUART.c **** *   \ref USBUART_lastPacketSize - Initialized to 0;
 455:Generated_Source\PSoC4/USBUART.c **** *
 456:Generated_Source\PSoC4/USBUART.c **** * \reentrant
 457:Generated_Source\PSoC4/USBUART.c **** *  No.
 458:Generated_Source\PSoC4/USBUART.c **** *
 459:Generated_Source\PSoC4/USBUART.c **** *******************************************************************************/
 460:Generated_Source\PSoC4/USBUART.c **** void USBUART_InitComponent(uint8 device, uint8 mode) 
 461:Generated_Source\PSoC4/USBUART.c **** {
 162              		.loc 1 461 0
 163              		.cfi_startproc
 164              		@ args = 0, pretend = 0, frame = 0
 165              		@ frame_needed = 0, uses_anonymous_args = 0
 166              	.LVL10:
ARM GAS  C:\Users\essele\AppData\Local\Temp\ccmz8StT.s 			page 12


 167 0000 10B5     		push	{r4, lr}
 168              		.cfi_def_cfa_offset 8
 169              		.cfi_offset 4, -8
 170              		.cfi_offset 14, -4
 171 0002 0C00     		movs	r4, r1
 462:Generated_Source\PSoC4/USBUART.c ****     /* Initialize _hidProtocol variable to comply with
 463:Generated_Source\PSoC4/USBUART.c ****     *  HID 7.2.6 Set_Protocol Request:
 464:Generated_Source\PSoC4/USBUART.c ****     *  "When initialized, all devices default to report protocol."
 465:Generated_Source\PSoC4/USBUART.c ****     */
 466:Generated_Source\PSoC4/USBUART.c **** #if defined(USBUART_ENABLE_HID_CLASS)
 467:Generated_Source\PSoC4/USBUART.c ****     uint8 i;
 468:Generated_Source\PSoC4/USBUART.c **** 
 469:Generated_Source\PSoC4/USBUART.c ****     for (i = 0u; i < USBUART_MAX_INTERFACES_NUMBER; i++)
 470:Generated_Source\PSoC4/USBUART.c ****     {
 471:Generated_Source\PSoC4/USBUART.c ****         USBUART_hidProtocol[i] = USBUART_PROTOCOL_REPORT;
 472:Generated_Source\PSoC4/USBUART.c ****     }
 473:Generated_Source\PSoC4/USBUART.c **** #endif /* USBUART_ENABLE_HID_CLASS */
 474:Generated_Source\PSoC4/USBUART.c **** 
 475:Generated_Source\PSoC4/USBUART.c ****     /* Store device number to access descriptor. */
 476:Generated_Source\PSoC4/USBUART.c ****     USBUART_device = device;
 172              		.loc 1 476 0
 173 0004 204B     		ldr	r3, .L11
 174 0006 1870     		strb	r0, [r3]
 477:Generated_Source\PSoC4/USBUART.c **** 
 478:Generated_Source\PSoC4/USBUART.c ****     /* Reset component internal variables. */
 479:Generated_Source\PSoC4/USBUART.c ****     USBUART_transferState   = USBUART_TRANS_STATE_IDLE;
 175              		.loc 1 479 0
 176 0008 0023     		movs	r3, #0
 177 000a 204A     		ldr	r2, .L11+4
 178 000c 1370     		strb	r3, [r2]
 480:Generated_Source\PSoC4/USBUART.c ****     USBUART_configurationChanged = 0u;
 179              		.loc 1 480 0
 180 000e 204A     		ldr	r2, .L11+8
 181 0010 1370     		strb	r3, [r2]
 481:Generated_Source\PSoC4/USBUART.c ****     USBUART_configuration   = 0u;
 182              		.loc 1 481 0
 183 0012 204A     		ldr	r2, .L11+12
 184 0014 1370     		strb	r3, [r2]
 482:Generated_Source\PSoC4/USBUART.c ****     USBUART_interfaceNumber = 0u;
 185              		.loc 1 482 0
 186 0016 204A     		ldr	r2, .L11+16
 187 0018 1370     		strb	r3, [r2]
 483:Generated_Source\PSoC4/USBUART.c ****     USBUART_deviceAddress   = 0u;
 188              		.loc 1 483 0
 189 001a 204A     		ldr	r2, .L11+20
 190 001c 1370     		strb	r3, [r2]
 484:Generated_Source\PSoC4/USBUART.c ****     USBUART_deviceStatus    = 0u;
 191              		.loc 1 484 0
 192 001e 204A     		ldr	r2, .L11+24
 193 0020 1370     		strb	r3, [r2]
 485:Generated_Source\PSoC4/USBUART.c ****     USBUART_lastPacketSize  = 0u;
 194              		.loc 1 485 0
 195 0022 204A     		ldr	r2, .L11+28
 196 0024 1370     		strb	r3, [r2]
 486:Generated_Source\PSoC4/USBUART.c **** 
 487:Generated_Source\PSoC4/USBUART.c ****     /* Enable component interrupts. */
 488:Generated_Source\PSoC4/USBUART.c **** #if (CY_PSOC4)
ARM GAS  C:\Users\essele\AppData\Local\Temp\ccmz8StT.s 			page 13


 489:Generated_Source\PSoC4/USBUART.c ****     CyIntEnable(USBUART_INTR_HI_VECT_NUM);
 197              		.loc 1 489 0
 198 0026 1E20     		movs	r0, #30
 199              	.LVL11:
 200 0028 FFF7FEFF 		bl	CyIntEnable
 201              	.LVL12:
 490:Generated_Source\PSoC4/USBUART.c ****     CyIntEnable(USBUART_INTR_MED_VECT_NUM);
 202              		.loc 1 490 0
 203 002c 0020     		movs	r0, #0
 204 002e FFF7FEFF 		bl	CyIntEnable
 205              	.LVL13:
 491:Generated_Source\PSoC4/USBUART.c ****     CyIntEnable(USBUART_INTR_LO_VECT_NUM);
 206              		.loc 1 491 0
 207 0032 1F20     		movs	r0, #31
 208 0034 FFF7FEFF 		bl	CyIntEnable
 209              	.LVL14:
 492:Generated_Source\PSoC4/USBUART.c **** #else
 493:Generated_Source\PSoC4/USBUART.c ****     CyIntEnable(USBUART_BUS_RESET_VECT_NUM);
 494:Generated_Source\PSoC4/USBUART.c ****     CyIntEnable(USBUART_EP_0_VECT_NUM);
 495:Generated_Source\PSoC4/USBUART.c **** 
 496:Generated_Source\PSoC4/USBUART.c ****     #if (USBUART_SOF_ISR_ACTIVE)
 497:Generated_Source\PSoC4/USBUART.c ****         CyIntEnable(USBUART_SOF_VECT_NUM);
 498:Generated_Source\PSoC4/USBUART.c ****     #endif /* (USBUART_SOF_ISR_ACTIVE) */
 499:Generated_Source\PSoC4/USBUART.c **** 
 500:Generated_Source\PSoC4/USBUART.c ****     #if (USBUART_EP1_ISR_ACTIVE)
 501:Generated_Source\PSoC4/USBUART.c ****         CyIntEnable(USBUART_EP_1_VECT_NUM);
 502:Generated_Source\PSoC4/USBUART.c ****     #endif /* (USBUART_EP1_ISR_ACTIVE) */
 503:Generated_Source\PSoC4/USBUART.c **** 
 504:Generated_Source\PSoC4/USBUART.c ****     #if (USBUART_EP2_ISR_ACTIVE)
 505:Generated_Source\PSoC4/USBUART.c ****         CyIntEnable(USBUART_EP_2_VECT_NUM);
 506:Generated_Source\PSoC4/USBUART.c ****     #endif /* (USBUART_EP5_ISR_ACTIVE) */
 507:Generated_Source\PSoC4/USBUART.c **** 
 508:Generated_Source\PSoC4/USBUART.c ****     #if (USBUART_EP3_ISR_ACTIVE)
 509:Generated_Source\PSoC4/USBUART.c ****         CyIntEnable(USBUART_EP_3_VECT_NUM);
 510:Generated_Source\PSoC4/USBUART.c ****     #endif /* (USBUART_EP5_ISR_ACTIVE) */
 511:Generated_Source\PSoC4/USBUART.c **** 
 512:Generated_Source\PSoC4/USBUART.c ****     #if (USBUART_EP4_ISR_ACTIVE)
 513:Generated_Source\PSoC4/USBUART.c ****         CyIntEnable(USBUART_EP_4_VECT_NUM);
 514:Generated_Source\PSoC4/USBUART.c ****     #endif /* (USBUART_EP5_ISR_ACTIVE) */
 515:Generated_Source\PSoC4/USBUART.c **** 
 516:Generated_Source\PSoC4/USBUART.c ****     #if (USBUART_EP5_ISR_ACTIVE)
 517:Generated_Source\PSoC4/USBUART.c ****         CyIntEnable(USBUART_EP_5_VECT_NUM);
 518:Generated_Source\PSoC4/USBUART.c ****     #endif /* (USBUART_EP5_ISR_ACTIVE) */
 519:Generated_Source\PSoC4/USBUART.c **** 
 520:Generated_Source\PSoC4/USBUART.c ****     #if (USBUART_EP6_ISR_ACTIVE)
 521:Generated_Source\PSoC4/USBUART.c ****         CyIntEnable(USBUART_EP_6_VECT_NUM);
 522:Generated_Source\PSoC4/USBUART.c ****     #endif /* USBUART_EP6_ISR_REMOVE */
 523:Generated_Source\PSoC4/USBUART.c **** 
 524:Generated_Source\PSoC4/USBUART.c ****     #if (USBUART_EP7_ISR_ACTIVE)
 525:Generated_Source\PSoC4/USBUART.c ****         CyIntEnable(USBUART_EP_7_VECT_NUM);
 526:Generated_Source\PSoC4/USBUART.c ****     #endif /* (USBUART_EP7_ISR_ACTIVE) */
 527:Generated_Source\PSoC4/USBUART.c **** 
 528:Generated_Source\PSoC4/USBUART.c ****     #if (USBUART_EP8_ISR_ACTIVE)
 529:Generated_Source\PSoC4/USBUART.c ****         CyIntEnable(USBUART_EP_8_VECT_NUM);
 530:Generated_Source\PSoC4/USBUART.c ****     #endif /* (USBUART_EP8_ISR_ACTIVE) */
 531:Generated_Source\PSoC4/USBUART.c **** #endif /* (CY_PSOC4) */
 532:Generated_Source\PSoC4/USBUART.c **** 
ARM GAS  C:\Users\essele\AppData\Local\Temp\ccmz8StT.s 			page 14


 533:Generated_Source\PSoC4/USBUART.c **** #if (USBUART_EP_MANAGEMENT_DMA && USBUART_ARB_ISR_ACTIVE)
 534:Generated_Source\PSoC4/USBUART.c ****     /* Enable ARB EP interrupt sources. */
 535:Generated_Source\PSoC4/USBUART.c ****     USBUART_ARB_INT_EN_REG = USBUART_DEFAULT_ARB_INT_EN;
 536:Generated_Source\PSoC4/USBUART.c **** 
 537:Generated_Source\PSoC4/USBUART.c ****     #if (CY_PSOC3 || CY_PSOC5)
 538:Generated_Source\PSoC4/USBUART.c ****         CyIntEnable(USBUART_ARB_VECT_NUM);
 539:Generated_Source\PSoC4/USBUART.c ****     #endif /* (CY_PSOC3 || CY_PSOC5) */
 540:Generated_Source\PSoC4/USBUART.c **** #endif   /* (USBUART_EP_MANAGEMENT_DMA && USBUART_ARB_ISR_ACTIVE) */
 541:Generated_Source\PSoC4/USBUART.c **** 
 542:Generated_Source\PSoC4/USBUART.c **** /* Arbiter configuration for DMA transfers. */
 543:Generated_Source\PSoC4/USBUART.c **** #if (USBUART_EP_MANAGEMENT_DMA)
 544:Generated_Source\PSoC4/USBUART.c ****     /* Configure Arbiter for Manual or Auto DMA operation and clear configuration completion. */
 545:Generated_Source\PSoC4/USBUART.c ****     USBUART_ARB_CFG_REG = USBUART_DEFAULT_ARB_CFG;
 546:Generated_Source\PSoC4/USBUART.c **** 
 547:Generated_Source\PSoC4/USBUART.c ****     #if (CY_PSOC4)
 548:Generated_Source\PSoC4/USBUART.c ****         /* Enable DMA operation. */
 549:Generated_Source\PSoC4/USBUART.c ****         CyDmaEnable();
 550:Generated_Source\PSoC4/USBUART.c **** 
 551:Generated_Source\PSoC4/USBUART.c ****         #if (USBUART_EP_MANAGEMENT_DMA_AUTO)
 552:Generated_Source\PSoC4/USBUART.c ****             /* Change DMA priority to be highest. */
 553:Generated_Source\PSoC4/USBUART.c ****              CyIntSetPriority(CYDMA_INTR_NUMBER, USBUART_DMA_AUTO_INTR_PRIO);
 554:Generated_Source\PSoC4/USBUART.c ****         #endif /* (USBUART_EP_MANAGEMENT_DMA_AUTO) */
 555:Generated_Source\PSoC4/USBUART.c ****     #endif /* (CY_PSOC4) */
 556:Generated_Source\PSoC4/USBUART.c **** 
 557:Generated_Source\PSoC4/USBUART.c ****     #if (USBUART_EP_MANAGEMENT_DMA_AUTO)
 558:Generated_Source\PSoC4/USBUART.c ****         #if (CY_PSOC4)
 559:Generated_Source\PSoC4/USBUART.c ****             /* Enable DMA interrupt to handle DMA management. */
 560:Generated_Source\PSoC4/USBUART.c ****             CyIntEnable(CYDMA_INTR_NUMBER);
 561:Generated_Source\PSoC4/USBUART.c ****         #else
 562:Generated_Source\PSoC4/USBUART.c ****             #if (USBUART_EP_DMA_AUTO_OPT == 0u)
 563:Generated_Source\PSoC4/USBUART.c ****                 /* Initialize interrupts which handle verification of successful DMA transaction. *
 564:Generated_Source\PSoC4/USBUART.c ****                 USBUART_EP_DMA_Done_isr_StartEx(&USBUART_EP_DMA_DONE_ISR);
 565:Generated_Source\PSoC4/USBUART.c ****                 USBUART_EP17_DMA_Done_SR_InterruptEnable();
 566:Generated_Source\PSoC4/USBUART.c ****                 USBUART_EP8_DMA_Done_SR_InterruptEnable();
 567:Generated_Source\PSoC4/USBUART.c ****             #endif /* (USBUART_EP_DMA_AUTO_OPT == 0u) */
 568:Generated_Source\PSoC4/USBUART.c ****         #endif /* (CY_PSOC4) */
 569:Generated_Source\PSoC4/USBUART.c ****     #endif /* (USBUART_EP_MANAGEMENT_DMA_AUTO) */
 570:Generated_Source\PSoC4/USBUART.c **** #endif /* (USBUART_EP_MANAGEMENT_DMA) */
 571:Generated_Source\PSoC4/USBUART.c **** 
 572:Generated_Source\PSoC4/USBUART.c ****     /* Enable USB regulator depends on operation voltage. IMO Locking is enabled in Init(). */
 573:Generated_Source\PSoC4/USBUART.c ****     switch(mode)
 210              		.loc 1 573 0
 211 0038 002C     		cmp	r4, #0
 212 003a 02D0     		beq	.L7
 213 003c 012C     		cmp	r4, #1
 214 003e 06D0     		beq	.L8
 215 0040 0BE0     		b	.L10
 216              	.L7:
 574:Generated_Source\PSoC4/USBUART.c ****     {
 575:Generated_Source\PSoC4/USBUART.c ****     case USBUART_3V_OPERATION:
 576:Generated_Source\PSoC4/USBUART.c ****         /* Disable regulator for 3V operation. */
 577:Generated_Source\PSoC4/USBUART.c ****         USBUART_CR1_REG &= (uint32) ~USBUART_CR1_REG_ENABLE;
 217              		.loc 1 577 0
 218 0042 194A     		ldr	r2, .L11+32
 219 0044 1368     		ldr	r3, [r2]
 220 0046 0121     		movs	r1, #1
 221 0048 8B43     		bics	r3, r1
ARM GAS  C:\Users\essele\AppData\Local\Temp\ccmz8StT.s 			page 15


 222 004a 1360     		str	r3, [r2]
 578:Generated_Source\PSoC4/USBUART.c ****         break;
 223              		.loc 1 578 0
 224 004c 0AE0     		b	.L9
 225              	.L8:
 579:Generated_Source\PSoC4/USBUART.c **** 
 580:Generated_Source\PSoC4/USBUART.c ****     case USBUART_5V_OPERATION:
 581:Generated_Source\PSoC4/USBUART.c ****         /* Enable regulator for 5V operation. */
 582:Generated_Source\PSoC4/USBUART.c ****         USBUART_CR1_REG |= (uint32)  USBUART_CR1_REG_ENABLE;
 226              		.loc 1 582 0
 227 004e 164A     		ldr	r2, .L11+32
 228 0050 1168     		ldr	r1, [r2]
 229 0052 0123     		movs	r3, #1
 230 0054 0B43     		orrs	r3, r1
 231 0056 1360     		str	r3, [r2]
 583:Generated_Source\PSoC4/USBUART.c ****         break;
 232              		.loc 1 583 0
 233 0058 04E0     		b	.L9
 234              	.L10:
 584:Generated_Source\PSoC4/USBUART.c **** 
 585:Generated_Source\PSoC4/USBUART.c ****     default: /* Check DWR settings of USB power supply. */
 586:Generated_Source\PSoC4/USBUART.c ****     #if (USBUART_VDDD_MV < USBUART_3500MV)
 587:Generated_Source\PSoC4/USBUART.c ****         /* Disable regulator for 3V operation. */
 588:Generated_Source\PSoC4/USBUART.c ****         USBUART_CR1_REG &= (uint32) ~USBUART_CR1_REG_ENABLE;
 589:Generated_Source\PSoC4/USBUART.c ****     #else
 590:Generated_Source\PSoC4/USBUART.c ****         /* Enable regulator for 5V operation. */
 591:Generated_Source\PSoC4/USBUART.c ****         USBUART_CR1_REG |= (uint32)  USBUART_CR1_REG_ENABLE;
 235              		.loc 1 591 0
 236 005a 134A     		ldr	r2, .L11+32
 237 005c 1168     		ldr	r1, [r2]
 238 005e 0123     		movs	r3, #1
 239 0060 0B43     		orrs	r3, r1
 240 0062 1360     		str	r3, [r2]
 241              	.L9:
 592:Generated_Source\PSoC4/USBUART.c ****     #endif /* (USBUART_VDDD_MV < USBUART_3500MV) */
 593:Generated_Source\PSoC4/USBUART.c ****         break;
 594:Generated_Source\PSoC4/USBUART.c ****     }
 595:Generated_Source\PSoC4/USBUART.c **** 
 596:Generated_Source\PSoC4/USBUART.c **** #if (CY_PSOC4)
 597:Generated_Source\PSoC4/USBUART.c ****     /* Clear bus activity. */
 598:Generated_Source\PSoC4/USBUART.c ****     USBUART_CR1_REG &= (uint32) ~USBUART_CR1_BUS_ACTIVITY;
 242              		.loc 1 598 0
 243 0064 1049     		ldr	r1, .L11+32
 244 0066 0B68     		ldr	r3, [r1]
 245 0068 0422     		movs	r2, #4
 246 006a 9343     		bics	r3, r2
 247 006c 0B60     		str	r3, [r1]
 599:Generated_Source\PSoC4/USBUART.c **** 
 600:Generated_Source\PSoC4/USBUART.c ****     /* Clear EP0 count register. */
 601:Generated_Source\PSoC4/USBUART.c ****     USBUART_EP0_CNT_REG = USBUART_CLEAR_REG;
 248              		.loc 1 601 0
 249 006e 0021     		movs	r1, #0
 250 0070 0E4B     		ldr	r3, .L11+36
 251 0072 1960     		str	r1, [r3]
 602:Generated_Source\PSoC4/USBUART.c **** 
 603:Generated_Source\PSoC4/USBUART.c ****     /* Set EP0.CR: ACK Setup, NAK IN/OUT. */
 604:Generated_Source\PSoC4/USBUART.c ****     USBUART_EP0_CR_REG = USBUART_MODE_NAK_IN_OUT;
ARM GAS  C:\Users\essele\AppData\Local\Temp\ccmz8StT.s 			page 16


 252              		.loc 1 604 0
 253 0074 0131     		adds	r1, r1, #1
 254 0076 0E4B     		ldr	r3, .L11+40
 255 0078 1960     		str	r1, [r3]
 605:Generated_Source\PSoC4/USBUART.c **** 
 606:Generated_Source\PSoC4/USBUART.c ****     #if (USBUART_LPM_ACTIVE)
 607:Generated_Source\PSoC4/USBUART.c ****         if (NULL != USBUART_GetBOSPtr())
 608:Generated_Source\PSoC4/USBUART.c ****         {
 609:Generated_Source\PSoC4/USBUART.c ****             /* Enable LPM and acknowledge LPM packets for active device.
 610:Generated_Source\PSoC4/USBUART.c ****             * Reset NYET_EN and SUB_RESP bits in the LPM_CTRL register.
 611:Generated_Source\PSoC4/USBUART.c ****             */
 612:Generated_Source\PSoC4/USBUART.c ****             USBUART_LPM_CTRL_REG = (USBUART_LPM_CTRL_LPM_EN | \
 613:Generated_Source\PSoC4/USBUART.c ****                                              USBUART_LPM_CTRL_LPM_ACK_RESP);
 614:Generated_Source\PSoC4/USBUART.c ****         }
 615:Generated_Source\PSoC4/USBUART.c ****         else
 616:Generated_Source\PSoC4/USBUART.c ****         {
 617:Generated_Source\PSoC4/USBUART.c ****             /* Disable LPM for active device. */
 618:Generated_Source\PSoC4/USBUART.c ****             USBUART_LPM_CTRL_REG &= (uint32) ~USBUART_LPM_CTRL_LPM_EN;
 619:Generated_Source\PSoC4/USBUART.c ****         }
 620:Generated_Source\PSoC4/USBUART.c ****     #endif /* (USBUART_LPM_ACTIVE) */
 621:Generated_Source\PSoC4/USBUART.c **** 
 622:Generated_Source\PSoC4/USBUART.c ****     /* Enable device to responds to USB traffic with address 0. */
 623:Generated_Source\PSoC4/USBUART.c ****     USBUART_CR0_REG = USBUART_DEFUALT_CR0;
 256              		.loc 1 623 0
 257 007a 7F31     		adds	r1, r1, #127
 258 007c 0D4B     		ldr	r3, .L11+44
 259 007e 1960     		str	r1, [r3]
 624:Generated_Source\PSoC4/USBUART.c **** 
 625:Generated_Source\PSoC4/USBUART.c **** #else
 626:Generated_Source\PSoC4/USBUART.c ****     /* Set EP0.CR: ACK Setup, STALL IN/OUT. */
 627:Generated_Source\PSoC4/USBUART.c ****     USBUART_EP0_CR_REG = USBUART_MODE_STALL_IN_OUT;
 628:Generated_Source\PSoC4/USBUART.c **** 
 629:Generated_Source\PSoC4/USBUART.c ****     /* Enable device to respond to USB traffic with address 0. */
 630:Generated_Source\PSoC4/USBUART.c ****     USBUART_CR0_REG = USBUART_DEFUALT_CR0;
 631:Generated_Source\PSoC4/USBUART.c ****     CyDelayCycles(USBUART_WAIT_CR0_REG_STABILITY);
 632:Generated_Source\PSoC4/USBUART.c **** #endif /* (CY_PSOC4) */
 633:Generated_Source\PSoC4/USBUART.c **** 
 634:Generated_Source\PSoC4/USBUART.c ****     /* Enable D+ pull-up and keep USB control on IO. */
 635:Generated_Source\PSoC4/USBUART.c ****     USBUART_USBIO_CR1_REG = USBUART_USBIO_CR1_USBPUEN;
 260              		.loc 1 635 0
 261 0080 0D4B     		ldr	r3, .L11+48
 262 0082 1A60     		str	r2, [r3]
 636:Generated_Source\PSoC4/USBUART.c **** }
 263              		.loc 1 636 0
 264              		@ sp needed
 265 0084 10BD     		pop	{r4, pc}
 266              	.L12:
 267 0086 C046     		.align	2
 268              	.L11:
 269 0088 00000000 		.word	USBUART_device
 270 008c 00000000 		.word	USBUART_transferState
 271 0090 00000000 		.word	USBUART_configurationChanged
 272 0094 00000000 		.word	USBUART_configuration
 273 0098 00000000 		.word	USBUART_interfaceNumber
 274 009c 00000000 		.word	USBUART_deviceAddress
 275 00a0 00000000 		.word	USBUART_deviceStatus
 276 00a4 00000000 		.word	USBUART_lastPacketSize
ARM GAS  C:\Users\essele\AppData\Local\Temp\ccmz8StT.s 			page 17


 277 00a8 24002C40 		.word	1076625444
 278 00ac A4002C40 		.word	1076625572
 279 00b0 A0002C40 		.word	1076625568
 280 00b4 20002C40 		.word	1076625440
 281 00b8 48002C40 		.word	1076625480
 282              		.cfi_endproc
 283              	.LFE3:
 284              		.size	USBUART_InitComponent, .-USBUART_InitComponent
 285              		.section	.text.USBUART_Start,"ax",%progbits
 286              		.align	2
 287              		.global	USBUART_Start
 288              		.code	16
 289              		.thumb_func
 290              		.type	USBUART_Start, %function
 291              	USBUART_Start:
 292              	.LFB1:
 187:Generated_Source\PSoC4/USBUART.c ****     if (0u == USBUART_initVar)
 293              		.loc 1 187 0
 294              		.cfi_startproc
 295              		@ args = 0, pretend = 0, frame = 0
 296              		@ frame_needed = 0, uses_anonymous_args = 0
 297              	.LVL15:
 298 0000 70B5     		push	{r4, r5, r6, lr}
 299              		.cfi_def_cfa_offset 16
 300              		.cfi_offset 4, -16
 301              		.cfi_offset 5, -12
 302              		.cfi_offset 6, -8
 303              		.cfi_offset 14, -4
 304 0002 0400     		movs	r4, r0
 305 0004 0D00     		movs	r5, r1
 188:Generated_Source\PSoC4/USBUART.c ****     {
 306              		.loc 1 188 0
 307 0006 074B     		ldr	r3, .L15
 308 0008 1B78     		ldrb	r3, [r3]
 309 000a 002B     		cmp	r3, #0
 310 000c 04D1     		bne	.L14
 190:Generated_Source\PSoC4/USBUART.c ****         USBUART_initVar = 1u;
 311              		.loc 1 190 0
 312 000e FFF7FEFF 		bl	USBUART_Init
 313              	.LVL16:
 191:Generated_Source\PSoC4/USBUART.c ****     }
 314              		.loc 1 191 0
 315 0012 0122     		movs	r2, #1
 316 0014 034B     		ldr	r3, .L15
 317 0016 1A70     		strb	r2, [r3]
 318              	.L14:
 194:Generated_Source\PSoC4/USBUART.c **** }
 319              		.loc 1 194 0
 320 0018 2900     		movs	r1, r5
 321 001a 2000     		movs	r0, r4
 322 001c FFF7FEFF 		bl	USBUART_InitComponent
 323              	.LVL17:
 195:Generated_Source\PSoC4/USBUART.c **** 
 324              		.loc 1 195 0
 325              		@ sp needed
 326 0020 70BD     		pop	{r4, r5, r6, pc}
 327              	.L16:
ARM GAS  C:\Users\essele\AppData\Local\Temp\ccmz8StT.s 			page 18


 328 0022 C046     		.align	2
 329              	.L15:
 330 0024 00000000 		.word	.LANCHOR0
 331              		.cfi_endproc
 332              	.LFE1:
 333              		.size	USBUART_Start, .-USBUART_Start
 334              		.section	.text.USBUART_ReInitComponent,"ax",%progbits
 335              		.align	2
 336              		.global	USBUART_ReInitComponent
 337              		.code	16
 338              		.thumb_func
 339              		.type	USBUART_ReInitComponent, %function
 340              	USBUART_ReInitComponent:
 341              	.LFB4:
 637:Generated_Source\PSoC4/USBUART.c **** 
 638:Generated_Source\PSoC4/USBUART.c **** 
 639:Generated_Source\PSoC4/USBUART.c **** /*******************************************************************************
 640:Generated_Source\PSoC4/USBUART.c **** * Function Name: USBUART_ReInitComponent
 641:Generated_Source\PSoC4/USBUART.c **** ****************************************************************************//**
 642:Generated_Source\PSoC4/USBUART.c **** *
 643:Generated_Source\PSoC4/USBUART.c **** *  This function reinitialize the component configuration and is
 644:Generated_Source\PSoC4/USBUART.c **** *  intend to be called from the Reset interrupt.
 645:Generated_Source\PSoC4/USBUART.c **** *
 646:Generated_Source\PSoC4/USBUART.c **** * \globalvars
 647:Generated_Source\PSoC4/USBUART.c **** *   USBUART_device - Contains the device number of the desired Device
 648:Generated_Source\PSoC4/USBUART.c **** *        Descriptor. The device number can be found in the Device Descriptor tab
 649:Generated_Source\PSoC4/USBUART.c **** *       of the Configure dialog, under the settings of the desired Device Descriptor,
 650:Generated_Source\PSoC4/USBUART.c **** *       in the Device Number field.
 651:Generated_Source\PSoC4/USBUART.c **** *   USBUART_transferState - This variable is used by the communication
 652:Generated_Source\PSoC4/USBUART.c **** *       functions to handle the current transfer state. Initialized to
 653:Generated_Source\PSoC4/USBUART.c **** *       TRANS_STATE_IDLE in this API.
 654:Generated_Source\PSoC4/USBUART.c **** *   USBUART_configuration - Contains the current configuration number
 655:Generated_Source\PSoC4/USBUART.c **** *       set by the Host using a SET_CONFIGURATION request.
 656:Generated_Source\PSoC4/USBUART.c **** *       Initialized to zero in this API.
 657:Generated_Source\PSoC4/USBUART.c **** *   USBUART_deviceAddress - Contains the current device address. This
 658:Generated_Source\PSoC4/USBUART.c **** *       variable is initialized to zero in this API. The Host starts to communicate
 659:Generated_Source\PSoC4/USBUART.c **** *      to the device with address 0 and then sets it to a whatever value using
 660:Generated_Source\PSoC4/USBUART.c **** *      a SET_ADDRESS request.
 661:Generated_Source\PSoC4/USBUART.c **** *   USBUART_deviceStatus - Initialized to 0.
 662:Generated_Source\PSoC4/USBUART.c **** *       This is a two-bit variable which contains the power status in the first bit
 663:Generated_Source\PSoC4/USBUART.c **** *       (DEVICE_STATUS_BUS_POWERED or DEVICE_STATUS_SELF_POWERED) and the remote
 664:Generated_Source\PSoC4/USBUART.c **** *       wakeup status (DEVICE_STATUS_REMOTE_WAKEUP) in the second bit.
 665:Generated_Source\PSoC4/USBUART.c **** *   USBUART_lastPacketSize - Initialized to 0;
 666:Generated_Source\PSoC4/USBUART.c **** *
 667:Generated_Source\PSoC4/USBUART.c **** * \reentrant
 668:Generated_Source\PSoC4/USBUART.c **** *  No.
 669:Generated_Source\PSoC4/USBUART.c **** *
 670:Generated_Source\PSoC4/USBUART.c **** *******************************************************************************/
 671:Generated_Source\PSoC4/USBUART.c **** void USBUART_ReInitComponent(void) 
 672:Generated_Source\PSoC4/USBUART.c **** {
 342              		.loc 1 672 0
 343              		.cfi_startproc
 344              		@ args = 0, pretend = 0, frame = 0
 345              		@ frame_needed = 0, uses_anonymous_args = 0
 346              		@ link register save eliminated.
 673:Generated_Source\PSoC4/USBUART.c ****     /* Initialize _hidProtocol variable to comply with HID 7.2.6 Set_Protocol
 674:Generated_Source\PSoC4/USBUART.c ****     *  Request: "When initialized, all devices default to report protocol."
ARM GAS  C:\Users\essele\AppData\Local\Temp\ccmz8StT.s 			page 19


 675:Generated_Source\PSoC4/USBUART.c ****     */
 676:Generated_Source\PSoC4/USBUART.c **** #if defined(USBUART_ENABLE_HID_CLASS)
 677:Generated_Source\PSoC4/USBUART.c ****     uint8 i;
 678:Generated_Source\PSoC4/USBUART.c **** 
 679:Generated_Source\PSoC4/USBUART.c ****     for (i = 0u; i < USBUART_MAX_INTERFACES_NUMBER; i++)
 680:Generated_Source\PSoC4/USBUART.c ****     {
 681:Generated_Source\PSoC4/USBUART.c ****         USBUART_hidProtocol[i] = USBUART_PROTOCOL_REPORT;
 682:Generated_Source\PSoC4/USBUART.c ****     }
 683:Generated_Source\PSoC4/USBUART.c **** #endif /* USBUART_ENABLE_HID_CLASS */
 684:Generated_Source\PSoC4/USBUART.c **** 
 685:Generated_Source\PSoC4/USBUART.c ****     /* Reset component internal variables. */
 686:Generated_Source\PSoC4/USBUART.c ****     USBUART_transferState   = USBUART_TRANS_STATE_IDLE;
 347              		.loc 1 686 0
 348 0000 0023     		movs	r3, #0
 349 0002 0A4A     		ldr	r2, .L18
 350 0004 1370     		strb	r3, [r2]
 687:Generated_Source\PSoC4/USBUART.c ****     USBUART_configurationChanged = 0u;
 351              		.loc 1 687 0
 352 0006 0A4A     		ldr	r2, .L18+4
 353 0008 1370     		strb	r3, [r2]
 688:Generated_Source\PSoC4/USBUART.c ****     USBUART_configuration   = 0u;
 354              		.loc 1 688 0
 355 000a 0A4A     		ldr	r2, .L18+8
 356 000c 1370     		strb	r3, [r2]
 689:Generated_Source\PSoC4/USBUART.c ****     USBUART_interfaceNumber = 0u;
 357              		.loc 1 689 0
 358 000e 0A4A     		ldr	r2, .L18+12
 359 0010 1370     		strb	r3, [r2]
 690:Generated_Source\PSoC4/USBUART.c ****     USBUART_deviceAddress   = 0u;
 360              		.loc 1 690 0
 361 0012 0A4A     		ldr	r2, .L18+16
 362 0014 1370     		strb	r3, [r2]
 691:Generated_Source\PSoC4/USBUART.c ****     USBUART_deviceStatus    = 0u;
 363              		.loc 1 691 0
 364 0016 0A4A     		ldr	r2, .L18+20
 365 0018 1370     		strb	r3, [r2]
 692:Generated_Source\PSoC4/USBUART.c ****     USBUART_lastPacketSize  = 0u;
 366              		.loc 1 692 0
 367 001a 0A4A     		ldr	r2, .L18+24
 368 001c 1370     		strb	r3, [r2]
 693:Generated_Source\PSoC4/USBUART.c **** 
 694:Generated_Source\PSoC4/USBUART.c **** #if (CY_PSOC4)
 695:Generated_Source\PSoC4/USBUART.c ****     /* Set EP0.CR: ACK Setup, NAK IN/OUT. */
 696:Generated_Source\PSoC4/USBUART.c ****     USBUART_EP0_CR_REG = USBUART_MODE_NAK_IN_OUT;
 369              		.loc 1 696 0
 370 001e 0122     		movs	r2, #1
 371 0020 094B     		ldr	r3, .L18+28
 372 0022 1A60     		str	r2, [r3]
 697:Generated_Source\PSoC4/USBUART.c **** #else
 698:Generated_Source\PSoC4/USBUART.c ****     /* Set EP0.CR: ACK Setup, STALL IN/OUT. */
 699:Generated_Source\PSoC4/USBUART.c ****     USBUART_EP0_CR_REG = USBUART_MODE_STALL_IN_OUT;
 700:Generated_Source\PSoC4/USBUART.c **** #endif /* (CY_PSOC4) */
 701:Generated_Source\PSoC4/USBUART.c **** 
 702:Generated_Source\PSoC4/USBUART.c ****     /* Enable device to respond to USB traffic with address 0. */
 703:Generated_Source\PSoC4/USBUART.c ****     USBUART_CR0_REG = USBUART_DEFUALT_CR0;
 373              		.loc 1 703 0
 374 0024 7F32     		adds	r2, r2, #127
ARM GAS  C:\Users\essele\AppData\Local\Temp\ccmz8StT.s 			page 20


 375 0026 094B     		ldr	r3, .L18+32
 376 0028 1A60     		str	r2, [r3]
 704:Generated_Source\PSoC4/USBUART.c **** }
 377              		.loc 1 704 0
 378              		@ sp needed
 379 002a 7047     		bx	lr
 380              	.L19:
 381              		.align	2
 382              	.L18:
 383 002c 00000000 		.word	USBUART_transferState
 384 0030 00000000 		.word	USBUART_configurationChanged
 385 0034 00000000 		.word	USBUART_configuration
 386 0038 00000000 		.word	USBUART_interfaceNumber
 387 003c 00000000 		.word	USBUART_deviceAddress
 388 0040 00000000 		.word	USBUART_deviceStatus
 389 0044 00000000 		.word	USBUART_lastPacketSize
 390 0048 A0002C40 		.word	1076625568
 391 004c 20002C40 		.word	1076625440
 392              		.cfi_endproc
 393              	.LFE4:
 394              		.size	USBUART_ReInitComponent, .-USBUART_ReInitComponent
 395              		.section	.text.USBUART_Stop,"ax",%progbits
 396              		.align	2
 397              		.global	USBUART_Stop
 398              		.code	16
 399              		.thumb_func
 400              		.type	USBUART_Stop, %function
 401              	USBUART_Stop:
 402              	.LFB5:
 705:Generated_Source\PSoC4/USBUART.c **** 
 706:Generated_Source\PSoC4/USBUART.c **** 
 707:Generated_Source\PSoC4/USBUART.c **** /*******************************************************************************
 708:Generated_Source\PSoC4/USBUART.c **** * Function Name: USBUART_Stop
 709:Generated_Source\PSoC4/USBUART.c **** ****************************************************************************//**
 710:Generated_Source\PSoC4/USBUART.c **** *
 711:Generated_Source\PSoC4/USBUART.c **** *  This function shuts down the USB function including to release
 712:Generated_Source\PSoC4/USBUART.c **** *  the D+ pull-up and disabling the SIE.
 713:Generated_Source\PSoC4/USBUART.c **** *
 714:Generated_Source\PSoC4/USBUART.c **** * \globalvars
 715:Generated_Source\PSoC4/USBUART.c **** *   \ref USBUART_configuration
 716:Generated_Source\PSoC4/USBUART.c **** *
 717:Generated_Source\PSoC4/USBUART.c **** *   USBUART_deviceAddress - Contains the current device address. This
 718:Generated_Source\PSoC4/USBUART.c **** *       variable is initialized to zero in this API. The Host starts to communicate
 719:Generated_Source\PSoC4/USBUART.c **** *      to the device with address 0 and then sets it to a whatever value using
 720:Generated_Source\PSoC4/USBUART.c **** *      a SET_ADDRESS request.
 721:Generated_Source\PSoC4/USBUART.c **** *
 722:Generated_Source\PSoC4/USBUART.c **** *   \ref USBUART_deviceStatus
 723:Generated_Source\PSoC4/USBUART.c **** *
 724:Generated_Source\PSoC4/USBUART.c **** *   \ref USBUART_configurationChanged
 725:Generated_Source\PSoC4/USBUART.c **** *
 726:Generated_Source\PSoC4/USBUART.c **** *   USBUART_intiVar -  This variable is set to zero
 727:Generated_Source\PSoC4/USBUART.c **** *
 728:Generated_Source\PSoC4/USBUART.c **** *******************************************************************************/
 729:Generated_Source\PSoC4/USBUART.c **** void USBUART_Stop(void) 
 730:Generated_Source\PSoC4/USBUART.c **** {
 403              		.loc 1 730 0
 404              		.cfi_startproc
ARM GAS  C:\Users\essele\AppData\Local\Temp\ccmz8StT.s 			page 21


 405              		@ args = 0, pretend = 0, frame = 0
 406              		@ frame_needed = 0, uses_anonymous_args = 0
 407 0000 10B5     		push	{r4, lr}
 408              		.cfi_def_cfa_offset 8
 409              		.cfi_offset 4, -8
 410              		.cfi_offset 14, -4
 731:Generated_Source\PSoC4/USBUART.c ****     uint8 enableInterrupts;
 732:Generated_Source\PSoC4/USBUART.c **** 
 733:Generated_Source\PSoC4/USBUART.c **** #if (USBUART_EP_MANAGEMENT_DMA)
 734:Generated_Source\PSoC4/USBUART.c ****     /* Stop all DMA channels. */
 735:Generated_Source\PSoC4/USBUART.c ****     USBUART_Stop_DMA(USBUART_MAX_EP);
 736:Generated_Source\PSoC4/USBUART.c **** #endif /* (USBUART_EP_MANAGEMENT_DMA) */
 737:Generated_Source\PSoC4/USBUART.c **** 
 738:Generated_Source\PSoC4/USBUART.c ****     enableInterrupts = CyEnterCriticalSection();
 411              		.loc 1 738 0
 412 0002 FFF7FEFF 		bl	CyEnterCriticalSection
 413              	.LVL18:
 739:Generated_Source\PSoC4/USBUART.c **** 
 740:Generated_Source\PSoC4/USBUART.c ****     /* Disable USB IP to respond to USB traffic. */
 741:Generated_Source\PSoC4/USBUART.c ****     USBUART_CR0_REG &= (uint32) ~USBUART_CR0_ENABLE;
 414              		.loc 1 741 0
 415 0006 144A     		ldr	r2, .L21
 416 0008 1368     		ldr	r3, [r2]
 417 000a 8021     		movs	r1, #128
 418 000c 8B43     		bics	r3, r1
 419 000e 1360     		str	r3, [r2]
 742:Generated_Source\PSoC4/USBUART.c **** 
 743:Generated_Source\PSoC4/USBUART.c ****     /* Disable D+ pull-up. */
 744:Generated_Source\PSoC4/USBUART.c ****     USBUART_USBIO_CR1_REG &= (uint32) ~ USBUART_USBIO_CR1_USBPUEN;
 420              		.loc 1 744 0
 421 0010 124A     		ldr	r2, .L21+4
 422 0012 1368     		ldr	r3, [r2]
 423 0014 7C39     		subs	r1, r1, #124
 424 0016 8B43     		bics	r3, r1
 425 0018 1360     		str	r3, [r2]
 745:Generated_Source\PSoC4/USBUART.c **** 
 746:Generated_Source\PSoC4/USBUART.c **** #if (CY_PSOC4)
 747:Generated_Source\PSoC4/USBUART.c ****     /* Disable USBFS block. */
 748:Generated_Source\PSoC4/USBUART.c ****     USBUART_POWER_CTRL_REG &= (uint32) ~USBUART_POWER_CTRL_ENABLE;
 426              		.loc 1 748 0
 427 001a 114A     		ldr	r2, .L21+8
 428 001c 1368     		ldr	r3, [r2]
 429 001e 5B00     		lsls	r3, r3, #1
 430 0020 5B08     		lsrs	r3, r3, #1
 431 0022 1360     		str	r3, [r2]
 749:Generated_Source\PSoC4/USBUART.c **** #else
 750:Generated_Source\PSoC4/USBUART.c ****     /* Clear power active and standby mode templates. */
 751:Generated_Source\PSoC4/USBUART.c ****     USBUART_PM_ACT_CFG_REG  &= (uint8) ~USBUART_PM_ACT_EN_FSUSB;
 752:Generated_Source\PSoC4/USBUART.c ****     USBUART_PM_STBY_CFG_REG &= (uint8) ~USBUART_PM_STBY_EN_FSUSB;
 753:Generated_Source\PSoC4/USBUART.c **** 
 754:Generated_Source\PSoC4/USBUART.c ****     /* Ensure single-ended disable bits are high (PRT15.INP_DIS[7:6])
 755:Generated_Source\PSoC4/USBUART.c ****      * (input receiver disabled). */
 756:Generated_Source\PSoC4/USBUART.c ****     USBUART_DM_INP_DIS_REG |= (uint8) USBUART_DM_MASK;
 757:Generated_Source\PSoC4/USBUART.c ****     USBUART_DP_INP_DIS_REG |= (uint8) USBUART_DP_MASK;
 758:Generated_Source\PSoC4/USBUART.c **** 
 759:Generated_Source\PSoC4/USBUART.c **** #endif /* (CY_PSOC4) */
 760:Generated_Source\PSoC4/USBUART.c **** 
ARM GAS  C:\Users\essele\AppData\Local\Temp\ccmz8StT.s 			page 22


 761:Generated_Source\PSoC4/USBUART.c ****     CyExitCriticalSection(enableInterrupts);
 432              		.loc 1 761 0
 433 0024 FFF7FEFF 		bl	CyExitCriticalSection
 434              	.LVL19:
 762:Generated_Source\PSoC4/USBUART.c **** 
 763:Generated_Source\PSoC4/USBUART.c ****     /* Disable component interrupts. */
 764:Generated_Source\PSoC4/USBUART.c **** #if (CY_PSOC4)
 765:Generated_Source\PSoC4/USBUART.c ****     CyIntDisable(USBUART_INTR_HI_VECT_NUM);
 435              		.loc 1 765 0
 436 0028 1E20     		movs	r0, #30
 437 002a FFF7FEFF 		bl	CyIntDisable
 438              	.LVL20:
 766:Generated_Source\PSoC4/USBUART.c ****     CyIntDisable(USBUART_INTR_LO_VECT_NUM);
 439              		.loc 1 766 0
 440 002e 1F20     		movs	r0, #31
 441 0030 FFF7FEFF 		bl	CyIntDisable
 442              	.LVL21:
 767:Generated_Source\PSoC4/USBUART.c ****     CyIntDisable(USBUART_INTR_MED_VECT_NUM);
 443              		.loc 1 767 0
 444 0034 0020     		movs	r0, #0
 445 0036 FFF7FEFF 		bl	CyIntDisable
 446              	.LVL22:
 768:Generated_Source\PSoC4/USBUART.c **** #else
 769:Generated_Source\PSoC4/USBUART.c **** 
 770:Generated_Source\PSoC4/USBUART.c ****     CyIntDisable(USBUART_BUS_RESET_VECT_NUM);
 771:Generated_Source\PSoC4/USBUART.c ****     CyIntDisable(USBUART_EP_0_VECT_NUM);
 772:Generated_Source\PSoC4/USBUART.c **** 
 773:Generated_Source\PSoC4/USBUART.c ****     #if (USBUART_SOF_ISR_ACTIVE)
 774:Generated_Source\PSoC4/USBUART.c ****         CyIntDisable(USBUART_SOF_VECT_NUM);
 775:Generated_Source\PSoC4/USBUART.c ****     #endif /* (USBUART_SOF_ISR_ACTIVE) */
 776:Generated_Source\PSoC4/USBUART.c **** 
 777:Generated_Source\PSoC4/USBUART.c ****     #if (USBUART_EP1_ISR_ACTIVE)
 778:Generated_Source\PSoC4/USBUART.c ****         CyIntDisable(USBUART_EP_1_VECT_NUM);
 779:Generated_Source\PSoC4/USBUART.c ****     #endif /* (USBUART_EP1_ISR_ACTIVE) */
 780:Generated_Source\PSoC4/USBUART.c **** 
 781:Generated_Source\PSoC4/USBUART.c ****     #if (USBUART_EP2_ISR_ACTIVE)
 782:Generated_Source\PSoC4/USBUART.c ****         CyIntDisable(USBUART_EP_2_VECT_NUM);
 783:Generated_Source\PSoC4/USBUART.c ****     #endif /* (USBUART_EP2_ISR_ACTIVE) */
 784:Generated_Source\PSoC4/USBUART.c **** 
 785:Generated_Source\PSoC4/USBUART.c ****     #if (USBUART_EP3_ISR_ACTIVE)
 786:Generated_Source\PSoC4/USBUART.c ****         CyIntDisable(USBUART_EP_3_VECT_NUM);
 787:Generated_Source\PSoC4/USBUART.c ****     #endif /* (USBUART_EP3_ISR_ACTIVE) */
 788:Generated_Source\PSoC4/USBUART.c **** 
 789:Generated_Source\PSoC4/USBUART.c ****     #if (USBUART_EP4_ISR_ACTIVE)
 790:Generated_Source\PSoC4/USBUART.c ****         CyIntDisable(USBUART_EP_4_VECT_NUM);
 791:Generated_Source\PSoC4/USBUART.c ****     #endif /* (USBUART_EP4_ISR_ACTIVE) */
 792:Generated_Source\PSoC4/USBUART.c **** 
 793:Generated_Source\PSoC4/USBUART.c ****     #if (USBUART_EP5_ISR_ACTIVE)
 794:Generated_Source\PSoC4/USBUART.c ****         CyIntDisable(USBUART_EP_5_VECT_NUM);
 795:Generated_Source\PSoC4/USBUART.c ****     #endif /* (USBUART_EP5_ISR_ACTIVE) */
 796:Generated_Source\PSoC4/USBUART.c **** 
 797:Generated_Source\PSoC4/USBUART.c ****     #if (USBUART_EP6_ISR_ACTIVE)
 798:Generated_Source\PSoC4/USBUART.c ****         CyIntDisable(USBUART_EP_6_VECT_NUM);
 799:Generated_Source\PSoC4/USBUART.c ****     #endif /* USBUART_EP6_ISR_REMOVE */
 800:Generated_Source\PSoC4/USBUART.c **** 
 801:Generated_Source\PSoC4/USBUART.c ****     #if (USBUART_EP7_ISR_ACTIVE)
 802:Generated_Source\PSoC4/USBUART.c ****         CyIntDisable(USBUART_EP_7_VECT_NUM);
ARM GAS  C:\Users\essele\AppData\Local\Temp\ccmz8StT.s 			page 23


 803:Generated_Source\PSoC4/USBUART.c ****     #endif /* (USBUART_EP7_ISR_ACTIVE) */
 804:Generated_Source\PSoC4/USBUART.c **** 
 805:Generated_Source\PSoC4/USBUART.c ****     #if (USBUART_EP8_ISR_ACTIVE)
 806:Generated_Source\PSoC4/USBUART.c ****         CyIntDisable(USBUART_EP_8_VECT_NUM);
 807:Generated_Source\PSoC4/USBUART.c ****     #endif /* (USBUART_EP8_ISR_ACTIVE) */
 808:Generated_Source\PSoC4/USBUART.c **** 
 809:Generated_Source\PSoC4/USBUART.c ****     #if (USBUART_DP_ISR_ACTIVE)
 810:Generated_Source\PSoC4/USBUART.c ****         /* Clear active mode Dp interrupt source history. */
 811:Generated_Source\PSoC4/USBUART.c ****         (void) USBUART_Dp_ClearInterrupt();
 812:Generated_Source\PSoC4/USBUART.c ****         CyIntClearPending(USBUART_DP_INTC_VECT_NUM);
 813:Generated_Source\PSoC4/USBUART.c ****     #endif /* (USBUART_DP_ISR_ACTIVE). */
 814:Generated_Source\PSoC4/USBUART.c **** 
 815:Generated_Source\PSoC4/USBUART.c **** #endif /* (CY_PSOC4) */
 816:Generated_Source\PSoC4/USBUART.c **** 
 817:Generated_Source\PSoC4/USBUART.c ****     /* Reset component internal variables. */
 818:Generated_Source\PSoC4/USBUART.c ****     USBUART_configurationChanged = 0u;
 447              		.loc 1 818 0
 448 003a 0023     		movs	r3, #0
 449 003c 094A     		ldr	r2, .L21+12
 450 003e 1370     		strb	r3, [r2]
 819:Generated_Source\PSoC4/USBUART.c ****     USBUART_configuration   = 0u;
 451              		.loc 1 819 0
 452 0040 094A     		ldr	r2, .L21+16
 453 0042 1370     		strb	r3, [r2]
 820:Generated_Source\PSoC4/USBUART.c ****     USBUART_interfaceNumber = 0u;
 454              		.loc 1 820 0
 455 0044 094A     		ldr	r2, .L21+20
 456 0046 1370     		strb	r3, [r2]
 821:Generated_Source\PSoC4/USBUART.c ****     USBUART_deviceAddress   = 0u;
 457              		.loc 1 821 0
 458 0048 094A     		ldr	r2, .L21+24
 459 004a 1370     		strb	r3, [r2]
 822:Generated_Source\PSoC4/USBUART.c ****     USBUART_deviceStatus    = 0u;
 460              		.loc 1 822 0
 461 004c 094A     		ldr	r2, .L21+28
 462 004e 1370     		strb	r3, [r2]
 823:Generated_Source\PSoC4/USBUART.c **** 
 824:Generated_Source\PSoC4/USBUART.c ****     /* It is mandatory for correct device startup. */
 825:Generated_Source\PSoC4/USBUART.c ****     USBUART_initVar = 0u;
 463              		.loc 1 825 0
 464 0050 094A     		ldr	r2, .L21+32
 465 0052 1370     		strb	r3, [r2]
 826:Generated_Source\PSoC4/USBUART.c **** }
 466              		.loc 1 826 0
 467              		@ sp needed
 468 0054 10BD     		pop	{r4, pc}
 469              	.L22:
 470 0056 C046     		.align	2
 471              	.L21:
 472 0058 20002C40 		.word	1076625440
 473 005c 48002C40 		.word	1076625480
 474 0060 00202C40 		.word	1076633600
 475 0064 00000000 		.word	USBUART_configurationChanged
 476 0068 00000000 		.word	USBUART_configuration
 477 006c 00000000 		.word	USBUART_interfaceNumber
 478 0070 00000000 		.word	USBUART_deviceAddress
 479 0074 00000000 		.word	USBUART_deviceStatus
ARM GAS  C:\Users\essele\AppData\Local\Temp\ccmz8StT.s 			page 24


 480 0078 00000000 		.word	.LANCHOR0
 481              		.cfi_endproc
 482              	.LFE5:
 483              		.size	USBUART_Stop, .-USBUART_Stop
 484              		.section	.text.USBUART_CheckActivity,"ax",%progbits
 485              		.align	2
 486              		.global	USBUART_CheckActivity
 487              		.code	16
 488              		.thumb_func
 489              		.type	USBUART_CheckActivity, %function
 490              	USBUART_CheckActivity:
 491              	.LFB6:
 827:Generated_Source\PSoC4/USBUART.c **** 
 828:Generated_Source\PSoC4/USBUART.c **** 
 829:Generated_Source\PSoC4/USBUART.c **** /*******************************************************************************
 830:Generated_Source\PSoC4/USBUART.c **** * Function Name: USBUART_CheckActivity
 831:Generated_Source\PSoC4/USBUART.c **** ****************************************************************************//**
 832:Generated_Source\PSoC4/USBUART.c **** *
 833:Generated_Source\PSoC4/USBUART.c **** *  This function returns the activity status of the bus. It clears the hardware
 834:Generated_Source\PSoC4/USBUART.c **** *  status to provide updated status on the next call of this function. It
 835:Generated_Source\PSoC4/USBUART.c **** *  provides a way to determine whether any USB bus activity occurred. The
 836:Generated_Source\PSoC4/USBUART.c **** *  application should use this function to determine if the USB suspend
 837:Generated_Source\PSoC4/USBUART.c **** *  conditions are met.
 838:Generated_Source\PSoC4/USBUART.c **** *
 839:Generated_Source\PSoC4/USBUART.c **** *
 840:Generated_Source\PSoC4/USBUART.c **** * \return
 841:Generated_Source\PSoC4/USBUART.c **** *  cystatus: Status of the bus since the last call of the function.
 842:Generated_Source\PSoC4/USBUART.c **** *  Return Value |   Description
 843:Generated_Source\PSoC4/USBUART.c **** *  -------------|---------------------------------------------------------------
 844:Generated_Source\PSoC4/USBUART.c **** *  1            |Bus activity was detected since the last call to this function
 845:Generated_Source\PSoC4/USBUART.c **** *  0            |Bus activity was not detected since the last call to this function
 846:Generated_Source\PSoC4/USBUART.c **** *
 847:Generated_Source\PSoC4/USBUART.c **** *
 848:Generated_Source\PSoC4/USBUART.c **** *******************************************************************************/
 849:Generated_Source\PSoC4/USBUART.c **** uint8 USBUART_CheckActivity(void) 
 850:Generated_Source\PSoC4/USBUART.c **** {
 492              		.loc 1 850 0
 493              		.cfi_startproc
 494              		@ args = 0, pretend = 0, frame = 0
 495              		@ frame_needed = 0, uses_anonymous_args = 0
 496              		@ link register save eliminated.
 851:Generated_Source\PSoC4/USBUART.c ****     uint32 cr1Reg = USBUART_CR1_REG;
 497              		.loc 1 851 0
 498 0000 0549     		ldr	r1, .L26
 499 0002 0B68     		ldr	r3, [r1]
 500              	.LVL23:
 852:Generated_Source\PSoC4/USBUART.c **** 
 853:Generated_Source\PSoC4/USBUART.c ****     /* Clear bus activity. */
 854:Generated_Source\PSoC4/USBUART.c ****     USBUART_CR1_REG = (cr1Reg & (uint32) ~USBUART_CR1_BUS_ACTIVITY);
 501              		.loc 1 854 0
 502 0004 0422     		movs	r2, #4
 503 0006 1800     		movs	r0, r3
 504 0008 9043     		bics	r0, r2
 505 000a 0860     		str	r0, [r1]
 855:Generated_Source\PSoC4/USBUART.c **** 
 856:Generated_Source\PSoC4/USBUART.c ****     /* Get bus activity. */
 857:Generated_Source\PSoC4/USBUART.c ****     return ((0u != (cr1Reg & USBUART_CR1_BUS_ACTIVITY)) ? (1u) : (0u));
ARM GAS  C:\Users\essele\AppData\Local\Temp\ccmz8StT.s 			page 25


 506              		.loc 1 857 0
 507 000c 1A42     		tst	r2, r3
 508 000e 01D0     		beq	.L25
 509 0010 0120     		movs	r0, #1
 510 0012 00E0     		b	.L24
 511              	.L25:
 512 0014 0020     		movs	r0, #0
 513              	.L24:
 858:Generated_Source\PSoC4/USBUART.c **** }
 514              		.loc 1 858 0 discriminator 4
 515              		@ sp needed
 516 0016 7047     		bx	lr
 517              	.L27:
 518              		.align	2
 519              	.L26:
 520 0018 24002C40 		.word	1076625444
 521              		.cfi_endproc
 522              	.LFE6:
 523              		.size	USBUART_CheckActivity, .-USBUART_CheckActivity
 524              		.section	.text.USBUART_GetConfiguration,"ax",%progbits
 525              		.align	2
 526              		.global	USBUART_GetConfiguration
 527              		.code	16
 528              		.thumb_func
 529              		.type	USBUART_GetConfiguration, %function
 530              	USBUART_GetConfiguration:
 531              	.LFB7:
 859:Generated_Source\PSoC4/USBUART.c **** 
 860:Generated_Source\PSoC4/USBUART.c **** 
 861:Generated_Source\PSoC4/USBUART.c **** /*******************************************************************************
 862:Generated_Source\PSoC4/USBUART.c **** * Function Name: USBUART_GetConfiguration
 863:Generated_Source\PSoC4/USBUART.c **** ****************************************************************************//**
 864:Generated_Source\PSoC4/USBUART.c **** *
 865:Generated_Source\PSoC4/USBUART.c **** *  This function gets the current configuration of the USB device.
 866:Generated_Source\PSoC4/USBUART.c **** *
 867:Generated_Source\PSoC4/USBUART.c **** * \return
 868:Generated_Source\PSoC4/USBUART.c **** *  Returns the currently assigned configuration. Returns 0 if the device
 869:Generated_Source\PSoC4/USBUART.c **** *  is not configured
 870:Generated_Source\PSoC4/USBUART.c **** *
 871:Generated_Source\PSoC4/USBUART.c **** *******************************************************************************/
 872:Generated_Source\PSoC4/USBUART.c **** uint8 USBUART_GetConfiguration(void) 
 873:Generated_Source\PSoC4/USBUART.c **** {
 532              		.loc 1 873 0
 533              		.cfi_startproc
 534              		@ args = 0, pretend = 0, frame = 0
 535              		@ frame_needed = 0, uses_anonymous_args = 0
 536              		@ link register save eliminated.
 874:Generated_Source\PSoC4/USBUART.c ****     return (USBUART_configuration);
 537              		.loc 1 874 0
 538 0000 014B     		ldr	r3, .L29
 539 0002 1878     		ldrb	r0, [r3]
 540 0004 C0B2     		uxtb	r0, r0
 875:Generated_Source\PSoC4/USBUART.c **** }
 541              		.loc 1 875 0
 542              		@ sp needed
 543 0006 7047     		bx	lr
 544              	.L30:
ARM GAS  C:\Users\essele\AppData\Local\Temp\ccmz8StT.s 			page 26


 545              		.align	2
 546              	.L29:
 547 0008 00000000 		.word	USBUART_configuration
 548              		.cfi_endproc
 549              	.LFE7:
 550              		.size	USBUART_GetConfiguration, .-USBUART_GetConfiguration
 551              		.section	.text.USBUART_IsConfigurationChanged,"ax",%progbits
 552              		.align	2
 553              		.global	USBUART_IsConfigurationChanged
 554              		.code	16
 555              		.thumb_func
 556              		.type	USBUART_IsConfigurationChanged, %function
 557              	USBUART_IsConfigurationChanged:
 558              	.LFB8:
 876:Generated_Source\PSoC4/USBUART.c **** 
 877:Generated_Source\PSoC4/USBUART.c **** 
 878:Generated_Source\PSoC4/USBUART.c **** /*******************************************************************************
 879:Generated_Source\PSoC4/USBUART.c **** * Function Name: USBUART_IsConfigurationChanged
 880:Generated_Source\PSoC4/USBUART.c **** ****************************************************************************//**
 881:Generated_Source\PSoC4/USBUART.c **** *
 882:Generated_Source\PSoC4/USBUART.c **** *  This function returns the clear-on-read configuration state.  It is useful
 883:Generated_Source\PSoC4/USBUART.c **** *  when the host sends double SET_CONFIGURATION request with the same 
 884:Generated_Source\PSoC4/USBUART.c **** *  configuration number or changes alternate settings of the interface. 
 885:Generated_Source\PSoC4/USBUART.c **** *  After configuration has been changed the OUT endpoints must be enabled and IN 
 886:Generated_Source\PSoC4/USBUART.c **** *  endpoint must be loaded with data to start communication with the host.
 887:Generated_Source\PSoC4/USBUART.c **** *
 888:Generated_Source\PSoC4/USBUART.c **** * \return
 889:Generated_Source\PSoC4/USBUART.c **** *  None-zero value when new configuration has been changed, otherwise zero is
 890:Generated_Source\PSoC4/USBUART.c **** *  returned.
 891:Generated_Source\PSoC4/USBUART.c **** *
 892:Generated_Source\PSoC4/USBUART.c **** * \globalvars
 893:Generated_Source\PSoC4/USBUART.c **** *
 894:Generated_Source\PSoC4/USBUART.c **** *  \ref USBUART_configurationChanged - This variable is set to 1 after
 895:Generated_Source\PSoC4/USBUART.c **** *   a SET_CONFIGURATION request and cleared in this function.
 896:Generated_Source\PSoC4/USBUART.c **** *
 897:Generated_Source\PSoC4/USBUART.c **** *******************************************************************************/
 898:Generated_Source\PSoC4/USBUART.c **** uint8 USBUART_IsConfigurationChanged(void) 
 899:Generated_Source\PSoC4/USBUART.c **** {
 559              		.loc 1 899 0
 560              		.cfi_startproc
 561              		@ args = 0, pretend = 0, frame = 0
 562              		@ frame_needed = 0, uses_anonymous_args = 0
 563              		@ link register save eliminated.
 564              	.LVL24:
 900:Generated_Source\PSoC4/USBUART.c ****     uint8 res = 0u;
 901:Generated_Source\PSoC4/USBUART.c **** 
 902:Generated_Source\PSoC4/USBUART.c ****     if (USBUART_configurationChanged != 0u)
 565              		.loc 1 902 0
 566 0000 054B     		ldr	r3, .L34
 567 0002 1B78     		ldrb	r3, [r3]
 568 0004 002B     		cmp	r3, #0
 569 0006 05D0     		beq	.L33
 903:Generated_Source\PSoC4/USBUART.c ****     {
 904:Generated_Source\PSoC4/USBUART.c ****         res = USBUART_configurationChanged;
 570              		.loc 1 904 0
 571 0008 034B     		ldr	r3, .L34
 572 000a 1878     		ldrb	r0, [r3]
ARM GAS  C:\Users\essele\AppData\Local\Temp\ccmz8StT.s 			page 27


 573 000c C0B2     		uxtb	r0, r0
 574              	.LVL25:
 905:Generated_Source\PSoC4/USBUART.c ****         USBUART_configurationChanged = 0u;
 575              		.loc 1 905 0
 576 000e 0022     		movs	r2, #0
 577 0010 1A70     		strb	r2, [r3]
 578 0012 00E0     		b	.L32
 579              	.LVL26:
 580              	.L33:
 900:Generated_Source\PSoC4/USBUART.c ****     uint8 res = 0u;
 581              		.loc 1 900 0
 582 0014 0020     		movs	r0, #0
 583              	.LVL27:
 584              	.L32:
 906:Generated_Source\PSoC4/USBUART.c ****     }
 907:Generated_Source\PSoC4/USBUART.c **** 
 908:Generated_Source\PSoC4/USBUART.c ****     return (res);
 909:Generated_Source\PSoC4/USBUART.c **** }
 585              		.loc 1 909 0
 586              		@ sp needed
 587 0016 7047     		bx	lr
 588              	.L35:
 589              		.align	2
 590              	.L34:
 591 0018 00000000 		.word	USBUART_configurationChanged
 592              		.cfi_endproc
 593              	.LFE8:
 594              		.size	USBUART_IsConfigurationChanged, .-USBUART_IsConfigurationChanged
 595              		.section	.text.USBUART_GetInterfaceSetting,"ax",%progbits
 596              		.align	2
 597              		.global	USBUART_GetInterfaceSetting
 598              		.code	16
 599              		.thumb_func
 600              		.type	USBUART_GetInterfaceSetting, %function
 601              	USBUART_GetInterfaceSetting:
 602              	.LFB9:
 910:Generated_Source\PSoC4/USBUART.c **** 
 911:Generated_Source\PSoC4/USBUART.c **** 
 912:Generated_Source\PSoC4/USBUART.c **** /*******************************************************************************
 913:Generated_Source\PSoC4/USBUART.c **** * Function Name: USBUART_GetInterfaceSetting
 914:Generated_Source\PSoC4/USBUART.c **** ****************************************************************************//**
 915:Generated_Source\PSoC4/USBUART.c **** *
 916:Generated_Source\PSoC4/USBUART.c **** *  This function gets the current alternate setting for the specified interface.
 917:Generated_Source\PSoC4/USBUART.c **** *  It is useful to identify which alternate settings are active in the specified 
 918:Generated_Source\PSoC4/USBUART.c **** *  interface.
 919:Generated_Source\PSoC4/USBUART.c **** *
 920:Generated_Source\PSoC4/USBUART.c **** *  \param
 921:Generated_Source\PSoC4/USBUART.c **** *  interfaceNumber interface number
 922:Generated_Source\PSoC4/USBUART.c **** *
 923:Generated_Source\PSoC4/USBUART.c **** * \return
 924:Generated_Source\PSoC4/USBUART.c **** *  Returns the current alternate setting for the specified interface.
 925:Generated_Source\PSoC4/USBUART.c **** *
 926:Generated_Source\PSoC4/USBUART.c **** *******************************************************************************/
 927:Generated_Source\PSoC4/USBUART.c **** uint8  USBUART_GetInterfaceSetting(uint8 interfaceNumber)
 928:Generated_Source\PSoC4/USBUART.c ****                                                     
 929:Generated_Source\PSoC4/USBUART.c **** {
 603              		.loc 1 929 0
ARM GAS  C:\Users\essele\AppData\Local\Temp\ccmz8StT.s 			page 28


 604              		.cfi_startproc
 605              		@ args = 0, pretend = 0, frame = 0
 606              		@ frame_needed = 0, uses_anonymous_args = 0
 607              		@ link register save eliminated.
 608              	.LVL28:
 930:Generated_Source\PSoC4/USBUART.c ****     return (USBUART_interfaceSetting[interfaceNumber]);
 609              		.loc 1 930 0
 610 0000 014B     		ldr	r3, .L37
 611 0002 185C     		ldrb	r0, [r3, r0]
 612              	.LVL29:
 613 0004 C0B2     		uxtb	r0, r0
 931:Generated_Source\PSoC4/USBUART.c **** }
 614              		.loc 1 931 0
 615              		@ sp needed
 616 0006 7047     		bx	lr
 617              	.L38:
 618              		.align	2
 619              	.L37:
 620 0008 00000000 		.word	USBUART_interfaceSetting
 621              		.cfi_endproc
 622              	.LFE9:
 623              		.size	USBUART_GetInterfaceSetting, .-USBUART_GetInterfaceSetting
 624              		.section	.text.USBUART_GetEPState,"ax",%progbits
 625              		.align	2
 626              		.global	USBUART_GetEPState
 627              		.code	16
 628              		.thumb_func
 629              		.type	USBUART_GetEPState, %function
 630              	USBUART_GetEPState:
 631              	.LFB10:
 932:Generated_Source\PSoC4/USBUART.c **** 
 933:Generated_Source\PSoC4/USBUART.c **** 
 934:Generated_Source\PSoC4/USBUART.c **** /*******************************************************************************
 935:Generated_Source\PSoC4/USBUART.c **** * Function Name: USBUART_GetEPState
 936:Generated_Source\PSoC4/USBUART.c **** ****************************************************************************//**
 937:Generated_Source\PSoC4/USBUART.c **** *
 938:Generated_Source\PSoC4/USBUART.c **** *  This function returns the state of the requested endpoint.
 939:Generated_Source\PSoC4/USBUART.c **** *
 940:Generated_Source\PSoC4/USBUART.c **** * \param epNumber Data endpoint number
 941:Generated_Source\PSoC4/USBUART.c **** *
 942:Generated_Source\PSoC4/USBUART.c **** * \return
 943:Generated_Source\PSoC4/USBUART.c **** *  Returns the current state of the specified USBFS endpoint. Symbolic names and
 944:Generated_Source\PSoC4/USBUART.c **** *  their associated values are given in the following table. Use these constants
 945:Generated_Source\PSoC4/USBUART.c **** *  whenever you write code to change the state of the endpoints, such as ISR
 946:Generated_Source\PSoC4/USBUART.c **** *  code, to handle data sent or received.
 947:Generated_Source\PSoC4/USBUART.c **** *
 948:Generated_Source\PSoC4/USBUART.c **** *  Return Value           | Description
 949:Generated_Source\PSoC4/USBUART.c **** *  -----------------------|-----------------------------------------------------
 950:Generated_Source\PSoC4/USBUART.c **** *  USBFS_NO_EVENT_PENDING |The endpoint is awaiting SIE action
 951:Generated_Source\PSoC4/USBUART.c **** *  USBFS_EVENT_PENDING    |The endpoint is awaiting CPU action
 952:Generated_Source\PSoC4/USBUART.c **** *  USBFS_NO_EVENT_ALLOWED |The endpoint is locked from access
 953:Generated_Source\PSoC4/USBUART.c **** *  USBFS_IN_BUFFER_FULL   |The IN endpoint is loaded and the mode is set to ACK IN
 954:Generated_Source\PSoC4/USBUART.c **** *  USBFS_IN_BUFFER_EMPTY  |An IN transaction occurred and more data can be loaded
 955:Generated_Source\PSoC4/USBUART.c **** *  USBFS_OUT_BUFFER_EMPTY |The OUT endpoint is set to ACK OUT and is waiting for data
 956:Generated_Source\PSoC4/USBUART.c **** *  USBFS_OUT_BUFFER_FULL  |An OUT transaction has occurred and data can be read
 957:Generated_Source\PSoC4/USBUART.c **** *
 958:Generated_Source\PSoC4/USBUART.c **** *******************************************************************************/
ARM GAS  C:\Users\essele\AppData\Local\Temp\ccmz8StT.s 			page 29


 959:Generated_Source\PSoC4/USBUART.c **** uint8 USBUART_GetEPState(uint8 epNumber) 
 960:Generated_Source\PSoC4/USBUART.c **** {
 632              		.loc 1 960 0
 633              		.cfi_startproc
 634              		@ args = 0, pretend = 0, frame = 0
 635              		@ frame_needed = 0, uses_anonymous_args = 0
 636              		@ link register save eliminated.
 637              	.LVL30:
 961:Generated_Source\PSoC4/USBUART.c ****     return (USBUART_EP[epNumber].apiEpState);
 638              		.loc 1 961 0
 639 0000 4300     		lsls	r3, r0, #1
 640 0002 1818     		adds	r0, r3, r0
 641              	.LVL31:
 642 0004 8300     		lsls	r3, r0, #2
 643 0006 024A     		ldr	r2, .L40
 644 0008 D318     		adds	r3, r2, r3
 645 000a 5878     		ldrb	r0, [r3, #1]
 646 000c C0B2     		uxtb	r0, r0
 962:Generated_Source\PSoC4/USBUART.c **** }
 647              		.loc 1 962 0
 648              		@ sp needed
 649 000e 7047     		bx	lr
 650              	.L41:
 651              		.align	2
 652              	.L40:
 653 0010 00000000 		.word	USBUART_EP
 654              		.cfi_endproc
 655              	.LFE10:
 656              		.size	USBUART_GetEPState, .-USBUART_GetEPState
 657              		.section	.text.USBUART_GetEPCount,"ax",%progbits
 658              		.align	2
 659              		.global	USBUART_GetEPCount
 660              		.code	16
 661              		.thumb_func
 662              		.type	USBUART_GetEPCount, %function
 663              	USBUART_GetEPCount:
 664              	.LFB11:
 963:Generated_Source\PSoC4/USBUART.c **** 
 964:Generated_Source\PSoC4/USBUART.c **** 
 965:Generated_Source\PSoC4/USBUART.c **** /*******************************************************************************
 966:Generated_Source\PSoC4/USBUART.c **** * Function Name: USBUART_GetEPCount
 967:Generated_Source\PSoC4/USBUART.c **** ****************************************************************************//**
 968:Generated_Source\PSoC4/USBUART.c **** *
 969:Generated_Source\PSoC4/USBUART.c **** *  This function supports Data Endpoints only(EP1-EP8).
 970:Generated_Source\PSoC4/USBUART.c **** *  Returns the transfer count for the requested endpoint.  The value from
 971:Generated_Source\PSoC4/USBUART.c **** *  the count registers includes 2 counts for the two byte checksum of the
 972:Generated_Source\PSoC4/USBUART.c **** *  packet.  This function subtracts the two counts.
 973:Generated_Source\PSoC4/USBUART.c **** *
 974:Generated_Source\PSoC4/USBUART.c **** *  \param epNumber Data Endpoint Number.
 975:Generated_Source\PSoC4/USBUART.c **** *                   Valid values are between 1 and 8.
 976:Generated_Source\PSoC4/USBUART.c **** *
 977:Generated_Source\PSoC4/USBUART.c **** * \return
 978:Generated_Source\PSoC4/USBUART.c **** *  Returns the current byte count from the specified endpoint or 0 for an
 979:Generated_Source\PSoC4/USBUART.c **** *  invalid endpoint.
 980:Generated_Source\PSoC4/USBUART.c **** *
 981:Generated_Source\PSoC4/USBUART.c **** *******************************************************************************/
 982:Generated_Source\PSoC4/USBUART.c **** uint16 USBUART_GetEPCount(uint8 epNumber) 
ARM GAS  C:\Users\essele\AppData\Local\Temp\ccmz8StT.s 			page 30


 983:Generated_Source\PSoC4/USBUART.c **** {
 665              		.loc 1 983 0
 666              		.cfi_startproc
 667              		@ args = 0, pretend = 0, frame = 0
 668              		@ frame_needed = 0, uses_anonymous_args = 0
 669              		@ link register save eliminated.
 670              	.LVL32:
 984:Generated_Source\PSoC4/USBUART.c ****     uint16 cntr = 0u;
 985:Generated_Source\PSoC4/USBUART.c **** 
 986:Generated_Source\PSoC4/USBUART.c ****     if ((epNumber > USBUART_EP0) && (epNumber < USBUART_MAX_EP))
 671              		.loc 1 986 0
 672 0000 431E     		subs	r3, r0, #1
 673 0002 DBB2     		uxtb	r3, r3
 674 0004 072B     		cmp	r3, #7
 675 0006 10D8     		bhi	.L44
 987:Generated_Source\PSoC4/USBUART.c ****     {
 988:Generated_Source\PSoC4/USBUART.c ****         /* Get 11-bits EP counter where epCnt0 - 3 bits MSB and epCnt1 - 8 bits LSB. */
 989:Generated_Source\PSoC4/USBUART.c ****         cntr  = ((uint16) USBUART_SIE_EP_BASE.sieEp[epNumber].epCnt0) & USBUART_EPX_CNT0_MASK;
 676              		.loc 1 989 0
 677 0008 8301     		lsls	r3, r0, #6
 678 000a 094A     		ldr	r2, .L45
 679 000c 9858     		ldr	r0, [r3, r2]
 680              	.LVL33:
 681 000e 80B2     		uxth	r0, r0
 682              	.LVL34:
 990:Generated_Source\PSoC4/USBUART.c ****         cntr  = ((uint16) (cntr << 8u)) | ((uint16) USBUART_SIE_EP_BASE.sieEp[epNumber].epCnt1);
 683              		.loc 1 990 0
 684 0010 0002     		lsls	r0, r0, #8
 685              	.LVL35:
 686 0012 F022     		movs	r2, #240
 687 0014 1201     		lsls	r2, r2, #4
 688 0016 1040     		ands	r0, r2
 689 0018 054A     		ldr	r2, .L45
 690 001a 9446     		mov	ip, r2
 691 001c 6344     		add	r3, r3, ip
 692 001e 5B68     		ldr	r3, [r3, #4]
 693 0020 1843     		orrs	r0, r3
 694 0022 80B2     		uxth	r0, r0
 695              	.LVL36:
 991:Generated_Source\PSoC4/USBUART.c ****         cntr -= USBUART_EPX_CNTX_CRC_COUNT;
 696              		.loc 1 991 0
 697 0024 0238     		subs	r0, r0, #2
 698              	.LVL37:
 699 0026 80B2     		uxth	r0, r0
 700              	.LVL38:
 701 0028 00E0     		b	.L43
 702              	.LVL39:
 703              	.L44:
 984:Generated_Source\PSoC4/USBUART.c **** 
 704              		.loc 1 984 0
 705 002a 0020     		movs	r0, #0
 706              	.LVL40:
 707              	.L43:
 992:Generated_Source\PSoC4/USBUART.c ****     }
 993:Generated_Source\PSoC4/USBUART.c **** 
 994:Generated_Source\PSoC4/USBUART.c ****     return (cntr);
 995:Generated_Source\PSoC4/USBUART.c **** }
ARM GAS  C:\Users\essele\AppData\Local\Temp\ccmz8StT.s 			page 31


 708              		.loc 1 995 0
 709              		@ sp needed
 710 002c 7047     		bx	lr
 711              	.L46:
 712 002e C046     		.align	2
 713              	.L45:
 714 0030 F0FF2B40 		.word	1076625392
 715              		.cfi_endproc
 716              	.LFE11:
 717              		.size	USBUART_GetEPCount, .-USBUART_GetEPCount
 718              		.section	.text.USBUART_LoadInEP,"ax",%progbits
 719              		.align	2
 720              		.global	USBUART_LoadInEP
 721              		.code	16
 722              		.thumb_func
 723              		.type	USBUART_LoadInEP, %function
 724              	USBUART_LoadInEP:
 725              	.LFB12:
 996:Generated_Source\PSoC4/USBUART.c **** 
 997:Generated_Source\PSoC4/USBUART.c **** 
 998:Generated_Source\PSoC4/USBUART.c **** #if (USBUART_EP_MANAGEMENT_DMA)
 999:Generated_Source\PSoC4/USBUART.c **** #if (CY_PSOC4)
1000:Generated_Source\PSoC4/USBUART.c ****     /*******************************************************************************
1001:Generated_Source\PSoC4/USBUART.c ****     * Function Name: USBUART_InitEpDma
1002:Generated_Source\PSoC4/USBUART.c ****     ****************************************************************************//**
1003:Generated_Source\PSoC4/USBUART.c ****     *
1004:Generated_Source\PSoC4/USBUART.c ****     *  This function configures priority for all DMA channels utilized by the
1005:Generated_Source\PSoC4/USBUART.c ****     *  component. Also sets callbacks for DMA auto mode.
1006:Generated_Source\PSoC4/USBUART.c ****     *
1007:Generated_Source\PSoC4/USBUART.c ****     *******************************************************************************/
1008:Generated_Source\PSoC4/USBUART.c ****     static void USBUART_InitEpDma(void)
1009:Generated_Source\PSoC4/USBUART.c ****     {
1010:Generated_Source\PSoC4/USBUART.c ****     #if (USBUART_DMA1_ACTIVE)
1011:Generated_Source\PSoC4/USBUART.c ****         CYDMA_CH_CTL_BASE.ctl[USBUART_ep1_dma_CHANNEL] = USBUART_ep1_dma_CHANNEL_CFG;
1012:Generated_Source\PSoC4/USBUART.c ****     #endif /* (USBUART_DMA1_ACTIVE) */
1013:Generated_Source\PSoC4/USBUART.c **** 
1014:Generated_Source\PSoC4/USBUART.c ****     #if (USBUART_DMA2_ACTIVE)
1015:Generated_Source\PSoC4/USBUART.c ****         CYDMA_CH_CTL_BASE.ctl[USBUART_ep2_dma_CHANNEL] = USBUART_ep2_dma_CHANNEL_CFG;
1016:Generated_Source\PSoC4/USBUART.c ****     #endif /* (USBUART_DMA2_ACTIVE) */
1017:Generated_Source\PSoC4/USBUART.c **** 
1018:Generated_Source\PSoC4/USBUART.c ****     #if (USBUART_DMA3_ACTIVE)
1019:Generated_Source\PSoC4/USBUART.c ****         CYDMA_CH_CTL_BASE.ctl[USBUART_ep3_dma_CHANNEL] = USBUART_ep3_dma_CHANNEL_CFG;
1020:Generated_Source\PSoC4/USBUART.c ****     #endif /* (USBUART_DMA3_ACTIVE) */
1021:Generated_Source\PSoC4/USBUART.c **** 
1022:Generated_Source\PSoC4/USBUART.c ****     #if (USBUART_DMA4_ACTIVE)
1023:Generated_Source\PSoC4/USBUART.c ****         CYDMA_CH_CTL_BASE.ctl[USBUART_ep4_dma_CHANNEL] = USBUART_ep4_dma_CHANNEL_CFG;
1024:Generated_Source\PSoC4/USBUART.c ****     #endif /* (USBUART_DMA4_ACTIVE) */
1025:Generated_Source\PSoC4/USBUART.c **** 
1026:Generated_Source\PSoC4/USBUART.c ****     #if (USBUART_DMA5_ACTIVE)
1027:Generated_Source\PSoC4/USBUART.c ****         CYDMA_CH_CTL_BASE.ctl[USBUART_ep5_dma_CHANNEL] = USBUART_ep5_dma_CHANNEL_CFG;
1028:Generated_Source\PSoC4/USBUART.c ****     #endif /* (USBUART_DMA5_ACTIVE) */
1029:Generated_Source\PSoC4/USBUART.c **** 
1030:Generated_Source\PSoC4/USBUART.c ****     #if (USBUART_DMA6_ACTIVE)
1031:Generated_Source\PSoC4/USBUART.c ****         CYDMA_CH_CTL_BASE.ctl[USBUART_ep6_dma_CHANNEL] = USBUART_ep6_dma_CHANNEL_CFG;
1032:Generated_Source\PSoC4/USBUART.c ****     #endif /* (USBUART_DMA6_ACTIVE) */
1033:Generated_Source\PSoC4/USBUART.c **** 
1034:Generated_Source\PSoC4/USBUART.c ****     #if (USBUART_DMA7_ACTIVE)
ARM GAS  C:\Users\essele\AppData\Local\Temp\ccmz8StT.s 			page 32


1035:Generated_Source\PSoC4/USBUART.c ****         CYDMA_CH_CTL_BASE.ctl[USBUART_ep7_dma_CHANNEL] = USBUART_ep7_dma_CHANNEL_CFG;
1036:Generated_Source\PSoC4/USBUART.c ****     #endif /* (USBUART_DMA7_ACTIVE) */
1037:Generated_Source\PSoC4/USBUART.c **** 
1038:Generated_Source\PSoC4/USBUART.c ****     #if (USBUART_DMA8_ACTIVE)
1039:Generated_Source\PSoC4/USBUART.c ****         CYDMA_CH_CTL_BASE.ctl[USBUART_ep8_dma_CHANNEL] = USBUART_ep8_dma_CHANNEL_CFG;
1040:Generated_Source\PSoC4/USBUART.c ****     #endif /* (USBUART_DMA8_ACTIVE) */
1041:Generated_Source\PSoC4/USBUART.c **** 
1042:Generated_Source\PSoC4/USBUART.c ****     #if (USBUART_EP_MANAGEMENT_DMA_AUTO)
1043:Generated_Source\PSoC4/USBUART.c ****         /* Initialize DMA channel callbacks. */
1044:Generated_Source\PSoC4/USBUART.c ****         #if (USBUART_DMA1_ACTIVE)
1045:Generated_Source\PSoC4/USBUART.c ****             (void) USBUART_ep1_dma_SetInterruptCallback(&USBUART_EP1_DMA_DONE_ISR);
1046:Generated_Source\PSoC4/USBUART.c ****         #endif /* (USBUART_DMA1_ACTIVE) */
1047:Generated_Source\PSoC4/USBUART.c **** 
1048:Generated_Source\PSoC4/USBUART.c ****         #if (USBUART_DMA2_ACTIVE)
1049:Generated_Source\PSoC4/USBUART.c ****             (void) USBUART_ep2_dma_SetInterruptCallback(&USBUART_EP2_DMA_DONE_ISR);
1050:Generated_Source\PSoC4/USBUART.c ****         #endif /* (USBUART_DMA2_ACTIVE) */
1051:Generated_Source\PSoC4/USBUART.c **** 
1052:Generated_Source\PSoC4/USBUART.c ****         #if (USBUART_DMA3_ACTIVE)
1053:Generated_Source\PSoC4/USBUART.c ****             (void) USBUART_ep3_dma_SetInterruptCallback(&USBUART_EP3_DMA_DONE_ISR);
1054:Generated_Source\PSoC4/USBUART.c ****         #endif /* (USBUART_DMA3_ACTIVE) */
1055:Generated_Source\PSoC4/USBUART.c **** 
1056:Generated_Source\PSoC4/USBUART.c ****         #if (USBUART_DMA4_ACTIVE)
1057:Generated_Source\PSoC4/USBUART.c ****             (void) USBUART_ep4_dma_SetInterruptCallback(&USBUART_EP4_DMA_DONE_ISR);
1058:Generated_Source\PSoC4/USBUART.c ****         #endif /* (USBUART_DMA4_ACTIVE) */
1059:Generated_Source\PSoC4/USBUART.c **** 
1060:Generated_Source\PSoC4/USBUART.c ****         #if (USBUART_DMA5_ACTIVE)
1061:Generated_Source\PSoC4/USBUART.c ****             (void) USBUART_ep5_dma_SetInterruptCallback(&USBUART_EP5_DMA_DONE_ISR);
1062:Generated_Source\PSoC4/USBUART.c ****         #endif /* (USBUART_DMA5_ACTIVE) */
1063:Generated_Source\PSoC4/USBUART.c **** 
1064:Generated_Source\PSoC4/USBUART.c ****         #if (USBUART_DMA6_ACTIVE)
1065:Generated_Source\PSoC4/USBUART.c ****             (void) USBUART_ep6_dma_SetInterruptCallback(&USBUART_EP6_DMA_DONE_ISR);
1066:Generated_Source\PSoC4/USBUART.c ****         #endif /* (USBUART_DMA6_ACTIVE) */
1067:Generated_Source\PSoC4/USBUART.c **** 
1068:Generated_Source\PSoC4/USBUART.c ****         #if (USBUART_DMA7_ACTIVE)
1069:Generated_Source\PSoC4/USBUART.c ****             (void) USBUART_ep7_dma_SetInterruptCallback(&USBUART_EP7_DMA_DONE_ISR);
1070:Generated_Source\PSoC4/USBUART.c ****         #endif /* (USBUART_DMA7_ACTIVE) */
1071:Generated_Source\PSoC4/USBUART.c **** 
1072:Generated_Source\PSoC4/USBUART.c ****         #if (USBUART_DMA8_ACTIVE)
1073:Generated_Source\PSoC4/USBUART.c ****             (void) USBUART_ep8_dma_SetInterruptCallback(&USBUART_EP8_DMA_DONE_ISR);
1074:Generated_Source\PSoC4/USBUART.c ****         #endif /* (USBUART_DMA8_ACTIVE) */
1075:Generated_Source\PSoC4/USBUART.c ****     #endif /* (USBUART_EP_MANAGEMENT_DMA_AUTO) */
1076:Generated_Source\PSoC4/USBUART.c ****     }
1077:Generated_Source\PSoC4/USBUART.c **** #else
1078:Generated_Source\PSoC4/USBUART.c **** 
1079:Generated_Source\PSoC4/USBUART.c **** 
1080:Generated_Source\PSoC4/USBUART.c ****     /***************************************************************************
1081:Generated_Source\PSoC4/USBUART.c ****     * Function Name: USBUART_InitEP_DMA
1082:Generated_Source\PSoC4/USBUART.c ****     ************************************************************************//**
1083:Generated_Source\PSoC4/USBUART.c ****     *
1084:Generated_Source\PSoC4/USBUART.c ****     *  This function allocates and initializes a DMA channel to be used by the
1085:Generated_Source\PSoC4/USBUART.c ****     *  USBUART_LoadInEP() or USBUART_ReadOutEP() APIs for data
1086:Generated_Source\PSoC4/USBUART.c ****     *  transfer. It is available when the Endpoint Memory Management parameter
1087:Generated_Source\PSoC4/USBUART.c ****     *  is set to DMA.
1088:Generated_Source\PSoC4/USBUART.c ****     *
1089:Generated_Source\PSoC4/USBUART.c ****     *  This function is automatically called from the USBFS_LoadInEP() and USBFS_ReadOutEP() APIs.
1090:Generated_Source\PSoC4/USBUART.c ****     *
1091:Generated_Source\PSoC4/USBUART.c ****     *  \param epNumber Contains the data endpoint number.
ARM GAS  C:\Users\essele\AppData\Local\Temp\ccmz8StT.s 			page 33


1092:Generated_Source\PSoC4/USBUART.c ****     *            Valid values are between 1 and 8.
1093:Generated_Source\PSoC4/USBUART.c ****     *  \param *pData Pointer to a data array that is related to the EP transfers.
1094:Generated_Source\PSoC4/USBUART.c ****     *
1095:Generated_Source\PSoC4/USBUART.c ****     * \reentrant No.
1096:Generated_Source\PSoC4/USBUART.c ****     *
1097:Generated_Source\PSoC4/USBUART.c ****     ***************************************************************************/
1098:Generated_Source\PSoC4/USBUART.c ****     void USBUART_InitEP_DMA(uint8 epNumber, const uint8 *pData)
1099:Generated_Source\PSoC4/USBUART.c ****                                                                     
1100:Generated_Source\PSoC4/USBUART.c ****     {
1101:Generated_Source\PSoC4/USBUART.c ****         uint16 src;
1102:Generated_Source\PSoC4/USBUART.c ****         uint16 dst;
1103:Generated_Source\PSoC4/USBUART.c **** 
1104:Generated_Source\PSoC4/USBUART.c ****     #if (CY_PSOC3)
1105:Generated_Source\PSoC4/USBUART.c ****         src = HI16(CYDEV_SRAM_BASE);
1106:Generated_Source\PSoC4/USBUART.c ****         dst = HI16(CYDEV_PERIPH_BASE);
1107:Generated_Source\PSoC4/USBUART.c ****         pData = pData;
1108:Generated_Source\PSoC4/USBUART.c ****     #else
1109:Generated_Source\PSoC4/USBUART.c ****         if ((USBUART_EP[epNumber].addr & USBUART_DIR_IN) != 0u)
1110:Generated_Source\PSoC4/USBUART.c ****         {
1111:Generated_Source\PSoC4/USBUART.c ****             /* IN endpoint: source is memory buffer. */
1112:Generated_Source\PSoC4/USBUART.c ****             src = HI16(pData);
1113:Generated_Source\PSoC4/USBUART.c ****             dst = HI16(CYDEV_PERIPH_BASE);
1114:Generated_Source\PSoC4/USBUART.c ****         }
1115:Generated_Source\PSoC4/USBUART.c ****         else
1116:Generated_Source\PSoC4/USBUART.c ****         {
1117:Generated_Source\PSoC4/USBUART.c ****             /* OUT endpoint: source is USB IP memory buffer. */
1118:Generated_Source\PSoC4/USBUART.c ****             src = HI16(CYDEV_PERIPH_BASE);
1119:Generated_Source\PSoC4/USBUART.c ****             dst = HI16(pData);
1120:Generated_Source\PSoC4/USBUART.c ****         }
1121:Generated_Source\PSoC4/USBUART.c ****     #endif  /* (CY_PSOC3) */
1122:Generated_Source\PSoC4/USBUART.c **** 
1123:Generated_Source\PSoC4/USBUART.c ****         switch(epNumber)
1124:Generated_Source\PSoC4/USBUART.c ****         {
1125:Generated_Source\PSoC4/USBUART.c ****     #if (USBUART_DMA1_ACTIVE)
1126:Generated_Source\PSoC4/USBUART.c ****         case USBUART_EP1:
1127:Generated_Source\PSoC4/USBUART.c ****             USBUART_DmaChan[epNumber] = USBUART_ep1_DmaInitialize(USBUART_DMA_BYTES_PER_BURST,
1128:Generated_Source\PSoC4/USBUART.c ****                                                                                     USBUART_DMA_REQ
1129:Generated_Source\PSoC4/USBUART.c ****             break;
1130:Generated_Source\PSoC4/USBUART.c ****     #endif /* (USBUART_DMA1_ACTIVE) */
1131:Generated_Source\PSoC4/USBUART.c **** 
1132:Generated_Source\PSoC4/USBUART.c ****     #if (USBUART_DMA2_ACTIVE)
1133:Generated_Source\PSoC4/USBUART.c ****         case USBUART_EP2:
1134:Generated_Source\PSoC4/USBUART.c ****             USBUART_DmaChan[epNumber] = USBUART_ep2_DmaInitialize(USBUART_DMA_BYTES_PER_BURST,
1135:Generated_Source\PSoC4/USBUART.c ****                                                                                     USBUART_DMA_REQ
1136:Generated_Source\PSoC4/USBUART.c ****             break;
1137:Generated_Source\PSoC4/USBUART.c ****     #endif /* (USBUART_DMA2_ACTIVE) */
1138:Generated_Source\PSoC4/USBUART.c **** 
1139:Generated_Source\PSoC4/USBUART.c ****     #if (USBUART_DMA3_ACTIVE)
1140:Generated_Source\PSoC4/USBUART.c ****             case USBUART_EP3:
1141:Generated_Source\PSoC4/USBUART.c ****                 USBUART_DmaChan[epNumber] = USBUART_ep3_DmaInitialize(USBUART_DMA_BYTES_PER_BURST,
1142:Generated_Source\PSoC4/USBUART.c ****                                                                                         USBUART_DMA
1143:Generated_Source\PSoC4/USBUART.c ****             break;
1144:Generated_Source\PSoC4/USBUART.c ****     #endif /* (USBUART_DMA3_ACTIVE) */
1145:Generated_Source\PSoC4/USBUART.c **** 
1146:Generated_Source\PSoC4/USBUART.c ****     #if (USBUART_DMA4_ACTIVE)
1147:Generated_Source\PSoC4/USBUART.c ****             case USBUART_EP4:
1148:Generated_Source\PSoC4/USBUART.c ****                 USBUART_DmaChan[epNumber] = USBUART_ep4_DmaInitialize(USBUART_DMA_BYTES_PER_BURST,
ARM GAS  C:\Users\essele\AppData\Local\Temp\ccmz8StT.s 			page 34


1149:Generated_Source\PSoC4/USBUART.c ****                                                                                         USBUART_DMA
1150:Generated_Source\PSoC4/USBUART.c ****             break;
1151:Generated_Source\PSoC4/USBUART.c ****     #endif /* (USBUART_DMA4_ACTIVE) */
1152:Generated_Source\PSoC4/USBUART.c **** 
1153:Generated_Source\PSoC4/USBUART.c ****     #if (USBUART_DMA5_ACTIVE)
1154:Generated_Source\PSoC4/USBUART.c ****             case USBUART_EP5:
1155:Generated_Source\PSoC4/USBUART.c ****                 USBUART_DmaChan[epNumber] = USBUART_ep5_DmaInitialize(USBUART_DMA_BYTES_PER_BURST,
1156:Generated_Source\PSoC4/USBUART.c ****                                                                                         USBUART_DMA
1157:Generated_Source\PSoC4/USBUART.c ****             break;
1158:Generated_Source\PSoC4/USBUART.c ****     #endif /* (USBUART_DMA5_ACTIVE) */
1159:Generated_Source\PSoC4/USBUART.c **** 
1160:Generated_Source\PSoC4/USBUART.c ****     #if (USBUART_DMA6_ACTIVE)
1161:Generated_Source\PSoC4/USBUART.c ****         case USBUART_EP6:
1162:Generated_Source\PSoC4/USBUART.c ****             USBUART_DmaChan[epNumber] = USBUART_ep6_DmaInitialize(USBUART_DMA_BYTES_PER_BURST,
1163:Generated_Source\PSoC4/USBUART.c ****                                                                                     USBUART_DMA_REQ
1164:Generated_Source\PSoC4/USBUART.c ****             break;
1165:Generated_Source\PSoC4/USBUART.c ****     #endif /* (USBUART_DMA6_ACTIVE) */
1166:Generated_Source\PSoC4/USBUART.c **** 
1167:Generated_Source\PSoC4/USBUART.c ****     #if (USBUART_DMA7_ACTIVE)
1168:Generated_Source\PSoC4/USBUART.c ****         case USBUART_EP7:
1169:Generated_Source\PSoC4/USBUART.c ****                 USBUART_DmaChan[epNumber] = USBUART_ep7_DmaInitialize(USBUART_DMA_BYTES_PER_BURST,
1170:Generated_Source\PSoC4/USBUART.c ****                                                                                         USBUART_DMA
1171:Generated_Source\PSoC4/USBUART.c ****             break;
1172:Generated_Source\PSoC4/USBUART.c ****     #endif /* (USBUART_DMA7_ACTIVE) */
1173:Generated_Source\PSoC4/USBUART.c **** 
1174:Generated_Source\PSoC4/USBUART.c ****     #if (USBUART_DMA8_ACTIVE)
1175:Generated_Source\PSoC4/USBUART.c ****         case USBUART_EP8:
1176:Generated_Source\PSoC4/USBUART.c ****                 USBUART_DmaChan[epNumber] = USBUART_ep8_DmaInitialize(USBUART_DMA_BYTES_PER_BURST,
1177:Generated_Source\PSoC4/USBUART.c ****                                                                                         USBUART_DMA
1178:Generated_Source\PSoC4/USBUART.c ****             break;
1179:Generated_Source\PSoC4/USBUART.c ****     #endif /* (USBUART_DMA8_ACTIVE) */
1180:Generated_Source\PSoC4/USBUART.c **** 
1181:Generated_Source\PSoC4/USBUART.c ****         default:
1182:Generated_Source\PSoC4/USBUART.c ****             /* Do nothing for endpoints other than 1-8. */
1183:Generated_Source\PSoC4/USBUART.c ****             break;
1184:Generated_Source\PSoC4/USBUART.c ****         }
1185:Generated_Source\PSoC4/USBUART.c **** 
1186:Generated_Source\PSoC4/USBUART.c ****         if ((epNumber > USBUART_EP0) && (epNumber < USBUART_MAX_EP))
1187:Generated_Source\PSoC4/USBUART.c ****         {
1188:Generated_Source\PSoC4/USBUART.c ****             USBUART_DmaTd[epNumber] = CyDmaTdAllocate();
1189:Generated_Source\PSoC4/USBUART.c **** 
1190:Generated_Source\PSoC4/USBUART.c ****         #if (USBUART_EP_MANAGEMENT_DMA_AUTO && (USBUART_EP_DMA_AUTO_OPT == 0u))
1191:Generated_Source\PSoC4/USBUART.c ****             USBUART_DmaNextTd[epNumber] = CyDmaTdAllocate();
1192:Generated_Source\PSoC4/USBUART.c ****         #endif /* (USBUART_EP_MANAGEMENT_DMA_AUTO && (USBUART_EP_DMA_AUTO_OPT == 0u)) */
1193:Generated_Source\PSoC4/USBUART.c ****         }
1194:Generated_Source\PSoC4/USBUART.c ****     }
1195:Generated_Source\PSoC4/USBUART.c **** #endif /* (CY_PSOC4) */
1196:Generated_Source\PSoC4/USBUART.c **** 
1197:Generated_Source\PSoC4/USBUART.c ****     /***************************************************************************
1198:Generated_Source\PSoC4/USBUART.c ****     * Function Name: USBUART_Stop_DMA
1199:Generated_Source\PSoC4/USBUART.c ****     ************************************************************************//**
1200:Generated_Source\PSoC4/USBUART.c ****     *  
1201:Generated_Source\PSoC4/USBUART.c ****     *  This function stops DMA channel associated with endpoint. It is available 
1202:Generated_Source\PSoC4/USBUART.c ****     *  when the Endpoint Buffer Management parameter is set to DMA. Call this 
1203:Generated_Source\PSoC4/USBUART.c ****     *  function when endpoint direction is changed from IN to OUT or vice versa 
1204:Generated_Source\PSoC4/USBUART.c ****     *  to trigger DMA re-configuration when USBUART_LoadInEP() or 
1205:Generated_Source\PSoC4/USBUART.c ****     *  USBUART_ReadOutEP() functions are called the first time. 
ARM GAS  C:\Users\essele\AppData\Local\Temp\ccmz8StT.s 			page 35


1206:Generated_Source\PSoC4/USBUART.c ****     *  
1207:Generated_Source\PSoC4/USBUART.c ****     *  \param epNumber: The data endpoint number for which associated DMA 
1208:Generated_Source\PSoC4/USBUART.c ****     *  channel is stopped. The range of valid values is between 1 and 8. To stop 
1209:Generated_Source\PSoC4/USBUART.c ****     *  all DMAs associated with endpoints call this function with 
1210:Generated_Source\PSoC4/USBUART.c ****     *  USBUART_MAX_EP argument.
1211:Generated_Source\PSoC4/USBUART.c ****     *
1212:Generated_Source\PSoC4/USBUART.c ****     * \reentrant
1213:Generated_Source\PSoC4/USBUART.c ****     *  No.
1214:Generated_Source\PSoC4/USBUART.c ****     *
1215:Generated_Source\PSoC4/USBUART.c ****     ***************************************************************************/
1216:Generated_Source\PSoC4/USBUART.c ****     void USBUART_Stop_DMA(uint8 epNumber) 
1217:Generated_Source\PSoC4/USBUART.c ****     {
1218:Generated_Source\PSoC4/USBUART.c ****         uint32 i;
1219:Generated_Source\PSoC4/USBUART.c **** 
1220:Generated_Source\PSoC4/USBUART.c ****         i = (epNumber < USBUART_MAX_EP) ? epNumber : USBUART_EP1;
1221:Generated_Source\PSoC4/USBUART.c **** 
1222:Generated_Source\PSoC4/USBUART.c ****         do
1223:Generated_Source\PSoC4/USBUART.c ****         {
1224:Generated_Source\PSoC4/USBUART.c ****         #if (CY_PSOC4)
1225:Generated_Source\PSoC4/USBUART.c ****             if (0u != USBUART_DmaChan[i])
1226:Generated_Source\PSoC4/USBUART.c ****             {
1227:Generated_Source\PSoC4/USBUART.c ****                 USBUART_CyDmaChDisable(USBUART_DmaChan[i]);
1228:Generated_Source\PSoC4/USBUART.c ****             }
1229:Generated_Source\PSoC4/USBUART.c ****         #else
1230:Generated_Source\PSoC4/USBUART.c ****             if(USBUART_DmaTd[i] != DMA_INVALID_TD)
1231:Generated_Source\PSoC4/USBUART.c ****             {
1232:Generated_Source\PSoC4/USBUART.c ****                 (void) CyDmaChDisable(USBUART_DmaChan[i]);
1233:Generated_Source\PSoC4/USBUART.c ****                 CyDmaTdFree(USBUART_DmaTd[i]);
1234:Generated_Source\PSoC4/USBUART.c ****                 USBUART_DmaTd[i] = DMA_INVALID_TD;
1235:Generated_Source\PSoC4/USBUART.c ****             }
1236:Generated_Source\PSoC4/USBUART.c **** 
1237:Generated_Source\PSoC4/USBUART.c ****             #if (USBUART_EP_MANAGEMENT_DMA_AUTO && (USBUART_EP_DMA_AUTO_OPT == 0u))
1238:Generated_Source\PSoC4/USBUART.c ****                 if(USBUART_DmaNextTd[i] != DMA_INVALID_TD)
1239:Generated_Source\PSoC4/USBUART.c ****                 {
1240:Generated_Source\PSoC4/USBUART.c ****                     CyDmaTdFree(USBUART_DmaNextTd[i]);
1241:Generated_Source\PSoC4/USBUART.c ****                     USBUART_DmaNextTd[i] = DMA_INVALID_TD;
1242:Generated_Source\PSoC4/USBUART.c ****                 }
1243:Generated_Source\PSoC4/USBUART.c ****             #endif /* (USBUART_EP_MANAGEMENT_DMA_AUTO && (USBUART_EP_DMA_AUTO_OPT == 0u)) */
1244:Generated_Source\PSoC4/USBUART.c **** 
1245:Generated_Source\PSoC4/USBUART.c ****         #endif /* (CY_PSOC4) */
1246:Generated_Source\PSoC4/USBUART.c ****             i++;
1247:Generated_Source\PSoC4/USBUART.c ****         }
1248:Generated_Source\PSoC4/USBUART.c ****         while ((i < USBUART_MAX_EP) && (epNumber == USBUART_MAX_EP));
1249:Generated_Source\PSoC4/USBUART.c ****     }
1250:Generated_Source\PSoC4/USBUART.c **** #endif /* (USBUART_EP_MANAGEMENT_DMA) */
1251:Generated_Source\PSoC4/USBUART.c **** 
1252:Generated_Source\PSoC4/USBUART.c **** 
1253:Generated_Source\PSoC4/USBUART.c **** #if (CY_PSOC3 || CY_PSOC5)
1254:Generated_Source\PSoC4/USBUART.c **** #if (USBUART_EP_MANAGEMENT_DMA_AUTO && (USBUART_EP_DMA_AUTO_OPT == 0u))
1255:Generated_Source\PSoC4/USBUART.c ****     /***************************************************************************
1256:Generated_Source\PSoC4/USBUART.c ****     * Function Name: USBUART_LoadNextInEP
1257:Generated_Source\PSoC4/USBUART.c ****     ************************************************************************//**
1258:Generated_Source\PSoC4/USBUART.c ****     *
1259:Generated_Source\PSoC4/USBUART.c ****     * Summary:
1260:Generated_Source\PSoC4/USBUART.c ****     *  This internal function is used for IN endpoint DMA reconfiguration in
1261:Generated_Source\PSoC4/USBUART.c ****     *  Auto DMA mode.
1262:Generated_Source\PSoC4/USBUART.c ****     *
ARM GAS  C:\Users\essele\AppData\Local\Temp\ccmz8StT.s 			page 36


1263:Generated_Source\PSoC4/USBUART.c ****     * Parameters:
1264:Generated_Source\PSoC4/USBUART.c ****     *  epNumber: Contains the data endpoint number.
1265:Generated_Source\PSoC4/USBUART.c ****     *  mode:   0 - Configure DMA to send the the rest of data.
1266:Generated_Source\PSoC4/USBUART.c ****     *          1 - Configure DMA to repeat 2 last bytes of the first burst.
1267:Generated_Source\PSoC4/USBUART.c ****     *
1268:Generated_Source\PSoC4/USBUART.c ****     ***************************************************************************/
1269:Generated_Source\PSoC4/USBUART.c ****     void USBUART_LoadNextInEP(uint8 epNumber, uint8 mode) 
1270:Generated_Source\PSoC4/USBUART.c ****     {
1271:Generated_Source\PSoC4/USBUART.c ****         reg16 *convert;
1272:Generated_Source\PSoC4/USBUART.c **** 
1273:Generated_Source\PSoC4/USBUART.c ****         if (mode == 0u)
1274:Generated_Source\PSoC4/USBUART.c ****         {
1275:Generated_Source\PSoC4/USBUART.c ****             /* Configure DMA to send rest of data. */
1276:Generated_Source\PSoC4/USBUART.c ****             /* CyDmaTdSetConfiguration API is optimized to change transfer length only and configur
1277:Generated_Source\PSoC4/USBUART.c ****             convert = (reg16 *) &CY_DMA_TDMEM_STRUCT_PTR[USBUART_DmaTd[epNumber]].TD0[0u];
1278:Generated_Source\PSoC4/USBUART.c ****             /* Set transfer length. */
1279:Generated_Source\PSoC4/USBUART.c ****             CY_SET_REG16(convert, USBUART_inLength[epNumber] - USBUART_DMA_BYTES_PER_BURST);
1280:Generated_Source\PSoC4/USBUART.c ****             /* CyDmaTdSetAddress API is optimized to change source address only. */
1281:Generated_Source\PSoC4/USBUART.c ****             convert = (reg16 *) &CY_DMA_TDMEM_STRUCT_PTR[USBUART_DmaTd[epNumber]].TD1[0u];
1282:Generated_Source\PSoC4/USBUART.c ****             CY_SET_REG16(convert, LO16((uint32)USBUART_inDataPointer[epNumber] +
1283:Generated_Source\PSoC4/USBUART.c ****                                             USBUART_DMA_BYTES_PER_BURST));
1284:Generated_Source\PSoC4/USBUART.c ****             USBUART_inBufFull[epNumber] = 1u;
1285:Generated_Source\PSoC4/USBUART.c ****         }
1286:Generated_Source\PSoC4/USBUART.c ****         else
1287:Generated_Source\PSoC4/USBUART.c ****         {
1288:Generated_Source\PSoC4/USBUART.c ****             /* Configure DMA to repeat 2 last bytes of the first burst. */
1289:Generated_Source\PSoC4/USBUART.c ****             /* CyDmaTdSetConfiguration API is optimized to change transfer length only and configur
1290:Generated_Source\PSoC4/USBUART.c ****             convert = (reg16 *) &CY_DMA_TDMEM_STRUCT_PTR[USBUART_DmaTd[epNumber]].TD0[0u];
1291:Generated_Source\PSoC4/USBUART.c ****             /* Set transfer length. */
1292:Generated_Source\PSoC4/USBUART.c ****             CY_SET_REG16(convert, USBUART_DMA_BYTES_REPEAT);
1293:Generated_Source\PSoC4/USBUART.c ****             /* CyDmaTdSetAddress API is optimized to change source address only. */
1294:Generated_Source\PSoC4/USBUART.c ****             convert = (reg16 *) &CY_DMA_TDMEM_STRUCT_PTR[USBUART_DmaTd[epNumber]].TD1[0u];
1295:Generated_Source\PSoC4/USBUART.c ****             CY_SET_REG16(convert,  LO16((uint32)USBUART_inDataPointer[epNumber] +
1296:Generated_Source\PSoC4/USBUART.c ****                                    (USBUART_DMA_BYTES_PER_BURST - USBUART_DMA_BYTES_REPEAT)));
1297:Generated_Source\PSoC4/USBUART.c ****         }
1298:Generated_Source\PSoC4/USBUART.c **** 
1299:Generated_Source\PSoC4/USBUART.c ****         /* CyDmaChSetInitialTd API is optimized to initialize TD. */
1300:Generated_Source\PSoC4/USBUART.c ****         CY_DMA_CH_STRUCT_PTR[USBUART_DmaChan[epNumber]].basic_status[1u] = USBUART_DmaTd[epNumber];
1301:Generated_Source\PSoC4/USBUART.c ****     }
1302:Generated_Source\PSoC4/USBUART.c **** #endif /* (USBUART_EP_MANAGEMENT_DMA_AUTO && (USBUART_EP_DMA_AUTO_OPT == 0u)) */
1303:Generated_Source\PSoC4/USBUART.c **** #endif /* (CY_PSOC3 || CY_PSOC5) */
1304:Generated_Source\PSoC4/USBUART.c **** 
1305:Generated_Source\PSoC4/USBUART.c **** 
1306:Generated_Source\PSoC4/USBUART.c **** /*******************************************************************************
1307:Generated_Source\PSoC4/USBUART.c **** * Function Name: USBUART_LoadInEP
1308:Generated_Source\PSoC4/USBUART.c **** ****************************************************************************//**
1309:Generated_Source\PSoC4/USBUART.c **** *
1310:Generated_Source\PSoC4/USBUART.c **** *  This function performs different functionality depending on the Component’s
1311:Generated_Source\PSoC4/USBUART.c **** *  configured Endpoint Buffer Management. This parameter is defined in
1312:Generated_Source\PSoC4/USBUART.c **** *  the Descriptor Root in Component Configure window.
1313:Generated_Source\PSoC4/USBUART.c **** *
1314:Generated_Source\PSoC4/USBUART.c **** *  *Manual (Static/Dynamic Allocation):*
1315:Generated_Source\PSoC4/USBUART.c **** *  This function loads and enables the specified USB data endpoint for an IN
1316:Generated_Source\PSoC4/USBUART.c **** *  data transfer.
1317:Generated_Source\PSoC4/USBUART.c **** *
1318:Generated_Source\PSoC4/USBUART.c **** *  *DMA with Manual Buffer Management:*
1319:Generated_Source\PSoC4/USBUART.c **** *  Configures DMA for a data transfer from system RAM to endpoint buffer.
ARM GAS  C:\Users\essele\AppData\Local\Temp\ccmz8StT.s 			page 37


1320:Generated_Source\PSoC4/USBUART.c **** *  Generates request for a transfer.
1321:Generated_Source\PSoC4/USBUART.c **** *
1322:Generated_Source\PSoC4/USBUART.c **** *  *DMA with Automatic Buffer Management:*
1323:Generated_Source\PSoC4/USBUART.c **** *  Configures DMA. This is required only once, so it is done only when parameter
1324:Generated_Source\PSoC4/USBUART.c **** *  pData is not NULL. When the pData pointer is NULL, the function skips this
1325:Generated_Source\PSoC4/USBUART.c **** *  task. Sets Data ready status: This generates the first DMA transfer and
1326:Generated_Source\PSoC4/USBUART.c **** *  prepares data in endpoint buffer.
1327:Generated_Source\PSoC4/USBUART.c **** *
1328:Generated_Source\PSoC4/USBUART.c **** *  \param epNumber Contains the data endpoint number.
1329:Generated_Source\PSoC4/USBUART.c **** *            Valid values are between 1 and 8.
1330:Generated_Source\PSoC4/USBUART.c **** *  \param *pData A pointer to a data array from which the data for the endpoint space
1331:Generated_Source\PSoC4/USBUART.c **** *          is loaded.
1332:Generated_Source\PSoC4/USBUART.c **** *  \param length The number of bytes to transfer from the array and then send as
1333:Generated_Source\PSoC4/USBUART.c **** *          a result of an IN request. Valid values are between 0 and 512
1334:Generated_Source\PSoC4/USBUART.c **** *          (1023 for DMA with Automatic Buffer Management mode). The value 512
1335:Generated_Source\PSoC4/USBUART.c **** *          is applicable if only one endpoint is used.
1336:Generated_Source\PSoC4/USBUART.c **** *
1337:Generated_Source\PSoC4/USBUART.c **** *
1338:Generated_Source\PSoC4/USBUART.c **** * \reentrant
1339:Generated_Source\PSoC4/USBUART.c **** *  No.
1340:Generated_Source\PSoC4/USBUART.c **** *
1341:Generated_Source\PSoC4/USBUART.c **** *******************************************************************************/
1342:Generated_Source\PSoC4/USBUART.c **** void USBUART_LoadInEP(uint8 epNumber, const uint8 pData[], uint16 length)
1343:Generated_Source\PSoC4/USBUART.c ****                                                                         
1344:Generated_Source\PSoC4/USBUART.c **** {
 726              		.loc 1 1344 0
 727              		.cfi_startproc
 728              		@ args = 0, pretend = 0, frame = 0
 729              		@ frame_needed = 0, uses_anonymous_args = 0
 730              	.LVL41:
 731 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 732              		.cfi_def_cfa_offset 20
 733              		.cfi_offset 4, -20
 734              		.cfi_offset 5, -16
 735              		.cfi_offset 6, -12
 736              		.cfi_offset 7, -8
 737              		.cfi_offset 14, -4
1345:Generated_Source\PSoC4/USBUART.c ****     if ((epNumber > USBUART_EP0) && (epNumber < USBUART_MAX_EP))
 738              		.loc 1 1345 0
 739 0002 431E     		subs	r3, r0, #1
 740 0004 DBB2     		uxtb	r3, r3
 741 0006 072B     		cmp	r3, #7
 742 0008 41D8     		bhi	.L47
1346:Generated_Source\PSoC4/USBUART.c ****     {
1347:Generated_Source\PSoC4/USBUART.c ****     #if (!USBUART_EP_MANAGEMENT_DMA_AUTO)
1348:Generated_Source\PSoC4/USBUART.c ****         /* Limit length to available buffer USB IP buffer size.*/
1349:Generated_Source\PSoC4/USBUART.c ****         if (length > (USBUART_EPX_DATA_BUF_MAX - USBUART_EP[epNumber].buffOffset))
 743              		.loc 1 1349 0
 744 000a 0600     		movs	r6, r0
 745 000c 4400     		lsls	r4, r0, #1
 746 000e 2418     		adds	r4, r4, r0
 747 0010 A300     		lsls	r3, r4, #2
 748 0012 1F4C     		ldr	r4, .L54
 749 0014 E318     		adds	r3, r4, r3
 750 0016 DC88     		ldrh	r4, [r3, #6]
 751 0018 8023     		movs	r3, #128
 752 001a 9B00     		lsls	r3, r3, #2
ARM GAS  C:\Users\essele\AppData\Local\Temp\ccmz8StT.s 			page 38


 753 001c 1B1B     		subs	r3, r3, r4
 754 001e 9A42     		cmp	r2, r3
 755 0020 09D9     		bls	.L49
1350:Generated_Source\PSoC4/USBUART.c ****         {
1351:Generated_Source\PSoC4/USBUART.c ****             length = USBUART_EPX_DATA_BUF_MAX - USBUART_EP[epNumber].buffOffset;
 756              		.loc 1 1351 0
 757 0022 4200     		lsls	r2, r0, #1
 758              	.LVL42:
 759 0024 1218     		adds	r2, r2, r0
 760 0026 9300     		lsls	r3, r2, #2
 761 0028 194A     		ldr	r2, .L54
 762 002a D318     		adds	r3, r2, r3
 763 002c DA88     		ldrh	r2, [r3, #6]
 764 002e 8023     		movs	r3, #128
 765 0030 9B00     		lsls	r3, r3, #2
 766 0032 9A1A     		subs	r2, r3, r2
 767 0034 92B2     		uxth	r2, r2
 768              	.LVL43:
 769              	.L49:
1352:Generated_Source\PSoC4/USBUART.c ****         }
1353:Generated_Source\PSoC4/USBUART.c ****     #endif /* (!USBUART_EP_MANAGEMENT_DMA_AUTO) */
1354:Generated_Source\PSoC4/USBUART.c **** 
1355:Generated_Source\PSoC4/USBUART.c ****         /* Set count and data toggle. */
1356:Generated_Source\PSoC4/USBUART.c ****         USBUART_SIE_EP_BASE.sieEp[epNumber].epCnt0 = (uint32) HI8(length) | USBUART_EP[epNumber].ep
 770              		.loc 1 1356 0
 771 0036 130A     		lsrs	r3, r2, #8
 772 0038 4500     		lsls	r5, r0, #1
 773 003a 2D18     		adds	r5, r5, r0
 774 003c AC00     		lsls	r4, r5, #2
 775 003e 144D     		ldr	r5, .L54
 776 0040 2C19     		adds	r4, r5, r4
 777 0042 E478     		ldrb	r4, [r4, #3]
 778 0044 1C43     		orrs	r4, r3
 779 0046 8301     		lsls	r3, r0, #6
 780 0048 124D     		ldr	r5, .L54+4
 781 004a 5C51     		str	r4, [r3, r5]
1357:Generated_Source\PSoC4/USBUART.c ****         USBUART_SIE_EP_BASE.sieEp[epNumber].epCnt1 = (uint32) LO8(length);
 782              		.loc 1 1357 0
 783 004c D4B2     		uxtb	r4, r2
 784 004e AC46     		mov	ip, r5
 785 0050 6344     		add	r3, r3, ip
 786 0052 5C60     		str	r4, [r3, #4]
1358:Generated_Source\PSoC4/USBUART.c **** 
1359:Generated_Source\PSoC4/USBUART.c ****     #if (USBUART_EP_MANAGEMENT_MANUAL)
1360:Generated_Source\PSoC4/USBUART.c ****         if (NULL != pData)
 787              		.loc 1 1360 0
 788 0054 0029     		cmp	r1, #0
 789 0056 09D1     		bne	.L53
 790              	.LBB2:
 791 0058 0BE0     		b	.L51
 792              	.LVL44:
 793              	.L52:
1361:Generated_Source\PSoC4/USBUART.c ****         {
1362:Generated_Source\PSoC4/USBUART.c **** 			/* Copy data using arbiter data register. */
1363:Generated_Source\PSoC4/USBUART.c ****             uint16 i;
1364:Generated_Source\PSoC4/USBUART.c ****             for (i = 0u; i < length; ++i)
1365:Generated_Source\PSoC4/USBUART.c ****             {
ARM GAS  C:\Users\essele\AppData\Local\Temp\ccmz8StT.s 			page 39


1366:Generated_Source\PSoC4/USBUART.c ****                 USBUART_ARB_EP_BASE.arbEp[epNumber].rwDr = pData[i];
 794              		.loc 1 1366 0 discriminator 3
 795 005a CD5C     		ldrb	r5, [r1, r3]
 796 005c B401     		lsls	r4, r6, #6
 797 005e 0E4F     		ldr	r7, .L54+8
 798 0060 BC46     		mov	ip, r7
 799 0062 6444     		add	r4, r4, ip
 800 0064 2562     		str	r5, [r4, #32]
1364:Generated_Source\PSoC4/USBUART.c ****             {
 801              		.loc 1 1364 0 discriminator 3
 802 0066 0133     		adds	r3, r3, #1
 803              	.LVL45:
 804 0068 9BB2     		uxth	r3, r3
 805              	.LVL46:
 806 006a 00E0     		b	.L50
 807              	.LVL47:
 808              	.L53:
 809              	.LBE2:
 810 006c 0023     		movs	r3, #0
 811              	.L50:
 812              	.LVL48:
 813              	.LBB3:
1364:Generated_Source\PSoC4/USBUART.c ****             {
 814              		.loc 1 1364 0 is_stmt 0 discriminator 1
 815 006e 9A42     		cmp	r2, r3
 816 0070 F3D8     		bhi	.L52
 817              	.LVL49:
 818              	.L51:
 819              	.LBE3:
1367:Generated_Source\PSoC4/USBUART.c ****             }
1368:Generated_Source\PSoC4/USBUART.c ****         }
1369:Generated_Source\PSoC4/USBUART.c **** 
1370:Generated_Source\PSoC4/USBUART.c ****         /* IN endpoint buffer is full - read to be read. */
1371:Generated_Source\PSoC4/USBUART.c ****         USBUART_EP[epNumber].apiEpState = USBUART_NO_EVENT_PENDING;
 820              		.loc 1 1371 0 is_stmt 1
 821 0072 4200     		lsls	r2, r0, #1
 822              	.LVL50:
 823 0074 1218     		adds	r2, r2, r0
 824 0076 9300     		lsls	r3, r2, #2
 825 0078 054A     		ldr	r2, .L54
 826 007a D318     		adds	r3, r2, r3
 827 007c 0022     		movs	r2, #0
 828 007e 5A70     		strb	r2, [r3, #1]
1372:Generated_Source\PSoC4/USBUART.c **** 
1373:Generated_Source\PSoC4/USBUART.c ****         /* Arm IN endpoint. */
1374:Generated_Source\PSoC4/USBUART.c ****         USBUART_SIE_EP_BASE.sieEp[epNumber].epCr0 = USBUART_EP[epNumber].epMode;
 829              		.loc 1 1374 0
 830 0080 5B79     		ldrb	r3, [r3, #5]
 831 0082 DBB2     		uxtb	r3, r3
 832 0084 8001     		lsls	r0, r0, #6
 833              	.LVL51:
 834 0086 034A     		ldr	r2, .L54+4
 835 0088 9446     		mov	ip, r2
 836 008a 6044     		add	r0, r0, ip
 837 008c 8360     		str	r3, [r0, #8]
 838              	.L47:
1375:Generated_Source\PSoC4/USBUART.c **** 
ARM GAS  C:\Users\essele\AppData\Local\Temp\ccmz8StT.s 			page 40


1376:Generated_Source\PSoC4/USBUART.c ****     #else
1377:Generated_Source\PSoC4/USBUART.c **** 
1378:Generated_Source\PSoC4/USBUART.c ****         #if (CY_PSOC3 || CY_PSOC5LP)
1379:Generated_Source\PSoC4/USBUART.c ****             /* Initialize DMA if it was not initialized. */
1380:Generated_Source\PSoC4/USBUART.c ****             if (DMA_INVALID_TD == USBUART_DmaTd[epNumber])
1381:Generated_Source\PSoC4/USBUART.c ****             {
1382:Generated_Source\PSoC4/USBUART.c ****                 USBUART_InitEP_DMA(epNumber, pData);
1383:Generated_Source\PSoC4/USBUART.c ****             }
1384:Generated_Source\PSoC4/USBUART.c ****         #endif /* (CY_PSOC3 || CY_PSOC5LP) */
1385:Generated_Source\PSoC4/USBUART.c **** 
1386:Generated_Source\PSoC4/USBUART.c ****         #if (USBUART_EP_MANAGEMENT_DMA_MANUAL)
1387:Generated_Source\PSoC4/USBUART.c ****             /* IN endpoint buffer will be fully loaded by DMA shortly. */
1388:Generated_Source\PSoC4/USBUART.c ****             USBUART_EP[epNumber].apiEpState = USBUART_NO_EVENT_PENDING;
1389:Generated_Source\PSoC4/USBUART.c **** 
1390:Generated_Source\PSoC4/USBUART.c ****             if ((pData != NULL) && (length > 0u))
1391:Generated_Source\PSoC4/USBUART.c ****             {
1392:Generated_Source\PSoC4/USBUART.c ****             #if (CY_PSOC4)
1393:Generated_Source\PSoC4/USBUART.c ****                 uint32 channelNum = (uint32) USBUART_DmaChan[epNumber];
1394:Generated_Source\PSoC4/USBUART.c **** 
1395:Generated_Source\PSoC4/USBUART.c ****                 /* Disable DMA channel: start configuration. */
1396:Generated_Source\PSoC4/USBUART.c ****                 USBUART_CyDmaChDisable(channelNum);
1397:Generated_Source\PSoC4/USBUART.c **** 
1398:Generated_Source\PSoC4/USBUART.c ****                 /* Configure source and destination. */
1399:Generated_Source\PSoC4/USBUART.c ****                 USBUART_CyDmaSetSrcAddress(channelNum, USBUART_DMA_DESCR0, (void*) pData);
1400:Generated_Source\PSoC4/USBUART.c ****                 USBUART_CyDmaSetDstAddress(channelNum, USBUART_DMA_DESCR0, (void*) &USBUART_ARB_EP_
1401:Generated_Source\PSoC4/USBUART.c **** 
1402:Generated_Source\PSoC4/USBUART.c ****                 /* Configure DMA descriptor. */
1403:Generated_Source\PSoC4/USBUART.c ****                 --length;
1404:Generated_Source\PSoC4/USBUART.c ****                 USBUART_CyDmaSetConfiguration(channelNum, USBUART_DMA_DESCR0, USBUART_DMA_COMMON_CF
1405:Generated_Source\PSoC4/USBUART.c ****                                                         CYDMA_BYTE | CYDMA_ELEMENT_WORD | CYDMA_INC
1406:Generated_Source\PSoC4/USBUART.c **** 
1407:Generated_Source\PSoC4/USBUART.c ****                 /* Validate descriptor to execute on following DMA request. */
1408:Generated_Source\PSoC4/USBUART.c ****                 USBUART_CyDmaValidateDescriptor(channelNum, USBUART_DMA_DESCR0);
1409:Generated_Source\PSoC4/USBUART.c **** 
1410:Generated_Source\PSoC4/USBUART.c ****                 /* Enable DMA channel: configuration complete. */
1411:Generated_Source\PSoC4/USBUART.c ****                 USBUART_CyDmaChEnable(channelNum);
1412:Generated_Source\PSoC4/USBUART.c ****             #else
1413:Generated_Source\PSoC4/USBUART.c ****                 /* Configure DMA to transfer data. */
1414:Generated_Source\PSoC4/USBUART.c ****                 (void) CyDmaChDisable(USBUART_DmaChan[epNumber]);
1415:Generated_Source\PSoC4/USBUART.c ****                 (void) CyDmaTdSetConfiguration(USBUART_DmaTd[epNumber], length, CY_DMA_DISABLE_TD, 
1416:Generated_Source\PSoC4/USBUART.c ****                 (void) CyDmaTdSetAddress(USBUART_DmaTd[epNumber], LO16((uint32) pData), LO16((uint3
1417:Generated_Source\PSoC4/USBUART.c **** 
1418:Generated_Source\PSoC4/USBUART.c ****                 /* Enable DMA channel. */
1419:Generated_Source\PSoC4/USBUART.c ****                 (void) CyDmaChSetInitialTd(USBUART_DmaChan[epNumber], USBUART_DmaTd[epNumber]);
1420:Generated_Source\PSoC4/USBUART.c ****                 (void) CyDmaChEnable(USBUART_DmaChan[epNumber], 1u);
1421:Generated_Source\PSoC4/USBUART.c ****             #endif /* (CY_PSOC4) */
1422:Generated_Source\PSoC4/USBUART.c **** 
1423:Generated_Source\PSoC4/USBUART.c ****                 /* Generate DMA request. */
1424:Generated_Source\PSoC4/USBUART.c ****                 USBUART_ARB_EP_BASE.arbEp[epNumber].epCfg |=  (uint32)  USBUART_ARB_EPX_CFG_DMA_REQ
1425:Generated_Source\PSoC4/USBUART.c ****                 USBUART_ARB_EP_BASE.arbEp[epNumber].epCfg &=  (uint32) ~USBUART_ARB_EPX_CFG_DMA_REQ
1426:Generated_Source\PSoC4/USBUART.c **** 
1427:Generated_Source\PSoC4/USBUART.c ****                 /* IN endpoint will be armed in ARB_ISR(source: IN_BUF_FULL) after first DMA transf
1428:Generated_Source\PSoC4/USBUART.c ****             }
1429:Generated_Source\PSoC4/USBUART.c ****             else
1430:Generated_Source\PSoC4/USBUART.c ****             {
1431:Generated_Source\PSoC4/USBUART.c ****                 /* When zero-length packet: arm IN endpoint directly. */
1432:Generated_Source\PSoC4/USBUART.c ****                 USBUART_SIE_EP_BASE.sieEp[epNumber].epCr0 = USBUART_EP[epNumber].epMode;
ARM GAS  C:\Users\essele\AppData\Local\Temp\ccmz8StT.s 			page 41


1433:Generated_Source\PSoC4/USBUART.c ****             }
1434:Generated_Source\PSoC4/USBUART.c ****         #endif /* (USBUART_EP_MANAGEMENT_DMA_MANUAL) */
1435:Generated_Source\PSoC4/USBUART.c **** 
1436:Generated_Source\PSoC4/USBUART.c ****         #if (USBUART_EP_MANAGEMENT_DMA_AUTO)
1437:Generated_Source\PSoC4/USBUART.c ****             if (pData != NULL)
1438:Generated_Source\PSoC4/USBUART.c ****             {
1439:Generated_Source\PSoC4/USBUART.c ****             #if (CY_PSOC4)
1440:Generated_Source\PSoC4/USBUART.c ****                 uint32 channelNum = (uint32) USBUART_DmaChan[epNumber];
1441:Generated_Source\PSoC4/USBUART.c **** 
1442:Generated_Source\PSoC4/USBUART.c ****                 /* Store address of buffer. */
1443:Generated_Source\PSoC4/USBUART.c ****                 USBUART_DmaEpBufferAddrBackup[epNumber] = (uint32) pData;
1444:Generated_Source\PSoC4/USBUART.c **** 
1445:Generated_Source\PSoC4/USBUART.c ****                 /* Disable DMA channel: start configuration. */
1446:Generated_Source\PSoC4/USBUART.c ****                 USBUART_CyDmaChDisable(channelNum);
1447:Generated_Source\PSoC4/USBUART.c **** 
1448:Generated_Source\PSoC4/USBUART.c ****                 /* Set destination address. */
1449:Generated_Source\PSoC4/USBUART.c ****                 USBUART_CyDmaSetDstAddress(channelNum, USBUART_DMA_DESCR0, (void*) &USBUART_ARB_EP_
1450:Generated_Source\PSoC4/USBUART.c ****                 USBUART_CyDmaSetDstAddress(channelNum, USBUART_DMA_DESCR1, (void*) &USBUART_ARB_EP_
1451:Generated_Source\PSoC4/USBUART.c **** 
1452:Generated_Source\PSoC4/USBUART.c ****                 /* Configure DMA descriptor. */
1453:Generated_Source\PSoC4/USBUART.c ****                 USBUART_CyDmaSetConfiguration(channelNum, USBUART_DMA_DESCR0, USBUART_DMA_COMMON_CF
1454:Generated_Source\PSoC4/USBUART.c ****                                                         CYDMA_BYTE | CYDMA_ELEMENT_WORD | CYDMA_INC
1455:Generated_Source\PSoC4/USBUART.c **** 
1456:Generated_Source\PSoC4/USBUART.c ****                 /* Configure DMA descriptor. */
1457:Generated_Source\PSoC4/USBUART.c ****                 USBUART_CyDmaSetConfiguration(channelNum, USBUART_DMA_DESCR1, USBUART_DMA_COMMON_CF
1458:Generated_Source\PSoC4/USBUART.c ****                                                         CYDMA_BYTE | CYDMA_ELEMENT_WORD | CYDMA_INC
1459:Generated_Source\PSoC4/USBUART.c **** 
1460:Generated_Source\PSoC4/USBUART.c ****                 /* Enable interrupt from DMA channel. */
1461:Generated_Source\PSoC4/USBUART.c ****                 USBUART_CyDmaSetInterruptMask(channelNum);
1462:Generated_Source\PSoC4/USBUART.c **** 
1463:Generated_Source\PSoC4/USBUART.c **** 
1464:Generated_Source\PSoC4/USBUART.c ****                 /* Enable DMA channel: configuration complete. */
1465:Generated_Source\PSoC4/USBUART.c ****                 USBUART_CyDmaChEnable(channelNum);
1466:Generated_Source\PSoC4/USBUART.c **** 
1467:Generated_Source\PSoC4/USBUART.c ****             #else
1468:Generated_Source\PSoC4/USBUART.c ****                 (void) CyDmaChDisable(USBUART_DmaChan[epNumber]);
1469:Generated_Source\PSoC4/USBUART.c **** 
1470:Generated_Source\PSoC4/USBUART.c ****                 #if (USBUART_EP_DMA_AUTO_OPT == 0u)
1471:Generated_Source\PSoC4/USBUART.c ****                     USBUART_inLength[epNumber] = length;
1472:Generated_Source\PSoC4/USBUART.c ****                     USBUART_inDataPointer[epNumber] = pData;
1473:Generated_Source\PSoC4/USBUART.c **** 
1474:Generated_Source\PSoC4/USBUART.c ****                     /* Configure DMA to send data only for first burst */
1475:Generated_Source\PSoC4/USBUART.c ****                     (void) CyDmaTdSetConfiguration(USBUART_DmaTd[epNumber],
1476:Generated_Source\PSoC4/USBUART.c ****                         (length > USBUART_DMA_BYTES_PER_BURST) ? USBUART_DMA_BYTES_PER_BURST : leng
1477:Generated_Source\PSoC4/USBUART.c ****                         USBUART_DmaNextTd[epNumber], TD_TERMIN_EN | TD_INC_SRC_ADR);
1478:Generated_Source\PSoC4/USBUART.c ****                     (void) CyDmaTdSetAddress(USBUART_DmaTd[epNumber], LO16((uint32) pData),
1479:Generated_Source\PSoC4/USBUART.c ****                                                                                LO16((uint32) &USBUA
1480:Generated_Source\PSoC4/USBUART.c **** 
1481:Generated_Source\PSoC4/USBUART.c ****                     /* The second TD will be executed only when the first one fails.
1482:Generated_Source\PSoC4/USBUART.c ****                     *  The intention of this TD is to generate NRQ interrupt
1483:Generated_Source\PSoC4/USBUART.c ****                     *  and repeat 2 last bytes of the first burst.
1484:Generated_Source\PSoC4/USBUART.c ****                     */
1485:Generated_Source\PSoC4/USBUART.c ****                     (void) CyDmaTdSetConfiguration(USBUART_DmaNextTd[epNumber], 1u,
1486:Generated_Source\PSoC4/USBUART.c ****                                                    USBUART_DmaNextTd[epNumber],
1487:Generated_Source\PSoC4/USBUART.c ****                                                    USBUART_epX_TD_TERMOUT_EN[epNumber]);
1488:Generated_Source\PSoC4/USBUART.c **** 
1489:Generated_Source\PSoC4/USBUART.c ****                     /* Configure DmaNextTd to clear Data Ready status. */
ARM GAS  C:\Users\essele\AppData\Local\Temp\ccmz8StT.s 			page 42


1490:Generated_Source\PSoC4/USBUART.c ****                     (void) CyDmaTdSetAddress(USBUART_DmaNextTd[epNumber], LO16((uint32) &clearInDat
1491:Generated_Source\PSoC4/USBUART.c ****                                                                                    LO16((uint32) &U
1492:Generated_Source\PSoC4/USBUART.c ****                 #else
1493:Generated_Source\PSoC4/USBUART.c ****                     /* Configure DMA to send all data. */
1494:Generated_Source\PSoC4/USBUART.c ****                     (void) CyDmaTdSetConfiguration(USBUART_DmaTd[epNumber], length,
1495:Generated_Source\PSoC4/USBUART.c ****                                                    USBUART_DmaTd[epNumber], TD_TERMIN_EN | TD_INC_S
1496:Generated_Source\PSoC4/USBUART.c ****                     (void) CyDmaTdSetAddress(USBUART_DmaTd[epNumber], LO16((uint32) pData),
1497:Generated_Source\PSoC4/USBUART.c ****                                                                                LO16((uint32) &USBUA
1498:Generated_Source\PSoC4/USBUART.c ****                 #endif /* (USBUART_EP_DMA_AUTO_OPT == 0u) */
1499:Generated_Source\PSoC4/USBUART.c **** 
1500:Generated_Source\PSoC4/USBUART.c ****                 /* Clear any potential pending DMA requests before starting DMA channel to transfer
1501:Generated_Source\PSoC4/USBUART.c ****                 (void) CyDmaClearPendingDrq(USBUART_DmaChan[epNumber]);
1502:Generated_Source\PSoC4/USBUART.c ****                 /* Enable DMA. */
1503:Generated_Source\PSoC4/USBUART.c ****                 (void) CyDmaChSetInitialTd(USBUART_DmaChan[epNumber], USBUART_DmaTd[epNumber]);
1504:Generated_Source\PSoC4/USBUART.c ****                 (void) CyDmaChEnable(USBUART_DmaChan[epNumber], 1u);
1505:Generated_Source\PSoC4/USBUART.c ****             #endif /* (CY_PSOC4) */
1506:Generated_Source\PSoC4/USBUART.c ****             }
1507:Generated_Source\PSoC4/USBUART.c ****             else
1508:Generated_Source\PSoC4/USBUART.c ****             {
1509:Generated_Source\PSoC4/USBUART.c ****                 /* IN endpoint buffer (32 bytes) will shortly be preloaded by DMA. */
1510:Generated_Source\PSoC4/USBUART.c ****                 USBUART_EP[epNumber].apiEpState = USBUART_NO_EVENT_PENDING;
1511:Generated_Source\PSoC4/USBUART.c **** 
1512:Generated_Source\PSoC4/USBUART.c ****                 if (length > 0u)
1513:Generated_Source\PSoC4/USBUART.c ****                 {
1514:Generated_Source\PSoC4/USBUART.c ****                 #if (CY_PSOC4)
1515:Generated_Source\PSoC4/USBUART.c ****                     uint32 lengthDescr0, lengthDescr1;
1516:Generated_Source\PSoC4/USBUART.c ****                     uint32 channelNum = (uint32) USBUART_DmaChan[epNumber];
1517:Generated_Source\PSoC4/USBUART.c **** 
1518:Generated_Source\PSoC4/USBUART.c ****                     /* Get number of full bursts. */
1519:Generated_Source\PSoC4/USBUART.c ****                     USBUART_DmaEpBurstCnt[epNumber] = (uint8) (length / USBUART_DMA_BYTES_PER_BURST
1520:Generated_Source\PSoC4/USBUART.c **** 
1521:Generated_Source\PSoC4/USBUART.c ****                     /* Get number of elements in the last burst. */
1522:Generated_Source\PSoC4/USBUART.c ****                     USBUART_DmaEpLastBurstEl[epNumber] = (uint8) (length % USBUART_DMA_BYTES_PER_BU
1523:Generated_Source\PSoC4/USBUART.c **** 
1524:Generated_Source\PSoC4/USBUART.c ****                     /* Get total number of bursts. */
1525:Generated_Source\PSoC4/USBUART.c ****                     USBUART_DmaEpBurstCnt[epNumber] += (0u != USBUART_DmaEpLastBurstEl[epNumber]) ?
1526:Generated_Source\PSoC4/USBUART.c **** 
1527:Generated_Source\PSoC4/USBUART.c ****                     /* Adjust number of data elements transferred in last burst. */
1528:Generated_Source\PSoC4/USBUART.c ****                     USBUART_DmaEpLastBurstEl[epNumber] = (0u != USBUART_DmaEpLastBurstEl[epNumber])
1529:Generated_Source\PSoC4/USBUART.c ****                                                                           (USBUART_DmaEpLastBurstEl
1530:Generated_Source\PSoC4/USBUART.c ****                                                                           (USBUART_DMA_BYTES_PER_BU
1531:Generated_Source\PSoC4/USBUART.c **** 
1532:Generated_Source\PSoC4/USBUART.c ****                     /* Get number of data elements to transfer for descriptor 0 and 1. */
1533:Generated_Source\PSoC4/USBUART.c ****                     lengthDescr0 = (1u == USBUART_DmaEpBurstCnt[epNumber]) ? USBUART_DmaEpLastBurst
1534:Generated_Source\PSoC4/USBUART.c ****                     lengthDescr1 = (2u == USBUART_DmaEpBurstCnt[epNumber]) ? USBUART_DmaEpLastBurst
1535:Generated_Source\PSoC4/USBUART.c **** 
1536:Generated_Source\PSoC4/USBUART.c **** 
1537:Generated_Source\PSoC4/USBUART.c ****                     /* Mark which descriptor is last one to execute. */
1538:Generated_Source\PSoC4/USBUART.c ****                     USBUART_DmaEpLastBurstEl[epNumber] |= (0u != (USBUART_DmaEpBurstCnt[epNumber] &
1539:Generated_Source\PSoC4/USBUART.c ****                                                                             USBUART_DMA_DESCR0_MASK
1540:Generated_Source\PSoC4/USBUART.c **** 
1541:Generated_Source\PSoC4/USBUART.c ****                     /* Restore DMA settings for current transfer. */
1542:Generated_Source\PSoC4/USBUART.c ****                     USBUART_CyDmaChDisable(channelNum);
1543:Generated_Source\PSoC4/USBUART.c **** 
1544:Generated_Source\PSoC4/USBUART.c ****                     /* Restore destination address for input endpoint. */
1545:Generated_Source\PSoC4/USBUART.c ****                     USBUART_CyDmaSetSrcAddress(channelNum, USBUART_DMA_DESCR0, (void*) ((uint32) US
1546:Generated_Source\PSoC4/USBUART.c ****                     USBUART_CyDmaSetSrcAddress(channelNum, USBUART_DMA_DESCR1, (void*) ((uint32) US
ARM GAS  C:\Users\essele\AppData\Local\Temp\ccmz8StT.s 			page 43


1547:Generated_Source\PSoC4/USBUART.c ****                                                                                                    
1548:Generated_Source\PSoC4/USBUART.c **** 
1549:Generated_Source\PSoC4/USBUART.c ****                     /* Set number of elements to transfer. */
1550:Generated_Source\PSoC4/USBUART.c ****                     USBUART_CyDmaSetNumDataElements(channelNum, USBUART_DMA_DESCR0, lengthDescr0);
1551:Generated_Source\PSoC4/USBUART.c ****                     USBUART_CyDmaSetNumDataElements(channelNum, USBUART_DMA_DESCR1, lengthDescr1);
1552:Generated_Source\PSoC4/USBUART.c **** 
1553:Generated_Source\PSoC4/USBUART.c ****                     /* Validate descriptor 0 and command to start with it. */
1554:Generated_Source\PSoC4/USBUART.c ****                     USBUART_CyDmaValidateDescriptor(channelNum, USBUART_DMA_DESCR0);
1555:Generated_Source\PSoC4/USBUART.c ****                     USBUART_CyDmaSetDescriptor0Next(channelNum);
1556:Generated_Source\PSoC4/USBUART.c **** 
1557:Generated_Source\PSoC4/USBUART.c ****                     /* Validate descriptor 1. */
1558:Generated_Source\PSoC4/USBUART.c ****                     if (USBUART_DmaEpBurstCnt[epNumber] > 1u)
1559:Generated_Source\PSoC4/USBUART.c ****                     {
1560:Generated_Source\PSoC4/USBUART.c ****                         USBUART_CyDmaValidateDescriptor(channelNum, USBUART_DMA_DESCR1); 
1561:Generated_Source\PSoC4/USBUART.c ****                     }                   
1562:Generated_Source\PSoC4/USBUART.c **** 
1563:Generated_Source\PSoC4/USBUART.c ****                     /* Adjust burst counter taking to account: 2 valid descriptors and interrupt tr
1564:Generated_Source\PSoC4/USBUART.c ****                     USBUART_DmaEpBurstCnt[epNumber] = USBUART_DMA_GET_BURST_CNT(USBUART_DmaEpBurstC
1565:Generated_Source\PSoC4/USBUART.c **** 
1566:Generated_Source\PSoC4/USBUART.c ****                     /* Enable DMA channel: configuration complete. */
1567:Generated_Source\PSoC4/USBUART.c ****                     USBUART_CyDmaChEnable(channelNum);
1568:Generated_Source\PSoC4/USBUART.c **** 
1569:Generated_Source\PSoC4/USBUART.c ****                 #elif (USBUART_EP_DMA_AUTO_OPT == 0u)
1570:Generated_Source\PSoC4/USBUART.c ****                     USBUART_inLength[epNumber]  = length;
1571:Generated_Source\PSoC4/USBUART.c ****                     USBUART_inBufFull[epNumber] = 0u;
1572:Generated_Source\PSoC4/USBUART.c **** 
1573:Generated_Source\PSoC4/USBUART.c ****                     (void) CyDmaChDisable(USBUART_DmaChan[epNumber]);
1574:Generated_Source\PSoC4/USBUART.c ****                     /* Configure DMA to send data only for first burst. */
1575:Generated_Source\PSoC4/USBUART.c ****                     (void) CyDmaTdSetConfiguration(
1576:Generated_Source\PSoC4/USBUART.c ****                         USBUART_DmaTd[epNumber], (length > USBUART_DMA_BYTES_PER_BURST) ?
1577:Generated_Source\PSoC4/USBUART.c ****                         USBUART_DMA_BYTES_PER_BURST : length,
1578:Generated_Source\PSoC4/USBUART.c ****                         USBUART_DmaNextTd[epNumber], TD_TERMIN_EN | TD_INC_SRC_ADR );
1579:Generated_Source\PSoC4/USBUART.c ****                     (void) CyDmaTdSetAddress(USBUART_DmaTd[epNumber], LO16((uint32)  USBUART_inData
1580:Generated_Source\PSoC4/USBUART.c ****                                                                                LO16((uint32) &USBUA
1581:Generated_Source\PSoC4/USBUART.c ****                     /* Clear Any potential pending DMA requests before starting DMA channel to tran
1582:Generated_Source\PSoC4/USBUART.c ****                     (void) CyDmaClearPendingDrq(USBUART_DmaChan[epNumber]);
1583:Generated_Source\PSoC4/USBUART.c ****                     /* Enable DMA. */
1584:Generated_Source\PSoC4/USBUART.c ****                     (void) CyDmaChSetInitialTd(USBUART_DmaChan[epNumber], USBUART_DmaTd[epNumber]);
1585:Generated_Source\PSoC4/USBUART.c ****                     (void) CyDmaChEnable(USBUART_DmaChan[epNumber], 1u);
1586:Generated_Source\PSoC4/USBUART.c ****                 #endif /* (CY_PSOC4) */
1587:Generated_Source\PSoC4/USBUART.c **** 
1588:Generated_Source\PSoC4/USBUART.c ****                 #if !defined (USBUART_MANUAL_IN_EP_ARM)
1589:Generated_Source\PSoC4/USBUART.c ****                     /* Set IN data ready to generate DMA request to load data into endpoint buffer.
1590:Generated_Source\PSoC4/USBUART.c ****                     USBUART_ARB_EP_BASE.arbEp[epNumber].epCfg |= USBUART_ARB_EPX_CFG_IN_DATA_RDY;
1591:Generated_Source\PSoC4/USBUART.c ****                 #endif  /* (USBUART_MANUAL_IN_EP_ARM) */
1592:Generated_Source\PSoC4/USBUART.c **** 
1593:Generated_Source\PSoC4/USBUART.c ****                     /* IN endpoint will be armed in ARB_ISR(source: IN_BUF_FULL) after first DMA tr
1594:Generated_Source\PSoC4/USBUART.c ****                 }
1595:Generated_Source\PSoC4/USBUART.c ****                 else
1596:Generated_Source\PSoC4/USBUART.c ****                 {
1597:Generated_Source\PSoC4/USBUART.c ****                     /* When zero-length packet: arm IN endpoint directly. */
1598:Generated_Source\PSoC4/USBUART.c ****                     USBUART_SIE_EP_BASE.sieEp[epNumber].epCr0 = USBUART_EP[epNumber].epMode;
1599:Generated_Source\PSoC4/USBUART.c ****                 }
1600:Generated_Source\PSoC4/USBUART.c ****             }
1601:Generated_Source\PSoC4/USBUART.c ****         #endif /* (USBUART_EP_MANAGEMENT_DMA_AUTO) */
1602:Generated_Source\PSoC4/USBUART.c ****     #endif /* (USBUART_EP_MANAGEMENT_MANUAL) */
1603:Generated_Source\PSoC4/USBUART.c ****     }
ARM GAS  C:\Users\essele\AppData\Local\Temp\ccmz8StT.s 			page 44


1604:Generated_Source\PSoC4/USBUART.c **** }
 839              		.loc 1 1604 0
 840              		@ sp needed
 841 008e F0BD     		pop	{r4, r5, r6, r7, pc}
 842              	.L55:
 843              		.align	2
 844              	.L54:
 845 0090 00000000 		.word	USBUART_EP
 846 0094 F0FF2B40 		.word	1076625392
 847 0098 C0012C40 		.word	1076625856
 848              		.cfi_endproc
 849              	.LFE12:
 850              		.size	USBUART_LoadInEP, .-USBUART_LoadInEP
 851              		.section	.text.USBUART_LoadInEP16,"ax",%progbits
 852              		.align	2
 853              		.global	USBUART_LoadInEP16
 854              		.code	16
 855              		.thumb_func
 856              		.type	USBUART_LoadInEP16, %function
 857              	USBUART_LoadInEP16:
 858              	.LFB14:
1605:Generated_Source\PSoC4/USBUART.c **** 
1606:Generated_Source\PSoC4/USBUART.c **** 
1607:Generated_Source\PSoC4/USBUART.c **** /*******************************************************************************
1608:Generated_Source\PSoC4/USBUART.c **** * Function Name: USBUART_ReadOutEP
1609:Generated_Source\PSoC4/USBUART.c **** ****************************************************************************//**
1610:Generated_Source\PSoC4/USBUART.c **** *
1611:Generated_Source\PSoC4/USBUART.c **** *   This function performs different functionality depending on the Component’s
1612:Generated_Source\PSoC4/USBUART.c **** *   configured Endpoint Buffer Management. This parameter is defined in the
1613:Generated_Source\PSoC4/USBUART.c **** *   Descriptor Root in Component Configure window.
1614:Generated_Source\PSoC4/USBUART.c **** *
1615:Generated_Source\PSoC4/USBUART.c **** *   *Manual (Static/Dynamic Allocation):*
1616:Generated_Source\PSoC4/USBUART.c **** *   This function moves the specified number of bytes from endpoint buffer to
1617:Generated_Source\PSoC4/USBUART.c **** *   system RAM. The number of bytes actually transferred from endpoint buffer to
1618:Generated_Source\PSoC4/USBUART.c **** *   system RAM is the lesser of the actual number of bytes sent by the host or
1619:Generated_Source\PSoC4/USBUART.c **** *   the number of bytes requested by the length parameter.
1620:Generated_Source\PSoC4/USBUART.c **** *
1621:Generated_Source\PSoC4/USBUART.c **** *   *DMA with Manual Buffer Management:*
1622:Generated_Source\PSoC4/USBUART.c **** *   Configure DMA to transfer data from endpoint buffer to system RAM. Generate
1623:Generated_Source\PSoC4/USBUART.c **** *   a DMA request. The firmware must wait until the DMA completes the data
1624:Generated_Source\PSoC4/USBUART.c **** *   transfer after calling the USBUART_ReadOutEP() API. For example,
1625:Generated_Source\PSoC4/USBUART.c **** *   by checking EPstate:
1626:Generated_Source\PSoC4/USBUART.c **** *
1627:Generated_Source\PSoC4/USBUART.c **** *   \snippet /USBFS_sut_02.cydsn/main.c checking EPstatey
1628:Generated_Source\PSoC4/USBUART.c **** *
1629:Generated_Source\PSoC4/USBUART.c **** *   The USBFS_EnableOutEP() has to be called to allow host to write data into
1630:Generated_Source\PSoC4/USBUART.c **** *   the endpoint buffer after DMA has completed transfer data from OUT endpoint
1631:Generated_Source\PSoC4/USBUART.c **** *   buffer to SRAM.
1632:Generated_Source\PSoC4/USBUART.c **** *
1633:Generated_Source\PSoC4/USBUART.c **** *   *DMA with Automatic Buffer Management:*
1634:Generated_Source\PSoC4/USBUART.c **** *   Configure DMA. This is required only once and automatically generates DMA
1635:Generated_Source\PSoC4/USBUART.c **** *   requests as data arrives
1636:Generated_Source\PSoC4/USBUART.c **** *
1637:Generated_Source\PSoC4/USBUART.c **** *  \param epNumber: Contains the data endpoint number.
1638:Generated_Source\PSoC4/USBUART.c **** *            Valid values are between 1 and 8.
1639:Generated_Source\PSoC4/USBUART.c **** *  \param pData: A pointer to a data array from which the data for the endpoint
1640:Generated_Source\PSoC4/USBUART.c **** *         space is loaded.
ARM GAS  C:\Users\essele\AppData\Local\Temp\ccmz8StT.s 			page 45


1641:Generated_Source\PSoC4/USBUART.c **** *  \param length: The number of bytes to transfer from the USB Out endpoint and
1642:Generated_Source\PSoC4/USBUART.c **** *          loads it into data array. Valid values are between 0 and 1023. The
1643:Generated_Source\PSoC4/USBUART.c **** *          function moves fewer than the requested number of bytes if the host
1644:Generated_Source\PSoC4/USBUART.c **** *          sends fewer bytes than requested.
1645:Generated_Source\PSoC4/USBUART.c **** *
1646:Generated_Source\PSoC4/USBUART.c **** * \return
1647:Generated_Source\PSoC4/USBUART.c **** *  Number of bytes received, 0 for an invalid endpoint.
1648:Generated_Source\PSoC4/USBUART.c **** *
1649:Generated_Source\PSoC4/USBUART.c **** * \reentrant
1650:Generated_Source\PSoC4/USBUART.c **** *  No.
1651:Generated_Source\PSoC4/USBUART.c **** *
1652:Generated_Source\PSoC4/USBUART.c **** *******************************************************************************/
1653:Generated_Source\PSoC4/USBUART.c **** uint16 USBUART_ReadOutEP(uint8 epNumber, uint8 pData[], uint16 length)
1654:Generated_Source\PSoC4/USBUART.c ****                                                                         
1655:Generated_Source\PSoC4/USBUART.c **** {
1656:Generated_Source\PSoC4/USBUART.c ****     if ((pData != NULL) && (epNumber > USBUART_EP0) && (epNumber < USBUART_MAX_EP))
1657:Generated_Source\PSoC4/USBUART.c ****     {
1658:Generated_Source\PSoC4/USBUART.c ****     #if (!USBUART_EP_MANAGEMENT_DMA_AUTO)
1659:Generated_Source\PSoC4/USBUART.c ****         /* Adjust requested length to available data. */
1660:Generated_Source\PSoC4/USBUART.c ****         length = (length > USBUART_GetEPCount(epNumber)) ? USBUART_GetEPCount(epNumber) : length;
1661:Generated_Source\PSoC4/USBUART.c ****     #endif /* (!USBUART_EP_MANAGEMENT_DMA_AUTO) */
1662:Generated_Source\PSoC4/USBUART.c **** 
1663:Generated_Source\PSoC4/USBUART.c ****     #if (USBUART_EP_MANAGEMENT_MANUAL)
1664:Generated_Source\PSoC4/USBUART.c ****         {
1665:Generated_Source\PSoC4/USBUART.c ****             /* Copy data using arbiter data register. */
1666:Generated_Source\PSoC4/USBUART.c ****             uint16 i;
1667:Generated_Source\PSoC4/USBUART.c ****             for (i = 0u; i < length; ++i)
1668:Generated_Source\PSoC4/USBUART.c ****             {
1669:Generated_Source\PSoC4/USBUART.c ****                 pData[i] = (uint8) USBUART_ARB_EP_BASE.arbEp[epNumber].rwDr;
1670:Generated_Source\PSoC4/USBUART.c ****             }
1671:Generated_Source\PSoC4/USBUART.c ****         }
1672:Generated_Source\PSoC4/USBUART.c **** 
1673:Generated_Source\PSoC4/USBUART.c ****         /* Arm OUT endpoint after data has been copied from endpoint buffer. */
1674:Generated_Source\PSoC4/USBUART.c ****         USBUART_EnableOutEP(epNumber);
1675:Generated_Source\PSoC4/USBUART.c ****     #else
1676:Generated_Source\PSoC4/USBUART.c **** 
1677:Generated_Source\PSoC4/USBUART.c ****         #if (CY_PSOC3 || CY_PSOC5LP)
1678:Generated_Source\PSoC4/USBUART.c ****             /* Initialize DMA if it was not initialized. */
1679:Generated_Source\PSoC4/USBUART.c ****             if (DMA_INVALID_TD == USBUART_DmaTd[epNumber])
1680:Generated_Source\PSoC4/USBUART.c ****             {
1681:Generated_Source\PSoC4/USBUART.c ****                 USBUART_InitEP_DMA(epNumber, pData);
1682:Generated_Source\PSoC4/USBUART.c ****             }
1683:Generated_Source\PSoC4/USBUART.c ****         #endif /* (CY_PSOC3 || CY_PSOC5LP) */
1684:Generated_Source\PSoC4/USBUART.c **** 
1685:Generated_Source\PSoC4/USBUART.c ****         #if (USBUART_EP_MANAGEMENT_DMA_MANUAL)
1686:Generated_Source\PSoC4/USBUART.c ****         #if (CY_PSOC4)
1687:Generated_Source\PSoC4/USBUART.c ****         {
1688:Generated_Source\PSoC4/USBUART.c ****             uint32 channelNum = (uint32) USBUART_DmaChan[epNumber];
1689:Generated_Source\PSoC4/USBUART.c **** 
1690:Generated_Source\PSoC4/USBUART.c ****             /* Disable DMA channel: start configuration. */
1691:Generated_Source\PSoC4/USBUART.c ****             USBUART_CyDmaChDisable(channelNum);
1692:Generated_Source\PSoC4/USBUART.c **** 
1693:Generated_Source\PSoC4/USBUART.c ****             /* Configure source and destination. */
1694:Generated_Source\PSoC4/USBUART.c ****             USBUART_CyDmaSetSrcAddress(channelNum, USBUART_DMA_DESCR0, (void*) &USBUART_ARB_EP_BASE
1695:Generated_Source\PSoC4/USBUART.c ****             USBUART_CyDmaSetDstAddress(channelNum, USBUART_DMA_DESCR0, (void*) pData);
1696:Generated_Source\PSoC4/USBUART.c **** 
1697:Generated_Source\PSoC4/USBUART.c ****             /* Configure DMA descriptor. */
ARM GAS  C:\Users\essele\AppData\Local\Temp\ccmz8StT.s 			page 46


1698:Generated_Source\PSoC4/USBUART.c ****             USBUART_CyDmaSetConfiguration(channelNum, USBUART_DMA_DESCR0, USBUART_DMA_COMMON_CFG | 
1699:Generated_Source\PSoC4/USBUART.c ****                                                     CYDMA_BYTE | CYDMA_WORD_ELEMENT | CYDMA_INC_DST
1700:Generated_Source\PSoC4/USBUART.c **** 
1701:Generated_Source\PSoC4/USBUART.c ****             /* Validate descriptor to execute on following DMA request. */
1702:Generated_Source\PSoC4/USBUART.c ****             USBUART_CyDmaValidateDescriptor(channelNum, USBUART_DMA_DESCR0);
1703:Generated_Source\PSoC4/USBUART.c **** 
1704:Generated_Source\PSoC4/USBUART.c ****             /* Enable DMA channel: configuration complete. */
1705:Generated_Source\PSoC4/USBUART.c ****             USBUART_CyDmaChEnable(channelNum);
1706:Generated_Source\PSoC4/USBUART.c ****         }
1707:Generated_Source\PSoC4/USBUART.c ****         #else
1708:Generated_Source\PSoC4/USBUART.c ****             /* Configure DMA to transfer data. */
1709:Generated_Source\PSoC4/USBUART.c ****             (void) CyDmaChDisable(USBUART_DmaChan[epNumber]);
1710:Generated_Source\PSoC4/USBUART.c ****             (void) CyDmaTdSetConfiguration(USBUART_DmaTd[epNumber], length, CY_DMA_DISABLE_TD, TD_T
1711:Generated_Source\PSoC4/USBUART.c ****             (void) CyDmaTdSetAddress(USBUART_DmaTd[epNumber], LO16((uint32) &USBUART_ARB_EP_BASE.ar
1712:Generated_Source\PSoC4/USBUART.c **** 
1713:Generated_Source\PSoC4/USBUART.c ****             /* Enable DMA channel. */
1714:Generated_Source\PSoC4/USBUART.c ****             (void) CyDmaChSetInitialTd(USBUART_DmaChan[epNumber], USBUART_DmaTd[epNumber]);
1715:Generated_Source\PSoC4/USBUART.c ****             (void) CyDmaChEnable(USBUART_DmaChan[epNumber], 1u);
1716:Generated_Source\PSoC4/USBUART.c ****         #endif /* (CY_PSOC4) */
1717:Generated_Source\PSoC4/USBUART.c **** 
1718:Generated_Source\PSoC4/USBUART.c ****             /* Generate DMA request. */
1719:Generated_Source\PSoC4/USBUART.c ****             USBUART_ARB_EP_BASE.arbEp[epNumber].epCfg |=  (uint32)  USBUART_ARB_EPX_CFG_DMA_REQ;
1720:Generated_Source\PSoC4/USBUART.c ****             USBUART_ARB_EP_BASE.arbEp[epNumber].epCfg &=  (uint32) ~USBUART_ARB_EPX_CFG_DMA_REQ;
1721:Generated_Source\PSoC4/USBUART.c **** 
1722:Generated_Source\PSoC4/USBUART.c ****             /* OUT endpoint has to be armed again by user when DMA transfers have been completed.
1723:Generated_Source\PSoC4/USBUART.c ****             * NO_EVENT_PENDING: notifies that data has been copied from endpoint buffer.
1724:Generated_Source\PSoC4/USBUART.c ****             */
1725:Generated_Source\PSoC4/USBUART.c **** 
1726:Generated_Source\PSoC4/USBUART.c ****         #endif /* (USBUART_EP_MANAGEMENT_DMA_MANUAL) */
1727:Generated_Source\PSoC4/USBUART.c **** 
1728:Generated_Source\PSoC4/USBUART.c ****         #if (USBUART_EP_MANAGEMENT_DMA_AUTO)
1729:Generated_Source\PSoC4/USBUART.c ****         #if (CY_PSOC4)
1730:Generated_Source\PSoC4/USBUART.c ****         {
1731:Generated_Source\PSoC4/USBUART.c ****             uint32 channelNum = (uint32) USBUART_DmaChan[epNumber];
1732:Generated_Source\PSoC4/USBUART.c ****             uint32 lengthDescr0, lengthDescr1;
1733:Generated_Source\PSoC4/USBUART.c **** 
1734:Generated_Source\PSoC4/USBUART.c ****             /* Get number of full bursts. */
1735:Generated_Source\PSoC4/USBUART.c ****             USBUART_DmaEpBurstCnt[epNumber] = (uint8) (length / USBUART_DMA_BYTES_PER_BURST);
1736:Generated_Source\PSoC4/USBUART.c **** 
1737:Generated_Source\PSoC4/USBUART.c ****             /* Get number of elements in the last burst. */
1738:Generated_Source\PSoC4/USBUART.c ****             USBUART_DmaEpLastBurstEl[epNumber] = (uint8) (length % USBUART_DMA_BYTES_PER_BURST);
1739:Generated_Source\PSoC4/USBUART.c **** 
1740:Generated_Source\PSoC4/USBUART.c ****             /* Get total number of bursts. */
1741:Generated_Source\PSoC4/USBUART.c ****             USBUART_DmaEpBurstCnt[epNumber] += (0u != USBUART_DmaEpLastBurstEl[epNumber]) ? 1u : 0u
1742:Generated_Source\PSoC4/USBUART.c **** 
1743:Generated_Source\PSoC4/USBUART.c ****             /* Adjust number of the data elements transfered in last burst. */
1744:Generated_Source\PSoC4/USBUART.c ****             USBUART_DmaEpLastBurstEl[epNumber] = (0u != USBUART_DmaEpLastBurstEl[epNumber]) ?
1745:Generated_Source\PSoC4/USBUART.c ****                                                                   (USBUART_DmaEpLastBurstEl[epNumbe
1746:Generated_Source\PSoC4/USBUART.c ****                                                                   (USBUART_DMA_BYTES_PER_BURST - 1u
1747:Generated_Source\PSoC4/USBUART.c **** 
1748:Generated_Source\PSoC4/USBUART.c ****             /* Get number of data elements to transfer for descriptor 0 and 1. */
1749:Generated_Source\PSoC4/USBUART.c ****             lengthDescr0 = (1u == USBUART_DmaEpBurstCnt[epNumber]) ? USBUART_DmaEpLastBurstEl[epNum
1750:Generated_Source\PSoC4/USBUART.c ****             lengthDescr1 = (2u == USBUART_DmaEpBurstCnt[epNumber]) ? USBUART_DmaEpLastBurstEl[epNum
1751:Generated_Source\PSoC4/USBUART.c **** 
1752:Generated_Source\PSoC4/USBUART.c ****             /* Mark if revert number of data elements in descriptor after transfer completion. */
1753:Generated_Source\PSoC4/USBUART.c ****             USBUART_DmaEpLastBurstEl[epNumber] |= (USBUART_DmaEpBurstCnt[epNumber] > 2u) ? USBUART_
1754:Generated_Source\PSoC4/USBUART.c **** 
ARM GAS  C:\Users\essele\AppData\Local\Temp\ccmz8StT.s 			page 47


1755:Generated_Source\PSoC4/USBUART.c ****             /* Mark last descriptor to be executed. */
1756:Generated_Source\PSoC4/USBUART.c ****             USBUART_DmaEpLastBurstEl[epNumber] |= (0u != (USBUART_DmaEpBurstCnt[epNumber] & 0x1u)) 
1757:Generated_Source\PSoC4/USBUART.c ****                                                                     USBUART_DMA_DESCR0_MASK : USBUA
1758:Generated_Source\PSoC4/USBUART.c **** 
1759:Generated_Source\PSoC4/USBUART.c ****             /* Store address of buffer and burst counter for endpoint. */
1760:Generated_Source\PSoC4/USBUART.c ****             USBUART_DmaEpBufferAddrBackup[epNumber] = (uint32) pData;
1761:Generated_Source\PSoC4/USBUART.c ****             USBUART_DmaEpBurstCntBackup[epNumber]   = USBUART_DmaEpBurstCnt[epNumber];
1762:Generated_Source\PSoC4/USBUART.c **** 
1763:Generated_Source\PSoC4/USBUART.c ****             /* Adjust burst counter taking to account: 2 valid descriptors and interrupt trigger af
1764:Generated_Source\PSoC4/USBUART.c ****             USBUART_DmaEpBurstCnt[epNumber] = USBUART_DMA_GET_BURST_CNT(USBUART_DmaEpBurstCnt[epNum
1765:Generated_Source\PSoC4/USBUART.c **** 
1766:Generated_Source\PSoC4/USBUART.c ****             /* Disable DMA channel: start configuration. */
1767:Generated_Source\PSoC4/USBUART.c ****             USBUART_CyDmaChDisable(channelNum);
1768:Generated_Source\PSoC4/USBUART.c **** 
1769:Generated_Source\PSoC4/USBUART.c ****             /* Set destination address. */
1770:Generated_Source\PSoC4/USBUART.c ****             USBUART_CyDmaSetSrcAddress(channelNum, USBUART_DMA_DESCR0, (void*) &USBUART_ARB_EP_BASE
1771:Generated_Source\PSoC4/USBUART.c ****             USBUART_CyDmaSetSrcAddress(channelNum, USBUART_DMA_DESCR1, (void*) &USBUART_ARB_EP_BASE
1772:Generated_Source\PSoC4/USBUART.c **** 
1773:Generated_Source\PSoC4/USBUART.c ****             USBUART_CyDmaSetDstAddress(channelNum, USBUART_DMA_DESCR0, (void*) ((uint32) pData));
1774:Generated_Source\PSoC4/USBUART.c ****             USBUART_CyDmaSetDstAddress(channelNum, USBUART_DMA_DESCR1, (void*) ((uint32) pData + US
1775:Generated_Source\PSoC4/USBUART.c **** 
1776:Generated_Source\PSoC4/USBUART.c ****             /* Configure DMA descriptor. */
1777:Generated_Source\PSoC4/USBUART.c ****             USBUART_CyDmaSetConfiguration(channelNum, USBUART_DMA_DESCR0, USBUART_DMA_COMMON_CFG  |
1778:Generated_Source\PSoC4/USBUART.c ****                                                     CYDMA_BYTE | CYDMA_WORD_ELEMENT | CYDMA_INC_DST
1779:Generated_Source\PSoC4/USBUART.c **** 
1780:Generated_Source\PSoC4/USBUART.c ****             /* Configure DMA descriptor. */
1781:Generated_Source\PSoC4/USBUART.c ****             USBUART_CyDmaSetConfiguration(channelNum, USBUART_DMA_DESCR1, USBUART_DMA_COMMON_CFG  |
1782:Generated_Source\PSoC4/USBUART.c ****                                                     CYDMA_BYTE | CYDMA_WORD_ELEMENT | CYDMA_INC_DST
1783:Generated_Source\PSoC4/USBUART.c **** 
1784:Generated_Source\PSoC4/USBUART.c ****             /* Enable interrupt from DMA channel. */
1785:Generated_Source\PSoC4/USBUART.c ****             USBUART_CyDmaSetInterruptMask(channelNum);
1786:Generated_Source\PSoC4/USBUART.c **** 
1787:Generated_Source\PSoC4/USBUART.c ****             /* Validate DMA descriptor 0 and 1. */
1788:Generated_Source\PSoC4/USBUART.c ****             USBUART_CyDmaValidateDescriptor(channelNum, USBUART_DMA_DESCR0);
1789:Generated_Source\PSoC4/USBUART.c **** 
1790:Generated_Source\PSoC4/USBUART.c ****             if (USBUART_DmaEpBurstCntBackup[epNumber] > 1u)
1791:Generated_Source\PSoC4/USBUART.c ****             {
1792:Generated_Source\PSoC4/USBUART.c ****                 USBUART_CyDmaValidateDescriptor(channelNum, USBUART_DMA_DESCR1);
1793:Generated_Source\PSoC4/USBUART.c ****             }
1794:Generated_Source\PSoC4/USBUART.c **** 
1795:Generated_Source\PSoC4/USBUART.c ****             /* Enable DMA channel: configuration complete. */
1796:Generated_Source\PSoC4/USBUART.c ****             USBUART_CyDmaChEnable(channelNum);
1797:Generated_Source\PSoC4/USBUART.c ****         }
1798:Generated_Source\PSoC4/USBUART.c ****         #else
1799:Generated_Source\PSoC4/USBUART.c ****             (void) CyDmaChDisable(USBUART_DmaChan[epNumber]);
1800:Generated_Source\PSoC4/USBUART.c ****             (void) CyDmaTdSetConfiguration(USBUART_DmaTd[epNumber], length,  USBUART_DmaTd[epNumber
1801:Generated_Source\PSoC4/USBUART.c ****             (void) CyDmaTdSetAddress(USBUART_DmaTd[epNumber], LO16((uint32) &USBUART_ARB_EP_BASE.ar
1802:Generated_Source\PSoC4/USBUART.c **** 
1803:Generated_Source\PSoC4/USBUART.c ****             /* Clear Any potential pending DMA requests before starting DMA channel to transfer dat
1804:Generated_Source\PSoC4/USBUART.c ****             (void) CyDmaClearPendingDrq(USBUART_DmaChan[epNumber]);
1805:Generated_Source\PSoC4/USBUART.c **** 
1806:Generated_Source\PSoC4/USBUART.c ****             /* Enable DMA channel. */
1807:Generated_Source\PSoC4/USBUART.c ****             (void) CyDmaChSetInitialTd(USBUART_DmaChan[epNumber], USBUART_DmaTd[epNumber]);
1808:Generated_Source\PSoC4/USBUART.c ****             (void) CyDmaChEnable(USBUART_DmaChan[epNumber], 1u);
1809:Generated_Source\PSoC4/USBUART.c ****         #endif /* (CY_PSOC4) */
1810:Generated_Source\PSoC4/USBUART.c **** 
1811:Generated_Source\PSoC4/USBUART.c ****             /* OUT endpoint has to be armed again by user when DMA transfers have been completed.
ARM GAS  C:\Users\essele\AppData\Local\Temp\ccmz8StT.s 			page 48


1812:Generated_Source\PSoC4/USBUART.c ****             * NO_EVENT_PENDING: notifies that data has been copied from endpoint buffer.
1813:Generated_Source\PSoC4/USBUART.c ****             */
1814:Generated_Source\PSoC4/USBUART.c **** 
1815:Generated_Source\PSoC4/USBUART.c ****         #endif /* (USBUART_EP_MANAGEMENT_DMA_AUTO) */
1816:Generated_Source\PSoC4/USBUART.c ****     #endif /* (USBUART_EP_MANAGEMENT_MANUAL) */
1817:Generated_Source\PSoC4/USBUART.c ****     }
1818:Generated_Source\PSoC4/USBUART.c ****     else
1819:Generated_Source\PSoC4/USBUART.c ****     {
1820:Generated_Source\PSoC4/USBUART.c ****         length = 0u;
1821:Generated_Source\PSoC4/USBUART.c ****     }
1822:Generated_Source\PSoC4/USBUART.c **** 
1823:Generated_Source\PSoC4/USBUART.c ****     return (length);
1824:Generated_Source\PSoC4/USBUART.c **** }
1825:Generated_Source\PSoC4/USBUART.c **** 
1826:Generated_Source\PSoC4/USBUART.c **** 
1827:Generated_Source\PSoC4/USBUART.c **** #if (USBUART_16BITS_EP_ACCESS_ENABLE)
1828:Generated_Source\PSoC4/USBUART.c **** /*******************************************************************************
1829:Generated_Source\PSoC4/USBUART.c **** * Function Name: USBUART_LoadInEP16
1830:Generated_Source\PSoC4/USBUART.c **** ****************************************************************************//**
1831:Generated_Source\PSoC4/USBUART.c **** *
1832:Generated_Source\PSoC4/USBUART.c **** *  This function performs different functionality depending on the Component’s
1833:Generated_Source\PSoC4/USBUART.c **** *  configured Endpoint Buffer Management. This parameter is defined in
1834:Generated_Source\PSoC4/USBUART.c **** *  the Descriptor Root in Component Configure window.
1835:Generated_Source\PSoC4/USBUART.c **** *
1836:Generated_Source\PSoC4/USBUART.c **** *  *Manual (Static/Dynamic Allocation):*
1837:Generated_Source\PSoC4/USBUART.c **** *  This function loads and enables the specified USB data endpoint for an IN
1838:Generated_Source\PSoC4/USBUART.c **** *  data transfer.
1839:Generated_Source\PSoC4/USBUART.c **** *
1840:Generated_Source\PSoC4/USBUART.c **** *  *DMA with Manual Buffer Management:*
1841:Generated_Source\PSoC4/USBUART.c **** *  Configures DMA for a data transfer from system RAM to endpoint buffer.
1842:Generated_Source\PSoC4/USBUART.c **** *  Generates request for a transfer.
1843:Generated_Source\PSoC4/USBUART.c **** *
1844:Generated_Source\PSoC4/USBUART.c **** *  *DMA with Automatic Buffer Management:*
1845:Generated_Source\PSoC4/USBUART.c **** *  Configures DMA. This is required only once, so it is done only when parameter
1846:Generated_Source\PSoC4/USBUART.c **** *  pData is not NULL. When the pData pointer is NULL, the function skips this
1847:Generated_Source\PSoC4/USBUART.c **** *  task. Sets Data ready status: This generates the first DMA transfer and
1848:Generated_Source\PSoC4/USBUART.c **** *  prepares data in endpoint buffer.
1849:Generated_Source\PSoC4/USBUART.c **** *
1850:Generated_Source\PSoC4/USBUART.c **** *  \param epNumber Contains the data endpoint number.
1851:Generated_Source\PSoC4/USBUART.c **** *        Valid values are between 1 and 8.
1852:Generated_Source\PSoC4/USBUART.c **** *  \param *pData A pointer to a data array from which the data for the endpoint
1853:Generated_Source\PSoC4/USBUART.c **** *        space is loaded. It shall be ensured that this pointer address is even
1854:Generated_Source\PSoC4/USBUART.c **** *        to ensure the 16-bit transfer is aligned to even address. Else, a hard
1855:Generated_Source\PSoC4/USBUART.c **** *        fault condition can occur.
1856:Generated_Source\PSoC4/USBUART.c **** *  \param length The number of bytes to transfer from the array and then send as
1857:Generated_Source\PSoC4/USBUART.c **** *        a result of an IN request. Valid values are between 0 and 512 (1023 for
1858:Generated_Source\PSoC4/USBUART.c **** *        DMA with Automatic Buffer Management mode). The value 512 is applicable
1859:Generated_Source\PSoC4/USBUART.c **** *        if only one endpoint is used.
1860:Generated_Source\PSoC4/USBUART.c **** *
1861:Generated_Source\PSoC4/USBUART.c **** * \reentrant
1862:Generated_Source\PSoC4/USBUART.c **** *  No.
1863:Generated_Source\PSoC4/USBUART.c **** *
1864:Generated_Source\PSoC4/USBUART.c **** *******************************************************************************/
1865:Generated_Source\PSoC4/USBUART.c **** void USBUART_LoadInEP16(uint8 epNumber, const uint8 pData[], uint16 length)
1866:Generated_Source\PSoC4/USBUART.c **** {
 859              		.loc 1 1866 0
 860              		.cfi_startproc
ARM GAS  C:\Users\essele\AppData\Local\Temp\ccmz8StT.s 			page 49


 861              		@ args = 0, pretend = 0, frame = 0
 862              		@ frame_needed = 0, uses_anonymous_args = 0
 863              	.LVL52:
 864 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 865              		.cfi_def_cfa_offset 24
 866              		.cfi_offset 3, -24
 867              		.cfi_offset 4, -20
 868              		.cfi_offset 5, -16
 869              		.cfi_offset 6, -12
 870              		.cfi_offset 7, -8
 871              		.cfi_offset 14, -4
 872 0002 0400     		movs	r4, r0
 873 0004 0D00     		movs	r5, r1
 874 0006 1700     		movs	r7, r2
1867:Generated_Source\PSoC4/USBUART.c ****     /* Check array alignment on half-word boundary. */
1868:Generated_Source\PSoC4/USBUART.c ****     CYASSERT(0u == (((uint32) pData) & 0x01u));
 875              		.loc 1 1868 0
 876 0008 CB07     		lsls	r3, r1, #31
 877 000a 02D5     		bpl	.L57
 878              		.loc 1 1868 0 is_stmt 0 discriminator 1
 879 000c 0020     		movs	r0, #0
 880              	.LVL53:
 881 000e FFF7FEFF 		bl	CyHalt
 882              	.LVL54:
 883              	.L57:
1869:Generated_Source\PSoC4/USBUART.c **** 
1870:Generated_Source\PSoC4/USBUART.c ****     if ((epNumber > USBUART_EP0) && (epNumber < USBUART_MAX_EP))
 884              		.loc 1 1870 0 is_stmt 1
 885 0012 631E     		subs	r3, r4, #1
 886 0014 DBB2     		uxtb	r3, r3
 887 0016 072B     		cmp	r3, #7
 888 0018 47D8     		bhi	.L56
1871:Generated_Source\PSoC4/USBUART.c ****     {
1872:Generated_Source\PSoC4/USBUART.c ****     #if (!USBUART_EP_MANAGEMENT_DMA_AUTO)
1873:Generated_Source\PSoC4/USBUART.c ****         /* Limit length to available buffer USB IP buffer size. */
1874:Generated_Source\PSoC4/USBUART.c ****         if (length > (USBUART_EPX_DATA_BUF_MAX - USBUART_EP[epNumber].buffOffset))
 889              		.loc 1 1874 0
 890 001a 2600     		movs	r6, r4
 891 001c 6200     		lsls	r2, r4, #1
 892 001e 1219     		adds	r2, r2, r4
 893 0020 9300     		lsls	r3, r2, #2
 894 0022 224A     		ldr	r2, .L64
 895 0024 D318     		adds	r3, r2, r3
 896 0026 DA88     		ldrh	r2, [r3, #6]
 897 0028 8023     		movs	r3, #128
 898 002a 9B00     		lsls	r3, r3, #2
 899 002c 9B1A     		subs	r3, r3, r2
 900 002e 9F42     		cmp	r7, r3
 901 0030 09D9     		bls	.L59
1875:Generated_Source\PSoC4/USBUART.c ****         {
1876:Generated_Source\PSoC4/USBUART.c ****             length = USBUART_EPX_DATA_BUF_MAX - USBUART_EP[epNumber].buffOffset;
 902              		.loc 1 1876 0
 903 0032 6200     		lsls	r2, r4, #1
 904 0034 1219     		adds	r2, r2, r4
 905 0036 9300     		lsls	r3, r2, #2
 906 0038 1C4A     		ldr	r2, .L64
 907 003a D318     		adds	r3, r2, r3
ARM GAS  C:\Users\essele\AppData\Local\Temp\ccmz8StT.s 			page 50


 908 003c DA88     		ldrh	r2, [r3, #6]
 909 003e 8023     		movs	r3, #128
 910 0040 9B00     		lsls	r3, r3, #2
 911 0042 9A1A     		subs	r2, r3, r2
 912 0044 97B2     		uxth	r7, r2
 913              	.LVL55:
 914              	.L59:
1877:Generated_Source\PSoC4/USBUART.c ****         }
1878:Generated_Source\PSoC4/USBUART.c ****     #endif /* (!USBUART_EP_MANAGEMENT_DMA_AUTO) */
1879:Generated_Source\PSoC4/USBUART.c **** 
1880:Generated_Source\PSoC4/USBUART.c ****         /* Set count and data toggle. */
1881:Generated_Source\PSoC4/USBUART.c ****         USBUART_SIE_EP_BASE.sieEp[epNumber].epCnt0 = (uint32) HI8(length) | USBUART_EP[epNumber].ep
 915              		.loc 1 1881 0
 916 0046 390A     		lsrs	r1, r7, #8
 917 0048 6200     		lsls	r2, r4, #1
 918 004a 1219     		adds	r2, r2, r4
 919 004c 9300     		lsls	r3, r2, #2
 920 004e 174A     		ldr	r2, .L64
 921 0050 D318     		adds	r3, r2, r3
 922 0052 DA78     		ldrb	r2, [r3, #3]
 923 0054 0A43     		orrs	r2, r1
 924 0056 A301     		lsls	r3, r4, #6
 925 0058 1549     		ldr	r1, .L64+4
 926 005a 5A50     		str	r2, [r3, r1]
1882:Generated_Source\PSoC4/USBUART.c ****         USBUART_SIE_EP_BASE.sieEp[epNumber].epCnt1 = (uint32) LO8(length);
 927              		.loc 1 1882 0
 928 005c FAB2     		uxtb	r2, r7
 929 005e 8C46     		mov	ip, r1
 930 0060 6344     		add	r3, r3, ip
 931 0062 5A60     		str	r2, [r3, #4]
1883:Generated_Source\PSoC4/USBUART.c **** 
1884:Generated_Source\PSoC4/USBUART.c ****         /* Adjust requested length: 2 bytes are handled at one data register access. */
1885:Generated_Source\PSoC4/USBUART.c ****         length += (length & 0x01u);
 932              		.loc 1 1885 0
 933 0064 0122     		movs	r2, #1
 934 0066 3A40     		ands	r2, r7
 935 0068 BA18     		adds	r2, r7, r2
 936 006a 92B2     		uxth	r2, r2
 937              	.LVL56:
1886:Generated_Source\PSoC4/USBUART.c **** 
1887:Generated_Source\PSoC4/USBUART.c ****     #if (USBUART_EP_MANAGEMENT_MANUAL)
1888:Generated_Source\PSoC4/USBUART.c ****         if (NULL != pData)
 938              		.loc 1 1888 0
 939 006c 002D     		cmp	r5, #0
 940 006e 0AD1     		bne	.L63
 941              	.LBB4:
 942 0070 0DE0     		b	.L61
 943              	.LVL57:
 944              	.L62:
1889:Generated_Source\PSoC4/USBUART.c ****         {
1890:Generated_Source\PSoC4/USBUART.c ****             /* Convert uint8 array to uint16. */
1891:Generated_Source\PSoC4/USBUART.c ****             const uint16 *dataBuf = (uint16 *) pData;
1892:Generated_Source\PSoC4/USBUART.c **** 
1893:Generated_Source\PSoC4/USBUART.c ****             /* Copy data using 16-bits arbiter data register. */
1894:Generated_Source\PSoC4/USBUART.c ****             uint16 i;
1895:Generated_Source\PSoC4/USBUART.c ****             for (i = 0u; i < (length >> 1u); ++i)
1896:Generated_Source\PSoC4/USBUART.c ****             {
ARM GAS  C:\Users\essele\AppData\Local\Temp\ccmz8StT.s 			page 51


1897:Generated_Source\PSoC4/USBUART.c ****                 USBUART_ARB_EP16_BASE.arbEp[epNumber].rwDr16 = dataBuf[i];
 945              		.loc 1 1897 0 discriminator 3
 946 0072 5900     		lsls	r1, r3, #1
 947 0074 485B     		ldrh	r0, [r1, r5]
 948 0076 B101     		lsls	r1, r6, #6
 949 0078 0E4F     		ldr	r7, .L64+8
 950 007a BC46     		mov	ip, r7
 951 007c 6144     		add	r1, r1, ip
 952 007e 0861     		str	r0, [r1, #16]
1895:Generated_Source\PSoC4/USBUART.c ****             {
 953              		.loc 1 1895 0 discriminator 3
 954 0080 0133     		adds	r3, r3, #1
 955              	.LVL58:
 956 0082 9BB2     		uxth	r3, r3
 957              	.LVL59:
 958 0084 00E0     		b	.L60
 959              	.LVL60:
 960              	.L63:
 961              	.LBE4:
 962 0086 0023     		movs	r3, #0
 963              	.L60:
 964              	.LVL61:
 965              	.LBB5:
1895:Generated_Source\PSoC4/USBUART.c ****             {
 966              		.loc 1 1895 0 is_stmt 0 discriminator 1
 967 0088 5108     		lsrs	r1, r2, #1
 968 008a 8B42     		cmp	r3, r1
 969 008c F1D3     		bcc	.L62
 970              	.LVL62:
 971              	.L61:
 972              	.LBE5:
1898:Generated_Source\PSoC4/USBUART.c ****             }
1899:Generated_Source\PSoC4/USBUART.c ****         }
1900:Generated_Source\PSoC4/USBUART.c **** 
1901:Generated_Source\PSoC4/USBUART.c ****         /* IN endpoint buffer is full - read to be read. */
1902:Generated_Source\PSoC4/USBUART.c ****         USBUART_EP[epNumber].apiEpState = USBUART_NO_EVENT_PENDING;
 973              		.loc 1 1902 0 is_stmt 1
 974 008e 6200     		lsls	r2, r4, #1
 975              	.LVL63:
 976 0090 1219     		adds	r2, r2, r4
 977 0092 9300     		lsls	r3, r2, #2
 978 0094 054A     		ldr	r2, .L64
 979 0096 D318     		adds	r3, r2, r3
 980 0098 0022     		movs	r2, #0
 981 009a 5A70     		strb	r2, [r3, #1]
1903:Generated_Source\PSoC4/USBUART.c **** 
1904:Generated_Source\PSoC4/USBUART.c ****         /* Arm IN endpoint. */
1905:Generated_Source\PSoC4/USBUART.c ****         USBUART_SIE_EP_BASE.sieEp[epNumber].epCr0 = USBUART_EP[epNumber].epMode;
 982              		.loc 1 1905 0
 983 009c 5B79     		ldrb	r3, [r3, #5]
 984 009e DBB2     		uxtb	r3, r3
 985 00a0 A401     		lsls	r4, r4, #6
 986 00a2 034A     		ldr	r2, .L64+4
 987 00a4 9446     		mov	ip, r2
 988 00a6 6444     		add	r4, r4, ip
 989 00a8 A360     		str	r3, [r4, #8]
 990              	.L56:
ARM GAS  C:\Users\essele\AppData\Local\Temp\ccmz8StT.s 			page 52


1906:Generated_Source\PSoC4/USBUART.c **** 
1907:Generated_Source\PSoC4/USBUART.c ****     #else
1908:Generated_Source\PSoC4/USBUART.c **** 
1909:Generated_Source\PSoC4/USBUART.c ****         #if (USBUART_EP_MANAGEMENT_DMA_MANUAL)
1910:Generated_Source\PSoC4/USBUART.c ****             /* IN endpoint buffer will be fully loaded by DMA shortly. */
1911:Generated_Source\PSoC4/USBUART.c ****             USBUART_EP[epNumber].apiEpState = USBUART_NO_EVENT_PENDING;
1912:Generated_Source\PSoC4/USBUART.c **** 
1913:Generated_Source\PSoC4/USBUART.c ****             if ((pData != NULL) && (length > 0u))
1914:Generated_Source\PSoC4/USBUART.c ****             {
1915:Generated_Source\PSoC4/USBUART.c ****                 uint32 channelNum = (uint32) USBUART_DmaChan[epNumber];
1916:Generated_Source\PSoC4/USBUART.c **** 
1917:Generated_Source\PSoC4/USBUART.c ****                 /* Disable DMA channel: start configuration. */
1918:Generated_Source\PSoC4/USBUART.c ****                 USBUART_CyDmaChDisable(channelNum);
1919:Generated_Source\PSoC4/USBUART.c **** 
1920:Generated_Source\PSoC4/USBUART.c ****                 /* Configure source and destination. */
1921:Generated_Source\PSoC4/USBUART.c ****                 USBUART_CyDmaSetSrcAddress(channelNum, USBUART_DMA_DESCR0, (void*) pData);
1922:Generated_Source\PSoC4/USBUART.c ****                 USBUART_CyDmaSetDstAddress(channelNum, USBUART_DMA_DESCR0, (void*) &USBUART_ARB_EP1
1923:Generated_Source\PSoC4/USBUART.c **** 
1924:Generated_Source\PSoC4/USBUART.c ****                 /* Configure DMA descriptor. */
1925:Generated_Source\PSoC4/USBUART.c ****                 length = (length >> 1u) - 1u;
1926:Generated_Source\PSoC4/USBUART.c ****                 USBUART_CyDmaSetConfiguration(channelNum, USBUART_DMA_DESCR0, USBUART_DMA_COMMON_CF
1927:Generated_Source\PSoC4/USBUART.c ****                                                         CYDMA_HALFWORD | CYDMA_ELEMENT_WORD | CYDMA
1928:Generated_Source\PSoC4/USBUART.c **** 
1929:Generated_Source\PSoC4/USBUART.c ****                 /* Validate descriptor to execute on following DMA request. */
1930:Generated_Source\PSoC4/USBUART.c ****                 USBUART_CyDmaValidateDescriptor(channelNum, USBUART_DMA_DESCR0);
1931:Generated_Source\PSoC4/USBUART.c **** 
1932:Generated_Source\PSoC4/USBUART.c ****                 /* Enable DMA channel: configuration complete. */
1933:Generated_Source\PSoC4/USBUART.c ****                 USBUART_CyDmaChEnable(channelNum);
1934:Generated_Source\PSoC4/USBUART.c **** 
1935:Generated_Source\PSoC4/USBUART.c ****                 /* Generate DMA request. */
1936:Generated_Source\PSoC4/USBUART.c ****                 USBUART_ARB_EP_BASE.arbEp[epNumber].epCfg |=  (uint32)  USBUART_ARB_EPX_CFG_DMA_REQ
1937:Generated_Source\PSoC4/USBUART.c ****                 USBUART_ARB_EP_BASE.arbEp[epNumber].epCfg &=  (uint32) ~USBUART_ARB_EPX_CFG_DMA_REQ
1938:Generated_Source\PSoC4/USBUART.c **** 
1939:Generated_Source\PSoC4/USBUART.c ****                 /* IN endpoint will be armed in ARB_ISR(source: IN_BUF_FULL) after first DMA transf
1940:Generated_Source\PSoC4/USBUART.c ****             }
1941:Generated_Source\PSoC4/USBUART.c ****             else
1942:Generated_Source\PSoC4/USBUART.c ****             {
1943:Generated_Source\PSoC4/USBUART.c ****                 /* When zero-length packet: arm IN endpoint directly. */
1944:Generated_Source\PSoC4/USBUART.c ****                 USBUART_SIE_EP_BASE.sieEp[epNumber].epCr0 = USBUART_EP[epNumber].epMode;
1945:Generated_Source\PSoC4/USBUART.c ****             }
1946:Generated_Source\PSoC4/USBUART.c ****         #endif /* (USBUART_EP_MANAGEMENT_DMA_MANUAL) */
1947:Generated_Source\PSoC4/USBUART.c **** 
1948:Generated_Source\PSoC4/USBUART.c ****         #if (USBUART_EP_MANAGEMENT_DMA_AUTO)
1949:Generated_Source\PSoC4/USBUART.c ****             if (pData != NULL)
1950:Generated_Source\PSoC4/USBUART.c ****             {
1951:Generated_Source\PSoC4/USBUART.c ****                 uint32 channelNum = (uint32) USBUART_DmaChan[epNumber];
1952:Generated_Source\PSoC4/USBUART.c **** 
1953:Generated_Source\PSoC4/USBUART.c ****                 /* Store address of buffer. */
1954:Generated_Source\PSoC4/USBUART.c ****                 USBUART_DmaEpBufferAddrBackup[epNumber] = (uint32) pData;
1955:Generated_Source\PSoC4/USBUART.c **** 
1956:Generated_Source\PSoC4/USBUART.c ****                 /* Disable DMA channel: start configuration. */
1957:Generated_Source\PSoC4/USBUART.c ****                 USBUART_CyDmaChDisable(channelNum);
1958:Generated_Source\PSoC4/USBUART.c **** 
1959:Generated_Source\PSoC4/USBUART.c ****                 /* Set destination address. */
1960:Generated_Source\PSoC4/USBUART.c ****                 USBUART_CyDmaSetDstAddress(channelNum, USBUART_DMA_DESCR0, (void*) &USBUART_ARB_EP1
1961:Generated_Source\PSoC4/USBUART.c ****                 USBUART_CyDmaSetDstAddress(channelNum, USBUART_DMA_DESCR1, (void*) &USBUART_ARB_EP1
1962:Generated_Source\PSoC4/USBUART.c **** 
ARM GAS  C:\Users\essele\AppData\Local\Temp\ccmz8StT.s 			page 53


1963:Generated_Source\PSoC4/USBUART.c ****                 /* Configure DMA descriptor. */
1964:Generated_Source\PSoC4/USBUART.c ****                 USBUART_CyDmaSetConfiguration(channelNum, USBUART_DMA_DESCR0, USBUART_DMA_COMMON_CF
1965:Generated_Source\PSoC4/USBUART.c ****                                                         CYDMA_HALFWORD | CYDMA_ELEMENT_WORD | CYDMA
1966:Generated_Source\PSoC4/USBUART.c **** 
1967:Generated_Source\PSoC4/USBUART.c ****                 /* Configure DMA descriptor. */
1968:Generated_Source\PSoC4/USBUART.c ****                 USBUART_CyDmaSetConfiguration(channelNum, USBUART_DMA_DESCR1, USBUART_DMA_COMMON_CF
1969:Generated_Source\PSoC4/USBUART.c ****                                                         CYDMA_HALFWORD | CYDMA_ELEMENT_WORD | CYDMA
1970:Generated_Source\PSoC4/USBUART.c **** 
1971:Generated_Source\PSoC4/USBUART.c ****                 /* Enable interrupt from DMA channel. */
1972:Generated_Source\PSoC4/USBUART.c ****                 USBUART_CyDmaSetInterruptMask(channelNum);
1973:Generated_Source\PSoC4/USBUART.c **** 
1974:Generated_Source\PSoC4/USBUART.c ****                 /* Enable DMA channel: configuration complete. */
1975:Generated_Source\PSoC4/USBUART.c ****                 USBUART_CyDmaChEnable(channelNum);
1976:Generated_Source\PSoC4/USBUART.c ****             }
1977:Generated_Source\PSoC4/USBUART.c ****             else
1978:Generated_Source\PSoC4/USBUART.c ****             {
1979:Generated_Source\PSoC4/USBUART.c ****                 /* IN endpoint buffer (32 bytes) will shortly be preloaded by DMA. */
1980:Generated_Source\PSoC4/USBUART.c ****                 USBUART_EP[epNumber].apiEpState = USBUART_NO_EVENT_PENDING;
1981:Generated_Source\PSoC4/USBUART.c **** 
1982:Generated_Source\PSoC4/USBUART.c ****                 if (length > 0u)
1983:Generated_Source\PSoC4/USBUART.c ****                 {
1984:Generated_Source\PSoC4/USBUART.c ****                     uint32 lengthDescr0, lengthDescr1;
1985:Generated_Source\PSoC4/USBUART.c ****                     uint32 channelNum = (uint32) USBUART_DmaChan[epNumber];
1986:Generated_Source\PSoC4/USBUART.c **** 
1987:Generated_Source\PSoC4/USBUART.c ****                     /* Get number of full bursts. */
1988:Generated_Source\PSoC4/USBUART.c ****                     USBUART_DmaEpBurstCnt[epNumber] = (uint8) (length / USBUART_DMA_BYTES_PER_BURST
1989:Generated_Source\PSoC4/USBUART.c **** 
1990:Generated_Source\PSoC4/USBUART.c ****                     /* Get number of elements in the last burst. */
1991:Generated_Source\PSoC4/USBUART.c ****                     USBUART_DmaEpLastBurstEl[epNumber] = (uint8) (length % USBUART_DMA_BYTES_PER_BU
1992:Generated_Source\PSoC4/USBUART.c **** 
1993:Generated_Source\PSoC4/USBUART.c ****                     /* Get total number of bursts. */
1994:Generated_Source\PSoC4/USBUART.c ****                     USBUART_DmaEpBurstCnt[epNumber] += (0u != USBUART_DmaEpLastBurstEl[epNumber]) ?
1995:Generated_Source\PSoC4/USBUART.c **** 
1996:Generated_Source\PSoC4/USBUART.c ****                     /* Adjust number of data elements transferred in last burst. */
1997:Generated_Source\PSoC4/USBUART.c ****                     USBUART_DmaEpLastBurstEl[epNumber] = (0u != USBUART_DmaEpLastBurstEl[epNumber])
1998:Generated_Source\PSoC4/USBUART.c ****                                                                           ((USBUART_DmaEpLastBurstE
1999:Generated_Source\PSoC4/USBUART.c ****                                                                            (USBUART_DMA_HALFWORDS_P
2000:Generated_Source\PSoC4/USBUART.c **** 
2001:Generated_Source\PSoC4/USBUART.c ****                     /* Get number of data elements to transfer for descriptor 0 and 1. */
2002:Generated_Source\PSoC4/USBUART.c ****                     lengthDescr0 = (1u == USBUART_DmaEpBurstCnt[epNumber]) ? USBUART_DmaEpLastBurst
2003:Generated_Source\PSoC4/USBUART.c ****                     lengthDescr1 = (2u == USBUART_DmaEpBurstCnt[epNumber]) ? USBUART_DmaEpLastBurst
2004:Generated_Source\PSoC4/USBUART.c **** 
2005:Generated_Source\PSoC4/USBUART.c ****                     /* Mark which descriptor is last one to execute. */
2006:Generated_Source\PSoC4/USBUART.c ****                     USBUART_DmaEpLastBurstEl[epNumber] |= (0u != (USBUART_DmaEpBurstCnt[epNumber] &
2007:Generated_Source\PSoC4/USBUART.c ****                                                                             USBUART_DMA_DESCR0_MASK
2008:Generated_Source\PSoC4/USBUART.c **** 
2009:Generated_Source\PSoC4/USBUART.c ****                     /* Restore DMA settings for current transfer. */
2010:Generated_Source\PSoC4/USBUART.c ****                     USBUART_CyDmaChDisable(channelNum);
2011:Generated_Source\PSoC4/USBUART.c **** 
2012:Generated_Source\PSoC4/USBUART.c ****                     /* Restore destination address for input endpoint. */
2013:Generated_Source\PSoC4/USBUART.c ****                     USBUART_CyDmaSetSrcAddress(channelNum, USBUART_DMA_DESCR0, (void*) ((uint32) US
2014:Generated_Source\PSoC4/USBUART.c ****                     USBUART_CyDmaSetSrcAddress(channelNum, USBUART_DMA_DESCR1, (void*) ((uint32) US
2015:Generated_Source\PSoC4/USBUART.c ****                                                                                                    
2016:Generated_Source\PSoC4/USBUART.c **** 
2017:Generated_Source\PSoC4/USBUART.c ****                     /* Set number of elements to transfer. */
2018:Generated_Source\PSoC4/USBUART.c ****                     USBUART_CyDmaSetNumDataElements(channelNum, USBUART_DMA_DESCR0, lengthDescr0);
2019:Generated_Source\PSoC4/USBUART.c ****                     USBUART_CyDmaSetNumDataElements(channelNum, USBUART_DMA_DESCR1, lengthDescr1);
ARM GAS  C:\Users\essele\AppData\Local\Temp\ccmz8StT.s 			page 54


2020:Generated_Source\PSoC4/USBUART.c **** 
2021:Generated_Source\PSoC4/USBUART.c ****                     /* Validate descriptor 0 and command to start with it. */
2022:Generated_Source\PSoC4/USBUART.c ****                     USBUART_CyDmaValidateDescriptor(channelNum, USBUART_DMA_DESCR0);
2023:Generated_Source\PSoC4/USBUART.c ****                     USBUART_CyDmaSetDescriptor0Next(channelNum);
2024:Generated_Source\PSoC4/USBUART.c **** 
2025:Generated_Source\PSoC4/USBUART.c ****                     /* Validate descriptor 1. */
2026:Generated_Source\PSoC4/USBUART.c ****                     if (USBUART_DmaEpBurstCnt[epNumber] > 1u)
2027:Generated_Source\PSoC4/USBUART.c ****                     {
2028:Generated_Source\PSoC4/USBUART.c ****                         USBUART_CyDmaValidateDescriptor(channelNum, USBUART_DMA_DESCR1);
2029:Generated_Source\PSoC4/USBUART.c ****                     }
2030:Generated_Source\PSoC4/USBUART.c **** 
2031:Generated_Source\PSoC4/USBUART.c ****                     /* Adjust burst counter taking to account: 2 valid descriptors and interrupt tr
2032:Generated_Source\PSoC4/USBUART.c ****                     USBUART_DmaEpBurstCnt[epNumber] = USBUART_DMA_GET_BURST_CNT(USBUART_DmaEpBurstC
2033:Generated_Source\PSoC4/USBUART.c **** 
2034:Generated_Source\PSoC4/USBUART.c ****                     /* Enable DMA channel: configuration complete. */
2035:Generated_Source\PSoC4/USBUART.c ****                     USBUART_CyDmaChEnable(channelNum);
2036:Generated_Source\PSoC4/USBUART.c **** 
2037:Generated_Source\PSoC4/USBUART.c ****                 #if !defined (USBUART_MANUAL_IN_EP_ARM)
2038:Generated_Source\PSoC4/USBUART.c ****                     /* Set IN data ready to generate DMA request to load data into endpoint buffer.
2039:Generated_Source\PSoC4/USBUART.c ****                     USBUART_ARB_EP_BASE.arbEp[epNumber].epCfg |= USBUART_ARB_EPX_CFG_IN_DATA_RDY;
2040:Generated_Source\PSoC4/USBUART.c ****                 #endif  /* (USBUART_MANUAL_IN_EP_ARM) */
2041:Generated_Source\PSoC4/USBUART.c **** 
2042:Generated_Source\PSoC4/USBUART.c ****                     /* IN endpoint will be armed in ARB_ISR(source: IN_BUF_FULL) after first DMA tr
2043:Generated_Source\PSoC4/USBUART.c ****                 }
2044:Generated_Source\PSoC4/USBUART.c ****                 else
2045:Generated_Source\PSoC4/USBUART.c ****                 {
2046:Generated_Source\PSoC4/USBUART.c ****                     /* When zero-length packet: arm IN endpoint directly. */
2047:Generated_Source\PSoC4/USBUART.c ****                     USBUART_SIE_EP_BASE.sieEp[epNumber].epCr0 = USBUART_EP[epNumber].epMode;
2048:Generated_Source\PSoC4/USBUART.c ****                 }
2049:Generated_Source\PSoC4/USBUART.c ****             }
2050:Generated_Source\PSoC4/USBUART.c ****         #endif /* (USBUART_EP_MANAGEMENT_DMA_AUTO) */
2051:Generated_Source\PSoC4/USBUART.c ****     #endif /* (USBUART_EP_MANAGEMENT_MANUAL) */
2052:Generated_Source\PSoC4/USBUART.c ****     }
2053:Generated_Source\PSoC4/USBUART.c **** }
 991              		.loc 1 2053 0
 992              		@ sp needed
 993              	.LVL64:
 994 00aa F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 995              	.L65:
 996              		.align	2
 997              	.L64:
 998 00ac 00000000 		.word	USBUART_EP
 999 00b0 F0FF2B40 		.word	1076625392
 1000 00b4 D0112C40 		.word	1076629968
 1001              		.cfi_endproc
 1002              	.LFE14:
 1003              		.size	USBUART_LoadInEP16, .-USBUART_LoadInEP16
 1004              		.section	.text.USBUART_EnableOutEP,"ax",%progbits
 1005              		.align	2
 1006              		.global	USBUART_EnableOutEP
 1007              		.code	16
 1008              		.thumb_func
 1009              		.type	USBUART_EnableOutEP, %function
 1010              	USBUART_EnableOutEP:
 1011              	.LFB16:
2054:Generated_Source\PSoC4/USBUART.c **** 
2055:Generated_Source\PSoC4/USBUART.c **** 
ARM GAS  C:\Users\essele\AppData\Local\Temp\ccmz8StT.s 			page 55


2056:Generated_Source\PSoC4/USBUART.c **** /*******************************************************************************
2057:Generated_Source\PSoC4/USBUART.c **** * Function Name: USBUART_ReadOutEP16
2058:Generated_Source\PSoC4/USBUART.c **** ****************************************************************************//**
2059:Generated_Source\PSoC4/USBUART.c **** *
2060:Generated_Source\PSoC4/USBUART.c **** *   This function performs different functionality depending on the Component’s
2061:Generated_Source\PSoC4/USBUART.c **** *   configured Endpoint Buffer Management. This parameter is defined in the
2062:Generated_Source\PSoC4/USBUART.c **** *   Descriptor Root in Component Configure window.
2063:Generated_Source\PSoC4/USBUART.c **** *
2064:Generated_Source\PSoC4/USBUART.c **** *   *Manual (Static/Dynamic Allocation):*
2065:Generated_Source\PSoC4/USBUART.c **** *   This function moves the specified number of bytes from endpoint buffer to
2066:Generated_Source\PSoC4/USBUART.c **** *   system RAM. The number of bytes actually transferred from endpoint buffer to
2067:Generated_Source\PSoC4/USBUART.c **** *   system RAM is the lesser of the actual number of bytes sent by the host or
2068:Generated_Source\PSoC4/USBUART.c **** *   the number of bytes requested by the length parameter.
2069:Generated_Source\PSoC4/USBUART.c **** *
2070:Generated_Source\PSoC4/USBUART.c **** *   *DMA with Manual Buffer Management:*
2071:Generated_Source\PSoC4/USBUART.c **** *   Configure DMA to transfer data from endpoint buffer to system RAM. Generate
2072:Generated_Source\PSoC4/USBUART.c **** *   a DMA request. The firmware must wait until the DMA completes the data
2073:Generated_Source\PSoC4/USBUART.c **** *   transfer after calling the USBUART_ReadOutEP() API. For example,
2074:Generated_Source\PSoC4/USBUART.c **** *   by checking EPstate:
2075:Generated_Source\PSoC4/USBUART.c **** *
2076:Generated_Source\PSoC4/USBUART.c **** *   \snippet /USBFS_sut_02.cydsn/main.c checking EPstatey
2077:Generated_Source\PSoC4/USBUART.c **** *
2078:Generated_Source\PSoC4/USBUART.c **** *   The USBFS_EnableOutEP() has to be called to allow host to write data into
2079:Generated_Source\PSoC4/USBUART.c **** *   the endpoint buffer after DMA has completed transfer data from OUT endpoint
2080:Generated_Source\PSoC4/USBUART.c **** *   buffer to SRAM.
2081:Generated_Source\PSoC4/USBUART.c **** *
2082:Generated_Source\PSoC4/USBUART.c **** *   *DMA with Automatic Buffer Management:*
2083:Generated_Source\PSoC4/USBUART.c **** *   Configure DMA. This is required only once and automatically generates DMA
2084:Generated_Source\PSoC4/USBUART.c **** *   requests as data arrives
2085:Generated_Source\PSoC4/USBUART.c **** *
2086:Generated_Source\PSoC4/USBUART.c **** *  \param epNumber: Contains the data endpoint number.
2087:Generated_Source\PSoC4/USBUART.c **** *         Valid values are between 1 and 8.
2088:Generated_Source\PSoC4/USBUART.c **** *  \param pData: A pointer to a data array into which the data for the endpoint
2089:Generated_Source\PSoC4/USBUART.c **** *         space is copied. It shall be ensured that this pointer address is
2090:Generated_Source\PSoC4/USBUART.c **** *         even to ensure the 16-bit transfer is aligned to even address. Else,
2091:Generated_Source\PSoC4/USBUART.c **** *         a hard fault condition can occur.
2092:Generated_Source\PSoC4/USBUART.c **** *  \param length: The number of bytes to transfer from the USB Out endpoint and
2093:Generated_Source\PSoC4/USBUART.c **** *         loads it into data array. Valid values are between 0 and 1023. The
2094:Generated_Source\PSoC4/USBUART.c **** *         function moves fewer than the requested number of bytes if the host
2095:Generated_Source\PSoC4/USBUART.c **** *         sends fewer bytes than requested.
2096:Generated_Source\PSoC4/USBUART.c **** *
2097:Generated_Source\PSoC4/USBUART.c **** * \return
2098:Generated_Source\PSoC4/USBUART.c **** *  Number of bytes received, 0 for an invalid endpoint.
2099:Generated_Source\PSoC4/USBUART.c **** *
2100:Generated_Source\PSoC4/USBUART.c **** * \reentrant
2101:Generated_Source\PSoC4/USBUART.c **** *  No.
2102:Generated_Source\PSoC4/USBUART.c **** *
2103:Generated_Source\PSoC4/USBUART.c **** *******************************************************************************/
2104:Generated_Source\PSoC4/USBUART.c **** uint16 USBUART_ReadOutEP16(uint8 epNumber, uint8 pData[], uint16 length)
2105:Generated_Source\PSoC4/USBUART.c **** {
2106:Generated_Source\PSoC4/USBUART.c ****     uint32 adjLength;
2107:Generated_Source\PSoC4/USBUART.c **** 
2108:Generated_Source\PSoC4/USBUART.c ****     /* Check array alignment on half-word boundary */
2109:Generated_Source\PSoC4/USBUART.c ****     CYASSERT(0u == (((uint32) pData) & 0x01u));
2110:Generated_Source\PSoC4/USBUART.c **** 
2111:Generated_Source\PSoC4/USBUART.c ****     if ((pData != NULL) && (epNumber > USBUART_EP0) && (epNumber < USBUART_MAX_EP))
2112:Generated_Source\PSoC4/USBUART.c ****     {
ARM GAS  C:\Users\essele\AppData\Local\Temp\ccmz8StT.s 			page 56


2113:Generated_Source\PSoC4/USBUART.c ****     #if (!USBUART_EP_MANAGEMENT_DMA_AUTO)
2114:Generated_Source\PSoC4/USBUART.c ****         /* Adjust requested length to available data. */
2115:Generated_Source\PSoC4/USBUART.c ****         length = (length > USBUART_GetEPCount(epNumber)) ? USBUART_GetEPCount(epNumber) : length;
2116:Generated_Source\PSoC4/USBUART.c ****     #endif /* (!USBUART_EP_MANAGEMENT_DMA_AUTO) */
2117:Generated_Source\PSoC4/USBUART.c **** 
2118:Generated_Source\PSoC4/USBUART.c ****     /* Adjust requested length: 2 bytes are handled at one data register access. */
2119:Generated_Source\PSoC4/USBUART.c ****     adjLength =  length + ((uint32)length & 1u);
2120:Generated_Source\PSoC4/USBUART.c **** 
2121:Generated_Source\PSoC4/USBUART.c ****     #if (USBUART_EP_MANAGEMENT_MANUAL)
2122:Generated_Source\PSoC4/USBUART.c ****         {
2123:Generated_Source\PSoC4/USBUART.c ****             /* Convert uint8 array to uint16. */
2124:Generated_Source\PSoC4/USBUART.c ****             uint16 *dataBuf = (uint16 *) pData;
2125:Generated_Source\PSoC4/USBUART.c **** 
2126:Generated_Source\PSoC4/USBUART.c ****             /* Copy data using 16-bits arbiter data register. */
2127:Generated_Source\PSoC4/USBUART.c ****             uint16 i;
2128:Generated_Source\PSoC4/USBUART.c ****             for (i = 0u; i < (adjLength >> 1u); ++i)
2129:Generated_Source\PSoC4/USBUART.c ****             {
2130:Generated_Source\PSoC4/USBUART.c ****                 dataBuf[i] = (uint16) USBUART_ARB_EP16_BASE.arbEp[epNumber].rwDr16;
2131:Generated_Source\PSoC4/USBUART.c ****             }
2132:Generated_Source\PSoC4/USBUART.c ****         }
2133:Generated_Source\PSoC4/USBUART.c **** 
2134:Generated_Source\PSoC4/USBUART.c ****         /* Arm OUT endpoint after data has been read from endpoint buffer. */
2135:Generated_Source\PSoC4/USBUART.c ****         USBUART_EnableOutEP(epNumber);
2136:Generated_Source\PSoC4/USBUART.c ****     #else
2137:Generated_Source\PSoC4/USBUART.c **** 
2138:Generated_Source\PSoC4/USBUART.c ****         #if (USBUART_EP_MANAGEMENT_DMA_MANUAL)
2139:Generated_Source\PSoC4/USBUART.c ****         {
2140:Generated_Source\PSoC4/USBUART.c ****             uint32 channelNum = (uint32) USBUART_DmaChan[epNumber];
2141:Generated_Source\PSoC4/USBUART.c **** 
2142:Generated_Source\PSoC4/USBUART.c ****             /* Disable DMA channel: start configuration. */
2143:Generated_Source\PSoC4/USBUART.c ****             USBUART_CyDmaChDisable(channelNum);
2144:Generated_Source\PSoC4/USBUART.c **** 
2145:Generated_Source\PSoC4/USBUART.c ****             /* Configure source and destination. */
2146:Generated_Source\PSoC4/USBUART.c ****             USBUART_CyDmaSetSrcAddress(channelNum, USBUART_DMA_DESCR0, (void*) &USBUART_ARB_EP16_BA
2147:Generated_Source\PSoC4/USBUART.c ****             USBUART_CyDmaSetDstAddress(channelNum, USBUART_DMA_DESCR0, (void*) pData);
2148:Generated_Source\PSoC4/USBUART.c **** 
2149:Generated_Source\PSoC4/USBUART.c ****             /* Configure DMA descriptor. */
2150:Generated_Source\PSoC4/USBUART.c ****             USBUART_CyDmaSetConfiguration(channelNum, USBUART_DMA_DESCR0, USBUART_DMA_COMMON_CFG | 
2151:Generated_Source\PSoC4/USBUART.c ****                                                     CYDMA_HALFWORD | CYDMA_WORD_ELEMENT | CYDMA_INC
2152:Generated_Source\PSoC4/USBUART.c **** 
2153:Generated_Source\PSoC4/USBUART.c ****             /* Validate descriptor to execute on following DMA request. */
2154:Generated_Source\PSoC4/USBUART.c ****             USBUART_CyDmaValidateDescriptor(channelNum, USBUART_DMA_DESCR0);
2155:Generated_Source\PSoC4/USBUART.c **** 
2156:Generated_Source\PSoC4/USBUART.c ****             /* Enable DMA channel: configuration complete. */
2157:Generated_Source\PSoC4/USBUART.c ****             USBUART_CyDmaChEnable(channelNum);
2158:Generated_Source\PSoC4/USBUART.c **** 
2159:Generated_Source\PSoC4/USBUART.c ****             /* Generate DMA request. */
2160:Generated_Source\PSoC4/USBUART.c ****             USBUART_ARB_EP_BASE.arbEp[epNumber].epCfg |=  (uint32)  USBUART_ARB_EPX_CFG_DMA_REQ;
2161:Generated_Source\PSoC4/USBUART.c ****             USBUART_ARB_EP_BASE.arbEp[epNumber].epCfg &=  (uint32) ~USBUART_ARB_EPX_CFG_DMA_REQ;
2162:Generated_Source\PSoC4/USBUART.c **** 
2163:Generated_Source\PSoC4/USBUART.c ****             /* OUT endpoint has to be armed again by user when DMA transfers have been completed.
2164:Generated_Source\PSoC4/USBUART.c ****             * NO_EVENT_PENDING: notifies that data has been copied from endpoint buffer.
2165:Generated_Source\PSoC4/USBUART.c ****             */
2166:Generated_Source\PSoC4/USBUART.c ****         }
2167:Generated_Source\PSoC4/USBUART.c ****         #endif /* (USBUART_EP_MANAGEMENT_DMA_MANUAL) */
2168:Generated_Source\PSoC4/USBUART.c **** 
2169:Generated_Source\PSoC4/USBUART.c ****         #if (USBUART_EP_MANAGEMENT_DMA_AUTO)
ARM GAS  C:\Users\essele\AppData\Local\Temp\ccmz8StT.s 			page 57


2170:Generated_Source\PSoC4/USBUART.c ****         {
2171:Generated_Source\PSoC4/USBUART.c ****             uint32 lengthDescr0, lengthDescr1;
2172:Generated_Source\PSoC4/USBUART.c ****             uint32 channelNum = (uint32) USBUART_DmaChan[epNumber];
2173:Generated_Source\PSoC4/USBUART.c **** 
2174:Generated_Source\PSoC4/USBUART.c ****             /* Get number of full bursts. */
2175:Generated_Source\PSoC4/USBUART.c ****             USBUART_DmaEpBurstCnt[epNumber] = (uint8) (adjLength / USBUART_DMA_BYTES_PER_BURST);
2176:Generated_Source\PSoC4/USBUART.c **** 
2177:Generated_Source\PSoC4/USBUART.c ****             /* Get number of elements in last burst. */
2178:Generated_Source\PSoC4/USBUART.c ****             USBUART_DmaEpLastBurstEl[epNumber] = (uint8) (adjLength % USBUART_DMA_BYTES_PER_BURST);
2179:Generated_Source\PSoC4/USBUART.c **** 
2180:Generated_Source\PSoC4/USBUART.c ****             /* Get total number of bursts. */
2181:Generated_Source\PSoC4/USBUART.c ****             USBUART_DmaEpBurstCnt[epNumber] += (0u != USBUART_DmaEpLastBurstEl[epNumber]) ? 1u : 0u
2182:Generated_Source\PSoC4/USBUART.c **** 
2183:Generated_Source\PSoC4/USBUART.c ****             /* Adjust number of data elements transferred in last burst. */
2184:Generated_Source\PSoC4/USBUART.c ****             USBUART_DmaEpLastBurstEl[epNumber] = (0u != USBUART_DmaEpLastBurstEl[epNumber]) ?
2185:Generated_Source\PSoC4/USBUART.c ****                                                                   ((USBUART_DmaEpLastBurstEl[epNumb
2186:Generated_Source\PSoC4/USBUART.c ****                                                                    (USBUART_DMA_HALFWORDS_PER_BURST
2187:Generated_Source\PSoC4/USBUART.c **** 
2188:Generated_Source\PSoC4/USBUART.c ****             /* Get number of data elements to transfer for descriptor 0 and 1. */
2189:Generated_Source\PSoC4/USBUART.c ****             lengthDescr0 = (1u == USBUART_DmaEpBurstCnt[epNumber]) ? USBUART_DmaEpLastBurstEl[epNum
2190:Generated_Source\PSoC4/USBUART.c ****             lengthDescr1 = (2u == USBUART_DmaEpBurstCnt[epNumber]) ? USBUART_DmaEpLastBurstEl[epNum
2191:Generated_Source\PSoC4/USBUART.c **** 
2192:Generated_Source\PSoC4/USBUART.c ****             /* Mark last descriptor to be executed. */
2193:Generated_Source\PSoC4/USBUART.c ****             USBUART_DmaEpLastBurstEl[epNumber] |= (0u != (USBUART_DmaEpBurstCnt[epNumber] & 0x1u)) 
2194:Generated_Source\PSoC4/USBUART.c ****                                                                     USBUART_DMA_DESCR0_MASK : USBUA
2195:Generated_Source\PSoC4/USBUART.c **** 
2196:Generated_Source\PSoC4/USBUART.c ****             /* Mark if revert number of data elements in descriptor after transfer completion. */
2197:Generated_Source\PSoC4/USBUART.c ****             USBUART_DmaEpLastBurstEl[epNumber] |= (USBUART_DmaEpBurstCnt[epNumber] > 2u) ? USBUART_
2198:Generated_Source\PSoC4/USBUART.c **** 
2199:Generated_Source\PSoC4/USBUART.c ****             /* Mark that 16-bits access to data register is performed. */
2200:Generated_Source\PSoC4/USBUART.c ****             USBUART_DmaEpLastBurstEl[epNumber] |= USBUART_DMA_DESCR_16BITS;
2201:Generated_Source\PSoC4/USBUART.c **** 
2202:Generated_Source\PSoC4/USBUART.c ****             /* Store address of buffer and burst counter for endpoint. */
2203:Generated_Source\PSoC4/USBUART.c ****             USBUART_DmaEpBufferAddrBackup[epNumber] = (uint32) pData;
2204:Generated_Source\PSoC4/USBUART.c ****             USBUART_DmaEpBurstCntBackup[epNumber]   = USBUART_DmaEpBurstCnt[epNumber];
2205:Generated_Source\PSoC4/USBUART.c **** 
2206:Generated_Source\PSoC4/USBUART.c ****             /* Adjust burst counter taking to account: 2 valid descriptors and interrupt trigger af
2207:Generated_Source\PSoC4/USBUART.c ****             USBUART_DmaEpBurstCnt[epNumber] = USBUART_DMA_GET_BURST_CNT(USBUART_DmaEpBurstCnt[epNum
2208:Generated_Source\PSoC4/USBUART.c **** 
2209:Generated_Source\PSoC4/USBUART.c ****             /* Disable DMA channel: start configuration. */
2210:Generated_Source\PSoC4/USBUART.c ****             USBUART_CyDmaChDisable(channelNum);
2211:Generated_Source\PSoC4/USBUART.c **** 
2212:Generated_Source\PSoC4/USBUART.c ****             /* Set destination address. */
2213:Generated_Source\PSoC4/USBUART.c ****             USBUART_CyDmaSetSrcAddress(channelNum, USBUART_DMA_DESCR0, (void*) &USBUART_ARB_EP16_BA
2214:Generated_Source\PSoC4/USBUART.c ****             USBUART_CyDmaSetSrcAddress(channelNum, USBUART_DMA_DESCR1, (void*) &USBUART_ARB_EP16_BA
2215:Generated_Source\PSoC4/USBUART.c **** 
2216:Generated_Source\PSoC4/USBUART.c ****             USBUART_CyDmaSetDstAddress(channelNum, USBUART_DMA_DESCR0, (void*) ((uint32) pData));
2217:Generated_Source\PSoC4/USBUART.c ****             USBUART_CyDmaSetDstAddress(channelNum, USBUART_DMA_DESCR1, (void*) ((uint32) pData + US
2218:Generated_Source\PSoC4/USBUART.c **** 
2219:Generated_Source\PSoC4/USBUART.c ****             /* Configure DMA descriptor 0. */
2220:Generated_Source\PSoC4/USBUART.c ****             USBUART_CyDmaSetConfiguration(channelNum, USBUART_DMA_DESCR0, USBUART_DMA_COMMON_CFG  |
2221:Generated_Source\PSoC4/USBUART.c ****                                                     CYDMA_HALFWORD | CYDMA_WORD_ELEMENT | CYDMA_INC
2222:Generated_Source\PSoC4/USBUART.c **** 
2223:Generated_Source\PSoC4/USBUART.c ****             /* Configure DMA descriptor 1. */
2224:Generated_Source\PSoC4/USBUART.c ****             USBUART_CyDmaSetConfiguration(channelNum, USBUART_DMA_DESCR1, USBUART_DMA_COMMON_CFG  |
2225:Generated_Source\PSoC4/USBUART.c ****                                                     CYDMA_HALFWORD | CYDMA_WORD_ELEMENT | CYDMA_INC
2226:Generated_Source\PSoC4/USBUART.c **** 
ARM GAS  C:\Users\essele\AppData\Local\Temp\ccmz8StT.s 			page 58


2227:Generated_Source\PSoC4/USBUART.c ****             /* Enable interrupt from DMA channel. */
2228:Generated_Source\PSoC4/USBUART.c ****             USBUART_CyDmaSetInterruptMask(channelNum);
2229:Generated_Source\PSoC4/USBUART.c **** 
2230:Generated_Source\PSoC4/USBUART.c ****             /* Validate DMA descriptor 0 and 1. */
2231:Generated_Source\PSoC4/USBUART.c ****             USBUART_CyDmaValidateDescriptor(channelNum, USBUART_DMA_DESCR0);
2232:Generated_Source\PSoC4/USBUART.c ****             
2233:Generated_Source\PSoC4/USBUART.c ****             if (USBUART_DmaEpBurstCntBackup[epNumber] > 1u)
2234:Generated_Source\PSoC4/USBUART.c ****             {
2235:Generated_Source\PSoC4/USBUART.c ****                 USBUART_CyDmaValidateDescriptor(channelNum, USBUART_DMA_DESCR1);
2236:Generated_Source\PSoC4/USBUART.c ****             }
2237:Generated_Source\PSoC4/USBUART.c **** 
2238:Generated_Source\PSoC4/USBUART.c ****             /* Enable DMA channel: configuration complete. */
2239:Generated_Source\PSoC4/USBUART.c ****             USBUART_CyDmaChEnable(channelNum);
2240:Generated_Source\PSoC4/USBUART.c **** 
2241:Generated_Source\PSoC4/USBUART.c ****             /* OUT endpoint has to be armed again by user when DMA transfers have been completed.
2242:Generated_Source\PSoC4/USBUART.c ****             * NO_EVENT_PENDING: notifies that data has been copied from endpoint buffer.
2243:Generated_Source\PSoC4/USBUART.c ****             */
2244:Generated_Source\PSoC4/USBUART.c ****         }
2245:Generated_Source\PSoC4/USBUART.c ****         #endif /* (USBUART_EP_MANAGEMENT_DMA_AUTO) */
2246:Generated_Source\PSoC4/USBUART.c ****     #endif /* (USBUART_EP_MANAGEMENT_MANUAL) */
2247:Generated_Source\PSoC4/USBUART.c ****     }
2248:Generated_Source\PSoC4/USBUART.c ****     else
2249:Generated_Source\PSoC4/USBUART.c ****     {
2250:Generated_Source\PSoC4/USBUART.c ****         length = 0u;
2251:Generated_Source\PSoC4/USBUART.c ****     }
2252:Generated_Source\PSoC4/USBUART.c **** 
2253:Generated_Source\PSoC4/USBUART.c ****     return (length);
2254:Generated_Source\PSoC4/USBUART.c **** }
2255:Generated_Source\PSoC4/USBUART.c **** #endif /* (USBUART_16BITS_EP_ACCESS_ENABLE) */
2256:Generated_Source\PSoC4/USBUART.c **** 
2257:Generated_Source\PSoC4/USBUART.c **** 
2258:Generated_Source\PSoC4/USBUART.c **** /*******************************************************************************
2259:Generated_Source\PSoC4/USBUART.c **** * Function Name: USBUART_EnableOutEP
2260:Generated_Source\PSoC4/USBUART.c **** ****************************************************************************//**
2261:Generated_Source\PSoC4/USBUART.c **** *
2262:Generated_Source\PSoC4/USBUART.c **** *  This function enables the specified endpoint for OUT transfers. Do not call
2263:Generated_Source\PSoC4/USBUART.c **** *  this function for IN endpoints.
2264:Generated_Source\PSoC4/USBUART.c **** *
2265:Generated_Source\PSoC4/USBUART.c **** *  \param epNumber: Contains the data endpoint number. Valid values are between
2266:Generated_Source\PSoC4/USBUART.c **** *  1 and 8.
2267:Generated_Source\PSoC4/USBUART.c **** *
2268:Generated_Source\PSoC4/USBUART.c **** * \globalvars
2269:Generated_Source\PSoC4/USBUART.c **** *
2270:Generated_Source\PSoC4/USBUART.c **** *  \ref USBUART_EP[epNumber].apiEpState - set to NO_EVENT_PENDING
2271:Generated_Source\PSoC4/USBUART.c **** *
2272:Generated_Source\PSoC4/USBUART.c **** * \reentrant
2273:Generated_Source\PSoC4/USBUART.c **** *  No.
2274:Generated_Source\PSoC4/USBUART.c **** *
2275:Generated_Source\PSoC4/USBUART.c **** *******************************************************************************/
2276:Generated_Source\PSoC4/USBUART.c **** void USBUART_EnableOutEP(uint8 epNumber) 
2277:Generated_Source\PSoC4/USBUART.c **** {
 1012              		.loc 1 2277 0
 1013              		.cfi_startproc
 1014              		@ args = 0, pretend = 0, frame = 0
 1015              		@ frame_needed = 0, uses_anonymous_args = 0
 1016              		@ link register save eliminated.
 1017              	.LVL65:
ARM GAS  C:\Users\essele\AppData\Local\Temp\ccmz8StT.s 			page 59


2278:Generated_Source\PSoC4/USBUART.c ****     if ((epNumber > USBUART_EP0) && (epNumber < USBUART_MAX_EP))
 1018              		.loc 1 2278 0
 1019 0000 431E     		subs	r3, r0, #1
 1020 0002 DBB2     		uxtb	r3, r3
 1021 0004 072B     		cmp	r3, #7
 1022 0006 0DD8     		bhi	.L66
2279:Generated_Source\PSoC4/USBUART.c ****     {
2280:Generated_Source\PSoC4/USBUART.c ****         USBUART_EP[epNumber].apiEpState = USBUART_NO_EVENT_PENDING;
 1023              		.loc 1 2280 0
 1024 0008 4200     		lsls	r2, r0, #1
 1025 000a 1218     		adds	r2, r2, r0
 1026 000c 9300     		lsls	r3, r2, #2
 1027 000e 064A     		ldr	r2, .L68
 1028 0010 D318     		adds	r3, r2, r3
 1029 0012 0022     		movs	r2, #0
 1030 0014 5A70     		strb	r2, [r3, #1]
2281:Generated_Source\PSoC4/USBUART.c **** 
2282:Generated_Source\PSoC4/USBUART.c ****         /* Enable OUT endpoint to be written by Host. */
2283:Generated_Source\PSoC4/USBUART.c ****         USBUART_SIE_EP_BASE.sieEp[epNumber].epCr0 = USBUART_EP[epNumber].epMode;
 1031              		.loc 1 2283 0
 1032 0016 5B79     		ldrb	r3, [r3, #5]
 1033 0018 DBB2     		uxtb	r3, r3
 1034 001a 8001     		lsls	r0, r0, #6
 1035              	.LVL66:
 1036 001c 034A     		ldr	r2, .L68+4
 1037 001e 9446     		mov	ip, r2
 1038 0020 6044     		add	r0, r0, ip
 1039 0022 8360     		str	r3, [r0, #8]
 1040              	.L66:
2284:Generated_Source\PSoC4/USBUART.c ****         
2285:Generated_Source\PSoC4/USBUART.c ****     }
2286:Generated_Source\PSoC4/USBUART.c **** }
 1041              		.loc 1 2286 0
 1042              		@ sp needed
 1043 0024 7047     		bx	lr
 1044              	.L69:
 1045 0026 C046     		.align	2
 1046              	.L68:
 1047 0028 00000000 		.word	USBUART_EP
 1048 002c F0FF2B40 		.word	1076625392
 1049              		.cfi_endproc
 1050              	.LFE16:
 1051              		.size	USBUART_EnableOutEP, .-USBUART_EnableOutEP
 1052              		.section	.text.USBUART_ReadOutEP,"ax",%progbits
 1053              		.align	2
 1054              		.global	USBUART_ReadOutEP
 1055              		.code	16
 1056              		.thumb_func
 1057              		.type	USBUART_ReadOutEP, %function
 1058              	USBUART_ReadOutEP:
 1059              	.LFB13:
1655:Generated_Source\PSoC4/USBUART.c ****     if ((pData != NULL) && (epNumber > USBUART_EP0) && (epNumber < USBUART_MAX_EP))
 1060              		.loc 1 1655 0
 1061              		.cfi_startproc
 1062              		@ args = 0, pretend = 0, frame = 0
 1063              		@ frame_needed = 0, uses_anonymous_args = 0
 1064              	.LVL67:
ARM GAS  C:\Users\essele\AppData\Local\Temp\ccmz8StT.s 			page 60


 1065 0000 70B5     		push	{r4, r5, r6, lr}
 1066              		.cfi_def_cfa_offset 16
 1067              		.cfi_offset 4, -16
 1068              		.cfi_offset 5, -12
 1069              		.cfi_offset 6, -8
 1070              		.cfi_offset 14, -4
 1071 0002 0500     		movs	r5, r0
 1072 0004 0E00     		movs	r6, r1
 1073 0006 1400     		movs	r4, r2
1656:Generated_Source\PSoC4/USBUART.c ****     {
 1074              		.loc 1 1656 0
 1075 0008 0029     		cmp	r1, #0
 1076 000a 1BD0     		beq	.L75
1656:Generated_Source\PSoC4/USBUART.c ****     {
 1077              		.loc 1 1656 0 is_stmt 0 discriminator 1
 1078 000c 0028     		cmp	r0, #0
 1079 000e 1BD0     		beq	.L76
1656:Generated_Source\PSoC4/USBUART.c ****     {
 1080              		.loc 1 1656 0 discriminator 2
 1081 0010 0828     		cmp	r0, #8
 1082 0012 1BD8     		bhi	.L77
1660:Generated_Source\PSoC4/USBUART.c ****     #endif /* (!USBUART_EP_MANAGEMENT_DMA_AUTO) */
 1083              		.loc 1 1660 0 is_stmt 1
 1084 0014 FFF7FEFF 		bl	USBUART_GetEPCount
 1085              	.LVL68:
 1086 0018 A042     		cmp	r0, r4
 1087 001a 03D2     		bcs	.L72
1660:Generated_Source\PSoC4/USBUART.c ****     #endif /* (!USBUART_EP_MANAGEMENT_DMA_AUTO) */
 1088              		.loc 1 1660 0 is_stmt 0 discriminator 1
 1089 001c 2800     		movs	r0, r5
 1090 001e FFF7FEFF 		bl	USBUART_GetEPCount
 1091              	.LVL69:
 1092 0022 0400     		movs	r4, r0
 1093              	.L72:
 1094              	.LVL70:
 1095              	.LBB6:
1667:Generated_Source\PSoC4/USBUART.c ****             {
 1096              		.loc 1 1667 0 is_stmt 1 discriminator 4
 1097 0024 0023     		movs	r3, #0
 1098 0026 07E0     		b	.L73
 1099              	.LVL71:
 1100              	.L74:
1669:Generated_Source\PSoC4/USBUART.c ****             }
 1101              		.loc 1 1669 0 discriminator 3
 1102 0028 AA01     		lsls	r2, r5, #6
 1103 002a 0A49     		ldr	r1, .L78
 1104 002c 8C46     		mov	ip, r1
 1105 002e 6244     		add	r2, r2, ip
 1106 0030 126A     		ldr	r2, [r2, #32]
 1107 0032 F254     		strb	r2, [r6, r3]
1667:Generated_Source\PSoC4/USBUART.c ****             {
 1108              		.loc 1 1667 0 discriminator 3
 1109 0034 0133     		adds	r3, r3, #1
 1110              	.LVL72:
 1111 0036 9BB2     		uxth	r3, r3
 1112              	.LVL73:
 1113              	.L73:
ARM GAS  C:\Users\essele\AppData\Local\Temp\ccmz8StT.s 			page 61


1667:Generated_Source\PSoC4/USBUART.c ****             {
 1114              		.loc 1 1667 0 is_stmt 0 discriminator 1
 1115 0038 A342     		cmp	r3, r4
 1116 003a F5D3     		bcc	.L74
 1117              	.LBE6:
1674:Generated_Source\PSoC4/USBUART.c ****     #else
 1118              		.loc 1 1674 0 is_stmt 1
 1119 003c 2800     		movs	r0, r5
 1120 003e FFF7FEFF 		bl	USBUART_EnableOutEP
 1121              	.LVL74:
 1122 0042 04E0     		b	.L71
 1123              	.LVL75:
 1124              	.L75:
1820:Generated_Source\PSoC4/USBUART.c ****     }
 1125              		.loc 1 1820 0
 1126 0044 0024     		movs	r4, #0
 1127 0046 02E0     		b	.L71
 1128              	.L76:
 1129 0048 0024     		movs	r4, #0
 1130 004a 00E0     		b	.L71
 1131              	.L77:
 1132 004c 0024     		movs	r4, #0
 1133              	.LVL76:
 1134              	.L71:
1824:Generated_Source\PSoC4/USBUART.c **** 
 1135              		.loc 1 1824 0
 1136 004e 2000     		movs	r0, r4
 1137              		@ sp needed
 1138              	.LVL77:
 1139              	.LVL78:
 1140 0050 70BD     		pop	{r4, r5, r6, pc}
 1141              	.L79:
 1142 0052 C046     		.align	2
 1143              	.L78:
 1144 0054 C0012C40 		.word	1076625856
 1145              		.cfi_endproc
 1146              	.LFE13:
 1147              		.size	USBUART_ReadOutEP, .-USBUART_ReadOutEP
 1148              		.section	.text.USBUART_ReadOutEP16,"ax",%progbits
 1149              		.align	2
 1150              		.global	USBUART_ReadOutEP16
 1151              		.code	16
 1152              		.thumb_func
 1153              		.type	USBUART_ReadOutEP16, %function
 1154              	USBUART_ReadOutEP16:
 1155              	.LFB15:
2105:Generated_Source\PSoC4/USBUART.c ****     uint32 adjLength;
 1156              		.loc 1 2105 0
 1157              		.cfi_startproc
 1158              		@ args = 0, pretend = 0, frame = 0
 1159              		@ frame_needed = 0, uses_anonymous_args = 0
 1160              	.LVL79:
 1161 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 1162              		.cfi_def_cfa_offset 24
 1163              		.cfi_offset 3, -24
 1164              		.cfi_offset 4, -20
 1165              		.cfi_offset 5, -16
ARM GAS  C:\Users\essele\AppData\Local\Temp\ccmz8StT.s 			page 62


 1166              		.cfi_offset 6, -12
 1167              		.cfi_offset 7, -8
 1168              		.cfi_offset 14, -4
 1169 0002 0600     		movs	r6, r0
 1170 0004 0D00     		movs	r5, r1
 1171 0006 1400     		movs	r4, r2
2109:Generated_Source\PSoC4/USBUART.c **** 
 1172              		.loc 1 2109 0
 1173 0008 CB07     		lsls	r3, r1, #31
 1174 000a 02D5     		bpl	.L81
2109:Generated_Source\PSoC4/USBUART.c **** 
 1175              		.loc 1 2109 0 is_stmt 0 discriminator 1
 1176 000c 0020     		movs	r0, #0
 1177              	.LVL80:
 1178 000e FFF7FEFF 		bl	CyHalt
 1179              	.LVL81:
 1180              	.L81:
2111:Generated_Source\PSoC4/USBUART.c ****     {
 1181              		.loc 1 2111 0 is_stmt 1
 1182 0012 002D     		cmp	r5, #0
 1183 0014 21D0     		beq	.L86
2111:Generated_Source\PSoC4/USBUART.c ****     {
 1184              		.loc 1 2111 0 is_stmt 0 discriminator 1
 1185 0016 002E     		cmp	r6, #0
 1186 0018 21D0     		beq	.L87
2111:Generated_Source\PSoC4/USBUART.c ****     {
 1187              		.loc 1 2111 0 discriminator 2
 1188 001a 082E     		cmp	r6, #8
 1189 001c 21D8     		bhi	.L88
2115:Generated_Source\PSoC4/USBUART.c ****     #endif /* (!USBUART_EP_MANAGEMENT_DMA_AUTO) */
 1190              		.loc 1 2115 0 is_stmt 1
 1191 001e 3000     		movs	r0, r6
 1192 0020 FFF7FEFF 		bl	USBUART_GetEPCount
 1193              	.LVL82:
 1194 0024 A042     		cmp	r0, r4
 1195 0026 03D2     		bcs	.L83
2115:Generated_Source\PSoC4/USBUART.c ****     #endif /* (!USBUART_EP_MANAGEMENT_DMA_AUTO) */
 1196              		.loc 1 2115 0 is_stmt 0 discriminator 1
 1197 0028 3000     		movs	r0, r6
 1198 002a FFF7FEFF 		bl	USBUART_GetEPCount
 1199              	.LVL83:
 1200 002e 0400     		movs	r4, r0
 1201              	.L83:
 1202              	.LVL84:
2119:Generated_Source\PSoC4/USBUART.c **** 
 1203              		.loc 1 2119 0 is_stmt 1 discriminator 4
 1204 0030 0120     		movs	r0, #1
 1205 0032 2040     		ands	r0, r4
 1206 0034 2018     		adds	r0, r4, r0
 1207              	.LVL85:
 1208              	.LBB7:
2128:Generated_Source\PSoC4/USBUART.c ****             {
 1209              		.loc 1 2128 0 discriminator 4
 1210 0036 0023     		movs	r3, #0
 1211 0038 08E0     		b	.L84
 1212              	.LVL86:
 1213              	.L85:
ARM GAS  C:\Users\essele\AppData\Local\Temp\ccmz8StT.s 			page 63


2130:Generated_Source\PSoC4/USBUART.c ****             }
 1214              		.loc 1 2130 0 discriminator 3
 1215 003a 5900     		lsls	r1, r3, #1
 1216 003c B201     		lsls	r2, r6, #6
 1217 003e 0A4F     		ldr	r7, .L89
 1218 0040 BC46     		mov	ip, r7
 1219 0042 6244     		add	r2, r2, ip
 1220 0044 1269     		ldr	r2, [r2, #16]
 1221 0046 6A52     		strh	r2, [r5, r1]
2128:Generated_Source\PSoC4/USBUART.c ****             {
 1222              		.loc 1 2128 0 discriminator 3
 1223 0048 0133     		adds	r3, r3, #1
 1224              	.LVL87:
 1225 004a 9BB2     		uxth	r3, r3
 1226              	.LVL88:
 1227              	.L84:
2128:Generated_Source\PSoC4/USBUART.c ****             {
 1228              		.loc 1 2128 0 is_stmt 0 discriminator 1
 1229 004c 4208     		lsrs	r2, r0, #1
 1230 004e 9342     		cmp	r3, r2
 1231 0050 F3D3     		bcc	.L85
 1232              	.LBE7:
2135:Generated_Source\PSoC4/USBUART.c ****     #else
 1233              		.loc 1 2135 0 is_stmt 1
 1234 0052 3000     		movs	r0, r6
 1235              	.LVL89:
 1236 0054 FFF7FEFF 		bl	USBUART_EnableOutEP
 1237              	.LVL90:
 1238 0058 04E0     		b	.L82
 1239              	.LVL91:
 1240              	.L86:
2250:Generated_Source\PSoC4/USBUART.c ****     }
 1241              		.loc 1 2250 0
 1242 005a 0024     		movs	r4, #0
 1243 005c 02E0     		b	.L82
 1244              	.L87:
 1245 005e 0024     		movs	r4, #0
 1246 0060 00E0     		b	.L82
 1247              	.L88:
 1248 0062 0024     		movs	r4, #0
 1249              	.LVL92:
 1250              	.L82:
2254:Generated_Source\PSoC4/USBUART.c **** #endif /* (USBUART_16BITS_EP_ACCESS_ENABLE) */
 1251              		.loc 1 2254 0
 1252 0064 2000     		movs	r0, r4
 1253              		@ sp needed
 1254              	.LVL93:
 1255              	.LVL94:
 1256 0066 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 1257              	.L90:
 1258              		.align	2
 1259              	.L89:
 1260 0068 D0112C40 		.word	1076629968
 1261              		.cfi_endproc
 1262              	.LFE15:
 1263              		.size	USBUART_ReadOutEP16, .-USBUART_ReadOutEP16
 1264              		.section	.text.USBUART_DisableOutEP,"ax",%progbits
ARM GAS  C:\Users\essele\AppData\Local\Temp\ccmz8StT.s 			page 64


 1265              		.align	2
 1266              		.global	USBUART_DisableOutEP
 1267              		.code	16
 1268              		.thumb_func
 1269              		.type	USBUART_DisableOutEP, %function
 1270              	USBUART_DisableOutEP:
 1271              	.LFB17:
2287:Generated_Source\PSoC4/USBUART.c **** 
2288:Generated_Source\PSoC4/USBUART.c **** 
2289:Generated_Source\PSoC4/USBUART.c **** /*******************************************************************************
2290:Generated_Source\PSoC4/USBUART.c **** * Function Name: USBUART_DisableOutEP
2291:Generated_Source\PSoC4/USBUART.c **** ****************************************************************************//**
2292:Generated_Source\PSoC4/USBUART.c **** *
2293:Generated_Source\PSoC4/USBUART.c **** *  This function disables the specified USBFS OUT endpoint. Do not call this
2294:Generated_Source\PSoC4/USBUART.c **** *  function for IN endpoints.
2295:Generated_Source\PSoC4/USBUART.c **** *
2296:Generated_Source\PSoC4/USBUART.c **** *  \param epNumber: Contains the data endpoint number.
2297:Generated_Source\PSoC4/USBUART.c **** *            Valid values are between 1 and 8.
2298:Generated_Source\PSoC4/USBUART.c **** *
2299:Generated_Source\PSoC4/USBUART.c **** *******************************************************************************/
2300:Generated_Source\PSoC4/USBUART.c **** void USBUART_DisableOutEP(uint8 epNumber) 
2301:Generated_Source\PSoC4/USBUART.c **** {
 1272              		.loc 1 2301 0
 1273              		.cfi_startproc
 1274              		@ args = 0, pretend = 0, frame = 0
 1275              		@ frame_needed = 0, uses_anonymous_args = 0
 1276              		@ link register save eliminated.
 1277              	.LVL95:
2302:Generated_Source\PSoC4/USBUART.c ****     if ((epNumber > USBUART_EP0) && (epNumber < USBUART_MAX_EP))
 1278              		.loc 1 2302 0
 1279 0000 431E     		subs	r3, r0, #1
 1280 0002 DBB2     		uxtb	r3, r3
 1281 0004 072B     		cmp	r3, #7
 1282 0006 05D8     		bhi	.L91
2303:Generated_Source\PSoC4/USBUART.c ****     {
2304:Generated_Source\PSoC4/USBUART.c ****         /* Set NAK response for OUT endpoint. */
2305:Generated_Source\PSoC4/USBUART.c ****         USBUART_SIE_EP_BASE.sieEp[epNumber].epCr0 = USBUART_MODE_NAK_OUT;
 1283              		.loc 1 2305 0
 1284 0008 8001     		lsls	r0, r0, #6
 1285              	.LVL96:
 1286 000a 034B     		ldr	r3, .L93
 1287 000c 9C46     		mov	ip, r3
 1288 000e 6044     		add	r0, r0, ip
 1289 0010 0823     		movs	r3, #8
 1290 0012 8360     		str	r3, [r0, #8]
 1291              	.L91:
2306:Generated_Source\PSoC4/USBUART.c ****     }
2307:Generated_Source\PSoC4/USBUART.c **** }
 1292              		.loc 1 2307 0
 1293              		@ sp needed
 1294 0014 7047     		bx	lr
 1295              	.L94:
 1296 0016 C046     		.align	2
 1297              	.L93:
 1298 0018 F0FF2B40 		.word	1076625392
 1299              		.cfi_endproc
 1300              	.LFE17:
ARM GAS  C:\Users\essele\AppData\Local\Temp\ccmz8StT.s 			page 65


 1301              		.size	USBUART_DisableOutEP, .-USBUART_DisableOutEP
 1302              		.section	.text.USBUART_Force,"ax",%progbits
 1303              		.align	2
 1304              		.global	USBUART_Force
 1305              		.code	16
 1306              		.thumb_func
 1307              		.type	USBUART_Force, %function
 1308              	USBUART_Force:
 1309              	.LFB18:
2308:Generated_Source\PSoC4/USBUART.c **** 
2309:Generated_Source\PSoC4/USBUART.c **** 
2310:Generated_Source\PSoC4/USBUART.c **** /*******************************************************************************
2311:Generated_Source\PSoC4/USBUART.c **** * Function Name: USBUART_Force
2312:Generated_Source\PSoC4/USBUART.c **** ****************************************************************************//**
2313:Generated_Source\PSoC4/USBUART.c **** *
2314:Generated_Source\PSoC4/USBUART.c **** *  This function forces a USB J, K, or SE0 state on the D+/D– lines. It provides
2315:Generated_Source\PSoC4/USBUART.c **** *  the necessary mechanism for a USB device application to perform a USB Remote
2316:Generated_Source\PSoC4/USBUART.c **** *  Wakeup. For more information, see the USB 2.0 Specification for details on
2317:Generated_Source\PSoC4/USBUART.c **** *  Suspend and Resume.
2318:Generated_Source\PSoC4/USBUART.c **** *
2319:Generated_Source\PSoC4/USBUART.c **** *  \param state A byte indicating which of the four bus states to enable.
2320:Generated_Source\PSoC4/USBUART.c **** *        Symbolic names  and their associated values are listed here:
2321:Generated_Source\PSoC4/USBUART.c **** *    State                      |Description
2322:Generated_Source\PSoC4/USBUART.c **** *    ---------------------------|----------------------------------------------
2323:Generated_Source\PSoC4/USBUART.c **** *    USBUART_FORCE_J   | Force a J State onto the D+/D– lines
2324:Generated_Source\PSoC4/USBUART.c **** *    USBUART_FORCE_K   | Force a K State onto the D+/D– lines
2325:Generated_Source\PSoC4/USBUART.c **** *    USBUART_FORCE_SE0 | Force a Single Ended 0 onto the D+/D– lines
2326:Generated_Source\PSoC4/USBUART.c **** *    USBUART_FORCE_NONE| Return bus to SIE control
2327:Generated_Source\PSoC4/USBUART.c **** *
2328:Generated_Source\PSoC4/USBUART.c **** *
2329:Generated_Source\PSoC4/USBUART.c **** *******************************************************************************/
2330:Generated_Source\PSoC4/USBUART.c **** void USBUART_Force(uint8 bState) 
2331:Generated_Source\PSoC4/USBUART.c **** {
 1310              		.loc 1 2331 0
 1311              		.cfi_startproc
 1312              		@ args = 0, pretend = 0, frame = 0
 1313              		@ frame_needed = 0, uses_anonymous_args = 0
 1314              		@ link register save eliminated.
 1315              	.LVL97:
2332:Generated_Source\PSoC4/USBUART.c ****     /* This registers is used only for manual control of SIE (no masking is
2333:Generated_Source\PSoC4/USBUART.c ****     * needed before write into it).
2334:Generated_Source\PSoC4/USBUART.c ****     */
2335:Generated_Source\PSoC4/USBUART.c ****     USBUART_USBIO_CR0_REG = bState;
 1316              		.loc 1 2335 0
 1317 0000 014B     		ldr	r3, .L96
 1318 0002 1860     		str	r0, [r3]
2336:Generated_Source\PSoC4/USBUART.c **** }
 1319              		.loc 1 2336 0
 1320              		@ sp needed
 1321 0004 7047     		bx	lr
 1322              	.L97:
 1323 0006 C046     		.align	2
 1324              	.L96:
 1325 0008 40002C40 		.word	1076625472
 1326              		.cfi_endproc
 1327              	.LFE18:
 1328              		.size	USBUART_Force, .-USBUART_Force
ARM GAS  C:\Users\essele\AppData\Local\Temp\ccmz8StT.s 			page 66


 1329              		.section	.text.USBUART_GetEPAckState,"ax",%progbits
 1330              		.align	2
 1331              		.global	USBUART_GetEPAckState
 1332              		.code	16
 1333              		.thumb_func
 1334              		.type	USBUART_GetEPAckState, %function
 1335              	USBUART_GetEPAckState:
 1336              	.LFB19:
2337:Generated_Source\PSoC4/USBUART.c **** 
2338:Generated_Source\PSoC4/USBUART.c **** 
2339:Generated_Source\PSoC4/USBUART.c **** /*******************************************************************************
2340:Generated_Source\PSoC4/USBUART.c **** * Function Name: USBUART_GetEPAckState
2341:Generated_Source\PSoC4/USBUART.c **** ****************************************************************************//**
2342:Generated_Source\PSoC4/USBUART.c **** *
2343:Generated_Source\PSoC4/USBUART.c **** *  This function determines whether an ACK transaction occurred on this endpoint
2344:Generated_Source\PSoC4/USBUART.c **** *  by reading the ACK bit in the control register of the endpoint. It does not
2345:Generated_Source\PSoC4/USBUART.c **** *  clear the ACK bit.
2346:Generated_Source\PSoC4/USBUART.c **** *
2347:Generated_Source\PSoC4/USBUART.c **** *  \param epNumber Contains the data endpoint number.
2348:Generated_Source\PSoC4/USBUART.c **** *            Valid values are between 1 and 8.
2349:Generated_Source\PSoC4/USBUART.c **** *
2350:Generated_Source\PSoC4/USBUART.c **** *  \return
2351:Generated_Source\PSoC4/USBUART.c **** *  If an ACKed transaction occurred, this function returns a non-zero value.
2352:Generated_Source\PSoC4/USBUART.c **** *  Otherwise, it returns zero.
2353:Generated_Source\PSoC4/USBUART.c **** *
2354:Generated_Source\PSoC4/USBUART.c **** *******************************************************************************/
2355:Generated_Source\PSoC4/USBUART.c **** uint8 USBUART_GetEPAckState(uint8 epNumber) 
2356:Generated_Source\PSoC4/USBUART.c **** {
 1337              		.loc 1 2356 0
 1338              		.cfi_startproc
 1339              		@ args = 0, pretend = 0, frame = 0
 1340              		@ frame_needed = 0, uses_anonymous_args = 0
 1341              		@ link register save eliminated.
 1342              	.LVL98:
2357:Generated_Source\PSoC4/USBUART.c ****     uint32 cr = 0u;
2358:Generated_Source\PSoC4/USBUART.c **** 
2359:Generated_Source\PSoC4/USBUART.c ****     if ((epNumber > USBUART_EP0) && (epNumber < USBUART_MAX_EP))
 1343              		.loc 1 2359 0
 1344 0000 431E     		subs	r3, r0, #1
 1345 0002 DBB2     		uxtb	r3, r3
 1346 0004 072B     		cmp	r3, #7
 1347 0006 07D8     		bhi	.L100
2360:Generated_Source\PSoC4/USBUART.c ****     {
2361:Generated_Source\PSoC4/USBUART.c ****         cr = USBUART_SIE_EP_BASE.sieEp[epNumber].epCr0 & USBUART_MODE_ACKD;
 1348              		.loc 1 2361 0
 1349 0008 8001     		lsls	r0, r0, #6
 1350              	.LVL99:
 1351 000a 054B     		ldr	r3, .L101
 1352 000c 9C46     		mov	ip, r3
 1353 000e 6044     		add	r0, r0, ip
 1354 0010 8368     		ldr	r3, [r0, #8]
 1355 0012 1020     		movs	r0, #16
 1356 0014 1840     		ands	r0, r3
 1357              	.LVL100:
 1358 0016 00E0     		b	.L99
 1359              	.LVL101:
 1360              	.L100:
ARM GAS  C:\Users\essele\AppData\Local\Temp\ccmz8StT.s 			page 67


2357:Generated_Source\PSoC4/USBUART.c ****     uint32 cr = 0u;
 1361              		.loc 1 2357 0
 1362 0018 0020     		movs	r0, #0
 1363              	.LVL102:
 1364              	.L99:
2362:Generated_Source\PSoC4/USBUART.c ****     }
2363:Generated_Source\PSoC4/USBUART.c **** 
2364:Generated_Source\PSoC4/USBUART.c ****     return ((uint8) cr);
 1365              		.loc 1 2364 0
 1366 001a C0B2     		uxtb	r0, r0
 1367              	.LVL103:
2365:Generated_Source\PSoC4/USBUART.c **** }
 1368              		.loc 1 2365 0
 1369              		@ sp needed
 1370 001c 7047     		bx	lr
 1371              	.L102:
 1372 001e C046     		.align	2
 1373              	.L101:
 1374 0020 F0FF2B40 		.word	1076625392
 1375              		.cfi_endproc
 1376              	.LFE19:
 1377              		.size	USBUART_GetEPAckState, .-USBUART_GetEPAckState
 1378              		.section	.text.USBUART_SetPowerStatus,"ax",%progbits
 1379              		.align	2
 1380              		.global	USBUART_SetPowerStatus
 1381              		.code	16
 1382              		.thumb_func
 1383              		.type	USBUART_SetPowerStatus, %function
 1384              	USBUART_SetPowerStatus:
 1385              	.LFB20:
2366:Generated_Source\PSoC4/USBUART.c **** 
2367:Generated_Source\PSoC4/USBUART.c **** 
2368:Generated_Source\PSoC4/USBUART.c **** /*******************************************************************************
2369:Generated_Source\PSoC4/USBUART.c **** * Function Name: USBUART_SetPowerStatus
2370:Generated_Source\PSoC4/USBUART.c **** ****************************************************************************//**
2371:Generated_Source\PSoC4/USBUART.c **** *
2372:Generated_Source\PSoC4/USBUART.c **** *  This function sets the current power status. The device replies to USB
2373:Generated_Source\PSoC4/USBUART.c **** *  GET_STATUS requests based on this value. This allows the device to properly
2374:Generated_Source\PSoC4/USBUART.c **** *  report its status for USB Chapter 9 compliance. Devices can change their
2375:Generated_Source\PSoC4/USBUART.c **** *  power source from self powered to bus powered at any time and report their
2376:Generated_Source\PSoC4/USBUART.c **** *  current power source as part of the device status. You should call this
2377:Generated_Source\PSoC4/USBUART.c **** *  function any time your device changes from self powered to bus powered or
2378:Generated_Source\PSoC4/USBUART.c **** *  vice versa, and set the status appropriately.
2379:Generated_Source\PSoC4/USBUART.c **** *
2380:Generated_Source\PSoC4/USBUART.c **** *  \param powerStatus: Contains the desired power status, one for self powered
2381:Generated_Source\PSoC4/USBUART.c **** *        or zero for bus powered. Symbolic names and their associated values are
2382:Generated_Source\PSoC4/USBUART.c **** *        given here:
2383:Generated_Source\PSoC4/USBUART.c **** *  Power Status                                |Description
2384:Generated_Source\PSoC4/USBUART.c **** *  --------------------------------------------|---------------------------
2385:Generated_Source\PSoC4/USBUART.c **** *  USBUART_DEVICE_STATUS_BUS_POWERED  | Set the device to bus powered
2386:Generated_Source\PSoC4/USBUART.c **** *  USBUART_DEVICE_STATUS_SELF_POWERED | Set the device to self powered
2387:Generated_Source\PSoC4/USBUART.c **** *
2388:Generated_Source\PSoC4/USBUART.c **** * \globalvars
2389:Generated_Source\PSoC4/USBUART.c **** *
2390:Generated_Source\PSoC4/USBUART.c **** *  \ref USBUART_deviceStatus - set power status
2391:Generated_Source\PSoC4/USBUART.c **** *
2392:Generated_Source\PSoC4/USBUART.c **** * \reentrant
ARM GAS  C:\Users\essele\AppData\Local\Temp\ccmz8StT.s 			page 68


2393:Generated_Source\PSoC4/USBUART.c **** *  No.
2394:Generated_Source\PSoC4/USBUART.c **** *
2395:Generated_Source\PSoC4/USBUART.c **** *******************************************************************************/
2396:Generated_Source\PSoC4/USBUART.c **** void USBUART_SetPowerStatus(uint8 powerStatus) 
2397:Generated_Source\PSoC4/USBUART.c **** {
 1386              		.loc 1 2397 0
 1387              		.cfi_startproc
 1388              		@ args = 0, pretend = 0, frame = 0
 1389              		@ frame_needed = 0, uses_anonymous_args = 0
 1390              		@ link register save eliminated.
 1391              	.LVL104:
2398:Generated_Source\PSoC4/USBUART.c ****     if (powerStatus != USBUART_DEVICE_STATUS_BUS_POWERED)
 1392              		.loc 1 2398 0
 1393 0000 0028     		cmp	r0, #0
 1394 0002 06D0     		beq	.L104
2399:Generated_Source\PSoC4/USBUART.c ****     {
2400:Generated_Source\PSoC4/USBUART.c ****         USBUART_deviceStatus |= (uint8)  USBUART_DEVICE_STATUS_SELF_POWERED;
 1395              		.loc 1 2400 0
 1396 0004 064A     		ldr	r2, .L106
 1397 0006 1178     		ldrb	r1, [r2]
 1398 0008 0123     		movs	r3, #1
 1399 000a 0B43     		orrs	r3, r1
 1400 000c DBB2     		uxtb	r3, r3
 1401 000e 1370     		strb	r3, [r2]
 1402 0010 04E0     		b	.L103
 1403              	.L104:
2401:Generated_Source\PSoC4/USBUART.c ****     }
2402:Generated_Source\PSoC4/USBUART.c ****     else
2403:Generated_Source\PSoC4/USBUART.c ****     {
2404:Generated_Source\PSoC4/USBUART.c ****         USBUART_deviceStatus &= (uint8) ~USBUART_DEVICE_STATUS_SELF_POWERED;
 1404              		.loc 1 2404 0
 1405 0012 034A     		ldr	r2, .L106
 1406 0014 1378     		ldrb	r3, [r2]
 1407 0016 0121     		movs	r1, #1
 1408 0018 8B43     		bics	r3, r1
 1409 001a 1370     		strb	r3, [r2]
 1410              	.L103:
2405:Generated_Source\PSoC4/USBUART.c ****     }
2406:Generated_Source\PSoC4/USBUART.c **** }
 1411              		.loc 1 2406 0
 1412              		@ sp needed
 1413 001c 7047     		bx	lr
 1414              	.L107:
 1415 001e C046     		.align	2
 1416              	.L106:
 1417 0020 00000000 		.word	USBUART_deviceStatus
 1418              		.cfi_endproc
 1419              	.LFE20:
 1420              		.size	USBUART_SetPowerStatus, .-USBUART_SetPowerStatus
 1421              		.section	.text.USBUART_VBusPresent,"ax",%progbits
 1422              		.align	2
 1423              		.global	USBUART_VBusPresent
 1424              		.code	16
 1425              		.thumb_func
 1426              		.type	USBUART_VBusPresent, %function
 1427              	USBUART_VBusPresent:
 1428              	.LFB21:
ARM GAS  C:\Users\essele\AppData\Local\Temp\ccmz8StT.s 			page 69


2407:Generated_Source\PSoC4/USBUART.c **** 
2408:Generated_Source\PSoC4/USBUART.c **** 
2409:Generated_Source\PSoC4/USBUART.c **** #if (USBUART_VBUS_MONITORING_ENABLE)
2410:Generated_Source\PSoC4/USBUART.c ****     /***************************************************************************
2411:Generated_Source\PSoC4/USBUART.c ****     * Function Name: USBUART_VBusPresent
2412:Generated_Source\PSoC4/USBUART.c ****     ************************************************************************//**
2413:Generated_Source\PSoC4/USBUART.c ****     *
2414:Generated_Source\PSoC4/USBUART.c ****     *  Determines VBUS presence for self-powered devices. This function is
2415:Generated_Source\PSoC4/USBUART.c ****     *  available when the VBUS Monitoring option is enabled in the Advanced tab.
2416:Generated_Source\PSoC4/USBUART.c ****     *
2417:Generated_Source\PSoC4/USBUART.c ****     * \return
2418:Generated_Source\PSoC4/USBUART.c ****     *  The return value can be the following:
2419:Generated_Source\PSoC4/USBUART.c ****     *  Return Value | Description
2420:Generated_Source\PSoC4/USBUART.c ****     *  -------------|-----------------
2421:Generated_Source\PSoC4/USBUART.c ****     *  1            | VBUS is present
2422:Generated_Source\PSoC4/USBUART.c ****     *  0            | VBUS is absent
2423:Generated_Source\PSoC4/USBUART.c ****     *
2424:Generated_Source\PSoC4/USBUART.c ****     *
2425:Generated_Source\PSoC4/USBUART.c ****     ***************************************************************************/
2426:Generated_Source\PSoC4/USBUART.c ****     uint8 USBUART_VBusPresent(void) 
2427:Generated_Source\PSoC4/USBUART.c ****     {
 1429              		.loc 1 2427 0
 1430              		.cfi_startproc
 1431              		@ args = 0, pretend = 0, frame = 0
 1432              		@ frame_needed = 0, uses_anonymous_args = 0
 1433              		@ link register save eliminated.
2428:Generated_Source\PSoC4/USBUART.c ****         return ((0u != (USBUART_VBUS_STATUS_REG & USBUART_VBUS_VALID)) ? (uint8) 1u : (uint8) 0u);
 1434              		.loc 1 2428 0
 1435 0000 034B     		ldr	r3, .L109
 1436 0002 1B68     		ldr	r3, [r3]
 1437 0004 0420     		movs	r0, #4
 1438 0006 1840     		ands	r0, r3
 1439 0008 431E     		subs	r3, r0, #1
 1440 000a 9841     		sbcs	r0, r0, r3
 1441 000c C0B2     		uxtb	r0, r0
2429:Generated_Source\PSoC4/USBUART.c ****     }
 1442              		.loc 1 2429 0
 1443              		@ sp needed
 1444 000e 7047     		bx	lr
 1445              	.L110:
 1446              		.align	2
 1447              	.L109:
 1448 0010 040D0440 		.word	1074007300
 1449              		.cfi_endproc
 1450              	.LFE21:
 1451              		.size	USBUART_VBusPresent, .-USBUART_VBusPresent
 1452              		.section	.text.USBUART_RWUEnabled,"ax",%progbits
 1453              		.align	2
 1454              		.global	USBUART_RWUEnabled
 1455              		.code	16
 1456              		.thumb_func
 1457              		.type	USBUART_RWUEnabled, %function
 1458              	USBUART_RWUEnabled:
 1459              	.LFB22:
2430:Generated_Source\PSoC4/USBUART.c **** #endif /* (USBUART_VBUS_MONITORING_ENABLE) */
2431:Generated_Source\PSoC4/USBUART.c **** 
2432:Generated_Source\PSoC4/USBUART.c **** 
ARM GAS  C:\Users\essele\AppData\Local\Temp\ccmz8StT.s 			page 70


2433:Generated_Source\PSoC4/USBUART.c **** /*******************************************************************************
2434:Generated_Source\PSoC4/USBUART.c **** * Function Name: USBUART_RWUEnabled
2435:Generated_Source\PSoC4/USBUART.c **** ****************************************************************************//**
2436:Generated_Source\PSoC4/USBUART.c **** *
2437:Generated_Source\PSoC4/USBUART.c **** *  This function returns the current remote wakeup status.
2438:Generated_Source\PSoC4/USBUART.c **** *  If the device supports remote wakeup, the application should use this
2439:Generated_Source\PSoC4/USBUART.c **** *  function to determine if remote wakeup was enabled by the host. When the
2440:Generated_Source\PSoC4/USBUART.c **** *  device is suspended and it determines the conditions to initiate a remote
2441:Generated_Source\PSoC4/USBUART.c **** *  wakeup are met, the application should use the USBFS_Force() function to
2442:Generated_Source\PSoC4/USBUART.c **** *  force the appropriate J and K states onto the USB bus, signaling a remote
2443:Generated_Source\PSoC4/USBUART.c **** *  wakeup.
2444:Generated_Source\PSoC4/USBUART.c **** *
2445:Generated_Source\PSoC4/USBUART.c **** *
2446:Generated_Source\PSoC4/USBUART.c **** * \return
2447:Generated_Source\PSoC4/USBUART.c **** *  Returns non-zero value if remote wakeup is enabled and zero otherwise.
2448:Generated_Source\PSoC4/USBUART.c **** *
2449:Generated_Source\PSoC4/USBUART.c **** * \globalvars
2450:Generated_Source\PSoC4/USBUART.c **** *  USBUART_deviceStatus - checked to determine remote status
2451:Generated_Source\PSoC4/USBUART.c **** *
2452:Generated_Source\PSoC4/USBUART.c **** *******************************************************************************/
2453:Generated_Source\PSoC4/USBUART.c **** uint8 USBUART_RWUEnabled(void) 
2454:Generated_Source\PSoC4/USBUART.c **** {
 1460              		.loc 1 2454 0
 1461              		.cfi_startproc
 1462              		@ args = 0, pretend = 0, frame = 0
 1463              		@ frame_needed = 0, uses_anonymous_args = 0
 1464              		@ link register save eliminated.
 1465              	.LVL105:
2455:Generated_Source\PSoC4/USBUART.c ****     uint8 result = USBUART_FALSE;
2456:Generated_Source\PSoC4/USBUART.c **** 
2457:Generated_Source\PSoC4/USBUART.c ****     if (0u != (USBUART_deviceStatus & USBUART_DEVICE_STATUS_REMOTE_WAKEUP))
 1466              		.loc 1 2457 0
 1467 0000 034B     		ldr	r3, .L114
 1468 0002 1B78     		ldrb	r3, [r3]
 1469 0004 9B07     		lsls	r3, r3, #30
 1470 0006 01D4     		bmi	.L113
2455:Generated_Source\PSoC4/USBUART.c ****     uint8 result = USBUART_FALSE;
 1471              		.loc 1 2455 0
 1472 0008 0020     		movs	r0, #0
 1473 000a 00E0     		b	.L112
 1474              	.L113:
2458:Generated_Source\PSoC4/USBUART.c ****     {
2459:Generated_Source\PSoC4/USBUART.c ****         result = USBUART_TRUE;
 1475              		.loc 1 2459 0
 1476 000c 0120     		movs	r0, #1
 1477              	.L112:
 1478              	.LVL106:
2460:Generated_Source\PSoC4/USBUART.c ****     }
2461:Generated_Source\PSoC4/USBUART.c **** 
2462:Generated_Source\PSoC4/USBUART.c ****     return (result);
2463:Generated_Source\PSoC4/USBUART.c **** }
 1479              		.loc 1 2463 0
 1480              		@ sp needed
 1481 000e 7047     		bx	lr
 1482              	.L115:
 1483              		.align	2
 1484              	.L114:
ARM GAS  C:\Users\essele\AppData\Local\Temp\ccmz8StT.s 			page 71


 1485 0010 00000000 		.word	USBUART_deviceStatus
 1486              		.cfi_endproc
 1487              	.LFE22:
 1488              		.size	USBUART_RWUEnabled, .-USBUART_RWUEnabled
 1489              		.section	.text.USBUART_GetDeviceAddress,"ax",%progbits
 1490              		.align	2
 1491              		.global	USBUART_GetDeviceAddress
 1492              		.code	16
 1493              		.thumb_func
 1494              		.type	USBUART_GetDeviceAddress, %function
 1495              	USBUART_GetDeviceAddress:
 1496              	.LFB23:
2464:Generated_Source\PSoC4/USBUART.c **** 
2465:Generated_Source\PSoC4/USBUART.c **** 
2466:Generated_Source\PSoC4/USBUART.c **** /*******************************************************************************
2467:Generated_Source\PSoC4/USBUART.c **** * Function Name: USBUART_GetDeviceAddress
2468:Generated_Source\PSoC4/USBUART.c **** ****************************************************************************//**
2469:Generated_Source\PSoC4/USBUART.c **** *
2470:Generated_Source\PSoC4/USBUART.c **** *  This function returns the currently assigned address for the USB device.
2471:Generated_Source\PSoC4/USBUART.c **** *
2472:Generated_Source\PSoC4/USBUART.c **** * \return
2473:Generated_Source\PSoC4/USBUART.c **** *  Returns the currently assigned address.
2474:Generated_Source\PSoC4/USBUART.c **** *  Returns 0 if the device has not yet been assigned an address.
2475:Generated_Source\PSoC4/USBUART.c **** *
2476:Generated_Source\PSoC4/USBUART.c **** *******************************************************************************/
2477:Generated_Source\PSoC4/USBUART.c **** uint8 USBUART_GetDeviceAddress(void) 
2478:Generated_Source\PSoC4/USBUART.c **** {
 1497              		.loc 1 2478 0
 1498              		.cfi_startproc
 1499              		@ args = 0, pretend = 0, frame = 0
 1500              		@ frame_needed = 0, uses_anonymous_args = 0
 1501              		@ link register save eliminated.
2479:Generated_Source\PSoC4/USBUART.c ****     return (uint8)(USBUART_CR0_REG & USBUART_CR0_DEVICE_ADDRESS_MASK);
 1502              		.loc 1 2479 0
 1503 0000 024B     		ldr	r3, .L117
 1504 0002 1B68     		ldr	r3, [r3]
 1505 0004 7F20     		movs	r0, #127
 1506 0006 1840     		ands	r0, r3
2480:Generated_Source\PSoC4/USBUART.c **** }
 1507              		.loc 1 2480 0
 1508              		@ sp needed
 1509 0008 7047     		bx	lr
 1510              	.L118:
 1511 000a C046     		.align	2
 1512              	.L117:
 1513 000c 20002C40 		.word	1076625440
 1514              		.cfi_endproc
 1515              	.LFE23:
 1516              		.size	USBUART_GetDeviceAddress, .-USBUART_GetDeviceAddress
 1517              		.section	.text.USBUART_EnableSofInt,"ax",%progbits
 1518              		.align	2
 1519              		.global	USBUART_EnableSofInt
 1520              		.code	16
 1521              		.thumb_func
 1522              		.type	USBUART_EnableSofInt, %function
 1523              	USBUART_EnableSofInt:
 1524              	.LFB24:
ARM GAS  C:\Users\essele\AppData\Local\Temp\ccmz8StT.s 			page 72


2481:Generated_Source\PSoC4/USBUART.c **** 
2482:Generated_Source\PSoC4/USBUART.c **** 
2483:Generated_Source\PSoC4/USBUART.c **** /*******************************************************************************
2484:Generated_Source\PSoC4/USBUART.c **** * Function Name: USBUART_EnableSofInt
2485:Generated_Source\PSoC4/USBUART.c **** ****************************************************************************//**
2486:Generated_Source\PSoC4/USBUART.c **** *
2487:Generated_Source\PSoC4/USBUART.c **** *  This function enables interrupt generation when a Start-of-Frame (SOF)
2488:Generated_Source\PSoC4/USBUART.c **** *  packet is received from the host.
2489:Generated_Source\PSoC4/USBUART.c **** *
2490:Generated_Source\PSoC4/USBUART.c **** *******************************************************************************/
2491:Generated_Source\PSoC4/USBUART.c **** void USBUART_EnableSofInt(void) 
2492:Generated_Source\PSoC4/USBUART.c **** {
 1525              		.loc 1 2492 0
 1526              		.cfi_startproc
 1527              		@ args = 0, pretend = 0, frame = 0
 1528              		@ frame_needed = 0, uses_anonymous_args = 0
 1529              		@ link register save eliminated.
2493:Generated_Source\PSoC4/USBUART.c **** #if (CY_PSOC4)
2494:Generated_Source\PSoC4/USBUART.c ****     /* Enable SOF interrupt interrupt source. */
2495:Generated_Source\PSoC4/USBUART.c ****     USBUART_INTR_SIE_MASK_REG |= (uint32) USBUART_INTR_SIE_SOF_INTR;
 1530              		.loc 1 2495 0
 1531 0000 024A     		ldr	r2, .L120
 1532 0002 1168     		ldr	r1, [r2]
 1533 0004 0123     		movs	r3, #1
 1534 0006 0B43     		orrs	r3, r1
 1535 0008 1360     		str	r3, [r2]
2496:Generated_Source\PSoC4/USBUART.c **** #else
2497:Generated_Source\PSoC4/USBUART.c ****     /* Enable SOF interrupt if it is present. */
2498:Generated_Source\PSoC4/USBUART.c ****     #if (USBUART_SOF_ISR_ACTIVE)
2499:Generated_Source\PSoC4/USBUART.c ****         CyIntEnable(USBUART_SOF_VECT_NUM);
2500:Generated_Source\PSoC4/USBUART.c ****     #endif /* (USBUART_SOF_ISR_ACTIVE) */
2501:Generated_Source\PSoC4/USBUART.c **** #endif /* (CY_PSOC4) */
2502:Generated_Source\PSoC4/USBUART.c **** }
 1536              		.loc 1 2502 0
 1537              		@ sp needed
 1538 000a 7047     		bx	lr
 1539              	.L121:
 1540              		.align	2
 1541              	.L120:
 1542 000c 28202C40 		.word	1076633640
 1543              		.cfi_endproc
 1544              	.LFE24:
 1545              		.size	USBUART_EnableSofInt, .-USBUART_EnableSofInt
 1546              		.section	.text.USBUART_DisableSofInt,"ax",%progbits
 1547              		.align	2
 1548              		.global	USBUART_DisableSofInt
 1549              		.code	16
 1550              		.thumb_func
 1551              		.type	USBUART_DisableSofInt, %function
 1552              	USBUART_DisableSofInt:
 1553              	.LFB25:
2503:Generated_Source\PSoC4/USBUART.c **** 
2504:Generated_Source\PSoC4/USBUART.c **** 
2505:Generated_Source\PSoC4/USBUART.c **** /*******************************************************************************
2506:Generated_Source\PSoC4/USBUART.c **** * Function Name: USBUART_DisableSofInt
2507:Generated_Source\PSoC4/USBUART.c **** ****************************************************************************//**
2508:Generated_Source\PSoC4/USBUART.c **** *
ARM GAS  C:\Users\essele\AppData\Local\Temp\ccmz8StT.s 			page 73


2509:Generated_Source\PSoC4/USBUART.c **** *  This function disables interrupt generation when a Start-of-Frame (SOF)
2510:Generated_Source\PSoC4/USBUART.c **** *  packet is received from the host.
2511:Generated_Source\PSoC4/USBUART.c **** *
2512:Generated_Source\PSoC4/USBUART.c **** *******************************************************************************/
2513:Generated_Source\PSoC4/USBUART.c **** void USBUART_DisableSofInt(void) 
2514:Generated_Source\PSoC4/USBUART.c **** {
 1554              		.loc 1 2514 0
 1555              		.cfi_startproc
 1556              		@ args = 0, pretend = 0, frame = 0
 1557              		@ frame_needed = 0, uses_anonymous_args = 0
 1558              		@ link register save eliminated.
2515:Generated_Source\PSoC4/USBUART.c **** #if (CY_PSOC4)
2516:Generated_Source\PSoC4/USBUART.c ****     /* Disable SOF interrupt interrupt source. */
2517:Generated_Source\PSoC4/USBUART.c ****     USBUART_INTR_SIE_MASK_REG &= (uint32) ~USBUART_INTR_SIE_SOF_INTR;
 1559              		.loc 1 2517 0
 1560 0000 024A     		ldr	r2, .L123
 1561 0002 1368     		ldr	r3, [r2]
 1562 0004 0121     		movs	r1, #1
 1563 0006 8B43     		bics	r3, r1
 1564 0008 1360     		str	r3, [r2]
2518:Generated_Source\PSoC4/USBUART.c **** #else
2519:Generated_Source\PSoC4/USBUART.c ****     /* Disable SOF interrupt if it is present. */
2520:Generated_Source\PSoC4/USBUART.c ****     #if (USBUART_SOF_ISR_ACTIVE)
2521:Generated_Source\PSoC4/USBUART.c ****         CyIntDisable(USBUART_SOF_VECT_NUM);
2522:Generated_Source\PSoC4/USBUART.c ****     #endif /* (USBUART_SOF_ISR_ACTIVE) */
2523:Generated_Source\PSoC4/USBUART.c **** #endif /* (CY_PSOC4) */
2524:Generated_Source\PSoC4/USBUART.c **** }
 1565              		.loc 1 2524 0
 1566              		@ sp needed
 1567 000a 7047     		bx	lr
 1568              	.L124:
 1569              		.align	2
 1570              	.L123:
 1571 000c 28202C40 		.word	1076633640
 1572              		.cfi_endproc
 1573              	.LFE25:
 1574              		.size	USBUART_DisableSofInt, .-USBUART_DisableSofInt
 1575              		.global	USBUART_initVar
 1576              		.bss
 1577              		.set	.LANCHOR0,. + 0
 1578              		.type	USBUART_initVar, %object
 1579              		.size	USBUART_initVar, 1
 1580              	USBUART_initVar:
 1581 0000 00       		.space	1
 1582              		.text
 1583              	.Letext0:
 1584              		.file 2 "Generated_Source\\PSoC4\\cytypes.h"
 1585              		.file 3 "Generated_Source\\PSoC4\\USBUART.h"
 1586              		.file 4 "Generated_Source\\PSoC4\\USBUART_pvt.h"
 1587              		.file 5 "Generated_Source\\PSoC4\\CyLib.h"
 1588              		.section	.debug_info,"",%progbits
 1589              	.Ldebug_info0:
 1590 0000 220B0000 		.4byte	0xb22
 1591 0004 0400     		.2byte	0x4
 1592 0006 00000000 		.4byte	.Ldebug_abbrev0
 1593 000a 04       		.byte	0x4
 1594 000b 01       		.uleb128 0x1
ARM GAS  C:\Users\essele\AppData\Local\Temp\ccmz8StT.s 			page 74


 1595 000c A1000000 		.4byte	.LASF112
 1596 0010 0C       		.byte	0xc
 1597 0011 45000000 		.4byte	.LASF113
 1598 0015 0D060000 		.4byte	.LASF114
 1599 0019 30000000 		.4byte	.Ldebug_ranges0+0x30
 1600 001d 00000000 		.4byte	0
 1601 0021 00000000 		.4byte	.Ldebug_line0
 1602 0025 02       		.uleb128 0x2
 1603 0026 01       		.byte	0x1
 1604 0027 06       		.byte	0x6
 1605 0028 B6010000 		.4byte	.LASF0
 1606 002c 02       		.uleb128 0x2
 1607 002d 01       		.byte	0x1
 1608 002e 08       		.byte	0x8
 1609 002f DA040000 		.4byte	.LASF1
 1610 0033 02       		.uleb128 0x2
 1611 0034 02       		.byte	0x2
 1612 0035 05       		.byte	0x5
 1613 0036 EF040000 		.4byte	.LASF2
 1614 003a 02       		.uleb128 0x2
 1615 003b 02       		.byte	0x2
 1616 003c 07       		.byte	0x7
 1617 003d 61030000 		.4byte	.LASF3
 1618 0041 02       		.uleb128 0x2
 1619 0042 04       		.byte	0x4
 1620 0043 05       		.byte	0x5
 1621 0044 26020000 		.4byte	.LASF4
 1622 0048 02       		.uleb128 0x2
 1623 0049 04       		.byte	0x4
 1624 004a 07       		.byte	0x7
 1625 004b 38030000 		.4byte	.LASF5
 1626 004f 02       		.uleb128 0x2
 1627 0050 08       		.byte	0x8
 1628 0051 05       		.byte	0x5
 1629 0052 A8010000 		.4byte	.LASF6
 1630 0056 02       		.uleb128 0x2
 1631 0057 08       		.byte	0x8
 1632 0058 07       		.byte	0x7
 1633 0059 2F010000 		.4byte	.LASF7
 1634 005d 03       		.uleb128 0x3
 1635 005e 04       		.byte	0x4
 1636 005f 05       		.byte	0x5
 1637 0060 696E7400 		.ascii	"int\000"
 1638 0064 02       		.uleb128 0x2
 1639 0065 04       		.byte	0x4
 1640 0066 07       		.byte	0x7
 1641 0067 2B030000 		.4byte	.LASF8
 1642 006b 04       		.uleb128 0x4
 1643 006c 52020000 		.4byte	.LASF9
 1644 0070 02       		.byte	0x2
 1645 0071 E401     		.2byte	0x1e4
 1646 0073 2C000000 		.4byte	0x2c
 1647 0077 04       		.uleb128 0x4
 1648 0078 00000000 		.4byte	.LASF10
 1649 007c 02       		.byte	0x2
 1650 007d E501     		.2byte	0x1e5
 1651 007f 3A000000 		.4byte	0x3a
ARM GAS  C:\Users\essele\AppData\Local\Temp\ccmz8StT.s 			page 75


 1652 0083 04       		.uleb128 0x4
 1653 0084 DD020000 		.4byte	.LASF11
 1654 0088 02       		.byte	0x2
 1655 0089 E601     		.2byte	0x1e6
 1656 008b 48000000 		.4byte	0x48
 1657 008f 02       		.uleb128 0x2
 1658 0090 04       		.byte	0x4
 1659 0091 04       		.byte	0x4
 1660 0092 97040000 		.4byte	.LASF12
 1661 0096 02       		.uleb128 0x2
 1662 0097 08       		.byte	0x8
 1663 0098 04       		.byte	0x4
 1664 0099 70020000 		.4byte	.LASF13
 1665 009d 02       		.uleb128 0x2
 1666 009e 01       		.byte	0x1
 1667 009f 08       		.byte	0x8
 1668 00a0 5E050000 		.4byte	.LASF14
 1669 00a4 05       		.uleb128 0x5
 1670 00a5 6B000000 		.4byte	0x6b
 1671 00a9 04       		.uleb128 0x4
 1672 00aa E5030000 		.4byte	.LASF15
 1673 00ae 02       		.byte	0x2
 1674 00af 9002     		.2byte	0x290
 1675 00b1 B5000000 		.4byte	0xb5
 1676 00b5 05       		.uleb128 0x5
 1677 00b6 83000000 		.4byte	0x83
 1678 00ba 02       		.uleb128 0x2
 1679 00bb 08       		.byte	0x8
 1680 00bc 04       		.byte	0x4
 1681 00bd 41040000 		.4byte	.LASF16
 1682 00c1 02       		.uleb128 0x2
 1683 00c2 04       		.byte	0x4
 1684 00c3 07       		.byte	0x7
 1685 00c4 38040000 		.4byte	.LASF17
 1686 00c8 06       		.uleb128 0x6
 1687 00c9 0C       		.byte	0xc
 1688 00ca 03       		.byte	0x3
 1689 00cb 8E       		.byte	0x8e
 1690 00cc 3D010000 		.4byte	0x13d
 1691 00d0 07       		.uleb128 0x7
 1692 00d1 63040000 		.4byte	.LASF18
 1693 00d5 03       		.byte	0x3
 1694 00d6 90       		.byte	0x90
 1695 00d7 6B000000 		.4byte	0x6b
 1696 00db 00       		.byte	0
 1697 00dc 07       		.uleb128 0x7
 1698 00dd AF040000 		.4byte	.LASF19
 1699 00e1 03       		.byte	0x3
 1700 00e2 91       		.byte	0x91
 1701 00e3 6B000000 		.4byte	0x6b
 1702 00e7 01       		.byte	0x1
 1703 00e8 07       		.uleb128 0x7
 1704 00e9 17040000 		.4byte	.LASF20
 1705 00ed 03       		.byte	0x3
 1706 00ee 92       		.byte	0x92
 1707 00ef 6B000000 		.4byte	0x6b
 1708 00f3 02       		.byte	0x2
ARM GAS  C:\Users\essele\AppData\Local\Temp\ccmz8StT.s 			page 76


 1709 00f4 07       		.uleb128 0x7
 1710 00f5 58020000 		.4byte	.LASF21
 1711 00f9 03       		.byte	0x3
 1712 00fa 93       		.byte	0x93
 1713 00fb 6B000000 		.4byte	0x6b
 1714 00ff 03       		.byte	0x3
 1715 0100 07       		.uleb128 0x7
 1716 0101 46010000 		.4byte	.LASF22
 1717 0105 03       		.byte	0x3
 1718 0106 94       		.byte	0x94
 1719 0107 6B000000 		.4byte	0x6b
 1720 010b 04       		.byte	0x4
 1721 010c 07       		.uleb128 0x7
 1722 010d FF020000 		.4byte	.LASF23
 1723 0111 03       		.byte	0x3
 1724 0112 95       		.byte	0x95
 1725 0113 6B000000 		.4byte	0x6b
 1726 0117 05       		.byte	0x5
 1727 0118 07       		.uleb128 0x7
 1728 0119 BB050000 		.4byte	.LASF24
 1729 011d 03       		.byte	0x3
 1730 011e 96       		.byte	0x96
 1731 011f 77000000 		.4byte	0x77
 1732 0123 06       		.byte	0x6
 1733 0124 07       		.uleb128 0x7
 1734 0125 68050000 		.4byte	.LASF25
 1735 0129 03       		.byte	0x3
 1736 012a 97       		.byte	0x97
 1737 012b 77000000 		.4byte	0x77
 1738 012f 08       		.byte	0x8
 1739 0130 07       		.uleb128 0x7
 1740 0131 D4030000 		.4byte	.LASF26
 1741 0135 03       		.byte	0x3
 1742 0136 98       		.byte	0x98
 1743 0137 6B000000 		.4byte	0x6b
 1744 013b 0A       		.byte	0xa
 1745 013c 00       		.byte	0
 1746 013d 08       		.uleb128 0x8
 1747 013e A4050000 		.4byte	.LASF27
 1748 0142 03       		.byte	0x3
 1749 0143 99       		.byte	0x99
 1750 0144 C8000000 		.4byte	0xc8
 1751 0148 06       		.uleb128 0x6
 1752 0149 40       		.byte	0x40
 1753 014a 03       		.byte	0x3
 1754 014b D5       		.byte	0xd5
 1755 014c 81010000 		.4byte	0x181
 1756 0150 07       		.uleb128 0x7
 1757 0151 72040000 		.4byte	.LASF28
 1758 0155 03       		.byte	0x3
 1759 0156 D7       		.byte	0xd7
 1760 0157 83000000 		.4byte	0x83
 1761 015b 00       		.byte	0
 1762 015c 07       		.uleb128 0x7
 1763 015d 79040000 		.4byte	.LASF29
 1764 0161 03       		.byte	0x3
 1765 0162 D8       		.byte	0xd8
ARM GAS  C:\Users\essele\AppData\Local\Temp\ccmz8StT.s 			page 77


 1766 0163 83000000 		.4byte	0x83
 1767 0167 04       		.byte	0x4
 1768 0168 07       		.uleb128 0x7
 1769 0169 91040000 		.4byte	.LASF30
 1770 016d 03       		.byte	0x3
 1771 016e D9       		.byte	0xd9
 1772 016f 83000000 		.4byte	0x83
 1773 0173 08       		.byte	0x8
 1774 0174 09       		.uleb128 0x9
 1775 0175 67617000 		.ascii	"gap\000"
 1776 0179 03       		.byte	0x3
 1777 017a DA       		.byte	0xda
 1778 017b 81010000 		.4byte	0x181
 1779 017f 0C       		.byte	0xc
 1780 0180 00       		.byte	0
 1781 0181 0A       		.uleb128 0xa
 1782 0182 83000000 		.4byte	0x83
 1783 0186 91010000 		.4byte	0x191
 1784 018a 0B       		.uleb128 0xb
 1785 018b C1000000 		.4byte	0xc1
 1786 018f 0C       		.byte	0xc
 1787 0190 00       		.byte	0
 1788 0191 08       		.uleb128 0x8
 1789 0192 3A050000 		.4byte	.LASF31
 1790 0196 03       		.byte	0x3
 1791 0197 DB       		.byte	0xdb
 1792 0198 48010000 		.4byte	0x148
 1793 019c 06       		.uleb128 0x6
 1794 019d 40       		.byte	0x40
 1795 019e 03       		.byte	0x3
 1796 019f E7       		.byte	0xe7
 1797 01a0 1D020000 		.4byte	0x21d
 1798 01a4 07       		.uleb128 0x7
 1799 01a5 52010000 		.4byte	.LASF32
 1800 01a9 03       		.byte	0x3
 1801 01aa E9       		.byte	0xe9
 1802 01ab 83000000 		.4byte	0x83
 1803 01af 00       		.byte	0
 1804 01b0 07       		.uleb128 0x7
 1805 01b1 A1060000 		.4byte	.LASF33
 1806 01b5 03       		.byte	0x3
 1807 01b6 EA       		.byte	0xea
 1808 01b7 83000000 		.4byte	0x83
 1809 01bb 04       		.byte	0x4
 1810 01bc 07       		.uleb128 0x7
 1811 01bd B0020000 		.4byte	.LASF34
 1812 01c1 03       		.byte	0x3
 1813 01c2 EB       		.byte	0xeb
 1814 01c3 83000000 		.4byte	0x83
 1815 01c7 08       		.byte	0x8
 1816 01c8 07       		.uleb128 0x7
 1817 01c9 06030000 		.4byte	.LASF35
 1818 01cd 03       		.byte	0x3
 1819 01ce EC       		.byte	0xec
 1820 01cf 83000000 		.4byte	0x83
 1821 01d3 0C       		.byte	0xc
 1822 01d4 07       		.uleb128 0x7
ARM GAS  C:\Users\essele\AppData\Local\Temp\ccmz8StT.s 			page 78


 1823 01d5 61020000 		.4byte	.LASF36
 1824 01d9 03       		.byte	0x3
 1825 01da ED       		.byte	0xed
 1826 01db 83000000 		.4byte	0x83
 1827 01df 10       		.byte	0x10
 1828 01e0 07       		.uleb128 0x7
 1829 01e1 32050000 		.4byte	.LASF37
 1830 01e5 03       		.byte	0x3
 1831 01e6 EE       		.byte	0xee
 1832 01e7 83000000 		.4byte	0x83
 1833 01eb 14       		.byte	0x14
 1834 01ec 07       		.uleb128 0x7
 1835 01ed 18050000 		.4byte	.LASF38
 1836 01f1 03       		.byte	0x3
 1837 01f2 EF       		.byte	0xef
 1838 01f3 83000000 		.4byte	0x83
 1839 01f7 18       		.byte	0x18
 1840 01f8 07       		.uleb128 0x7
 1841 01f9 6A040000 		.4byte	.LASF39
 1842 01fd 03       		.byte	0x3
 1843 01fe F0       		.byte	0xf0
 1844 01ff 83000000 		.4byte	0x83
 1845 0203 1C       		.byte	0x1c
 1846 0204 07       		.uleb128 0x7
 1847 0205 51060000 		.4byte	.LASF40
 1848 0209 03       		.byte	0x3
 1849 020a F1       		.byte	0xf1
 1850 020b 83000000 		.4byte	0x83
 1851 020f 20       		.byte	0x20
 1852 0210 09       		.uleb128 0x9
 1853 0211 67617000 		.ascii	"gap\000"
 1854 0215 03       		.byte	0x3
 1855 0216 F2       		.byte	0xf2
 1856 0217 1D020000 		.4byte	0x21d
 1857 021b 24       		.byte	0x24
 1858 021c 00       		.byte	0
 1859 021d 0A       		.uleb128 0xa
 1860 021e 83000000 		.4byte	0x83
 1861 0222 2D020000 		.4byte	0x22d
 1862 0226 0B       		.uleb128 0xb
 1863 0227 C1000000 		.4byte	0xc1
 1864 022b 06       		.byte	0x6
 1865 022c 00       		.byte	0
 1866 022d 08       		.uleb128 0x8
 1867 022e 01040000 		.4byte	.LASF41
 1868 0232 03       		.byte	0x3
 1869 0233 F3       		.byte	0xf3
 1870 0234 9C010000 		.4byte	0x19c
 1871 0238 0C       		.uleb128 0xc
 1872 0239 40       		.byte	0x40
 1873 023a 03       		.byte	0x3
 1874 023b 0001     		.2byte	0x100
 1875 023d 90020000 		.4byte	0x290
 1876 0241 0D       		.uleb128 0xd
 1877 0242 4B010000 		.4byte	.LASF42
 1878 0246 03       		.byte	0x3
 1879 0247 0201     		.2byte	0x102
ARM GAS  C:\Users\essele\AppData\Local\Temp\ccmz8StT.s 			page 79


 1880 0249 83000000 		.4byte	0x83
 1881 024d 00       		.byte	0
 1882 024e 0D       		.uleb128 0xd
 1883 024f A9060000 		.4byte	.LASF43
 1884 0253 03       		.byte	0x3
 1885 0254 0301     		.2byte	0x103
 1886 0256 83000000 		.4byte	0x83
 1887 025a 04       		.byte	0x4
 1888 025b 0D       		.uleb128 0xd
 1889 025c E8040000 		.4byte	.LASF44
 1890 0260 03       		.byte	0x3
 1891 0261 0401     		.2byte	0x104
 1892 0263 83000000 		.4byte	0x83
 1893 0267 08       		.byte	0x8
 1894 0268 0D       		.uleb128 0xd
 1895 0269 B3060000 		.4byte	.LASF45
 1896 026d 03       		.byte	0x3
 1897 026e 0501     		.2byte	0x105
 1898 0270 83000000 		.4byte	0x83
 1899 0274 0C       		.byte	0xc
 1900 0275 0D       		.uleb128 0xd
 1901 0276 63010000 		.4byte	.LASF46
 1902 027a 03       		.byte	0x3
 1903 027b 0601     		.2byte	0x106
 1904 027d 83000000 		.4byte	0x83
 1905 0281 10       		.byte	0x10
 1906 0282 0E       		.uleb128 0xe
 1907 0283 67617000 		.ascii	"gap\000"
 1908 0287 03       		.byte	0x3
 1909 0288 0701     		.2byte	0x107
 1910 028a 90020000 		.4byte	0x290
 1911 028e 14       		.byte	0x14
 1912 028f 00       		.byte	0
 1913 0290 0A       		.uleb128 0xa
 1914 0291 83000000 		.4byte	0x83
 1915 0295 A0020000 		.4byte	0x2a0
 1916 0299 0B       		.uleb128 0xb
 1917 029a C1000000 		.4byte	0xc1
 1918 029e 0A       		.byte	0xa
 1919 029f 00       		.byte	0
 1920 02a0 04       		.uleb128 0x4
 1921 02a1 0F030000 		.4byte	.LASF47
 1922 02a5 03       		.byte	0x3
 1923 02a6 0801     		.2byte	0x108
 1924 02a8 38020000 		.4byte	0x238
 1925 02ac 0F       		.uleb128 0xf
 1926 02ad 4002     		.2byte	0x240
 1927 02af 03       		.byte	0x3
 1928 02b0 0F01     		.2byte	0x10f
 1929 02b2 C4020000 		.4byte	0x2c4
 1930 02b6 0D       		.uleb128 0xd
 1931 02b7 F9020000 		.4byte	.LASF48
 1932 02bb 03       		.byte	0x3
 1933 02bc 1101     		.2byte	0x111
 1934 02be C4020000 		.4byte	0x2c4
 1935 02c2 00       		.byte	0
 1936 02c3 00       		.byte	0
ARM GAS  C:\Users\essele\AppData\Local\Temp\ccmz8StT.s 			page 80


 1937 02c4 0A       		.uleb128 0xa
 1938 02c5 91010000 		.4byte	0x191
 1939 02c9 D4020000 		.4byte	0x2d4
 1940 02cd 0B       		.uleb128 0xb
 1941 02ce C1000000 		.4byte	0xc1
 1942 02d2 08       		.byte	0x8
 1943 02d3 00       		.byte	0
 1944 02d4 04       		.uleb128 0x4
 1945 02d5 F9010000 		.4byte	.LASF49
 1946 02d9 03       		.byte	0x3
 1947 02da 1201     		.2byte	0x112
 1948 02dc AC020000 		.4byte	0x2ac
 1949 02e0 0F       		.uleb128 0xf
 1950 02e1 4002     		.2byte	0x240
 1951 02e3 03       		.byte	0x3
 1952 02e4 1501     		.2byte	0x115
 1953 02e6 F8020000 		.4byte	0x2f8
 1954 02ea 0D       		.uleb128 0xd
 1955 02eb CE030000 		.4byte	.LASF50
 1956 02ef 03       		.byte	0x3
 1957 02f0 1701     		.2byte	0x117
 1958 02f2 F8020000 		.4byte	0x2f8
 1959 02f6 00       		.byte	0
 1960 02f7 00       		.byte	0
 1961 02f8 0A       		.uleb128 0xa
 1962 02f9 2D020000 		.4byte	0x22d
 1963 02fd 08030000 		.4byte	0x308
 1964 0301 0B       		.uleb128 0xb
 1965 0302 C1000000 		.4byte	0xc1
 1966 0306 08       		.byte	0x8
 1967 0307 00       		.byte	0
 1968 0308 04       		.uleb128 0x4
 1969 0309 21040000 		.4byte	.LASF51
 1970 030d 03       		.byte	0x3
 1971 030e 1801     		.2byte	0x118
 1972 0310 E0020000 		.4byte	0x2e0
 1973 0314 0F       		.uleb128 0xf
 1974 0315 4002     		.2byte	0x240
 1975 0317 03       		.byte	0x3
 1976 0318 1C01     		.2byte	0x11c
 1977 031a 2C030000 		.4byte	0x32c
 1978 031e 0D       		.uleb128 0xd
 1979 031f CE030000 		.4byte	.LASF50
 1980 0323 03       		.byte	0x3
 1981 0324 1E01     		.2byte	0x11e
 1982 0326 2C030000 		.4byte	0x32c
 1983 032a 00       		.byte	0
 1984 032b 00       		.byte	0
 1985 032c 0A       		.uleb128 0xa
 1986 032d A0020000 		.4byte	0x2a0
 1987 0331 3C030000 		.4byte	0x33c
 1988 0335 0B       		.uleb128 0xb
 1989 0336 C1000000 		.4byte	0xc1
 1990 033a 08       		.byte	0x8
 1991 033b 00       		.byte	0
 1992 033c 04       		.uleb128 0x4
 1993 033d 73050000 		.4byte	.LASF52
ARM GAS  C:\Users\essele\AppData\Local\Temp\ccmz8StT.s 			page 81


 1994 0341 03       		.byte	0x3
 1995 0342 1F01     		.2byte	0x11f
 1996 0344 14030000 		.4byte	0x314
 1997 0348 10       		.uleb128 0x10
 1998 0349 AB030000 		.4byte	.LASF53
 1999 034d 01       		.byte	0x1
 2000 034e D3       		.byte	0xd3
 2001 034f 00000000 		.4byte	.LFB2
 2002 0353 D0000000 		.4byte	.LFE2-.LFB2
 2003 0357 01       		.uleb128 0x1
 2004 0358 9C       		.byte	0x9c
 2005 0359 22040000 		.4byte	0x422
 2006 035d 11       		.uleb128 0x11
 2007 035e 34000000 		.4byte	.LVL0
 2008 0362 C20A0000 		.4byte	0xac2
 2009 0366 70030000 		.4byte	0x370
 2010 036a 12       		.uleb128 0x12
 2011 036b 01       		.uleb128 0x1
 2012 036c 50       		.byte	0x50
 2013 036d 01       		.uleb128 0x1
 2014 036e 32       		.byte	0x32
 2015 036f 00       		.byte	0
 2016 0370 13       		.uleb128 0x13
 2017 0371 40000000 		.4byte	.LVL1
 2018 0375 CD0A0000 		.4byte	0xacd
 2019 0379 11       		.uleb128 0x11
 2020 037a 5E000000 		.4byte	.LVL2
 2021 037e D80A0000 		.4byte	0xad8
 2022 0382 91030000 		.4byte	0x391
 2023 0386 12       		.uleb128 0x12
 2024 0387 01       		.uleb128 0x1
 2025 0388 50       		.byte	0x50
 2026 0389 01       		.uleb128 0x1
 2027 038a 4E       		.byte	0x4e
 2028 038b 12       		.uleb128 0x12
 2029 038c 01       		.uleb128 0x1
 2030 038d 51       		.byte	0x51
 2031 038e 01       		.uleb128 0x1
 2032 038f 33       		.byte	0x33
 2033 0390 00       		.byte	0
 2034 0391 11       		.uleb128 0x11
 2035 0392 66000000 		.4byte	.LVL3
 2036 0396 E30A0000 		.4byte	0xae3
 2037 039a A4030000 		.4byte	0x3a4
 2038 039e 12       		.uleb128 0x12
 2039 039f 01       		.uleb128 0x1
 2040 03a0 50       		.byte	0x50
 2041 03a1 01       		.uleb128 0x1
 2042 03a2 4E       		.byte	0x4e
 2043 03a3 00       		.byte	0
 2044 03a4 11       		.uleb128 0x11
 2045 03a5 6E000000 		.4byte	.LVL4
 2046 03a9 D80A0000 		.4byte	0xad8
 2047 03ad BC030000 		.4byte	0x3bc
 2048 03b1 12       		.uleb128 0x12
 2049 03b2 01       		.uleb128 0x1
 2050 03b3 50       		.byte	0x50
ARM GAS  C:\Users\essele\AppData\Local\Temp\ccmz8StT.s 			page 82


 2051 03b4 01       		.uleb128 0x1
 2052 03b5 4F       		.byte	0x4f
 2053 03b6 12       		.uleb128 0x12
 2054 03b7 01       		.uleb128 0x1
 2055 03b8 51       		.byte	0x51
 2056 03b9 01       		.uleb128 0x1
 2057 03ba 33       		.byte	0x33
 2058 03bb 00       		.byte	0
 2059 03bc 11       		.uleb128 0x11
 2060 03bd 76000000 		.4byte	.LVL5
 2061 03c1 E30A0000 		.4byte	0xae3
 2062 03c5 CF030000 		.4byte	0x3cf
 2063 03c9 12       		.uleb128 0x12
 2064 03ca 01       		.uleb128 0x1
 2065 03cb 50       		.byte	0x50
 2066 03cc 01       		.uleb128 0x1
 2067 03cd 4F       		.byte	0x4f
 2068 03ce 00       		.byte	0
 2069 03cf 11       		.uleb128 0x11
 2070 03d0 7E000000 		.4byte	.LVL6
 2071 03d4 D80A0000 		.4byte	0xad8
 2072 03d8 E7030000 		.4byte	0x3e7
 2073 03dc 12       		.uleb128 0x12
 2074 03dd 01       		.uleb128 0x1
 2075 03de 50       		.byte	0x50
 2076 03df 01       		.uleb128 0x1
 2077 03e0 30       		.byte	0x30
 2078 03e1 12       		.uleb128 0x12
 2079 03e2 01       		.uleb128 0x1
 2080 03e3 51       		.byte	0x51
 2081 03e4 01       		.uleb128 0x1
 2082 03e5 33       		.byte	0x33
 2083 03e6 00       		.byte	0
 2084 03e7 11       		.uleb128 0x11
 2085 03e8 86000000 		.4byte	.LVL7
 2086 03ec E30A0000 		.4byte	0xae3
 2087 03f0 FA030000 		.4byte	0x3fa
 2088 03f4 12       		.uleb128 0x12
 2089 03f5 01       		.uleb128 0x1
 2090 03f6 50       		.byte	0x50
 2091 03f7 01       		.uleb128 0x1
 2092 03f8 30       		.byte	0x30
 2093 03f9 00       		.byte	0
 2094 03fa 11       		.uleb128 0x11
 2095 03fb 8E000000 		.4byte	.LVL8
 2096 03ff D80A0000 		.4byte	0xad8
 2097 0403 12040000 		.4byte	0x412
 2098 0407 12       		.uleb128 0x12
 2099 0408 01       		.uleb128 0x1
 2100 0409 50       		.byte	0x50
 2101 040a 01       		.uleb128 0x1
 2102 040b 35       		.byte	0x35
 2103 040c 12       		.uleb128 0x12
 2104 040d 01       		.uleb128 0x1
 2105 040e 51       		.byte	0x51
 2106 040f 01       		.uleb128 0x1
 2107 0410 33       		.byte	0x33
ARM GAS  C:\Users\essele\AppData\Local\Temp\ccmz8StT.s 			page 83


 2108 0411 00       		.byte	0
 2109 0412 14       		.uleb128 0x14
 2110 0413 96000000 		.4byte	.LVL9
 2111 0417 E30A0000 		.4byte	0xae3
 2112 041b 12       		.uleb128 0x12
 2113 041c 01       		.uleb128 0x1
 2114 041d 50       		.byte	0x50
 2115 041e 01       		.uleb128 0x1
 2116 041f 35       		.byte	0x35
 2117 0420 00       		.byte	0
 2118 0421 00       		.byte	0
 2119 0422 15       		.uleb128 0x15
 2120 0423 56060000 		.4byte	.LASF54
 2121 0427 01       		.byte	0x1
 2122 0428 CC01     		.2byte	0x1cc
 2123 042a 00000000 		.4byte	.LFB3
 2124 042e BC000000 		.4byte	.LFE3-.LFB3
 2125 0432 01       		.uleb128 0x1
 2126 0433 9C       		.byte	0x9c
 2127 0434 8E040000 		.4byte	0x48e
 2128 0438 16       		.uleb128 0x16
 2129 0439 88010000 		.4byte	.LASF55
 2130 043d 01       		.byte	0x1
 2131 043e CC01     		.2byte	0x1cc
 2132 0440 6B000000 		.4byte	0x6b
 2133 0444 00000000 		.4byte	.LLST0
 2134 0448 16       		.uleb128 0x16
 2135 0449 63050000 		.4byte	.LASF56
 2136 044d 01       		.byte	0x1
 2137 044e CC01     		.2byte	0x1cc
 2138 0450 6B000000 		.4byte	0x6b
 2139 0454 21000000 		.4byte	.LLST1
 2140 0458 11       		.uleb128 0x11
 2141 0459 2C000000 		.4byte	.LVL12
 2142 045d EE0A0000 		.4byte	0xaee
 2143 0461 6B040000 		.4byte	0x46b
 2144 0465 12       		.uleb128 0x12
 2145 0466 01       		.uleb128 0x1
 2146 0467 50       		.byte	0x50
 2147 0468 01       		.uleb128 0x1
 2148 0469 4E       		.byte	0x4e
 2149 046a 00       		.byte	0
 2150 046b 11       		.uleb128 0x11
 2151 046c 32000000 		.4byte	.LVL13
 2152 0470 EE0A0000 		.4byte	0xaee
 2153 0474 7E040000 		.4byte	0x47e
 2154 0478 12       		.uleb128 0x12
 2155 0479 01       		.uleb128 0x1
 2156 047a 50       		.byte	0x50
 2157 047b 01       		.uleb128 0x1
 2158 047c 30       		.byte	0x30
 2159 047d 00       		.byte	0
 2160 047e 14       		.uleb128 0x14
 2161 047f 38000000 		.4byte	.LVL14
 2162 0483 EE0A0000 		.4byte	0xaee
 2163 0487 12       		.uleb128 0x12
 2164 0488 01       		.uleb128 0x1
ARM GAS  C:\Users\essele\AppData\Local\Temp\ccmz8StT.s 			page 84


 2165 0489 50       		.byte	0x50
 2166 048a 01       		.uleb128 0x1
 2167 048b 4F       		.byte	0x4f
 2168 048c 00       		.byte	0
 2169 048d 00       		.byte	0
 2170 048e 10       		.uleb128 0x10
 2171 048f 81030000 		.4byte	.LASF57
 2172 0493 01       		.byte	0x1
 2173 0494 BA       		.byte	0xba
 2174 0495 00000000 		.4byte	.LFB1
 2175 0499 28000000 		.4byte	.LFE1-.LFB1
 2176 049d 01       		.uleb128 0x1
 2177 049e 9C       		.byte	0x9c
 2178 049f E1040000 		.4byte	0x4e1
 2179 04a3 17       		.uleb128 0x17
 2180 04a4 88010000 		.4byte	.LASF55
 2181 04a8 01       		.byte	0x1
 2182 04a9 BA       		.byte	0xba
 2183 04aa 6B000000 		.4byte	0x6b
 2184 04ae 42000000 		.4byte	.LLST2
 2185 04b2 17       		.uleb128 0x17
 2186 04b3 63050000 		.4byte	.LASF56
 2187 04b7 01       		.byte	0x1
 2188 04b8 BA       		.byte	0xba
 2189 04b9 6B000000 		.4byte	0x6b
 2190 04bd 63000000 		.4byte	.LLST3
 2191 04c1 13       		.uleb128 0x13
 2192 04c2 12000000 		.4byte	.LVL16
 2193 04c6 48030000 		.4byte	0x348
 2194 04ca 14       		.uleb128 0x14
 2195 04cb 20000000 		.4byte	.LVL17
 2196 04cf 22040000 		.4byte	0x422
 2197 04d3 12       		.uleb128 0x12
 2198 04d4 01       		.uleb128 0x1
 2199 04d5 50       		.byte	0x50
 2200 04d6 02       		.uleb128 0x2
 2201 04d7 74       		.byte	0x74
 2202 04d8 00       		.sleb128 0
 2203 04d9 12       		.uleb128 0x12
 2204 04da 01       		.uleb128 0x1
 2205 04db 51       		.byte	0x51
 2206 04dc 02       		.uleb128 0x2
 2207 04dd 75       		.byte	0x75
 2208 04de 00       		.sleb128 0
 2209 04df 00       		.byte	0
 2210 04e0 00       		.byte	0
 2211 04e1 18       		.uleb128 0x18
 2212 04e2 BD060000 		.4byte	.LASF89
 2213 04e6 01       		.byte	0x1
 2214 04e7 9F02     		.2byte	0x29f
 2215 04e9 00000000 		.4byte	.LFB4
 2216 04ed 50000000 		.4byte	.LFE4-.LFB4
 2217 04f1 01       		.uleb128 0x1
 2218 04f2 9C       		.byte	0x9c
 2219 04f3 15       		.uleb128 0x15
 2220 04f4 74030000 		.4byte	.LASF58
 2221 04f8 01       		.byte	0x1
ARM GAS  C:\Users\essele\AppData\Local\Temp\ccmz8StT.s 			page 85


 2222 04f9 D902     		.2byte	0x2d9
 2223 04fb 00000000 		.4byte	.LFB5
 2224 04ff 7C000000 		.4byte	.LFE5-.LFB5
 2225 0503 01       		.uleb128 0x1
 2226 0504 9C       		.byte	0x9c
 2227 0505 61050000 		.4byte	0x561
 2228 0509 19       		.uleb128 0x19
 2229 050a FC050000 		.4byte	.LASF59
 2230 050e 01       		.byte	0x1
 2231 050f DB02     		.2byte	0x2db
 2232 0511 6B000000 		.4byte	0x6b
 2233 0515 84000000 		.4byte	.LLST4
 2234 0519 13       		.uleb128 0x13
 2235 051a 06000000 		.4byte	.LVL18
 2236 051e F90A0000 		.4byte	0xaf9
 2237 0522 13       		.uleb128 0x13
 2238 0523 28000000 		.4byte	.LVL19
 2239 0527 040B0000 		.4byte	0xb04
 2240 052b 11       		.uleb128 0x11
 2241 052c 2E000000 		.4byte	.LVL20
 2242 0530 0F0B0000 		.4byte	0xb0f
 2243 0534 3E050000 		.4byte	0x53e
 2244 0538 12       		.uleb128 0x12
 2245 0539 01       		.uleb128 0x1
 2246 053a 50       		.byte	0x50
 2247 053b 01       		.uleb128 0x1
 2248 053c 4E       		.byte	0x4e
 2249 053d 00       		.byte	0
 2250 053e 11       		.uleb128 0x11
 2251 053f 34000000 		.4byte	.LVL21
 2252 0543 0F0B0000 		.4byte	0xb0f
 2253 0547 51050000 		.4byte	0x551
 2254 054b 12       		.uleb128 0x12
 2255 054c 01       		.uleb128 0x1
 2256 054d 50       		.byte	0x50
 2257 054e 01       		.uleb128 0x1
 2258 054f 4F       		.byte	0x4f
 2259 0550 00       		.byte	0
 2260 0551 14       		.uleb128 0x14
 2261 0552 3A000000 		.4byte	.LVL22
 2262 0556 0F0B0000 		.4byte	0xb0f
 2263 055a 12       		.uleb128 0x12
 2264 055b 01       		.uleb128 0x1
 2265 055c 50       		.byte	0x50
 2266 055d 01       		.uleb128 0x1
 2267 055e 30       		.byte	0x30
 2268 055f 00       		.byte	0
 2269 0560 00       		.byte	0
 2270 0561 1A       		.uleb128 0x1a
 2271 0562 10020000 		.4byte	.LASF61
 2272 0566 01       		.byte	0x1
 2273 0567 5103     		.2byte	0x351
 2274 0569 6B000000 		.4byte	0x6b
 2275 056d 00000000 		.4byte	.LFB6
 2276 0571 1C000000 		.4byte	.LFE6-.LFB6
 2277 0575 01       		.uleb128 0x1
 2278 0576 9C       		.byte	0x9c
ARM GAS  C:\Users\essele\AppData\Local\Temp\ccmz8StT.s 			page 86


 2279 0577 8A050000 		.4byte	0x58a
 2280 057b 1B       		.uleb128 0x1b
 2281 057c DE030000 		.4byte	.LASF60
 2282 0580 01       		.byte	0x1
 2283 0581 5303     		.2byte	0x353
 2284 0583 83000000 		.4byte	0x83
 2285 0587 01       		.uleb128 0x1
 2286 0588 53       		.byte	0x53
 2287 0589 00       		.byte	0
 2288 058a 1C       		.uleb128 0x1c
 2289 058b 8F010000 		.4byte	.LASF84
 2290 058f 01       		.byte	0x1
 2291 0590 6803     		.2byte	0x368
 2292 0592 6B000000 		.4byte	0x6b
 2293 0596 00000000 		.4byte	.LFB7
 2294 059a 0C000000 		.4byte	.LFE7-.LFB7
 2295 059e 01       		.uleb128 0x1
 2296 059f 9C       		.byte	0x9c
 2297 05a0 1A       		.uleb128 0x1a
 2298 05a1 82060000 		.4byte	.LASF62
 2299 05a5 01       		.byte	0x1
 2300 05a6 8203     		.2byte	0x382
 2301 05a8 6B000000 		.4byte	0x6b
 2302 05ac 00000000 		.4byte	.LFB8
 2303 05b0 1C000000 		.4byte	.LFE8-.LFB8
 2304 05b4 01       		.uleb128 0x1
 2305 05b5 9C       		.byte	0x9c
 2306 05b6 CB050000 		.4byte	0x5cb
 2307 05ba 1D       		.uleb128 0x1d
 2308 05bb 72657300 		.ascii	"res\000"
 2309 05bf 01       		.byte	0x1
 2310 05c0 8403     		.2byte	0x384
 2311 05c2 6B000000 		.4byte	0x6b
 2312 05c6 97000000 		.4byte	.LLST5
 2313 05ca 00       		.byte	0
 2314 05cb 1A       		.uleb128 0x1a
 2315 05cc 8F030000 		.4byte	.LASF63
 2316 05d0 01       		.byte	0x1
 2317 05d1 9F03     		.2byte	0x39f
 2318 05d3 6B000000 		.4byte	0x6b
 2319 05d7 00000000 		.4byte	.LFB9
 2320 05db 0C000000 		.4byte	.LFE9-.LFB9
 2321 05df 01       		.uleb128 0x1
 2322 05e0 9C       		.byte	0x9c
 2323 05e1 F6050000 		.4byte	0x5f6
 2324 05e5 16       		.uleb128 0x16
 2325 05e6 C6050000 		.4byte	.LASF64
 2326 05ea 01       		.byte	0x1
 2327 05eb 9F03     		.2byte	0x39f
 2328 05ed 6B000000 		.4byte	0x6b
 2329 05f1 CD000000 		.4byte	.LLST6
 2330 05f5 00       		.byte	0
 2331 05f6 1A       		.uleb128 0x1a
 2332 05f7 05050000 		.4byte	.LASF65
 2333 05fb 01       		.byte	0x1
 2334 05fc BF03     		.2byte	0x3bf
 2335 05fe 6B000000 		.4byte	0x6b
ARM GAS  C:\Users\essele\AppData\Local\Temp\ccmz8StT.s 			page 87


 2336 0602 00000000 		.4byte	.LFB10
 2337 0606 14000000 		.4byte	.LFE10-.LFB10
 2338 060a 01       		.uleb128 0x1
 2339 060b 9C       		.byte	0x9c
 2340 060c 21060000 		.4byte	0x621
 2341 0610 16       		.uleb128 0x16
 2342 0611 6A010000 		.4byte	.LASF66
 2343 0615 01       		.byte	0x1
 2344 0616 BF03     		.2byte	0x3bf
 2345 0618 6B000000 		.4byte	0x6b
 2346 061c EE000000 		.4byte	.LLST7
 2347 0620 00       		.byte	0
 2348 0621 1A       		.uleb128 0x1a
 2349 0622 D6050000 		.4byte	.LASF67
 2350 0626 01       		.byte	0x1
 2351 0627 D603     		.2byte	0x3d6
 2352 0629 77000000 		.4byte	0x77
 2353 062d 00000000 		.4byte	.LFB11
 2354 0631 34000000 		.4byte	.LFE11-.LFB11
 2355 0635 01       		.uleb128 0x1
 2356 0636 9C       		.byte	0x9c
 2357 0637 5C060000 		.4byte	0x65c
 2358 063b 16       		.uleb128 0x16
 2359 063c 6A010000 		.4byte	.LASF66
 2360 0640 01       		.byte	0x1
 2361 0641 D603     		.2byte	0x3d6
 2362 0643 6B000000 		.4byte	0x6b
 2363 0647 0F010000 		.4byte	.LLST8
 2364 064b 19       		.uleb128 0x19
 2365 064c F4010000 		.4byte	.LASF68
 2366 0650 01       		.byte	0x1
 2367 0651 D803     		.2byte	0x3d8
 2368 0653 77000000 		.4byte	0x77
 2369 0657 49010000 		.4byte	.LLST9
 2370 065b 00       		.byte	0
 2371 065c 15       		.uleb128 0x15
 2372 065d 90000000 		.4byte	.LASF69
 2373 0661 01       		.byte	0x1
 2374 0662 3E05     		.2byte	0x53e
 2375 0664 00000000 		.4byte	.LFB12
 2376 0668 9C000000 		.4byte	.LFE12-.LFB12
 2377 066c 01       		.uleb128 0x1
 2378 066d 9C       		.byte	0x9c
 2379 066e B5060000 		.4byte	0x6b5
 2380 0672 16       		.uleb128 0x16
 2381 0673 6A010000 		.4byte	.LASF66
 2382 0677 01       		.byte	0x1
 2383 0678 3E05     		.2byte	0x53e
 2384 067a 6B000000 		.4byte	0x6b
 2385 067e A6010000 		.4byte	.LLST10
 2386 0682 1E       		.uleb128 0x1e
 2387 0683 F3020000 		.4byte	.LASF70
 2388 0687 01       		.byte	0x1
 2389 0688 3E05     		.2byte	0x53e
 2390 068a B5060000 		.4byte	0x6b5
 2391 068e 01       		.uleb128 0x1
 2392 068f 51       		.byte	0x51
ARM GAS  C:\Users\essele\AppData\Local\Temp\ccmz8StT.s 			page 88


 2393 0690 16       		.uleb128 0x16
 2394 0691 57050000 		.4byte	.LASF71
 2395 0695 01       		.byte	0x1
 2396 0696 3E05     		.2byte	0x53e
 2397 0698 77000000 		.4byte	0x77
 2398 069c C7010000 		.4byte	.LLST11
 2399 06a0 1F       		.uleb128 0x1f
 2400 06a1 00000000 		.4byte	.Ldebug_ranges0+0
 2401 06a5 1D       		.uleb128 0x1d
 2402 06a6 6900     		.ascii	"i\000"
 2403 06a8 01       		.byte	0x1
 2404 06a9 5305     		.2byte	0x553
 2405 06ab 77000000 		.4byte	0x77
 2406 06af F3010000 		.4byte	.LLST12
 2407 06b3 00       		.byte	0
 2408 06b4 00       		.byte	0
 2409 06b5 20       		.uleb128 0x20
 2410 06b6 04       		.byte	0x4
 2411 06b7 BB060000 		.4byte	0x6bb
 2412 06bb 21       		.uleb128 0x21
 2413 06bc 6B000000 		.4byte	0x6b
 2414 06c0 15       		.uleb128 0x15
 2415 06c1 E9050000 		.4byte	.LASF72
 2416 06c5 01       		.byte	0x1
 2417 06c6 4907     		.2byte	0x749
 2418 06c8 00000000 		.4byte	.LFB14
 2419 06cc B8000000 		.4byte	.LFE14-.LFB14
 2420 06d0 01       		.uleb128 0x1
 2421 06d1 9C       		.byte	0x9c
 2422 06d2 3A070000 		.4byte	0x73a
 2423 06d6 16       		.uleb128 0x16
 2424 06d7 6A010000 		.4byte	.LASF66
 2425 06db 01       		.byte	0x1
 2426 06dc 4907     		.2byte	0x749
 2427 06de 6B000000 		.4byte	0x6b
 2428 06e2 1C020000 		.4byte	.LLST13
 2429 06e6 16       		.uleb128 0x16
 2430 06e7 F3020000 		.4byte	.LASF70
 2431 06eb 01       		.byte	0x1
 2432 06ec 4907     		.2byte	0x749
 2433 06ee B5060000 		.4byte	0x6b5
 2434 06f2 3D020000 		.4byte	.LLST14
 2435 06f6 16       		.uleb128 0x16
 2436 06f7 57050000 		.4byte	.LASF71
 2437 06fb 01       		.byte	0x1
 2438 06fc 4907     		.2byte	0x749
 2439 06fe 77000000 		.4byte	0x77
 2440 0702 69020000 		.4byte	.LLST15
 2441 0706 22       		.uleb128 0x22
 2442 0707 18000000 		.4byte	.Ldebug_ranges0+0x18
 2443 070b 2A070000 		.4byte	0x72a
 2444 070f 23       		.uleb128 0x23
 2445 0710 5B040000 		.4byte	.LASF77
 2446 0714 01       		.byte	0x1
 2447 0715 6307     		.2byte	0x763
 2448 0717 3A070000 		.4byte	0x73a
 2449 071b 1D       		.uleb128 0x1d
ARM GAS  C:\Users\essele\AppData\Local\Temp\ccmz8StT.s 			page 89


 2450 071c 6900     		.ascii	"i\000"
 2451 071e 01       		.byte	0x1
 2452 071f 6607     		.2byte	0x766
 2453 0721 77000000 		.4byte	0x77
 2454 0725 A0020000 		.4byte	.LLST16
 2455 0729 00       		.byte	0
 2456 072a 14       		.uleb128 0x14
 2457 072b 12000000 		.4byte	.LVL54
 2458 072f 1A0B0000 		.4byte	0xb1a
 2459 0733 12       		.uleb128 0x12
 2460 0734 01       		.uleb128 0x1
 2461 0735 50       		.byte	0x50
 2462 0736 01       		.uleb128 0x1
 2463 0737 30       		.byte	0x30
 2464 0738 00       		.byte	0
 2465 0739 00       		.byte	0
 2466 073a 20       		.uleb128 0x20
 2467 073b 04       		.byte	0x4
 2468 073c 40070000 		.4byte	0x740
 2469 0740 21       		.uleb128 0x21
 2470 0741 77000000 		.4byte	0x77
 2471 0745 15       		.uleb128 0x15
 2472 0746 D6010000 		.4byte	.LASF73
 2473 074a 01       		.byte	0x1
 2474 074b E408     		.2byte	0x8e4
 2475 074d 00000000 		.4byte	.LFB16
 2476 0751 30000000 		.4byte	.LFE16-.LFB16
 2477 0755 01       		.uleb128 0x1
 2478 0756 9C       		.byte	0x9c
 2479 0757 6C070000 		.4byte	0x76c
 2480 075b 16       		.uleb128 0x16
 2481 075c 6A010000 		.4byte	.LASF66
 2482 0760 01       		.byte	0x1
 2483 0761 E408     		.2byte	0x8e4
 2484 0763 6B000000 		.4byte	0x6b
 2485 0767 C9020000 		.4byte	.LLST17
 2486 076b 00       		.byte	0
 2487 076c 1A       		.uleb128 0x1a
 2488 076d 9D040000 		.4byte	.LASF74
 2489 0771 01       		.byte	0x1
 2490 0772 7506     		.2byte	0x675
 2491 0774 77000000 		.4byte	0x77
 2492 0778 00000000 		.4byte	.LFB13
 2493 077c 58000000 		.4byte	.LFE13-.LFB13
 2494 0780 01       		.uleb128 0x1
 2495 0781 9C       		.byte	0x9c
 2496 0782 0B080000 		.4byte	0x80b
 2497 0786 16       		.uleb128 0x16
 2498 0787 6A010000 		.4byte	.LASF66
 2499 078b 01       		.byte	0x1
 2500 078c 7506     		.2byte	0x675
 2501 078e 6B000000 		.4byte	0x6b
 2502 0792 EA020000 		.4byte	.LLST18
 2503 0796 16       		.uleb128 0x16
 2504 0797 F3020000 		.4byte	.LASF70
 2505 079b 01       		.byte	0x1
 2506 079c 7506     		.2byte	0x675
ARM GAS  C:\Users\essele\AppData\Local\Temp\ccmz8StT.s 			page 90


 2507 079e 0B080000 		.4byte	0x80b
 2508 07a2 24030000 		.4byte	.LLST19
 2509 07a6 16       		.uleb128 0x16
 2510 07a7 57050000 		.4byte	.LASF71
 2511 07ab 01       		.byte	0x1
 2512 07ac 7506     		.2byte	0x675
 2513 07ae 77000000 		.4byte	0x77
 2514 07b2 66030000 		.4byte	.LLST20
 2515 07b6 24       		.uleb128 0x24
 2516 07b7 24000000 		.4byte	.LBB6
 2517 07bb 18000000 		.4byte	.LBE6-.LBB6
 2518 07bf D2070000 		.4byte	0x7d2
 2519 07c3 1D       		.uleb128 0x1d
 2520 07c4 6900     		.ascii	"i\000"
 2521 07c6 01       		.byte	0x1
 2522 07c7 8206     		.2byte	0x682
 2523 07c9 77000000 		.4byte	0x77
 2524 07cd A8030000 		.4byte	.LLST21
 2525 07d1 00       		.byte	0
 2526 07d2 11       		.uleb128 0x11
 2527 07d3 18000000 		.4byte	.LVL68
 2528 07d7 21060000 		.4byte	0x621
 2529 07db E6070000 		.4byte	0x7e6
 2530 07df 12       		.uleb128 0x12
 2531 07e0 01       		.uleb128 0x1
 2532 07e1 50       		.byte	0x50
 2533 07e2 02       		.uleb128 0x2
 2534 07e3 75       		.byte	0x75
 2535 07e4 00       		.sleb128 0
 2536 07e5 00       		.byte	0
 2537 07e6 11       		.uleb128 0x11
 2538 07e7 22000000 		.4byte	.LVL69
 2539 07eb 21060000 		.4byte	0x621
 2540 07ef FA070000 		.4byte	0x7fa
 2541 07f3 12       		.uleb128 0x12
 2542 07f4 01       		.uleb128 0x1
 2543 07f5 50       		.byte	0x50
 2544 07f6 02       		.uleb128 0x2
 2545 07f7 75       		.byte	0x75
 2546 07f8 00       		.sleb128 0
 2547 07f9 00       		.byte	0
 2548 07fa 14       		.uleb128 0x14
 2549 07fb 42000000 		.4byte	.LVL74
 2550 07ff 45070000 		.4byte	0x745
 2551 0803 12       		.uleb128 0x12
 2552 0804 01       		.uleb128 0x1
 2553 0805 50       		.byte	0x50
 2554 0806 02       		.uleb128 0x2
 2555 0807 75       		.byte	0x75
 2556 0808 00       		.sleb128 0
 2557 0809 00       		.byte	0
 2558 080a 00       		.byte	0
 2559 080b 20       		.uleb128 0x20
 2560 080c 04       		.byte	0x4
 2561 080d 6B000000 		.4byte	0x6b
 2562 0811 1A       		.uleb128 0x1a
 2563 0812 C2010000 		.4byte	.LASF75
ARM GAS  C:\Users\essele\AppData\Local\Temp\ccmz8StT.s 			page 91


 2564 0816 01       		.byte	0x1
 2565 0817 3808     		.2byte	0x838
 2566 0819 77000000 		.4byte	0x77
 2567 081d 00000000 		.4byte	.LFB15
 2568 0821 6C000000 		.4byte	.LFE15-.LFB15
 2569 0825 01       		.uleb128 0x1
 2570 0826 9C       		.byte	0x9c
 2571 0827 E3080000 		.4byte	0x8e3
 2572 082b 16       		.uleb128 0x16
 2573 082c 6A010000 		.4byte	.LASF66
 2574 0830 01       		.byte	0x1
 2575 0831 3808     		.2byte	0x838
 2576 0833 6B000000 		.4byte	0x6b
 2577 0837 D2030000 		.4byte	.LLST22
 2578 083b 16       		.uleb128 0x16
 2579 083c F3020000 		.4byte	.LASF70
 2580 0840 01       		.byte	0x1
 2581 0841 3808     		.2byte	0x838
 2582 0843 0B080000 		.4byte	0x80b
 2583 0847 F3030000 		.4byte	.LLST23
 2584 084b 16       		.uleb128 0x16
 2585 084c 57050000 		.4byte	.LASF71
 2586 0850 01       		.byte	0x1
 2587 0851 3808     		.2byte	0x838
 2588 0853 77000000 		.4byte	0x77
 2589 0857 1F040000 		.4byte	.LLST24
 2590 085b 19       		.uleb128 0x19
 2591 085c EA010000 		.4byte	.LASF76
 2592 0860 01       		.byte	0x1
 2593 0861 3A08     		.2byte	0x83a
 2594 0863 83000000 		.4byte	0x83
 2595 0867 64040000 		.4byte	.LLST25
 2596 086b 24       		.uleb128 0x24
 2597 086c 36000000 		.4byte	.LBB7
 2598 0870 1C000000 		.4byte	.LBE7-.LBB7
 2599 0874 97080000 		.4byte	0x897
 2600 0878 19       		.uleb128 0x19
 2601 0879 5B040000 		.4byte	.LASF77
 2602 087d 01       		.byte	0x1
 2603 087e 4C08     		.2byte	0x84c
 2604 0880 E3080000 		.4byte	0x8e3
 2605 0884 89040000 		.4byte	.LLST26
 2606 0888 1D       		.uleb128 0x1d
 2607 0889 6900     		.ascii	"i\000"
 2608 088b 01       		.byte	0x1
 2609 088c 4F08     		.2byte	0x84f
 2610 088e 77000000 		.4byte	0x77
 2611 0892 9C040000 		.4byte	.LLST27
 2612 0896 00       		.byte	0
 2613 0897 11       		.uleb128 0x11
 2614 0898 12000000 		.4byte	.LVL81
 2615 089c 1A0B0000 		.4byte	0xb1a
 2616 08a0 AA080000 		.4byte	0x8aa
 2617 08a4 12       		.uleb128 0x12
 2618 08a5 01       		.uleb128 0x1
 2619 08a6 50       		.byte	0x50
 2620 08a7 01       		.uleb128 0x1
ARM GAS  C:\Users\essele\AppData\Local\Temp\ccmz8StT.s 			page 92


 2621 08a8 30       		.byte	0x30
 2622 08a9 00       		.byte	0
 2623 08aa 11       		.uleb128 0x11
 2624 08ab 24000000 		.4byte	.LVL82
 2625 08af 21060000 		.4byte	0x621
 2626 08b3 BE080000 		.4byte	0x8be
 2627 08b7 12       		.uleb128 0x12
 2628 08b8 01       		.uleb128 0x1
 2629 08b9 50       		.byte	0x50
 2630 08ba 02       		.uleb128 0x2
 2631 08bb 76       		.byte	0x76
 2632 08bc 00       		.sleb128 0
 2633 08bd 00       		.byte	0
 2634 08be 11       		.uleb128 0x11
 2635 08bf 2E000000 		.4byte	.LVL83
 2636 08c3 21060000 		.4byte	0x621
 2637 08c7 D2080000 		.4byte	0x8d2
 2638 08cb 12       		.uleb128 0x12
 2639 08cc 01       		.uleb128 0x1
 2640 08cd 50       		.byte	0x50
 2641 08ce 02       		.uleb128 0x2
 2642 08cf 76       		.byte	0x76
 2643 08d0 00       		.sleb128 0
 2644 08d1 00       		.byte	0
 2645 08d2 14       		.uleb128 0x14
 2646 08d3 58000000 		.4byte	.LVL90
 2647 08d7 45070000 		.4byte	0x745
 2648 08db 12       		.uleb128 0x12
 2649 08dc 01       		.uleb128 0x1
 2650 08dd 50       		.byte	0x50
 2651 08de 02       		.uleb128 0x2
 2652 08df 76       		.byte	0x76
 2653 08e0 00       		.sleb128 0
 2654 08e1 00       		.byte	0
 2655 08e2 00       		.byte	0
 2656 08e3 20       		.uleb128 0x20
 2657 08e4 04       		.byte	0x4
 2658 08e5 77000000 		.4byte	0x77
 2659 08e9 15       		.uleb128 0x15
 2660 08ea 1D050000 		.4byte	.LASF78
 2661 08ee 01       		.byte	0x1
 2662 08ef FC08     		.2byte	0x8fc
 2663 08f1 00000000 		.4byte	.LFB17
 2664 08f5 1C000000 		.4byte	.LFE17-.LFB17
 2665 08f9 01       		.uleb128 0x1
 2666 08fa 9C       		.byte	0x9c
 2667 08fb 10090000 		.4byte	0x910
 2668 08ff 16       		.uleb128 0x16
 2669 0900 6A010000 		.4byte	.LASF66
 2670 0904 01       		.byte	0x1
 2671 0905 FC08     		.2byte	0x8fc
 2672 0907 6B000000 		.4byte	0x6b
 2673 090b C6040000 		.4byte	.LLST28
 2674 090f 00       		.byte	0
 2675 0910 15       		.uleb128 0x15
 2676 0911 4D040000 		.4byte	.LASF79
 2677 0915 01       		.byte	0x1
ARM GAS  C:\Users\essele\AppData\Local\Temp\ccmz8StT.s 			page 93


 2678 0916 1A09     		.2byte	0x91a
 2679 0918 00000000 		.4byte	.LFB18
 2680 091c 0C000000 		.4byte	.LFE18-.LFB18
 2681 0920 01       		.uleb128 0x1
 2682 0921 9C       		.byte	0x9c
 2683 0922 35090000 		.4byte	0x935
 2684 0926 1E       		.uleb128 0x1e
 2685 0927 50050000 		.4byte	.LASF80
 2686 092b 01       		.byte	0x1
 2687 092c 1A09     		.2byte	0x91a
 2688 092e 6B000000 		.4byte	0x6b
 2689 0932 01       		.uleb128 0x1
 2690 0933 50       		.byte	0x50
 2691 0934 00       		.byte	0
 2692 0935 1A       		.uleb128 0x1a
 2693 0936 3C020000 		.4byte	.LASF81
 2694 093a 01       		.byte	0x1
 2695 093b 3309     		.2byte	0x933
 2696 093d 6B000000 		.4byte	0x6b
 2697 0941 00000000 		.4byte	.LFB19
 2698 0945 24000000 		.4byte	.LFE19-.LFB19
 2699 0949 01       		.uleb128 0x1
 2700 094a 9C       		.byte	0x9c
 2701 094b 6F090000 		.4byte	0x96f
 2702 094f 16       		.uleb128 0x16
 2703 0950 6A010000 		.4byte	.LASF66
 2704 0954 01       		.byte	0x1
 2705 0955 3309     		.2byte	0x933
 2706 0957 6B000000 		.4byte	0x6b
 2707 095b E7040000 		.4byte	.LLST29
 2708 095f 1D       		.uleb128 0x1d
 2709 0960 637200   		.ascii	"cr\000"
 2710 0963 01       		.byte	0x1
 2711 0964 3509     		.2byte	0x935
 2712 0966 83000000 		.4byte	0x83
 2713 096a 21050000 		.4byte	.LLST30
 2714 096e 00       		.byte	0
 2715 096f 15       		.uleb128 0x15
 2716 0970 99020000 		.4byte	.LASF82
 2717 0974 01       		.byte	0x1
 2718 0975 5C09     		.2byte	0x95c
 2719 0977 00000000 		.4byte	.LFB20
 2720 097b 24000000 		.4byte	.LFE20-.LFB20
 2721 097f 01       		.uleb128 0x1
 2722 0980 9C       		.byte	0x9c
 2723 0981 94090000 		.4byte	0x994
 2724 0985 1E       		.uleb128 0x1e
 2725 0986 77020000 		.4byte	.LASF83
 2726 098a 01       		.byte	0x1
 2727 098b 5C09     		.2byte	0x95c
 2728 098d 6B000000 		.4byte	0x6b
 2729 0991 01       		.uleb128 0x1
 2730 0992 50       		.byte	0x50
 2731 0993 00       		.byte	0
 2732 0994 1C       		.uleb128 0x1c
 2733 0995 90050000 		.4byte	.LASF85
 2734 0999 01       		.byte	0x1
ARM GAS  C:\Users\essele\AppData\Local\Temp\ccmz8StT.s 			page 94


 2735 099a 7A09     		.2byte	0x97a
 2736 099c 6B000000 		.4byte	0x6b
 2737 09a0 00000000 		.4byte	.LFB21
 2738 09a4 14000000 		.4byte	.LFE21-.LFB21
 2739 09a8 01       		.uleb128 0x1
 2740 09a9 9C       		.byte	0x9c
 2741 09aa 1A       		.uleb128 0x1a
 2742 09ab 66000000 		.4byte	.LASF86
 2743 09af 01       		.byte	0x1
 2744 09b0 9509     		.2byte	0x995
 2745 09b2 6B000000 		.4byte	0x6b
 2746 09b6 00000000 		.4byte	.LFB22
 2747 09ba 14000000 		.4byte	.LFE22-.LFB22
 2748 09be 01       		.uleb128 0x1
 2749 09bf 9C       		.byte	0x9c
 2750 09c0 D5090000 		.4byte	0x9d5
 2751 09c4 19       		.uleb128 0x19
 2752 09c5 1D070000 		.4byte	.LASF87
 2753 09c9 01       		.byte	0x1
 2754 09ca 9709     		.2byte	0x997
 2755 09cc 6B000000 		.4byte	0x6b
 2756 09d0 57050000 		.4byte	.LLST31
 2757 09d4 00       		.byte	0
 2758 09d5 1C       		.uleb128 0x1c
 2759 09d6 2C000000 		.4byte	.LASF88
 2760 09da 01       		.byte	0x1
 2761 09db AD09     		.2byte	0x9ad
 2762 09dd 6B000000 		.4byte	0x6b
 2763 09e1 00000000 		.4byte	.LFB23
 2764 09e5 10000000 		.4byte	.LFE23-.LFB23
 2765 09e9 01       		.uleb128 0x1
 2766 09ea 9C       		.byte	0x9c
 2767 09eb 18       		.uleb128 0x18
 2768 09ec EB060000 		.4byte	.LASF90
 2769 09f0 01       		.byte	0x1
 2770 09f1 BB09     		.2byte	0x9bb
 2771 09f3 00000000 		.4byte	.LFB24
 2772 09f7 10000000 		.4byte	.LFE24-.LFB24
 2773 09fb 01       		.uleb128 0x1
 2774 09fc 9C       		.byte	0x9c
 2775 09fd 18       		.uleb128 0x18
 2776 09fe 83020000 		.4byte	.LASF91
 2777 0a02 01       		.byte	0x1
 2778 0a03 D109     		.2byte	0x9d1
 2779 0a05 00000000 		.4byte	.LFB25
 2780 0a09 10000000 		.4byte	.LFE25-.LFB25
 2781 0a0d 01       		.uleb128 0x1
 2782 0a0e 9C       		.byte	0x9c
 2783 0a0f 25       		.uleb128 0x25
 2784 0a10 B5020000 		.4byte	.LASF92
 2785 0a14 01       		.byte	0x1
 2786 0a15 28       		.byte	0x28
 2787 0a16 6B000000 		.4byte	0x6b
 2788 0a1a 05       		.uleb128 0x5
 2789 0a1b 03       		.byte	0x3
 2790 0a1c 00000000 		.4byte	USBUART_initVar
 2791 0a20 26       		.uleb128 0x26
ARM GAS  C:\Users\essele\AppData\Local\Temp\ccmz8StT.s 			page 95


 2792 0a21 07000000 		.4byte	.LASF93
 2793 0a25 03       		.byte	0x3
 2794 0a26 D302     		.2byte	0x2d3
 2795 0a28 A4000000 		.4byte	0xa4
 2796 0a2c 26       		.uleb128 0x26
 2797 0a2d D5060000 		.4byte	.LASF94
 2798 0a31 03       		.byte	0x3
 2799 0a32 D402     		.2byte	0x2d4
 2800 0a34 A4000000 		.4byte	0xa4
 2801 0a38 26       		.uleb128 0x26
 2802 0a39 6C060000 		.4byte	.LASF95
 2803 0a3d 03       		.byte	0x3
 2804 0a3e D502     		.2byte	0x2d5
 2805 0a40 A4000000 		.4byte	0xa4
 2806 0a44 26       		.uleb128 0x26
 2807 0a45 00070000 		.4byte	.LASF96
 2808 0a49 03       		.byte	0x3
 2809 0a4a D602     		.2byte	0x2d6
 2810 0a4c A4000000 		.4byte	0xa4
 2811 0a50 26       		.uleb128 0x26
 2812 0a51 73010000 		.4byte	.LASF97
 2813 0a55 03       		.byte	0x3
 2814 0a56 D702     		.2byte	0x2d7
 2815 0a58 A4000000 		.4byte	0xa4
 2816 0a5c 27       		.uleb128 0x27
 2817 0a5d C5020000 		.4byte	.LASF98
 2818 0a61 04       		.byte	0x4
 2819 0a62 72       		.byte	0x72
 2820 0a63 A4000000 		.4byte	0xa4
 2821 0a67 0A       		.uleb128 0xa
 2822 0a68 A4000000 		.4byte	0xa4
 2823 0a6c 770A0000 		.4byte	0xa77
 2824 0a70 0B       		.uleb128 0xb
 2825 0a71 C1000000 		.4byte	0xc1
 2826 0a75 01       		.byte	0x1
 2827 0a76 00       		.byte	0
 2828 0a77 27       		.uleb128 0x27
 2829 0a78 BA040000 		.4byte	.LASF99
 2830 0a7c 04       		.byte	0x4
 2831 0a7d 73       		.byte	0x73
 2832 0a7e 820A0000 		.4byte	0xa82
 2833 0a82 05       		.uleb128 0x5
 2834 0a83 670A0000 		.4byte	0xa67
 2835 0a87 27       		.uleb128 0x27
 2836 0a88 EB030000 		.4byte	.LASF100
 2837 0a8c 04       		.byte	0x4
 2838 0a8d 75       		.byte	0x75
 2839 0a8e A4000000 		.4byte	0xa4
 2840 0a92 0A       		.uleb128 0xa
 2841 0a93 A20A0000 		.4byte	0xaa2
 2842 0a97 A20A0000 		.4byte	0xaa2
 2843 0a9b 0B       		.uleb128 0xb
 2844 0a9c C1000000 		.4byte	0xc1
 2845 0aa0 08       		.byte	0x8
 2846 0aa1 00       		.byte	0
 2847 0aa2 05       		.uleb128 0x5
 2848 0aa3 3D010000 		.4byte	0x13d
ARM GAS  C:\Users\essele\AppData\Local\Temp\ccmz8StT.s 			page 96


 2849 0aa7 27       		.uleb128 0x27
 2850 0aa8 58010000 		.4byte	.LASF101
 2851 0aac 04       		.byte	0x4
 2852 0aad 79       		.byte	0x79
 2853 0aae B20A0000 		.4byte	0xab2
 2854 0ab2 05       		.uleb128 0x5
 2855 0ab3 920A0000 		.4byte	0xa92
 2856 0ab7 27       		.uleb128 0x27
 2857 0ab8 79000000 		.4byte	.LASF102
 2858 0abc 04       		.byte	0x4
 2859 0abd 9B       		.byte	0x9b
 2860 0abe A4000000 		.4byte	0xa4
 2861 0ac2 28       		.uleb128 0x28
 2862 0ac3 66020000 		.4byte	.LASF103
 2863 0ac7 66020000 		.4byte	.LASF103
 2864 0acb 05       		.byte	0x5
 2865 0acc DA       		.byte	0xda
 2866 0acd 28       		.uleb128 0x28
 2867 0ace B8030000 		.4byte	.LASF104
 2868 0ad2 B8030000 		.4byte	.LASF104
 2869 0ad6 05       		.byte	0x5
 2870 0ad7 64       		.byte	0x64
 2871 0ad8 28       		.uleb128 0x28
 2872 0ad9 80040000 		.4byte	.LASF105
 2873 0add 80040000 		.4byte	.LASF105
 2874 0ae1 05       		.byte	0x5
 2875 0ae2 C0       		.byte	0xc0
 2876 0ae3 28       		.uleb128 0x28
 2877 0ae4 E4020000 		.4byte	.LASF106
 2878 0ae8 E4020000 		.4byte	.LASF106
 2879 0aec 05       		.byte	0x5
 2880 0aed BD       		.byte	0xbd
 2881 0aee 28       		.uleb128 0x28
 2882 0aef F9040000 		.4byte	.LASF107
 2883 0af3 F9040000 		.4byte	.LASF107
 2884 0af7 05       		.byte	0x5
 2885 0af8 C3       		.byte	0xc3
 2886 0af9 28       		.uleb128 0x28
 2887 0afa 4A030000 		.4byte	.LASF108
 2888 0afe 4A030000 		.4byte	.LASF108
 2889 0b02 05       		.byte	0x5
 2890 0b03 E5       		.byte	0xe5
 2891 0b04 28       		.uleb128 0x28
 2892 0b05 16000000 		.4byte	.LASF109
 2893 0b09 16000000 		.4byte	.LASF109
 2894 0b0d 05       		.byte	0x5
 2895 0b0e E6       		.byte	0xe6
 2896 0b0f 28       		.uleb128 0x28
 2897 0b10 2F020000 		.4byte	.LASF110
 2898 0b14 2F020000 		.4byte	.LASF110
 2899 0b18 05       		.byte	0x5
 2900 0b19 C5       		.byte	0xc5
 2901 0b1a 28       		.uleb128 0x28
 2902 0b1b D3040000 		.4byte	.LASF111
 2903 0b1f D3040000 		.4byte	.LASF111
 2904 0b23 05       		.byte	0x5
 2905 0b24 E7       		.byte	0xe7
ARM GAS  C:\Users\essele\AppData\Local\Temp\ccmz8StT.s 			page 97


 2906 0b25 00       		.byte	0
 2907              		.section	.debug_abbrev,"",%progbits
 2908              	.Ldebug_abbrev0:
 2909 0000 01       		.uleb128 0x1
 2910 0001 11       		.uleb128 0x11
 2911 0002 01       		.byte	0x1
 2912 0003 25       		.uleb128 0x25
 2913 0004 0E       		.uleb128 0xe
 2914 0005 13       		.uleb128 0x13
 2915 0006 0B       		.uleb128 0xb
 2916 0007 03       		.uleb128 0x3
 2917 0008 0E       		.uleb128 0xe
 2918 0009 1B       		.uleb128 0x1b
 2919 000a 0E       		.uleb128 0xe
 2920 000b 55       		.uleb128 0x55
 2921 000c 17       		.uleb128 0x17
 2922 000d 11       		.uleb128 0x11
 2923 000e 01       		.uleb128 0x1
 2924 000f 10       		.uleb128 0x10
 2925 0010 17       		.uleb128 0x17
 2926 0011 00       		.byte	0
 2927 0012 00       		.byte	0
 2928 0013 02       		.uleb128 0x2
 2929 0014 24       		.uleb128 0x24
 2930 0015 00       		.byte	0
 2931 0016 0B       		.uleb128 0xb
 2932 0017 0B       		.uleb128 0xb
 2933 0018 3E       		.uleb128 0x3e
 2934 0019 0B       		.uleb128 0xb
 2935 001a 03       		.uleb128 0x3
 2936 001b 0E       		.uleb128 0xe
 2937 001c 00       		.byte	0
 2938 001d 00       		.byte	0
 2939 001e 03       		.uleb128 0x3
 2940 001f 24       		.uleb128 0x24
 2941 0020 00       		.byte	0
 2942 0021 0B       		.uleb128 0xb
 2943 0022 0B       		.uleb128 0xb
 2944 0023 3E       		.uleb128 0x3e
 2945 0024 0B       		.uleb128 0xb
 2946 0025 03       		.uleb128 0x3
 2947 0026 08       		.uleb128 0x8
 2948 0027 00       		.byte	0
 2949 0028 00       		.byte	0
 2950 0029 04       		.uleb128 0x4
 2951 002a 16       		.uleb128 0x16
 2952 002b 00       		.byte	0
 2953 002c 03       		.uleb128 0x3
 2954 002d 0E       		.uleb128 0xe
 2955 002e 3A       		.uleb128 0x3a
 2956 002f 0B       		.uleb128 0xb
 2957 0030 3B       		.uleb128 0x3b
 2958 0031 05       		.uleb128 0x5
 2959 0032 49       		.uleb128 0x49
 2960 0033 13       		.uleb128 0x13
 2961 0034 00       		.byte	0
 2962 0035 00       		.byte	0
ARM GAS  C:\Users\essele\AppData\Local\Temp\ccmz8StT.s 			page 98


 2963 0036 05       		.uleb128 0x5
 2964 0037 35       		.uleb128 0x35
 2965 0038 00       		.byte	0
 2966 0039 49       		.uleb128 0x49
 2967 003a 13       		.uleb128 0x13
 2968 003b 00       		.byte	0
 2969 003c 00       		.byte	0
 2970 003d 06       		.uleb128 0x6
 2971 003e 13       		.uleb128 0x13
 2972 003f 01       		.byte	0x1
 2973 0040 0B       		.uleb128 0xb
 2974 0041 0B       		.uleb128 0xb
 2975 0042 3A       		.uleb128 0x3a
 2976 0043 0B       		.uleb128 0xb
 2977 0044 3B       		.uleb128 0x3b
 2978 0045 0B       		.uleb128 0xb
 2979 0046 01       		.uleb128 0x1
 2980 0047 13       		.uleb128 0x13
 2981 0048 00       		.byte	0
 2982 0049 00       		.byte	0
 2983 004a 07       		.uleb128 0x7
 2984 004b 0D       		.uleb128 0xd
 2985 004c 00       		.byte	0
 2986 004d 03       		.uleb128 0x3
 2987 004e 0E       		.uleb128 0xe
 2988 004f 3A       		.uleb128 0x3a
 2989 0050 0B       		.uleb128 0xb
 2990 0051 3B       		.uleb128 0x3b
 2991 0052 0B       		.uleb128 0xb
 2992 0053 49       		.uleb128 0x49
 2993 0054 13       		.uleb128 0x13
 2994 0055 38       		.uleb128 0x38
 2995 0056 0B       		.uleb128 0xb
 2996 0057 00       		.byte	0
 2997 0058 00       		.byte	0
 2998 0059 08       		.uleb128 0x8
 2999 005a 16       		.uleb128 0x16
 3000 005b 00       		.byte	0
 3001 005c 03       		.uleb128 0x3
 3002 005d 0E       		.uleb128 0xe
 3003 005e 3A       		.uleb128 0x3a
 3004 005f 0B       		.uleb128 0xb
 3005 0060 3B       		.uleb128 0x3b
 3006 0061 0B       		.uleb128 0xb
 3007 0062 49       		.uleb128 0x49
 3008 0063 13       		.uleb128 0x13
 3009 0064 00       		.byte	0
 3010 0065 00       		.byte	0
 3011 0066 09       		.uleb128 0x9
 3012 0067 0D       		.uleb128 0xd
 3013 0068 00       		.byte	0
 3014 0069 03       		.uleb128 0x3
 3015 006a 08       		.uleb128 0x8
 3016 006b 3A       		.uleb128 0x3a
 3017 006c 0B       		.uleb128 0xb
 3018 006d 3B       		.uleb128 0x3b
 3019 006e 0B       		.uleb128 0xb
ARM GAS  C:\Users\essele\AppData\Local\Temp\ccmz8StT.s 			page 99


 3020 006f 49       		.uleb128 0x49
 3021 0070 13       		.uleb128 0x13
 3022 0071 38       		.uleb128 0x38
 3023 0072 0B       		.uleb128 0xb
 3024 0073 00       		.byte	0
 3025 0074 00       		.byte	0
 3026 0075 0A       		.uleb128 0xa
 3027 0076 01       		.uleb128 0x1
 3028 0077 01       		.byte	0x1
 3029 0078 49       		.uleb128 0x49
 3030 0079 13       		.uleb128 0x13
 3031 007a 01       		.uleb128 0x1
 3032 007b 13       		.uleb128 0x13
 3033 007c 00       		.byte	0
 3034 007d 00       		.byte	0
 3035 007e 0B       		.uleb128 0xb
 3036 007f 21       		.uleb128 0x21
 3037 0080 00       		.byte	0
 3038 0081 49       		.uleb128 0x49
 3039 0082 13       		.uleb128 0x13
 3040 0083 2F       		.uleb128 0x2f
 3041 0084 0B       		.uleb128 0xb
 3042 0085 00       		.byte	0
 3043 0086 00       		.byte	0
 3044 0087 0C       		.uleb128 0xc
 3045 0088 13       		.uleb128 0x13
 3046 0089 01       		.byte	0x1
 3047 008a 0B       		.uleb128 0xb
 3048 008b 0B       		.uleb128 0xb
 3049 008c 3A       		.uleb128 0x3a
 3050 008d 0B       		.uleb128 0xb
 3051 008e 3B       		.uleb128 0x3b
 3052 008f 05       		.uleb128 0x5
 3053 0090 01       		.uleb128 0x1
 3054 0091 13       		.uleb128 0x13
 3055 0092 00       		.byte	0
 3056 0093 00       		.byte	0
 3057 0094 0D       		.uleb128 0xd
 3058 0095 0D       		.uleb128 0xd
 3059 0096 00       		.byte	0
 3060 0097 03       		.uleb128 0x3
 3061 0098 0E       		.uleb128 0xe
 3062 0099 3A       		.uleb128 0x3a
 3063 009a 0B       		.uleb128 0xb
 3064 009b 3B       		.uleb128 0x3b
 3065 009c 05       		.uleb128 0x5
 3066 009d 49       		.uleb128 0x49
 3067 009e 13       		.uleb128 0x13
 3068 009f 38       		.uleb128 0x38
 3069 00a0 0B       		.uleb128 0xb
 3070 00a1 00       		.byte	0
 3071 00a2 00       		.byte	0
 3072 00a3 0E       		.uleb128 0xe
 3073 00a4 0D       		.uleb128 0xd
 3074 00a5 00       		.byte	0
 3075 00a6 03       		.uleb128 0x3
 3076 00a7 08       		.uleb128 0x8
ARM GAS  C:\Users\essele\AppData\Local\Temp\ccmz8StT.s 			page 100


 3077 00a8 3A       		.uleb128 0x3a
 3078 00a9 0B       		.uleb128 0xb
 3079 00aa 3B       		.uleb128 0x3b
 3080 00ab 05       		.uleb128 0x5
 3081 00ac 49       		.uleb128 0x49
 3082 00ad 13       		.uleb128 0x13
 3083 00ae 38       		.uleb128 0x38
 3084 00af 0B       		.uleb128 0xb
 3085 00b0 00       		.byte	0
 3086 00b1 00       		.byte	0
 3087 00b2 0F       		.uleb128 0xf
 3088 00b3 13       		.uleb128 0x13
 3089 00b4 01       		.byte	0x1
 3090 00b5 0B       		.uleb128 0xb
 3091 00b6 05       		.uleb128 0x5
 3092 00b7 3A       		.uleb128 0x3a
 3093 00b8 0B       		.uleb128 0xb
 3094 00b9 3B       		.uleb128 0x3b
 3095 00ba 05       		.uleb128 0x5
 3096 00bb 01       		.uleb128 0x1
 3097 00bc 13       		.uleb128 0x13
 3098 00bd 00       		.byte	0
 3099 00be 00       		.byte	0
 3100 00bf 10       		.uleb128 0x10
 3101 00c0 2E       		.uleb128 0x2e
 3102 00c1 01       		.byte	0x1
 3103 00c2 3F       		.uleb128 0x3f
 3104 00c3 19       		.uleb128 0x19
 3105 00c4 03       		.uleb128 0x3
 3106 00c5 0E       		.uleb128 0xe
 3107 00c6 3A       		.uleb128 0x3a
 3108 00c7 0B       		.uleb128 0xb
 3109 00c8 3B       		.uleb128 0x3b
 3110 00c9 0B       		.uleb128 0xb
 3111 00ca 27       		.uleb128 0x27
 3112 00cb 19       		.uleb128 0x19
 3113 00cc 11       		.uleb128 0x11
 3114 00cd 01       		.uleb128 0x1
 3115 00ce 12       		.uleb128 0x12
 3116 00cf 06       		.uleb128 0x6
 3117 00d0 40       		.uleb128 0x40
 3118 00d1 18       		.uleb128 0x18
 3119 00d2 9742     		.uleb128 0x2117
 3120 00d4 19       		.uleb128 0x19
 3121 00d5 01       		.uleb128 0x1
 3122 00d6 13       		.uleb128 0x13
 3123 00d7 00       		.byte	0
 3124 00d8 00       		.byte	0
 3125 00d9 11       		.uleb128 0x11
 3126 00da 898201   		.uleb128 0x4109
 3127 00dd 01       		.byte	0x1
 3128 00de 11       		.uleb128 0x11
 3129 00df 01       		.uleb128 0x1
 3130 00e0 31       		.uleb128 0x31
 3131 00e1 13       		.uleb128 0x13
 3132 00e2 01       		.uleb128 0x1
 3133 00e3 13       		.uleb128 0x13
ARM GAS  C:\Users\essele\AppData\Local\Temp\ccmz8StT.s 			page 101


 3134 00e4 00       		.byte	0
 3135 00e5 00       		.byte	0
 3136 00e6 12       		.uleb128 0x12
 3137 00e7 8A8201   		.uleb128 0x410a
 3138 00ea 00       		.byte	0
 3139 00eb 02       		.uleb128 0x2
 3140 00ec 18       		.uleb128 0x18
 3141 00ed 9142     		.uleb128 0x2111
 3142 00ef 18       		.uleb128 0x18
 3143 00f0 00       		.byte	0
 3144 00f1 00       		.byte	0
 3145 00f2 13       		.uleb128 0x13
 3146 00f3 898201   		.uleb128 0x4109
 3147 00f6 00       		.byte	0
 3148 00f7 11       		.uleb128 0x11
 3149 00f8 01       		.uleb128 0x1
 3150 00f9 31       		.uleb128 0x31
 3151 00fa 13       		.uleb128 0x13
 3152 00fb 00       		.byte	0
 3153 00fc 00       		.byte	0
 3154 00fd 14       		.uleb128 0x14
 3155 00fe 898201   		.uleb128 0x4109
 3156 0101 01       		.byte	0x1
 3157 0102 11       		.uleb128 0x11
 3158 0103 01       		.uleb128 0x1
 3159 0104 31       		.uleb128 0x31
 3160 0105 13       		.uleb128 0x13
 3161 0106 00       		.byte	0
 3162 0107 00       		.byte	0
 3163 0108 15       		.uleb128 0x15
 3164 0109 2E       		.uleb128 0x2e
 3165 010a 01       		.byte	0x1
 3166 010b 3F       		.uleb128 0x3f
 3167 010c 19       		.uleb128 0x19
 3168 010d 03       		.uleb128 0x3
 3169 010e 0E       		.uleb128 0xe
 3170 010f 3A       		.uleb128 0x3a
 3171 0110 0B       		.uleb128 0xb
 3172 0111 3B       		.uleb128 0x3b
 3173 0112 05       		.uleb128 0x5
 3174 0113 27       		.uleb128 0x27
 3175 0114 19       		.uleb128 0x19
 3176 0115 11       		.uleb128 0x11
 3177 0116 01       		.uleb128 0x1
 3178 0117 12       		.uleb128 0x12
 3179 0118 06       		.uleb128 0x6
 3180 0119 40       		.uleb128 0x40
 3181 011a 18       		.uleb128 0x18
 3182 011b 9742     		.uleb128 0x2117
 3183 011d 19       		.uleb128 0x19
 3184 011e 01       		.uleb128 0x1
 3185 011f 13       		.uleb128 0x13
 3186 0120 00       		.byte	0
 3187 0121 00       		.byte	0
 3188 0122 16       		.uleb128 0x16
 3189 0123 05       		.uleb128 0x5
 3190 0124 00       		.byte	0
ARM GAS  C:\Users\essele\AppData\Local\Temp\ccmz8StT.s 			page 102


 3191 0125 03       		.uleb128 0x3
 3192 0126 0E       		.uleb128 0xe
 3193 0127 3A       		.uleb128 0x3a
 3194 0128 0B       		.uleb128 0xb
 3195 0129 3B       		.uleb128 0x3b
 3196 012a 05       		.uleb128 0x5
 3197 012b 49       		.uleb128 0x49
 3198 012c 13       		.uleb128 0x13
 3199 012d 02       		.uleb128 0x2
 3200 012e 17       		.uleb128 0x17
 3201 012f 00       		.byte	0
 3202 0130 00       		.byte	0
 3203 0131 17       		.uleb128 0x17
 3204 0132 05       		.uleb128 0x5
 3205 0133 00       		.byte	0
 3206 0134 03       		.uleb128 0x3
 3207 0135 0E       		.uleb128 0xe
 3208 0136 3A       		.uleb128 0x3a
 3209 0137 0B       		.uleb128 0xb
 3210 0138 3B       		.uleb128 0x3b
 3211 0139 0B       		.uleb128 0xb
 3212 013a 49       		.uleb128 0x49
 3213 013b 13       		.uleb128 0x13
 3214 013c 02       		.uleb128 0x2
 3215 013d 17       		.uleb128 0x17
 3216 013e 00       		.byte	0
 3217 013f 00       		.byte	0
 3218 0140 18       		.uleb128 0x18
 3219 0141 2E       		.uleb128 0x2e
 3220 0142 00       		.byte	0
 3221 0143 3F       		.uleb128 0x3f
 3222 0144 19       		.uleb128 0x19
 3223 0145 03       		.uleb128 0x3
 3224 0146 0E       		.uleb128 0xe
 3225 0147 3A       		.uleb128 0x3a
 3226 0148 0B       		.uleb128 0xb
 3227 0149 3B       		.uleb128 0x3b
 3228 014a 05       		.uleb128 0x5
 3229 014b 27       		.uleb128 0x27
 3230 014c 19       		.uleb128 0x19
 3231 014d 11       		.uleb128 0x11
 3232 014e 01       		.uleb128 0x1
 3233 014f 12       		.uleb128 0x12
 3234 0150 06       		.uleb128 0x6
 3235 0151 40       		.uleb128 0x40
 3236 0152 18       		.uleb128 0x18
 3237 0153 9742     		.uleb128 0x2117
 3238 0155 19       		.uleb128 0x19
 3239 0156 00       		.byte	0
 3240 0157 00       		.byte	0
 3241 0158 19       		.uleb128 0x19
 3242 0159 34       		.uleb128 0x34
 3243 015a 00       		.byte	0
 3244 015b 03       		.uleb128 0x3
 3245 015c 0E       		.uleb128 0xe
 3246 015d 3A       		.uleb128 0x3a
 3247 015e 0B       		.uleb128 0xb
ARM GAS  C:\Users\essele\AppData\Local\Temp\ccmz8StT.s 			page 103


 3248 015f 3B       		.uleb128 0x3b
 3249 0160 05       		.uleb128 0x5
 3250 0161 49       		.uleb128 0x49
 3251 0162 13       		.uleb128 0x13
 3252 0163 02       		.uleb128 0x2
 3253 0164 17       		.uleb128 0x17
 3254 0165 00       		.byte	0
 3255 0166 00       		.byte	0
 3256 0167 1A       		.uleb128 0x1a
 3257 0168 2E       		.uleb128 0x2e
 3258 0169 01       		.byte	0x1
 3259 016a 3F       		.uleb128 0x3f
 3260 016b 19       		.uleb128 0x19
 3261 016c 03       		.uleb128 0x3
 3262 016d 0E       		.uleb128 0xe
 3263 016e 3A       		.uleb128 0x3a
 3264 016f 0B       		.uleb128 0xb
 3265 0170 3B       		.uleb128 0x3b
 3266 0171 05       		.uleb128 0x5
 3267 0172 27       		.uleb128 0x27
 3268 0173 19       		.uleb128 0x19
 3269 0174 49       		.uleb128 0x49
 3270 0175 13       		.uleb128 0x13
 3271 0176 11       		.uleb128 0x11
 3272 0177 01       		.uleb128 0x1
 3273 0178 12       		.uleb128 0x12
 3274 0179 06       		.uleb128 0x6
 3275 017a 40       		.uleb128 0x40
 3276 017b 18       		.uleb128 0x18
 3277 017c 9742     		.uleb128 0x2117
 3278 017e 19       		.uleb128 0x19
 3279 017f 01       		.uleb128 0x1
 3280 0180 13       		.uleb128 0x13
 3281 0181 00       		.byte	0
 3282 0182 00       		.byte	0
 3283 0183 1B       		.uleb128 0x1b
 3284 0184 34       		.uleb128 0x34
 3285 0185 00       		.byte	0
 3286 0186 03       		.uleb128 0x3
 3287 0187 0E       		.uleb128 0xe
 3288 0188 3A       		.uleb128 0x3a
 3289 0189 0B       		.uleb128 0xb
 3290 018a 3B       		.uleb128 0x3b
 3291 018b 05       		.uleb128 0x5
 3292 018c 49       		.uleb128 0x49
 3293 018d 13       		.uleb128 0x13
 3294 018e 02       		.uleb128 0x2
 3295 018f 18       		.uleb128 0x18
 3296 0190 00       		.byte	0
 3297 0191 00       		.byte	0
 3298 0192 1C       		.uleb128 0x1c
 3299 0193 2E       		.uleb128 0x2e
 3300 0194 00       		.byte	0
 3301 0195 3F       		.uleb128 0x3f
 3302 0196 19       		.uleb128 0x19
 3303 0197 03       		.uleb128 0x3
 3304 0198 0E       		.uleb128 0xe
ARM GAS  C:\Users\essele\AppData\Local\Temp\ccmz8StT.s 			page 104


 3305 0199 3A       		.uleb128 0x3a
 3306 019a 0B       		.uleb128 0xb
 3307 019b 3B       		.uleb128 0x3b
 3308 019c 05       		.uleb128 0x5
 3309 019d 27       		.uleb128 0x27
 3310 019e 19       		.uleb128 0x19
 3311 019f 49       		.uleb128 0x49
 3312 01a0 13       		.uleb128 0x13
 3313 01a1 11       		.uleb128 0x11
 3314 01a2 01       		.uleb128 0x1
 3315 01a3 12       		.uleb128 0x12
 3316 01a4 06       		.uleb128 0x6
 3317 01a5 40       		.uleb128 0x40
 3318 01a6 18       		.uleb128 0x18
 3319 01a7 9742     		.uleb128 0x2117
 3320 01a9 19       		.uleb128 0x19
 3321 01aa 00       		.byte	0
 3322 01ab 00       		.byte	0
 3323 01ac 1D       		.uleb128 0x1d
 3324 01ad 34       		.uleb128 0x34
 3325 01ae 00       		.byte	0
 3326 01af 03       		.uleb128 0x3
 3327 01b0 08       		.uleb128 0x8
 3328 01b1 3A       		.uleb128 0x3a
 3329 01b2 0B       		.uleb128 0xb
 3330 01b3 3B       		.uleb128 0x3b
 3331 01b4 05       		.uleb128 0x5
 3332 01b5 49       		.uleb128 0x49
 3333 01b6 13       		.uleb128 0x13
 3334 01b7 02       		.uleb128 0x2
 3335 01b8 17       		.uleb128 0x17
 3336 01b9 00       		.byte	0
 3337 01ba 00       		.byte	0
 3338 01bb 1E       		.uleb128 0x1e
 3339 01bc 05       		.uleb128 0x5
 3340 01bd 00       		.byte	0
 3341 01be 03       		.uleb128 0x3
 3342 01bf 0E       		.uleb128 0xe
 3343 01c0 3A       		.uleb128 0x3a
 3344 01c1 0B       		.uleb128 0xb
 3345 01c2 3B       		.uleb128 0x3b
 3346 01c3 05       		.uleb128 0x5
 3347 01c4 49       		.uleb128 0x49
 3348 01c5 13       		.uleb128 0x13
 3349 01c6 02       		.uleb128 0x2
 3350 01c7 18       		.uleb128 0x18
 3351 01c8 00       		.byte	0
 3352 01c9 00       		.byte	0
 3353 01ca 1F       		.uleb128 0x1f
 3354 01cb 0B       		.uleb128 0xb
 3355 01cc 01       		.byte	0x1
 3356 01cd 55       		.uleb128 0x55
 3357 01ce 17       		.uleb128 0x17
 3358 01cf 00       		.byte	0
 3359 01d0 00       		.byte	0
 3360 01d1 20       		.uleb128 0x20
 3361 01d2 0F       		.uleb128 0xf
ARM GAS  C:\Users\essele\AppData\Local\Temp\ccmz8StT.s 			page 105


 3362 01d3 00       		.byte	0
 3363 01d4 0B       		.uleb128 0xb
 3364 01d5 0B       		.uleb128 0xb
 3365 01d6 49       		.uleb128 0x49
 3366 01d7 13       		.uleb128 0x13
 3367 01d8 00       		.byte	0
 3368 01d9 00       		.byte	0
 3369 01da 21       		.uleb128 0x21
 3370 01db 26       		.uleb128 0x26
 3371 01dc 00       		.byte	0
 3372 01dd 49       		.uleb128 0x49
 3373 01de 13       		.uleb128 0x13
 3374 01df 00       		.byte	0
 3375 01e0 00       		.byte	0
 3376 01e1 22       		.uleb128 0x22
 3377 01e2 0B       		.uleb128 0xb
 3378 01e3 01       		.byte	0x1
 3379 01e4 55       		.uleb128 0x55
 3380 01e5 17       		.uleb128 0x17
 3381 01e6 01       		.uleb128 0x1
 3382 01e7 13       		.uleb128 0x13
 3383 01e8 00       		.byte	0
 3384 01e9 00       		.byte	0
 3385 01ea 23       		.uleb128 0x23
 3386 01eb 34       		.uleb128 0x34
 3387 01ec 00       		.byte	0
 3388 01ed 03       		.uleb128 0x3
 3389 01ee 0E       		.uleb128 0xe
 3390 01ef 3A       		.uleb128 0x3a
 3391 01f0 0B       		.uleb128 0xb
 3392 01f1 3B       		.uleb128 0x3b
 3393 01f2 05       		.uleb128 0x5
 3394 01f3 49       		.uleb128 0x49
 3395 01f4 13       		.uleb128 0x13
 3396 01f5 00       		.byte	0
 3397 01f6 00       		.byte	0
 3398 01f7 24       		.uleb128 0x24
 3399 01f8 0B       		.uleb128 0xb
 3400 01f9 01       		.byte	0x1
 3401 01fa 11       		.uleb128 0x11
 3402 01fb 01       		.uleb128 0x1
 3403 01fc 12       		.uleb128 0x12
 3404 01fd 06       		.uleb128 0x6
 3405 01fe 01       		.uleb128 0x1
 3406 01ff 13       		.uleb128 0x13
 3407 0200 00       		.byte	0
 3408 0201 00       		.byte	0
 3409 0202 25       		.uleb128 0x25
 3410 0203 34       		.uleb128 0x34
 3411 0204 00       		.byte	0
 3412 0205 03       		.uleb128 0x3
 3413 0206 0E       		.uleb128 0xe
 3414 0207 3A       		.uleb128 0x3a
 3415 0208 0B       		.uleb128 0xb
 3416 0209 3B       		.uleb128 0x3b
 3417 020a 0B       		.uleb128 0xb
 3418 020b 49       		.uleb128 0x49
ARM GAS  C:\Users\essele\AppData\Local\Temp\ccmz8StT.s 			page 106


 3419 020c 13       		.uleb128 0x13
 3420 020d 3F       		.uleb128 0x3f
 3421 020e 19       		.uleb128 0x19
 3422 020f 02       		.uleb128 0x2
 3423 0210 18       		.uleb128 0x18
 3424 0211 00       		.byte	0
 3425 0212 00       		.byte	0
 3426 0213 26       		.uleb128 0x26
 3427 0214 34       		.uleb128 0x34
 3428 0215 00       		.byte	0
 3429 0216 03       		.uleb128 0x3
 3430 0217 0E       		.uleb128 0xe
 3431 0218 3A       		.uleb128 0x3a
 3432 0219 0B       		.uleb128 0xb
 3433 021a 3B       		.uleb128 0x3b
 3434 021b 05       		.uleb128 0x5
 3435 021c 49       		.uleb128 0x49
 3436 021d 13       		.uleb128 0x13
 3437 021e 3F       		.uleb128 0x3f
 3438 021f 19       		.uleb128 0x19
 3439 0220 3C       		.uleb128 0x3c
 3440 0221 19       		.uleb128 0x19
 3441 0222 00       		.byte	0
 3442 0223 00       		.byte	0
 3443 0224 27       		.uleb128 0x27
 3444 0225 34       		.uleb128 0x34
 3445 0226 00       		.byte	0
 3446 0227 03       		.uleb128 0x3
 3447 0228 0E       		.uleb128 0xe
 3448 0229 3A       		.uleb128 0x3a
 3449 022a 0B       		.uleb128 0xb
 3450 022b 3B       		.uleb128 0x3b
 3451 022c 0B       		.uleb128 0xb
 3452 022d 49       		.uleb128 0x49
 3453 022e 13       		.uleb128 0x13
 3454 022f 3F       		.uleb128 0x3f
 3455 0230 19       		.uleb128 0x19
 3456 0231 3C       		.uleb128 0x3c
 3457 0232 19       		.uleb128 0x19
 3458 0233 00       		.byte	0
 3459 0234 00       		.byte	0
 3460 0235 28       		.uleb128 0x28
 3461 0236 2E       		.uleb128 0x2e
 3462 0237 00       		.byte	0
 3463 0238 3F       		.uleb128 0x3f
 3464 0239 19       		.uleb128 0x19
 3465 023a 3C       		.uleb128 0x3c
 3466 023b 19       		.uleb128 0x19
 3467 023c 6E       		.uleb128 0x6e
 3468 023d 0E       		.uleb128 0xe
 3469 023e 03       		.uleb128 0x3
 3470 023f 0E       		.uleb128 0xe
 3471 0240 3A       		.uleb128 0x3a
 3472 0241 0B       		.uleb128 0xb
 3473 0242 3B       		.uleb128 0x3b
 3474 0243 0B       		.uleb128 0xb
 3475 0244 00       		.byte	0
ARM GAS  C:\Users\essele\AppData\Local\Temp\ccmz8StT.s 			page 107


 3476 0245 00       		.byte	0
 3477 0246 00       		.byte	0
 3478              		.section	.debug_loc,"",%progbits
 3479              	.Ldebug_loc0:
 3480              	.LLST0:
 3481 0000 00000000 		.4byte	.LVL10
 3482 0004 28000000 		.4byte	.LVL11
 3483 0008 0100     		.2byte	0x1
 3484 000a 50       		.byte	0x50
 3485 000b 28000000 		.4byte	.LVL11
 3486 000f BC000000 		.4byte	.LFE3
 3487 0013 0400     		.2byte	0x4
 3488 0015 F3       		.byte	0xf3
 3489 0016 01       		.uleb128 0x1
 3490 0017 50       		.byte	0x50
 3491 0018 9F       		.byte	0x9f
 3492 0019 00000000 		.4byte	0
 3493 001d 00000000 		.4byte	0
 3494              	.LLST1:
 3495 0021 00000000 		.4byte	.LVL10
 3496 0025 2B000000 		.4byte	.LVL12-1
 3497 0029 0100     		.2byte	0x1
 3498 002b 51       		.byte	0x51
 3499 002c 2B000000 		.4byte	.LVL12-1
 3500 0030 BC000000 		.4byte	.LFE3
 3501 0034 0400     		.2byte	0x4
 3502 0036 F3       		.byte	0xf3
 3503 0037 01       		.uleb128 0x1
 3504 0038 51       		.byte	0x51
 3505 0039 9F       		.byte	0x9f
 3506 003a 00000000 		.4byte	0
 3507 003e 00000000 		.4byte	0
 3508              	.LLST2:
 3509 0042 00000000 		.4byte	.LVL15
 3510 0046 11000000 		.4byte	.LVL16-1
 3511 004a 0100     		.2byte	0x1
 3512 004c 50       		.byte	0x50
 3513 004d 11000000 		.4byte	.LVL16-1
 3514 0051 28000000 		.4byte	.LFE1
 3515 0055 0400     		.2byte	0x4
 3516 0057 F3       		.byte	0xf3
 3517 0058 01       		.uleb128 0x1
 3518 0059 50       		.byte	0x50
 3519 005a 9F       		.byte	0x9f
 3520 005b 00000000 		.4byte	0
 3521 005f 00000000 		.4byte	0
 3522              	.LLST3:
 3523 0063 00000000 		.4byte	.LVL15
 3524 0067 11000000 		.4byte	.LVL16-1
 3525 006b 0100     		.2byte	0x1
 3526 006d 51       		.byte	0x51
 3527 006e 11000000 		.4byte	.LVL16-1
 3528 0072 28000000 		.4byte	.LFE1
 3529 0076 0400     		.2byte	0x4
 3530 0078 F3       		.byte	0xf3
 3531 0079 01       		.uleb128 0x1
 3532 007a 51       		.byte	0x51
ARM GAS  C:\Users\essele\AppData\Local\Temp\ccmz8StT.s 			page 108


 3533 007b 9F       		.byte	0x9f
 3534 007c 00000000 		.4byte	0
 3535 0080 00000000 		.4byte	0
 3536              	.LLST4:
 3537 0084 06000000 		.4byte	.LVL18
 3538 0088 27000000 		.4byte	.LVL19-1
 3539 008c 0100     		.2byte	0x1
 3540 008e 50       		.byte	0x50
 3541 008f 00000000 		.4byte	0
 3542 0093 00000000 		.4byte	0
 3543              	.LLST5:
 3544 0097 00000000 		.4byte	.LVL24
 3545 009b 0E000000 		.4byte	.LVL25
 3546 009f 0200     		.2byte	0x2
 3547 00a1 30       		.byte	0x30
 3548 00a2 9F       		.byte	0x9f
 3549 00a3 0E000000 		.4byte	.LVL25
 3550 00a7 14000000 		.4byte	.LVL26
 3551 00ab 0100     		.2byte	0x1
 3552 00ad 50       		.byte	0x50
 3553 00ae 14000000 		.4byte	.LVL26
 3554 00b2 16000000 		.4byte	.LVL27
 3555 00b6 0200     		.2byte	0x2
 3556 00b8 30       		.byte	0x30
 3557 00b9 9F       		.byte	0x9f
 3558 00ba 16000000 		.4byte	.LVL27
 3559 00be 1C000000 		.4byte	.LFE8
 3560 00c2 0100     		.2byte	0x1
 3561 00c4 50       		.byte	0x50
 3562 00c5 00000000 		.4byte	0
 3563 00c9 00000000 		.4byte	0
 3564              	.LLST6:
 3565 00cd 00000000 		.4byte	.LVL28
 3566 00d1 04000000 		.4byte	.LVL29
 3567 00d5 0100     		.2byte	0x1
 3568 00d7 50       		.byte	0x50
 3569 00d8 04000000 		.4byte	.LVL29
 3570 00dc 0C000000 		.4byte	.LFE9
 3571 00e0 0400     		.2byte	0x4
 3572 00e2 F3       		.byte	0xf3
 3573 00e3 01       		.uleb128 0x1
 3574 00e4 50       		.byte	0x50
 3575 00e5 9F       		.byte	0x9f
 3576 00e6 00000000 		.4byte	0
 3577 00ea 00000000 		.4byte	0
 3578              	.LLST7:
 3579 00ee 00000000 		.4byte	.LVL30
 3580 00f2 04000000 		.4byte	.LVL31
 3581 00f6 0100     		.2byte	0x1
 3582 00f8 50       		.byte	0x50
 3583 00f9 04000000 		.4byte	.LVL31
 3584 00fd 14000000 		.4byte	.LFE10
 3585 0101 0400     		.2byte	0x4
 3586 0103 F3       		.byte	0xf3
 3587 0104 01       		.uleb128 0x1
 3588 0105 50       		.byte	0x50
 3589 0106 9F       		.byte	0x9f
ARM GAS  C:\Users\essele\AppData\Local\Temp\ccmz8StT.s 			page 109


 3590 0107 00000000 		.4byte	0
 3591 010b 00000000 		.4byte	0
 3592              	.LLST8:
 3593 010f 00000000 		.4byte	.LVL32
 3594 0113 0E000000 		.4byte	.LVL33
 3595 0117 0100     		.2byte	0x1
 3596 0119 50       		.byte	0x50
 3597 011a 0E000000 		.4byte	.LVL33
 3598 011e 2A000000 		.4byte	.LVL39
 3599 0122 0400     		.2byte	0x4
 3600 0124 F3       		.byte	0xf3
 3601 0125 01       		.uleb128 0x1
 3602 0126 50       		.byte	0x50
 3603 0127 9F       		.byte	0x9f
 3604 0128 2A000000 		.4byte	.LVL39
 3605 012c 2C000000 		.4byte	.LVL40
 3606 0130 0100     		.2byte	0x1
 3607 0132 50       		.byte	0x50
 3608 0133 2C000000 		.4byte	.LVL40
 3609 0137 34000000 		.4byte	.LFE11
 3610 013b 0400     		.2byte	0x4
 3611 013d F3       		.byte	0xf3
 3612 013e 01       		.uleb128 0x1
 3613 013f 50       		.byte	0x50
 3614 0140 9F       		.byte	0x9f
 3615 0141 00000000 		.4byte	0
 3616 0145 00000000 		.4byte	0
 3617              	.LLST9:
 3618 0149 00000000 		.4byte	.LVL32
 3619 014d 10000000 		.4byte	.LVL34
 3620 0151 0200     		.2byte	0x2
 3621 0153 30       		.byte	0x30
 3622 0154 9F       		.byte	0x9f
 3623 0155 10000000 		.4byte	.LVL34
 3624 0159 12000000 		.4byte	.LVL35
 3625 015d 0500     		.2byte	0x5
 3626 015f 70       		.byte	0x70
 3627 0160 00       		.sleb128 0
 3628 0161 3F       		.byte	0x3f
 3629 0162 1A       		.byte	0x1a
 3630 0163 9F       		.byte	0x9f
 3631 0164 24000000 		.4byte	.LVL36
 3632 0168 26000000 		.4byte	.LVL37
 3633 016c 0100     		.2byte	0x1
 3634 016e 50       		.byte	0x50
 3635 016f 26000000 		.4byte	.LVL37
 3636 0173 28000000 		.4byte	.LVL38
 3637 0177 0300     		.2byte	0x3
 3638 0179 70       		.byte	0x70
 3639 017a 02       		.sleb128 2
 3640 017b 9F       		.byte	0x9f
 3641 017c 28000000 		.4byte	.LVL38
 3642 0180 2A000000 		.4byte	.LVL39
 3643 0184 0100     		.2byte	0x1
 3644 0186 50       		.byte	0x50
 3645 0187 2A000000 		.4byte	.LVL39
 3646 018b 2C000000 		.4byte	.LVL40
ARM GAS  C:\Users\essele\AppData\Local\Temp\ccmz8StT.s 			page 110


 3647 018f 0200     		.2byte	0x2
 3648 0191 30       		.byte	0x30
 3649 0192 9F       		.byte	0x9f
 3650 0193 2C000000 		.4byte	.LVL40
 3651 0197 34000000 		.4byte	.LFE11
 3652 019b 0100     		.2byte	0x1
 3653 019d 50       		.byte	0x50
 3654 019e 00000000 		.4byte	0
 3655 01a2 00000000 		.4byte	0
 3656              	.LLST10:
 3657 01a6 00000000 		.4byte	.LVL41
 3658 01aa 86000000 		.4byte	.LVL51
 3659 01ae 0100     		.2byte	0x1
 3660 01b0 50       		.byte	0x50
 3661 01b1 86000000 		.4byte	.LVL51
 3662 01b5 9C000000 		.4byte	.LFE12
 3663 01b9 0400     		.2byte	0x4
 3664 01bb F3       		.byte	0xf3
 3665 01bc 01       		.uleb128 0x1
 3666 01bd 50       		.byte	0x50
 3667 01be 9F       		.byte	0x9f
 3668 01bf 00000000 		.4byte	0
 3669 01c3 00000000 		.4byte	0
 3670              	.LLST11:
 3671 01c7 00000000 		.4byte	.LVL41
 3672 01cb 24000000 		.4byte	.LVL42
 3673 01cf 0100     		.2byte	0x1
 3674 01d1 52       		.byte	0x52
 3675 01d2 24000000 		.4byte	.LVL42
 3676 01d6 36000000 		.4byte	.LVL43
 3677 01da 0400     		.2byte	0x4
 3678 01dc F3       		.byte	0xf3
 3679 01dd 01       		.uleb128 0x1
 3680 01de 52       		.byte	0x52
 3681 01df 9F       		.byte	0x9f
 3682 01e0 36000000 		.4byte	.LVL43
 3683 01e4 74000000 		.4byte	.LVL50
 3684 01e8 0100     		.2byte	0x1
 3685 01ea 52       		.byte	0x52
 3686 01eb 00000000 		.4byte	0
 3687 01ef 00000000 		.4byte	0
 3688              	.LLST12:
 3689 01f3 5A000000 		.4byte	.LVL44
 3690 01f7 68000000 		.4byte	.LVL45
 3691 01fb 0100     		.2byte	0x1
 3692 01fd 53       		.byte	0x53
 3693 01fe 6A000000 		.4byte	.LVL46
 3694 0202 6C000000 		.4byte	.LVL47
 3695 0206 0100     		.2byte	0x1
 3696 0208 53       		.byte	0x53
 3697 0209 6E000000 		.4byte	.LVL48
 3698 020d 72000000 		.4byte	.LVL49
 3699 0211 0100     		.2byte	0x1
 3700 0213 53       		.byte	0x53
 3701 0214 00000000 		.4byte	0
 3702 0218 00000000 		.4byte	0
 3703              	.LLST13:
ARM GAS  C:\Users\essele\AppData\Local\Temp\ccmz8StT.s 			page 111


 3704 021c 00000000 		.4byte	.LVL52
 3705 0220 0E000000 		.4byte	.LVL53
 3706 0224 0100     		.2byte	0x1
 3707 0226 50       		.byte	0x50
 3708 0227 0E000000 		.4byte	.LVL53
 3709 022b B8000000 		.4byte	.LFE14
 3710 022f 0400     		.2byte	0x4
 3711 0231 F3       		.byte	0xf3
 3712 0232 01       		.uleb128 0x1
 3713 0233 50       		.byte	0x50
 3714 0234 9F       		.byte	0x9f
 3715 0235 00000000 		.4byte	0
 3716 0239 00000000 		.4byte	0
 3717              	.LLST14:
 3718 023d 00000000 		.4byte	.LVL52
 3719 0241 11000000 		.4byte	.LVL54-1
 3720 0245 0100     		.2byte	0x1
 3721 0247 51       		.byte	0x51
 3722 0248 11000000 		.4byte	.LVL54-1
 3723 024c AA000000 		.4byte	.LVL64
 3724 0250 0100     		.2byte	0x1
 3725 0252 55       		.byte	0x55
 3726 0253 AA000000 		.4byte	.LVL64
 3727 0257 B8000000 		.4byte	.LFE14
 3728 025b 0400     		.2byte	0x4
 3729 025d F3       		.byte	0xf3
 3730 025e 01       		.uleb128 0x1
 3731 025f 51       		.byte	0x51
 3732 0260 9F       		.byte	0x9f
 3733 0261 00000000 		.4byte	0
 3734 0265 00000000 		.4byte	0
 3735              	.LLST15:
 3736 0269 00000000 		.4byte	.LVL52
 3737 026d 11000000 		.4byte	.LVL54-1
 3738 0271 0100     		.2byte	0x1
 3739 0273 52       		.byte	0x52
 3740 0274 11000000 		.4byte	.LVL54-1
 3741 0278 46000000 		.4byte	.LVL55
 3742 027c 0400     		.2byte	0x4
 3743 027e F3       		.byte	0xf3
 3744 027f 01       		.uleb128 0x1
 3745 0280 52       		.byte	0x52
 3746 0281 9F       		.byte	0x9f
 3747 0282 46000000 		.4byte	.LVL55
 3748 0286 6C000000 		.4byte	.LVL56
 3749 028a 0100     		.2byte	0x1
 3750 028c 57       		.byte	0x57
 3751 028d 6C000000 		.4byte	.LVL56
 3752 0291 90000000 		.4byte	.LVL63
 3753 0295 0100     		.2byte	0x1
 3754 0297 52       		.byte	0x52
 3755 0298 00000000 		.4byte	0
 3756 029c 00000000 		.4byte	0
 3757              	.LLST16:
 3758 02a0 72000000 		.4byte	.LVL57
 3759 02a4 82000000 		.4byte	.LVL58
 3760 02a8 0100     		.2byte	0x1
ARM GAS  C:\Users\essele\AppData\Local\Temp\ccmz8StT.s 			page 112


 3761 02aa 53       		.byte	0x53
 3762 02ab 84000000 		.4byte	.LVL59
 3763 02af 86000000 		.4byte	.LVL60
 3764 02b3 0100     		.2byte	0x1
 3765 02b5 53       		.byte	0x53
 3766 02b6 88000000 		.4byte	.LVL61
 3767 02ba 8E000000 		.4byte	.LVL62
 3768 02be 0100     		.2byte	0x1
 3769 02c0 53       		.byte	0x53
 3770 02c1 00000000 		.4byte	0
 3771 02c5 00000000 		.4byte	0
 3772              	.LLST17:
 3773 02c9 00000000 		.4byte	.LVL65
 3774 02cd 1C000000 		.4byte	.LVL66
 3775 02d1 0100     		.2byte	0x1
 3776 02d3 50       		.byte	0x50
 3777 02d4 1C000000 		.4byte	.LVL66
 3778 02d8 30000000 		.4byte	.LFE16
 3779 02dc 0400     		.2byte	0x4
 3780 02de F3       		.byte	0xf3
 3781 02df 01       		.uleb128 0x1
 3782 02e0 50       		.byte	0x50
 3783 02e1 9F       		.byte	0x9f
 3784 02e2 00000000 		.4byte	0
 3785 02e6 00000000 		.4byte	0
 3786              	.LLST18:
 3787 02ea 00000000 		.4byte	.LVL67
 3788 02ee 17000000 		.4byte	.LVL68-1
 3789 02f2 0100     		.2byte	0x1
 3790 02f4 50       		.byte	0x50
 3791 02f5 17000000 		.4byte	.LVL68-1
 3792 02f9 44000000 		.4byte	.LVL75
 3793 02fd 0400     		.2byte	0x4
 3794 02ff F3       		.byte	0xf3
 3795 0300 01       		.uleb128 0x1
 3796 0301 50       		.byte	0x50
 3797 0302 9F       		.byte	0x9f
 3798 0303 44000000 		.4byte	.LVL75
 3799 0307 4E000000 		.4byte	.LVL76
 3800 030b 0100     		.2byte	0x1
 3801 030d 50       		.byte	0x50
 3802 030e 4E000000 		.4byte	.LVL76
 3803 0312 58000000 		.4byte	.LFE13
 3804 0316 0400     		.2byte	0x4
 3805 0318 F3       		.byte	0xf3
 3806 0319 01       		.uleb128 0x1
 3807 031a 50       		.byte	0x50
 3808 031b 9F       		.byte	0x9f
 3809 031c 00000000 		.4byte	0
 3810 0320 00000000 		.4byte	0
 3811              	.LLST19:
 3812 0324 00000000 		.4byte	.LVL67
 3813 0328 17000000 		.4byte	.LVL68-1
 3814 032c 0100     		.2byte	0x1
 3815 032e 51       		.byte	0x51
 3816 032f 17000000 		.4byte	.LVL68-1
 3817 0333 44000000 		.4byte	.LVL75
ARM GAS  C:\Users\essele\AppData\Local\Temp\ccmz8StT.s 			page 113


 3818 0337 0100     		.2byte	0x1
 3819 0339 56       		.byte	0x56
 3820 033a 44000000 		.4byte	.LVL75
 3821 033e 4E000000 		.4byte	.LVL76
 3822 0342 0100     		.2byte	0x1
 3823 0344 51       		.byte	0x51
 3824 0345 4E000000 		.4byte	.LVL76
 3825 0349 50000000 		.4byte	.LVL78
 3826 034d 0100     		.2byte	0x1
 3827 034f 56       		.byte	0x56
 3828 0350 50000000 		.4byte	.LVL78
 3829 0354 58000000 		.4byte	.LFE13
 3830 0358 0400     		.2byte	0x4
 3831 035a F3       		.byte	0xf3
 3832 035b 01       		.uleb128 0x1
 3833 035c 51       		.byte	0x51
 3834 035d 9F       		.byte	0x9f
 3835 035e 00000000 		.4byte	0
 3836 0362 00000000 		.4byte	0
 3837              	.LLST20:
 3838 0366 00000000 		.4byte	.LVL67
 3839 036a 17000000 		.4byte	.LVL68-1
 3840 036e 0100     		.2byte	0x1
 3841 0370 52       		.byte	0x52
 3842 0371 17000000 		.4byte	.LVL68-1
 3843 0375 24000000 		.4byte	.LVL70
 3844 0379 0400     		.2byte	0x4
 3845 037b F3       		.byte	0xf3
 3846 037c 01       		.uleb128 0x1
 3847 037d 52       		.byte	0x52
 3848 037e 9F       		.byte	0x9f
 3849 037f 24000000 		.4byte	.LVL70
 3850 0383 44000000 		.4byte	.LVL75
 3851 0387 0100     		.2byte	0x1
 3852 0389 54       		.byte	0x54
 3853 038a 44000000 		.4byte	.LVL75
 3854 038e 4E000000 		.4byte	.LVL76
 3855 0392 0100     		.2byte	0x1
 3856 0394 52       		.byte	0x52
 3857 0395 4E000000 		.4byte	.LVL76
 3858 0399 50000000 		.4byte	.LVL77
 3859 039d 0100     		.2byte	0x1
 3860 039f 54       		.byte	0x54
 3861 03a0 00000000 		.4byte	0
 3862 03a4 00000000 		.4byte	0
 3863              	.LLST21:
 3864 03a8 24000000 		.4byte	.LVL70
 3865 03ac 28000000 		.4byte	.LVL71
 3866 03b0 0200     		.2byte	0x2
 3867 03b2 30       		.byte	0x30
 3868 03b3 9F       		.byte	0x9f
 3869 03b4 28000000 		.4byte	.LVL71
 3870 03b8 36000000 		.4byte	.LVL72
 3871 03bc 0100     		.2byte	0x1
 3872 03be 53       		.byte	0x53
 3873 03bf 38000000 		.4byte	.LVL73
 3874 03c3 41000000 		.4byte	.LVL74-1
ARM GAS  C:\Users\essele\AppData\Local\Temp\ccmz8StT.s 			page 114


 3875 03c7 0100     		.2byte	0x1
 3876 03c9 53       		.byte	0x53
 3877 03ca 00000000 		.4byte	0
 3878 03ce 00000000 		.4byte	0
 3879              	.LLST22:
 3880 03d2 00000000 		.4byte	.LVL79
 3881 03d6 0E000000 		.4byte	.LVL80
 3882 03da 0100     		.2byte	0x1
 3883 03dc 50       		.byte	0x50
 3884 03dd 0E000000 		.4byte	.LVL80
 3885 03e1 6C000000 		.4byte	.LFE15
 3886 03e5 0400     		.2byte	0x4
 3887 03e7 F3       		.byte	0xf3
 3888 03e8 01       		.uleb128 0x1
 3889 03e9 50       		.byte	0x50
 3890 03ea 9F       		.byte	0x9f
 3891 03eb 00000000 		.4byte	0
 3892 03ef 00000000 		.4byte	0
 3893              	.LLST23:
 3894 03f3 00000000 		.4byte	.LVL79
 3895 03f7 11000000 		.4byte	.LVL81-1
 3896 03fb 0100     		.2byte	0x1
 3897 03fd 51       		.byte	0x51
 3898 03fe 11000000 		.4byte	.LVL81-1
 3899 0402 66000000 		.4byte	.LVL94
 3900 0406 0100     		.2byte	0x1
 3901 0408 55       		.byte	0x55
 3902 0409 66000000 		.4byte	.LVL94
 3903 040d 6C000000 		.4byte	.LFE15
 3904 0411 0400     		.2byte	0x4
 3905 0413 F3       		.byte	0xf3
 3906 0414 01       		.uleb128 0x1
 3907 0415 51       		.byte	0x51
 3908 0416 9F       		.byte	0x9f
 3909 0417 00000000 		.4byte	0
 3910 041b 00000000 		.4byte	0
 3911              	.LLST24:
 3912 041f 00000000 		.4byte	.LVL79
 3913 0423 11000000 		.4byte	.LVL81-1
 3914 0427 0100     		.2byte	0x1
 3915 0429 52       		.byte	0x52
 3916 042a 11000000 		.4byte	.LVL81-1
 3917 042e 30000000 		.4byte	.LVL84
 3918 0432 0400     		.2byte	0x4
 3919 0434 F3       		.byte	0xf3
 3920 0435 01       		.uleb128 0x1
 3921 0436 52       		.byte	0x52
 3922 0437 9F       		.byte	0x9f
 3923 0438 30000000 		.4byte	.LVL84
 3924 043c 5A000000 		.4byte	.LVL91
 3925 0440 0100     		.2byte	0x1
 3926 0442 54       		.byte	0x54
 3927 0443 5A000000 		.4byte	.LVL91
 3928 0447 64000000 		.4byte	.LVL92
 3929 044b 0400     		.2byte	0x4
 3930 044d F3       		.byte	0xf3
 3931 044e 01       		.uleb128 0x1
ARM GAS  C:\Users\essele\AppData\Local\Temp\ccmz8StT.s 			page 115


 3932 044f 52       		.byte	0x52
 3933 0450 9F       		.byte	0x9f
 3934 0451 64000000 		.4byte	.LVL92
 3935 0455 66000000 		.4byte	.LVL93
 3936 0459 0100     		.2byte	0x1
 3937 045b 54       		.byte	0x54
 3938 045c 00000000 		.4byte	0
 3939 0460 00000000 		.4byte	0
 3940              	.LLST25:
 3941 0464 36000000 		.4byte	.LVL85
 3942 0468 54000000 		.4byte	.LVL89
 3943 046c 0100     		.2byte	0x1
 3944 046e 50       		.byte	0x50
 3945 046f 54000000 		.4byte	.LVL89
 3946 0473 5A000000 		.4byte	.LVL91
 3947 0477 0800     		.2byte	0x8
 3948 0479 74       		.byte	0x74
 3949 047a 00       		.sleb128 0
 3950 047b 31       		.byte	0x31
 3951 047c 1A       		.byte	0x1a
 3952 047d 74       		.byte	0x74
 3953 047e 00       		.sleb128 0
 3954 047f 22       		.byte	0x22
 3955 0480 9F       		.byte	0x9f
 3956 0481 00000000 		.4byte	0
 3957 0485 00000000 		.4byte	0
 3958              	.LLST26:
 3959 0489 36000000 		.4byte	.LVL85
 3960 048d 5A000000 		.4byte	.LVL91
 3961 0491 0100     		.2byte	0x1
 3962 0493 55       		.byte	0x55
 3963 0494 00000000 		.4byte	0
 3964 0498 00000000 		.4byte	0
 3965              	.LLST27:
 3966 049c 36000000 		.4byte	.LVL85
 3967 04a0 3A000000 		.4byte	.LVL86
 3968 04a4 0200     		.2byte	0x2
 3969 04a6 30       		.byte	0x30
 3970 04a7 9F       		.byte	0x9f
 3971 04a8 3A000000 		.4byte	.LVL86
 3972 04ac 4A000000 		.4byte	.LVL87
 3973 04b0 0100     		.2byte	0x1
 3974 04b2 53       		.byte	0x53
 3975 04b3 4C000000 		.4byte	.LVL88
 3976 04b7 57000000 		.4byte	.LVL90-1
 3977 04bb 0100     		.2byte	0x1
 3978 04bd 53       		.byte	0x53
 3979 04be 00000000 		.4byte	0
 3980 04c2 00000000 		.4byte	0
 3981              	.LLST28:
 3982 04c6 00000000 		.4byte	.LVL95
 3983 04ca 0A000000 		.4byte	.LVL96
 3984 04ce 0100     		.2byte	0x1
 3985 04d0 50       		.byte	0x50
 3986 04d1 0A000000 		.4byte	.LVL96
 3987 04d5 1C000000 		.4byte	.LFE17
 3988 04d9 0400     		.2byte	0x4
ARM GAS  C:\Users\essele\AppData\Local\Temp\ccmz8StT.s 			page 116


 3989 04db F3       		.byte	0xf3
 3990 04dc 01       		.uleb128 0x1
 3991 04dd 50       		.byte	0x50
 3992 04de 9F       		.byte	0x9f
 3993 04df 00000000 		.4byte	0
 3994 04e3 00000000 		.4byte	0
 3995              	.LLST29:
 3996 04e7 00000000 		.4byte	.LVL98
 3997 04eb 0A000000 		.4byte	.LVL99
 3998 04ef 0100     		.2byte	0x1
 3999 04f1 50       		.byte	0x50
 4000 04f2 0A000000 		.4byte	.LVL99
 4001 04f6 18000000 		.4byte	.LVL101
 4002 04fa 0400     		.2byte	0x4
 4003 04fc F3       		.byte	0xf3
 4004 04fd 01       		.uleb128 0x1
 4005 04fe 50       		.byte	0x50
 4006 04ff 9F       		.byte	0x9f
 4007 0500 18000000 		.4byte	.LVL101
 4008 0504 1A000000 		.4byte	.LVL102
 4009 0508 0100     		.2byte	0x1
 4010 050a 50       		.byte	0x50
 4011 050b 1A000000 		.4byte	.LVL102
 4012 050f 24000000 		.4byte	.LFE19
 4013 0513 0400     		.2byte	0x4
 4014 0515 F3       		.byte	0xf3
 4015 0516 01       		.uleb128 0x1
 4016 0517 50       		.byte	0x50
 4017 0518 9F       		.byte	0x9f
 4018 0519 00000000 		.4byte	0
 4019 051d 00000000 		.4byte	0
 4020              	.LLST30:
 4021 0521 00000000 		.4byte	.LVL98
 4022 0525 16000000 		.4byte	.LVL100
 4023 0529 0200     		.2byte	0x2
 4024 052b 30       		.byte	0x30
 4025 052c 9F       		.byte	0x9f
 4026 052d 16000000 		.4byte	.LVL100
 4027 0531 18000000 		.4byte	.LVL101
 4028 0535 0100     		.2byte	0x1
 4029 0537 50       		.byte	0x50
 4030 0538 18000000 		.4byte	.LVL101
 4031 053c 1A000000 		.4byte	.LVL102
 4032 0540 0200     		.2byte	0x2
 4033 0542 30       		.byte	0x30
 4034 0543 9F       		.byte	0x9f
 4035 0544 1A000000 		.4byte	.LVL102
 4036 0548 1C000000 		.4byte	.LVL103
 4037 054c 0100     		.2byte	0x1
 4038 054e 50       		.byte	0x50
 4039 054f 00000000 		.4byte	0
 4040 0553 00000000 		.4byte	0
 4041              	.LLST31:
 4042 0557 00000000 		.4byte	.LVL105
 4043 055b 0E000000 		.4byte	.LVL106
 4044 055f 0200     		.2byte	0x2
 4045 0561 30       		.byte	0x30
ARM GAS  C:\Users\essele\AppData\Local\Temp\ccmz8StT.s 			page 117


 4046 0562 9F       		.byte	0x9f
 4047 0563 0E000000 		.4byte	.LVL106
 4048 0567 14000000 		.4byte	.LFE22
 4049 056b 0100     		.2byte	0x1
 4050 056d 50       		.byte	0x50
 4051 056e 00000000 		.4byte	0
 4052 0572 00000000 		.4byte	0
 4053              		.section	.debug_aranges,"",%progbits
 4054 0000 DC000000 		.4byte	0xdc
 4055 0004 0200     		.2byte	0x2
 4056 0006 00000000 		.4byte	.Ldebug_info0
 4057 000a 04       		.byte	0x4
 4058 000b 00       		.byte	0
 4059 000c 0000     		.2byte	0
 4060 000e 0000     		.2byte	0
 4061 0010 00000000 		.4byte	.LFB2
 4062 0014 D0000000 		.4byte	.LFE2-.LFB2
 4063 0018 00000000 		.4byte	.LFB3
 4064 001c BC000000 		.4byte	.LFE3-.LFB3
 4065 0020 00000000 		.4byte	.LFB1
 4066 0024 28000000 		.4byte	.LFE1-.LFB1
 4067 0028 00000000 		.4byte	.LFB4
 4068 002c 50000000 		.4byte	.LFE4-.LFB4
 4069 0030 00000000 		.4byte	.LFB5
 4070 0034 7C000000 		.4byte	.LFE5-.LFB5
 4071 0038 00000000 		.4byte	.LFB6
 4072 003c 1C000000 		.4byte	.LFE6-.LFB6
 4073 0040 00000000 		.4byte	.LFB7
 4074 0044 0C000000 		.4byte	.LFE7-.LFB7
 4075 0048 00000000 		.4byte	.LFB8
 4076 004c 1C000000 		.4byte	.LFE8-.LFB8
 4077 0050 00000000 		.4byte	.LFB9
 4078 0054 0C000000 		.4byte	.LFE9-.LFB9
 4079 0058 00000000 		.4byte	.LFB10
 4080 005c 14000000 		.4byte	.LFE10-.LFB10
 4081 0060 00000000 		.4byte	.LFB11
 4082 0064 34000000 		.4byte	.LFE11-.LFB11
 4083 0068 00000000 		.4byte	.LFB12
 4084 006c 9C000000 		.4byte	.LFE12-.LFB12
 4085 0070 00000000 		.4byte	.LFB14
 4086 0074 B8000000 		.4byte	.LFE14-.LFB14
 4087 0078 00000000 		.4byte	.LFB16
 4088 007c 30000000 		.4byte	.LFE16-.LFB16
 4089 0080 00000000 		.4byte	.LFB13
 4090 0084 58000000 		.4byte	.LFE13-.LFB13
 4091 0088 00000000 		.4byte	.LFB15
 4092 008c 6C000000 		.4byte	.LFE15-.LFB15
 4093 0090 00000000 		.4byte	.LFB17
 4094 0094 1C000000 		.4byte	.LFE17-.LFB17
 4095 0098 00000000 		.4byte	.LFB18
 4096 009c 0C000000 		.4byte	.LFE18-.LFB18
 4097 00a0 00000000 		.4byte	.LFB19
 4098 00a4 24000000 		.4byte	.LFE19-.LFB19
 4099 00a8 00000000 		.4byte	.LFB20
 4100 00ac 24000000 		.4byte	.LFE20-.LFB20
 4101 00b0 00000000 		.4byte	.LFB21
 4102 00b4 14000000 		.4byte	.LFE21-.LFB21
ARM GAS  C:\Users\essele\AppData\Local\Temp\ccmz8StT.s 			page 118


 4103 00b8 00000000 		.4byte	.LFB22
 4104 00bc 14000000 		.4byte	.LFE22-.LFB22
 4105 00c0 00000000 		.4byte	.LFB23
 4106 00c4 10000000 		.4byte	.LFE23-.LFB23
 4107 00c8 00000000 		.4byte	.LFB24
 4108 00cc 10000000 		.4byte	.LFE24-.LFB24
 4109 00d0 00000000 		.4byte	.LFB25
 4110 00d4 10000000 		.4byte	.LFE25-.LFB25
 4111 00d8 00000000 		.4byte	0
 4112 00dc 00000000 		.4byte	0
 4113              		.section	.debug_ranges,"",%progbits
 4114              	.Ldebug_ranges0:
 4115 0000 58000000 		.4byte	.LBB2
 4116 0004 6C000000 		.4byte	.LBE2
 4117 0008 6E000000 		.4byte	.LBB3
 4118 000c 72000000 		.4byte	.LBE3
 4119 0010 00000000 		.4byte	0
 4120 0014 00000000 		.4byte	0
 4121 0018 70000000 		.4byte	.LBB4
 4122 001c 86000000 		.4byte	.LBE4
 4123 0020 88000000 		.4byte	.LBB5
 4124 0024 8E000000 		.4byte	.LBE5
 4125 0028 00000000 		.4byte	0
 4126 002c 00000000 		.4byte	0
 4127 0030 00000000 		.4byte	.LFB2
 4128 0034 D0000000 		.4byte	.LFE2
 4129 0038 00000000 		.4byte	.LFB3
 4130 003c BC000000 		.4byte	.LFE3
 4131 0040 00000000 		.4byte	.LFB1
 4132 0044 28000000 		.4byte	.LFE1
 4133 0048 00000000 		.4byte	.LFB4
 4134 004c 50000000 		.4byte	.LFE4
 4135 0050 00000000 		.4byte	.LFB5
 4136 0054 7C000000 		.4byte	.LFE5
 4137 0058 00000000 		.4byte	.LFB6
 4138 005c 1C000000 		.4byte	.LFE6
 4139 0060 00000000 		.4byte	.LFB7
 4140 0064 0C000000 		.4byte	.LFE7
 4141 0068 00000000 		.4byte	.LFB8
 4142 006c 1C000000 		.4byte	.LFE8
 4143 0070 00000000 		.4byte	.LFB9
 4144 0074 0C000000 		.4byte	.LFE9
 4145 0078 00000000 		.4byte	.LFB10
 4146 007c 14000000 		.4byte	.LFE10
 4147 0080 00000000 		.4byte	.LFB11
 4148 0084 34000000 		.4byte	.LFE11
 4149 0088 00000000 		.4byte	.LFB12
 4150 008c 9C000000 		.4byte	.LFE12
 4151 0090 00000000 		.4byte	.LFB14
 4152 0094 B8000000 		.4byte	.LFE14
 4153 0098 00000000 		.4byte	.LFB16
 4154 009c 30000000 		.4byte	.LFE16
 4155 00a0 00000000 		.4byte	.LFB13
 4156 00a4 58000000 		.4byte	.LFE13
 4157 00a8 00000000 		.4byte	.LFB15
 4158 00ac 6C000000 		.4byte	.LFE15
 4159 00b0 00000000 		.4byte	.LFB17
ARM GAS  C:\Users\essele\AppData\Local\Temp\ccmz8StT.s 			page 119


 4160 00b4 1C000000 		.4byte	.LFE17
 4161 00b8 00000000 		.4byte	.LFB18
 4162 00bc 0C000000 		.4byte	.LFE18
 4163 00c0 00000000 		.4byte	.LFB19
 4164 00c4 24000000 		.4byte	.LFE19
 4165 00c8 00000000 		.4byte	.LFB20
 4166 00cc 24000000 		.4byte	.LFE20
 4167 00d0 00000000 		.4byte	.LFB21
 4168 00d4 14000000 		.4byte	.LFE21
 4169 00d8 00000000 		.4byte	.LFB22
 4170 00dc 14000000 		.4byte	.LFE22
 4171 00e0 00000000 		.4byte	.LFB23
 4172 00e4 10000000 		.4byte	.LFE23
 4173 00e8 00000000 		.4byte	.LFB24
 4174 00ec 10000000 		.4byte	.LFE24
 4175 00f0 00000000 		.4byte	.LFB25
 4176 00f4 10000000 		.4byte	.LFE25
 4177 00f8 00000000 		.4byte	0
 4178 00fc 00000000 		.4byte	0
 4179              		.section	.debug_line,"",%progbits
 4180              	.Ldebug_line0:
 4181 0000 87030000 		.section	.debug_str,"MS",%progbits,1
 4181      02006D00 
 4181      00000201 
 4181      FB0E0D00 
 4181      01010101 
 4182              	.LASF10:
 4183 0000 75696E74 		.ascii	"uint16\000"
 4183      313600
 4184              	.LASF93:
 4185 0007 55534255 		.ascii	"USBUART_device\000"
 4185      4152545F 
 4185      64657669 
 4185      636500
 4186              	.LASF109:
 4187 0016 43794578 		.ascii	"CyExitCriticalSection\000"
 4187      69744372 
 4187      69746963 
 4187      616C5365 
 4187      6374696F 
 4188              	.LASF88:
 4189 002c 55534255 		.ascii	"USBUART_GetDeviceAddress\000"
 4189      4152545F 
 4189      47657444 
 4189      65766963 
 4189      65416464 
 4190              	.LASF113:
 4191 0045 47656E65 		.ascii	"Generated_Source\\PSoC4\\USBUART.c\000"
 4191      72617465 
 4191      645F536F 
 4191      75726365 
 4191      5C50536F 
 4192              	.LASF86:
 4193 0066 55534255 		.ascii	"USBUART_RWUEnabled\000"
 4193      4152545F 
 4193      52575545 
 4193      6E61626C 
ARM GAS  C:\Users\essele\AppData\Local\Temp\ccmz8StT.s 			page 120


 4193      656400
 4194              	.LASF102:
 4195 0079 55534255 		.ascii	"USBUART_lastPacketSize\000"
 4195      4152545F 
 4195      6C617374 
 4195      5061636B 
 4195      65745369 
 4196              	.LASF69:
 4197 0090 55534255 		.ascii	"USBUART_LoadInEP\000"
 4197      4152545F 
 4197      4C6F6164 
 4197      496E4550 
 4197      00
 4198              	.LASF112:
 4199 00a1 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 4199      43313120 
 4199      352E342E 
 4199      31203230 
 4199      31363036 
 4200 00d4 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m0 -mthumb -g -O"
 4200      20726576 
 4200      6973696F 
 4200      6E203233 
 4200      37373135 
 4201 0107 67202D66 		.ascii	"g -ffunction-sections -ffat-lto-objects\000"
 4201      66756E63 
 4201      74696F6E 
 4201      2D736563 
 4201      74696F6E 
 4202              	.LASF7:
 4203 012f 6C6F6E67 		.ascii	"long long unsigned int\000"
 4203      206C6F6E 
 4203      6720756E 
 4203      7369676E 
 4203      65642069 
 4204              	.LASF22:
 4205 0146 61646472 		.ascii	"addr\000"
 4205      00
 4206              	.LASF42:
 4207 014b 72775761 		.ascii	"rwWa16\000"
 4207      313600
 4208              	.LASF32:
 4209 0152 65704366 		.ascii	"epCfg\000"
 4209      6700
 4210              	.LASF101:
 4211 0158 55534255 		.ascii	"USBUART_EP\000"
 4211      4152545F 
 4211      455000
 4212              	.LASF46:
 4213 0163 72774472 		.ascii	"rwDr16\000"
 4213      313600
 4214              	.LASF66:
 4215 016a 65704E75 		.ascii	"epNumber\000"
 4215      6D626572 
 4215      00
 4216              	.LASF97:
 4217 0173 55534255 		.ascii	"USBUART_deviceStatus\000"
ARM GAS  C:\Users\essele\AppData\Local\Temp\ccmz8StT.s 			page 121


 4217      4152545F 
 4217      64657669 
 4217      63655374 
 4217      61747573 
 4218              	.LASF55:
 4219 0188 64657669 		.ascii	"device\000"
 4219      636500
 4220              	.LASF84:
 4221 018f 55534255 		.ascii	"USBUART_GetConfiguration\000"
 4221      4152545F 
 4221      47657443 
 4221      6F6E6669 
 4221      67757261 
 4222              	.LASF6:
 4223 01a8 6C6F6E67 		.ascii	"long long int\000"
 4223      206C6F6E 
 4223      6720696E 
 4223      7400
 4224              	.LASF0:
 4225 01b6 7369676E 		.ascii	"signed char\000"
 4225      65642063 
 4225      68617200 
 4226              	.LASF75:
 4227 01c2 55534255 		.ascii	"USBUART_ReadOutEP16\000"
 4227      4152545F 
 4227      52656164 
 4227      4F757445 
 4227      50313600 
 4228              	.LASF73:
 4229 01d6 55534255 		.ascii	"USBUART_EnableOutEP\000"
 4229      4152545F 
 4229      456E6162 
 4229      6C654F75 
 4229      74455000 
 4230              	.LASF76:
 4231 01ea 61646A4C 		.ascii	"adjLength\000"
 4231      656E6774 
 4231      6800
 4232              	.LASF68:
 4233 01f4 636E7472 		.ascii	"cntr\000"
 4233      00
 4234              	.LASF49:
 4235 01f9 55534255 		.ascii	"USBUART_sie_eps_struct\000"
 4235      4152545F 
 4235      7369655F 
 4235      6570735F 
 4235      73747275 
 4236              	.LASF61:
 4237 0210 55534255 		.ascii	"USBUART_CheckActivity\000"
 4237      4152545F 
 4237      43686563 
 4237      6B416374 
 4237      69766974 
 4238              	.LASF4:
 4239 0226 6C6F6E67 		.ascii	"long int\000"
 4239      20696E74 
 4239      00
ARM GAS  C:\Users\essele\AppData\Local\Temp\ccmz8StT.s 			page 122


 4240              	.LASF110:
 4241 022f 4379496E 		.ascii	"CyIntDisable\000"
 4241      74446973 
 4241      61626C65 
 4241      00
 4242              	.LASF81:
 4243 023c 55534255 		.ascii	"USBUART_GetEPAckState\000"
 4243      4152545F 
 4243      47657445 
 4243      5041636B 
 4243      53746174 
 4244              	.LASF9:
 4245 0252 75696E74 		.ascii	"uint8\000"
 4245      3800
 4246              	.LASF21:
 4247 0258 6570546F 		.ascii	"epToggle\000"
 4247      67676C65 
 4247      00
 4248              	.LASF36:
 4249 0261 72775761 		.ascii	"rwWa\000"
 4249      00
 4250              	.LASF103:
 4251 0266 43794465 		.ascii	"CyDelayUs\000"
 4251      6C617955 
 4251      7300
 4252              	.LASF13:
 4253 0270 646F7562 		.ascii	"double\000"
 4253      6C6500
 4254              	.LASF83:
 4255 0277 706F7765 		.ascii	"powerStatus\000"
 4255      72537461 
 4255      74757300 
 4256              	.LASF91:
 4257 0283 55534255 		.ascii	"USBUART_DisableSofInt\000"
 4257      4152545F 
 4257      44697361 
 4257      626C6553 
 4257      6F66496E 
 4258              	.LASF82:
 4259 0299 55534255 		.ascii	"USBUART_SetPowerStatus\000"
 4259      4152545F 
 4259      53657450 
 4259      6F776572 
 4259      53746174 
 4260              	.LASF34:
 4261 02b0 65705372 		.ascii	"epSr\000"
 4261      00
 4262              	.LASF92:
 4263 02b5 55534255 		.ascii	"USBUART_initVar\000"
 4263      4152545F 
 4263      696E6974 
 4263      56617200 
 4264              	.LASF98:
 4265 02c5 55534255 		.ascii	"USBUART_interfaceNumber\000"
 4265      4152545F 
 4265      696E7465 
 4265      72666163 
ARM GAS  C:\Users\essele\AppData\Local\Temp\ccmz8StT.s 			page 123


 4265      654E756D 
 4266              	.LASF11:
 4267 02dd 75696E74 		.ascii	"uint32\000"
 4267      333200
 4268              	.LASF106:
 4269 02e4 4379496E 		.ascii	"CyIntSetVector\000"
 4269      74536574 
 4269      56656374 
 4269      6F7200
 4270              	.LASF70:
 4271 02f3 70446174 		.ascii	"pData\000"
 4271      6100
 4272              	.LASF48:
 4273 02f9 73696545 		.ascii	"sieEp\000"
 4273      7000
 4274              	.LASF23:
 4275 02ff 65704D6F 		.ascii	"epMode\000"
 4275      646500
 4276              	.LASF35:
 4277 0306 72657365 		.ascii	"reserved\000"
 4277      72766564 
 4277      00
 4278              	.LASF47:
 4279 030f 55534255 		.ascii	"USBUART_arb_ep_reg16_struct\000"
 4279      4152545F 
 4279      6172625F 
 4279      65705F72 
 4279      65673136 
 4280              	.LASF8:
 4281 032b 756E7369 		.ascii	"unsigned int\000"
 4281      676E6564 
 4281      20696E74 
 4281      00
 4282              	.LASF5:
 4283 0338 6C6F6E67 		.ascii	"long unsigned int\000"
 4283      20756E73 
 4283      69676E65 
 4283      6420696E 
 4283      7400
 4284              	.LASF108:
 4285 034a 4379456E 		.ascii	"CyEnterCriticalSection\000"
 4285      74657243 
 4285      72697469 
 4285      63616C53 
 4285      65637469 
 4286              	.LASF3:
 4287 0361 73686F72 		.ascii	"short unsigned int\000"
 4287      7420756E 
 4287      7369676E 
 4287      65642069 
 4287      6E7400
 4288              	.LASF58:
 4289 0374 55534255 		.ascii	"USBUART_Stop\000"
 4289      4152545F 
 4289      53746F70 
 4289      00
 4290              	.LASF57:
ARM GAS  C:\Users\essele\AppData\Local\Temp\ccmz8StT.s 			page 124


 4291 0381 55534255 		.ascii	"USBUART_Start\000"
 4291      4152545F 
 4291      53746172 
 4291      7400
 4292              	.LASF63:
 4293 038f 55534255 		.ascii	"USBUART_GetInterfaceSetting\000"
 4293      4152545F 
 4293      47657449 
 4293      6E746572 
 4293      66616365 
 4294              	.LASF53:
 4295 03ab 55534255 		.ascii	"USBUART_Init\000"
 4295      4152545F 
 4295      496E6974 
 4295      00
 4296              	.LASF104:
 4297 03b8 43795379 		.ascii	"CySysClkImoGetUsbLock\000"
 4297      73436C6B 
 4297      496D6F47 
 4297      65745573 
 4297      624C6F63 
 4298              	.LASF50:
 4299 03ce 61726245 		.ascii	"arbEp\000"
 4299      7000
 4300              	.LASF26:
 4301 03d4 696E7465 		.ascii	"interface\000"
 4301      72666163 
 4301      6500
 4302              	.LASF60:
 4303 03de 63723152 		.ascii	"cr1Reg\000"
 4303      656700
 4304              	.LASF15:
 4305 03e5 72656733 		.ascii	"reg32\000"
 4305      3200
 4306              	.LASF100:
 4307 03eb 55534255 		.ascii	"USBUART_deviceAddress\000"
 4307      4152545F 
 4307      64657669 
 4307      63654164 
 4307      64726573 
 4308              	.LASF41:
 4309 0401 55534255 		.ascii	"USBUART_arb_ep_struct\000"
 4309      4152545F 
 4309      6172625F 
 4309      65705F73 
 4309      74727563 
 4310              	.LASF20:
 4311 0417 68774570 		.ascii	"hwEpState\000"
 4311      53746174 
 4311      6500
 4312              	.LASF51:
 4313 0421 55534255 		.ascii	"USBUART_arb_eps_struct\000"
 4313      4152545F 
 4313      6172625F 
 4313      6570735F 
 4313      73747275 
 4314              	.LASF17:
ARM GAS  C:\Users\essele\AppData\Local\Temp\ccmz8StT.s 			page 125


 4315 0438 73697A65 		.ascii	"sizetype\000"
 4315      74797065 
 4315      00
 4316              	.LASF16:
 4317 0441 6C6F6E67 		.ascii	"long double\000"
 4317      20646F75 
 4317      626C6500 
 4318              	.LASF79:
 4319 044d 55534255 		.ascii	"USBUART_Force\000"
 4319      4152545F 
 4319      466F7263 
 4319      6500
 4320              	.LASF77:
 4321 045b 64617461 		.ascii	"dataBuf\000"
 4321      42756600 
 4322              	.LASF18:
 4323 0463 61747472 		.ascii	"attrib\000"
 4323      696200
 4324              	.LASF39:
 4325 046a 72775261 		.ascii	"rwRaMsb\000"
 4325      4D736200 
 4326              	.LASF28:
 4327 0472 6570436E 		.ascii	"epCnt0\000"
 4327      743000
 4328              	.LASF29:
 4329 0479 6570436E 		.ascii	"epCnt1\000"
 4329      743100
 4330              	.LASF105:
 4331 0480 4379496E 		.ascii	"CyIntSetPriority\000"
 4331      74536574 
 4331      5072696F 
 4331      72697479 
 4331      00
 4332              	.LASF30:
 4333 0491 65704372 		.ascii	"epCr0\000"
 4333      3000
 4334              	.LASF12:
 4335 0497 666C6F61 		.ascii	"float\000"
 4335      7400
 4336              	.LASF74:
 4337 049d 55534255 		.ascii	"USBUART_ReadOutEP\000"
 4337      4152545F 
 4337      52656164 
 4337      4F757445 
 4337      5000
 4338              	.LASF19:
 4339 04af 61706945 		.ascii	"apiEpState\000"
 4339      70537461 
 4339      746500
 4340              	.LASF99:
 4341 04ba 55534255 		.ascii	"USBUART_interfaceSetting\000"
 4341      4152545F 
 4341      696E7465 
 4341      72666163 
 4341      65536574 
 4342              	.LASF111:
 4343 04d3 43794861 		.ascii	"CyHalt\000"
ARM GAS  C:\Users\essele\AppData\Local\Temp\ccmz8StT.s 			page 126


 4343      6C7400
 4344              	.LASF1:
 4345 04da 756E7369 		.ascii	"unsigned char\000"
 4345      676E6564 
 4345      20636861 
 4345      7200
 4346              	.LASF44:
 4347 04e8 72775261 		.ascii	"rwRa16\000"
 4347      313600
 4348              	.LASF2:
 4349 04ef 73686F72 		.ascii	"short int\000"
 4349      7420696E 
 4349      7400
 4350              	.LASF107:
 4351 04f9 4379496E 		.ascii	"CyIntEnable\000"
 4351      74456E61 
 4351      626C6500 
 4352              	.LASF65:
 4353 0505 55534255 		.ascii	"USBUART_GetEPState\000"
 4353      4152545F 
 4353      47657445 
 4353      50537461 
 4353      746500
 4354              	.LASF38:
 4355 0518 72775261 		.ascii	"rwRa\000"
 4355      00
 4356              	.LASF78:
 4357 051d 55534255 		.ascii	"USBUART_DisableOutEP\000"
 4357      4152545F 
 4357      44697361 
 4357      626C654F 
 4357      75744550 
 4358              	.LASF37:
 4359 0532 72775761 		.ascii	"rwWaMsb\000"
 4359      4D736200 
 4360              	.LASF31:
 4361 053a 55534255 		.ascii	"USBUART_sie_ep_struct\000"
 4361      4152545F 
 4361      7369655F 
 4361      65705F73 
 4361      74727563 
 4362              	.LASF80:
 4363 0550 62537461 		.ascii	"bState\000"
 4363      746500
 4364              	.LASF71:
 4365 0557 6C656E67 		.ascii	"length\000"
 4365      746800
 4366              	.LASF14:
 4367 055e 63686172 		.ascii	"char\000"
 4367      00
 4368              	.LASF56:
 4369 0563 6D6F6465 		.ascii	"mode\000"
 4369      00
 4370              	.LASF25:
 4371 0568 62756666 		.ascii	"bufferSize\000"
 4371      65725369 
 4371      7A6500
ARM GAS  C:\Users\essele\AppData\Local\Temp\ccmz8StT.s 			page 127


 4372              	.LASF52:
 4373 0573 55534255 		.ascii	"USBUART_arb_eps_reg16_struct\000"
 4373      4152545F 
 4373      6172625F 
 4373      6570735F 
 4373      72656731 
 4374              	.LASF85:
 4375 0590 55534255 		.ascii	"USBUART_VBusPresent\000"
 4375      4152545F 
 4375      56427573 
 4375      50726573 
 4375      656E7400 
 4376              	.LASF27:
 4377 05a4 545F5553 		.ascii	"T_USBUART_EP_CTL_BLOCK\000"
 4377      42554152 
 4377      545F4550 
 4377      5F43544C 
 4377      5F424C4F 
 4378              	.LASF24:
 4379 05bb 62756666 		.ascii	"buffOffset\000"
 4379      4F666673 
 4379      657400
 4380              	.LASF64:
 4381 05c6 696E7465 		.ascii	"interfaceNumber\000"
 4381      72666163 
 4381      654E756D 
 4381      62657200 
 4382              	.LASF67:
 4383 05d6 55534255 		.ascii	"USBUART_GetEPCount\000"
 4383      4152545F 
 4383      47657445 
 4383      50436F75 
 4383      6E7400
 4384              	.LASF72:
 4385 05e9 55534255 		.ascii	"USBUART_LoadInEP16\000"
 4385      4152545F 
 4385      4C6F6164 
 4385      496E4550 
 4385      313600
 4386              	.LASF59:
 4387 05fc 656E6162 		.ascii	"enableInterrupts\000"
 4387      6C65496E 
 4387      74657272 
 4387      75707473 
 4387      00
 4388              	.LASF114:
 4389 060d 5C5C4D61 		.ascii	"\\\\Mac\\Home\\Documents\\PSoC Creator\\GPIB USB Ad"
 4389      635C486F 
 4389      6D655C44 
 4389      6F63756D 
 4389      656E7473 
 4390 063a 61707465 		.ascii	"apter\\GPIB USB 1.cydsn\000"
 4390      725C4750 
 4390      49422055 
 4390      53422031 
 4390      2E637964 
 4391              	.LASF40:
ARM GAS  C:\Users\essele\AppData\Local\Temp\ccmz8StT.s 			page 128


 4392 0651 72774472 		.ascii	"rwDr\000"
 4392      00
 4393              	.LASF54:
 4394 0656 55534255 		.ascii	"USBUART_InitComponent\000"
 4394      4152545F 
 4394      496E6974 
 4394      436F6D70 
 4394      6F6E656E 
 4395              	.LASF95:
 4396 066c 55534255 		.ascii	"USBUART_configuration\000"
 4396      4152545F 
 4396      636F6E66 
 4396      69677572 
 4396      6174696F 
 4397              	.LASF62:
 4398 0682 55534255 		.ascii	"USBUART_IsConfigurationChanged\000"
 4398      4152545F 
 4398      4973436F 
 4398      6E666967 
 4398      75726174 
 4399              	.LASF33:
 4400 06a1 6570496E 		.ascii	"epIntEn\000"
 4400      74456E00 
 4401              	.LASF43:
 4402 06a9 72657365 		.ascii	"reserved0\000"
 4402      72766564 
 4402      3000
 4403              	.LASF45:
 4404 06b3 72657365 		.ascii	"reserved1\000"
 4404      72766564 
 4404      3100
 4405              	.LASF89:
 4406 06bd 55534255 		.ascii	"USBUART_ReInitComponent\000"
 4406      4152545F 
 4406      5265496E 
 4406      6974436F 
 4406      6D706F6E 
 4407              	.LASF94:
 4408 06d5 55534255 		.ascii	"USBUART_transferState\000"
 4408      4152545F 
 4408      7472616E 
 4408      73666572 
 4408      53746174 
 4409              	.LASF90:
 4410 06eb 55534255 		.ascii	"USBUART_EnableSofInt\000"
 4410      4152545F 
 4410      456E6162 
 4410      6C65536F 
 4410      66496E74 
 4411              	.LASF96:
 4412 0700 55534255 		.ascii	"USBUART_configurationChanged\000"
 4412      4152545F 
 4412      636F6E66 
 4412      69677572 
 4412      6174696F 
 4413              	.LASF87:
 4414 071d 72657375 		.ascii	"result\000"
ARM GAS  C:\Users\essele\AppData\Local\Temp\ccmz8StT.s 			page 129


 4414      6C7400
 4415              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
