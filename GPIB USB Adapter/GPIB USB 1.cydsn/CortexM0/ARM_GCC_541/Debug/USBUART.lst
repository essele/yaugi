ARM GAS  C:\Users\essele\AppData\Local\Temp\ccbSjPdV.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m0
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 0
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"USBUART.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.global	USBUART_initVar
  20              		.bss
  21              		.type	USBUART_initVar, %object
  22              		.size	USBUART_initVar, 1
  23              	USBUART_initVar:
  24 0000 00       		.space	1
  25              		.section	.text.USBUART_Start,"ax",%progbits
  26              		.align	2
  27              		.global	USBUART_Start
  28              		.code	16
  29              		.thumb_func
  30              		.type	USBUART_Start, %function
  31              	USBUART_Start:
  32              	.LFB1:
  33              		.file 1 "Generated_Source\\PSoC4\\USBUART.c"
   1:Generated_Source\PSoC4/USBUART.c **** /***************************************************************************//**
   2:Generated_Source\PSoC4/USBUART.c **** * \file USBUART.c
   3:Generated_Source\PSoC4/USBUART.c **** * \version 3.20
   4:Generated_Source\PSoC4/USBUART.c **** *
   5:Generated_Source\PSoC4/USBUART.c **** * \brief
   6:Generated_Source\PSoC4/USBUART.c **** *  This file contains the global USBFS API functions.
   7:Generated_Source\PSoC4/USBUART.c **** *
   8:Generated_Source\PSoC4/USBUART.c **** * Note:
   9:Generated_Source\PSoC4/USBUART.c **** *  Many of the functions use an endpoint number. SRAM arrays are sized with 9
  10:Generated_Source\PSoC4/USBUART.c **** *  elements, so they are indexed directly by epNumber.  The SIE and ARB
  11:Generated_Source\PSoC4/USBUART.c **** *  registers are indexed by variations of epNumber - 1.
  12:Generated_Source\PSoC4/USBUART.c **** *
  13:Generated_Source\PSoC4/USBUART.c **** ********************************************************************************
  14:Generated_Source\PSoC4/USBUART.c **** * \copyright
  15:Generated_Source\PSoC4/USBUART.c **** * Copyright 2008-2016, Cypress Semiconductor Corporation.  All rights reserved.
  16:Generated_Source\PSoC4/USBUART.c **** * You may use this file only in accordance with the license, terms, conditions,
  17:Generated_Source\PSoC4/USBUART.c **** * disclaimers, and limitations in the end user license agreement accompanying
  18:Generated_Source\PSoC4/USBUART.c **** * the software package with which this file was provided.
  19:Generated_Source\PSoC4/USBUART.c **** *******************************************************************************/
  20:Generated_Source\PSoC4/USBUART.c **** 
  21:Generated_Source\PSoC4/USBUART.c **** #include "USBUART_pvt.h"
  22:Generated_Source\PSoC4/USBUART.c **** #include "USBUART_cydmac.h"
  23:Generated_Source\PSoC4/USBUART.c **** #include "USBUART_hid.h"
  24:Generated_Source\PSoC4/USBUART.c **** #include "USBUART_Dp.h"
ARM GAS  C:\Users\essele\AppData\Local\Temp\ccbSjPdV.s 			page 2


  25:Generated_Source\PSoC4/USBUART.c **** 
  26:Generated_Source\PSoC4/USBUART.c **** 
  27:Generated_Source\PSoC4/USBUART.c **** /***************************************
  28:Generated_Source\PSoC4/USBUART.c **** * Global data allocation
  29:Generated_Source\PSoC4/USBUART.c **** ***************************************/
  30:Generated_Source\PSoC4/USBUART.c **** 
  31:Generated_Source\PSoC4/USBUART.c **** /** Indicates whether the USBFS has been initialized. The variable is
  32:Generated_Source\PSoC4/USBUART.c **** * initialized to 0 after device reset and set to 1 the first time USBFS_Start()
  33:Generated_Source\PSoC4/USBUART.c **** * is called. This allows the Component to restart without reinitialization after
  34:Generated_Source\PSoC4/USBUART.c **** * the first call to the USBFS_Start() routine.
  35:Generated_Source\PSoC4/USBUART.c **** * If re-initialization of the Component is required, the variable should be set
  36:Generated_Source\PSoC4/USBUART.c **** * to 0 before the USBFS_Start() routine is called. Alternatively, the USBFS can
  37:Generated_Source\PSoC4/USBUART.c **** * be reinitialized by calling both USBFS_Init() and USBFS_InitComponent()
  38:Generated_Source\PSoC4/USBUART.c **** * functions.
  39:Generated_Source\PSoC4/USBUART.c **** */
  40:Generated_Source\PSoC4/USBUART.c **** uint8 USBUART_initVar = 0u;
  41:Generated_Source\PSoC4/USBUART.c **** 
  42:Generated_Source\PSoC4/USBUART.c **** #if (USBUART_EP_MANAGEMENT_DMA)
  43:Generated_Source\PSoC4/USBUART.c ****     #if (CY_PSOC4)
  44:Generated_Source\PSoC4/USBUART.c ****         static void USBUART_InitEpDma(void);
  45:Generated_Source\PSoC4/USBUART.c **** 
  46:Generated_Source\PSoC4/USBUART.c ****         /* DMA chanels assigend for endpoints. */
  47:Generated_Source\PSoC4/USBUART.c ****         const uint8 USBUART_DmaChan[USBUART_MAX_EP] =
  48:Generated_Source\PSoC4/USBUART.c ****         {
  49:Generated_Source\PSoC4/USBUART.c ****             0u,
  50:Generated_Source\PSoC4/USBUART.c ****             0u,
  51:Generated_Source\PSoC4/USBUART.c ****             0u,
  52:Generated_Source\PSoC4/USBUART.c ****             0u,
  53:Generated_Source\PSoC4/USBUART.c ****             0u,
  54:Generated_Source\PSoC4/USBUART.c ****             0u,
  55:Generated_Source\PSoC4/USBUART.c ****             0u,
  56:Generated_Source\PSoC4/USBUART.c ****             0u,
  57:Generated_Source\PSoC4/USBUART.c ****             0u,
  58:Generated_Source\PSoC4/USBUART.c ****         };        
  59:Generated_Source\PSoC4/USBUART.c ****     #else
  60:Generated_Source\PSoC4/USBUART.c ****         /* DMA chanels assigend for endpoints. */
  61:Generated_Source\PSoC4/USBUART.c ****         uint8 USBUART_DmaChan[USBUART_MAX_EP];
  62:Generated_Source\PSoC4/USBUART.c ****         
  63:Generated_Source\PSoC4/USBUART.c ****         /* DMA TDs require for PSoC 3/5LP operation. */
  64:Generated_Source\PSoC4/USBUART.c ****         uint8 USBUART_DmaTd[USBUART_MAX_EP];
  65:Generated_Source\PSoC4/USBUART.c ****     #endif /* (CY_PSOC4) */
  66:Generated_Source\PSoC4/USBUART.c **** #endif /* (USBUART_EP_MANAGEMENT_DMA) */
  67:Generated_Source\PSoC4/USBUART.c **** 
  68:Generated_Source\PSoC4/USBUART.c **** #if (USBUART_EP_MANAGEMENT_DMA_AUTO)
  69:Generated_Source\PSoC4/USBUART.c **** #if (CY_PSOC4)
  70:Generated_Source\PSoC4/USBUART.c ****     /* Number of DMA bursts. */
  71:Generated_Source\PSoC4/USBUART.c ****     uint8  USBUART_DmaEpBurstCnt   [USBUART_MAX_EP];
  72:Generated_Source\PSoC4/USBUART.c ****     
  73:Generated_Source\PSoC4/USBUART.c ****     /* Number of bytes to transfer in last DMA burst. */
  74:Generated_Source\PSoC4/USBUART.c ****     uint8  USBUART_DmaEpLastBurstEl[USBUART_MAX_EP];
  75:Generated_Source\PSoC4/USBUART.c **** 
  76:Generated_Source\PSoC4/USBUART.c ****     /* Storage for arrays above. */
  77:Generated_Source\PSoC4/USBUART.c ****     uint8  USBUART_DmaEpBurstCntBackup  [USBUART_MAX_EP];
  78:Generated_Source\PSoC4/USBUART.c ****     uint32 USBUART_DmaEpBufferAddrBackup[USBUART_MAX_EP];
  79:Generated_Source\PSoC4/USBUART.c ****      
  80:Generated_Source\PSoC4/USBUART.c ****     /* DMA trigger mux output for usb.dma_req[0-7]. */
  81:Generated_Source\PSoC4/USBUART.c ****     const uint8 USBUART_DmaReqOut[USBUART_MAX_EP] =
ARM GAS  C:\Users\essele\AppData\Local\Temp\ccbSjPdV.s 			page 3


  82:Generated_Source\PSoC4/USBUART.c ****     {
  83:Generated_Source\PSoC4/USBUART.c ****         0u,
  84:Generated_Source\PSoC4/USBUART.c ****         USBUART_ep1_dma__TR_OUTPUT,
  85:Generated_Source\PSoC4/USBUART.c ****         USBUART_ep2_dma__TR_OUTPUT,
  86:Generated_Source\PSoC4/USBUART.c ****         USBUART_ep3_dma__TR_OUTPUT,
  87:Generated_Source\PSoC4/USBUART.c ****         0u,
  88:Generated_Source\PSoC4/USBUART.c ****         0u,
  89:Generated_Source\PSoC4/USBUART.c ****         0u,
  90:Generated_Source\PSoC4/USBUART.c ****         0u,
  91:Generated_Source\PSoC4/USBUART.c ****         0u,
  92:Generated_Source\PSoC4/USBUART.c ****     };
  93:Generated_Source\PSoC4/USBUART.c **** 
  94:Generated_Source\PSoC4/USBUART.c ****     /* DMA trigger mux output for usb.dma_burstend[0-7]. */
  95:Generated_Source\PSoC4/USBUART.c ****     const uint8 USBUART_DmaBurstEndOut[USBUART_MAX_EP] =
  96:Generated_Source\PSoC4/USBUART.c ****     {
  97:Generated_Source\PSoC4/USBUART.c ****         0u,
  98:Generated_Source\PSoC4/USBUART.c ****         USBUART_BURSTEND_0_TR_OUTPUT,
  99:Generated_Source\PSoC4/USBUART.c ****         USBUART_BURSTEND_1_TR_OUTPUT,
 100:Generated_Source\PSoC4/USBUART.c ****         USBUART_BURSTEND_2_TR_OUTPUT,
 101:Generated_Source\PSoC4/USBUART.c ****         USBUART_BURSTEND_3_TR_OUTPUT,
 102:Generated_Source\PSoC4/USBUART.c ****         USBUART_BURSTEND_4_TR_OUTPUT,
 103:Generated_Source\PSoC4/USBUART.c ****         USBUART_BURSTEND_5_TR_OUTPUT,
 104:Generated_Source\PSoC4/USBUART.c ****         USBUART_BURSTEND_6_TR_OUTPUT,
 105:Generated_Source\PSoC4/USBUART.c ****         USBUART_BURSTEND_7_TR_OUTPUT
 106:Generated_Source\PSoC4/USBUART.c ****     };
 107:Generated_Source\PSoC4/USBUART.c ****     
 108:Generated_Source\PSoC4/USBUART.c **** #else
 109:Generated_Source\PSoC4/USBUART.c ****     #if (USBUART_EP_DMA_AUTO_OPT == 0u)
 110:Generated_Source\PSoC4/USBUART.c ****         static uint8 clearInDataRdyStatus = USBUART_ARB_EPX_CFG_DEFAULT;
 111:Generated_Source\PSoC4/USBUART.c ****         uint8 USBUART_DmaNextTd[USBUART_MAX_EP];
 112:Generated_Source\PSoC4/USBUART.c ****         const uint8 USBUART_epX_TD_TERMOUT_EN[USBUART_MAX_EP] =
 113:Generated_Source\PSoC4/USBUART.c ****         {
 114:Generated_Source\PSoC4/USBUART.c ****             0u,
 115:Generated_Source\PSoC4/USBUART.c ****             0u,
 116:Generated_Source\PSoC4/USBUART.c ****             0u,
 117:Generated_Source\PSoC4/USBUART.c ****             0u,
 118:Generated_Source\PSoC4/USBUART.c ****             0u,
 119:Generated_Source\PSoC4/USBUART.c ****             0u,
 120:Generated_Source\PSoC4/USBUART.c ****             0u,
 121:Generated_Source\PSoC4/USBUART.c ****             0u,
 122:Generated_Source\PSoC4/USBUART.c ****             0u,
 123:Generated_Source\PSoC4/USBUART.c ****         };
 124:Generated_Source\PSoC4/USBUART.c **** 
 125:Generated_Source\PSoC4/USBUART.c ****         volatile uint16 USBUART_inLength[USBUART_MAX_EP];
 126:Generated_Source\PSoC4/USBUART.c ****         const uint8 *USBUART_inDataPointer[USBUART_MAX_EP];
 127:Generated_Source\PSoC4/USBUART.c ****         volatile uint8 USBUART_inBufFull[USBUART_MAX_EP];
 128:Generated_Source\PSoC4/USBUART.c ****     #endif /* (USBUART_EP_DMA_AUTO_OPT == 0u) */
 129:Generated_Source\PSoC4/USBUART.c **** #endif /* (CY_PSOC4) */
 130:Generated_Source\PSoC4/USBUART.c **** #endif /* (USBUART_EP_MANAGEMENT_DMA_AUTO) */
 131:Generated_Source\PSoC4/USBUART.c **** 
 132:Generated_Source\PSoC4/USBUART.c **** 
 133:Generated_Source\PSoC4/USBUART.c **** /*******************************************************************************
 134:Generated_Source\PSoC4/USBUART.c **** * Function Name: USBUART_Start
 135:Generated_Source\PSoC4/USBUART.c **** ****************************************************************************//**
 136:Generated_Source\PSoC4/USBUART.c **** *
 137:Generated_Source\PSoC4/USBUART.c **** *   This function performs all required initialization for the USBFS component.
 138:Generated_Source\PSoC4/USBUART.c **** *   After this function call, the USB device initiates communication with the
ARM GAS  C:\Users\essele\AppData\Local\Temp\ccbSjPdV.s 			page 4


 139:Generated_Source\PSoC4/USBUART.c **** *   host by pull-up D+ line. This is the preferred method to begin component
 140:Generated_Source\PSoC4/USBUART.c **** *   operation.
 141:Generated_Source\PSoC4/USBUART.c **** *
 142:Generated_Source\PSoC4/USBUART.c **** *   Note that global interrupts have to be enabled because interrupts are
 143:Generated_Source\PSoC4/USBUART.c **** *   required for USBFS component operation.
 144:Generated_Source\PSoC4/USBUART.c **** *
 145:Generated_Source\PSoC4/USBUART.c **** *   PSoC 4200L devices: when USBFS component configured to DMA with Automatic
 146:Generated_Source\PSoC4/USBUART.c **** *   Buffer Management, the DMA interrupt priority is changed to the highest
 147:Generated_Source\PSoC4/USBUART.c **** *   (priority 0) inside this function.
 148:Generated_Source\PSoC4/USBUART.c **** *
 149:Generated_Source\PSoC4/USBUART.c **** *   PSoC 3/PSoC 5LP devices: when USBFS component configured to DMA with
 150:Generated_Source\PSoC4/USBUART.c **** *   Automatic Buffer Management, the Arbiter interrupt priority is changed to
 151:Generated_Source\PSoC4/USBUART.c **** *   the highest (priority 0) inside this function.
 152:Generated_Source\PSoC4/USBUART.c **** *
 153:Generated_Source\PSoC4/USBUART.c **** *  \param device
 154:Generated_Source\PSoC4/USBUART.c **** *          Contains the device number of the desired device descriptor.
 155:Generated_Source\PSoC4/USBUART.c **** *          The device number can be found in the Device Descriptor Tab of
 156:Generated_Source\PSoC4/USBUART.c **** *          "Configure" dialog, under the settings of desired Device Descriptor,
 157:Generated_Source\PSoC4/USBUART.c **** *          in the "Device Number" field.
 158:Generated_Source\PSoC4/USBUART.c **** *  \param mode:
 159:Generated_Source\PSoC4/USBUART.c **** *   The operating voltage. This determines whether the voltage regulator
 160:Generated_Source\PSoC4/USBUART.c **** *   is enabled for 5V operation or if pass through mode is used for 3.3V
 161:Generated_Source\PSoC4/USBUART.c **** *   operation. Symbolic names and their associated values are given in the
 162:Generated_Source\PSoC4/USBUART.c **** *   following list.
 163:Generated_Source\PSoC4/USBUART.c **** *
 164:Generated_Source\PSoC4/USBUART.c **** *       *USBUART_3V_OPERATION* - Disable voltage regulator and pass-
 165:Generated_Source\PSoC4/USBUART.c **** *                                      through Vcc for pull-up
 166:Generated_Source\PSoC4/USBUART.c **** *
 167:Generated_Source\PSoC4/USBUART.c **** *       *USBUART_5V_OPERATION* - Enable voltage regulator and use
 168:Generated_Source\PSoC4/USBUART.c **** *                                      regulator for pull-up
 169:Generated_Source\PSoC4/USBUART.c **** *
 170:Generated_Source\PSoC4/USBUART.c **** *       *USBUART_DWR_POWER_OPERATION* - Enable or disable the voltage
 171:Generated_Source\PSoC4/USBUART.c **** *                                      regulator depending on the power supply
 172:Generated_Source\PSoC4/USBUART.c **** *                                      voltage configuration in the DWR tab.
 173:Generated_Source\PSoC4/USBUART.c **** *                                      For PSoC 3/5LP devices, the VDDD supply
 174:Generated_Source\PSoC4/USBUART.c **** *                                      voltage is considered and for PSoC 4A-L,
 175:Generated_Source\PSoC4/USBUART.c **** *                                      the VBUS supply voltage is considered.*
 176:Generated_Source\PSoC4/USBUART.c **** * \globalvars
 177:Generated_Source\PSoC4/USBUART.c **** *  \ref USBUART_initVar
 178:Generated_Source\PSoC4/USBUART.c **** *
 179:Generated_Source\PSoC4/USBUART.c **** * \sideeffect
 180:Generated_Source\PSoC4/USBUART.c **** *   This function will reset all communication states to default.
 181:Generated_Source\PSoC4/USBUART.c **** *
 182:Generated_Source\PSoC4/USBUART.c **** * \reentrant
 183:Generated_Source\PSoC4/USBUART.c **** *  No.
 184:Generated_Source\PSoC4/USBUART.c **** *
 185:Generated_Source\PSoC4/USBUART.c **** *******************************************************************************/
 186:Generated_Source\PSoC4/USBUART.c **** void USBUART_Start(uint8 device, uint8 mode) 
 187:Generated_Source\PSoC4/USBUART.c **** {
  34              		.loc 1 187 0
  35              		.cfi_startproc
  36              		@ args = 0, pretend = 0, frame = 8
  37              		@ frame_needed = 1, uses_anonymous_args = 0
  38 0000 80B5     		push	{r7, lr}
  39              		.cfi_def_cfa_offset 8
  40              		.cfi_offset 7, -8
  41              		.cfi_offset 14, -4
ARM GAS  C:\Users\essele\AppData\Local\Temp\ccbSjPdV.s 			page 5


  42 0002 82B0     		sub	sp, sp, #8
  43              		.cfi_def_cfa_offset 16
  44 0004 00AF     		add	r7, sp, #0
  45              		.cfi_def_cfa_register 7
  46 0006 0200     		movs	r2, r0
  47 0008 FB1D     		adds	r3, r7, #7
  48 000a 1A70     		strb	r2, [r3]
  49 000c BB1D     		adds	r3, r7, #6
  50 000e 0A1C     		adds	r2, r1, #0
  51 0010 1A70     		strb	r2, [r3]
 188:Generated_Source\PSoC4/USBUART.c ****     if (0u == USBUART_initVar)
  52              		.loc 1 188 0
  53 0012 0A4B     		ldr	r3, .L3
  54 0014 1B78     		ldrb	r3, [r3]
  55 0016 002B     		cmp	r3, #0
  56 0018 04D1     		bne	.L2
 189:Generated_Source\PSoC4/USBUART.c ****     {
 190:Generated_Source\PSoC4/USBUART.c ****         USBUART_Init();
  57              		.loc 1 190 0
  58 001a FFF7FEFF 		bl	USBUART_Init
 191:Generated_Source\PSoC4/USBUART.c ****         USBUART_initVar = 1u;
  59              		.loc 1 191 0
  60 001e 074B     		ldr	r3, .L3
  61 0020 0122     		movs	r2, #1
  62 0022 1A70     		strb	r2, [r3]
  63              	.L2:
 192:Generated_Source\PSoC4/USBUART.c ****     }
 193:Generated_Source\PSoC4/USBUART.c **** 
 194:Generated_Source\PSoC4/USBUART.c ****     USBUART_InitComponent(device, mode);
  64              		.loc 1 194 0
  65 0024 BB1D     		adds	r3, r7, #6
  66 0026 1A78     		ldrb	r2, [r3]
  67 0028 FB1D     		adds	r3, r7, #7
  68 002a 1B78     		ldrb	r3, [r3]
  69 002c 1100     		movs	r1, r2
  70 002e 1800     		movs	r0, r3
  71 0030 FFF7FEFF 		bl	USBUART_InitComponent
 195:Generated_Source\PSoC4/USBUART.c **** }
  72              		.loc 1 195 0
  73 0034 C046     		nop
  74 0036 BD46     		mov	sp, r7
  75 0038 02B0     		add	sp, sp, #8
  76              		@ sp needed
  77 003a 80BD     		pop	{r7, pc}
  78              	.L4:
  79              		.align	2
  80              	.L3:
  81 003c 00000000 		.word	USBUART_initVar
  82              		.cfi_endproc
  83              	.LFE1:
  84              		.size	USBUART_Start, .-USBUART_Start
  85              		.section	.text.USBUART_Init,"ax",%progbits
  86              		.align	2
  87              		.global	USBUART_Init
  88              		.code	16
  89              		.thumb_func
  90              		.type	USBUART_Init, %function
ARM GAS  C:\Users\essele\AppData\Local\Temp\ccbSjPdV.s 			page 6


  91              	USBUART_Init:
  92              	.LFB2:
 196:Generated_Source\PSoC4/USBUART.c **** 
 197:Generated_Source\PSoC4/USBUART.c **** 
 198:Generated_Source\PSoC4/USBUART.c **** /*******************************************************************************
 199:Generated_Source\PSoC4/USBUART.c **** * Function Name: USBUART_Init
 200:Generated_Source\PSoC4/USBUART.c **** ****************************************************************************//**
 201:Generated_Source\PSoC4/USBUART.c **** *
 202:Generated_Source\PSoC4/USBUART.c **** * This function initializes or restores the component according to the
 203:Generated_Source\PSoC4/USBUART.c **** * customizer Configure dialog settings. It is not necessary to call
 204:Generated_Source\PSoC4/USBUART.c **** * USBUART_Init() because the USBUART_Start() routine calls
 205:Generated_Source\PSoC4/USBUART.c **** * this function and is the preferred method to begin component operation.
 206:Generated_Source\PSoC4/USBUART.c **** *
 207:Generated_Source\PSoC4/USBUART.c **** * \reentrant
 208:Generated_Source\PSoC4/USBUART.c **** *  No.
 209:Generated_Source\PSoC4/USBUART.c **** *
 210:Generated_Source\PSoC4/USBUART.c **** *******************************************************************************/
 211:Generated_Source\PSoC4/USBUART.c **** void USBUART_Init(void) 
 212:Generated_Source\PSoC4/USBUART.c **** {
  93              		.loc 1 212 0
  94              		.cfi_startproc
  95              		@ args = 0, pretend = 0, frame = 0
  96              		@ frame_needed = 1, uses_anonymous_args = 0
  97 0000 B0B5     		push	{r4, r5, r7, lr}
  98              		.cfi_def_cfa_offset 16
  99              		.cfi_offset 4, -16
 100              		.cfi_offset 5, -12
 101              		.cfi_offset 7, -8
 102              		.cfi_offset 14, -4
 103 0002 00AF     		add	r7, sp, #0
 104              		.cfi_def_cfa_register 7
 213:Generated_Source\PSoC4/USBUART.c **** #if (CY_PSOC4)
 214:Generated_Source\PSoC4/USBUART.c ****     /* Enable clock to USB IP. */
 215:Generated_Source\PSoC4/USBUART.c ****     USBUART_USB_CLK_EN_REG = USBUART_USB_CLK_CSR_CLK_EN;
 105              		.loc 1 215 0
 106 0004 2C4B     		ldr	r3, .L8
 107 0006 0122     		movs	r2, #1
 108 0008 1A60     		str	r2, [r3]
 216:Generated_Source\PSoC4/USBUART.c **** 
 217:Generated_Source\PSoC4/USBUART.c ****     /* The internal regulator (CR1.REG_ENABLE) is enabled in
 218:Generated_Source\PSoC4/USBUART.c ****     * USBUART_InitComponent() if it is required.
 219:Generated_Source\PSoC4/USBUART.c ****     */
 220:Generated_Source\PSoC4/USBUART.c **** 
 221:Generated_Source\PSoC4/USBUART.c ****     /* Enable USBIO control on drive mode of D+ and D- pins. */
 222:Generated_Source\PSoC4/USBUART.c ****     USBUART_USBIO_CR1_REG &= ~ (uint32) USBUART_USBIO_CR1_IOMODE;
 109              		.loc 1 222 0
 110 000a 2C4B     		ldr	r3, .L8+4
 111 000c 2B4A     		ldr	r2, .L8+4
 112 000e 1268     		ldr	r2, [r2]
 113 0010 2021     		movs	r1, #32
 114 0012 8A43     		bics	r2, r1
 115 0014 1A60     		str	r2, [r3]
 223:Generated_Source\PSoC4/USBUART.c **** 
 224:Generated_Source\PSoC4/USBUART.c ****     /* Set number of LF CLK to detect UBS bus reset. */
 225:Generated_Source\PSoC4/USBUART.c ****     USBUART_BUS_RST_CNT_REG = USBUART_DEFUALT_BUS_RST_CNT;
 116              		.loc 1 225 0
 117 0016 2A4B     		ldr	r3, .L8+8
ARM GAS  C:\Users\essele\AppData\Local\Temp\ccbSjPdV.s 			page 7


 118 0018 0A22     		movs	r2, #10
 119 001a 1A60     		str	r2, [r3]
 226:Generated_Source\PSoC4/USBUART.c **** 
 227:Generated_Source\PSoC4/USBUART.c ****     /* Select VBUS detection source and clear PHY isolate. The application level
 228:Generated_Source\PSoC4/USBUART.c ****     * must ensure that VBUS is valid. There is no need to wait 2us before VBUS is valid.
 229:Generated_Source\PSoC4/USBUART.c ****     */
 230:Generated_Source\PSoC4/USBUART.c ****     USBUART_POWER_CTRL_REG = USBUART_DEFAULT_POWER_CTRL_VBUS;
 120              		.loc 1 230 0
 121 001c 294B     		ldr	r3, .L8+12
 122 001e 2A4A     		ldr	r2, .L8+16
 123 0020 1A60     		str	r2, [r3]
 231:Generated_Source\PSoC4/USBUART.c **** 
 232:Generated_Source\PSoC4/USBUART.c ****     /* Enable PHY detector and single-ended and differential receivers. */
 233:Generated_Source\PSoC4/USBUART.c ****     USBUART_POWER_CTRL_REG |= USBUART_DEFAULT_POWER_CTRL_PHY;
 124              		.loc 1 233 0
 125 0022 284B     		ldr	r3, .L8+12
 126 0024 274A     		ldr	r2, .L8+12
 127 0026 1268     		ldr	r2, [r2]
 128 0028 2849     		ldr	r1, .L8+20
 129 002a 0A43     		orrs	r2, r1
 130 002c 1A60     		str	r2, [r3]
 234:Generated_Source\PSoC4/USBUART.c **** 
 235:Generated_Source\PSoC4/USBUART.c ****     /* Suspend clear sequence. */
 236:Generated_Source\PSoC4/USBUART.c ****     USBUART_POWER_CTRL_REG &= (uint32) ~USBUART_POWER_CTRL_SUSPEND;
 131              		.loc 1 236 0
 132 002e 254B     		ldr	r3, .L8+12
 133 0030 244A     		ldr	r2, .L8+12
 134 0032 1268     		ldr	r2, [r2]
 135 0034 0421     		movs	r1, #4
 136 0036 8A43     		bics	r2, r1
 137 0038 1A60     		str	r2, [r3]
 237:Generated_Source\PSoC4/USBUART.c ****     CyDelayUs(USBUART_WAIT_SUSPEND_DEL_DISABLE);
 138              		.loc 1 237 0
 139 003a 0220     		movs	r0, #2
 140 003c FFF7FEFF 		bl	CyDelayUs
 238:Generated_Source\PSoC4/USBUART.c ****     USBUART_POWER_CTRL_REG &= (uint32) ~USBUART_POWER_CTRL_SUSPEND_DEL;
 141              		.loc 1 238 0
 142 0040 204B     		ldr	r3, .L8+12
 143 0042 204A     		ldr	r2, .L8+12
 144 0044 1268     		ldr	r2, [r2]
 145 0046 0821     		movs	r1, #8
 146 0048 8A43     		bics	r2, r1
 147 004a 1A60     		str	r2, [r3]
 239:Generated_Source\PSoC4/USBUART.c **** 
 240:Generated_Source\PSoC4/USBUART.c ****     /* Sets IMO lock options and clear all other bits. */
 241:Generated_Source\PSoC4/USBUART.c ****     USBUART_CR1_REG = USBUART_DEFUALT_CR1;
 148              		.loc 1 241 0
 149 004c 204C     		ldr	r4, .L8+24
 150 004e FFF7FEFF 		bl	CySysClkImoGetUsbLock
 151 0052 031E     		subs	r3, r0, #0
 152 0054 01D0     		beq	.L6
 153              		.loc 1 241 0 is_stmt 0 discriminator 1
 154 0056 0223     		movs	r3, #2
 155 0058 00E0     		b	.L7
 156              	.L6:
 157              		.loc 1 241 0 discriminator 2
 158 005a 0023     		movs	r3, #0
ARM GAS  C:\Users\essele\AppData\Local\Temp\ccbSjPdV.s 			page 8


 159              	.L7:
 160              		.loc 1 241 0 discriminator 4
 161 005c 2360     		str	r3, [r4]
 242:Generated_Source\PSoC4/USBUART.c **** 
 243:Generated_Source\PSoC4/USBUART.c ****     /* Configure level (hi, lo, med) for each interrupt source. */
 244:Generated_Source\PSoC4/USBUART.c ****     USBUART_INTR_LVL_SEL_REG = USBUART_DEFAULT_INTR_LVL_SEL;
 162              		.loc 1 244 0 is_stmt 1 discriminator 4
 163 005e 1D4B     		ldr	r3, .L8+28
 164 0060 1D4A     		ldr	r2, .L8+32
 165 0062 1A60     		str	r2, [r3]
 245:Generated_Source\PSoC4/USBUART.c **** 
 246:Generated_Source\PSoC4/USBUART.c ****     /* Configure interrupt sources from: SOF, Bus Reset and EP0. */
 247:Generated_Source\PSoC4/USBUART.c ****     USBUART_INTR_SIE_MASK_REG = USBUART_DEFAULT_INTR_SIE_MASK;
 166              		.loc 1 247 0 discriminator 4
 167 0064 1D4B     		ldr	r3, .L8+36
 168 0066 0722     		movs	r2, #7
 169 0068 1A60     		str	r2, [r3]
 248:Generated_Source\PSoC4/USBUART.c **** 
 249:Generated_Source\PSoC4/USBUART.c **** #else
 250:Generated_Source\PSoC4/USBUART.c ****     uint8 enableInterrupts = CyEnterCriticalSection();
 251:Generated_Source\PSoC4/USBUART.c **** 
 252:Generated_Source\PSoC4/USBUART.c **** #if (USBUART_EP_MANAGEMENT_DMA)
 253:Generated_Source\PSoC4/USBUART.c ****     uint16 i;
 254:Generated_Source\PSoC4/USBUART.c **** #endif /* (USBUART_EP_MANAGEMENT_DMA) */
 255:Generated_Source\PSoC4/USBUART.c **** 
 256:Generated_Source\PSoC4/USBUART.c ****     /* Enable USB block. */
 257:Generated_Source\PSoC4/USBUART.c ****     USBUART_PM_ACT_CFG_REG |= USBUART_PM_ACT_EN_FSUSB;
 258:Generated_Source\PSoC4/USBUART.c ****     /* Enable USB block for Standby Power Mode. */
 259:Generated_Source\PSoC4/USBUART.c ****     USBUART_PM_STBY_CFG_REG |= USBUART_PM_STBY_EN_FSUSB;
 260:Generated_Source\PSoC4/USBUART.c **** 
 261:Generated_Source\PSoC4/USBUART.c ****     /* Enable core clock. */
 262:Generated_Source\PSoC4/USBUART.c ****     USBUART_USB_CLK_EN_REG = USBUART_USB_CLK_ENABLE;
 263:Generated_Source\PSoC4/USBUART.c **** 
 264:Generated_Source\PSoC4/USBUART.c ****     USBUART_CR1_REG = USBUART_CR1_ENABLE_LOCK;
 265:Generated_Source\PSoC4/USBUART.c **** 
 266:Generated_Source\PSoC4/USBUART.c ****     /* ENABLING USBIO PADS IN USB MODE FROM I/O MODE. */
 267:Generated_Source\PSoC4/USBUART.c ****     /* Ensure USB transmit enable is low (USB_USBIO_CR0.ten). - Manual Transmission - Disabled. */
 268:Generated_Source\PSoC4/USBUART.c ****     USBUART_USBIO_CR0_REG &= (uint8) ~USBUART_USBIO_CR0_TEN;
 269:Generated_Source\PSoC4/USBUART.c ****     CyDelayUs(USBUART_WAIT_REG_STABILITY_50NS);  /* ~50ns delay. */
 270:Generated_Source\PSoC4/USBUART.c ****     /* Disable USBIO by asserting PM.USB_CR0.fsusbio_pd_n(Inverted.
 271:Generated_Source\PSoC4/USBUART.c ****     *  high. These bits will be set low by the power manager out-of-reset.
 272:Generated_Source\PSoC4/USBUART.c ****     *  Also confirm USBIO pull-up is disabled.
 273:Generated_Source\PSoC4/USBUART.c ****     */
 274:Generated_Source\PSoC4/USBUART.c ****     USBUART_PM_USB_CR0_REG &= (uint8) ~(USBUART_PM_USB_CR0_PD_N |
 275:Generated_Source\PSoC4/USBUART.c ****                                                  USBUART_PM_USB_CR0_PD_PULLUP_N);
 276:Generated_Source\PSoC4/USBUART.c **** 
 277:Generated_Source\PSoC4/USBUART.c ****     /* Select IOMODE to USB mode. */
 278:Generated_Source\PSoC4/USBUART.c ****     USBUART_USBIO_CR1_REG &= (uint8) ~USBUART_USBIO_CR1_IOMODE;
 279:Generated_Source\PSoC4/USBUART.c **** 
 280:Generated_Source\PSoC4/USBUART.c ****     /* Enable USBIO reference by setting PM.USB_CR0.fsusbio_ref_en. */
 281:Generated_Source\PSoC4/USBUART.c ****     USBUART_PM_USB_CR0_REG |= USBUART_PM_USB_CR0_REF_EN;
 282:Generated_Source\PSoC4/USBUART.c ****     /* Reference is available for 1us after regulator is enabled. */
 283:Generated_Source\PSoC4/USBUART.c ****     CyDelayUs(USBUART_WAIT_REG_STABILITY_1US);
 284:Generated_Source\PSoC4/USBUART.c ****     /* OR 40us after power is restored. */
 285:Generated_Source\PSoC4/USBUART.c ****     CyDelayUs(USBUART_WAIT_VREF_RESTORE);
 286:Generated_Source\PSoC4/USBUART.c ****     /* Ensure single-ended disable bits are low (PRT15.INP_DIS[7:6])(input receiver enabled). */
 287:Generated_Source\PSoC4/USBUART.c ****     USBUART_DM_INP_DIS_REG &= (uint8) ~USBUART_DM_MASK;
ARM GAS  C:\Users\essele\AppData\Local\Temp\ccbSjPdV.s 			page 9


 288:Generated_Source\PSoC4/USBUART.c ****     USBUART_DP_INP_DIS_REG &= (uint8) ~USBUART_DP_MASK;
 289:Generated_Source\PSoC4/USBUART.c **** 
 290:Generated_Source\PSoC4/USBUART.c ****     /* Enable USBIO. */
 291:Generated_Source\PSoC4/USBUART.c ****     USBUART_PM_USB_CR0_REG |= USBUART_PM_USB_CR0_PD_N;
 292:Generated_Source\PSoC4/USBUART.c ****     CyDelayUs(USBUART_WAIT_PD_PULLUP_N_ENABLE);
 293:Generated_Source\PSoC4/USBUART.c ****     /* Set USBIO pull-up enable. */
 294:Generated_Source\PSoC4/USBUART.c ****     USBUART_PM_USB_CR0_REG |= USBUART_PM_USB_CR0_PD_PULLUP_N;
 295:Generated_Source\PSoC4/USBUART.c **** 
 296:Generated_Source\PSoC4/USBUART.c ****     /* Reset Arbiter Write Address register for endpoint 1. */
 297:Generated_Source\PSoC4/USBUART.c ****     CY_SET_REG8(USBUART_ARB_RW1_WA_PTR,     0u);
 298:Generated_Source\PSoC4/USBUART.c ****     CY_SET_REG8(USBUART_ARB_RW1_WA_MSB_PTR, 0u);
 299:Generated_Source\PSoC4/USBUART.c **** 
 300:Generated_Source\PSoC4/USBUART.c **** #if (USBUART_EP_MANAGEMENT_DMA)
 301:Generated_Source\PSoC4/USBUART.c ****     /* Initialize transfer descriptor. This will be used to detect DMA state - initialized or not. 
 302:Generated_Source\PSoC4/USBUART.c ****     for (i = 0u; i < USBUART_MAX_EP; ++i)
 303:Generated_Source\PSoC4/USBUART.c ****     {
 304:Generated_Source\PSoC4/USBUART.c ****         USBUART_DmaTd[i] = DMA_INVALID_TD;
 305:Generated_Source\PSoC4/USBUART.c **** 
 306:Generated_Source\PSoC4/USBUART.c ****     #if (USBUART_EP_MANAGEMENT_DMA_AUTO && (USBUART_EP_DMA_AUTO_OPT == 0u))
 307:Generated_Source\PSoC4/USBUART.c ****         USBUART_DmaNextTd[i] = DMA_INVALID_TD;
 308:Generated_Source\PSoC4/USBUART.c ****     #endif /* (USBUART_EP_MANAGEMENT_DMA_AUTO && (USBUART_EP_DMA_AUTO_OPT == 0u)) */
 309:Generated_Source\PSoC4/USBUART.c ****     }
 310:Generated_Source\PSoC4/USBUART.c **** #endif /* (USBUART_EP_MANAGEMENT_DMA) */
 311:Generated_Source\PSoC4/USBUART.c **** 
 312:Generated_Source\PSoC4/USBUART.c ****     CyExitCriticalSection(enableInterrupts);
 313:Generated_Source\PSoC4/USBUART.c **** #endif /* (CY_PSOC4) */
 314:Generated_Source\PSoC4/USBUART.c **** 
 315:Generated_Source\PSoC4/USBUART.c ****     /* Configure interrupts from USB block. */
 316:Generated_Source\PSoC4/USBUART.c **** #if (CY_PSOC4)
 317:Generated_Source\PSoC4/USBUART.c ****     /* Configure hi_int: set handler and priority. */
 318:Generated_Source\PSoC4/USBUART.c ****     CyIntSetPriority     (USBUART_INTR_HI_VECT_NUM,  USBUART_INTR_HI_PRIORITY);
 170              		.loc 1 318 0 discriminator 4
 171 006a 0321     		movs	r1, #3
 172 006c 1E20     		movs	r0, #30
 173 006e FFF7FEFF 		bl	CyIntSetPriority
 319:Generated_Source\PSoC4/USBUART.c ****     (void) CyIntSetVector(USBUART_INTR_HI_VECT_NUM, &USBUART_INTR_HI_ISR);
 174              		.loc 1 319 0 discriminator 4
 175 0072 1B4B     		ldr	r3, .L8+40
 176 0074 1900     		movs	r1, r3
 177 0076 1E20     		movs	r0, #30
 178 0078 FFF7FEFF 		bl	CyIntSetVector
 320:Generated_Source\PSoC4/USBUART.c **** 
 321:Generated_Source\PSoC4/USBUART.c ****     /* Configure lo_int: set handler and priority. */
 322:Generated_Source\PSoC4/USBUART.c ****     CyIntSetPriority     (USBUART_INTR_LO_VECT_NUM,  USBUART_INTR_LO_PRIORITY);
 179              		.loc 1 322 0 discriminator 4
 180 007c 0321     		movs	r1, #3
 181 007e 1F20     		movs	r0, #31
 182 0080 FFF7FEFF 		bl	CyIntSetPriority
 323:Generated_Source\PSoC4/USBUART.c ****     (void) CyIntSetVector(USBUART_INTR_LO_VECT_NUM, &USBUART_INTR_LO_ISR);
 183              		.loc 1 323 0 discriminator 4
 184 0084 174B     		ldr	r3, .L8+44
 185 0086 1900     		movs	r1, r3
 186 0088 1F20     		movs	r0, #31
 187 008a FFF7FEFF 		bl	CyIntSetVector
 324:Generated_Source\PSoC4/USBUART.c **** 
 325:Generated_Source\PSoC4/USBUART.c ****     /* Configure med_int: set handler and priority (routed through DSI). */
 326:Generated_Source\PSoC4/USBUART.c ****     CyIntSetPriority     (USBUART_INTR_MED_VECT_NUM,  USBUART_INTR_MED_PRIORITY);
ARM GAS  C:\Users\essele\AppData\Local\Temp\ccbSjPdV.s 			page 10


 188              		.loc 1 326 0 discriminator 4
 189 008e 0321     		movs	r1, #3
 190 0090 0020     		movs	r0, #0
 191 0092 FFF7FEFF 		bl	CyIntSetPriority
 327:Generated_Source\PSoC4/USBUART.c ****     (void) CyIntSetVector(USBUART_INTR_MED_VECT_NUM, &USBUART_INTR_MED_ISR);
 192              		.loc 1 327 0 discriminator 4
 193 0096 144B     		ldr	r3, .L8+48
 194 0098 1900     		movs	r1, r3
 195 009a 0020     		movs	r0, #0
 196 009c FFF7FEFF 		bl	CyIntSetVector
 328:Generated_Source\PSoC4/USBUART.c **** 
 329:Generated_Source\PSoC4/USBUART.c **** #else
 330:Generated_Source\PSoC4/USBUART.c ****     /* Set bus reset interrupt. */
 331:Generated_Source\PSoC4/USBUART.c ****     CyIntSetPriority(USBUART_BUS_RESET_VECT_NUM, USBUART_BUS_RESET_PRIOR);
 332:Generated_Source\PSoC4/USBUART.c ****     (void) CyIntSetVector(USBUART_BUS_RESET_VECT_NUM,   &USBUART_BUS_RESET_ISR);
 333:Generated_Source\PSoC4/USBUART.c **** 
 334:Generated_Source\PSoC4/USBUART.c ****     /* Set Control Endpoint Interrupt. */
 335:Generated_Source\PSoC4/USBUART.c ****     CyIntSetPriority(USBUART_EP_0_VECT_NUM, USBUART_EP_0_PRIOR);
 336:Generated_Source\PSoC4/USBUART.c ****     (void) CyIntSetVector(USBUART_EP_0_VECT_NUM,   &USBUART_EP_0_ISR);
 337:Generated_Source\PSoC4/USBUART.c **** 
 338:Generated_Source\PSoC4/USBUART.c ****     /* Set SOF interrupt. */
 339:Generated_Source\PSoC4/USBUART.c ****     #if (USBUART_SOF_ISR_ACTIVE)
 340:Generated_Source\PSoC4/USBUART.c ****         CyIntSetPriority     (USBUART_SOF_VECT_NUM,  USBUART_SOF_PRIOR);
 341:Generated_Source\PSoC4/USBUART.c ****         (void) CyIntSetVector(USBUART_SOF_VECT_NUM, &USBUART_SOF_ISR);
 342:Generated_Source\PSoC4/USBUART.c ****     #endif /* (USBUART_SOF_ISR_ACTIVE) */
 343:Generated_Source\PSoC4/USBUART.c **** 
 344:Generated_Source\PSoC4/USBUART.c ****     /* Set Data Endpoint 1 Interrupt. */
 345:Generated_Source\PSoC4/USBUART.c ****     #if (USBUART_EP1_ISR_ACTIVE)
 346:Generated_Source\PSoC4/USBUART.c ****         CyIntSetPriority     (USBUART_EP_1_VECT_NUM,  USBUART_EP_1_PRIOR);
 347:Generated_Source\PSoC4/USBUART.c ****         (void) CyIntSetVector(USBUART_EP_1_VECT_NUM,  &USBUART_EP_1_ISR);
 348:Generated_Source\PSoC4/USBUART.c ****     #endif /* (USBUART_EP1_ISR_ACTIVE) */
 349:Generated_Source\PSoC4/USBUART.c **** 
 350:Generated_Source\PSoC4/USBUART.c ****     /* Set Data Endpoint 2 Interrupt. */
 351:Generated_Source\PSoC4/USBUART.c ****     #if (USBUART_EP2_ISR_ACTIVE)
 352:Generated_Source\PSoC4/USBUART.c ****         CyIntSetPriority     (USBUART_EP_2_VECT_NUM,  USBUART_EP_2_PRIOR);
 353:Generated_Source\PSoC4/USBUART.c ****         (void) CyIntSetVector(USBUART_EP_2_VECT_NUM, &USBUART_EP_2_ISR);
 354:Generated_Source\PSoC4/USBUART.c ****     #endif /* (USBUART_EP2_ISR_ACTIVE) */
 355:Generated_Source\PSoC4/USBUART.c **** 
 356:Generated_Source\PSoC4/USBUART.c ****     /* Set Data Endpoint 3 Interrupt. */
 357:Generated_Source\PSoC4/USBUART.c ****     #if (USBUART_EP3_ISR_ACTIVE)
 358:Generated_Source\PSoC4/USBUART.c ****         CyIntSetPriority     (USBUART_EP_3_VECT_NUM,  USBUART_EP_3_PRIOR);
 359:Generated_Source\PSoC4/USBUART.c ****         (void) CyIntSetVector(USBUART_EP_3_VECT_NUM, &USBUART_EP_3_ISR);
 360:Generated_Source\PSoC4/USBUART.c ****     #endif /* (USBUART_EP3_ISR_ACTIVE) */
 361:Generated_Source\PSoC4/USBUART.c **** 
 362:Generated_Source\PSoC4/USBUART.c ****     /* Set Data Endpoint 4 Interrupt. */
 363:Generated_Source\PSoC4/USBUART.c ****     #if (USBUART_EP4_ISR_ACTIVE)
 364:Generated_Source\PSoC4/USBUART.c ****         CyIntSetPriority     (USBUART_EP_4_VECT_NUM,  USBUART_EP_4_PRIOR);
 365:Generated_Source\PSoC4/USBUART.c ****         (void) CyIntSetVector(USBUART_EP_4_VECT_NUM, &USBUART_EP_4_ISR);
 366:Generated_Source\PSoC4/USBUART.c ****     #endif /* (USBUART_EP4_ISR_ACTIVE) */
 367:Generated_Source\PSoC4/USBUART.c **** 
 368:Generated_Source\PSoC4/USBUART.c ****     /* Set Data Endpoint 5 Interrupt. */
 369:Generated_Source\PSoC4/USBUART.c ****     #if (USBUART_EP5_ISR_ACTIVE)
 370:Generated_Source\PSoC4/USBUART.c ****         CyIntSetPriority     (USBUART_EP_5_VECT_NUM,  USBUART_EP_5_PRIOR);
 371:Generated_Source\PSoC4/USBUART.c ****         (void) CyIntSetVector(USBUART_EP_5_VECT_NUM, &USBUART_EP_5_ISR);
 372:Generated_Source\PSoC4/USBUART.c ****     #endif /* (USBUART_EP5_ISR_ACTIVE) */
 373:Generated_Source\PSoC4/USBUART.c **** 
 374:Generated_Source\PSoC4/USBUART.c ****     /* Set Data Endpoint 6 Interrupt. */
ARM GAS  C:\Users\essele\AppData\Local\Temp\ccbSjPdV.s 			page 11


 375:Generated_Source\PSoC4/USBUART.c ****     #if (USBUART_EP6_ISR_ACTIVE)
 376:Generated_Source\PSoC4/USBUART.c ****         CyIntSetPriority     (USBUART_EP_6_VECT_NUM,  USBUART_EP_6_PRIOR);
 377:Generated_Source\PSoC4/USBUART.c ****         (void) CyIntSetVector(USBUART_EP_6_VECT_NUM, &USBUART_EP_6_ISR);
 378:Generated_Source\PSoC4/USBUART.c ****     #endif /* (USBUART_EP6_ISR_ACTIVE) */
 379:Generated_Source\PSoC4/USBUART.c **** 
 380:Generated_Source\PSoC4/USBUART.c ****      /* Set Data Endpoint 7 Interrupt. */
 381:Generated_Source\PSoC4/USBUART.c ****     #if (USBUART_EP7_ISR_ACTIVE)
 382:Generated_Source\PSoC4/USBUART.c ****         CyIntSetPriority     (USBUART_EP_7_VECT_NUM,  USBUART_EP_7_PRIOR);
 383:Generated_Source\PSoC4/USBUART.c ****         (void) CyIntSetVector(USBUART_EP_7_VECT_NUM, &USBUART_EP_7_ISR);
 384:Generated_Source\PSoC4/USBUART.c ****     #endif /* (USBUART_EP7_ISR_ACTIVE) */
 385:Generated_Source\PSoC4/USBUART.c **** 
 386:Generated_Source\PSoC4/USBUART.c ****     /* Set Data Endpoint 8 Interrupt. */
 387:Generated_Source\PSoC4/USBUART.c ****     #if (USBUART_EP8_ISR_ACTIVE)
 388:Generated_Source\PSoC4/USBUART.c ****         CyIntSetPriority     (USBUART_EP_8_VECT_NUM,  USBUART_EP_8_PRIOR);
 389:Generated_Source\PSoC4/USBUART.c ****         (void) CyIntSetVector(USBUART_EP_8_VECT_NUM, &USBUART_EP_8_ISR);
 390:Generated_Source\PSoC4/USBUART.c ****     #endif /* (USBUART_EP8_ISR_ACTIVE) */
 391:Generated_Source\PSoC4/USBUART.c **** 
 392:Generated_Source\PSoC4/USBUART.c ****     /* Set ARB Interrupt. */
 393:Generated_Source\PSoC4/USBUART.c ****     #if (USBUART_EP_MANAGEMENT_DMA && USBUART_ARB_ISR_ACTIVE)
 394:Generated_Source\PSoC4/USBUART.c ****         CyIntSetPriority     (USBUART_ARB_VECT_NUM,  USBUART_ARB_PRIOR);
 395:Generated_Source\PSoC4/USBUART.c ****         (void) CyIntSetVector(USBUART_ARB_VECT_NUM, &USBUART_ARB_ISR);
 396:Generated_Source\PSoC4/USBUART.c ****     #endif /* (USBUART_EP_MANAGEMENT_DMA && USBUART_ARB_ISR_ACTIVE) */
 397:Generated_Source\PSoC4/USBUART.c **** #endif /* (CY_PSOC4) */
 398:Generated_Source\PSoC4/USBUART.c **** 
 399:Generated_Source\PSoC4/USBUART.c ****     /* Common: Configure GPIO interrupt for wakeup. */
 400:Generated_Source\PSoC4/USBUART.c **** #if (USBUART_DP_ISR_ACTIVE)
 401:Generated_Source\PSoC4/USBUART.c ****     CyIntSetPriority     (USBUART_DP_INTC_VECT_NUM,  USBUART_DP_INTC_PRIORITY);
 197              		.loc 1 401 0 discriminator 4
 198 00a0 0321     		movs	r1, #3
 199 00a2 0520     		movs	r0, #5
 200 00a4 FFF7FEFF 		bl	CyIntSetPriority
 402:Generated_Source\PSoC4/USBUART.c ****     (void) CyIntSetVector(USBUART_DP_INTC_VECT_NUM, &USBUART_DP_ISR);
 201              		.loc 1 402 0 discriminator 4
 202 00a8 104B     		ldr	r3, .L8+52
 203 00aa 1900     		movs	r1, r3
 204 00ac 0520     		movs	r0, #5
 205 00ae FFF7FEFF 		bl	CyIntSetVector
 403:Generated_Source\PSoC4/USBUART.c **** #endif /* (USBUART_DP_ISR_ACTIVE) */
 404:Generated_Source\PSoC4/USBUART.c **** 
 405:Generated_Source\PSoC4/USBUART.c **** #if (USBUART_EP_MANAGEMENT_DMA && CY_PSOC4)
 406:Generated_Source\PSoC4/USBUART.c ****     /* Initialize DMA channels. */
 407:Generated_Source\PSoC4/USBUART.c ****     USBUART_InitEpDma();
 408:Generated_Source\PSoC4/USBUART.c **** #endif /* (USBUART_EP_MANAGEMENT_DMA && CY_PSOC4) */
 409:Generated_Source\PSoC4/USBUART.c **** }
 206              		.loc 1 409 0 discriminator 4
 207 00b2 C046     		nop
 208 00b4 BD46     		mov	sp, r7
 209              		@ sp needed
 210 00b6 B0BD     		pop	{r4, r5, r7, pc}
 211              	.L9:
 212              		.align	2
 213              	.L8:
 214 00b8 74022C40 		.word	1076626036
 215 00bc 48002C40 		.word	1076625480
 216 00c0 30032C40 		.word	1076626224
 217 00c4 00202C40 		.word	1076633600
 218 00c8 03000004 		.word	67108867
ARM GAS  C:\Users\essele\AppData\Local\Temp\ccbSjPdV.s 			page 12


 219 00cc 0C0000B8 		.word	-1207959540
 220 00d0 24002C40 		.word	1076625444
 221 00d4 30202C40 		.word	1076633648
 222 00d8 1A001500 		.word	1376282
 223 00dc 28202C40 		.word	1076633640
 224 00e0 00000000 		.word	USBUART_INTR_HI_ISR
 225 00e4 00000000 		.word	USBUART_INTR_LO_ISR
 226 00e8 00000000 		.word	USBUART_INTR_MED_ISR
 227 00ec 00000000 		.word	USBUART_DP_ISR
 228              		.cfi_endproc
 229              	.LFE2:
 230              		.size	USBUART_Init, .-USBUART_Init
 231              		.section	.text.USBUART_InitComponent,"ax",%progbits
 232              		.align	2
 233              		.global	USBUART_InitComponent
 234              		.code	16
 235              		.thumb_func
 236              		.type	USBUART_InitComponent, %function
 237              	USBUART_InitComponent:
 238              	.LFB3:
 410:Generated_Source\PSoC4/USBUART.c **** 
 411:Generated_Source\PSoC4/USBUART.c **** 
 412:Generated_Source\PSoC4/USBUART.c **** /*******************************************************************************
 413:Generated_Source\PSoC4/USBUART.c **** * Function Name: USBUART_InitComponent
 414:Generated_Source\PSoC4/USBUART.c **** ****************************************************************************//**
 415:Generated_Source\PSoC4/USBUART.c **** *
 416:Generated_Source\PSoC4/USBUART.c **** *   This function initializes the component’s global variables and initiates
 417:Generated_Source\PSoC4/USBUART.c **** *   communication with the host by pull-up D+ line.
 418:Generated_Source\PSoC4/USBUART.c **** *
 419:Generated_Source\PSoC4/USBUART.c **** * \param device:
 420:Generated_Source\PSoC4/USBUART.c **** *   Contains the device number of the desired device descriptor. The device
 421:Generated_Source\PSoC4/USBUART.c **** *   number can be found in the Device Descriptor Tab of "Configure" dialog,
 422:Generated_Source\PSoC4/USBUART.c **** *   under the settings of desired Device Descriptor, in the *Device Number*
 423:Generated_Source\PSoC4/USBUART.c **** *   field.
 424:Generated_Source\PSoC4/USBUART.c **** *  \param mode:
 425:Generated_Source\PSoC4/USBUART.c **** *   The operating voltage. This determines whether the voltage regulator
 426:Generated_Source\PSoC4/USBUART.c **** *   is enabled for 5V operation or if pass through mode is used for 3.3V
 427:Generated_Source\PSoC4/USBUART.c **** *   operation. Symbolic names and their associated values are given in the
 428:Generated_Source\PSoC4/USBUART.c **** *   following list.
 429:Generated_Source\PSoC4/USBUART.c **** *
 430:Generated_Source\PSoC4/USBUART.c **** *       *USBUART_3V_OPERATION* - Disable voltage regulator and pass-
 431:Generated_Source\PSoC4/USBUART.c **** *                                      through Vcc for pull-up
 432:Generated_Source\PSoC4/USBUART.c **** *
 433:Generated_Source\PSoC4/USBUART.c **** *       *USBUART_5V_OPERATION* - Enable voltage regulator and use
 434:Generated_Source\PSoC4/USBUART.c **** *                                      regulator for pull-up
 435:Generated_Source\PSoC4/USBUART.c **** *
 436:Generated_Source\PSoC4/USBUART.c **** *       *USBUART_DWR_POWER_OPERATION* - Enable or disable the voltage
 437:Generated_Source\PSoC4/USBUART.c **** *                                      regulator depending on the power supply
 438:Generated_Source\PSoC4/USBUART.c **** *                                      voltage configuration in the DWR tab.
 439:Generated_Source\PSoC4/USBUART.c **** *                                      For PSoC 3/5LP devices, the VDDD supply
 440:Generated_Source\PSoC4/USBUART.c **** *                                      voltage is considered and for PSoC 4A-L,
 441:Generated_Source\PSoC4/USBUART.c **** *                                      the VBUS supply voltage is considered.
 442:Generated_Source\PSoC4/USBUART.c **** *
 443:Generated_Source\PSoC4/USBUART.c **** * \globalvars
 444:Generated_Source\PSoC4/USBUART.c **** *   \ref USBUART_device
 445:Generated_Source\PSoC4/USBUART.c **** *   \ref USBUART_transferState
 446:Generated_Source\PSoC4/USBUART.c **** *   \ref USBUART_configuration
ARM GAS  C:\Users\essele\AppData\Local\Temp\ccbSjPdV.s 			page 13


 447:Generated_Source\PSoC4/USBUART.c **** *   \ref USBUART_deviceStatus
 448:Generated_Source\PSoC4/USBUART.c **** *
 449:Generated_Source\PSoC4/USBUART.c **** *   \ref USBUART_deviceAddress - Contains the current device address. This
 450:Generated_Source\PSoC4/USBUART.c **** *       variable is initialized to zero in this API. The Host starts to communicate
 451:Generated_Source\PSoC4/USBUART.c **** *      to the device with address 0 and then sets it to a whatever value using a
 452:Generated_Source\PSoC4/USBUART.c **** *      SET_ADDRESS request.
 453:Generated_Source\PSoC4/USBUART.c **** *
 454:Generated_Source\PSoC4/USBUART.c **** *   \ref USBUART_lastPacketSize - Initialized to 0;
 455:Generated_Source\PSoC4/USBUART.c **** *
 456:Generated_Source\PSoC4/USBUART.c **** * \reentrant
 457:Generated_Source\PSoC4/USBUART.c **** *  No.
 458:Generated_Source\PSoC4/USBUART.c **** *
 459:Generated_Source\PSoC4/USBUART.c **** *******************************************************************************/
 460:Generated_Source\PSoC4/USBUART.c **** void USBUART_InitComponent(uint8 device, uint8 mode) 
 461:Generated_Source\PSoC4/USBUART.c **** {
 239              		.loc 1 461 0
 240              		.cfi_startproc
 241              		@ args = 0, pretend = 0, frame = 8
 242              		@ frame_needed = 1, uses_anonymous_args = 0
 243 0000 80B5     		push	{r7, lr}
 244              		.cfi_def_cfa_offset 8
 245              		.cfi_offset 7, -8
 246              		.cfi_offset 14, -4
 247 0002 82B0     		sub	sp, sp, #8
 248              		.cfi_def_cfa_offset 16
 249 0004 00AF     		add	r7, sp, #0
 250              		.cfi_def_cfa_register 7
 251 0006 0200     		movs	r2, r0
 252 0008 FB1D     		adds	r3, r7, #7
 253 000a 1A70     		strb	r2, [r3]
 254 000c BB1D     		adds	r3, r7, #6
 255 000e 0A1C     		adds	r2, r1, #0
 256 0010 1A70     		strb	r2, [r3]
 462:Generated_Source\PSoC4/USBUART.c ****     /* Initialize _hidProtocol variable to comply with
 463:Generated_Source\PSoC4/USBUART.c ****     *  HID 7.2.6 Set_Protocol Request:
 464:Generated_Source\PSoC4/USBUART.c ****     *  "When initialized, all devices default to report protocol."
 465:Generated_Source\PSoC4/USBUART.c ****     */
 466:Generated_Source\PSoC4/USBUART.c **** #if defined(USBUART_ENABLE_HID_CLASS)
 467:Generated_Source\PSoC4/USBUART.c ****     uint8 i;
 468:Generated_Source\PSoC4/USBUART.c **** 
 469:Generated_Source\PSoC4/USBUART.c ****     for (i = 0u; i < USBUART_MAX_INTERFACES_NUMBER; i++)
 470:Generated_Source\PSoC4/USBUART.c ****     {
 471:Generated_Source\PSoC4/USBUART.c ****         USBUART_hidProtocol[i] = USBUART_PROTOCOL_REPORT;
 472:Generated_Source\PSoC4/USBUART.c ****     }
 473:Generated_Source\PSoC4/USBUART.c **** #endif /* USBUART_ENABLE_HID_CLASS */
 474:Generated_Source\PSoC4/USBUART.c **** 
 475:Generated_Source\PSoC4/USBUART.c ****     /* Store device number to access descriptor. */
 476:Generated_Source\PSoC4/USBUART.c ****     USBUART_device = device;
 257              		.loc 1 476 0
 258 0012 2A4B     		ldr	r3, .L16
 259 0014 FA1D     		adds	r2, r7, #7
 260 0016 1278     		ldrb	r2, [r2]
 261 0018 1A70     		strb	r2, [r3]
 477:Generated_Source\PSoC4/USBUART.c **** 
 478:Generated_Source\PSoC4/USBUART.c ****     /* Reset component internal variables. */
 479:Generated_Source\PSoC4/USBUART.c ****     USBUART_transferState   = USBUART_TRANS_STATE_IDLE;
 262              		.loc 1 479 0
ARM GAS  C:\Users\essele\AppData\Local\Temp\ccbSjPdV.s 			page 14


 263 001a 294B     		ldr	r3, .L16+4
 264 001c 0022     		movs	r2, #0
 265 001e 1A70     		strb	r2, [r3]
 480:Generated_Source\PSoC4/USBUART.c ****     USBUART_configurationChanged = 0u;
 266              		.loc 1 480 0
 267 0020 284B     		ldr	r3, .L16+8
 268 0022 0022     		movs	r2, #0
 269 0024 1A70     		strb	r2, [r3]
 481:Generated_Source\PSoC4/USBUART.c ****     USBUART_configuration   = 0u;
 270              		.loc 1 481 0
 271 0026 284B     		ldr	r3, .L16+12
 272 0028 0022     		movs	r2, #0
 273 002a 1A70     		strb	r2, [r3]
 482:Generated_Source\PSoC4/USBUART.c ****     USBUART_interfaceNumber = 0u;
 274              		.loc 1 482 0
 275 002c 274B     		ldr	r3, .L16+16
 276 002e 0022     		movs	r2, #0
 277 0030 1A70     		strb	r2, [r3]
 483:Generated_Source\PSoC4/USBUART.c ****     USBUART_deviceAddress   = 0u;
 278              		.loc 1 483 0
 279 0032 274B     		ldr	r3, .L16+20
 280 0034 0022     		movs	r2, #0
 281 0036 1A70     		strb	r2, [r3]
 484:Generated_Source\PSoC4/USBUART.c ****     USBUART_deviceStatus    = 0u;
 282              		.loc 1 484 0
 283 0038 264B     		ldr	r3, .L16+24
 284 003a 0022     		movs	r2, #0
 285 003c 1A70     		strb	r2, [r3]
 485:Generated_Source\PSoC4/USBUART.c ****     USBUART_lastPacketSize  = 0u;
 286              		.loc 1 485 0
 287 003e 264B     		ldr	r3, .L16+28
 288 0040 0022     		movs	r2, #0
 289 0042 1A70     		strb	r2, [r3]
 486:Generated_Source\PSoC4/USBUART.c **** 
 487:Generated_Source\PSoC4/USBUART.c ****     /* Enable component interrupts. */
 488:Generated_Source\PSoC4/USBUART.c **** #if (CY_PSOC4)
 489:Generated_Source\PSoC4/USBUART.c ****     CyIntEnable(USBUART_INTR_HI_VECT_NUM);
 290              		.loc 1 489 0
 291 0044 1E20     		movs	r0, #30
 292 0046 FFF7FEFF 		bl	CyIntEnable
 490:Generated_Source\PSoC4/USBUART.c ****     CyIntEnable(USBUART_INTR_MED_VECT_NUM);
 293              		.loc 1 490 0
 294 004a 0020     		movs	r0, #0
 295 004c FFF7FEFF 		bl	CyIntEnable
 491:Generated_Source\PSoC4/USBUART.c ****     CyIntEnable(USBUART_INTR_LO_VECT_NUM);
 296              		.loc 1 491 0
 297 0050 1F20     		movs	r0, #31
 298 0052 FFF7FEFF 		bl	CyIntEnable
 492:Generated_Source\PSoC4/USBUART.c **** #else
 493:Generated_Source\PSoC4/USBUART.c ****     CyIntEnable(USBUART_BUS_RESET_VECT_NUM);
 494:Generated_Source\PSoC4/USBUART.c ****     CyIntEnable(USBUART_EP_0_VECT_NUM);
 495:Generated_Source\PSoC4/USBUART.c **** 
 496:Generated_Source\PSoC4/USBUART.c ****     #if (USBUART_SOF_ISR_ACTIVE)
 497:Generated_Source\PSoC4/USBUART.c ****         CyIntEnable(USBUART_SOF_VECT_NUM);
 498:Generated_Source\PSoC4/USBUART.c ****     #endif /* (USBUART_SOF_ISR_ACTIVE) */
 499:Generated_Source\PSoC4/USBUART.c **** 
 500:Generated_Source\PSoC4/USBUART.c ****     #if (USBUART_EP1_ISR_ACTIVE)
ARM GAS  C:\Users\essele\AppData\Local\Temp\ccbSjPdV.s 			page 15


 501:Generated_Source\PSoC4/USBUART.c ****         CyIntEnable(USBUART_EP_1_VECT_NUM);
 502:Generated_Source\PSoC4/USBUART.c ****     #endif /* (USBUART_EP1_ISR_ACTIVE) */
 503:Generated_Source\PSoC4/USBUART.c **** 
 504:Generated_Source\PSoC4/USBUART.c ****     #if (USBUART_EP2_ISR_ACTIVE)
 505:Generated_Source\PSoC4/USBUART.c ****         CyIntEnable(USBUART_EP_2_VECT_NUM);
 506:Generated_Source\PSoC4/USBUART.c ****     #endif /* (USBUART_EP5_ISR_ACTIVE) */
 507:Generated_Source\PSoC4/USBUART.c **** 
 508:Generated_Source\PSoC4/USBUART.c ****     #if (USBUART_EP3_ISR_ACTIVE)
 509:Generated_Source\PSoC4/USBUART.c ****         CyIntEnable(USBUART_EP_3_VECT_NUM);
 510:Generated_Source\PSoC4/USBUART.c ****     #endif /* (USBUART_EP5_ISR_ACTIVE) */
 511:Generated_Source\PSoC4/USBUART.c **** 
 512:Generated_Source\PSoC4/USBUART.c ****     #if (USBUART_EP4_ISR_ACTIVE)
 513:Generated_Source\PSoC4/USBUART.c ****         CyIntEnable(USBUART_EP_4_VECT_NUM);
 514:Generated_Source\PSoC4/USBUART.c ****     #endif /* (USBUART_EP5_ISR_ACTIVE) */
 515:Generated_Source\PSoC4/USBUART.c **** 
 516:Generated_Source\PSoC4/USBUART.c ****     #if (USBUART_EP5_ISR_ACTIVE)
 517:Generated_Source\PSoC4/USBUART.c ****         CyIntEnable(USBUART_EP_5_VECT_NUM);
 518:Generated_Source\PSoC4/USBUART.c ****     #endif /* (USBUART_EP5_ISR_ACTIVE) */
 519:Generated_Source\PSoC4/USBUART.c **** 
 520:Generated_Source\PSoC4/USBUART.c ****     #if (USBUART_EP6_ISR_ACTIVE)
 521:Generated_Source\PSoC4/USBUART.c ****         CyIntEnable(USBUART_EP_6_VECT_NUM);
 522:Generated_Source\PSoC4/USBUART.c ****     #endif /* USBUART_EP6_ISR_REMOVE */
 523:Generated_Source\PSoC4/USBUART.c **** 
 524:Generated_Source\PSoC4/USBUART.c ****     #if (USBUART_EP7_ISR_ACTIVE)
 525:Generated_Source\PSoC4/USBUART.c ****         CyIntEnable(USBUART_EP_7_VECT_NUM);
 526:Generated_Source\PSoC4/USBUART.c ****     #endif /* (USBUART_EP7_ISR_ACTIVE) */
 527:Generated_Source\PSoC4/USBUART.c **** 
 528:Generated_Source\PSoC4/USBUART.c ****     #if (USBUART_EP8_ISR_ACTIVE)
 529:Generated_Source\PSoC4/USBUART.c ****         CyIntEnable(USBUART_EP_8_VECT_NUM);
 530:Generated_Source\PSoC4/USBUART.c ****     #endif /* (USBUART_EP8_ISR_ACTIVE) */
 531:Generated_Source\PSoC4/USBUART.c **** #endif /* (CY_PSOC4) */
 532:Generated_Source\PSoC4/USBUART.c **** 
 533:Generated_Source\PSoC4/USBUART.c **** #if (USBUART_EP_MANAGEMENT_DMA && USBUART_ARB_ISR_ACTIVE)
 534:Generated_Source\PSoC4/USBUART.c ****     /* Enable ARB EP interrupt sources. */
 535:Generated_Source\PSoC4/USBUART.c ****     USBUART_ARB_INT_EN_REG = USBUART_DEFAULT_ARB_INT_EN;
 536:Generated_Source\PSoC4/USBUART.c **** 
 537:Generated_Source\PSoC4/USBUART.c ****     #if (CY_PSOC3 || CY_PSOC5)
 538:Generated_Source\PSoC4/USBUART.c ****         CyIntEnable(USBUART_ARB_VECT_NUM);
 539:Generated_Source\PSoC4/USBUART.c ****     #endif /* (CY_PSOC3 || CY_PSOC5) */
 540:Generated_Source\PSoC4/USBUART.c **** #endif   /* (USBUART_EP_MANAGEMENT_DMA && USBUART_ARB_ISR_ACTIVE) */
 541:Generated_Source\PSoC4/USBUART.c **** 
 542:Generated_Source\PSoC4/USBUART.c **** /* Arbiter configuration for DMA transfers. */
 543:Generated_Source\PSoC4/USBUART.c **** #if (USBUART_EP_MANAGEMENT_DMA)
 544:Generated_Source\PSoC4/USBUART.c ****     /* Configure Arbiter for Manual or Auto DMA operation and clear configuration completion. */
 545:Generated_Source\PSoC4/USBUART.c ****     USBUART_ARB_CFG_REG = USBUART_DEFAULT_ARB_CFG;
 546:Generated_Source\PSoC4/USBUART.c **** 
 547:Generated_Source\PSoC4/USBUART.c ****     #if (CY_PSOC4)
 548:Generated_Source\PSoC4/USBUART.c ****         /* Enable DMA operation. */
 549:Generated_Source\PSoC4/USBUART.c ****         CyDmaEnable();
 550:Generated_Source\PSoC4/USBUART.c **** 
 551:Generated_Source\PSoC4/USBUART.c ****         #if (USBUART_EP_MANAGEMENT_DMA_AUTO)
 552:Generated_Source\PSoC4/USBUART.c ****             /* Change DMA priority to be highest. */
 553:Generated_Source\PSoC4/USBUART.c ****              CyIntSetPriority(CYDMA_INTR_NUMBER, USBUART_DMA_AUTO_INTR_PRIO);
 554:Generated_Source\PSoC4/USBUART.c ****         #endif /* (USBUART_EP_MANAGEMENT_DMA_AUTO) */
 555:Generated_Source\PSoC4/USBUART.c ****     #endif /* (CY_PSOC4) */
 556:Generated_Source\PSoC4/USBUART.c **** 
 557:Generated_Source\PSoC4/USBUART.c ****     #if (USBUART_EP_MANAGEMENT_DMA_AUTO)
ARM GAS  C:\Users\essele\AppData\Local\Temp\ccbSjPdV.s 			page 16


 558:Generated_Source\PSoC4/USBUART.c ****         #if (CY_PSOC4)
 559:Generated_Source\PSoC4/USBUART.c ****             /* Enable DMA interrupt to handle DMA management. */
 560:Generated_Source\PSoC4/USBUART.c ****             CyIntEnable(CYDMA_INTR_NUMBER);
 561:Generated_Source\PSoC4/USBUART.c ****         #else
 562:Generated_Source\PSoC4/USBUART.c ****             #if (USBUART_EP_DMA_AUTO_OPT == 0u)
 563:Generated_Source\PSoC4/USBUART.c ****                 /* Initialize interrupts which handle verification of successful DMA transaction. *
 564:Generated_Source\PSoC4/USBUART.c ****                 USBUART_EP_DMA_Done_isr_StartEx(&USBUART_EP_DMA_DONE_ISR);
 565:Generated_Source\PSoC4/USBUART.c ****                 USBUART_EP17_DMA_Done_SR_InterruptEnable();
 566:Generated_Source\PSoC4/USBUART.c ****                 USBUART_EP8_DMA_Done_SR_InterruptEnable();
 567:Generated_Source\PSoC4/USBUART.c ****             #endif /* (USBUART_EP_DMA_AUTO_OPT == 0u) */
 568:Generated_Source\PSoC4/USBUART.c ****         #endif /* (CY_PSOC4) */
 569:Generated_Source\PSoC4/USBUART.c ****     #endif /* (USBUART_EP_MANAGEMENT_DMA_AUTO) */
 570:Generated_Source\PSoC4/USBUART.c **** #endif /* (USBUART_EP_MANAGEMENT_DMA) */
 571:Generated_Source\PSoC4/USBUART.c **** 
 572:Generated_Source\PSoC4/USBUART.c ****     /* Enable USB regulator depends on operation voltage. IMO Locking is enabled in Init(). */
 573:Generated_Source\PSoC4/USBUART.c ****     switch(mode)
 299              		.loc 1 573 0
 300 0056 BB1D     		adds	r3, r7, #6
 301 0058 1B78     		ldrb	r3, [r3]
 302 005a 002B     		cmp	r3, #0
 303 005c 02D0     		beq	.L12
 304 005e 012B     		cmp	r3, #1
 305 0060 07D0     		beq	.L13
 306 0062 0DE0     		b	.L15
 307              	.L12:
 574:Generated_Source\PSoC4/USBUART.c ****     {
 575:Generated_Source\PSoC4/USBUART.c ****     case USBUART_3V_OPERATION:
 576:Generated_Source\PSoC4/USBUART.c ****         /* Disable regulator for 3V operation. */
 577:Generated_Source\PSoC4/USBUART.c ****         USBUART_CR1_REG &= (uint32) ~USBUART_CR1_REG_ENABLE;
 308              		.loc 1 577 0
 309 0064 1D4B     		ldr	r3, .L16+32
 310 0066 1D4A     		ldr	r2, .L16+32
 311 0068 1268     		ldr	r2, [r2]
 312 006a 0121     		movs	r1, #1
 313 006c 8A43     		bics	r2, r1
 314 006e 1A60     		str	r2, [r3]
 578:Generated_Source\PSoC4/USBUART.c ****         break;
 315              		.loc 1 578 0
 316 0070 0DE0     		b	.L14
 317              	.L13:
 579:Generated_Source\PSoC4/USBUART.c **** 
 580:Generated_Source\PSoC4/USBUART.c ****     case USBUART_5V_OPERATION:
 581:Generated_Source\PSoC4/USBUART.c ****         /* Enable regulator for 5V operation. */
 582:Generated_Source\PSoC4/USBUART.c ****         USBUART_CR1_REG |= (uint32)  USBUART_CR1_REG_ENABLE;
 318              		.loc 1 582 0
 319 0072 1A4B     		ldr	r3, .L16+32
 320 0074 194A     		ldr	r2, .L16+32
 321 0076 1268     		ldr	r2, [r2]
 322 0078 0121     		movs	r1, #1
 323 007a 0A43     		orrs	r2, r1
 324 007c 1A60     		str	r2, [r3]
 583:Generated_Source\PSoC4/USBUART.c ****         break;
 325              		.loc 1 583 0
 326 007e 06E0     		b	.L14
 327              	.L15:
 584:Generated_Source\PSoC4/USBUART.c **** 
 585:Generated_Source\PSoC4/USBUART.c ****     default: /* Check DWR settings of USB power supply. */
ARM GAS  C:\Users\essele\AppData\Local\Temp\ccbSjPdV.s 			page 17


 586:Generated_Source\PSoC4/USBUART.c ****     #if (USBUART_VDDD_MV < USBUART_3500MV)
 587:Generated_Source\PSoC4/USBUART.c ****         /* Disable regulator for 3V operation. */
 588:Generated_Source\PSoC4/USBUART.c ****         USBUART_CR1_REG &= (uint32) ~USBUART_CR1_REG_ENABLE;
 589:Generated_Source\PSoC4/USBUART.c ****     #else
 590:Generated_Source\PSoC4/USBUART.c ****         /* Enable regulator for 5V operation. */
 591:Generated_Source\PSoC4/USBUART.c ****         USBUART_CR1_REG |= (uint32)  USBUART_CR1_REG_ENABLE;
 328              		.loc 1 591 0
 329 0080 164B     		ldr	r3, .L16+32
 330 0082 164A     		ldr	r2, .L16+32
 331 0084 1268     		ldr	r2, [r2]
 332 0086 0121     		movs	r1, #1
 333 0088 0A43     		orrs	r2, r1
 334 008a 1A60     		str	r2, [r3]
 592:Generated_Source\PSoC4/USBUART.c ****     #endif /* (USBUART_VDDD_MV < USBUART_3500MV) */
 593:Generated_Source\PSoC4/USBUART.c ****         break;
 335              		.loc 1 593 0
 336 008c C046     		nop
 337              	.L14:
 594:Generated_Source\PSoC4/USBUART.c ****     }
 595:Generated_Source\PSoC4/USBUART.c **** 
 596:Generated_Source\PSoC4/USBUART.c **** #if (CY_PSOC4)
 597:Generated_Source\PSoC4/USBUART.c ****     /* Clear bus activity. */
 598:Generated_Source\PSoC4/USBUART.c ****     USBUART_CR1_REG &= (uint32) ~USBUART_CR1_BUS_ACTIVITY;
 338              		.loc 1 598 0
 339 008e 134B     		ldr	r3, .L16+32
 340 0090 124A     		ldr	r2, .L16+32
 341 0092 1268     		ldr	r2, [r2]
 342 0094 0421     		movs	r1, #4
 343 0096 8A43     		bics	r2, r1
 344 0098 1A60     		str	r2, [r3]
 599:Generated_Source\PSoC4/USBUART.c **** 
 600:Generated_Source\PSoC4/USBUART.c ****     /* Clear EP0 count register. */
 601:Generated_Source\PSoC4/USBUART.c ****     USBUART_EP0_CNT_REG = USBUART_CLEAR_REG;
 345              		.loc 1 601 0
 346 009a 114B     		ldr	r3, .L16+36
 347 009c 0022     		movs	r2, #0
 348 009e 1A60     		str	r2, [r3]
 602:Generated_Source\PSoC4/USBUART.c **** 
 603:Generated_Source\PSoC4/USBUART.c ****     /* Set EP0.CR: ACK Setup, NAK IN/OUT. */
 604:Generated_Source\PSoC4/USBUART.c ****     USBUART_EP0_CR_REG = USBUART_MODE_NAK_IN_OUT;
 349              		.loc 1 604 0
 350 00a0 104B     		ldr	r3, .L16+40
 351 00a2 0122     		movs	r2, #1
 352 00a4 1A60     		str	r2, [r3]
 605:Generated_Source\PSoC4/USBUART.c **** 
 606:Generated_Source\PSoC4/USBUART.c ****     #if (USBUART_LPM_ACTIVE)
 607:Generated_Source\PSoC4/USBUART.c ****         if (NULL != USBUART_GetBOSPtr())
 608:Generated_Source\PSoC4/USBUART.c ****         {
 609:Generated_Source\PSoC4/USBUART.c ****             /* Enable LPM and acknowledge LPM packets for active device.
 610:Generated_Source\PSoC4/USBUART.c ****             * Reset NYET_EN and SUB_RESP bits in the LPM_CTRL register.
 611:Generated_Source\PSoC4/USBUART.c ****             */
 612:Generated_Source\PSoC4/USBUART.c ****             USBUART_LPM_CTRL_REG = (USBUART_LPM_CTRL_LPM_EN | \
 613:Generated_Source\PSoC4/USBUART.c ****                                              USBUART_LPM_CTRL_LPM_ACK_RESP);
 614:Generated_Source\PSoC4/USBUART.c ****         }
 615:Generated_Source\PSoC4/USBUART.c ****         else
 616:Generated_Source\PSoC4/USBUART.c ****         {
 617:Generated_Source\PSoC4/USBUART.c ****             /* Disable LPM for active device. */
ARM GAS  C:\Users\essele\AppData\Local\Temp\ccbSjPdV.s 			page 18


 618:Generated_Source\PSoC4/USBUART.c ****             USBUART_LPM_CTRL_REG &= (uint32) ~USBUART_LPM_CTRL_LPM_EN;
 619:Generated_Source\PSoC4/USBUART.c ****         }
 620:Generated_Source\PSoC4/USBUART.c ****     #endif /* (USBUART_LPM_ACTIVE) */
 621:Generated_Source\PSoC4/USBUART.c **** 
 622:Generated_Source\PSoC4/USBUART.c ****     /* Enable device to responds to USB traffic with address 0. */
 623:Generated_Source\PSoC4/USBUART.c ****     USBUART_CR0_REG = USBUART_DEFUALT_CR0;
 353              		.loc 1 623 0
 354 00a6 104B     		ldr	r3, .L16+44
 355 00a8 8022     		movs	r2, #128
 356 00aa 1A60     		str	r2, [r3]
 624:Generated_Source\PSoC4/USBUART.c **** 
 625:Generated_Source\PSoC4/USBUART.c **** #else
 626:Generated_Source\PSoC4/USBUART.c ****     /* Set EP0.CR: ACK Setup, STALL IN/OUT. */
 627:Generated_Source\PSoC4/USBUART.c ****     USBUART_EP0_CR_REG = USBUART_MODE_STALL_IN_OUT;
 628:Generated_Source\PSoC4/USBUART.c **** 
 629:Generated_Source\PSoC4/USBUART.c ****     /* Enable device to respond to USB traffic with address 0. */
 630:Generated_Source\PSoC4/USBUART.c ****     USBUART_CR0_REG = USBUART_DEFUALT_CR0;
 631:Generated_Source\PSoC4/USBUART.c ****     CyDelayCycles(USBUART_WAIT_CR0_REG_STABILITY);
 632:Generated_Source\PSoC4/USBUART.c **** #endif /* (CY_PSOC4) */
 633:Generated_Source\PSoC4/USBUART.c **** 
 634:Generated_Source\PSoC4/USBUART.c ****     /* Enable D+ pull-up and keep USB control on IO. */
 635:Generated_Source\PSoC4/USBUART.c ****     USBUART_USBIO_CR1_REG = USBUART_USBIO_CR1_USBPUEN;
 357              		.loc 1 635 0
 358 00ac 0F4B     		ldr	r3, .L16+48
 359 00ae 0422     		movs	r2, #4
 360 00b0 1A60     		str	r2, [r3]
 636:Generated_Source\PSoC4/USBUART.c **** }
 361              		.loc 1 636 0
 362 00b2 C046     		nop
 363 00b4 BD46     		mov	sp, r7
 364 00b6 02B0     		add	sp, sp, #8
 365              		@ sp needed
 366 00b8 80BD     		pop	{r7, pc}
 367              	.L17:
 368 00ba C046     		.align	2
 369              	.L16:
 370 00bc 00000000 		.word	USBUART_device
 371 00c0 00000000 		.word	USBUART_transferState
 372 00c4 00000000 		.word	USBUART_configurationChanged
 373 00c8 00000000 		.word	USBUART_configuration
 374 00cc 00000000 		.word	USBUART_interfaceNumber
 375 00d0 00000000 		.word	USBUART_deviceAddress
 376 00d4 00000000 		.word	USBUART_deviceStatus
 377 00d8 00000000 		.word	USBUART_lastPacketSize
 378 00dc 24002C40 		.word	1076625444
 379 00e0 A4002C40 		.word	1076625572
 380 00e4 A0002C40 		.word	1076625568
 381 00e8 20002C40 		.word	1076625440
 382 00ec 48002C40 		.word	1076625480
 383              		.cfi_endproc
 384              	.LFE3:
 385              		.size	USBUART_InitComponent, .-USBUART_InitComponent
 386              		.section	.text.USBUART_ReInitComponent,"ax",%progbits
 387              		.align	2
 388              		.global	USBUART_ReInitComponent
 389              		.code	16
 390              		.thumb_func
ARM GAS  C:\Users\essele\AppData\Local\Temp\ccbSjPdV.s 			page 19


 391              		.type	USBUART_ReInitComponent, %function
 392              	USBUART_ReInitComponent:
 393              	.LFB4:
 637:Generated_Source\PSoC4/USBUART.c **** 
 638:Generated_Source\PSoC4/USBUART.c **** 
 639:Generated_Source\PSoC4/USBUART.c **** /*******************************************************************************
 640:Generated_Source\PSoC4/USBUART.c **** * Function Name: USBUART_ReInitComponent
 641:Generated_Source\PSoC4/USBUART.c **** ****************************************************************************//**
 642:Generated_Source\PSoC4/USBUART.c **** *
 643:Generated_Source\PSoC4/USBUART.c **** *  This function reinitialize the component configuration and is
 644:Generated_Source\PSoC4/USBUART.c **** *  intend to be called from the Reset interrupt.
 645:Generated_Source\PSoC4/USBUART.c **** *
 646:Generated_Source\PSoC4/USBUART.c **** * \globalvars
 647:Generated_Source\PSoC4/USBUART.c **** *   USBUART_device - Contains the device number of the desired Device
 648:Generated_Source\PSoC4/USBUART.c **** *        Descriptor. The device number can be found in the Device Descriptor tab
 649:Generated_Source\PSoC4/USBUART.c **** *       of the Configure dialog, under the settings of the desired Device Descriptor,
 650:Generated_Source\PSoC4/USBUART.c **** *       in the Device Number field.
 651:Generated_Source\PSoC4/USBUART.c **** *   USBUART_transferState - This variable is used by the communication
 652:Generated_Source\PSoC4/USBUART.c **** *       functions to handle the current transfer state. Initialized to
 653:Generated_Source\PSoC4/USBUART.c **** *       TRANS_STATE_IDLE in this API.
 654:Generated_Source\PSoC4/USBUART.c **** *   USBUART_configuration - Contains the current configuration number
 655:Generated_Source\PSoC4/USBUART.c **** *       set by the Host using a SET_CONFIGURATION request.
 656:Generated_Source\PSoC4/USBUART.c **** *       Initialized to zero in this API.
 657:Generated_Source\PSoC4/USBUART.c **** *   USBUART_deviceAddress - Contains the current device address. This
 658:Generated_Source\PSoC4/USBUART.c **** *       variable is initialized to zero in this API. The Host starts to communicate
 659:Generated_Source\PSoC4/USBUART.c **** *      to the device with address 0 and then sets it to a whatever value using
 660:Generated_Source\PSoC4/USBUART.c **** *      a SET_ADDRESS request.
 661:Generated_Source\PSoC4/USBUART.c **** *   USBUART_deviceStatus - Initialized to 0.
 662:Generated_Source\PSoC4/USBUART.c **** *       This is a two-bit variable which contains the power status in the first bit
 663:Generated_Source\PSoC4/USBUART.c **** *       (DEVICE_STATUS_BUS_POWERED or DEVICE_STATUS_SELF_POWERED) and the remote
 664:Generated_Source\PSoC4/USBUART.c **** *       wakeup status (DEVICE_STATUS_REMOTE_WAKEUP) in the second bit.
 665:Generated_Source\PSoC4/USBUART.c **** *   USBUART_lastPacketSize - Initialized to 0;
 666:Generated_Source\PSoC4/USBUART.c **** *
 667:Generated_Source\PSoC4/USBUART.c **** * \reentrant
 668:Generated_Source\PSoC4/USBUART.c **** *  No.
 669:Generated_Source\PSoC4/USBUART.c **** *
 670:Generated_Source\PSoC4/USBUART.c **** *******************************************************************************/
 671:Generated_Source\PSoC4/USBUART.c **** void USBUART_ReInitComponent(void) 
 672:Generated_Source\PSoC4/USBUART.c **** {
 394              		.loc 1 672 0
 395              		.cfi_startproc
 396              		@ args = 0, pretend = 0, frame = 0
 397              		@ frame_needed = 1, uses_anonymous_args = 0
 398 0000 80B5     		push	{r7, lr}
 399              		.cfi_def_cfa_offset 8
 400              		.cfi_offset 7, -8
 401              		.cfi_offset 14, -4
 402 0002 00AF     		add	r7, sp, #0
 403              		.cfi_def_cfa_register 7
 673:Generated_Source\PSoC4/USBUART.c ****     /* Initialize _hidProtocol variable to comply with HID 7.2.6 Set_Protocol
 674:Generated_Source\PSoC4/USBUART.c ****     *  Request: "When initialized, all devices default to report protocol."
 675:Generated_Source\PSoC4/USBUART.c ****     */
 676:Generated_Source\PSoC4/USBUART.c **** #if defined(USBUART_ENABLE_HID_CLASS)
 677:Generated_Source\PSoC4/USBUART.c ****     uint8 i;
 678:Generated_Source\PSoC4/USBUART.c **** 
 679:Generated_Source\PSoC4/USBUART.c ****     for (i = 0u; i < USBUART_MAX_INTERFACES_NUMBER; i++)
 680:Generated_Source\PSoC4/USBUART.c ****     {
ARM GAS  C:\Users\essele\AppData\Local\Temp\ccbSjPdV.s 			page 20


 681:Generated_Source\PSoC4/USBUART.c ****         USBUART_hidProtocol[i] = USBUART_PROTOCOL_REPORT;
 682:Generated_Source\PSoC4/USBUART.c ****     }
 683:Generated_Source\PSoC4/USBUART.c **** #endif /* USBUART_ENABLE_HID_CLASS */
 684:Generated_Source\PSoC4/USBUART.c **** 
 685:Generated_Source\PSoC4/USBUART.c ****     /* Reset component internal variables. */
 686:Generated_Source\PSoC4/USBUART.c ****     USBUART_transferState   = USBUART_TRANS_STATE_IDLE;
 404              		.loc 1 686 0
 405 0004 0E4B     		ldr	r3, .L19
 406 0006 0022     		movs	r2, #0
 407 0008 1A70     		strb	r2, [r3]
 687:Generated_Source\PSoC4/USBUART.c ****     USBUART_configurationChanged = 0u;
 408              		.loc 1 687 0
 409 000a 0E4B     		ldr	r3, .L19+4
 410 000c 0022     		movs	r2, #0
 411 000e 1A70     		strb	r2, [r3]
 688:Generated_Source\PSoC4/USBUART.c ****     USBUART_configuration   = 0u;
 412              		.loc 1 688 0
 413 0010 0D4B     		ldr	r3, .L19+8
 414 0012 0022     		movs	r2, #0
 415 0014 1A70     		strb	r2, [r3]
 689:Generated_Source\PSoC4/USBUART.c ****     USBUART_interfaceNumber = 0u;
 416              		.loc 1 689 0
 417 0016 0D4B     		ldr	r3, .L19+12
 418 0018 0022     		movs	r2, #0
 419 001a 1A70     		strb	r2, [r3]
 690:Generated_Source\PSoC4/USBUART.c ****     USBUART_deviceAddress   = 0u;
 420              		.loc 1 690 0
 421 001c 0C4B     		ldr	r3, .L19+16
 422 001e 0022     		movs	r2, #0
 423 0020 1A70     		strb	r2, [r3]
 691:Generated_Source\PSoC4/USBUART.c ****     USBUART_deviceStatus    = 0u;
 424              		.loc 1 691 0
 425 0022 0C4B     		ldr	r3, .L19+20
 426 0024 0022     		movs	r2, #0
 427 0026 1A70     		strb	r2, [r3]
 692:Generated_Source\PSoC4/USBUART.c ****     USBUART_lastPacketSize  = 0u;
 428              		.loc 1 692 0
 429 0028 0B4B     		ldr	r3, .L19+24
 430 002a 0022     		movs	r2, #0
 431 002c 1A70     		strb	r2, [r3]
 693:Generated_Source\PSoC4/USBUART.c **** 
 694:Generated_Source\PSoC4/USBUART.c **** #if (CY_PSOC4)
 695:Generated_Source\PSoC4/USBUART.c ****     /* Set EP0.CR: ACK Setup, NAK IN/OUT. */
 696:Generated_Source\PSoC4/USBUART.c ****     USBUART_EP0_CR_REG = USBUART_MODE_NAK_IN_OUT;
 432              		.loc 1 696 0
 433 002e 0B4B     		ldr	r3, .L19+28
 434 0030 0122     		movs	r2, #1
 435 0032 1A60     		str	r2, [r3]
 697:Generated_Source\PSoC4/USBUART.c **** #else
 698:Generated_Source\PSoC4/USBUART.c ****     /* Set EP0.CR: ACK Setup, STALL IN/OUT. */
 699:Generated_Source\PSoC4/USBUART.c ****     USBUART_EP0_CR_REG = USBUART_MODE_STALL_IN_OUT;
 700:Generated_Source\PSoC4/USBUART.c **** #endif /* (CY_PSOC4) */
 701:Generated_Source\PSoC4/USBUART.c **** 
 702:Generated_Source\PSoC4/USBUART.c ****     /* Enable device to respond to USB traffic with address 0. */
 703:Generated_Source\PSoC4/USBUART.c ****     USBUART_CR0_REG = USBUART_DEFUALT_CR0;
 436              		.loc 1 703 0
 437 0034 0A4B     		ldr	r3, .L19+32
ARM GAS  C:\Users\essele\AppData\Local\Temp\ccbSjPdV.s 			page 21


 438 0036 8022     		movs	r2, #128
 439 0038 1A60     		str	r2, [r3]
 704:Generated_Source\PSoC4/USBUART.c **** }
 440              		.loc 1 704 0
 441 003a C046     		nop
 442 003c BD46     		mov	sp, r7
 443              		@ sp needed
 444 003e 80BD     		pop	{r7, pc}
 445              	.L20:
 446              		.align	2
 447              	.L19:
 448 0040 00000000 		.word	USBUART_transferState
 449 0044 00000000 		.word	USBUART_configurationChanged
 450 0048 00000000 		.word	USBUART_configuration
 451 004c 00000000 		.word	USBUART_interfaceNumber
 452 0050 00000000 		.word	USBUART_deviceAddress
 453 0054 00000000 		.word	USBUART_deviceStatus
 454 0058 00000000 		.word	USBUART_lastPacketSize
 455 005c A0002C40 		.word	1076625568
 456 0060 20002C40 		.word	1076625440
 457              		.cfi_endproc
 458              	.LFE4:
 459              		.size	USBUART_ReInitComponent, .-USBUART_ReInitComponent
 460              		.section	.text.USBUART_Stop,"ax",%progbits
 461              		.align	2
 462              		.global	USBUART_Stop
 463              		.code	16
 464              		.thumb_func
 465              		.type	USBUART_Stop, %function
 466              	USBUART_Stop:
 467              	.LFB5:
 705:Generated_Source\PSoC4/USBUART.c **** 
 706:Generated_Source\PSoC4/USBUART.c **** 
 707:Generated_Source\PSoC4/USBUART.c **** /*******************************************************************************
 708:Generated_Source\PSoC4/USBUART.c **** * Function Name: USBUART_Stop
 709:Generated_Source\PSoC4/USBUART.c **** ****************************************************************************//**
 710:Generated_Source\PSoC4/USBUART.c **** *
 711:Generated_Source\PSoC4/USBUART.c **** *  This function shuts down the USB function including to release
 712:Generated_Source\PSoC4/USBUART.c **** *  the D+ pull-up and disabling the SIE.
 713:Generated_Source\PSoC4/USBUART.c **** *
 714:Generated_Source\PSoC4/USBUART.c **** * \globalvars
 715:Generated_Source\PSoC4/USBUART.c **** *   \ref USBUART_configuration
 716:Generated_Source\PSoC4/USBUART.c **** *
 717:Generated_Source\PSoC4/USBUART.c **** *   USBUART_deviceAddress - Contains the current device address. This
 718:Generated_Source\PSoC4/USBUART.c **** *       variable is initialized to zero in this API. The Host starts to communicate
 719:Generated_Source\PSoC4/USBUART.c **** *      to the device with address 0 and then sets it to a whatever value using
 720:Generated_Source\PSoC4/USBUART.c **** *      a SET_ADDRESS request.
 721:Generated_Source\PSoC4/USBUART.c **** *
 722:Generated_Source\PSoC4/USBUART.c **** *   \ref USBUART_deviceStatus
 723:Generated_Source\PSoC4/USBUART.c **** *
 724:Generated_Source\PSoC4/USBUART.c **** *   \ref USBUART_configurationChanged
 725:Generated_Source\PSoC4/USBUART.c **** *
 726:Generated_Source\PSoC4/USBUART.c **** *   USBUART_intiVar -  This variable is set to zero
 727:Generated_Source\PSoC4/USBUART.c **** *
 728:Generated_Source\PSoC4/USBUART.c **** *******************************************************************************/
 729:Generated_Source\PSoC4/USBUART.c **** void USBUART_Stop(void) 
 730:Generated_Source\PSoC4/USBUART.c **** {
ARM GAS  C:\Users\essele\AppData\Local\Temp\ccbSjPdV.s 			page 22


 468              		.loc 1 730 0
 469              		.cfi_startproc
 470              		@ args = 0, pretend = 0, frame = 8
 471              		@ frame_needed = 1, uses_anonymous_args = 0
 472 0000 90B5     		push	{r4, r7, lr}
 473              		.cfi_def_cfa_offset 12
 474              		.cfi_offset 4, -12
 475              		.cfi_offset 7, -8
 476              		.cfi_offset 14, -4
 477 0002 83B0     		sub	sp, sp, #12
 478              		.cfi_def_cfa_offset 24
 479 0004 00AF     		add	r7, sp, #0
 480              		.cfi_def_cfa_register 7
 731:Generated_Source\PSoC4/USBUART.c ****     uint8 enableInterrupts;
 732:Generated_Source\PSoC4/USBUART.c **** 
 733:Generated_Source\PSoC4/USBUART.c **** #if (USBUART_EP_MANAGEMENT_DMA)
 734:Generated_Source\PSoC4/USBUART.c ****     /* Stop all DMA channels. */
 735:Generated_Source\PSoC4/USBUART.c ****     USBUART_Stop_DMA(USBUART_MAX_EP);
 736:Generated_Source\PSoC4/USBUART.c **** #endif /* (USBUART_EP_MANAGEMENT_DMA) */
 737:Generated_Source\PSoC4/USBUART.c **** 
 738:Generated_Source\PSoC4/USBUART.c ****     enableInterrupts = CyEnterCriticalSection();
 481              		.loc 1 738 0
 482 0006 FC1D     		adds	r4, r7, #7
 483 0008 FFF7FEFF 		bl	CyEnterCriticalSection
 484 000c 0300     		movs	r3, r0
 485 000e 2370     		strb	r3, [r4]
 739:Generated_Source\PSoC4/USBUART.c **** 
 740:Generated_Source\PSoC4/USBUART.c ****     /* Disable USB IP to respond to USB traffic. */
 741:Generated_Source\PSoC4/USBUART.c ****     USBUART_CR0_REG &= (uint32) ~USBUART_CR0_ENABLE;
 486              		.loc 1 741 0
 487 0010 1A4B     		ldr	r3, .L22
 488 0012 1A4A     		ldr	r2, .L22
 489 0014 1268     		ldr	r2, [r2]
 490 0016 8021     		movs	r1, #128
 491 0018 8A43     		bics	r2, r1
 492 001a 1A60     		str	r2, [r3]
 742:Generated_Source\PSoC4/USBUART.c **** 
 743:Generated_Source\PSoC4/USBUART.c ****     /* Disable D+ pull-up. */
 744:Generated_Source\PSoC4/USBUART.c ****     USBUART_USBIO_CR1_REG &= (uint32) ~ USBUART_USBIO_CR1_USBPUEN;
 493              		.loc 1 744 0
 494 001c 184B     		ldr	r3, .L22+4
 495 001e 184A     		ldr	r2, .L22+4
 496 0020 1268     		ldr	r2, [r2]
 497 0022 0421     		movs	r1, #4
 498 0024 8A43     		bics	r2, r1
 499 0026 1A60     		str	r2, [r3]
 745:Generated_Source\PSoC4/USBUART.c **** 
 746:Generated_Source\PSoC4/USBUART.c **** #if (CY_PSOC4)
 747:Generated_Source\PSoC4/USBUART.c ****     /* Disable USBFS block. */
 748:Generated_Source\PSoC4/USBUART.c ****     USBUART_POWER_CTRL_REG &= (uint32) ~USBUART_POWER_CTRL_ENABLE;
 500              		.loc 1 748 0
 501 0028 164B     		ldr	r3, .L22+8
 502 002a 164A     		ldr	r2, .L22+8
 503 002c 1268     		ldr	r2, [r2]
 504 002e 5200     		lsls	r2, r2, #1
 505 0030 5208     		lsrs	r2, r2, #1
 506 0032 1A60     		str	r2, [r3]
ARM GAS  C:\Users\essele\AppData\Local\Temp\ccbSjPdV.s 			page 23


 749:Generated_Source\PSoC4/USBUART.c **** #else
 750:Generated_Source\PSoC4/USBUART.c ****     /* Clear power active and standby mode templates. */
 751:Generated_Source\PSoC4/USBUART.c ****     USBUART_PM_ACT_CFG_REG  &= (uint8) ~USBUART_PM_ACT_EN_FSUSB;
 752:Generated_Source\PSoC4/USBUART.c ****     USBUART_PM_STBY_CFG_REG &= (uint8) ~USBUART_PM_STBY_EN_FSUSB;
 753:Generated_Source\PSoC4/USBUART.c **** 
 754:Generated_Source\PSoC4/USBUART.c ****     /* Ensure single-ended disable bits are high (PRT15.INP_DIS[7:6])
 755:Generated_Source\PSoC4/USBUART.c ****      * (input receiver disabled). */
 756:Generated_Source\PSoC4/USBUART.c ****     USBUART_DM_INP_DIS_REG |= (uint8) USBUART_DM_MASK;
 757:Generated_Source\PSoC4/USBUART.c ****     USBUART_DP_INP_DIS_REG |= (uint8) USBUART_DP_MASK;
 758:Generated_Source\PSoC4/USBUART.c **** 
 759:Generated_Source\PSoC4/USBUART.c **** #endif /* (CY_PSOC4) */
 760:Generated_Source\PSoC4/USBUART.c **** 
 761:Generated_Source\PSoC4/USBUART.c ****     CyExitCriticalSection(enableInterrupts);
 507              		.loc 1 761 0
 508 0034 FB1D     		adds	r3, r7, #7
 509 0036 1B78     		ldrb	r3, [r3]
 510 0038 1800     		movs	r0, r3
 511 003a FFF7FEFF 		bl	CyExitCriticalSection
 762:Generated_Source\PSoC4/USBUART.c **** 
 763:Generated_Source\PSoC4/USBUART.c ****     /* Disable component interrupts. */
 764:Generated_Source\PSoC4/USBUART.c **** #if (CY_PSOC4)
 765:Generated_Source\PSoC4/USBUART.c ****     CyIntDisable(USBUART_INTR_HI_VECT_NUM);
 512              		.loc 1 765 0
 513 003e 1E20     		movs	r0, #30
 514 0040 FFF7FEFF 		bl	CyIntDisable
 766:Generated_Source\PSoC4/USBUART.c ****     CyIntDisable(USBUART_INTR_LO_VECT_NUM);
 515              		.loc 1 766 0
 516 0044 1F20     		movs	r0, #31
 517 0046 FFF7FEFF 		bl	CyIntDisable
 767:Generated_Source\PSoC4/USBUART.c ****     CyIntDisable(USBUART_INTR_MED_VECT_NUM);
 518              		.loc 1 767 0
 519 004a 0020     		movs	r0, #0
 520 004c FFF7FEFF 		bl	CyIntDisable
 768:Generated_Source\PSoC4/USBUART.c **** #else
 769:Generated_Source\PSoC4/USBUART.c **** 
 770:Generated_Source\PSoC4/USBUART.c ****     CyIntDisable(USBUART_BUS_RESET_VECT_NUM);
 771:Generated_Source\PSoC4/USBUART.c ****     CyIntDisable(USBUART_EP_0_VECT_NUM);
 772:Generated_Source\PSoC4/USBUART.c **** 
 773:Generated_Source\PSoC4/USBUART.c ****     #if (USBUART_SOF_ISR_ACTIVE)
 774:Generated_Source\PSoC4/USBUART.c ****         CyIntDisable(USBUART_SOF_VECT_NUM);
 775:Generated_Source\PSoC4/USBUART.c ****     #endif /* (USBUART_SOF_ISR_ACTIVE) */
 776:Generated_Source\PSoC4/USBUART.c **** 
 777:Generated_Source\PSoC4/USBUART.c ****     #if (USBUART_EP1_ISR_ACTIVE)
 778:Generated_Source\PSoC4/USBUART.c ****         CyIntDisable(USBUART_EP_1_VECT_NUM);
 779:Generated_Source\PSoC4/USBUART.c ****     #endif /* (USBUART_EP1_ISR_ACTIVE) */
 780:Generated_Source\PSoC4/USBUART.c **** 
 781:Generated_Source\PSoC4/USBUART.c ****     #if (USBUART_EP2_ISR_ACTIVE)
 782:Generated_Source\PSoC4/USBUART.c ****         CyIntDisable(USBUART_EP_2_VECT_NUM);
 783:Generated_Source\PSoC4/USBUART.c ****     #endif /* (USBUART_EP2_ISR_ACTIVE) */
 784:Generated_Source\PSoC4/USBUART.c **** 
 785:Generated_Source\PSoC4/USBUART.c ****     #if (USBUART_EP3_ISR_ACTIVE)
 786:Generated_Source\PSoC4/USBUART.c ****         CyIntDisable(USBUART_EP_3_VECT_NUM);
 787:Generated_Source\PSoC4/USBUART.c ****     #endif /* (USBUART_EP3_ISR_ACTIVE) */
 788:Generated_Source\PSoC4/USBUART.c **** 
 789:Generated_Source\PSoC4/USBUART.c ****     #if (USBUART_EP4_ISR_ACTIVE)
 790:Generated_Source\PSoC4/USBUART.c ****         CyIntDisable(USBUART_EP_4_VECT_NUM);
 791:Generated_Source\PSoC4/USBUART.c ****     #endif /* (USBUART_EP4_ISR_ACTIVE) */
ARM GAS  C:\Users\essele\AppData\Local\Temp\ccbSjPdV.s 			page 24


 792:Generated_Source\PSoC4/USBUART.c **** 
 793:Generated_Source\PSoC4/USBUART.c ****     #if (USBUART_EP5_ISR_ACTIVE)
 794:Generated_Source\PSoC4/USBUART.c ****         CyIntDisable(USBUART_EP_5_VECT_NUM);
 795:Generated_Source\PSoC4/USBUART.c ****     #endif /* (USBUART_EP5_ISR_ACTIVE) */
 796:Generated_Source\PSoC4/USBUART.c **** 
 797:Generated_Source\PSoC4/USBUART.c ****     #if (USBUART_EP6_ISR_ACTIVE)
 798:Generated_Source\PSoC4/USBUART.c ****         CyIntDisable(USBUART_EP_6_VECT_NUM);
 799:Generated_Source\PSoC4/USBUART.c ****     #endif /* USBUART_EP6_ISR_REMOVE */
 800:Generated_Source\PSoC4/USBUART.c **** 
 801:Generated_Source\PSoC4/USBUART.c ****     #if (USBUART_EP7_ISR_ACTIVE)
 802:Generated_Source\PSoC4/USBUART.c ****         CyIntDisable(USBUART_EP_7_VECT_NUM);
 803:Generated_Source\PSoC4/USBUART.c ****     #endif /* (USBUART_EP7_ISR_ACTIVE) */
 804:Generated_Source\PSoC4/USBUART.c **** 
 805:Generated_Source\PSoC4/USBUART.c ****     #if (USBUART_EP8_ISR_ACTIVE)
 806:Generated_Source\PSoC4/USBUART.c ****         CyIntDisable(USBUART_EP_8_VECT_NUM);
 807:Generated_Source\PSoC4/USBUART.c ****     #endif /* (USBUART_EP8_ISR_ACTIVE) */
 808:Generated_Source\PSoC4/USBUART.c **** 
 809:Generated_Source\PSoC4/USBUART.c ****     #if (USBUART_DP_ISR_ACTIVE)
 810:Generated_Source\PSoC4/USBUART.c ****         /* Clear active mode Dp interrupt source history. */
 811:Generated_Source\PSoC4/USBUART.c ****         (void) USBUART_Dp_ClearInterrupt();
 812:Generated_Source\PSoC4/USBUART.c ****         CyIntClearPending(USBUART_DP_INTC_VECT_NUM);
 813:Generated_Source\PSoC4/USBUART.c ****     #endif /* (USBUART_DP_ISR_ACTIVE). */
 814:Generated_Source\PSoC4/USBUART.c **** 
 815:Generated_Source\PSoC4/USBUART.c **** #endif /* (CY_PSOC4) */
 816:Generated_Source\PSoC4/USBUART.c **** 
 817:Generated_Source\PSoC4/USBUART.c ****     /* Reset component internal variables. */
 818:Generated_Source\PSoC4/USBUART.c ****     USBUART_configurationChanged = 0u;
 521              		.loc 1 818 0
 522 0050 0D4B     		ldr	r3, .L22+12
 523 0052 0022     		movs	r2, #0
 524 0054 1A70     		strb	r2, [r3]
 819:Generated_Source\PSoC4/USBUART.c ****     USBUART_configuration   = 0u;
 525              		.loc 1 819 0
 526 0056 0D4B     		ldr	r3, .L22+16
 527 0058 0022     		movs	r2, #0
 528 005a 1A70     		strb	r2, [r3]
 820:Generated_Source\PSoC4/USBUART.c ****     USBUART_interfaceNumber = 0u;
 529              		.loc 1 820 0
 530 005c 0C4B     		ldr	r3, .L22+20
 531 005e 0022     		movs	r2, #0
 532 0060 1A70     		strb	r2, [r3]
 821:Generated_Source\PSoC4/USBUART.c ****     USBUART_deviceAddress   = 0u;
 533              		.loc 1 821 0
 534 0062 0C4B     		ldr	r3, .L22+24
 535 0064 0022     		movs	r2, #0
 536 0066 1A70     		strb	r2, [r3]
 822:Generated_Source\PSoC4/USBUART.c ****     USBUART_deviceStatus    = 0u;
 537              		.loc 1 822 0
 538 0068 0B4B     		ldr	r3, .L22+28
 539 006a 0022     		movs	r2, #0
 540 006c 1A70     		strb	r2, [r3]
 823:Generated_Source\PSoC4/USBUART.c **** 
 824:Generated_Source\PSoC4/USBUART.c ****     /* It is mandatory for correct device startup. */
 825:Generated_Source\PSoC4/USBUART.c ****     USBUART_initVar = 0u;
 541              		.loc 1 825 0
 542 006e 0B4B     		ldr	r3, .L22+32
 543 0070 0022     		movs	r2, #0
ARM GAS  C:\Users\essele\AppData\Local\Temp\ccbSjPdV.s 			page 25


 544 0072 1A70     		strb	r2, [r3]
 826:Generated_Source\PSoC4/USBUART.c **** }
 545              		.loc 1 826 0
 546 0074 C046     		nop
 547 0076 BD46     		mov	sp, r7
 548 0078 03B0     		add	sp, sp, #12
 549              		@ sp needed
 550 007a 90BD     		pop	{r4, r7, pc}
 551              	.L23:
 552              		.align	2
 553              	.L22:
 554 007c 20002C40 		.word	1076625440
 555 0080 48002C40 		.word	1076625480
 556 0084 00202C40 		.word	1076633600
 557 0088 00000000 		.word	USBUART_configurationChanged
 558 008c 00000000 		.word	USBUART_configuration
 559 0090 00000000 		.word	USBUART_interfaceNumber
 560 0094 00000000 		.word	USBUART_deviceAddress
 561 0098 00000000 		.word	USBUART_deviceStatus
 562 009c 00000000 		.word	USBUART_initVar
 563              		.cfi_endproc
 564              	.LFE5:
 565              		.size	USBUART_Stop, .-USBUART_Stop
 566              		.section	.text.USBUART_CheckActivity,"ax",%progbits
 567              		.align	2
 568              		.global	USBUART_CheckActivity
 569              		.code	16
 570              		.thumb_func
 571              		.type	USBUART_CheckActivity, %function
 572              	USBUART_CheckActivity:
 573              	.LFB6:
 827:Generated_Source\PSoC4/USBUART.c **** 
 828:Generated_Source\PSoC4/USBUART.c **** 
 829:Generated_Source\PSoC4/USBUART.c **** /*******************************************************************************
 830:Generated_Source\PSoC4/USBUART.c **** * Function Name: USBUART_CheckActivity
 831:Generated_Source\PSoC4/USBUART.c **** ****************************************************************************//**
 832:Generated_Source\PSoC4/USBUART.c **** *
 833:Generated_Source\PSoC4/USBUART.c **** *  This function returns the activity status of the bus. It clears the hardware
 834:Generated_Source\PSoC4/USBUART.c **** *  status to provide updated status on the next call of this function. It
 835:Generated_Source\PSoC4/USBUART.c **** *  provides a way to determine whether any USB bus activity occurred. The
 836:Generated_Source\PSoC4/USBUART.c **** *  application should use this function to determine if the USB suspend
 837:Generated_Source\PSoC4/USBUART.c **** *  conditions are met.
 838:Generated_Source\PSoC4/USBUART.c **** *
 839:Generated_Source\PSoC4/USBUART.c **** *
 840:Generated_Source\PSoC4/USBUART.c **** * \return
 841:Generated_Source\PSoC4/USBUART.c **** *  cystatus: Status of the bus since the last call of the function.
 842:Generated_Source\PSoC4/USBUART.c **** *  Return Value |   Description
 843:Generated_Source\PSoC4/USBUART.c **** *  -------------|---------------------------------------------------------------
 844:Generated_Source\PSoC4/USBUART.c **** *  1            |Bus activity was detected since the last call to this function
 845:Generated_Source\PSoC4/USBUART.c **** *  0            |Bus activity was not detected since the last call to this function
 846:Generated_Source\PSoC4/USBUART.c **** *
 847:Generated_Source\PSoC4/USBUART.c **** *
 848:Generated_Source\PSoC4/USBUART.c **** *******************************************************************************/
 849:Generated_Source\PSoC4/USBUART.c **** uint8 USBUART_CheckActivity(void) 
 850:Generated_Source\PSoC4/USBUART.c **** {
 574              		.loc 1 850 0
 575              		.cfi_startproc
ARM GAS  C:\Users\essele\AppData\Local\Temp\ccbSjPdV.s 			page 26


 576              		@ args = 0, pretend = 0, frame = 8
 577              		@ frame_needed = 1, uses_anonymous_args = 0
 578 0000 80B5     		push	{r7, lr}
 579              		.cfi_def_cfa_offset 8
 580              		.cfi_offset 7, -8
 581              		.cfi_offset 14, -4
 582 0002 82B0     		sub	sp, sp, #8
 583              		.cfi_def_cfa_offset 16
 584 0004 00AF     		add	r7, sp, #0
 585              		.cfi_def_cfa_register 7
 851:Generated_Source\PSoC4/USBUART.c ****     uint32 cr1Reg = USBUART_CR1_REG;
 586              		.loc 1 851 0
 587 0006 094B     		ldr	r3, .L28
 588 0008 1B68     		ldr	r3, [r3]
 589 000a 7B60     		str	r3, [r7, #4]
 852:Generated_Source\PSoC4/USBUART.c **** 
 853:Generated_Source\PSoC4/USBUART.c ****     /* Clear bus activity. */
 854:Generated_Source\PSoC4/USBUART.c ****     USBUART_CR1_REG = (cr1Reg & (uint32) ~USBUART_CR1_BUS_ACTIVITY);
 590              		.loc 1 854 0
 591 000c 074B     		ldr	r3, .L28
 592 000e 7A68     		ldr	r2, [r7, #4]
 593 0010 0421     		movs	r1, #4
 594 0012 8A43     		bics	r2, r1
 595 0014 1A60     		str	r2, [r3]
 855:Generated_Source\PSoC4/USBUART.c **** 
 856:Generated_Source\PSoC4/USBUART.c ****     /* Get bus activity. */
 857:Generated_Source\PSoC4/USBUART.c ****     return ((0u != (cr1Reg & USBUART_CR1_BUS_ACTIVITY)) ? (1u) : (0u));
 596              		.loc 1 857 0
 597 0016 7B68     		ldr	r3, [r7, #4]
 598 0018 0422     		movs	r2, #4
 599 001a 1340     		ands	r3, r2
 600 001c 01D0     		beq	.L25
 601              		.loc 1 857 0 is_stmt 0 discriminator 1
 602 001e 0123     		movs	r3, #1
 603 0020 00E0     		b	.L26
 604              	.L25:
 605              		.loc 1 857 0 discriminator 2
 606 0022 0023     		movs	r3, #0
 607              	.L26:
 858:Generated_Source\PSoC4/USBUART.c **** }
 608              		.loc 1 858 0 is_stmt 1 discriminator 4
 609 0024 1800     		movs	r0, r3
 610 0026 BD46     		mov	sp, r7
 611 0028 02B0     		add	sp, sp, #8
 612              		@ sp needed
 613 002a 80BD     		pop	{r7, pc}
 614              	.L29:
 615              		.align	2
 616              	.L28:
 617 002c 24002C40 		.word	1076625444
 618              		.cfi_endproc
 619              	.LFE6:
 620              		.size	USBUART_CheckActivity, .-USBUART_CheckActivity
 621              		.section	.text.USBUART_GetConfiguration,"ax",%progbits
 622              		.align	2
 623              		.global	USBUART_GetConfiguration
 624              		.code	16
ARM GAS  C:\Users\essele\AppData\Local\Temp\ccbSjPdV.s 			page 27


 625              		.thumb_func
 626              		.type	USBUART_GetConfiguration, %function
 627              	USBUART_GetConfiguration:
 628              	.LFB7:
 859:Generated_Source\PSoC4/USBUART.c **** 
 860:Generated_Source\PSoC4/USBUART.c **** 
 861:Generated_Source\PSoC4/USBUART.c **** /*******************************************************************************
 862:Generated_Source\PSoC4/USBUART.c **** * Function Name: USBUART_GetConfiguration
 863:Generated_Source\PSoC4/USBUART.c **** ****************************************************************************//**
 864:Generated_Source\PSoC4/USBUART.c **** *
 865:Generated_Source\PSoC4/USBUART.c **** *  This function gets the current configuration of the USB device.
 866:Generated_Source\PSoC4/USBUART.c **** *
 867:Generated_Source\PSoC4/USBUART.c **** * \return
 868:Generated_Source\PSoC4/USBUART.c **** *  Returns the currently assigned configuration. Returns 0 if the device
 869:Generated_Source\PSoC4/USBUART.c **** *  is not configured
 870:Generated_Source\PSoC4/USBUART.c **** *
 871:Generated_Source\PSoC4/USBUART.c **** *******************************************************************************/
 872:Generated_Source\PSoC4/USBUART.c **** uint8 USBUART_GetConfiguration(void) 
 873:Generated_Source\PSoC4/USBUART.c **** {
 629              		.loc 1 873 0
 630              		.cfi_startproc
 631              		@ args = 0, pretend = 0, frame = 0
 632              		@ frame_needed = 1, uses_anonymous_args = 0
 633 0000 80B5     		push	{r7, lr}
 634              		.cfi_def_cfa_offset 8
 635              		.cfi_offset 7, -8
 636              		.cfi_offset 14, -4
 637 0002 00AF     		add	r7, sp, #0
 638              		.cfi_def_cfa_register 7
 874:Generated_Source\PSoC4/USBUART.c ****     return (USBUART_configuration);
 639              		.loc 1 874 0
 640 0004 024B     		ldr	r3, .L32
 641 0006 1B78     		ldrb	r3, [r3]
 642 0008 DBB2     		uxtb	r3, r3
 875:Generated_Source\PSoC4/USBUART.c **** }
 643              		.loc 1 875 0
 644 000a 1800     		movs	r0, r3
 645 000c BD46     		mov	sp, r7
 646              		@ sp needed
 647 000e 80BD     		pop	{r7, pc}
 648              	.L33:
 649              		.align	2
 650              	.L32:
 651 0010 00000000 		.word	USBUART_configuration
 652              		.cfi_endproc
 653              	.LFE7:
 654              		.size	USBUART_GetConfiguration, .-USBUART_GetConfiguration
 655              		.section	.text.USBUART_IsConfigurationChanged,"ax",%progbits
 656              		.align	2
 657              		.global	USBUART_IsConfigurationChanged
 658              		.code	16
 659              		.thumb_func
 660              		.type	USBUART_IsConfigurationChanged, %function
 661              	USBUART_IsConfigurationChanged:
 662              	.LFB8:
 876:Generated_Source\PSoC4/USBUART.c **** 
 877:Generated_Source\PSoC4/USBUART.c **** 
ARM GAS  C:\Users\essele\AppData\Local\Temp\ccbSjPdV.s 			page 28


 878:Generated_Source\PSoC4/USBUART.c **** /*******************************************************************************
 879:Generated_Source\PSoC4/USBUART.c **** * Function Name: USBUART_IsConfigurationChanged
 880:Generated_Source\PSoC4/USBUART.c **** ****************************************************************************//**
 881:Generated_Source\PSoC4/USBUART.c **** *
 882:Generated_Source\PSoC4/USBUART.c **** *  This function returns the clear-on-read configuration state.  It is useful
 883:Generated_Source\PSoC4/USBUART.c **** *  when the host sends double SET_CONFIGURATION request with the same 
 884:Generated_Source\PSoC4/USBUART.c **** *  configuration number or changes alternate settings of the interface. 
 885:Generated_Source\PSoC4/USBUART.c **** *  After configuration has been changed the OUT endpoints must be enabled and IN 
 886:Generated_Source\PSoC4/USBUART.c **** *  endpoint must be loaded with data to start communication with the host.
 887:Generated_Source\PSoC4/USBUART.c **** *
 888:Generated_Source\PSoC4/USBUART.c **** * \return
 889:Generated_Source\PSoC4/USBUART.c **** *  None-zero value when new configuration has been changed, otherwise zero is
 890:Generated_Source\PSoC4/USBUART.c **** *  returned.
 891:Generated_Source\PSoC4/USBUART.c **** *
 892:Generated_Source\PSoC4/USBUART.c **** * \globalvars
 893:Generated_Source\PSoC4/USBUART.c **** *
 894:Generated_Source\PSoC4/USBUART.c **** *  \ref USBUART_configurationChanged - This variable is set to 1 after
 895:Generated_Source\PSoC4/USBUART.c **** *   a SET_CONFIGURATION request and cleared in this function.
 896:Generated_Source\PSoC4/USBUART.c **** *
 897:Generated_Source\PSoC4/USBUART.c **** *******************************************************************************/
 898:Generated_Source\PSoC4/USBUART.c **** uint8 USBUART_IsConfigurationChanged(void) 
 899:Generated_Source\PSoC4/USBUART.c **** {
 663              		.loc 1 899 0
 664              		.cfi_startproc
 665              		@ args = 0, pretend = 0, frame = 8
 666              		@ frame_needed = 1, uses_anonymous_args = 0
 667 0000 80B5     		push	{r7, lr}
 668              		.cfi_def_cfa_offset 8
 669              		.cfi_offset 7, -8
 670              		.cfi_offset 14, -4
 671 0002 82B0     		sub	sp, sp, #8
 672              		.cfi_def_cfa_offset 16
 673 0004 00AF     		add	r7, sp, #0
 674              		.cfi_def_cfa_register 7
 900:Generated_Source\PSoC4/USBUART.c ****     uint8 res = 0u;
 675              		.loc 1 900 0
 676 0006 FB1D     		adds	r3, r7, #7
 677 0008 0022     		movs	r2, #0
 678 000a 1A70     		strb	r2, [r3]
 901:Generated_Source\PSoC4/USBUART.c **** 
 902:Generated_Source\PSoC4/USBUART.c ****     if (USBUART_configurationChanged != 0u)
 679              		.loc 1 902 0
 680 000c 084B     		ldr	r3, .L37
 681 000e 1B78     		ldrb	r3, [r3]
 682 0010 DBB2     		uxtb	r3, r3
 683 0012 002B     		cmp	r3, #0
 684 0014 06D0     		beq	.L35
 903:Generated_Source\PSoC4/USBUART.c ****     {
 904:Generated_Source\PSoC4/USBUART.c ****         res = USBUART_configurationChanged;
 685              		.loc 1 904 0
 686 0016 FB1D     		adds	r3, r7, #7
 687 0018 054A     		ldr	r2, .L37
 688 001a 1278     		ldrb	r2, [r2]
 689 001c 1A70     		strb	r2, [r3]
 905:Generated_Source\PSoC4/USBUART.c ****         USBUART_configurationChanged = 0u;
 690              		.loc 1 905 0
 691 001e 044B     		ldr	r3, .L37
ARM GAS  C:\Users\essele\AppData\Local\Temp\ccbSjPdV.s 			page 29


 692 0020 0022     		movs	r2, #0
 693 0022 1A70     		strb	r2, [r3]
 694              	.L35:
 906:Generated_Source\PSoC4/USBUART.c ****     }
 907:Generated_Source\PSoC4/USBUART.c **** 
 908:Generated_Source\PSoC4/USBUART.c ****     return (res);
 695              		.loc 1 908 0
 696 0024 FB1D     		adds	r3, r7, #7
 697 0026 1B78     		ldrb	r3, [r3]
 909:Generated_Source\PSoC4/USBUART.c **** }
 698              		.loc 1 909 0
 699 0028 1800     		movs	r0, r3
 700 002a BD46     		mov	sp, r7
 701 002c 02B0     		add	sp, sp, #8
 702              		@ sp needed
 703 002e 80BD     		pop	{r7, pc}
 704              	.L38:
 705              		.align	2
 706              	.L37:
 707 0030 00000000 		.word	USBUART_configurationChanged
 708              		.cfi_endproc
 709              	.LFE8:
 710              		.size	USBUART_IsConfigurationChanged, .-USBUART_IsConfigurationChanged
 711              		.section	.text.USBUART_GetInterfaceSetting,"ax",%progbits
 712              		.align	2
 713              		.global	USBUART_GetInterfaceSetting
 714              		.code	16
 715              		.thumb_func
 716              		.type	USBUART_GetInterfaceSetting, %function
 717              	USBUART_GetInterfaceSetting:
 718              	.LFB9:
 910:Generated_Source\PSoC4/USBUART.c **** 
 911:Generated_Source\PSoC4/USBUART.c **** 
 912:Generated_Source\PSoC4/USBUART.c **** /*******************************************************************************
 913:Generated_Source\PSoC4/USBUART.c **** * Function Name: USBUART_GetInterfaceSetting
 914:Generated_Source\PSoC4/USBUART.c **** ****************************************************************************//**
 915:Generated_Source\PSoC4/USBUART.c **** *
 916:Generated_Source\PSoC4/USBUART.c **** *  This function gets the current alternate setting for the specified interface.
 917:Generated_Source\PSoC4/USBUART.c **** *  It is useful to identify which alternate settings are active in the specified 
 918:Generated_Source\PSoC4/USBUART.c **** *  interface.
 919:Generated_Source\PSoC4/USBUART.c **** *
 920:Generated_Source\PSoC4/USBUART.c **** *  \param
 921:Generated_Source\PSoC4/USBUART.c **** *  interfaceNumber interface number
 922:Generated_Source\PSoC4/USBUART.c **** *
 923:Generated_Source\PSoC4/USBUART.c **** * \return
 924:Generated_Source\PSoC4/USBUART.c **** *  Returns the current alternate setting for the specified interface.
 925:Generated_Source\PSoC4/USBUART.c **** *
 926:Generated_Source\PSoC4/USBUART.c **** *******************************************************************************/
 927:Generated_Source\PSoC4/USBUART.c **** uint8  USBUART_GetInterfaceSetting(uint8 interfaceNumber)
 928:Generated_Source\PSoC4/USBUART.c ****                                                     
 929:Generated_Source\PSoC4/USBUART.c **** {
 719              		.loc 1 929 0
 720              		.cfi_startproc
 721              		@ args = 0, pretend = 0, frame = 8
 722              		@ frame_needed = 1, uses_anonymous_args = 0
 723 0000 80B5     		push	{r7, lr}
 724              		.cfi_def_cfa_offset 8
ARM GAS  C:\Users\essele\AppData\Local\Temp\ccbSjPdV.s 			page 30


 725              		.cfi_offset 7, -8
 726              		.cfi_offset 14, -4
 727 0002 82B0     		sub	sp, sp, #8
 728              		.cfi_def_cfa_offset 16
 729 0004 00AF     		add	r7, sp, #0
 730              		.cfi_def_cfa_register 7
 731 0006 0200     		movs	r2, r0
 732 0008 FB1D     		adds	r3, r7, #7
 733 000a 1A70     		strb	r2, [r3]
 930:Generated_Source\PSoC4/USBUART.c ****     return (USBUART_interfaceSetting[interfaceNumber]);
 734              		.loc 1 930 0
 735 000c FB1D     		adds	r3, r7, #7
 736 000e 1B78     		ldrb	r3, [r3]
 737 0010 034A     		ldr	r2, .L41
 738 0012 D35C     		ldrb	r3, [r2, r3]
 739 0014 DBB2     		uxtb	r3, r3
 931:Generated_Source\PSoC4/USBUART.c **** }
 740              		.loc 1 931 0
 741 0016 1800     		movs	r0, r3
 742 0018 BD46     		mov	sp, r7
 743 001a 02B0     		add	sp, sp, #8
 744              		@ sp needed
 745 001c 80BD     		pop	{r7, pc}
 746              	.L42:
 747 001e C046     		.align	2
 748              	.L41:
 749 0020 00000000 		.word	USBUART_interfaceSetting
 750              		.cfi_endproc
 751              	.LFE9:
 752              		.size	USBUART_GetInterfaceSetting, .-USBUART_GetInterfaceSetting
 753              		.section	.text.USBUART_GetEPState,"ax",%progbits
 754              		.align	2
 755              		.global	USBUART_GetEPState
 756              		.code	16
 757              		.thumb_func
 758              		.type	USBUART_GetEPState, %function
 759              	USBUART_GetEPState:
 760              	.LFB10:
 932:Generated_Source\PSoC4/USBUART.c **** 
 933:Generated_Source\PSoC4/USBUART.c **** 
 934:Generated_Source\PSoC4/USBUART.c **** /*******************************************************************************
 935:Generated_Source\PSoC4/USBUART.c **** * Function Name: USBUART_GetEPState
 936:Generated_Source\PSoC4/USBUART.c **** ****************************************************************************//**
 937:Generated_Source\PSoC4/USBUART.c **** *
 938:Generated_Source\PSoC4/USBUART.c **** *  This function returns the state of the requested endpoint.
 939:Generated_Source\PSoC4/USBUART.c **** *
 940:Generated_Source\PSoC4/USBUART.c **** * \param epNumber Data endpoint number
 941:Generated_Source\PSoC4/USBUART.c **** *
 942:Generated_Source\PSoC4/USBUART.c **** * \return
 943:Generated_Source\PSoC4/USBUART.c **** *  Returns the current state of the specified USBFS endpoint. Symbolic names and
 944:Generated_Source\PSoC4/USBUART.c **** *  their associated values are given in the following table. Use these constants
 945:Generated_Source\PSoC4/USBUART.c **** *  whenever you write code to change the state of the endpoints, such as ISR
 946:Generated_Source\PSoC4/USBUART.c **** *  code, to handle data sent or received.
 947:Generated_Source\PSoC4/USBUART.c **** *
 948:Generated_Source\PSoC4/USBUART.c **** *  Return Value           | Description
 949:Generated_Source\PSoC4/USBUART.c **** *  -----------------------|-----------------------------------------------------
 950:Generated_Source\PSoC4/USBUART.c **** *  USBFS_NO_EVENT_PENDING |The endpoint is awaiting SIE action
ARM GAS  C:\Users\essele\AppData\Local\Temp\ccbSjPdV.s 			page 31


 951:Generated_Source\PSoC4/USBUART.c **** *  USBFS_EVENT_PENDING    |The endpoint is awaiting CPU action
 952:Generated_Source\PSoC4/USBUART.c **** *  USBFS_NO_EVENT_ALLOWED |The endpoint is locked from access
 953:Generated_Source\PSoC4/USBUART.c **** *  USBFS_IN_BUFFER_FULL   |The IN endpoint is loaded and the mode is set to ACK IN
 954:Generated_Source\PSoC4/USBUART.c **** *  USBFS_IN_BUFFER_EMPTY  |An IN transaction occurred and more data can be loaded
 955:Generated_Source\PSoC4/USBUART.c **** *  USBFS_OUT_BUFFER_EMPTY |The OUT endpoint is set to ACK OUT and is waiting for data
 956:Generated_Source\PSoC4/USBUART.c **** *  USBFS_OUT_BUFFER_FULL  |An OUT transaction has occurred and data can be read
 957:Generated_Source\PSoC4/USBUART.c **** *
 958:Generated_Source\PSoC4/USBUART.c **** *******************************************************************************/
 959:Generated_Source\PSoC4/USBUART.c **** uint8 USBUART_GetEPState(uint8 epNumber) 
 960:Generated_Source\PSoC4/USBUART.c **** {
 761              		.loc 1 960 0
 762              		.cfi_startproc
 763              		@ args = 0, pretend = 0, frame = 8
 764              		@ frame_needed = 1, uses_anonymous_args = 0
 765 0000 80B5     		push	{r7, lr}
 766              		.cfi_def_cfa_offset 8
 767              		.cfi_offset 7, -8
 768              		.cfi_offset 14, -4
 769 0002 82B0     		sub	sp, sp, #8
 770              		.cfi_def_cfa_offset 16
 771 0004 00AF     		add	r7, sp, #0
 772              		.cfi_def_cfa_register 7
 773 0006 0200     		movs	r2, r0
 774 0008 FB1D     		adds	r3, r7, #7
 775 000a 1A70     		strb	r2, [r3]
 961:Generated_Source\PSoC4/USBUART.c ****     return (USBUART_EP[epNumber].apiEpState);
 776              		.loc 1 961 0
 777 000c FB1D     		adds	r3, r7, #7
 778 000e 1A78     		ldrb	r2, [r3]
 779 0010 0649     		ldr	r1, .L45
 780 0012 1300     		movs	r3, r2
 781 0014 5B00     		lsls	r3, r3, #1
 782 0016 9B18     		adds	r3, r3, r2
 783 0018 9B00     		lsls	r3, r3, #2
 784 001a CB18     		adds	r3, r1, r3
 785 001c 0133     		adds	r3, r3, #1
 786 001e 1B78     		ldrb	r3, [r3]
 787 0020 DBB2     		uxtb	r3, r3
 962:Generated_Source\PSoC4/USBUART.c **** }
 788              		.loc 1 962 0
 789 0022 1800     		movs	r0, r3
 790 0024 BD46     		mov	sp, r7
 791 0026 02B0     		add	sp, sp, #8
 792              		@ sp needed
 793 0028 80BD     		pop	{r7, pc}
 794              	.L46:
 795 002a C046     		.align	2
 796              	.L45:
 797 002c 00000000 		.word	USBUART_EP
 798              		.cfi_endproc
 799              	.LFE10:
 800              		.size	USBUART_GetEPState, .-USBUART_GetEPState
 801              		.section	.text.USBUART_GetEPCount,"ax",%progbits
 802              		.align	2
 803              		.global	USBUART_GetEPCount
 804              		.code	16
 805              		.thumb_func
ARM GAS  C:\Users\essele\AppData\Local\Temp\ccbSjPdV.s 			page 32


 806              		.type	USBUART_GetEPCount, %function
 807              	USBUART_GetEPCount:
 808              	.LFB11:
 963:Generated_Source\PSoC4/USBUART.c **** 
 964:Generated_Source\PSoC4/USBUART.c **** 
 965:Generated_Source\PSoC4/USBUART.c **** /*******************************************************************************
 966:Generated_Source\PSoC4/USBUART.c **** * Function Name: USBUART_GetEPCount
 967:Generated_Source\PSoC4/USBUART.c **** ****************************************************************************//**
 968:Generated_Source\PSoC4/USBUART.c **** *
 969:Generated_Source\PSoC4/USBUART.c **** *  This function supports Data Endpoints only(EP1-EP8).
 970:Generated_Source\PSoC4/USBUART.c **** *  Returns the transfer count for the requested endpoint.  The value from
 971:Generated_Source\PSoC4/USBUART.c **** *  the count registers includes 2 counts for the two byte checksum of the
 972:Generated_Source\PSoC4/USBUART.c **** *  packet.  This function subtracts the two counts.
 973:Generated_Source\PSoC4/USBUART.c **** *
 974:Generated_Source\PSoC4/USBUART.c **** *  \param epNumber Data Endpoint Number.
 975:Generated_Source\PSoC4/USBUART.c **** *                   Valid values are between 1 and 8.
 976:Generated_Source\PSoC4/USBUART.c **** *
 977:Generated_Source\PSoC4/USBUART.c **** * \return
 978:Generated_Source\PSoC4/USBUART.c **** *  Returns the current byte count from the specified endpoint or 0 for an
 979:Generated_Source\PSoC4/USBUART.c **** *  invalid endpoint.
 980:Generated_Source\PSoC4/USBUART.c **** *
 981:Generated_Source\PSoC4/USBUART.c **** *******************************************************************************/
 982:Generated_Source\PSoC4/USBUART.c **** uint16 USBUART_GetEPCount(uint8 epNumber) 
 983:Generated_Source\PSoC4/USBUART.c **** {
 809              		.loc 1 983 0
 810              		.cfi_startproc
 811              		@ args = 0, pretend = 0, frame = 16
 812              		@ frame_needed = 1, uses_anonymous_args = 0
 813 0000 80B5     		push	{r7, lr}
 814              		.cfi_def_cfa_offset 8
 815              		.cfi_offset 7, -8
 816              		.cfi_offset 14, -4
 817 0002 84B0     		sub	sp, sp, #16
 818              		.cfi_def_cfa_offset 24
 819 0004 00AF     		add	r7, sp, #0
 820              		.cfi_def_cfa_register 7
 821 0006 0200     		movs	r2, r0
 822 0008 FB1D     		adds	r3, r7, #7
 823 000a 1A70     		strb	r2, [r3]
 984:Generated_Source\PSoC4/USBUART.c ****     uint16 cntr = 0u;
 824              		.loc 1 984 0
 825 000c 0E23     		movs	r3, #14
 826 000e FB18     		adds	r3, r7, r3
 827 0010 0022     		movs	r2, #0
 828 0012 1A80     		strh	r2, [r3]
 985:Generated_Source\PSoC4/USBUART.c **** 
 986:Generated_Source\PSoC4/USBUART.c ****     if ((epNumber > USBUART_EP0) && (epNumber < USBUART_MAX_EP))
 829              		.loc 1 986 0
 830 0014 FB1D     		adds	r3, r7, #7
 831 0016 1B78     		ldrb	r3, [r3]
 832 0018 002B     		cmp	r3, #0
 833 001a 28D0     		beq	.L48
 834              		.loc 1 986 0 is_stmt 0 discriminator 1
 835 001c FB1D     		adds	r3, r7, #7
 836 001e 1B78     		ldrb	r3, [r3]
 837 0020 082B     		cmp	r3, #8
 838 0022 24D8     		bhi	.L48
ARM GAS  C:\Users\essele\AppData\Local\Temp\ccbSjPdV.s 			page 33


 987:Generated_Source\PSoC4/USBUART.c ****     {
 988:Generated_Source\PSoC4/USBUART.c ****         /* Get 11-bits EP counter where epCnt0 - 3 bits MSB and epCnt1 - 8 bits LSB. */
 989:Generated_Source\PSoC4/USBUART.c ****         cntr  = ((uint16) USBUART_SIE_EP_BASE.sieEp[epNumber].epCnt0) & USBUART_EPX_CNT0_MASK;
 839              		.loc 1 989 0 is_stmt 1
 840 0024 154A     		ldr	r2, .L50
 841 0026 FB1D     		adds	r3, r7, #7
 842 0028 1B78     		ldrb	r3, [r3]
 843 002a 9B01     		lsls	r3, r3, #6
 844 002c 9B58     		ldr	r3, [r3, r2]
 845 002e 9AB2     		uxth	r2, r3
 846 0030 0E23     		movs	r3, #14
 847 0032 FB18     		adds	r3, r7, r3
 848 0034 0F21     		movs	r1, #15
 849 0036 0A40     		ands	r2, r1
 850 0038 1A80     		strh	r2, [r3]
 990:Generated_Source\PSoC4/USBUART.c ****         cntr  = ((uint16) (cntr << 8u)) | ((uint16) USBUART_SIE_EP_BASE.sieEp[epNumber].epCnt1);
 851              		.loc 1 990 0
 852 003a 0E23     		movs	r3, #14
 853 003c FB18     		adds	r3, r7, r3
 854 003e 1B88     		ldrh	r3, [r3]
 855 0040 1B02     		lsls	r3, r3, #8
 856 0042 9BB2     		uxth	r3, r3
 857 0044 1AB2     		sxth	r2, r3
 858 0046 0D49     		ldr	r1, .L50
 859 0048 FB1D     		adds	r3, r7, #7
 860 004a 1B78     		ldrb	r3, [r3]
 861 004c 9B01     		lsls	r3, r3, #6
 862 004e CB18     		adds	r3, r1, r3
 863 0050 0433     		adds	r3, r3, #4
 864 0052 1B68     		ldr	r3, [r3]
 865 0054 1BB2     		sxth	r3, r3
 866 0056 1343     		orrs	r3, r2
 867 0058 1AB2     		sxth	r2, r3
 868 005a 0E23     		movs	r3, #14
 869 005c FB18     		adds	r3, r7, r3
 870 005e 1A80     		strh	r2, [r3]
 991:Generated_Source\PSoC4/USBUART.c ****         cntr -= USBUART_EPX_CNTX_CRC_COUNT;
 871              		.loc 1 991 0
 872 0060 0E23     		movs	r3, #14
 873 0062 FB18     		adds	r3, r7, r3
 874 0064 0E22     		movs	r2, #14
 875 0066 BA18     		adds	r2, r7, r2
 876 0068 1288     		ldrh	r2, [r2]
 877 006a 023A     		subs	r2, r2, #2
 878 006c 1A80     		strh	r2, [r3]
 879              	.L48:
 992:Generated_Source\PSoC4/USBUART.c ****     }
 993:Generated_Source\PSoC4/USBUART.c **** 
 994:Generated_Source\PSoC4/USBUART.c ****     return (cntr);
 880              		.loc 1 994 0
 881 006e 0E23     		movs	r3, #14
 882 0070 FB18     		adds	r3, r7, r3
 883 0072 1B88     		ldrh	r3, [r3]
 995:Generated_Source\PSoC4/USBUART.c **** }
 884              		.loc 1 995 0
 885 0074 1800     		movs	r0, r3
 886 0076 BD46     		mov	sp, r7
ARM GAS  C:\Users\essele\AppData\Local\Temp\ccbSjPdV.s 			page 34


 887 0078 04B0     		add	sp, sp, #16
 888              		@ sp needed
 889 007a 80BD     		pop	{r7, pc}
 890              	.L51:
 891              		.align	2
 892              	.L50:
 893 007c F0FF2B40 		.word	1076625392
 894              		.cfi_endproc
 895              	.LFE11:
 896              		.size	USBUART_GetEPCount, .-USBUART_GetEPCount
 897              		.section	.text.USBUART_LoadInEP,"ax",%progbits
 898              		.align	2
 899              		.global	USBUART_LoadInEP
 900              		.code	16
 901              		.thumb_func
 902              		.type	USBUART_LoadInEP, %function
 903              	USBUART_LoadInEP:
 904              	.LFB12:
 996:Generated_Source\PSoC4/USBUART.c **** 
 997:Generated_Source\PSoC4/USBUART.c **** 
 998:Generated_Source\PSoC4/USBUART.c **** #if (USBUART_EP_MANAGEMENT_DMA)
 999:Generated_Source\PSoC4/USBUART.c **** #if (CY_PSOC4)
1000:Generated_Source\PSoC4/USBUART.c ****     /*******************************************************************************
1001:Generated_Source\PSoC4/USBUART.c ****     * Function Name: USBUART_InitEpDma
1002:Generated_Source\PSoC4/USBUART.c ****     ****************************************************************************//**
1003:Generated_Source\PSoC4/USBUART.c ****     *
1004:Generated_Source\PSoC4/USBUART.c ****     *  This function configures priority for all DMA channels utilized by the
1005:Generated_Source\PSoC4/USBUART.c ****     *  component. Also sets callbacks for DMA auto mode.
1006:Generated_Source\PSoC4/USBUART.c ****     *
1007:Generated_Source\PSoC4/USBUART.c ****     *******************************************************************************/
1008:Generated_Source\PSoC4/USBUART.c ****     static void USBUART_InitEpDma(void)
1009:Generated_Source\PSoC4/USBUART.c ****     {
1010:Generated_Source\PSoC4/USBUART.c ****     #if (USBUART_DMA1_ACTIVE)
1011:Generated_Source\PSoC4/USBUART.c ****         CYDMA_CH_CTL_BASE.ctl[USBUART_ep1_dma_CHANNEL] = USBUART_ep1_dma_CHANNEL_CFG;
1012:Generated_Source\PSoC4/USBUART.c ****     #endif /* (USBUART_DMA1_ACTIVE) */
1013:Generated_Source\PSoC4/USBUART.c **** 
1014:Generated_Source\PSoC4/USBUART.c ****     #if (USBUART_DMA2_ACTIVE)
1015:Generated_Source\PSoC4/USBUART.c ****         CYDMA_CH_CTL_BASE.ctl[USBUART_ep2_dma_CHANNEL] = USBUART_ep2_dma_CHANNEL_CFG;
1016:Generated_Source\PSoC4/USBUART.c ****     #endif /* (USBUART_DMA2_ACTIVE) */
1017:Generated_Source\PSoC4/USBUART.c **** 
1018:Generated_Source\PSoC4/USBUART.c ****     #if (USBUART_DMA3_ACTIVE)
1019:Generated_Source\PSoC4/USBUART.c ****         CYDMA_CH_CTL_BASE.ctl[USBUART_ep3_dma_CHANNEL] = USBUART_ep3_dma_CHANNEL_CFG;
1020:Generated_Source\PSoC4/USBUART.c ****     #endif /* (USBUART_DMA3_ACTIVE) */
1021:Generated_Source\PSoC4/USBUART.c **** 
1022:Generated_Source\PSoC4/USBUART.c ****     #if (USBUART_DMA4_ACTIVE)
1023:Generated_Source\PSoC4/USBUART.c ****         CYDMA_CH_CTL_BASE.ctl[USBUART_ep4_dma_CHANNEL] = USBUART_ep4_dma_CHANNEL_CFG;
1024:Generated_Source\PSoC4/USBUART.c ****     #endif /* (USBUART_DMA4_ACTIVE) */
1025:Generated_Source\PSoC4/USBUART.c **** 
1026:Generated_Source\PSoC4/USBUART.c ****     #if (USBUART_DMA5_ACTIVE)
1027:Generated_Source\PSoC4/USBUART.c ****         CYDMA_CH_CTL_BASE.ctl[USBUART_ep5_dma_CHANNEL] = USBUART_ep5_dma_CHANNEL_CFG;
1028:Generated_Source\PSoC4/USBUART.c ****     #endif /* (USBUART_DMA5_ACTIVE) */
1029:Generated_Source\PSoC4/USBUART.c **** 
1030:Generated_Source\PSoC4/USBUART.c ****     #if (USBUART_DMA6_ACTIVE)
1031:Generated_Source\PSoC4/USBUART.c ****         CYDMA_CH_CTL_BASE.ctl[USBUART_ep6_dma_CHANNEL] = USBUART_ep6_dma_CHANNEL_CFG;
1032:Generated_Source\PSoC4/USBUART.c ****     #endif /* (USBUART_DMA6_ACTIVE) */
1033:Generated_Source\PSoC4/USBUART.c **** 
1034:Generated_Source\PSoC4/USBUART.c ****     #if (USBUART_DMA7_ACTIVE)
ARM GAS  C:\Users\essele\AppData\Local\Temp\ccbSjPdV.s 			page 35


1035:Generated_Source\PSoC4/USBUART.c ****         CYDMA_CH_CTL_BASE.ctl[USBUART_ep7_dma_CHANNEL] = USBUART_ep7_dma_CHANNEL_CFG;
1036:Generated_Source\PSoC4/USBUART.c ****     #endif /* (USBUART_DMA7_ACTIVE) */
1037:Generated_Source\PSoC4/USBUART.c **** 
1038:Generated_Source\PSoC4/USBUART.c ****     #if (USBUART_DMA8_ACTIVE)
1039:Generated_Source\PSoC4/USBUART.c ****         CYDMA_CH_CTL_BASE.ctl[USBUART_ep8_dma_CHANNEL] = USBUART_ep8_dma_CHANNEL_CFG;
1040:Generated_Source\PSoC4/USBUART.c ****     #endif /* (USBUART_DMA8_ACTIVE) */
1041:Generated_Source\PSoC4/USBUART.c **** 
1042:Generated_Source\PSoC4/USBUART.c ****     #if (USBUART_EP_MANAGEMENT_DMA_AUTO)
1043:Generated_Source\PSoC4/USBUART.c ****         /* Initialize DMA channel callbacks. */
1044:Generated_Source\PSoC4/USBUART.c ****         #if (USBUART_DMA1_ACTIVE)
1045:Generated_Source\PSoC4/USBUART.c ****             (void) USBUART_ep1_dma_SetInterruptCallback(&USBUART_EP1_DMA_DONE_ISR);
1046:Generated_Source\PSoC4/USBUART.c ****         #endif /* (USBUART_DMA1_ACTIVE) */
1047:Generated_Source\PSoC4/USBUART.c **** 
1048:Generated_Source\PSoC4/USBUART.c ****         #if (USBUART_DMA2_ACTIVE)
1049:Generated_Source\PSoC4/USBUART.c ****             (void) USBUART_ep2_dma_SetInterruptCallback(&USBUART_EP2_DMA_DONE_ISR);
1050:Generated_Source\PSoC4/USBUART.c ****         #endif /* (USBUART_DMA2_ACTIVE) */
1051:Generated_Source\PSoC4/USBUART.c **** 
1052:Generated_Source\PSoC4/USBUART.c ****         #if (USBUART_DMA3_ACTIVE)
1053:Generated_Source\PSoC4/USBUART.c ****             (void) USBUART_ep3_dma_SetInterruptCallback(&USBUART_EP3_DMA_DONE_ISR);
1054:Generated_Source\PSoC4/USBUART.c ****         #endif /* (USBUART_DMA3_ACTIVE) */
1055:Generated_Source\PSoC4/USBUART.c **** 
1056:Generated_Source\PSoC4/USBUART.c ****         #if (USBUART_DMA4_ACTIVE)
1057:Generated_Source\PSoC4/USBUART.c ****             (void) USBUART_ep4_dma_SetInterruptCallback(&USBUART_EP4_DMA_DONE_ISR);
1058:Generated_Source\PSoC4/USBUART.c ****         #endif /* (USBUART_DMA4_ACTIVE) */
1059:Generated_Source\PSoC4/USBUART.c **** 
1060:Generated_Source\PSoC4/USBUART.c ****         #if (USBUART_DMA5_ACTIVE)
1061:Generated_Source\PSoC4/USBUART.c ****             (void) USBUART_ep5_dma_SetInterruptCallback(&USBUART_EP5_DMA_DONE_ISR);
1062:Generated_Source\PSoC4/USBUART.c ****         #endif /* (USBUART_DMA5_ACTIVE) */
1063:Generated_Source\PSoC4/USBUART.c **** 
1064:Generated_Source\PSoC4/USBUART.c ****         #if (USBUART_DMA6_ACTIVE)
1065:Generated_Source\PSoC4/USBUART.c ****             (void) USBUART_ep6_dma_SetInterruptCallback(&USBUART_EP6_DMA_DONE_ISR);
1066:Generated_Source\PSoC4/USBUART.c ****         #endif /* (USBUART_DMA6_ACTIVE) */
1067:Generated_Source\PSoC4/USBUART.c **** 
1068:Generated_Source\PSoC4/USBUART.c ****         #if (USBUART_DMA7_ACTIVE)
1069:Generated_Source\PSoC4/USBUART.c ****             (void) USBUART_ep7_dma_SetInterruptCallback(&USBUART_EP7_DMA_DONE_ISR);
1070:Generated_Source\PSoC4/USBUART.c ****         #endif /* (USBUART_DMA7_ACTIVE) */
1071:Generated_Source\PSoC4/USBUART.c **** 
1072:Generated_Source\PSoC4/USBUART.c ****         #if (USBUART_DMA8_ACTIVE)
1073:Generated_Source\PSoC4/USBUART.c ****             (void) USBUART_ep8_dma_SetInterruptCallback(&USBUART_EP8_DMA_DONE_ISR);
1074:Generated_Source\PSoC4/USBUART.c ****         #endif /* (USBUART_DMA8_ACTIVE) */
1075:Generated_Source\PSoC4/USBUART.c ****     #endif /* (USBUART_EP_MANAGEMENT_DMA_AUTO) */
1076:Generated_Source\PSoC4/USBUART.c ****     }
1077:Generated_Source\PSoC4/USBUART.c **** #else
1078:Generated_Source\PSoC4/USBUART.c **** 
1079:Generated_Source\PSoC4/USBUART.c **** 
1080:Generated_Source\PSoC4/USBUART.c ****     /***************************************************************************
1081:Generated_Source\PSoC4/USBUART.c ****     * Function Name: USBUART_InitEP_DMA
1082:Generated_Source\PSoC4/USBUART.c ****     ************************************************************************//**
1083:Generated_Source\PSoC4/USBUART.c ****     *
1084:Generated_Source\PSoC4/USBUART.c ****     *  This function allocates and initializes a DMA channel to be used by the
1085:Generated_Source\PSoC4/USBUART.c ****     *  USBUART_LoadInEP() or USBUART_ReadOutEP() APIs for data
1086:Generated_Source\PSoC4/USBUART.c ****     *  transfer. It is available when the Endpoint Memory Management parameter
1087:Generated_Source\PSoC4/USBUART.c ****     *  is set to DMA.
1088:Generated_Source\PSoC4/USBUART.c ****     *
1089:Generated_Source\PSoC4/USBUART.c ****     *  This function is automatically called from the USBFS_LoadInEP() and USBFS_ReadOutEP() APIs.
1090:Generated_Source\PSoC4/USBUART.c ****     *
1091:Generated_Source\PSoC4/USBUART.c ****     *  \param epNumber Contains the data endpoint number.
ARM GAS  C:\Users\essele\AppData\Local\Temp\ccbSjPdV.s 			page 36


1092:Generated_Source\PSoC4/USBUART.c ****     *            Valid values are between 1 and 8.
1093:Generated_Source\PSoC4/USBUART.c ****     *  \param *pData Pointer to a data array that is related to the EP transfers.
1094:Generated_Source\PSoC4/USBUART.c ****     *
1095:Generated_Source\PSoC4/USBUART.c ****     * \reentrant No.
1096:Generated_Source\PSoC4/USBUART.c ****     *
1097:Generated_Source\PSoC4/USBUART.c ****     ***************************************************************************/
1098:Generated_Source\PSoC4/USBUART.c ****     void USBUART_InitEP_DMA(uint8 epNumber, const uint8 *pData)
1099:Generated_Source\PSoC4/USBUART.c ****                                                                     
1100:Generated_Source\PSoC4/USBUART.c ****     {
1101:Generated_Source\PSoC4/USBUART.c ****         uint16 src;
1102:Generated_Source\PSoC4/USBUART.c ****         uint16 dst;
1103:Generated_Source\PSoC4/USBUART.c **** 
1104:Generated_Source\PSoC4/USBUART.c ****     #if (CY_PSOC3)
1105:Generated_Source\PSoC4/USBUART.c ****         src = HI16(CYDEV_SRAM_BASE);
1106:Generated_Source\PSoC4/USBUART.c ****         dst = HI16(CYDEV_PERIPH_BASE);
1107:Generated_Source\PSoC4/USBUART.c ****         pData = pData;
1108:Generated_Source\PSoC4/USBUART.c ****     #else
1109:Generated_Source\PSoC4/USBUART.c ****         if ((USBUART_EP[epNumber].addr & USBUART_DIR_IN) != 0u)
1110:Generated_Source\PSoC4/USBUART.c ****         {
1111:Generated_Source\PSoC4/USBUART.c ****             /* IN endpoint: source is memory buffer. */
1112:Generated_Source\PSoC4/USBUART.c ****             src = HI16(pData);
1113:Generated_Source\PSoC4/USBUART.c ****             dst = HI16(CYDEV_PERIPH_BASE);
1114:Generated_Source\PSoC4/USBUART.c ****         }
1115:Generated_Source\PSoC4/USBUART.c ****         else
1116:Generated_Source\PSoC4/USBUART.c ****         {
1117:Generated_Source\PSoC4/USBUART.c ****             /* OUT endpoint: source is USB IP memory buffer. */
1118:Generated_Source\PSoC4/USBUART.c ****             src = HI16(CYDEV_PERIPH_BASE);
1119:Generated_Source\PSoC4/USBUART.c ****             dst = HI16(pData);
1120:Generated_Source\PSoC4/USBUART.c ****         }
1121:Generated_Source\PSoC4/USBUART.c ****     #endif  /* (CY_PSOC3) */
1122:Generated_Source\PSoC4/USBUART.c **** 
1123:Generated_Source\PSoC4/USBUART.c ****         switch(epNumber)
1124:Generated_Source\PSoC4/USBUART.c ****         {
1125:Generated_Source\PSoC4/USBUART.c ****     #if (USBUART_DMA1_ACTIVE)
1126:Generated_Source\PSoC4/USBUART.c ****         case USBUART_EP1:
1127:Generated_Source\PSoC4/USBUART.c ****             USBUART_DmaChan[epNumber] = USBUART_ep1_DmaInitialize(USBUART_DMA_BYTES_PER_BURST,
1128:Generated_Source\PSoC4/USBUART.c ****                                                                                     USBUART_DMA_REQ
1129:Generated_Source\PSoC4/USBUART.c ****             break;
1130:Generated_Source\PSoC4/USBUART.c ****     #endif /* (USBUART_DMA1_ACTIVE) */
1131:Generated_Source\PSoC4/USBUART.c **** 
1132:Generated_Source\PSoC4/USBUART.c ****     #if (USBUART_DMA2_ACTIVE)
1133:Generated_Source\PSoC4/USBUART.c ****         case USBUART_EP2:
1134:Generated_Source\PSoC4/USBUART.c ****             USBUART_DmaChan[epNumber] = USBUART_ep2_DmaInitialize(USBUART_DMA_BYTES_PER_BURST,
1135:Generated_Source\PSoC4/USBUART.c ****                                                                                     USBUART_DMA_REQ
1136:Generated_Source\PSoC4/USBUART.c ****             break;
1137:Generated_Source\PSoC4/USBUART.c ****     #endif /* (USBUART_DMA2_ACTIVE) */
1138:Generated_Source\PSoC4/USBUART.c **** 
1139:Generated_Source\PSoC4/USBUART.c ****     #if (USBUART_DMA3_ACTIVE)
1140:Generated_Source\PSoC4/USBUART.c ****             case USBUART_EP3:
1141:Generated_Source\PSoC4/USBUART.c ****                 USBUART_DmaChan[epNumber] = USBUART_ep3_DmaInitialize(USBUART_DMA_BYTES_PER_BURST,
1142:Generated_Source\PSoC4/USBUART.c ****                                                                                         USBUART_DMA
1143:Generated_Source\PSoC4/USBUART.c ****             break;
1144:Generated_Source\PSoC4/USBUART.c ****     #endif /* (USBUART_DMA3_ACTIVE) */
1145:Generated_Source\PSoC4/USBUART.c **** 
1146:Generated_Source\PSoC4/USBUART.c ****     #if (USBUART_DMA4_ACTIVE)
1147:Generated_Source\PSoC4/USBUART.c ****             case USBUART_EP4:
1148:Generated_Source\PSoC4/USBUART.c ****                 USBUART_DmaChan[epNumber] = USBUART_ep4_DmaInitialize(USBUART_DMA_BYTES_PER_BURST,
ARM GAS  C:\Users\essele\AppData\Local\Temp\ccbSjPdV.s 			page 37


1149:Generated_Source\PSoC4/USBUART.c ****                                                                                         USBUART_DMA
1150:Generated_Source\PSoC4/USBUART.c ****             break;
1151:Generated_Source\PSoC4/USBUART.c ****     #endif /* (USBUART_DMA4_ACTIVE) */
1152:Generated_Source\PSoC4/USBUART.c **** 
1153:Generated_Source\PSoC4/USBUART.c ****     #if (USBUART_DMA5_ACTIVE)
1154:Generated_Source\PSoC4/USBUART.c ****             case USBUART_EP5:
1155:Generated_Source\PSoC4/USBUART.c ****                 USBUART_DmaChan[epNumber] = USBUART_ep5_DmaInitialize(USBUART_DMA_BYTES_PER_BURST,
1156:Generated_Source\PSoC4/USBUART.c ****                                                                                         USBUART_DMA
1157:Generated_Source\PSoC4/USBUART.c ****             break;
1158:Generated_Source\PSoC4/USBUART.c ****     #endif /* (USBUART_DMA5_ACTIVE) */
1159:Generated_Source\PSoC4/USBUART.c **** 
1160:Generated_Source\PSoC4/USBUART.c ****     #if (USBUART_DMA6_ACTIVE)
1161:Generated_Source\PSoC4/USBUART.c ****         case USBUART_EP6:
1162:Generated_Source\PSoC4/USBUART.c ****             USBUART_DmaChan[epNumber] = USBUART_ep6_DmaInitialize(USBUART_DMA_BYTES_PER_BURST,
1163:Generated_Source\PSoC4/USBUART.c ****                                                                                     USBUART_DMA_REQ
1164:Generated_Source\PSoC4/USBUART.c ****             break;
1165:Generated_Source\PSoC4/USBUART.c ****     #endif /* (USBUART_DMA6_ACTIVE) */
1166:Generated_Source\PSoC4/USBUART.c **** 
1167:Generated_Source\PSoC4/USBUART.c ****     #if (USBUART_DMA7_ACTIVE)
1168:Generated_Source\PSoC4/USBUART.c ****         case USBUART_EP7:
1169:Generated_Source\PSoC4/USBUART.c ****                 USBUART_DmaChan[epNumber] = USBUART_ep7_DmaInitialize(USBUART_DMA_BYTES_PER_BURST,
1170:Generated_Source\PSoC4/USBUART.c ****                                                                                         USBUART_DMA
1171:Generated_Source\PSoC4/USBUART.c ****             break;
1172:Generated_Source\PSoC4/USBUART.c ****     #endif /* (USBUART_DMA7_ACTIVE) */
1173:Generated_Source\PSoC4/USBUART.c **** 
1174:Generated_Source\PSoC4/USBUART.c ****     #if (USBUART_DMA8_ACTIVE)
1175:Generated_Source\PSoC4/USBUART.c ****         case USBUART_EP8:
1176:Generated_Source\PSoC4/USBUART.c ****                 USBUART_DmaChan[epNumber] = USBUART_ep8_DmaInitialize(USBUART_DMA_BYTES_PER_BURST,
1177:Generated_Source\PSoC4/USBUART.c ****                                                                                         USBUART_DMA
1178:Generated_Source\PSoC4/USBUART.c ****             break;
1179:Generated_Source\PSoC4/USBUART.c ****     #endif /* (USBUART_DMA8_ACTIVE) */
1180:Generated_Source\PSoC4/USBUART.c **** 
1181:Generated_Source\PSoC4/USBUART.c ****         default:
1182:Generated_Source\PSoC4/USBUART.c ****             /* Do nothing for endpoints other than 1-8. */
1183:Generated_Source\PSoC4/USBUART.c ****             break;
1184:Generated_Source\PSoC4/USBUART.c ****         }
1185:Generated_Source\PSoC4/USBUART.c **** 
1186:Generated_Source\PSoC4/USBUART.c ****         if ((epNumber > USBUART_EP0) && (epNumber < USBUART_MAX_EP))
1187:Generated_Source\PSoC4/USBUART.c ****         {
1188:Generated_Source\PSoC4/USBUART.c ****             USBUART_DmaTd[epNumber] = CyDmaTdAllocate();
1189:Generated_Source\PSoC4/USBUART.c **** 
1190:Generated_Source\PSoC4/USBUART.c ****         #if (USBUART_EP_MANAGEMENT_DMA_AUTO && (USBUART_EP_DMA_AUTO_OPT == 0u))
1191:Generated_Source\PSoC4/USBUART.c ****             USBUART_DmaNextTd[epNumber] = CyDmaTdAllocate();
1192:Generated_Source\PSoC4/USBUART.c ****         #endif /* (USBUART_EP_MANAGEMENT_DMA_AUTO && (USBUART_EP_DMA_AUTO_OPT == 0u)) */
1193:Generated_Source\PSoC4/USBUART.c ****         }
1194:Generated_Source\PSoC4/USBUART.c ****     }
1195:Generated_Source\PSoC4/USBUART.c **** #endif /* (CY_PSOC4) */
1196:Generated_Source\PSoC4/USBUART.c **** 
1197:Generated_Source\PSoC4/USBUART.c ****     /***************************************************************************
1198:Generated_Source\PSoC4/USBUART.c ****     * Function Name: USBUART_Stop_DMA
1199:Generated_Source\PSoC4/USBUART.c ****     ************************************************************************//**
1200:Generated_Source\PSoC4/USBUART.c ****     *  
1201:Generated_Source\PSoC4/USBUART.c ****     *  This function stops DMA channel associated with endpoint. It is available 
1202:Generated_Source\PSoC4/USBUART.c ****     *  when the Endpoint Buffer Management parameter is set to DMA. Call this 
1203:Generated_Source\PSoC4/USBUART.c ****     *  function when endpoint direction is changed from IN to OUT or vice versa 
1204:Generated_Source\PSoC4/USBUART.c ****     *  to trigger DMA re-configuration when USBUART_LoadInEP() or 
1205:Generated_Source\PSoC4/USBUART.c ****     *  USBUART_ReadOutEP() functions are called the first time. 
ARM GAS  C:\Users\essele\AppData\Local\Temp\ccbSjPdV.s 			page 38


1206:Generated_Source\PSoC4/USBUART.c ****     *  
1207:Generated_Source\PSoC4/USBUART.c ****     *  \param epNumber: The data endpoint number for which associated DMA 
1208:Generated_Source\PSoC4/USBUART.c ****     *  channel is stopped. The range of valid values is between 1 and 8. To stop 
1209:Generated_Source\PSoC4/USBUART.c ****     *  all DMAs associated with endpoints call this function with 
1210:Generated_Source\PSoC4/USBUART.c ****     *  USBUART_MAX_EP argument.
1211:Generated_Source\PSoC4/USBUART.c ****     *
1212:Generated_Source\PSoC4/USBUART.c ****     * \reentrant
1213:Generated_Source\PSoC4/USBUART.c ****     *  No.
1214:Generated_Source\PSoC4/USBUART.c ****     *
1215:Generated_Source\PSoC4/USBUART.c ****     ***************************************************************************/
1216:Generated_Source\PSoC4/USBUART.c ****     void USBUART_Stop_DMA(uint8 epNumber) 
1217:Generated_Source\PSoC4/USBUART.c ****     {
1218:Generated_Source\PSoC4/USBUART.c ****         uint32 i;
1219:Generated_Source\PSoC4/USBUART.c **** 
1220:Generated_Source\PSoC4/USBUART.c ****         i = (epNumber < USBUART_MAX_EP) ? epNumber : USBUART_EP1;
1221:Generated_Source\PSoC4/USBUART.c **** 
1222:Generated_Source\PSoC4/USBUART.c ****         do
1223:Generated_Source\PSoC4/USBUART.c ****         {
1224:Generated_Source\PSoC4/USBUART.c ****         #if (CY_PSOC4)
1225:Generated_Source\PSoC4/USBUART.c ****             if (0u != USBUART_DmaChan[i])
1226:Generated_Source\PSoC4/USBUART.c ****             {
1227:Generated_Source\PSoC4/USBUART.c ****                 USBUART_CyDmaChDisable(USBUART_DmaChan[i]);
1228:Generated_Source\PSoC4/USBUART.c ****             }
1229:Generated_Source\PSoC4/USBUART.c ****         #else
1230:Generated_Source\PSoC4/USBUART.c ****             if(USBUART_DmaTd[i] != DMA_INVALID_TD)
1231:Generated_Source\PSoC4/USBUART.c ****             {
1232:Generated_Source\PSoC4/USBUART.c ****                 (void) CyDmaChDisable(USBUART_DmaChan[i]);
1233:Generated_Source\PSoC4/USBUART.c ****                 CyDmaTdFree(USBUART_DmaTd[i]);
1234:Generated_Source\PSoC4/USBUART.c ****                 USBUART_DmaTd[i] = DMA_INVALID_TD;
1235:Generated_Source\PSoC4/USBUART.c ****             }
1236:Generated_Source\PSoC4/USBUART.c **** 
1237:Generated_Source\PSoC4/USBUART.c ****             #if (USBUART_EP_MANAGEMENT_DMA_AUTO && (USBUART_EP_DMA_AUTO_OPT == 0u))
1238:Generated_Source\PSoC4/USBUART.c ****                 if(USBUART_DmaNextTd[i] != DMA_INVALID_TD)
1239:Generated_Source\PSoC4/USBUART.c ****                 {
1240:Generated_Source\PSoC4/USBUART.c ****                     CyDmaTdFree(USBUART_DmaNextTd[i]);
1241:Generated_Source\PSoC4/USBUART.c ****                     USBUART_DmaNextTd[i] = DMA_INVALID_TD;
1242:Generated_Source\PSoC4/USBUART.c ****                 }
1243:Generated_Source\PSoC4/USBUART.c ****             #endif /* (USBUART_EP_MANAGEMENT_DMA_AUTO && (USBUART_EP_DMA_AUTO_OPT == 0u)) */
1244:Generated_Source\PSoC4/USBUART.c **** 
1245:Generated_Source\PSoC4/USBUART.c ****         #endif /* (CY_PSOC4) */
1246:Generated_Source\PSoC4/USBUART.c ****             i++;
1247:Generated_Source\PSoC4/USBUART.c ****         }
1248:Generated_Source\PSoC4/USBUART.c ****         while ((i < USBUART_MAX_EP) && (epNumber == USBUART_MAX_EP));
1249:Generated_Source\PSoC4/USBUART.c ****     }
1250:Generated_Source\PSoC4/USBUART.c **** #endif /* (USBUART_EP_MANAGEMENT_DMA) */
1251:Generated_Source\PSoC4/USBUART.c **** 
1252:Generated_Source\PSoC4/USBUART.c **** 
1253:Generated_Source\PSoC4/USBUART.c **** #if (CY_PSOC3 || CY_PSOC5)
1254:Generated_Source\PSoC4/USBUART.c **** #if (USBUART_EP_MANAGEMENT_DMA_AUTO && (USBUART_EP_DMA_AUTO_OPT == 0u))
1255:Generated_Source\PSoC4/USBUART.c ****     /***************************************************************************
1256:Generated_Source\PSoC4/USBUART.c ****     * Function Name: USBUART_LoadNextInEP
1257:Generated_Source\PSoC4/USBUART.c ****     ************************************************************************//**
1258:Generated_Source\PSoC4/USBUART.c ****     *
1259:Generated_Source\PSoC4/USBUART.c ****     * Summary:
1260:Generated_Source\PSoC4/USBUART.c ****     *  This internal function is used for IN endpoint DMA reconfiguration in
1261:Generated_Source\PSoC4/USBUART.c ****     *  Auto DMA mode.
1262:Generated_Source\PSoC4/USBUART.c ****     *
ARM GAS  C:\Users\essele\AppData\Local\Temp\ccbSjPdV.s 			page 39


1263:Generated_Source\PSoC4/USBUART.c ****     * Parameters:
1264:Generated_Source\PSoC4/USBUART.c ****     *  epNumber: Contains the data endpoint number.
1265:Generated_Source\PSoC4/USBUART.c ****     *  mode:   0 - Configure DMA to send the the rest of data.
1266:Generated_Source\PSoC4/USBUART.c ****     *          1 - Configure DMA to repeat 2 last bytes of the first burst.
1267:Generated_Source\PSoC4/USBUART.c ****     *
1268:Generated_Source\PSoC4/USBUART.c ****     ***************************************************************************/
1269:Generated_Source\PSoC4/USBUART.c ****     void USBUART_LoadNextInEP(uint8 epNumber, uint8 mode) 
1270:Generated_Source\PSoC4/USBUART.c ****     {
1271:Generated_Source\PSoC4/USBUART.c ****         reg16 *convert;
1272:Generated_Source\PSoC4/USBUART.c **** 
1273:Generated_Source\PSoC4/USBUART.c ****         if (mode == 0u)
1274:Generated_Source\PSoC4/USBUART.c ****         {
1275:Generated_Source\PSoC4/USBUART.c ****             /* Configure DMA to send rest of data. */
1276:Generated_Source\PSoC4/USBUART.c ****             /* CyDmaTdSetConfiguration API is optimized to change transfer length only and configur
1277:Generated_Source\PSoC4/USBUART.c ****             convert = (reg16 *) &CY_DMA_TDMEM_STRUCT_PTR[USBUART_DmaTd[epNumber]].TD0[0u];
1278:Generated_Source\PSoC4/USBUART.c ****             /* Set transfer length. */
1279:Generated_Source\PSoC4/USBUART.c ****             CY_SET_REG16(convert, USBUART_inLength[epNumber] - USBUART_DMA_BYTES_PER_BURST);
1280:Generated_Source\PSoC4/USBUART.c ****             /* CyDmaTdSetAddress API is optimized to change source address only. */
1281:Generated_Source\PSoC4/USBUART.c ****             convert = (reg16 *) &CY_DMA_TDMEM_STRUCT_PTR[USBUART_DmaTd[epNumber]].TD1[0u];
1282:Generated_Source\PSoC4/USBUART.c ****             CY_SET_REG16(convert, LO16((uint32)USBUART_inDataPointer[epNumber] +
1283:Generated_Source\PSoC4/USBUART.c ****                                             USBUART_DMA_BYTES_PER_BURST));
1284:Generated_Source\PSoC4/USBUART.c ****             USBUART_inBufFull[epNumber] = 1u;
1285:Generated_Source\PSoC4/USBUART.c ****         }
1286:Generated_Source\PSoC4/USBUART.c ****         else
1287:Generated_Source\PSoC4/USBUART.c ****         {
1288:Generated_Source\PSoC4/USBUART.c ****             /* Configure DMA to repeat 2 last bytes of the first burst. */
1289:Generated_Source\PSoC4/USBUART.c ****             /* CyDmaTdSetConfiguration API is optimized to change transfer length only and configur
1290:Generated_Source\PSoC4/USBUART.c ****             convert = (reg16 *) &CY_DMA_TDMEM_STRUCT_PTR[USBUART_DmaTd[epNumber]].TD0[0u];
1291:Generated_Source\PSoC4/USBUART.c ****             /* Set transfer length. */
1292:Generated_Source\PSoC4/USBUART.c ****             CY_SET_REG16(convert, USBUART_DMA_BYTES_REPEAT);
1293:Generated_Source\PSoC4/USBUART.c ****             /* CyDmaTdSetAddress API is optimized to change source address only. */
1294:Generated_Source\PSoC4/USBUART.c ****             convert = (reg16 *) &CY_DMA_TDMEM_STRUCT_PTR[USBUART_DmaTd[epNumber]].TD1[0u];
1295:Generated_Source\PSoC4/USBUART.c ****             CY_SET_REG16(convert,  LO16((uint32)USBUART_inDataPointer[epNumber] +
1296:Generated_Source\PSoC4/USBUART.c ****                                    (USBUART_DMA_BYTES_PER_BURST - USBUART_DMA_BYTES_REPEAT)));
1297:Generated_Source\PSoC4/USBUART.c ****         }
1298:Generated_Source\PSoC4/USBUART.c **** 
1299:Generated_Source\PSoC4/USBUART.c ****         /* CyDmaChSetInitialTd API is optimized to initialize TD. */
1300:Generated_Source\PSoC4/USBUART.c ****         CY_DMA_CH_STRUCT_PTR[USBUART_DmaChan[epNumber]].basic_status[1u] = USBUART_DmaTd[epNumber];
1301:Generated_Source\PSoC4/USBUART.c ****     }
1302:Generated_Source\PSoC4/USBUART.c **** #endif /* (USBUART_EP_MANAGEMENT_DMA_AUTO && (USBUART_EP_DMA_AUTO_OPT == 0u)) */
1303:Generated_Source\PSoC4/USBUART.c **** #endif /* (CY_PSOC3 || CY_PSOC5) */
1304:Generated_Source\PSoC4/USBUART.c **** 
1305:Generated_Source\PSoC4/USBUART.c **** 
1306:Generated_Source\PSoC4/USBUART.c **** /*******************************************************************************
1307:Generated_Source\PSoC4/USBUART.c **** * Function Name: USBUART_LoadInEP
1308:Generated_Source\PSoC4/USBUART.c **** ****************************************************************************//**
1309:Generated_Source\PSoC4/USBUART.c **** *
1310:Generated_Source\PSoC4/USBUART.c **** *  This function performs different functionality depending on the Component’s
1311:Generated_Source\PSoC4/USBUART.c **** *  configured Endpoint Buffer Management. This parameter is defined in
1312:Generated_Source\PSoC4/USBUART.c **** *  the Descriptor Root in Component Configure window.
1313:Generated_Source\PSoC4/USBUART.c **** *
1314:Generated_Source\PSoC4/USBUART.c **** *  *Manual (Static/Dynamic Allocation):*
1315:Generated_Source\PSoC4/USBUART.c **** *  This function loads and enables the specified USB data endpoint for an IN
1316:Generated_Source\PSoC4/USBUART.c **** *  data transfer.
1317:Generated_Source\PSoC4/USBUART.c **** *
1318:Generated_Source\PSoC4/USBUART.c **** *  *DMA with Manual Buffer Management:*
1319:Generated_Source\PSoC4/USBUART.c **** *  Configures DMA for a data transfer from system RAM to endpoint buffer.
ARM GAS  C:\Users\essele\AppData\Local\Temp\ccbSjPdV.s 			page 40


1320:Generated_Source\PSoC4/USBUART.c **** *  Generates request for a transfer.
1321:Generated_Source\PSoC4/USBUART.c **** *
1322:Generated_Source\PSoC4/USBUART.c **** *  *DMA with Automatic Buffer Management:*
1323:Generated_Source\PSoC4/USBUART.c **** *  Configures DMA. This is required only once, so it is done only when parameter
1324:Generated_Source\PSoC4/USBUART.c **** *  pData is not NULL. When the pData pointer is NULL, the function skips this
1325:Generated_Source\PSoC4/USBUART.c **** *  task. Sets Data ready status: This generates the first DMA transfer and
1326:Generated_Source\PSoC4/USBUART.c **** *  prepares data in endpoint buffer.
1327:Generated_Source\PSoC4/USBUART.c **** *
1328:Generated_Source\PSoC4/USBUART.c **** *  \param epNumber Contains the data endpoint number.
1329:Generated_Source\PSoC4/USBUART.c **** *            Valid values are between 1 and 8.
1330:Generated_Source\PSoC4/USBUART.c **** *  \param *pData A pointer to a data array from which the data for the endpoint space
1331:Generated_Source\PSoC4/USBUART.c **** *          is loaded.
1332:Generated_Source\PSoC4/USBUART.c **** *  \param length The number of bytes to transfer from the array and then send as
1333:Generated_Source\PSoC4/USBUART.c **** *          a result of an IN request. Valid values are between 0 and 512
1334:Generated_Source\PSoC4/USBUART.c **** *          (1023 for DMA with Automatic Buffer Management mode). The value 512
1335:Generated_Source\PSoC4/USBUART.c **** *          is applicable if only one endpoint is used.
1336:Generated_Source\PSoC4/USBUART.c **** *
1337:Generated_Source\PSoC4/USBUART.c **** *
1338:Generated_Source\PSoC4/USBUART.c **** * \reentrant
1339:Generated_Source\PSoC4/USBUART.c **** *  No.
1340:Generated_Source\PSoC4/USBUART.c **** *
1341:Generated_Source\PSoC4/USBUART.c **** *******************************************************************************/
1342:Generated_Source\PSoC4/USBUART.c **** void USBUART_LoadInEP(uint8 epNumber, const uint8 pData[], uint16 length)
1343:Generated_Source\PSoC4/USBUART.c ****                                                                         
1344:Generated_Source\PSoC4/USBUART.c **** {
 905              		.loc 1 1344 0
 906              		.cfi_startproc
 907              		@ args = 0, pretend = 0, frame = 16
 908              		@ frame_needed = 1, uses_anonymous_args = 0
 909 0000 B0B5     		push	{r4, r5, r7, lr}
 910              		.cfi_def_cfa_offset 16
 911              		.cfi_offset 4, -16
 912              		.cfi_offset 5, -12
 913              		.cfi_offset 7, -8
 914              		.cfi_offset 14, -4
 915 0002 84B0     		sub	sp, sp, #16
 916              		.cfi_def_cfa_offset 32
 917 0004 00AF     		add	r7, sp, #0
 918              		.cfi_def_cfa_register 7
 919 0006 3960     		str	r1, [r7]
 920 0008 1100     		movs	r1, r2
 921 000a FB1D     		adds	r3, r7, #7
 922 000c 021C     		adds	r2, r0, #0
 923 000e 1A70     		strb	r2, [r3]
 924 0010 3B1D     		adds	r3, r7, #4
 925 0012 0A1C     		adds	r2, r1, #0
 926 0014 1A80     		strh	r2, [r3]
1345:Generated_Source\PSoC4/USBUART.c ****     if ((epNumber > USBUART_EP0) && (epNumber < USBUART_MAX_EP))
 927              		.loc 1 1345 0
 928 0016 FB1D     		adds	r3, r7, #7
 929 0018 1B78     		ldrb	r3, [r3]
 930 001a 002B     		cmp	r3, #0
 931 001c 00D1     		bne	.LCB779
 932 001e 8AE0     		b	.L58	@long jump
 933              	.LCB779:
 934              		.loc 1 1345 0 is_stmt 0 discriminator 1
 935 0020 FB1D     		adds	r3, r7, #7
ARM GAS  C:\Users\essele\AppData\Local\Temp\ccbSjPdV.s 			page 41


 936 0022 1B78     		ldrb	r3, [r3]
 937 0024 082B     		cmp	r3, #8
 938 0026 00D9     		bls	.LCB783
 939 0028 85E0     		b	.L58	@long jump
 940              	.LCB783:
1346:Generated_Source\PSoC4/USBUART.c ****     {
1347:Generated_Source\PSoC4/USBUART.c ****     #if (!USBUART_EP_MANAGEMENT_DMA_AUTO)
1348:Generated_Source\PSoC4/USBUART.c ****         /* Limit length to available buffer USB IP buffer size.*/
1349:Generated_Source\PSoC4/USBUART.c ****         if (length > (USBUART_EPX_DATA_BUF_MAX - USBUART_EP[epNumber].buffOffset))
 941              		.loc 1 1349 0 is_stmt 1
 942 002a 3B1D     		adds	r3, r7, #4
 943 002c 1988     		ldrh	r1, [r3]
 944 002e FB1D     		adds	r3, r7, #7
 945 0030 1A78     		ldrb	r2, [r3]
 946 0032 4348     		ldr	r0, .L59
 947 0034 1300     		movs	r3, r2
 948 0036 5B00     		lsls	r3, r3, #1
 949 0038 9B18     		adds	r3, r3, r2
 950 003a 9B00     		lsls	r3, r3, #2
 951 003c C318     		adds	r3, r0, r3
 952 003e 0633     		adds	r3, r3, #6
 953 0040 1B88     		ldrh	r3, [r3]
 954 0042 9BB2     		uxth	r3, r3
 955 0044 1A00     		movs	r2, r3
 956 0046 8023     		movs	r3, #128
 957 0048 9B00     		lsls	r3, r3, #2
 958 004a 9B1A     		subs	r3, r3, r2
 959 004c 9942     		cmp	r1, r3
 960 004e 0FD9     		bls	.L54
1350:Generated_Source\PSoC4/USBUART.c ****         {
1351:Generated_Source\PSoC4/USBUART.c ****             length = USBUART_EPX_DATA_BUF_MAX - USBUART_EP[epNumber].buffOffset;
 961              		.loc 1 1351 0
 962 0050 FB1D     		adds	r3, r7, #7
 963 0052 1A78     		ldrb	r2, [r3]
 964 0054 3A49     		ldr	r1, .L59
 965 0056 1300     		movs	r3, r2
 966 0058 5B00     		lsls	r3, r3, #1
 967 005a 9B18     		adds	r3, r3, r2
 968 005c 9B00     		lsls	r3, r3, #2
 969 005e CB18     		adds	r3, r1, r3
 970 0060 0633     		adds	r3, r3, #6
 971 0062 1B88     		ldrh	r3, [r3]
 972 0064 9AB2     		uxth	r2, r3
 973 0066 3B1D     		adds	r3, r7, #4
 974 0068 8021     		movs	r1, #128
 975 006a 8900     		lsls	r1, r1, #2
 976 006c 8A1A     		subs	r2, r1, r2
 977 006e 1A80     		strh	r2, [r3]
 978              	.L54:
1352:Generated_Source\PSoC4/USBUART.c ****         }
1353:Generated_Source\PSoC4/USBUART.c ****     #endif /* (!USBUART_EP_MANAGEMENT_DMA_AUTO) */
1354:Generated_Source\PSoC4/USBUART.c **** 
1355:Generated_Source\PSoC4/USBUART.c ****         /* Set count and data toggle. */
1356:Generated_Source\PSoC4/USBUART.c ****         USBUART_SIE_EP_BASE.sieEp[epNumber].epCnt0 = (uint32) HI8(length) | USBUART_EP[epNumber].ep
 979              		.loc 1 1356 0
 980 0070 344D     		ldr	r5, .L59+4
 981 0072 FB1D     		adds	r3, r7, #7
ARM GAS  C:\Users\essele\AppData\Local\Temp\ccbSjPdV.s 			page 42


 982 0074 1978     		ldrb	r1, [r3]
 983 0076 3B1D     		adds	r3, r7, #4
 984 0078 1B88     		ldrh	r3, [r3]
 985 007a 1B0A     		lsrs	r3, r3, #8
 986 007c 9BB2     		uxth	r3, r3
 987 007e D8B2     		uxtb	r0, r3
 988 0080 FB1D     		adds	r3, r7, #7
 989 0082 1A78     		ldrb	r2, [r3]
 990 0084 2E4C     		ldr	r4, .L59
 991 0086 1300     		movs	r3, r2
 992 0088 5B00     		lsls	r3, r3, #1
 993 008a 9B18     		adds	r3, r3, r2
 994 008c 9B00     		lsls	r3, r3, #2
 995 008e E318     		adds	r3, r4, r3
 996 0090 0333     		adds	r3, r3, #3
 997 0092 1B78     		ldrb	r3, [r3]
 998 0094 DBB2     		uxtb	r3, r3
 999 0096 0343     		orrs	r3, r0
 1000 0098 DBB2     		uxtb	r3, r3
 1001 009a 1A00     		movs	r2, r3
 1002 009c 8B01     		lsls	r3, r1, #6
 1003 009e 5A51     		str	r2, [r3, r5]
1357:Generated_Source\PSoC4/USBUART.c ****         USBUART_SIE_EP_BASE.sieEp[epNumber].epCnt1 = (uint32) LO8(length);
 1004              		.loc 1 1357 0
 1005 00a0 2849     		ldr	r1, .L59+4
 1006 00a2 FB1D     		adds	r3, r7, #7
 1007 00a4 1B78     		ldrb	r3, [r3]
 1008 00a6 3A1D     		adds	r2, r7, #4
 1009 00a8 1288     		ldrh	r2, [r2]
 1010 00aa D2B2     		uxtb	r2, r2
 1011 00ac 9B01     		lsls	r3, r3, #6
 1012 00ae CB18     		adds	r3, r1, r3
 1013 00b0 0433     		adds	r3, r3, #4
 1014 00b2 1A60     		str	r2, [r3]
1358:Generated_Source\PSoC4/USBUART.c **** 
1359:Generated_Source\PSoC4/USBUART.c ****     #if (USBUART_EP_MANAGEMENT_MANUAL)
1360:Generated_Source\PSoC4/USBUART.c ****         if (NULL != pData)
 1015              		.loc 1 1360 0
 1016 00b4 3B68     		ldr	r3, [r7]
 1017 00b6 002B     		cmp	r3, #0
 1018 00b8 1FD0     		beq	.L55
 1019              	.LBB2:
1361:Generated_Source\PSoC4/USBUART.c ****         {
1362:Generated_Source\PSoC4/USBUART.c **** 			/* Copy data using arbiter data register. */
1363:Generated_Source\PSoC4/USBUART.c ****             uint16 i;
1364:Generated_Source\PSoC4/USBUART.c ****             for (i = 0u; i < length; ++i)
 1020              		.loc 1 1364 0
 1021 00ba 0E23     		movs	r3, #14
 1022 00bc FB18     		adds	r3, r7, r3
 1023 00be 0022     		movs	r2, #0
 1024 00c0 1A80     		strh	r2, [r3]
 1025 00c2 13E0     		b	.L56
 1026              	.L57:
1365:Generated_Source\PSoC4/USBUART.c ****             {
1366:Generated_Source\PSoC4/USBUART.c ****                 USBUART_ARB_EP_BASE.arbEp[epNumber].rwDr = pData[i];
 1027              		.loc 1 1366 0 discriminator 3
 1028 00c4 2048     		ldr	r0, .L59+8
ARM GAS  C:\Users\essele\AppData\Local\Temp\ccbSjPdV.s 			page 43


 1029 00c6 FB1D     		adds	r3, r7, #7
 1030 00c8 1B78     		ldrb	r3, [r3]
 1031 00ca 0E22     		movs	r2, #14
 1032 00cc BA18     		adds	r2, r7, r2
 1033 00ce 1288     		ldrh	r2, [r2]
 1034 00d0 3968     		ldr	r1, [r7]
 1035 00d2 8A18     		adds	r2, r1, r2
 1036 00d4 1278     		ldrb	r2, [r2]
 1037 00d6 9B01     		lsls	r3, r3, #6
 1038 00d8 C318     		adds	r3, r0, r3
 1039 00da 2033     		adds	r3, r3, #32
 1040 00dc 1A60     		str	r2, [r3]
1364:Generated_Source\PSoC4/USBUART.c ****             {
 1041              		.loc 1 1364 0 discriminator 3
 1042 00de 0E23     		movs	r3, #14
 1043 00e0 FB18     		adds	r3, r7, r3
 1044 00e2 0E22     		movs	r2, #14
 1045 00e4 BA18     		adds	r2, r7, r2
 1046 00e6 1288     		ldrh	r2, [r2]
 1047 00e8 0132     		adds	r2, r2, #1
 1048 00ea 1A80     		strh	r2, [r3]
 1049              	.L56:
1364:Generated_Source\PSoC4/USBUART.c ****             {
 1050              		.loc 1 1364 0 is_stmt 0 discriminator 1
 1051 00ec 0E23     		movs	r3, #14
 1052 00ee FA18     		adds	r2, r7, r3
 1053 00f0 3B1D     		adds	r3, r7, #4
 1054 00f2 1288     		ldrh	r2, [r2]
 1055 00f4 1B88     		ldrh	r3, [r3]
 1056 00f6 9A42     		cmp	r2, r3
 1057 00f8 E4D3     		bcc	.L57
 1058              	.L55:
 1059              	.LBE2:
1367:Generated_Source\PSoC4/USBUART.c ****             }
1368:Generated_Source\PSoC4/USBUART.c ****         }
1369:Generated_Source\PSoC4/USBUART.c **** 
1370:Generated_Source\PSoC4/USBUART.c ****         /* IN endpoint buffer is full - read to be read. */
1371:Generated_Source\PSoC4/USBUART.c ****         USBUART_EP[epNumber].apiEpState = USBUART_NO_EVENT_PENDING;
 1060              		.loc 1 1371 0 is_stmt 1
 1061 00fa FB1D     		adds	r3, r7, #7
 1062 00fc 1A78     		ldrb	r2, [r3]
 1063 00fe 1049     		ldr	r1, .L59
 1064 0100 1300     		movs	r3, r2
 1065 0102 5B00     		lsls	r3, r3, #1
 1066 0104 9B18     		adds	r3, r3, r2
 1067 0106 9B00     		lsls	r3, r3, #2
 1068 0108 CB18     		adds	r3, r1, r3
 1069 010a 0133     		adds	r3, r3, #1
 1070 010c 0022     		movs	r2, #0
 1071 010e 1A70     		strb	r2, [r3]
1372:Generated_Source\PSoC4/USBUART.c **** 
1373:Generated_Source\PSoC4/USBUART.c ****         /* Arm IN endpoint. */
1374:Generated_Source\PSoC4/USBUART.c ****         USBUART_SIE_EP_BASE.sieEp[epNumber].epCr0 = USBUART_EP[epNumber].epMode;
 1072              		.loc 1 1374 0
 1073 0110 0C4C     		ldr	r4, .L59+4
 1074 0112 FB1D     		adds	r3, r7, #7
 1075 0114 1978     		ldrb	r1, [r3]
ARM GAS  C:\Users\essele\AppData\Local\Temp\ccbSjPdV.s 			page 44


 1076 0116 FB1D     		adds	r3, r7, #7
 1077 0118 1A78     		ldrb	r2, [r3]
 1078 011a 0948     		ldr	r0, .L59
 1079 011c 1300     		movs	r3, r2
 1080 011e 5B00     		lsls	r3, r3, #1
 1081 0120 9B18     		adds	r3, r3, r2
 1082 0122 9B00     		lsls	r3, r3, #2
 1083 0124 C318     		adds	r3, r0, r3
 1084 0126 0533     		adds	r3, r3, #5
 1085 0128 1B78     		ldrb	r3, [r3]
 1086 012a DBB2     		uxtb	r3, r3
 1087 012c 1A00     		movs	r2, r3
 1088 012e 8B01     		lsls	r3, r1, #6
 1089 0130 E318     		adds	r3, r4, r3
 1090 0132 0833     		adds	r3, r3, #8
 1091 0134 1A60     		str	r2, [r3]
 1092              	.L58:
1375:Generated_Source\PSoC4/USBUART.c **** 
1376:Generated_Source\PSoC4/USBUART.c ****     #else
1377:Generated_Source\PSoC4/USBUART.c **** 
1378:Generated_Source\PSoC4/USBUART.c ****         #if (CY_PSOC3 || CY_PSOC5LP)
1379:Generated_Source\PSoC4/USBUART.c ****             /* Initialize DMA if it was not initialized. */
1380:Generated_Source\PSoC4/USBUART.c ****             if (DMA_INVALID_TD == USBUART_DmaTd[epNumber])
1381:Generated_Source\PSoC4/USBUART.c ****             {
1382:Generated_Source\PSoC4/USBUART.c ****                 USBUART_InitEP_DMA(epNumber, pData);
1383:Generated_Source\PSoC4/USBUART.c ****             }
1384:Generated_Source\PSoC4/USBUART.c ****         #endif /* (CY_PSOC3 || CY_PSOC5LP) */
1385:Generated_Source\PSoC4/USBUART.c **** 
1386:Generated_Source\PSoC4/USBUART.c ****         #if (USBUART_EP_MANAGEMENT_DMA_MANUAL)
1387:Generated_Source\PSoC4/USBUART.c ****             /* IN endpoint buffer will be fully loaded by DMA shortly. */
1388:Generated_Source\PSoC4/USBUART.c ****             USBUART_EP[epNumber].apiEpState = USBUART_NO_EVENT_PENDING;
1389:Generated_Source\PSoC4/USBUART.c **** 
1390:Generated_Source\PSoC4/USBUART.c ****             if ((pData != NULL) && (length > 0u))
1391:Generated_Source\PSoC4/USBUART.c ****             {
1392:Generated_Source\PSoC4/USBUART.c ****             #if (CY_PSOC4)
1393:Generated_Source\PSoC4/USBUART.c ****                 uint32 channelNum = (uint32) USBUART_DmaChan[epNumber];
1394:Generated_Source\PSoC4/USBUART.c **** 
1395:Generated_Source\PSoC4/USBUART.c ****                 /* Disable DMA channel: start configuration. */
1396:Generated_Source\PSoC4/USBUART.c ****                 USBUART_CyDmaChDisable(channelNum);
1397:Generated_Source\PSoC4/USBUART.c **** 
1398:Generated_Source\PSoC4/USBUART.c ****                 /* Configure source and destination. */
1399:Generated_Source\PSoC4/USBUART.c ****                 USBUART_CyDmaSetSrcAddress(channelNum, USBUART_DMA_DESCR0, (void*) pData);
1400:Generated_Source\PSoC4/USBUART.c ****                 USBUART_CyDmaSetDstAddress(channelNum, USBUART_DMA_DESCR0, (void*) &USBUART_ARB_EP_
1401:Generated_Source\PSoC4/USBUART.c **** 
1402:Generated_Source\PSoC4/USBUART.c ****                 /* Configure DMA descriptor. */
1403:Generated_Source\PSoC4/USBUART.c ****                 --length;
1404:Generated_Source\PSoC4/USBUART.c ****                 USBUART_CyDmaSetConfiguration(channelNum, USBUART_DMA_DESCR0, USBUART_DMA_COMMON_CF
1405:Generated_Source\PSoC4/USBUART.c ****                                                         CYDMA_BYTE | CYDMA_ELEMENT_WORD | CYDMA_INC
1406:Generated_Source\PSoC4/USBUART.c **** 
1407:Generated_Source\PSoC4/USBUART.c ****                 /* Validate descriptor to execute on following DMA request. */
1408:Generated_Source\PSoC4/USBUART.c ****                 USBUART_CyDmaValidateDescriptor(channelNum, USBUART_DMA_DESCR0);
1409:Generated_Source\PSoC4/USBUART.c **** 
1410:Generated_Source\PSoC4/USBUART.c ****                 /* Enable DMA channel: configuration complete. */
1411:Generated_Source\PSoC4/USBUART.c ****                 USBUART_CyDmaChEnable(channelNum);
1412:Generated_Source\PSoC4/USBUART.c ****             #else
1413:Generated_Source\PSoC4/USBUART.c ****                 /* Configure DMA to transfer data. */
1414:Generated_Source\PSoC4/USBUART.c ****                 (void) CyDmaChDisable(USBUART_DmaChan[epNumber]);
ARM GAS  C:\Users\essele\AppData\Local\Temp\ccbSjPdV.s 			page 45


1415:Generated_Source\PSoC4/USBUART.c ****                 (void) CyDmaTdSetConfiguration(USBUART_DmaTd[epNumber], length, CY_DMA_DISABLE_TD, 
1416:Generated_Source\PSoC4/USBUART.c ****                 (void) CyDmaTdSetAddress(USBUART_DmaTd[epNumber], LO16((uint32) pData), LO16((uint3
1417:Generated_Source\PSoC4/USBUART.c **** 
1418:Generated_Source\PSoC4/USBUART.c ****                 /* Enable DMA channel. */
1419:Generated_Source\PSoC4/USBUART.c ****                 (void) CyDmaChSetInitialTd(USBUART_DmaChan[epNumber], USBUART_DmaTd[epNumber]);
1420:Generated_Source\PSoC4/USBUART.c ****                 (void) CyDmaChEnable(USBUART_DmaChan[epNumber], 1u);
1421:Generated_Source\PSoC4/USBUART.c ****             #endif /* (CY_PSOC4) */
1422:Generated_Source\PSoC4/USBUART.c **** 
1423:Generated_Source\PSoC4/USBUART.c ****                 /* Generate DMA request. */
1424:Generated_Source\PSoC4/USBUART.c ****                 USBUART_ARB_EP_BASE.arbEp[epNumber].epCfg |=  (uint32)  USBUART_ARB_EPX_CFG_DMA_REQ
1425:Generated_Source\PSoC4/USBUART.c ****                 USBUART_ARB_EP_BASE.arbEp[epNumber].epCfg &=  (uint32) ~USBUART_ARB_EPX_CFG_DMA_REQ
1426:Generated_Source\PSoC4/USBUART.c **** 
1427:Generated_Source\PSoC4/USBUART.c ****                 /* IN endpoint will be armed in ARB_ISR(source: IN_BUF_FULL) after first DMA transf
1428:Generated_Source\PSoC4/USBUART.c ****             }
1429:Generated_Source\PSoC4/USBUART.c ****             else
1430:Generated_Source\PSoC4/USBUART.c ****             {
1431:Generated_Source\PSoC4/USBUART.c ****                 /* When zero-length packet: arm IN endpoint directly. */
1432:Generated_Source\PSoC4/USBUART.c ****                 USBUART_SIE_EP_BASE.sieEp[epNumber].epCr0 = USBUART_EP[epNumber].epMode;
1433:Generated_Source\PSoC4/USBUART.c ****             }
1434:Generated_Source\PSoC4/USBUART.c ****         #endif /* (USBUART_EP_MANAGEMENT_DMA_MANUAL) */
1435:Generated_Source\PSoC4/USBUART.c **** 
1436:Generated_Source\PSoC4/USBUART.c ****         #if (USBUART_EP_MANAGEMENT_DMA_AUTO)
1437:Generated_Source\PSoC4/USBUART.c ****             if (pData != NULL)
1438:Generated_Source\PSoC4/USBUART.c ****             {
1439:Generated_Source\PSoC4/USBUART.c ****             #if (CY_PSOC4)
1440:Generated_Source\PSoC4/USBUART.c ****                 uint32 channelNum = (uint32) USBUART_DmaChan[epNumber];
1441:Generated_Source\PSoC4/USBUART.c **** 
1442:Generated_Source\PSoC4/USBUART.c ****                 /* Store address of buffer. */
1443:Generated_Source\PSoC4/USBUART.c ****                 USBUART_DmaEpBufferAddrBackup[epNumber] = (uint32) pData;
1444:Generated_Source\PSoC4/USBUART.c **** 
1445:Generated_Source\PSoC4/USBUART.c ****                 /* Disable DMA channel: start configuration. */
1446:Generated_Source\PSoC4/USBUART.c ****                 USBUART_CyDmaChDisable(channelNum);
1447:Generated_Source\PSoC4/USBUART.c **** 
1448:Generated_Source\PSoC4/USBUART.c ****                 /* Set destination address. */
1449:Generated_Source\PSoC4/USBUART.c ****                 USBUART_CyDmaSetDstAddress(channelNum, USBUART_DMA_DESCR0, (void*) &USBUART_ARB_EP_
1450:Generated_Source\PSoC4/USBUART.c ****                 USBUART_CyDmaSetDstAddress(channelNum, USBUART_DMA_DESCR1, (void*) &USBUART_ARB_EP_
1451:Generated_Source\PSoC4/USBUART.c **** 
1452:Generated_Source\PSoC4/USBUART.c ****                 /* Configure DMA descriptor. */
1453:Generated_Source\PSoC4/USBUART.c ****                 USBUART_CyDmaSetConfiguration(channelNum, USBUART_DMA_DESCR0, USBUART_DMA_COMMON_CF
1454:Generated_Source\PSoC4/USBUART.c ****                                                         CYDMA_BYTE | CYDMA_ELEMENT_WORD | CYDMA_INC
1455:Generated_Source\PSoC4/USBUART.c **** 
1456:Generated_Source\PSoC4/USBUART.c ****                 /* Configure DMA descriptor. */
1457:Generated_Source\PSoC4/USBUART.c ****                 USBUART_CyDmaSetConfiguration(channelNum, USBUART_DMA_DESCR1, USBUART_DMA_COMMON_CF
1458:Generated_Source\PSoC4/USBUART.c ****                                                         CYDMA_BYTE | CYDMA_ELEMENT_WORD | CYDMA_INC
1459:Generated_Source\PSoC4/USBUART.c **** 
1460:Generated_Source\PSoC4/USBUART.c ****                 /* Enable interrupt from DMA channel. */
1461:Generated_Source\PSoC4/USBUART.c ****                 USBUART_CyDmaSetInterruptMask(channelNum);
1462:Generated_Source\PSoC4/USBUART.c **** 
1463:Generated_Source\PSoC4/USBUART.c **** 
1464:Generated_Source\PSoC4/USBUART.c ****                 /* Enable DMA channel: configuration complete. */
1465:Generated_Source\PSoC4/USBUART.c ****                 USBUART_CyDmaChEnable(channelNum);
1466:Generated_Source\PSoC4/USBUART.c **** 
1467:Generated_Source\PSoC4/USBUART.c ****             #else
1468:Generated_Source\PSoC4/USBUART.c ****                 (void) CyDmaChDisable(USBUART_DmaChan[epNumber]);
1469:Generated_Source\PSoC4/USBUART.c **** 
1470:Generated_Source\PSoC4/USBUART.c ****                 #if (USBUART_EP_DMA_AUTO_OPT == 0u)
1471:Generated_Source\PSoC4/USBUART.c ****                     USBUART_inLength[epNumber] = length;
ARM GAS  C:\Users\essele\AppData\Local\Temp\ccbSjPdV.s 			page 46


1472:Generated_Source\PSoC4/USBUART.c ****                     USBUART_inDataPointer[epNumber] = pData;
1473:Generated_Source\PSoC4/USBUART.c **** 
1474:Generated_Source\PSoC4/USBUART.c ****                     /* Configure DMA to send data only for first burst */
1475:Generated_Source\PSoC4/USBUART.c ****                     (void) CyDmaTdSetConfiguration(USBUART_DmaTd[epNumber],
1476:Generated_Source\PSoC4/USBUART.c ****                         (length > USBUART_DMA_BYTES_PER_BURST) ? USBUART_DMA_BYTES_PER_BURST : leng
1477:Generated_Source\PSoC4/USBUART.c ****                         USBUART_DmaNextTd[epNumber], TD_TERMIN_EN | TD_INC_SRC_ADR);
1478:Generated_Source\PSoC4/USBUART.c ****                     (void) CyDmaTdSetAddress(USBUART_DmaTd[epNumber], LO16((uint32) pData),
1479:Generated_Source\PSoC4/USBUART.c ****                                                                                LO16((uint32) &USBUA
1480:Generated_Source\PSoC4/USBUART.c **** 
1481:Generated_Source\PSoC4/USBUART.c ****                     /* The second TD will be executed only when the first one fails.
1482:Generated_Source\PSoC4/USBUART.c ****                     *  The intention of this TD is to generate NRQ interrupt
1483:Generated_Source\PSoC4/USBUART.c ****                     *  and repeat 2 last bytes of the first burst.
1484:Generated_Source\PSoC4/USBUART.c ****                     */
1485:Generated_Source\PSoC4/USBUART.c ****                     (void) CyDmaTdSetConfiguration(USBUART_DmaNextTd[epNumber], 1u,
1486:Generated_Source\PSoC4/USBUART.c ****                                                    USBUART_DmaNextTd[epNumber],
1487:Generated_Source\PSoC4/USBUART.c ****                                                    USBUART_epX_TD_TERMOUT_EN[epNumber]);
1488:Generated_Source\PSoC4/USBUART.c **** 
1489:Generated_Source\PSoC4/USBUART.c ****                     /* Configure DmaNextTd to clear Data Ready status. */
1490:Generated_Source\PSoC4/USBUART.c ****                     (void) CyDmaTdSetAddress(USBUART_DmaNextTd[epNumber], LO16((uint32) &clearInDat
1491:Generated_Source\PSoC4/USBUART.c ****                                                                                    LO16((uint32) &U
1492:Generated_Source\PSoC4/USBUART.c ****                 #else
1493:Generated_Source\PSoC4/USBUART.c ****                     /* Configure DMA to send all data. */
1494:Generated_Source\PSoC4/USBUART.c ****                     (void) CyDmaTdSetConfiguration(USBUART_DmaTd[epNumber], length,
1495:Generated_Source\PSoC4/USBUART.c ****                                                    USBUART_DmaTd[epNumber], TD_TERMIN_EN | TD_INC_S
1496:Generated_Source\PSoC4/USBUART.c ****                     (void) CyDmaTdSetAddress(USBUART_DmaTd[epNumber], LO16((uint32) pData),
1497:Generated_Source\PSoC4/USBUART.c ****                                                                                LO16((uint32) &USBUA
1498:Generated_Source\PSoC4/USBUART.c ****                 #endif /* (USBUART_EP_DMA_AUTO_OPT == 0u) */
1499:Generated_Source\PSoC4/USBUART.c **** 
1500:Generated_Source\PSoC4/USBUART.c ****                 /* Clear any potential pending DMA requests before starting DMA channel to transfer
1501:Generated_Source\PSoC4/USBUART.c ****                 (void) CyDmaClearPendingDrq(USBUART_DmaChan[epNumber]);
1502:Generated_Source\PSoC4/USBUART.c ****                 /* Enable DMA. */
1503:Generated_Source\PSoC4/USBUART.c ****                 (void) CyDmaChSetInitialTd(USBUART_DmaChan[epNumber], USBUART_DmaTd[epNumber]);
1504:Generated_Source\PSoC4/USBUART.c ****                 (void) CyDmaChEnable(USBUART_DmaChan[epNumber], 1u);
1505:Generated_Source\PSoC4/USBUART.c ****             #endif /* (CY_PSOC4) */
1506:Generated_Source\PSoC4/USBUART.c ****             }
1507:Generated_Source\PSoC4/USBUART.c ****             else
1508:Generated_Source\PSoC4/USBUART.c ****             {
1509:Generated_Source\PSoC4/USBUART.c ****                 /* IN endpoint buffer (32 bytes) will shortly be preloaded by DMA. */
1510:Generated_Source\PSoC4/USBUART.c ****                 USBUART_EP[epNumber].apiEpState = USBUART_NO_EVENT_PENDING;
1511:Generated_Source\PSoC4/USBUART.c **** 
1512:Generated_Source\PSoC4/USBUART.c ****                 if (length > 0u)
1513:Generated_Source\PSoC4/USBUART.c ****                 {
1514:Generated_Source\PSoC4/USBUART.c ****                 #if (CY_PSOC4)
1515:Generated_Source\PSoC4/USBUART.c ****                     uint32 lengthDescr0, lengthDescr1;
1516:Generated_Source\PSoC4/USBUART.c ****                     uint32 channelNum = (uint32) USBUART_DmaChan[epNumber];
1517:Generated_Source\PSoC4/USBUART.c **** 
1518:Generated_Source\PSoC4/USBUART.c ****                     /* Get number of full bursts. */
1519:Generated_Source\PSoC4/USBUART.c ****                     USBUART_DmaEpBurstCnt[epNumber] = (uint8) (length / USBUART_DMA_BYTES_PER_BURST
1520:Generated_Source\PSoC4/USBUART.c **** 
1521:Generated_Source\PSoC4/USBUART.c ****                     /* Get number of elements in the last burst. */
1522:Generated_Source\PSoC4/USBUART.c ****                     USBUART_DmaEpLastBurstEl[epNumber] = (uint8) (length % USBUART_DMA_BYTES_PER_BU
1523:Generated_Source\PSoC4/USBUART.c **** 
1524:Generated_Source\PSoC4/USBUART.c ****                     /* Get total number of bursts. */
1525:Generated_Source\PSoC4/USBUART.c ****                     USBUART_DmaEpBurstCnt[epNumber] += (0u != USBUART_DmaEpLastBurstEl[epNumber]) ?
1526:Generated_Source\PSoC4/USBUART.c **** 
1527:Generated_Source\PSoC4/USBUART.c ****                     /* Adjust number of data elements transferred in last burst. */
1528:Generated_Source\PSoC4/USBUART.c ****                     USBUART_DmaEpLastBurstEl[epNumber] = (0u != USBUART_DmaEpLastBurstEl[epNumber])
ARM GAS  C:\Users\essele\AppData\Local\Temp\ccbSjPdV.s 			page 47


1529:Generated_Source\PSoC4/USBUART.c ****                                                                           (USBUART_DmaEpLastBurstEl
1530:Generated_Source\PSoC4/USBUART.c ****                                                                           (USBUART_DMA_BYTES_PER_BU
1531:Generated_Source\PSoC4/USBUART.c **** 
1532:Generated_Source\PSoC4/USBUART.c ****                     /* Get number of data elements to transfer for descriptor 0 and 1. */
1533:Generated_Source\PSoC4/USBUART.c ****                     lengthDescr0 = (1u == USBUART_DmaEpBurstCnt[epNumber]) ? USBUART_DmaEpLastBurst
1534:Generated_Source\PSoC4/USBUART.c ****                     lengthDescr1 = (2u == USBUART_DmaEpBurstCnt[epNumber]) ? USBUART_DmaEpLastBurst
1535:Generated_Source\PSoC4/USBUART.c **** 
1536:Generated_Source\PSoC4/USBUART.c **** 
1537:Generated_Source\PSoC4/USBUART.c ****                     /* Mark which descriptor is last one to execute. */
1538:Generated_Source\PSoC4/USBUART.c ****                     USBUART_DmaEpLastBurstEl[epNumber] |= (0u != (USBUART_DmaEpBurstCnt[epNumber] &
1539:Generated_Source\PSoC4/USBUART.c ****                                                                             USBUART_DMA_DESCR0_MASK
1540:Generated_Source\PSoC4/USBUART.c **** 
1541:Generated_Source\PSoC4/USBUART.c ****                     /* Restore DMA settings for current transfer. */
1542:Generated_Source\PSoC4/USBUART.c ****                     USBUART_CyDmaChDisable(channelNum);
1543:Generated_Source\PSoC4/USBUART.c **** 
1544:Generated_Source\PSoC4/USBUART.c ****                     /* Restore destination address for input endpoint. */
1545:Generated_Source\PSoC4/USBUART.c ****                     USBUART_CyDmaSetSrcAddress(channelNum, USBUART_DMA_DESCR0, (void*) ((uint32) US
1546:Generated_Source\PSoC4/USBUART.c ****                     USBUART_CyDmaSetSrcAddress(channelNum, USBUART_DMA_DESCR1, (void*) ((uint32) US
1547:Generated_Source\PSoC4/USBUART.c ****                                                                                                    
1548:Generated_Source\PSoC4/USBUART.c **** 
1549:Generated_Source\PSoC4/USBUART.c ****                     /* Set number of elements to transfer. */
1550:Generated_Source\PSoC4/USBUART.c ****                     USBUART_CyDmaSetNumDataElements(channelNum, USBUART_DMA_DESCR0, lengthDescr0);
1551:Generated_Source\PSoC4/USBUART.c ****                     USBUART_CyDmaSetNumDataElements(channelNum, USBUART_DMA_DESCR1, lengthDescr1);
1552:Generated_Source\PSoC4/USBUART.c **** 
1553:Generated_Source\PSoC4/USBUART.c ****                     /* Validate descriptor 0 and command to start with it. */
1554:Generated_Source\PSoC4/USBUART.c ****                     USBUART_CyDmaValidateDescriptor(channelNum, USBUART_DMA_DESCR0);
1555:Generated_Source\PSoC4/USBUART.c ****                     USBUART_CyDmaSetDescriptor0Next(channelNum);
1556:Generated_Source\PSoC4/USBUART.c **** 
1557:Generated_Source\PSoC4/USBUART.c ****                     /* Validate descriptor 1. */
1558:Generated_Source\PSoC4/USBUART.c ****                     if (USBUART_DmaEpBurstCnt[epNumber] > 1u)
1559:Generated_Source\PSoC4/USBUART.c ****                     {
1560:Generated_Source\PSoC4/USBUART.c ****                         USBUART_CyDmaValidateDescriptor(channelNum, USBUART_DMA_DESCR1); 
1561:Generated_Source\PSoC4/USBUART.c ****                     }                   
1562:Generated_Source\PSoC4/USBUART.c **** 
1563:Generated_Source\PSoC4/USBUART.c ****                     /* Adjust burst counter taking to account: 2 valid descriptors and interrupt tr
1564:Generated_Source\PSoC4/USBUART.c ****                     USBUART_DmaEpBurstCnt[epNumber] = USBUART_DMA_GET_BURST_CNT(USBUART_DmaEpBurstC
1565:Generated_Source\PSoC4/USBUART.c **** 
1566:Generated_Source\PSoC4/USBUART.c ****                     /* Enable DMA channel: configuration complete. */
1567:Generated_Source\PSoC4/USBUART.c ****                     USBUART_CyDmaChEnable(channelNum);
1568:Generated_Source\PSoC4/USBUART.c **** 
1569:Generated_Source\PSoC4/USBUART.c ****                 #elif (USBUART_EP_DMA_AUTO_OPT == 0u)
1570:Generated_Source\PSoC4/USBUART.c ****                     USBUART_inLength[epNumber]  = length;
1571:Generated_Source\PSoC4/USBUART.c ****                     USBUART_inBufFull[epNumber] = 0u;
1572:Generated_Source\PSoC4/USBUART.c **** 
1573:Generated_Source\PSoC4/USBUART.c ****                     (void) CyDmaChDisable(USBUART_DmaChan[epNumber]);
1574:Generated_Source\PSoC4/USBUART.c ****                     /* Configure DMA to send data only for first burst. */
1575:Generated_Source\PSoC4/USBUART.c ****                     (void) CyDmaTdSetConfiguration(
1576:Generated_Source\PSoC4/USBUART.c ****                         USBUART_DmaTd[epNumber], (length > USBUART_DMA_BYTES_PER_BURST) ?
1577:Generated_Source\PSoC4/USBUART.c ****                         USBUART_DMA_BYTES_PER_BURST : length,
1578:Generated_Source\PSoC4/USBUART.c ****                         USBUART_DmaNextTd[epNumber], TD_TERMIN_EN | TD_INC_SRC_ADR );
1579:Generated_Source\PSoC4/USBUART.c ****                     (void) CyDmaTdSetAddress(USBUART_DmaTd[epNumber], LO16((uint32)  USBUART_inData
1580:Generated_Source\PSoC4/USBUART.c ****                                                                                LO16((uint32) &USBUA
1581:Generated_Source\PSoC4/USBUART.c ****                     /* Clear Any potential pending DMA requests before starting DMA channel to tran
1582:Generated_Source\PSoC4/USBUART.c ****                     (void) CyDmaClearPendingDrq(USBUART_DmaChan[epNumber]);
1583:Generated_Source\PSoC4/USBUART.c ****                     /* Enable DMA. */
1584:Generated_Source\PSoC4/USBUART.c ****                     (void) CyDmaChSetInitialTd(USBUART_DmaChan[epNumber], USBUART_DmaTd[epNumber]);
1585:Generated_Source\PSoC4/USBUART.c ****                     (void) CyDmaChEnable(USBUART_DmaChan[epNumber], 1u);
ARM GAS  C:\Users\essele\AppData\Local\Temp\ccbSjPdV.s 			page 48


1586:Generated_Source\PSoC4/USBUART.c ****                 #endif /* (CY_PSOC4) */
1587:Generated_Source\PSoC4/USBUART.c **** 
1588:Generated_Source\PSoC4/USBUART.c ****                 #if !defined (USBUART_MANUAL_IN_EP_ARM)
1589:Generated_Source\PSoC4/USBUART.c ****                     /* Set IN data ready to generate DMA request to load data into endpoint buffer.
1590:Generated_Source\PSoC4/USBUART.c ****                     USBUART_ARB_EP_BASE.arbEp[epNumber].epCfg |= USBUART_ARB_EPX_CFG_IN_DATA_RDY;
1591:Generated_Source\PSoC4/USBUART.c ****                 #endif  /* (USBUART_MANUAL_IN_EP_ARM) */
1592:Generated_Source\PSoC4/USBUART.c **** 
1593:Generated_Source\PSoC4/USBUART.c ****                     /* IN endpoint will be armed in ARB_ISR(source: IN_BUF_FULL) after first DMA tr
1594:Generated_Source\PSoC4/USBUART.c ****                 }
1595:Generated_Source\PSoC4/USBUART.c ****                 else
1596:Generated_Source\PSoC4/USBUART.c ****                 {
1597:Generated_Source\PSoC4/USBUART.c ****                     /* When zero-length packet: arm IN endpoint directly. */
1598:Generated_Source\PSoC4/USBUART.c ****                     USBUART_SIE_EP_BASE.sieEp[epNumber].epCr0 = USBUART_EP[epNumber].epMode;
1599:Generated_Source\PSoC4/USBUART.c ****                 }
1600:Generated_Source\PSoC4/USBUART.c ****             }
1601:Generated_Source\PSoC4/USBUART.c ****         #endif /* (USBUART_EP_MANAGEMENT_DMA_AUTO) */
1602:Generated_Source\PSoC4/USBUART.c ****     #endif /* (USBUART_EP_MANAGEMENT_MANUAL) */
1603:Generated_Source\PSoC4/USBUART.c ****     }
1604:Generated_Source\PSoC4/USBUART.c **** }
 1093              		.loc 1 1604 0
 1094 0136 C046     		nop
 1095 0138 BD46     		mov	sp, r7
 1096 013a 04B0     		add	sp, sp, #16
 1097              		@ sp needed
 1098 013c B0BD     		pop	{r4, r5, r7, pc}
 1099              	.L60:
 1100 013e C046     		.align	2
 1101              	.L59:
 1102 0140 00000000 		.word	USBUART_EP
 1103 0144 F0FF2B40 		.word	1076625392
 1104 0148 C0012C40 		.word	1076625856
 1105              		.cfi_endproc
 1106              	.LFE12:
 1107              		.size	USBUART_LoadInEP, .-USBUART_LoadInEP
 1108              		.section	.text.USBUART_ReadOutEP,"ax",%progbits
 1109              		.align	2
 1110              		.global	USBUART_ReadOutEP
 1111              		.code	16
 1112              		.thumb_func
 1113              		.type	USBUART_ReadOutEP, %function
 1114              	USBUART_ReadOutEP:
 1115              	.LFB13:
1605:Generated_Source\PSoC4/USBUART.c **** 
1606:Generated_Source\PSoC4/USBUART.c **** 
1607:Generated_Source\PSoC4/USBUART.c **** /*******************************************************************************
1608:Generated_Source\PSoC4/USBUART.c **** * Function Name: USBUART_ReadOutEP
1609:Generated_Source\PSoC4/USBUART.c **** ****************************************************************************//**
1610:Generated_Source\PSoC4/USBUART.c **** *
1611:Generated_Source\PSoC4/USBUART.c **** *   This function performs different functionality depending on the Component’s
1612:Generated_Source\PSoC4/USBUART.c **** *   configured Endpoint Buffer Management. This parameter is defined in the
1613:Generated_Source\PSoC4/USBUART.c **** *   Descriptor Root in Component Configure window.
1614:Generated_Source\PSoC4/USBUART.c **** *
1615:Generated_Source\PSoC4/USBUART.c **** *   *Manual (Static/Dynamic Allocation):*
1616:Generated_Source\PSoC4/USBUART.c **** *   This function moves the specified number of bytes from endpoint buffer to
1617:Generated_Source\PSoC4/USBUART.c **** *   system RAM. The number of bytes actually transferred from endpoint buffer to
1618:Generated_Source\PSoC4/USBUART.c **** *   system RAM is the lesser of the actual number of bytes sent by the host or
1619:Generated_Source\PSoC4/USBUART.c **** *   the number of bytes requested by the length parameter.
ARM GAS  C:\Users\essele\AppData\Local\Temp\ccbSjPdV.s 			page 49


1620:Generated_Source\PSoC4/USBUART.c **** *
1621:Generated_Source\PSoC4/USBUART.c **** *   *DMA with Manual Buffer Management:*
1622:Generated_Source\PSoC4/USBUART.c **** *   Configure DMA to transfer data from endpoint buffer to system RAM. Generate
1623:Generated_Source\PSoC4/USBUART.c **** *   a DMA request. The firmware must wait until the DMA completes the data
1624:Generated_Source\PSoC4/USBUART.c **** *   transfer after calling the USBUART_ReadOutEP() API. For example,
1625:Generated_Source\PSoC4/USBUART.c **** *   by checking EPstate:
1626:Generated_Source\PSoC4/USBUART.c **** *
1627:Generated_Source\PSoC4/USBUART.c **** *   \snippet /USBFS_sut_02.cydsn/main.c checking EPstatey
1628:Generated_Source\PSoC4/USBUART.c **** *
1629:Generated_Source\PSoC4/USBUART.c **** *   The USBFS_EnableOutEP() has to be called to allow host to write data into
1630:Generated_Source\PSoC4/USBUART.c **** *   the endpoint buffer after DMA has completed transfer data from OUT endpoint
1631:Generated_Source\PSoC4/USBUART.c **** *   buffer to SRAM.
1632:Generated_Source\PSoC4/USBUART.c **** *
1633:Generated_Source\PSoC4/USBUART.c **** *   *DMA with Automatic Buffer Management:*
1634:Generated_Source\PSoC4/USBUART.c **** *   Configure DMA. This is required only once and automatically generates DMA
1635:Generated_Source\PSoC4/USBUART.c **** *   requests as data arrives
1636:Generated_Source\PSoC4/USBUART.c **** *
1637:Generated_Source\PSoC4/USBUART.c **** *  \param epNumber: Contains the data endpoint number.
1638:Generated_Source\PSoC4/USBUART.c **** *            Valid values are between 1 and 8.
1639:Generated_Source\PSoC4/USBUART.c **** *  \param pData: A pointer to a data array from which the data for the endpoint
1640:Generated_Source\PSoC4/USBUART.c **** *         space is loaded.
1641:Generated_Source\PSoC4/USBUART.c **** *  \param length: The number of bytes to transfer from the USB Out endpoint and
1642:Generated_Source\PSoC4/USBUART.c **** *          loads it into data array. Valid values are between 0 and 1023. The
1643:Generated_Source\PSoC4/USBUART.c **** *          function moves fewer than the requested number of bytes if the host
1644:Generated_Source\PSoC4/USBUART.c **** *          sends fewer bytes than requested.
1645:Generated_Source\PSoC4/USBUART.c **** *
1646:Generated_Source\PSoC4/USBUART.c **** * \return
1647:Generated_Source\PSoC4/USBUART.c **** *  Number of bytes received, 0 for an invalid endpoint.
1648:Generated_Source\PSoC4/USBUART.c **** *
1649:Generated_Source\PSoC4/USBUART.c **** * \reentrant
1650:Generated_Source\PSoC4/USBUART.c **** *  No.
1651:Generated_Source\PSoC4/USBUART.c **** *
1652:Generated_Source\PSoC4/USBUART.c **** *******************************************************************************/
1653:Generated_Source\PSoC4/USBUART.c **** uint16 USBUART_ReadOutEP(uint8 epNumber, uint8 pData[], uint16 length)
1654:Generated_Source\PSoC4/USBUART.c ****                                                                         
1655:Generated_Source\PSoC4/USBUART.c **** {
 1116              		.loc 1 1655 0
 1117              		.cfi_startproc
 1118              		@ args = 0, pretend = 0, frame = 16
 1119              		@ frame_needed = 1, uses_anonymous_args = 0
 1120 0000 80B5     		push	{r7, lr}
 1121              		.cfi_def_cfa_offset 8
 1122              		.cfi_offset 7, -8
 1123              		.cfi_offset 14, -4
 1124 0002 84B0     		sub	sp, sp, #16
 1125              		.cfi_def_cfa_offset 24
 1126 0004 00AF     		add	r7, sp, #0
 1127              		.cfi_def_cfa_register 7
 1128 0006 3960     		str	r1, [r7]
 1129 0008 1100     		movs	r1, r2
 1130 000a FB1D     		adds	r3, r7, #7
 1131 000c 021C     		adds	r2, r0, #0
 1132 000e 1A70     		strb	r2, [r3]
 1133 0010 3B1D     		adds	r3, r7, #4
 1134 0012 0A1C     		adds	r2, r1, #0
 1135 0014 1A80     		strh	r2, [r3]
1656:Generated_Source\PSoC4/USBUART.c ****     if ((pData != NULL) && (epNumber > USBUART_EP0) && (epNumber < USBUART_MAX_EP))
ARM GAS  C:\Users\essele\AppData\Local\Temp\ccbSjPdV.s 			page 50


 1136              		.loc 1 1656 0
 1137 0016 3B68     		ldr	r3, [r7]
 1138 0018 002B     		cmp	r3, #0
 1139 001a 45D0     		beq	.L62
 1140              		.loc 1 1656 0 is_stmt 0 discriminator 1
 1141 001c FB1D     		adds	r3, r7, #7
 1142 001e 1B78     		ldrb	r3, [r3]
 1143 0020 002B     		cmp	r3, #0
 1144 0022 41D0     		beq	.L62
 1145              		.loc 1 1656 0 discriminator 2
 1146 0024 FB1D     		adds	r3, r7, #7
 1147 0026 1B78     		ldrb	r3, [r3]
 1148 0028 082B     		cmp	r3, #8
 1149 002a 3DD8     		bhi	.L62
1657:Generated_Source\PSoC4/USBUART.c ****     {
1658:Generated_Source\PSoC4/USBUART.c ****     #if (!USBUART_EP_MANAGEMENT_DMA_AUTO)
1659:Generated_Source\PSoC4/USBUART.c ****         /* Adjust requested length to available data. */
1660:Generated_Source\PSoC4/USBUART.c ****         length = (length > USBUART_GetEPCount(epNumber)) ? USBUART_GetEPCount(epNumber) : length;
 1150              		.loc 1 1660 0 is_stmt 1
 1151 002c FB1D     		adds	r3, r7, #7
 1152 002e 1B78     		ldrb	r3, [r3]
 1153 0030 1800     		movs	r0, r3
 1154 0032 FFF7FEFF 		bl	USBUART_GetEPCount
 1155 0036 0300     		movs	r3, r0
 1156 0038 1A00     		movs	r2, r3
 1157 003a 3B1D     		adds	r3, r7, #4
 1158 003c 1B88     		ldrh	r3, [r3]
 1159 003e 9342     		cmp	r3, r2
 1160 0040 07D9     		bls	.L63
 1161              		.loc 1 1660 0 is_stmt 0 discriminator 1
 1162 0042 FB1D     		adds	r3, r7, #7
 1163 0044 1B78     		ldrb	r3, [r3]
 1164 0046 1800     		movs	r0, r3
 1165 0048 FFF7FEFF 		bl	USBUART_GetEPCount
 1166 004c 0300     		movs	r3, r0
 1167 004e 1A00     		movs	r2, r3
 1168 0050 01E0     		b	.L64
 1169              	.L63:
 1170              		.loc 1 1660 0 discriminator 2
 1171 0052 3B1D     		adds	r3, r7, #4
 1172 0054 1A88     		ldrh	r2, [r3]
 1173              	.L64:
 1174              		.loc 1 1660 0 discriminator 4
 1175 0056 3B1D     		adds	r3, r7, #4
 1176 0058 1A80     		strh	r2, [r3]
 1177              	.LBB3:
1661:Generated_Source\PSoC4/USBUART.c ****     #endif /* (!USBUART_EP_MANAGEMENT_DMA_AUTO) */
1662:Generated_Source\PSoC4/USBUART.c **** 
1663:Generated_Source\PSoC4/USBUART.c ****     #if (USBUART_EP_MANAGEMENT_MANUAL)
1664:Generated_Source\PSoC4/USBUART.c ****         {
1665:Generated_Source\PSoC4/USBUART.c ****             /* Copy data using arbiter data register. */
1666:Generated_Source\PSoC4/USBUART.c ****             uint16 i;
1667:Generated_Source\PSoC4/USBUART.c ****             for (i = 0u; i < length; ++i)
 1178              		.loc 1 1667 0 is_stmt 1 discriminator 4
 1179 005a 0E23     		movs	r3, #14
 1180 005c FB18     		adds	r3, r7, r3
 1181 005e 0022     		movs	r2, #0
ARM GAS  C:\Users\essele\AppData\Local\Temp\ccbSjPdV.s 			page 51


 1182 0060 1A80     		strh	r2, [r3]
 1183 0062 14E0     		b	.L65
 1184              	.L66:
1668:Generated_Source\PSoC4/USBUART.c ****             {
1669:Generated_Source\PSoC4/USBUART.c ****                 pData[i] = (uint8) USBUART_ARB_EP_BASE.arbEp[epNumber].rwDr;
 1185              		.loc 1 1669 0 discriminator 3
 1186 0064 0E23     		movs	r3, #14
 1187 0066 FB18     		adds	r3, r7, r3
 1188 0068 1B88     		ldrh	r3, [r3]
 1189 006a 3A68     		ldr	r2, [r7]
 1190 006c D218     		adds	r2, r2, r3
 1191 006e 1349     		ldr	r1, .L69
 1192 0070 FB1D     		adds	r3, r7, #7
 1193 0072 1B78     		ldrb	r3, [r3]
 1194 0074 9B01     		lsls	r3, r3, #6
 1195 0076 CB18     		adds	r3, r1, r3
 1196 0078 2033     		adds	r3, r3, #32
 1197 007a 1B68     		ldr	r3, [r3]
 1198 007c DBB2     		uxtb	r3, r3
 1199 007e 1370     		strb	r3, [r2]
1667:Generated_Source\PSoC4/USBUART.c ****             {
 1200              		.loc 1 1667 0 discriminator 3
 1201 0080 0E23     		movs	r3, #14
 1202 0082 FB18     		adds	r3, r7, r3
 1203 0084 0E22     		movs	r2, #14
 1204 0086 BA18     		adds	r2, r7, r2
 1205 0088 1288     		ldrh	r2, [r2]
 1206 008a 0132     		adds	r2, r2, #1
 1207 008c 1A80     		strh	r2, [r3]
 1208              	.L65:
1667:Generated_Source\PSoC4/USBUART.c ****             {
 1209              		.loc 1 1667 0 is_stmt 0 discriminator 1
 1210 008e 0E23     		movs	r3, #14
 1211 0090 FA18     		adds	r2, r7, r3
 1212 0092 3B1D     		adds	r3, r7, #4
 1213 0094 1288     		ldrh	r2, [r2]
 1214 0096 1B88     		ldrh	r3, [r3]
 1215 0098 9A42     		cmp	r2, r3
 1216 009a E3D3     		bcc	.L66
 1217              	.LBE3:
1670:Generated_Source\PSoC4/USBUART.c ****             }
1671:Generated_Source\PSoC4/USBUART.c ****         }
1672:Generated_Source\PSoC4/USBUART.c **** 
1673:Generated_Source\PSoC4/USBUART.c ****         /* Arm OUT endpoint after data has been copied from endpoint buffer. */
1674:Generated_Source\PSoC4/USBUART.c ****         USBUART_EnableOutEP(epNumber);
 1218              		.loc 1 1674 0 is_stmt 1
 1219 009c FB1D     		adds	r3, r7, #7
 1220 009e 1B78     		ldrb	r3, [r3]
 1221 00a0 1800     		movs	r0, r3
 1222 00a2 FFF7FEFF 		bl	USBUART_EnableOutEP
 1223 00a6 02E0     		b	.L67
 1224              	.L62:
1675:Generated_Source\PSoC4/USBUART.c ****     #else
1676:Generated_Source\PSoC4/USBUART.c **** 
1677:Generated_Source\PSoC4/USBUART.c ****         #if (CY_PSOC3 || CY_PSOC5LP)
1678:Generated_Source\PSoC4/USBUART.c ****             /* Initialize DMA if it was not initialized. */
1679:Generated_Source\PSoC4/USBUART.c ****             if (DMA_INVALID_TD == USBUART_DmaTd[epNumber])
ARM GAS  C:\Users\essele\AppData\Local\Temp\ccbSjPdV.s 			page 52


1680:Generated_Source\PSoC4/USBUART.c ****             {
1681:Generated_Source\PSoC4/USBUART.c ****                 USBUART_InitEP_DMA(epNumber, pData);
1682:Generated_Source\PSoC4/USBUART.c ****             }
1683:Generated_Source\PSoC4/USBUART.c ****         #endif /* (CY_PSOC3 || CY_PSOC5LP) */
1684:Generated_Source\PSoC4/USBUART.c **** 
1685:Generated_Source\PSoC4/USBUART.c ****         #if (USBUART_EP_MANAGEMENT_DMA_MANUAL)
1686:Generated_Source\PSoC4/USBUART.c ****         #if (CY_PSOC4)
1687:Generated_Source\PSoC4/USBUART.c ****         {
1688:Generated_Source\PSoC4/USBUART.c ****             uint32 channelNum = (uint32) USBUART_DmaChan[epNumber];
1689:Generated_Source\PSoC4/USBUART.c **** 
1690:Generated_Source\PSoC4/USBUART.c ****             /* Disable DMA channel: start configuration. */
1691:Generated_Source\PSoC4/USBUART.c ****             USBUART_CyDmaChDisable(channelNum);
1692:Generated_Source\PSoC4/USBUART.c **** 
1693:Generated_Source\PSoC4/USBUART.c ****             /* Configure source and destination. */
1694:Generated_Source\PSoC4/USBUART.c ****             USBUART_CyDmaSetSrcAddress(channelNum, USBUART_DMA_DESCR0, (void*) &USBUART_ARB_EP_BASE
1695:Generated_Source\PSoC4/USBUART.c ****             USBUART_CyDmaSetDstAddress(channelNum, USBUART_DMA_DESCR0, (void*) pData);
1696:Generated_Source\PSoC4/USBUART.c **** 
1697:Generated_Source\PSoC4/USBUART.c ****             /* Configure DMA descriptor. */
1698:Generated_Source\PSoC4/USBUART.c ****             USBUART_CyDmaSetConfiguration(channelNum, USBUART_DMA_DESCR0, USBUART_DMA_COMMON_CFG | 
1699:Generated_Source\PSoC4/USBUART.c ****                                                     CYDMA_BYTE | CYDMA_WORD_ELEMENT | CYDMA_INC_DST
1700:Generated_Source\PSoC4/USBUART.c **** 
1701:Generated_Source\PSoC4/USBUART.c ****             /* Validate descriptor to execute on following DMA request. */
1702:Generated_Source\PSoC4/USBUART.c ****             USBUART_CyDmaValidateDescriptor(channelNum, USBUART_DMA_DESCR0);
1703:Generated_Source\PSoC4/USBUART.c **** 
1704:Generated_Source\PSoC4/USBUART.c ****             /* Enable DMA channel: configuration complete. */
1705:Generated_Source\PSoC4/USBUART.c ****             USBUART_CyDmaChEnable(channelNum);
1706:Generated_Source\PSoC4/USBUART.c ****         }
1707:Generated_Source\PSoC4/USBUART.c ****         #else
1708:Generated_Source\PSoC4/USBUART.c ****             /* Configure DMA to transfer data. */
1709:Generated_Source\PSoC4/USBUART.c ****             (void) CyDmaChDisable(USBUART_DmaChan[epNumber]);
1710:Generated_Source\PSoC4/USBUART.c ****             (void) CyDmaTdSetConfiguration(USBUART_DmaTd[epNumber], length, CY_DMA_DISABLE_TD, TD_T
1711:Generated_Source\PSoC4/USBUART.c ****             (void) CyDmaTdSetAddress(USBUART_DmaTd[epNumber], LO16((uint32) &USBUART_ARB_EP_BASE.ar
1712:Generated_Source\PSoC4/USBUART.c **** 
1713:Generated_Source\PSoC4/USBUART.c ****             /* Enable DMA channel. */
1714:Generated_Source\PSoC4/USBUART.c ****             (void) CyDmaChSetInitialTd(USBUART_DmaChan[epNumber], USBUART_DmaTd[epNumber]);
1715:Generated_Source\PSoC4/USBUART.c ****             (void) CyDmaChEnable(USBUART_DmaChan[epNumber], 1u);
1716:Generated_Source\PSoC4/USBUART.c ****         #endif /* (CY_PSOC4) */
1717:Generated_Source\PSoC4/USBUART.c **** 
1718:Generated_Source\PSoC4/USBUART.c ****             /* Generate DMA request. */
1719:Generated_Source\PSoC4/USBUART.c ****             USBUART_ARB_EP_BASE.arbEp[epNumber].epCfg |=  (uint32)  USBUART_ARB_EPX_CFG_DMA_REQ;
1720:Generated_Source\PSoC4/USBUART.c ****             USBUART_ARB_EP_BASE.arbEp[epNumber].epCfg &=  (uint32) ~USBUART_ARB_EPX_CFG_DMA_REQ;
1721:Generated_Source\PSoC4/USBUART.c **** 
1722:Generated_Source\PSoC4/USBUART.c ****             /* OUT endpoint has to be armed again by user when DMA transfers have been completed.
1723:Generated_Source\PSoC4/USBUART.c ****             * NO_EVENT_PENDING: notifies that data has been copied from endpoint buffer.
1724:Generated_Source\PSoC4/USBUART.c ****             */
1725:Generated_Source\PSoC4/USBUART.c **** 
1726:Generated_Source\PSoC4/USBUART.c ****         #endif /* (USBUART_EP_MANAGEMENT_DMA_MANUAL) */
1727:Generated_Source\PSoC4/USBUART.c **** 
1728:Generated_Source\PSoC4/USBUART.c ****         #if (USBUART_EP_MANAGEMENT_DMA_AUTO)
1729:Generated_Source\PSoC4/USBUART.c ****         #if (CY_PSOC4)
1730:Generated_Source\PSoC4/USBUART.c ****         {
1731:Generated_Source\PSoC4/USBUART.c ****             uint32 channelNum = (uint32) USBUART_DmaChan[epNumber];
1732:Generated_Source\PSoC4/USBUART.c ****             uint32 lengthDescr0, lengthDescr1;
1733:Generated_Source\PSoC4/USBUART.c **** 
1734:Generated_Source\PSoC4/USBUART.c ****             /* Get number of full bursts. */
1735:Generated_Source\PSoC4/USBUART.c ****             USBUART_DmaEpBurstCnt[epNumber] = (uint8) (length / USBUART_DMA_BYTES_PER_BURST);
1736:Generated_Source\PSoC4/USBUART.c **** 
ARM GAS  C:\Users\essele\AppData\Local\Temp\ccbSjPdV.s 			page 53


1737:Generated_Source\PSoC4/USBUART.c ****             /* Get number of elements in the last burst. */
1738:Generated_Source\PSoC4/USBUART.c ****             USBUART_DmaEpLastBurstEl[epNumber] = (uint8) (length % USBUART_DMA_BYTES_PER_BURST);
1739:Generated_Source\PSoC4/USBUART.c **** 
1740:Generated_Source\PSoC4/USBUART.c ****             /* Get total number of bursts. */
1741:Generated_Source\PSoC4/USBUART.c ****             USBUART_DmaEpBurstCnt[epNumber] += (0u != USBUART_DmaEpLastBurstEl[epNumber]) ? 1u : 0u
1742:Generated_Source\PSoC4/USBUART.c **** 
1743:Generated_Source\PSoC4/USBUART.c ****             /* Adjust number of the data elements transfered in last burst. */
1744:Generated_Source\PSoC4/USBUART.c ****             USBUART_DmaEpLastBurstEl[epNumber] = (0u != USBUART_DmaEpLastBurstEl[epNumber]) ?
1745:Generated_Source\PSoC4/USBUART.c ****                                                                   (USBUART_DmaEpLastBurstEl[epNumbe
1746:Generated_Source\PSoC4/USBUART.c ****                                                                   (USBUART_DMA_BYTES_PER_BURST - 1u
1747:Generated_Source\PSoC4/USBUART.c **** 
1748:Generated_Source\PSoC4/USBUART.c ****             /* Get number of data elements to transfer for descriptor 0 and 1. */
1749:Generated_Source\PSoC4/USBUART.c ****             lengthDescr0 = (1u == USBUART_DmaEpBurstCnt[epNumber]) ? USBUART_DmaEpLastBurstEl[epNum
1750:Generated_Source\PSoC4/USBUART.c ****             lengthDescr1 = (2u == USBUART_DmaEpBurstCnt[epNumber]) ? USBUART_DmaEpLastBurstEl[epNum
1751:Generated_Source\PSoC4/USBUART.c **** 
1752:Generated_Source\PSoC4/USBUART.c ****             /* Mark if revert number of data elements in descriptor after transfer completion. */
1753:Generated_Source\PSoC4/USBUART.c ****             USBUART_DmaEpLastBurstEl[epNumber] |= (USBUART_DmaEpBurstCnt[epNumber] > 2u) ? USBUART_
1754:Generated_Source\PSoC4/USBUART.c **** 
1755:Generated_Source\PSoC4/USBUART.c ****             /* Mark last descriptor to be executed. */
1756:Generated_Source\PSoC4/USBUART.c ****             USBUART_DmaEpLastBurstEl[epNumber] |= (0u != (USBUART_DmaEpBurstCnt[epNumber] & 0x1u)) 
1757:Generated_Source\PSoC4/USBUART.c ****                                                                     USBUART_DMA_DESCR0_MASK : USBUA
1758:Generated_Source\PSoC4/USBUART.c **** 
1759:Generated_Source\PSoC4/USBUART.c ****             /* Store address of buffer and burst counter for endpoint. */
1760:Generated_Source\PSoC4/USBUART.c ****             USBUART_DmaEpBufferAddrBackup[epNumber] = (uint32) pData;
1761:Generated_Source\PSoC4/USBUART.c ****             USBUART_DmaEpBurstCntBackup[epNumber]   = USBUART_DmaEpBurstCnt[epNumber];
1762:Generated_Source\PSoC4/USBUART.c **** 
1763:Generated_Source\PSoC4/USBUART.c ****             /* Adjust burst counter taking to account: 2 valid descriptors and interrupt trigger af
1764:Generated_Source\PSoC4/USBUART.c ****             USBUART_DmaEpBurstCnt[epNumber] = USBUART_DMA_GET_BURST_CNT(USBUART_DmaEpBurstCnt[epNum
1765:Generated_Source\PSoC4/USBUART.c **** 
1766:Generated_Source\PSoC4/USBUART.c ****             /* Disable DMA channel: start configuration. */
1767:Generated_Source\PSoC4/USBUART.c ****             USBUART_CyDmaChDisable(channelNum);
1768:Generated_Source\PSoC4/USBUART.c **** 
1769:Generated_Source\PSoC4/USBUART.c ****             /* Set destination address. */
1770:Generated_Source\PSoC4/USBUART.c ****             USBUART_CyDmaSetSrcAddress(channelNum, USBUART_DMA_DESCR0, (void*) &USBUART_ARB_EP_BASE
1771:Generated_Source\PSoC4/USBUART.c ****             USBUART_CyDmaSetSrcAddress(channelNum, USBUART_DMA_DESCR1, (void*) &USBUART_ARB_EP_BASE
1772:Generated_Source\PSoC4/USBUART.c **** 
1773:Generated_Source\PSoC4/USBUART.c ****             USBUART_CyDmaSetDstAddress(channelNum, USBUART_DMA_DESCR0, (void*) ((uint32) pData));
1774:Generated_Source\PSoC4/USBUART.c ****             USBUART_CyDmaSetDstAddress(channelNum, USBUART_DMA_DESCR1, (void*) ((uint32) pData + US
1775:Generated_Source\PSoC4/USBUART.c **** 
1776:Generated_Source\PSoC4/USBUART.c ****             /* Configure DMA descriptor. */
1777:Generated_Source\PSoC4/USBUART.c ****             USBUART_CyDmaSetConfiguration(channelNum, USBUART_DMA_DESCR0, USBUART_DMA_COMMON_CFG  |
1778:Generated_Source\PSoC4/USBUART.c ****                                                     CYDMA_BYTE | CYDMA_WORD_ELEMENT | CYDMA_INC_DST
1779:Generated_Source\PSoC4/USBUART.c **** 
1780:Generated_Source\PSoC4/USBUART.c ****             /* Configure DMA descriptor. */
1781:Generated_Source\PSoC4/USBUART.c ****             USBUART_CyDmaSetConfiguration(channelNum, USBUART_DMA_DESCR1, USBUART_DMA_COMMON_CFG  |
1782:Generated_Source\PSoC4/USBUART.c ****                                                     CYDMA_BYTE | CYDMA_WORD_ELEMENT | CYDMA_INC_DST
1783:Generated_Source\PSoC4/USBUART.c **** 
1784:Generated_Source\PSoC4/USBUART.c ****             /* Enable interrupt from DMA channel. */
1785:Generated_Source\PSoC4/USBUART.c ****             USBUART_CyDmaSetInterruptMask(channelNum);
1786:Generated_Source\PSoC4/USBUART.c **** 
1787:Generated_Source\PSoC4/USBUART.c ****             /* Validate DMA descriptor 0 and 1. */
1788:Generated_Source\PSoC4/USBUART.c ****             USBUART_CyDmaValidateDescriptor(channelNum, USBUART_DMA_DESCR0);
1789:Generated_Source\PSoC4/USBUART.c **** 
1790:Generated_Source\PSoC4/USBUART.c ****             if (USBUART_DmaEpBurstCntBackup[epNumber] > 1u)
1791:Generated_Source\PSoC4/USBUART.c ****             {
1792:Generated_Source\PSoC4/USBUART.c ****                 USBUART_CyDmaValidateDescriptor(channelNum, USBUART_DMA_DESCR1);
1793:Generated_Source\PSoC4/USBUART.c ****             }
ARM GAS  C:\Users\essele\AppData\Local\Temp\ccbSjPdV.s 			page 54


1794:Generated_Source\PSoC4/USBUART.c **** 
1795:Generated_Source\PSoC4/USBUART.c ****             /* Enable DMA channel: configuration complete. */
1796:Generated_Source\PSoC4/USBUART.c ****             USBUART_CyDmaChEnable(channelNum);
1797:Generated_Source\PSoC4/USBUART.c ****         }
1798:Generated_Source\PSoC4/USBUART.c ****         #else
1799:Generated_Source\PSoC4/USBUART.c ****             (void) CyDmaChDisable(USBUART_DmaChan[epNumber]);
1800:Generated_Source\PSoC4/USBUART.c ****             (void) CyDmaTdSetConfiguration(USBUART_DmaTd[epNumber], length,  USBUART_DmaTd[epNumber
1801:Generated_Source\PSoC4/USBUART.c ****             (void) CyDmaTdSetAddress(USBUART_DmaTd[epNumber], LO16((uint32) &USBUART_ARB_EP_BASE.ar
1802:Generated_Source\PSoC4/USBUART.c **** 
1803:Generated_Source\PSoC4/USBUART.c ****             /* Clear Any potential pending DMA requests before starting DMA channel to transfer dat
1804:Generated_Source\PSoC4/USBUART.c ****             (void) CyDmaClearPendingDrq(USBUART_DmaChan[epNumber]);
1805:Generated_Source\PSoC4/USBUART.c **** 
1806:Generated_Source\PSoC4/USBUART.c ****             /* Enable DMA channel. */
1807:Generated_Source\PSoC4/USBUART.c ****             (void) CyDmaChSetInitialTd(USBUART_DmaChan[epNumber], USBUART_DmaTd[epNumber]);
1808:Generated_Source\PSoC4/USBUART.c ****             (void) CyDmaChEnable(USBUART_DmaChan[epNumber], 1u);
1809:Generated_Source\PSoC4/USBUART.c ****         #endif /* (CY_PSOC4) */
1810:Generated_Source\PSoC4/USBUART.c **** 
1811:Generated_Source\PSoC4/USBUART.c ****             /* OUT endpoint has to be armed again by user when DMA transfers have been completed.
1812:Generated_Source\PSoC4/USBUART.c ****             * NO_EVENT_PENDING: notifies that data has been copied from endpoint buffer.
1813:Generated_Source\PSoC4/USBUART.c ****             */
1814:Generated_Source\PSoC4/USBUART.c **** 
1815:Generated_Source\PSoC4/USBUART.c ****         #endif /* (USBUART_EP_MANAGEMENT_DMA_AUTO) */
1816:Generated_Source\PSoC4/USBUART.c ****     #endif /* (USBUART_EP_MANAGEMENT_MANUAL) */
1817:Generated_Source\PSoC4/USBUART.c ****     }
1818:Generated_Source\PSoC4/USBUART.c ****     else
1819:Generated_Source\PSoC4/USBUART.c ****     {
1820:Generated_Source\PSoC4/USBUART.c ****         length = 0u;
 1225              		.loc 1 1820 0
 1226 00a8 3B1D     		adds	r3, r7, #4
 1227 00aa 0022     		movs	r2, #0
 1228 00ac 1A80     		strh	r2, [r3]
 1229              	.L67:
1821:Generated_Source\PSoC4/USBUART.c ****     }
1822:Generated_Source\PSoC4/USBUART.c **** 
1823:Generated_Source\PSoC4/USBUART.c ****     return (length);
 1230              		.loc 1 1823 0
 1231 00ae 3B1D     		adds	r3, r7, #4
 1232 00b0 1B88     		ldrh	r3, [r3]
1824:Generated_Source\PSoC4/USBUART.c **** }
 1233              		.loc 1 1824 0
 1234 00b2 1800     		movs	r0, r3
 1235 00b4 BD46     		mov	sp, r7
 1236 00b6 04B0     		add	sp, sp, #16
 1237              		@ sp needed
 1238 00b8 80BD     		pop	{r7, pc}
 1239              	.L70:
 1240 00ba C046     		.align	2
 1241              	.L69:
 1242 00bc C0012C40 		.word	1076625856
 1243              		.cfi_endproc
 1244              	.LFE13:
 1245              		.size	USBUART_ReadOutEP, .-USBUART_ReadOutEP
 1246              		.section	.text.USBUART_LoadInEP16,"ax",%progbits
 1247              		.align	2
 1248              		.global	USBUART_LoadInEP16
 1249              		.code	16
 1250              		.thumb_func
ARM GAS  C:\Users\essele\AppData\Local\Temp\ccbSjPdV.s 			page 55


 1251              		.type	USBUART_LoadInEP16, %function
 1252              	USBUART_LoadInEP16:
 1253              	.LFB14:
1825:Generated_Source\PSoC4/USBUART.c **** 
1826:Generated_Source\PSoC4/USBUART.c **** 
1827:Generated_Source\PSoC4/USBUART.c **** #if (USBUART_16BITS_EP_ACCESS_ENABLE)
1828:Generated_Source\PSoC4/USBUART.c **** /*******************************************************************************
1829:Generated_Source\PSoC4/USBUART.c **** * Function Name: USBUART_LoadInEP16
1830:Generated_Source\PSoC4/USBUART.c **** ****************************************************************************//**
1831:Generated_Source\PSoC4/USBUART.c **** *
1832:Generated_Source\PSoC4/USBUART.c **** *  This function performs different functionality depending on the Component’s
1833:Generated_Source\PSoC4/USBUART.c **** *  configured Endpoint Buffer Management. This parameter is defined in
1834:Generated_Source\PSoC4/USBUART.c **** *  the Descriptor Root in Component Configure window.
1835:Generated_Source\PSoC4/USBUART.c **** *
1836:Generated_Source\PSoC4/USBUART.c **** *  *Manual (Static/Dynamic Allocation):*
1837:Generated_Source\PSoC4/USBUART.c **** *  This function loads and enables the specified USB data endpoint for an IN
1838:Generated_Source\PSoC4/USBUART.c **** *  data transfer.
1839:Generated_Source\PSoC4/USBUART.c **** *
1840:Generated_Source\PSoC4/USBUART.c **** *  *DMA with Manual Buffer Management:*
1841:Generated_Source\PSoC4/USBUART.c **** *  Configures DMA for a data transfer from system RAM to endpoint buffer.
1842:Generated_Source\PSoC4/USBUART.c **** *  Generates request for a transfer.
1843:Generated_Source\PSoC4/USBUART.c **** *
1844:Generated_Source\PSoC4/USBUART.c **** *  *DMA with Automatic Buffer Management:*
1845:Generated_Source\PSoC4/USBUART.c **** *  Configures DMA. This is required only once, so it is done only when parameter
1846:Generated_Source\PSoC4/USBUART.c **** *  pData is not NULL. When the pData pointer is NULL, the function skips this
1847:Generated_Source\PSoC4/USBUART.c **** *  task. Sets Data ready status: This generates the first DMA transfer and
1848:Generated_Source\PSoC4/USBUART.c **** *  prepares data in endpoint buffer.
1849:Generated_Source\PSoC4/USBUART.c **** *
1850:Generated_Source\PSoC4/USBUART.c **** *  \param epNumber Contains the data endpoint number.
1851:Generated_Source\PSoC4/USBUART.c **** *        Valid values are between 1 and 8.
1852:Generated_Source\PSoC4/USBUART.c **** *  \param *pData A pointer to a data array from which the data for the endpoint
1853:Generated_Source\PSoC4/USBUART.c **** *        space is loaded. It shall be ensured that this pointer address is even
1854:Generated_Source\PSoC4/USBUART.c **** *        to ensure the 16-bit transfer is aligned to even address. Else, a hard
1855:Generated_Source\PSoC4/USBUART.c **** *        fault condition can occur.
1856:Generated_Source\PSoC4/USBUART.c **** *  \param length The number of bytes to transfer from the array and then send as
1857:Generated_Source\PSoC4/USBUART.c **** *        a result of an IN request. Valid values are between 0 and 512 (1023 for
1858:Generated_Source\PSoC4/USBUART.c **** *        DMA with Automatic Buffer Management mode). The value 512 is applicable
1859:Generated_Source\PSoC4/USBUART.c **** *        if only one endpoint is used.
1860:Generated_Source\PSoC4/USBUART.c **** *
1861:Generated_Source\PSoC4/USBUART.c **** * \reentrant
1862:Generated_Source\PSoC4/USBUART.c **** *  No.
1863:Generated_Source\PSoC4/USBUART.c **** *
1864:Generated_Source\PSoC4/USBUART.c **** *******************************************************************************/
1865:Generated_Source\PSoC4/USBUART.c **** void USBUART_LoadInEP16(uint8 epNumber, const uint8 pData[], uint16 length)
1866:Generated_Source\PSoC4/USBUART.c **** {
 1254              		.loc 1 1866 0
 1255              		.cfi_startproc
 1256              		@ args = 0, pretend = 0, frame = 16
 1257              		@ frame_needed = 1, uses_anonymous_args = 0
 1258 0000 B0B5     		push	{r4, r5, r7, lr}
 1259              		.cfi_def_cfa_offset 16
 1260              		.cfi_offset 4, -16
 1261              		.cfi_offset 5, -12
 1262              		.cfi_offset 7, -8
 1263              		.cfi_offset 14, -4
 1264 0002 84B0     		sub	sp, sp, #16
 1265              		.cfi_def_cfa_offset 32
ARM GAS  C:\Users\essele\AppData\Local\Temp\ccbSjPdV.s 			page 56


 1266 0004 00AF     		add	r7, sp, #0
 1267              		.cfi_def_cfa_register 7
 1268 0006 3960     		str	r1, [r7]
 1269 0008 1100     		movs	r1, r2
 1270 000a FB1D     		adds	r3, r7, #7
 1271 000c 021C     		adds	r2, r0, #0
 1272 000e 1A70     		strb	r2, [r3]
 1273 0010 3B1D     		adds	r3, r7, #4
 1274 0012 0A1C     		adds	r2, r1, #0
 1275 0014 1A80     		strh	r2, [r3]
1867:Generated_Source\PSoC4/USBUART.c ****     /* Check array alignment on half-word boundary. */
1868:Generated_Source\PSoC4/USBUART.c ****     CYASSERT(0u == (((uint32) pData) & 0x01u));
 1276              		.loc 1 1868 0
 1277 0016 3B68     		ldr	r3, [r7]
 1278 0018 0122     		movs	r2, #1
 1279 001a 1340     		ands	r3, r2
 1280 001c 02D0     		beq	.L72
 1281              		.loc 1 1868 0 is_stmt 0 discriminator 1
 1282 001e 0020     		movs	r0, #0
 1283 0020 FFF7FEFF 		bl	CyHalt
 1284              	.L72:
1869:Generated_Source\PSoC4/USBUART.c **** 
1870:Generated_Source\PSoC4/USBUART.c ****     if ((epNumber > USBUART_EP0) && (epNumber < USBUART_MAX_EP))
 1285              		.loc 1 1870 0 is_stmt 1
 1286 0024 FB1D     		adds	r3, r7, #7
 1287 0026 1B78     		ldrb	r3, [r3]
 1288 0028 002B     		cmp	r3, #0
 1289 002a 00D1     		bne	.LCB1114
 1290 002c 99E0     		b	.L78	@long jump
 1291              	.LCB1114:
 1292              		.loc 1 1870 0 is_stmt 0 discriminator 1
 1293 002e FB1D     		adds	r3, r7, #7
 1294 0030 1B78     		ldrb	r3, [r3]
 1295 0032 082B     		cmp	r3, #8
 1296 0034 00D9     		bls	.LCB1118
 1297 0036 94E0     		b	.L78	@long jump
 1298              	.LCB1118:
1871:Generated_Source\PSoC4/USBUART.c ****     {
1872:Generated_Source\PSoC4/USBUART.c ****     #if (!USBUART_EP_MANAGEMENT_DMA_AUTO)
1873:Generated_Source\PSoC4/USBUART.c ****         /* Limit length to available buffer USB IP buffer size. */
1874:Generated_Source\PSoC4/USBUART.c ****         if (length > (USBUART_EPX_DATA_BUF_MAX - USBUART_EP[epNumber].buffOffset))
 1299              		.loc 1 1874 0 is_stmt 1
 1300 0038 3B1D     		adds	r3, r7, #4
 1301 003a 1988     		ldrh	r1, [r3]
 1302 003c FB1D     		adds	r3, r7, #7
 1303 003e 1A78     		ldrb	r2, [r3]
 1304 0040 4A48     		ldr	r0, .L79
 1305 0042 1300     		movs	r3, r2
 1306 0044 5B00     		lsls	r3, r3, #1
 1307 0046 9B18     		adds	r3, r3, r2
 1308 0048 9B00     		lsls	r3, r3, #2
 1309 004a C318     		adds	r3, r0, r3
 1310 004c 0633     		adds	r3, r3, #6
 1311 004e 1B88     		ldrh	r3, [r3]
 1312 0050 9BB2     		uxth	r3, r3
 1313 0052 1A00     		movs	r2, r3
 1314 0054 8023     		movs	r3, #128
ARM GAS  C:\Users\essele\AppData\Local\Temp\ccbSjPdV.s 			page 57


 1315 0056 9B00     		lsls	r3, r3, #2
 1316 0058 9B1A     		subs	r3, r3, r2
 1317 005a 9942     		cmp	r1, r3
 1318 005c 0FD9     		bls	.L74
1875:Generated_Source\PSoC4/USBUART.c ****         {
1876:Generated_Source\PSoC4/USBUART.c ****             length = USBUART_EPX_DATA_BUF_MAX - USBUART_EP[epNumber].buffOffset;
 1319              		.loc 1 1876 0
 1320 005e FB1D     		adds	r3, r7, #7
 1321 0060 1A78     		ldrb	r2, [r3]
 1322 0062 4249     		ldr	r1, .L79
 1323 0064 1300     		movs	r3, r2
 1324 0066 5B00     		lsls	r3, r3, #1
 1325 0068 9B18     		adds	r3, r3, r2
 1326 006a 9B00     		lsls	r3, r3, #2
 1327 006c CB18     		adds	r3, r1, r3
 1328 006e 0633     		adds	r3, r3, #6
 1329 0070 1B88     		ldrh	r3, [r3]
 1330 0072 9AB2     		uxth	r2, r3
 1331 0074 3B1D     		adds	r3, r7, #4
 1332 0076 8021     		movs	r1, #128
 1333 0078 8900     		lsls	r1, r1, #2
 1334 007a 8A1A     		subs	r2, r1, r2
 1335 007c 1A80     		strh	r2, [r3]
 1336              	.L74:
1877:Generated_Source\PSoC4/USBUART.c ****         }
1878:Generated_Source\PSoC4/USBUART.c ****     #endif /* (!USBUART_EP_MANAGEMENT_DMA_AUTO) */
1879:Generated_Source\PSoC4/USBUART.c **** 
1880:Generated_Source\PSoC4/USBUART.c ****         /* Set count and data toggle. */
1881:Generated_Source\PSoC4/USBUART.c ****         USBUART_SIE_EP_BASE.sieEp[epNumber].epCnt0 = (uint32) HI8(length) | USBUART_EP[epNumber].ep
 1337              		.loc 1 1881 0
 1338 007e 3C4D     		ldr	r5, .L79+4
 1339 0080 FB1D     		adds	r3, r7, #7
 1340 0082 1978     		ldrb	r1, [r3]
 1341 0084 3B1D     		adds	r3, r7, #4
 1342 0086 1B88     		ldrh	r3, [r3]
 1343 0088 1B0A     		lsrs	r3, r3, #8
 1344 008a 9BB2     		uxth	r3, r3
 1345 008c D8B2     		uxtb	r0, r3
 1346 008e FB1D     		adds	r3, r7, #7
 1347 0090 1A78     		ldrb	r2, [r3]
 1348 0092 364C     		ldr	r4, .L79
 1349 0094 1300     		movs	r3, r2
 1350 0096 5B00     		lsls	r3, r3, #1
 1351 0098 9B18     		adds	r3, r3, r2
 1352 009a 9B00     		lsls	r3, r3, #2
 1353 009c E318     		adds	r3, r4, r3
 1354 009e 0333     		adds	r3, r3, #3
 1355 00a0 1B78     		ldrb	r3, [r3]
 1356 00a2 DBB2     		uxtb	r3, r3
 1357 00a4 0343     		orrs	r3, r0
 1358 00a6 DBB2     		uxtb	r3, r3
 1359 00a8 1A00     		movs	r2, r3
 1360 00aa 8B01     		lsls	r3, r1, #6
 1361 00ac 5A51     		str	r2, [r3, r5]
1882:Generated_Source\PSoC4/USBUART.c ****         USBUART_SIE_EP_BASE.sieEp[epNumber].epCnt1 = (uint32) LO8(length);
 1362              		.loc 1 1882 0
 1363 00ae 3049     		ldr	r1, .L79+4
ARM GAS  C:\Users\essele\AppData\Local\Temp\ccbSjPdV.s 			page 58


 1364 00b0 FB1D     		adds	r3, r7, #7
 1365 00b2 1B78     		ldrb	r3, [r3]
 1366 00b4 3A1D     		adds	r2, r7, #4
 1367 00b6 1288     		ldrh	r2, [r2]
 1368 00b8 D2B2     		uxtb	r2, r2
 1369 00ba 9B01     		lsls	r3, r3, #6
 1370 00bc CB18     		adds	r3, r1, r3
 1371 00be 0433     		adds	r3, r3, #4
 1372 00c0 1A60     		str	r2, [r3]
1883:Generated_Source\PSoC4/USBUART.c **** 
1884:Generated_Source\PSoC4/USBUART.c ****         /* Adjust requested length: 2 bytes are handled at one data register access. */
1885:Generated_Source\PSoC4/USBUART.c ****         length += (length & 0x01u);
 1373              		.loc 1 1885 0
 1374 00c2 3B1D     		adds	r3, r7, #4
 1375 00c4 1B88     		ldrh	r3, [r3]
 1376 00c6 0122     		movs	r2, #1
 1377 00c8 1340     		ands	r3, r2
 1378 00ca 99B2     		uxth	r1, r3
 1379 00cc 3B1D     		adds	r3, r7, #4
 1380 00ce 3A1D     		adds	r2, r7, #4
 1381 00d0 1288     		ldrh	r2, [r2]
 1382 00d2 8A18     		adds	r2, r1, r2
 1383 00d4 1A80     		strh	r2, [r3]
1886:Generated_Source\PSoC4/USBUART.c **** 
1887:Generated_Source\PSoC4/USBUART.c ****     #if (USBUART_EP_MANAGEMENT_MANUAL)
1888:Generated_Source\PSoC4/USBUART.c ****         if (NULL != pData)
 1384              		.loc 1 1888 0
 1385 00d6 3B68     		ldr	r3, [r7]
 1386 00d8 002B     		cmp	r3, #0
 1387 00da 24D0     		beq	.L75
 1388              	.LBB4:
1889:Generated_Source\PSoC4/USBUART.c ****         {
1890:Generated_Source\PSoC4/USBUART.c ****             /* Convert uint8 array to uint16. */
1891:Generated_Source\PSoC4/USBUART.c ****             const uint16 *dataBuf = (uint16 *) pData;
 1389              		.loc 1 1891 0
 1390 00dc 3B68     		ldr	r3, [r7]
 1391 00de BB60     		str	r3, [r7, #8]
1892:Generated_Source\PSoC4/USBUART.c **** 
1893:Generated_Source\PSoC4/USBUART.c ****             /* Copy data using 16-bits arbiter data register. */
1894:Generated_Source\PSoC4/USBUART.c ****             uint16 i;
1895:Generated_Source\PSoC4/USBUART.c ****             for (i = 0u; i < (length >> 1u); ++i)
 1392              		.loc 1 1895 0
 1393 00e0 0E23     		movs	r3, #14
 1394 00e2 FB18     		adds	r3, r7, r3
 1395 00e4 0022     		movs	r2, #0
 1396 00e6 1A80     		strh	r2, [r3]
 1397 00e8 14E0     		b	.L76
 1398              	.L77:
1896:Generated_Source\PSoC4/USBUART.c ****             {
1897:Generated_Source\PSoC4/USBUART.c ****                 USBUART_ARB_EP16_BASE.arbEp[epNumber].rwDr16 = dataBuf[i];
 1399              		.loc 1 1897 0 discriminator 3
 1400 00ea 2248     		ldr	r0, .L79+8
 1401 00ec FB1D     		adds	r3, r7, #7
 1402 00ee 1B78     		ldrb	r3, [r3]
 1403 00f0 0E22     		movs	r2, #14
 1404 00f2 BA18     		adds	r2, r7, r2
 1405 00f4 1288     		ldrh	r2, [r2]
ARM GAS  C:\Users\essele\AppData\Local\Temp\ccbSjPdV.s 			page 59


 1406 00f6 5200     		lsls	r2, r2, #1
 1407 00f8 B968     		ldr	r1, [r7, #8]
 1408 00fa 8A18     		adds	r2, r1, r2
 1409 00fc 1288     		ldrh	r2, [r2]
 1410 00fe 9B01     		lsls	r3, r3, #6
 1411 0100 C318     		adds	r3, r0, r3
 1412 0102 1033     		adds	r3, r3, #16
 1413 0104 1A60     		str	r2, [r3]
1895:Generated_Source\PSoC4/USBUART.c ****             {
 1414              		.loc 1 1895 0 discriminator 3
 1415 0106 0E23     		movs	r3, #14
 1416 0108 FB18     		adds	r3, r7, r3
 1417 010a 0E22     		movs	r2, #14
 1418 010c BA18     		adds	r2, r7, r2
 1419 010e 1288     		ldrh	r2, [r2]
 1420 0110 0132     		adds	r2, r2, #1
 1421 0112 1A80     		strh	r2, [r3]
 1422              	.L76:
1895:Generated_Source\PSoC4/USBUART.c ****             {
 1423              		.loc 1 1895 0 is_stmt 0 discriminator 1
 1424 0114 3B1D     		adds	r3, r7, #4
 1425 0116 1B88     		ldrh	r3, [r3]
 1426 0118 5B08     		lsrs	r3, r3, #1
 1427 011a 9BB2     		uxth	r3, r3
 1428 011c 0E22     		movs	r2, #14
 1429 011e BA18     		adds	r2, r7, r2
 1430 0120 1288     		ldrh	r2, [r2]
 1431 0122 9A42     		cmp	r2, r3
 1432 0124 E1D3     		bcc	.L77
 1433              	.L75:
 1434              	.LBE4:
1898:Generated_Source\PSoC4/USBUART.c ****             }
1899:Generated_Source\PSoC4/USBUART.c ****         }
1900:Generated_Source\PSoC4/USBUART.c **** 
1901:Generated_Source\PSoC4/USBUART.c ****         /* IN endpoint buffer is full - read to be read. */
1902:Generated_Source\PSoC4/USBUART.c ****         USBUART_EP[epNumber].apiEpState = USBUART_NO_EVENT_PENDING;
 1435              		.loc 1 1902 0 is_stmt 1
 1436 0126 FB1D     		adds	r3, r7, #7
 1437 0128 1A78     		ldrb	r2, [r3]
 1438 012a 1049     		ldr	r1, .L79
 1439 012c 1300     		movs	r3, r2
 1440 012e 5B00     		lsls	r3, r3, #1
 1441 0130 9B18     		adds	r3, r3, r2
 1442 0132 9B00     		lsls	r3, r3, #2
 1443 0134 CB18     		adds	r3, r1, r3
 1444 0136 0133     		adds	r3, r3, #1
 1445 0138 0022     		movs	r2, #0
 1446 013a 1A70     		strb	r2, [r3]
1903:Generated_Source\PSoC4/USBUART.c **** 
1904:Generated_Source\PSoC4/USBUART.c ****         /* Arm IN endpoint. */
1905:Generated_Source\PSoC4/USBUART.c ****         USBUART_SIE_EP_BASE.sieEp[epNumber].epCr0 = USBUART_EP[epNumber].epMode;
 1447              		.loc 1 1905 0
 1448 013c 0C4C     		ldr	r4, .L79+4
 1449 013e FB1D     		adds	r3, r7, #7
 1450 0140 1978     		ldrb	r1, [r3]
 1451 0142 FB1D     		adds	r3, r7, #7
 1452 0144 1A78     		ldrb	r2, [r3]
ARM GAS  C:\Users\essele\AppData\Local\Temp\ccbSjPdV.s 			page 60


 1453 0146 0948     		ldr	r0, .L79
 1454 0148 1300     		movs	r3, r2
 1455 014a 5B00     		lsls	r3, r3, #1
 1456 014c 9B18     		adds	r3, r3, r2
 1457 014e 9B00     		lsls	r3, r3, #2
 1458 0150 C318     		adds	r3, r0, r3
 1459 0152 0533     		adds	r3, r3, #5
 1460 0154 1B78     		ldrb	r3, [r3]
 1461 0156 DBB2     		uxtb	r3, r3
 1462 0158 1A00     		movs	r2, r3
 1463 015a 8B01     		lsls	r3, r1, #6
 1464 015c E318     		adds	r3, r4, r3
 1465 015e 0833     		adds	r3, r3, #8
 1466 0160 1A60     		str	r2, [r3]
 1467              	.L78:
1906:Generated_Source\PSoC4/USBUART.c **** 
1907:Generated_Source\PSoC4/USBUART.c ****     #else
1908:Generated_Source\PSoC4/USBUART.c **** 
1909:Generated_Source\PSoC4/USBUART.c ****         #if (USBUART_EP_MANAGEMENT_DMA_MANUAL)
1910:Generated_Source\PSoC4/USBUART.c ****             /* IN endpoint buffer will be fully loaded by DMA shortly. */
1911:Generated_Source\PSoC4/USBUART.c ****             USBUART_EP[epNumber].apiEpState = USBUART_NO_EVENT_PENDING;
1912:Generated_Source\PSoC4/USBUART.c **** 
1913:Generated_Source\PSoC4/USBUART.c ****             if ((pData != NULL) && (length > 0u))
1914:Generated_Source\PSoC4/USBUART.c ****             {
1915:Generated_Source\PSoC4/USBUART.c ****                 uint32 channelNum = (uint32) USBUART_DmaChan[epNumber];
1916:Generated_Source\PSoC4/USBUART.c **** 
1917:Generated_Source\PSoC4/USBUART.c ****                 /* Disable DMA channel: start configuration. */
1918:Generated_Source\PSoC4/USBUART.c ****                 USBUART_CyDmaChDisable(channelNum);
1919:Generated_Source\PSoC4/USBUART.c **** 
1920:Generated_Source\PSoC4/USBUART.c ****                 /* Configure source and destination. */
1921:Generated_Source\PSoC4/USBUART.c ****                 USBUART_CyDmaSetSrcAddress(channelNum, USBUART_DMA_DESCR0, (void*) pData);
1922:Generated_Source\PSoC4/USBUART.c ****                 USBUART_CyDmaSetDstAddress(channelNum, USBUART_DMA_DESCR0, (void*) &USBUART_ARB_EP1
1923:Generated_Source\PSoC4/USBUART.c **** 
1924:Generated_Source\PSoC4/USBUART.c ****                 /* Configure DMA descriptor. */
1925:Generated_Source\PSoC4/USBUART.c ****                 length = (length >> 1u) - 1u;
1926:Generated_Source\PSoC4/USBUART.c ****                 USBUART_CyDmaSetConfiguration(channelNum, USBUART_DMA_DESCR0, USBUART_DMA_COMMON_CF
1927:Generated_Source\PSoC4/USBUART.c ****                                                         CYDMA_HALFWORD | CYDMA_ELEMENT_WORD | CYDMA
1928:Generated_Source\PSoC4/USBUART.c **** 
1929:Generated_Source\PSoC4/USBUART.c ****                 /* Validate descriptor to execute on following DMA request. */
1930:Generated_Source\PSoC4/USBUART.c ****                 USBUART_CyDmaValidateDescriptor(channelNum, USBUART_DMA_DESCR0);
1931:Generated_Source\PSoC4/USBUART.c **** 
1932:Generated_Source\PSoC4/USBUART.c ****                 /* Enable DMA channel: configuration complete. */
1933:Generated_Source\PSoC4/USBUART.c ****                 USBUART_CyDmaChEnable(channelNum);
1934:Generated_Source\PSoC4/USBUART.c **** 
1935:Generated_Source\PSoC4/USBUART.c ****                 /* Generate DMA request. */
1936:Generated_Source\PSoC4/USBUART.c ****                 USBUART_ARB_EP_BASE.arbEp[epNumber].epCfg |=  (uint32)  USBUART_ARB_EPX_CFG_DMA_REQ
1937:Generated_Source\PSoC4/USBUART.c ****                 USBUART_ARB_EP_BASE.arbEp[epNumber].epCfg &=  (uint32) ~USBUART_ARB_EPX_CFG_DMA_REQ
1938:Generated_Source\PSoC4/USBUART.c **** 
1939:Generated_Source\PSoC4/USBUART.c ****                 /* IN endpoint will be armed in ARB_ISR(source: IN_BUF_FULL) after first DMA transf
1940:Generated_Source\PSoC4/USBUART.c ****             }
1941:Generated_Source\PSoC4/USBUART.c ****             else
1942:Generated_Source\PSoC4/USBUART.c ****             {
1943:Generated_Source\PSoC4/USBUART.c ****                 /* When zero-length packet: arm IN endpoint directly. */
1944:Generated_Source\PSoC4/USBUART.c ****                 USBUART_SIE_EP_BASE.sieEp[epNumber].epCr0 = USBUART_EP[epNumber].epMode;
1945:Generated_Source\PSoC4/USBUART.c ****             }
1946:Generated_Source\PSoC4/USBUART.c ****         #endif /* (USBUART_EP_MANAGEMENT_DMA_MANUAL) */
1947:Generated_Source\PSoC4/USBUART.c **** 
ARM GAS  C:\Users\essele\AppData\Local\Temp\ccbSjPdV.s 			page 61


1948:Generated_Source\PSoC4/USBUART.c ****         #if (USBUART_EP_MANAGEMENT_DMA_AUTO)
1949:Generated_Source\PSoC4/USBUART.c ****             if (pData != NULL)
1950:Generated_Source\PSoC4/USBUART.c ****             {
1951:Generated_Source\PSoC4/USBUART.c ****                 uint32 channelNum = (uint32) USBUART_DmaChan[epNumber];
1952:Generated_Source\PSoC4/USBUART.c **** 
1953:Generated_Source\PSoC4/USBUART.c ****                 /* Store address of buffer. */
1954:Generated_Source\PSoC4/USBUART.c ****                 USBUART_DmaEpBufferAddrBackup[epNumber] = (uint32) pData;
1955:Generated_Source\PSoC4/USBUART.c **** 
1956:Generated_Source\PSoC4/USBUART.c ****                 /* Disable DMA channel: start configuration. */
1957:Generated_Source\PSoC4/USBUART.c ****                 USBUART_CyDmaChDisable(channelNum);
1958:Generated_Source\PSoC4/USBUART.c **** 
1959:Generated_Source\PSoC4/USBUART.c ****                 /* Set destination address. */
1960:Generated_Source\PSoC4/USBUART.c ****                 USBUART_CyDmaSetDstAddress(channelNum, USBUART_DMA_DESCR0, (void*) &USBUART_ARB_EP1
1961:Generated_Source\PSoC4/USBUART.c ****                 USBUART_CyDmaSetDstAddress(channelNum, USBUART_DMA_DESCR1, (void*) &USBUART_ARB_EP1
1962:Generated_Source\PSoC4/USBUART.c **** 
1963:Generated_Source\PSoC4/USBUART.c ****                 /* Configure DMA descriptor. */
1964:Generated_Source\PSoC4/USBUART.c ****                 USBUART_CyDmaSetConfiguration(channelNum, USBUART_DMA_DESCR0, USBUART_DMA_COMMON_CF
1965:Generated_Source\PSoC4/USBUART.c ****                                                         CYDMA_HALFWORD | CYDMA_ELEMENT_WORD | CYDMA
1966:Generated_Source\PSoC4/USBUART.c **** 
1967:Generated_Source\PSoC4/USBUART.c ****                 /* Configure DMA descriptor. */
1968:Generated_Source\PSoC4/USBUART.c ****                 USBUART_CyDmaSetConfiguration(channelNum, USBUART_DMA_DESCR1, USBUART_DMA_COMMON_CF
1969:Generated_Source\PSoC4/USBUART.c ****                                                         CYDMA_HALFWORD | CYDMA_ELEMENT_WORD | CYDMA
1970:Generated_Source\PSoC4/USBUART.c **** 
1971:Generated_Source\PSoC4/USBUART.c ****                 /* Enable interrupt from DMA channel. */
1972:Generated_Source\PSoC4/USBUART.c ****                 USBUART_CyDmaSetInterruptMask(channelNum);
1973:Generated_Source\PSoC4/USBUART.c **** 
1974:Generated_Source\PSoC4/USBUART.c ****                 /* Enable DMA channel: configuration complete. */
1975:Generated_Source\PSoC4/USBUART.c ****                 USBUART_CyDmaChEnable(channelNum);
1976:Generated_Source\PSoC4/USBUART.c ****             }
1977:Generated_Source\PSoC4/USBUART.c ****             else
1978:Generated_Source\PSoC4/USBUART.c ****             {
1979:Generated_Source\PSoC4/USBUART.c ****                 /* IN endpoint buffer (32 bytes) will shortly be preloaded by DMA. */
1980:Generated_Source\PSoC4/USBUART.c ****                 USBUART_EP[epNumber].apiEpState = USBUART_NO_EVENT_PENDING;
1981:Generated_Source\PSoC4/USBUART.c **** 
1982:Generated_Source\PSoC4/USBUART.c ****                 if (length > 0u)
1983:Generated_Source\PSoC4/USBUART.c ****                 {
1984:Generated_Source\PSoC4/USBUART.c ****                     uint32 lengthDescr0, lengthDescr1;
1985:Generated_Source\PSoC4/USBUART.c ****                     uint32 channelNum = (uint32) USBUART_DmaChan[epNumber];
1986:Generated_Source\PSoC4/USBUART.c **** 
1987:Generated_Source\PSoC4/USBUART.c ****                     /* Get number of full bursts. */
1988:Generated_Source\PSoC4/USBUART.c ****                     USBUART_DmaEpBurstCnt[epNumber] = (uint8) (length / USBUART_DMA_BYTES_PER_BURST
1989:Generated_Source\PSoC4/USBUART.c **** 
1990:Generated_Source\PSoC4/USBUART.c ****                     /* Get number of elements in the last burst. */
1991:Generated_Source\PSoC4/USBUART.c ****                     USBUART_DmaEpLastBurstEl[epNumber] = (uint8) (length % USBUART_DMA_BYTES_PER_BU
1992:Generated_Source\PSoC4/USBUART.c **** 
1993:Generated_Source\PSoC4/USBUART.c ****                     /* Get total number of bursts. */
1994:Generated_Source\PSoC4/USBUART.c ****                     USBUART_DmaEpBurstCnt[epNumber] += (0u != USBUART_DmaEpLastBurstEl[epNumber]) ?
1995:Generated_Source\PSoC4/USBUART.c **** 
1996:Generated_Source\PSoC4/USBUART.c ****                     /* Adjust number of data elements transferred in last burst. */
1997:Generated_Source\PSoC4/USBUART.c ****                     USBUART_DmaEpLastBurstEl[epNumber] = (0u != USBUART_DmaEpLastBurstEl[epNumber])
1998:Generated_Source\PSoC4/USBUART.c ****                                                                           ((USBUART_DmaEpLastBurstE
1999:Generated_Source\PSoC4/USBUART.c ****                                                                            (USBUART_DMA_HALFWORDS_P
2000:Generated_Source\PSoC4/USBUART.c **** 
2001:Generated_Source\PSoC4/USBUART.c ****                     /* Get number of data elements to transfer for descriptor 0 and 1. */
2002:Generated_Source\PSoC4/USBUART.c ****                     lengthDescr0 = (1u == USBUART_DmaEpBurstCnt[epNumber]) ? USBUART_DmaEpLastBurst
2003:Generated_Source\PSoC4/USBUART.c ****                     lengthDescr1 = (2u == USBUART_DmaEpBurstCnt[epNumber]) ? USBUART_DmaEpLastBurst
2004:Generated_Source\PSoC4/USBUART.c **** 
ARM GAS  C:\Users\essele\AppData\Local\Temp\ccbSjPdV.s 			page 62


2005:Generated_Source\PSoC4/USBUART.c ****                     /* Mark which descriptor is last one to execute. */
2006:Generated_Source\PSoC4/USBUART.c ****                     USBUART_DmaEpLastBurstEl[epNumber] |= (0u != (USBUART_DmaEpBurstCnt[epNumber] &
2007:Generated_Source\PSoC4/USBUART.c ****                                                                             USBUART_DMA_DESCR0_MASK
2008:Generated_Source\PSoC4/USBUART.c **** 
2009:Generated_Source\PSoC4/USBUART.c ****                     /* Restore DMA settings for current transfer. */
2010:Generated_Source\PSoC4/USBUART.c ****                     USBUART_CyDmaChDisable(channelNum);
2011:Generated_Source\PSoC4/USBUART.c **** 
2012:Generated_Source\PSoC4/USBUART.c ****                     /* Restore destination address for input endpoint. */
2013:Generated_Source\PSoC4/USBUART.c ****                     USBUART_CyDmaSetSrcAddress(channelNum, USBUART_DMA_DESCR0, (void*) ((uint32) US
2014:Generated_Source\PSoC4/USBUART.c ****                     USBUART_CyDmaSetSrcAddress(channelNum, USBUART_DMA_DESCR1, (void*) ((uint32) US
2015:Generated_Source\PSoC4/USBUART.c ****                                                                                                    
2016:Generated_Source\PSoC4/USBUART.c **** 
2017:Generated_Source\PSoC4/USBUART.c ****                     /* Set number of elements to transfer. */
2018:Generated_Source\PSoC4/USBUART.c ****                     USBUART_CyDmaSetNumDataElements(channelNum, USBUART_DMA_DESCR0, lengthDescr0);
2019:Generated_Source\PSoC4/USBUART.c ****                     USBUART_CyDmaSetNumDataElements(channelNum, USBUART_DMA_DESCR1, lengthDescr1);
2020:Generated_Source\PSoC4/USBUART.c **** 
2021:Generated_Source\PSoC4/USBUART.c ****                     /* Validate descriptor 0 and command to start with it. */
2022:Generated_Source\PSoC4/USBUART.c ****                     USBUART_CyDmaValidateDescriptor(channelNum, USBUART_DMA_DESCR0);
2023:Generated_Source\PSoC4/USBUART.c ****                     USBUART_CyDmaSetDescriptor0Next(channelNum);
2024:Generated_Source\PSoC4/USBUART.c **** 
2025:Generated_Source\PSoC4/USBUART.c ****                     /* Validate descriptor 1. */
2026:Generated_Source\PSoC4/USBUART.c ****                     if (USBUART_DmaEpBurstCnt[epNumber] > 1u)
2027:Generated_Source\PSoC4/USBUART.c ****                     {
2028:Generated_Source\PSoC4/USBUART.c ****                         USBUART_CyDmaValidateDescriptor(channelNum, USBUART_DMA_DESCR1);
2029:Generated_Source\PSoC4/USBUART.c ****                     }
2030:Generated_Source\PSoC4/USBUART.c **** 
2031:Generated_Source\PSoC4/USBUART.c ****                     /* Adjust burst counter taking to account: 2 valid descriptors and interrupt tr
2032:Generated_Source\PSoC4/USBUART.c ****                     USBUART_DmaEpBurstCnt[epNumber] = USBUART_DMA_GET_BURST_CNT(USBUART_DmaEpBurstC
2033:Generated_Source\PSoC4/USBUART.c **** 
2034:Generated_Source\PSoC4/USBUART.c ****                     /* Enable DMA channel: configuration complete. */
2035:Generated_Source\PSoC4/USBUART.c ****                     USBUART_CyDmaChEnable(channelNum);
2036:Generated_Source\PSoC4/USBUART.c **** 
2037:Generated_Source\PSoC4/USBUART.c ****                 #if !defined (USBUART_MANUAL_IN_EP_ARM)
2038:Generated_Source\PSoC4/USBUART.c ****                     /* Set IN data ready to generate DMA request to load data into endpoint buffer.
2039:Generated_Source\PSoC4/USBUART.c ****                     USBUART_ARB_EP_BASE.arbEp[epNumber].epCfg |= USBUART_ARB_EPX_CFG_IN_DATA_RDY;
2040:Generated_Source\PSoC4/USBUART.c ****                 #endif  /* (USBUART_MANUAL_IN_EP_ARM) */
2041:Generated_Source\PSoC4/USBUART.c **** 
2042:Generated_Source\PSoC4/USBUART.c ****                     /* IN endpoint will be armed in ARB_ISR(source: IN_BUF_FULL) after first DMA tr
2043:Generated_Source\PSoC4/USBUART.c ****                 }
2044:Generated_Source\PSoC4/USBUART.c ****                 else
2045:Generated_Source\PSoC4/USBUART.c ****                 {
2046:Generated_Source\PSoC4/USBUART.c ****                     /* When zero-length packet: arm IN endpoint directly. */
2047:Generated_Source\PSoC4/USBUART.c ****                     USBUART_SIE_EP_BASE.sieEp[epNumber].epCr0 = USBUART_EP[epNumber].epMode;
2048:Generated_Source\PSoC4/USBUART.c ****                 }
2049:Generated_Source\PSoC4/USBUART.c ****             }
2050:Generated_Source\PSoC4/USBUART.c ****         #endif /* (USBUART_EP_MANAGEMENT_DMA_AUTO) */
2051:Generated_Source\PSoC4/USBUART.c ****     #endif /* (USBUART_EP_MANAGEMENT_MANUAL) */
2052:Generated_Source\PSoC4/USBUART.c ****     }
2053:Generated_Source\PSoC4/USBUART.c **** }
 1468              		.loc 1 2053 0
 1469 0162 C046     		nop
 1470 0164 BD46     		mov	sp, r7
 1471 0166 04B0     		add	sp, sp, #16
 1472              		@ sp needed
 1473 0168 B0BD     		pop	{r4, r5, r7, pc}
 1474              	.L80:
 1475 016a C046     		.align	2
ARM GAS  C:\Users\essele\AppData\Local\Temp\ccbSjPdV.s 			page 63


 1476              	.L79:
 1477 016c 00000000 		.word	USBUART_EP
 1478 0170 F0FF2B40 		.word	1076625392
 1479 0174 D0112C40 		.word	1076629968
 1480              		.cfi_endproc
 1481              	.LFE14:
 1482              		.size	USBUART_LoadInEP16, .-USBUART_LoadInEP16
 1483              		.section	.text.USBUART_ReadOutEP16,"ax",%progbits
 1484              		.align	2
 1485              		.global	USBUART_ReadOutEP16
 1486              		.code	16
 1487              		.thumb_func
 1488              		.type	USBUART_ReadOutEP16, %function
 1489              	USBUART_ReadOutEP16:
 1490              	.LFB15:
2054:Generated_Source\PSoC4/USBUART.c **** 
2055:Generated_Source\PSoC4/USBUART.c **** 
2056:Generated_Source\PSoC4/USBUART.c **** /*******************************************************************************
2057:Generated_Source\PSoC4/USBUART.c **** * Function Name: USBUART_ReadOutEP16
2058:Generated_Source\PSoC4/USBUART.c **** ****************************************************************************//**
2059:Generated_Source\PSoC4/USBUART.c **** *
2060:Generated_Source\PSoC4/USBUART.c **** *   This function performs different functionality depending on the Component’s
2061:Generated_Source\PSoC4/USBUART.c **** *   configured Endpoint Buffer Management. This parameter is defined in the
2062:Generated_Source\PSoC4/USBUART.c **** *   Descriptor Root in Component Configure window.
2063:Generated_Source\PSoC4/USBUART.c **** *
2064:Generated_Source\PSoC4/USBUART.c **** *   *Manual (Static/Dynamic Allocation):*
2065:Generated_Source\PSoC4/USBUART.c **** *   This function moves the specified number of bytes from endpoint buffer to
2066:Generated_Source\PSoC4/USBUART.c **** *   system RAM. The number of bytes actually transferred from endpoint buffer to
2067:Generated_Source\PSoC4/USBUART.c **** *   system RAM is the lesser of the actual number of bytes sent by the host or
2068:Generated_Source\PSoC4/USBUART.c **** *   the number of bytes requested by the length parameter.
2069:Generated_Source\PSoC4/USBUART.c **** *
2070:Generated_Source\PSoC4/USBUART.c **** *   *DMA with Manual Buffer Management:*
2071:Generated_Source\PSoC4/USBUART.c **** *   Configure DMA to transfer data from endpoint buffer to system RAM. Generate
2072:Generated_Source\PSoC4/USBUART.c **** *   a DMA request. The firmware must wait until the DMA completes the data
2073:Generated_Source\PSoC4/USBUART.c **** *   transfer after calling the USBUART_ReadOutEP() API. For example,
2074:Generated_Source\PSoC4/USBUART.c **** *   by checking EPstate:
2075:Generated_Source\PSoC4/USBUART.c **** *
2076:Generated_Source\PSoC4/USBUART.c **** *   \snippet /USBFS_sut_02.cydsn/main.c checking EPstatey
2077:Generated_Source\PSoC4/USBUART.c **** *
2078:Generated_Source\PSoC4/USBUART.c **** *   The USBFS_EnableOutEP() has to be called to allow host to write data into
2079:Generated_Source\PSoC4/USBUART.c **** *   the endpoint buffer after DMA has completed transfer data from OUT endpoint
2080:Generated_Source\PSoC4/USBUART.c **** *   buffer to SRAM.
2081:Generated_Source\PSoC4/USBUART.c **** *
2082:Generated_Source\PSoC4/USBUART.c **** *   *DMA with Automatic Buffer Management:*
2083:Generated_Source\PSoC4/USBUART.c **** *   Configure DMA. This is required only once and automatically generates DMA
2084:Generated_Source\PSoC4/USBUART.c **** *   requests as data arrives
2085:Generated_Source\PSoC4/USBUART.c **** *
2086:Generated_Source\PSoC4/USBUART.c **** *  \param epNumber: Contains the data endpoint number.
2087:Generated_Source\PSoC4/USBUART.c **** *         Valid values are between 1 and 8.
2088:Generated_Source\PSoC4/USBUART.c **** *  \param pData: A pointer to a data array into which the data for the endpoint
2089:Generated_Source\PSoC4/USBUART.c **** *         space is copied. It shall be ensured that this pointer address is
2090:Generated_Source\PSoC4/USBUART.c **** *         even to ensure the 16-bit transfer is aligned to even address. Else,
2091:Generated_Source\PSoC4/USBUART.c **** *         a hard fault condition can occur.
2092:Generated_Source\PSoC4/USBUART.c **** *  \param length: The number of bytes to transfer from the USB Out endpoint and
2093:Generated_Source\PSoC4/USBUART.c **** *         loads it into data array. Valid values are between 0 and 1023. The
2094:Generated_Source\PSoC4/USBUART.c **** *         function moves fewer than the requested number of bytes if the host
2095:Generated_Source\PSoC4/USBUART.c **** *         sends fewer bytes than requested.
ARM GAS  C:\Users\essele\AppData\Local\Temp\ccbSjPdV.s 			page 64


2096:Generated_Source\PSoC4/USBUART.c **** *
2097:Generated_Source\PSoC4/USBUART.c **** * \return
2098:Generated_Source\PSoC4/USBUART.c **** *  Number of bytes received, 0 for an invalid endpoint.
2099:Generated_Source\PSoC4/USBUART.c **** *
2100:Generated_Source\PSoC4/USBUART.c **** * \reentrant
2101:Generated_Source\PSoC4/USBUART.c **** *  No.
2102:Generated_Source\PSoC4/USBUART.c **** *
2103:Generated_Source\PSoC4/USBUART.c **** *******************************************************************************/
2104:Generated_Source\PSoC4/USBUART.c **** uint16 USBUART_ReadOutEP16(uint8 epNumber, uint8 pData[], uint16 length)
2105:Generated_Source\PSoC4/USBUART.c **** {
 1491              		.loc 1 2105 0
 1492              		.cfi_startproc
 1493              		@ args = 0, pretend = 0, frame = 24
 1494              		@ frame_needed = 1, uses_anonymous_args = 0
 1495 0000 80B5     		push	{r7, lr}
 1496              		.cfi_def_cfa_offset 8
 1497              		.cfi_offset 7, -8
 1498              		.cfi_offset 14, -4
 1499 0002 86B0     		sub	sp, sp, #24
 1500              		.cfi_def_cfa_offset 32
 1501 0004 00AF     		add	r7, sp, #0
 1502              		.cfi_def_cfa_register 7
 1503 0006 3960     		str	r1, [r7]
 1504 0008 1100     		movs	r1, r2
 1505 000a FB1D     		adds	r3, r7, #7
 1506 000c 021C     		adds	r2, r0, #0
 1507 000e 1A70     		strb	r2, [r3]
 1508 0010 3B1D     		adds	r3, r7, #4
 1509 0012 0A1C     		adds	r2, r1, #0
 1510 0014 1A80     		strh	r2, [r3]
2106:Generated_Source\PSoC4/USBUART.c ****     uint32 adjLength;
2107:Generated_Source\PSoC4/USBUART.c **** 
2108:Generated_Source\PSoC4/USBUART.c ****     /* Check array alignment on half-word boundary */
2109:Generated_Source\PSoC4/USBUART.c ****     CYASSERT(0u == (((uint32) pData) & 0x01u));
 1511              		.loc 1 2109 0
 1512 0016 3B68     		ldr	r3, [r7]
 1513 0018 0122     		movs	r2, #1
 1514 001a 1340     		ands	r3, r2
 1515 001c 02D0     		beq	.L82
 1516              		.loc 1 2109 0 is_stmt 0 discriminator 1
 1517 001e 0020     		movs	r0, #0
 1518 0020 FFF7FEFF 		bl	CyHalt
 1519              	.L82:
2110:Generated_Source\PSoC4/USBUART.c **** 
2111:Generated_Source\PSoC4/USBUART.c ****     if ((pData != NULL) && (epNumber > USBUART_EP0) && (epNumber < USBUART_MAX_EP))
 1520              		.loc 1 2111 0 is_stmt 1
 1521 0024 3B68     		ldr	r3, [r7]
 1522 0026 002B     		cmp	r3, #0
 1523 0028 50D0     		beq	.L83
 1524              		.loc 1 2111 0 is_stmt 0 discriminator 1
 1525 002a FB1D     		adds	r3, r7, #7
 1526 002c 1B78     		ldrb	r3, [r3]
 1527 002e 002B     		cmp	r3, #0
 1528 0030 4CD0     		beq	.L83
 1529              		.loc 1 2111 0 discriminator 2
 1530 0032 FB1D     		adds	r3, r7, #7
 1531 0034 1B78     		ldrb	r3, [r3]
ARM GAS  C:\Users\essele\AppData\Local\Temp\ccbSjPdV.s 			page 65


 1532 0036 082B     		cmp	r3, #8
 1533 0038 48D8     		bhi	.L83
2112:Generated_Source\PSoC4/USBUART.c ****     {
2113:Generated_Source\PSoC4/USBUART.c ****     #if (!USBUART_EP_MANAGEMENT_DMA_AUTO)
2114:Generated_Source\PSoC4/USBUART.c ****         /* Adjust requested length to available data. */
2115:Generated_Source\PSoC4/USBUART.c ****         length = (length > USBUART_GetEPCount(epNumber)) ? USBUART_GetEPCount(epNumber) : length;
 1534              		.loc 1 2115 0 is_stmt 1
 1535 003a FB1D     		adds	r3, r7, #7
 1536 003c 1B78     		ldrb	r3, [r3]
 1537 003e 1800     		movs	r0, r3
 1538 0040 FFF7FEFF 		bl	USBUART_GetEPCount
 1539 0044 0300     		movs	r3, r0
 1540 0046 1A00     		movs	r2, r3
 1541 0048 3B1D     		adds	r3, r7, #4
 1542 004a 1B88     		ldrh	r3, [r3]
 1543 004c 9342     		cmp	r3, r2
 1544 004e 07D9     		bls	.L84
 1545              		.loc 1 2115 0 is_stmt 0 discriminator 1
 1546 0050 FB1D     		adds	r3, r7, #7
 1547 0052 1B78     		ldrb	r3, [r3]
 1548 0054 1800     		movs	r0, r3
 1549 0056 FFF7FEFF 		bl	USBUART_GetEPCount
 1550 005a 0300     		movs	r3, r0
 1551 005c 1A00     		movs	r2, r3
 1552 005e 01E0     		b	.L85
 1553              	.L84:
 1554              		.loc 1 2115 0 discriminator 2
 1555 0060 3B1D     		adds	r3, r7, #4
 1556 0062 1A88     		ldrh	r2, [r3]
 1557              	.L85:
 1558              		.loc 1 2115 0 discriminator 4
 1559 0064 3B1D     		adds	r3, r7, #4
 1560 0066 1A80     		strh	r2, [r3]
2116:Generated_Source\PSoC4/USBUART.c ****     #endif /* (!USBUART_EP_MANAGEMENT_DMA_AUTO) */
2117:Generated_Source\PSoC4/USBUART.c **** 
2118:Generated_Source\PSoC4/USBUART.c ****     /* Adjust requested length: 2 bytes are handled at one data register access. */
2119:Generated_Source\PSoC4/USBUART.c ****     adjLength =  length + ((uint32)length & 1u);
 1561              		.loc 1 2119 0 is_stmt 1 discriminator 4
 1562 0068 3B1D     		adds	r3, r7, #4
 1563 006a 1A88     		ldrh	r2, [r3]
 1564 006c 3B1D     		adds	r3, r7, #4
 1565 006e 1B88     		ldrh	r3, [r3]
 1566 0070 0121     		movs	r1, #1
 1567 0072 0B40     		ands	r3, r1
 1568 0074 D318     		adds	r3, r2, r3
 1569 0076 3B61     		str	r3, [r7, #16]
 1570              	.LBB5:
2120:Generated_Source\PSoC4/USBUART.c **** 
2121:Generated_Source\PSoC4/USBUART.c ****     #if (USBUART_EP_MANAGEMENT_MANUAL)
2122:Generated_Source\PSoC4/USBUART.c ****         {
2123:Generated_Source\PSoC4/USBUART.c ****             /* Convert uint8 array to uint16. */
2124:Generated_Source\PSoC4/USBUART.c ****             uint16 *dataBuf = (uint16 *) pData;
 1571              		.loc 1 2124 0 discriminator 4
 1572 0078 3B68     		ldr	r3, [r7]
 1573 007a FB60     		str	r3, [r7, #12]
2125:Generated_Source\PSoC4/USBUART.c **** 
2126:Generated_Source\PSoC4/USBUART.c ****             /* Copy data using 16-bits arbiter data register. */
ARM GAS  C:\Users\essele\AppData\Local\Temp\ccbSjPdV.s 			page 66


2127:Generated_Source\PSoC4/USBUART.c ****             uint16 i;
2128:Generated_Source\PSoC4/USBUART.c ****             for (i = 0u; i < (adjLength >> 1u); ++i)
 1574              		.loc 1 2128 0 discriminator 4
 1575 007c 1623     		movs	r3, #22
 1576 007e FB18     		adds	r3, r7, r3
 1577 0080 0022     		movs	r2, #0
 1578 0082 1A80     		strh	r2, [r3]
 1579 0084 15E0     		b	.L86
 1580              	.L87:
2129:Generated_Source\PSoC4/USBUART.c ****             {
2130:Generated_Source\PSoC4/USBUART.c ****                 dataBuf[i] = (uint16) USBUART_ARB_EP16_BASE.arbEp[epNumber].rwDr16;
 1581              		.loc 1 2130 0 discriminator 3
 1582 0086 1623     		movs	r3, #22
 1583 0088 FB18     		adds	r3, r7, r3
 1584 008a 1B88     		ldrh	r3, [r3]
 1585 008c 5B00     		lsls	r3, r3, #1
 1586 008e FA68     		ldr	r2, [r7, #12]
 1587 0090 D218     		adds	r2, r2, r3
 1588 0092 1349     		ldr	r1, .L90
 1589 0094 FB1D     		adds	r3, r7, #7
 1590 0096 1B78     		ldrb	r3, [r3]
 1591 0098 9B01     		lsls	r3, r3, #6
 1592 009a CB18     		adds	r3, r1, r3
 1593 009c 1033     		adds	r3, r3, #16
 1594 009e 1B68     		ldr	r3, [r3]
 1595 00a0 9BB2     		uxth	r3, r3
 1596 00a2 1380     		strh	r3, [r2]
2128:Generated_Source\PSoC4/USBUART.c ****             {
 1597              		.loc 1 2128 0 discriminator 3
 1598 00a4 1623     		movs	r3, #22
 1599 00a6 FB18     		adds	r3, r7, r3
 1600 00a8 1622     		movs	r2, #22
 1601 00aa BA18     		adds	r2, r7, r2
 1602 00ac 1288     		ldrh	r2, [r2]
 1603 00ae 0132     		adds	r2, r2, #1
 1604 00b0 1A80     		strh	r2, [r3]
 1605              	.L86:
2128:Generated_Source\PSoC4/USBUART.c ****             {
 1606              		.loc 1 2128 0 is_stmt 0 discriminator 1
 1607 00b2 1623     		movs	r3, #22
 1608 00b4 FB18     		adds	r3, r7, r3
 1609 00b6 1A88     		ldrh	r2, [r3]
 1610 00b8 3B69     		ldr	r3, [r7, #16]
 1611 00ba 5B08     		lsrs	r3, r3, #1
 1612 00bc 9A42     		cmp	r2, r3
 1613 00be E2D3     		bcc	.L87
 1614              	.LBE5:
2131:Generated_Source\PSoC4/USBUART.c ****             }
2132:Generated_Source\PSoC4/USBUART.c ****         }
2133:Generated_Source\PSoC4/USBUART.c **** 
2134:Generated_Source\PSoC4/USBUART.c ****         /* Arm OUT endpoint after data has been read from endpoint buffer. */
2135:Generated_Source\PSoC4/USBUART.c ****         USBUART_EnableOutEP(epNumber);
 1615              		.loc 1 2135 0 is_stmt 1
 1616 00c0 FB1D     		adds	r3, r7, #7
 1617 00c2 1B78     		ldrb	r3, [r3]
 1618 00c4 1800     		movs	r0, r3
 1619 00c6 FFF7FEFF 		bl	USBUART_EnableOutEP
ARM GAS  C:\Users\essele\AppData\Local\Temp\ccbSjPdV.s 			page 67


 1620 00ca 02E0     		b	.L88
 1621              	.L83:
2136:Generated_Source\PSoC4/USBUART.c ****     #else
2137:Generated_Source\PSoC4/USBUART.c **** 
2138:Generated_Source\PSoC4/USBUART.c ****         #if (USBUART_EP_MANAGEMENT_DMA_MANUAL)
2139:Generated_Source\PSoC4/USBUART.c ****         {
2140:Generated_Source\PSoC4/USBUART.c ****             uint32 channelNum = (uint32) USBUART_DmaChan[epNumber];
2141:Generated_Source\PSoC4/USBUART.c **** 
2142:Generated_Source\PSoC4/USBUART.c ****             /* Disable DMA channel: start configuration. */
2143:Generated_Source\PSoC4/USBUART.c ****             USBUART_CyDmaChDisable(channelNum);
2144:Generated_Source\PSoC4/USBUART.c **** 
2145:Generated_Source\PSoC4/USBUART.c ****             /* Configure source and destination. */
2146:Generated_Source\PSoC4/USBUART.c ****             USBUART_CyDmaSetSrcAddress(channelNum, USBUART_DMA_DESCR0, (void*) &USBUART_ARB_EP16_BA
2147:Generated_Source\PSoC4/USBUART.c ****             USBUART_CyDmaSetDstAddress(channelNum, USBUART_DMA_DESCR0, (void*) pData);
2148:Generated_Source\PSoC4/USBUART.c **** 
2149:Generated_Source\PSoC4/USBUART.c ****             /* Configure DMA descriptor. */
2150:Generated_Source\PSoC4/USBUART.c ****             USBUART_CyDmaSetConfiguration(channelNum, USBUART_DMA_DESCR0, USBUART_DMA_COMMON_CFG | 
2151:Generated_Source\PSoC4/USBUART.c ****                                                     CYDMA_HALFWORD | CYDMA_WORD_ELEMENT | CYDMA_INC
2152:Generated_Source\PSoC4/USBUART.c **** 
2153:Generated_Source\PSoC4/USBUART.c ****             /* Validate descriptor to execute on following DMA request. */
2154:Generated_Source\PSoC4/USBUART.c ****             USBUART_CyDmaValidateDescriptor(channelNum, USBUART_DMA_DESCR0);
2155:Generated_Source\PSoC4/USBUART.c **** 
2156:Generated_Source\PSoC4/USBUART.c ****             /* Enable DMA channel: configuration complete. */
2157:Generated_Source\PSoC4/USBUART.c ****             USBUART_CyDmaChEnable(channelNum);
2158:Generated_Source\PSoC4/USBUART.c **** 
2159:Generated_Source\PSoC4/USBUART.c ****             /* Generate DMA request. */
2160:Generated_Source\PSoC4/USBUART.c ****             USBUART_ARB_EP_BASE.arbEp[epNumber].epCfg |=  (uint32)  USBUART_ARB_EPX_CFG_DMA_REQ;
2161:Generated_Source\PSoC4/USBUART.c ****             USBUART_ARB_EP_BASE.arbEp[epNumber].epCfg &=  (uint32) ~USBUART_ARB_EPX_CFG_DMA_REQ;
2162:Generated_Source\PSoC4/USBUART.c **** 
2163:Generated_Source\PSoC4/USBUART.c ****             /* OUT endpoint has to be armed again by user when DMA transfers have been completed.
2164:Generated_Source\PSoC4/USBUART.c ****             * NO_EVENT_PENDING: notifies that data has been copied from endpoint buffer.
2165:Generated_Source\PSoC4/USBUART.c ****             */
2166:Generated_Source\PSoC4/USBUART.c ****         }
2167:Generated_Source\PSoC4/USBUART.c ****         #endif /* (USBUART_EP_MANAGEMENT_DMA_MANUAL) */
2168:Generated_Source\PSoC4/USBUART.c **** 
2169:Generated_Source\PSoC4/USBUART.c ****         #if (USBUART_EP_MANAGEMENT_DMA_AUTO)
2170:Generated_Source\PSoC4/USBUART.c ****         {
2171:Generated_Source\PSoC4/USBUART.c ****             uint32 lengthDescr0, lengthDescr1;
2172:Generated_Source\PSoC4/USBUART.c ****             uint32 channelNum = (uint32) USBUART_DmaChan[epNumber];
2173:Generated_Source\PSoC4/USBUART.c **** 
2174:Generated_Source\PSoC4/USBUART.c ****             /* Get number of full bursts. */
2175:Generated_Source\PSoC4/USBUART.c ****             USBUART_DmaEpBurstCnt[epNumber] = (uint8) (adjLength / USBUART_DMA_BYTES_PER_BURST);
2176:Generated_Source\PSoC4/USBUART.c **** 
2177:Generated_Source\PSoC4/USBUART.c ****             /* Get number of elements in last burst. */
2178:Generated_Source\PSoC4/USBUART.c ****             USBUART_DmaEpLastBurstEl[epNumber] = (uint8) (adjLength % USBUART_DMA_BYTES_PER_BURST);
2179:Generated_Source\PSoC4/USBUART.c **** 
2180:Generated_Source\PSoC4/USBUART.c ****             /* Get total number of bursts. */
2181:Generated_Source\PSoC4/USBUART.c ****             USBUART_DmaEpBurstCnt[epNumber] += (0u != USBUART_DmaEpLastBurstEl[epNumber]) ? 1u : 0u
2182:Generated_Source\PSoC4/USBUART.c **** 
2183:Generated_Source\PSoC4/USBUART.c ****             /* Adjust number of data elements transferred in last burst. */
2184:Generated_Source\PSoC4/USBUART.c ****             USBUART_DmaEpLastBurstEl[epNumber] = (0u != USBUART_DmaEpLastBurstEl[epNumber]) ?
2185:Generated_Source\PSoC4/USBUART.c ****                                                                   ((USBUART_DmaEpLastBurstEl[epNumb
2186:Generated_Source\PSoC4/USBUART.c ****                                                                    (USBUART_DMA_HALFWORDS_PER_BURST
2187:Generated_Source\PSoC4/USBUART.c **** 
2188:Generated_Source\PSoC4/USBUART.c ****             /* Get number of data elements to transfer for descriptor 0 and 1. */
2189:Generated_Source\PSoC4/USBUART.c ****             lengthDescr0 = (1u == USBUART_DmaEpBurstCnt[epNumber]) ? USBUART_DmaEpLastBurstEl[epNum
2190:Generated_Source\PSoC4/USBUART.c ****             lengthDescr1 = (2u == USBUART_DmaEpBurstCnt[epNumber]) ? USBUART_DmaEpLastBurstEl[epNum
ARM GAS  C:\Users\essele\AppData\Local\Temp\ccbSjPdV.s 			page 68


2191:Generated_Source\PSoC4/USBUART.c **** 
2192:Generated_Source\PSoC4/USBUART.c ****             /* Mark last descriptor to be executed. */
2193:Generated_Source\PSoC4/USBUART.c ****             USBUART_DmaEpLastBurstEl[epNumber] |= (0u != (USBUART_DmaEpBurstCnt[epNumber] & 0x1u)) 
2194:Generated_Source\PSoC4/USBUART.c ****                                                                     USBUART_DMA_DESCR0_MASK : USBUA
2195:Generated_Source\PSoC4/USBUART.c **** 
2196:Generated_Source\PSoC4/USBUART.c ****             /* Mark if revert number of data elements in descriptor after transfer completion. */
2197:Generated_Source\PSoC4/USBUART.c ****             USBUART_DmaEpLastBurstEl[epNumber] |= (USBUART_DmaEpBurstCnt[epNumber] > 2u) ? USBUART_
2198:Generated_Source\PSoC4/USBUART.c **** 
2199:Generated_Source\PSoC4/USBUART.c ****             /* Mark that 16-bits access to data register is performed. */
2200:Generated_Source\PSoC4/USBUART.c ****             USBUART_DmaEpLastBurstEl[epNumber] |= USBUART_DMA_DESCR_16BITS;
2201:Generated_Source\PSoC4/USBUART.c **** 
2202:Generated_Source\PSoC4/USBUART.c ****             /* Store address of buffer and burst counter for endpoint. */
2203:Generated_Source\PSoC4/USBUART.c ****             USBUART_DmaEpBufferAddrBackup[epNumber] = (uint32) pData;
2204:Generated_Source\PSoC4/USBUART.c ****             USBUART_DmaEpBurstCntBackup[epNumber]   = USBUART_DmaEpBurstCnt[epNumber];
2205:Generated_Source\PSoC4/USBUART.c **** 
2206:Generated_Source\PSoC4/USBUART.c ****             /* Adjust burst counter taking to account: 2 valid descriptors and interrupt trigger af
2207:Generated_Source\PSoC4/USBUART.c ****             USBUART_DmaEpBurstCnt[epNumber] = USBUART_DMA_GET_BURST_CNT(USBUART_DmaEpBurstCnt[epNum
2208:Generated_Source\PSoC4/USBUART.c **** 
2209:Generated_Source\PSoC4/USBUART.c ****             /* Disable DMA channel: start configuration. */
2210:Generated_Source\PSoC4/USBUART.c ****             USBUART_CyDmaChDisable(channelNum);
2211:Generated_Source\PSoC4/USBUART.c **** 
2212:Generated_Source\PSoC4/USBUART.c ****             /* Set destination address. */
2213:Generated_Source\PSoC4/USBUART.c ****             USBUART_CyDmaSetSrcAddress(channelNum, USBUART_DMA_DESCR0, (void*) &USBUART_ARB_EP16_BA
2214:Generated_Source\PSoC4/USBUART.c ****             USBUART_CyDmaSetSrcAddress(channelNum, USBUART_DMA_DESCR1, (void*) &USBUART_ARB_EP16_BA
2215:Generated_Source\PSoC4/USBUART.c **** 
2216:Generated_Source\PSoC4/USBUART.c ****             USBUART_CyDmaSetDstAddress(channelNum, USBUART_DMA_DESCR0, (void*) ((uint32) pData));
2217:Generated_Source\PSoC4/USBUART.c ****             USBUART_CyDmaSetDstAddress(channelNum, USBUART_DMA_DESCR1, (void*) ((uint32) pData + US
2218:Generated_Source\PSoC4/USBUART.c **** 
2219:Generated_Source\PSoC4/USBUART.c ****             /* Configure DMA descriptor 0. */
2220:Generated_Source\PSoC4/USBUART.c ****             USBUART_CyDmaSetConfiguration(channelNum, USBUART_DMA_DESCR0, USBUART_DMA_COMMON_CFG  |
2221:Generated_Source\PSoC4/USBUART.c ****                                                     CYDMA_HALFWORD | CYDMA_WORD_ELEMENT | CYDMA_INC
2222:Generated_Source\PSoC4/USBUART.c **** 
2223:Generated_Source\PSoC4/USBUART.c ****             /* Configure DMA descriptor 1. */
2224:Generated_Source\PSoC4/USBUART.c ****             USBUART_CyDmaSetConfiguration(channelNum, USBUART_DMA_DESCR1, USBUART_DMA_COMMON_CFG  |
2225:Generated_Source\PSoC4/USBUART.c ****                                                     CYDMA_HALFWORD | CYDMA_WORD_ELEMENT | CYDMA_INC
2226:Generated_Source\PSoC4/USBUART.c **** 
2227:Generated_Source\PSoC4/USBUART.c ****             /* Enable interrupt from DMA channel. */
2228:Generated_Source\PSoC4/USBUART.c ****             USBUART_CyDmaSetInterruptMask(channelNum);
2229:Generated_Source\PSoC4/USBUART.c **** 
2230:Generated_Source\PSoC4/USBUART.c ****             /* Validate DMA descriptor 0 and 1. */
2231:Generated_Source\PSoC4/USBUART.c ****             USBUART_CyDmaValidateDescriptor(channelNum, USBUART_DMA_DESCR0);
2232:Generated_Source\PSoC4/USBUART.c ****             
2233:Generated_Source\PSoC4/USBUART.c ****             if (USBUART_DmaEpBurstCntBackup[epNumber] > 1u)
2234:Generated_Source\PSoC4/USBUART.c ****             {
2235:Generated_Source\PSoC4/USBUART.c ****                 USBUART_CyDmaValidateDescriptor(channelNum, USBUART_DMA_DESCR1);
2236:Generated_Source\PSoC4/USBUART.c ****             }
2237:Generated_Source\PSoC4/USBUART.c **** 
2238:Generated_Source\PSoC4/USBUART.c ****             /* Enable DMA channel: configuration complete. */
2239:Generated_Source\PSoC4/USBUART.c ****             USBUART_CyDmaChEnable(channelNum);
2240:Generated_Source\PSoC4/USBUART.c **** 
2241:Generated_Source\PSoC4/USBUART.c ****             /* OUT endpoint has to be armed again by user when DMA transfers have been completed.
2242:Generated_Source\PSoC4/USBUART.c ****             * NO_EVENT_PENDING: notifies that data has been copied from endpoint buffer.
2243:Generated_Source\PSoC4/USBUART.c ****             */
2244:Generated_Source\PSoC4/USBUART.c ****         }
2245:Generated_Source\PSoC4/USBUART.c ****         #endif /* (USBUART_EP_MANAGEMENT_DMA_AUTO) */
2246:Generated_Source\PSoC4/USBUART.c ****     #endif /* (USBUART_EP_MANAGEMENT_MANUAL) */
2247:Generated_Source\PSoC4/USBUART.c ****     }
ARM GAS  C:\Users\essele\AppData\Local\Temp\ccbSjPdV.s 			page 69


2248:Generated_Source\PSoC4/USBUART.c ****     else
2249:Generated_Source\PSoC4/USBUART.c ****     {
2250:Generated_Source\PSoC4/USBUART.c ****         length = 0u;
 1622              		.loc 1 2250 0
 1623 00cc 3B1D     		adds	r3, r7, #4
 1624 00ce 0022     		movs	r2, #0
 1625 00d0 1A80     		strh	r2, [r3]
 1626              	.L88:
2251:Generated_Source\PSoC4/USBUART.c ****     }
2252:Generated_Source\PSoC4/USBUART.c **** 
2253:Generated_Source\PSoC4/USBUART.c ****     return (length);
 1627              		.loc 1 2253 0
 1628 00d2 3B1D     		adds	r3, r7, #4
 1629 00d4 1B88     		ldrh	r3, [r3]
2254:Generated_Source\PSoC4/USBUART.c **** }
 1630              		.loc 1 2254 0
 1631 00d6 1800     		movs	r0, r3
 1632 00d8 BD46     		mov	sp, r7
 1633 00da 06B0     		add	sp, sp, #24
 1634              		@ sp needed
 1635 00dc 80BD     		pop	{r7, pc}
 1636              	.L91:
 1637 00de C046     		.align	2
 1638              	.L90:
 1639 00e0 D0112C40 		.word	1076629968
 1640              		.cfi_endproc
 1641              	.LFE15:
 1642              		.size	USBUART_ReadOutEP16, .-USBUART_ReadOutEP16
 1643              		.section	.text.USBUART_EnableOutEP,"ax",%progbits
 1644              		.align	2
 1645              		.global	USBUART_EnableOutEP
 1646              		.code	16
 1647              		.thumb_func
 1648              		.type	USBUART_EnableOutEP, %function
 1649              	USBUART_EnableOutEP:
 1650              	.LFB16:
2255:Generated_Source\PSoC4/USBUART.c **** #endif /* (USBUART_16BITS_EP_ACCESS_ENABLE) */
2256:Generated_Source\PSoC4/USBUART.c **** 
2257:Generated_Source\PSoC4/USBUART.c **** 
2258:Generated_Source\PSoC4/USBUART.c **** /*******************************************************************************
2259:Generated_Source\PSoC4/USBUART.c **** * Function Name: USBUART_EnableOutEP
2260:Generated_Source\PSoC4/USBUART.c **** ****************************************************************************//**
2261:Generated_Source\PSoC4/USBUART.c **** *
2262:Generated_Source\PSoC4/USBUART.c **** *  This function enables the specified endpoint for OUT transfers. Do not call
2263:Generated_Source\PSoC4/USBUART.c **** *  this function for IN endpoints.
2264:Generated_Source\PSoC4/USBUART.c **** *
2265:Generated_Source\PSoC4/USBUART.c **** *  \param epNumber: Contains the data endpoint number. Valid values are between
2266:Generated_Source\PSoC4/USBUART.c **** *  1 and 8.
2267:Generated_Source\PSoC4/USBUART.c **** *
2268:Generated_Source\PSoC4/USBUART.c **** * \globalvars
2269:Generated_Source\PSoC4/USBUART.c **** *
2270:Generated_Source\PSoC4/USBUART.c **** *  \ref USBUART_EP[epNumber].apiEpState - set to NO_EVENT_PENDING
2271:Generated_Source\PSoC4/USBUART.c **** *
2272:Generated_Source\PSoC4/USBUART.c **** * \reentrant
2273:Generated_Source\PSoC4/USBUART.c **** *  No.
2274:Generated_Source\PSoC4/USBUART.c **** *
2275:Generated_Source\PSoC4/USBUART.c **** *******************************************************************************/
ARM GAS  C:\Users\essele\AppData\Local\Temp\ccbSjPdV.s 			page 70


2276:Generated_Source\PSoC4/USBUART.c **** void USBUART_EnableOutEP(uint8 epNumber) 
2277:Generated_Source\PSoC4/USBUART.c **** {
 1651              		.loc 1 2277 0
 1652              		.cfi_startproc
 1653              		@ args = 0, pretend = 0, frame = 8
 1654              		@ frame_needed = 1, uses_anonymous_args = 0
 1655 0000 90B5     		push	{r4, r7, lr}
 1656              		.cfi_def_cfa_offset 12
 1657              		.cfi_offset 4, -12
 1658              		.cfi_offset 7, -8
 1659              		.cfi_offset 14, -4
 1660 0002 83B0     		sub	sp, sp, #12
 1661              		.cfi_def_cfa_offset 24
 1662 0004 00AF     		add	r7, sp, #0
 1663              		.cfi_def_cfa_register 7
 1664 0006 0200     		movs	r2, r0
 1665 0008 FB1D     		adds	r3, r7, #7
 1666 000a 1A70     		strb	r2, [r3]
2278:Generated_Source\PSoC4/USBUART.c ****     if ((epNumber > USBUART_EP0) && (epNumber < USBUART_MAX_EP))
 1667              		.loc 1 2278 0
 1668 000c FB1D     		adds	r3, r7, #7
 1669 000e 1B78     		ldrb	r3, [r3]
 1670 0010 002B     		cmp	r3, #0
 1671 0012 21D0     		beq	.L94
 1672              		.loc 1 2278 0 is_stmt 0 discriminator 1
 1673 0014 FB1D     		adds	r3, r7, #7
 1674 0016 1B78     		ldrb	r3, [r3]
 1675 0018 082B     		cmp	r3, #8
 1676 001a 1DD8     		bhi	.L94
2279:Generated_Source\PSoC4/USBUART.c ****     {
2280:Generated_Source\PSoC4/USBUART.c ****         USBUART_EP[epNumber].apiEpState = USBUART_NO_EVENT_PENDING;
 1677              		.loc 1 2280 0 is_stmt 1
 1678 001c FB1D     		adds	r3, r7, #7
 1679 001e 1A78     		ldrb	r2, [r3]
 1680 0020 0F49     		ldr	r1, .L95
 1681 0022 1300     		movs	r3, r2
 1682 0024 5B00     		lsls	r3, r3, #1
 1683 0026 9B18     		adds	r3, r3, r2
 1684 0028 9B00     		lsls	r3, r3, #2
 1685 002a CB18     		adds	r3, r1, r3
 1686 002c 0133     		adds	r3, r3, #1
 1687 002e 0022     		movs	r2, #0
 1688 0030 1A70     		strb	r2, [r3]
2281:Generated_Source\PSoC4/USBUART.c **** 
2282:Generated_Source\PSoC4/USBUART.c ****         /* Enable OUT endpoint to be written by Host. */
2283:Generated_Source\PSoC4/USBUART.c ****         USBUART_SIE_EP_BASE.sieEp[epNumber].epCr0 = USBUART_EP[epNumber].epMode;
 1689              		.loc 1 2283 0
 1690 0032 0C4C     		ldr	r4, .L95+4
 1691 0034 FB1D     		adds	r3, r7, #7
 1692 0036 1978     		ldrb	r1, [r3]
 1693 0038 FB1D     		adds	r3, r7, #7
 1694 003a 1A78     		ldrb	r2, [r3]
 1695 003c 0848     		ldr	r0, .L95
 1696 003e 1300     		movs	r3, r2
 1697 0040 5B00     		lsls	r3, r3, #1
 1698 0042 9B18     		adds	r3, r3, r2
 1699 0044 9B00     		lsls	r3, r3, #2
ARM GAS  C:\Users\essele\AppData\Local\Temp\ccbSjPdV.s 			page 71


 1700 0046 C318     		adds	r3, r0, r3
 1701 0048 0533     		adds	r3, r3, #5
 1702 004a 1B78     		ldrb	r3, [r3]
 1703 004c DBB2     		uxtb	r3, r3
 1704 004e 1A00     		movs	r2, r3
 1705 0050 8B01     		lsls	r3, r1, #6
 1706 0052 E318     		adds	r3, r4, r3
 1707 0054 0833     		adds	r3, r3, #8
 1708 0056 1A60     		str	r2, [r3]
 1709              	.L94:
2284:Generated_Source\PSoC4/USBUART.c ****         
2285:Generated_Source\PSoC4/USBUART.c ****     }
2286:Generated_Source\PSoC4/USBUART.c **** }
 1710              		.loc 1 2286 0
 1711 0058 C046     		nop
 1712 005a BD46     		mov	sp, r7
 1713 005c 03B0     		add	sp, sp, #12
 1714              		@ sp needed
 1715 005e 90BD     		pop	{r4, r7, pc}
 1716              	.L96:
 1717              		.align	2
 1718              	.L95:
 1719 0060 00000000 		.word	USBUART_EP
 1720 0064 F0FF2B40 		.word	1076625392
 1721              		.cfi_endproc
 1722              	.LFE16:
 1723              		.size	USBUART_EnableOutEP, .-USBUART_EnableOutEP
 1724              		.section	.text.USBUART_DisableOutEP,"ax",%progbits
 1725              		.align	2
 1726              		.global	USBUART_DisableOutEP
 1727              		.code	16
 1728              		.thumb_func
 1729              		.type	USBUART_DisableOutEP, %function
 1730              	USBUART_DisableOutEP:
 1731              	.LFB17:
2287:Generated_Source\PSoC4/USBUART.c **** 
2288:Generated_Source\PSoC4/USBUART.c **** 
2289:Generated_Source\PSoC4/USBUART.c **** /*******************************************************************************
2290:Generated_Source\PSoC4/USBUART.c **** * Function Name: USBUART_DisableOutEP
2291:Generated_Source\PSoC4/USBUART.c **** ****************************************************************************//**
2292:Generated_Source\PSoC4/USBUART.c **** *
2293:Generated_Source\PSoC4/USBUART.c **** *  This function disables the specified USBFS OUT endpoint. Do not call this
2294:Generated_Source\PSoC4/USBUART.c **** *  function for IN endpoints.
2295:Generated_Source\PSoC4/USBUART.c **** *
2296:Generated_Source\PSoC4/USBUART.c **** *  \param epNumber: Contains the data endpoint number.
2297:Generated_Source\PSoC4/USBUART.c **** *            Valid values are between 1 and 8.
2298:Generated_Source\PSoC4/USBUART.c **** *
2299:Generated_Source\PSoC4/USBUART.c **** *******************************************************************************/
2300:Generated_Source\PSoC4/USBUART.c **** void USBUART_DisableOutEP(uint8 epNumber) 
2301:Generated_Source\PSoC4/USBUART.c **** {
 1732              		.loc 1 2301 0
 1733              		.cfi_startproc
 1734              		@ args = 0, pretend = 0, frame = 8
 1735              		@ frame_needed = 1, uses_anonymous_args = 0
 1736 0000 80B5     		push	{r7, lr}
 1737              		.cfi_def_cfa_offset 8
 1738              		.cfi_offset 7, -8
ARM GAS  C:\Users\essele\AppData\Local\Temp\ccbSjPdV.s 			page 72


 1739              		.cfi_offset 14, -4
 1740 0002 82B0     		sub	sp, sp, #8
 1741              		.cfi_def_cfa_offset 16
 1742 0004 00AF     		add	r7, sp, #0
 1743              		.cfi_def_cfa_register 7
 1744 0006 0200     		movs	r2, r0
 1745 0008 FB1D     		adds	r3, r7, #7
 1746 000a 1A70     		strb	r2, [r3]
2302:Generated_Source\PSoC4/USBUART.c ****     if ((epNumber > USBUART_EP0) && (epNumber < USBUART_MAX_EP))
 1747              		.loc 1 2302 0
 1748 000c FB1D     		adds	r3, r7, #7
 1749 000e 1B78     		ldrb	r3, [r3]
 1750 0010 002B     		cmp	r3, #0
 1751 0012 0BD0     		beq	.L99
 1752              		.loc 1 2302 0 is_stmt 0 discriminator 1
 1753 0014 FB1D     		adds	r3, r7, #7
 1754 0016 1B78     		ldrb	r3, [r3]
 1755 0018 082B     		cmp	r3, #8
 1756 001a 07D8     		bhi	.L99
2303:Generated_Source\PSoC4/USBUART.c ****     {
2304:Generated_Source\PSoC4/USBUART.c ****         /* Set NAK response for OUT endpoint. */
2305:Generated_Source\PSoC4/USBUART.c ****         USBUART_SIE_EP_BASE.sieEp[epNumber].epCr0 = USBUART_MODE_NAK_OUT;
 1757              		.loc 1 2305 0 is_stmt 1
 1758 001c 054A     		ldr	r2, .L100
 1759 001e FB1D     		adds	r3, r7, #7
 1760 0020 1B78     		ldrb	r3, [r3]
 1761 0022 9B01     		lsls	r3, r3, #6
 1762 0024 D318     		adds	r3, r2, r3
 1763 0026 0833     		adds	r3, r3, #8
 1764 0028 0822     		movs	r2, #8
 1765 002a 1A60     		str	r2, [r3]
 1766              	.L99:
2306:Generated_Source\PSoC4/USBUART.c ****     }
2307:Generated_Source\PSoC4/USBUART.c **** }
 1767              		.loc 1 2307 0
 1768 002c C046     		nop
 1769 002e BD46     		mov	sp, r7
 1770 0030 02B0     		add	sp, sp, #8
 1771              		@ sp needed
 1772 0032 80BD     		pop	{r7, pc}
 1773              	.L101:
 1774              		.align	2
 1775              	.L100:
 1776 0034 F0FF2B40 		.word	1076625392
 1777              		.cfi_endproc
 1778              	.LFE17:
 1779              		.size	USBUART_DisableOutEP, .-USBUART_DisableOutEP
 1780              		.section	.text.USBUART_Force,"ax",%progbits
 1781              		.align	2
 1782              		.global	USBUART_Force
 1783              		.code	16
 1784              		.thumb_func
 1785              		.type	USBUART_Force, %function
 1786              	USBUART_Force:
 1787              	.LFB18:
2308:Generated_Source\PSoC4/USBUART.c **** 
2309:Generated_Source\PSoC4/USBUART.c **** 
ARM GAS  C:\Users\essele\AppData\Local\Temp\ccbSjPdV.s 			page 73


2310:Generated_Source\PSoC4/USBUART.c **** /*******************************************************************************
2311:Generated_Source\PSoC4/USBUART.c **** * Function Name: USBUART_Force
2312:Generated_Source\PSoC4/USBUART.c **** ****************************************************************************//**
2313:Generated_Source\PSoC4/USBUART.c **** *
2314:Generated_Source\PSoC4/USBUART.c **** *  This function forces a USB J, K, or SE0 state on the D+/D– lines. It provides
2315:Generated_Source\PSoC4/USBUART.c **** *  the necessary mechanism for a USB device application to perform a USB Remote
2316:Generated_Source\PSoC4/USBUART.c **** *  Wakeup. For more information, see the USB 2.0 Specification for details on
2317:Generated_Source\PSoC4/USBUART.c **** *  Suspend and Resume.
2318:Generated_Source\PSoC4/USBUART.c **** *
2319:Generated_Source\PSoC4/USBUART.c **** *  \param state A byte indicating which of the four bus states to enable.
2320:Generated_Source\PSoC4/USBUART.c **** *        Symbolic names  and their associated values are listed here:
2321:Generated_Source\PSoC4/USBUART.c **** *    State                      |Description
2322:Generated_Source\PSoC4/USBUART.c **** *    ---------------------------|----------------------------------------------
2323:Generated_Source\PSoC4/USBUART.c **** *    USBUART_FORCE_J   | Force a J State onto the D+/D– lines
2324:Generated_Source\PSoC4/USBUART.c **** *    USBUART_FORCE_K   | Force a K State onto the D+/D– lines
2325:Generated_Source\PSoC4/USBUART.c **** *    USBUART_FORCE_SE0 | Force a Single Ended 0 onto the D+/D– lines
2326:Generated_Source\PSoC4/USBUART.c **** *    USBUART_FORCE_NONE| Return bus to SIE control
2327:Generated_Source\PSoC4/USBUART.c **** *
2328:Generated_Source\PSoC4/USBUART.c **** *
2329:Generated_Source\PSoC4/USBUART.c **** *******************************************************************************/
2330:Generated_Source\PSoC4/USBUART.c **** void USBUART_Force(uint8 bState) 
2331:Generated_Source\PSoC4/USBUART.c **** {
 1788              		.loc 1 2331 0
 1789              		.cfi_startproc
 1790              		@ args = 0, pretend = 0, frame = 8
 1791              		@ frame_needed = 1, uses_anonymous_args = 0
 1792 0000 80B5     		push	{r7, lr}
 1793              		.cfi_def_cfa_offset 8
 1794              		.cfi_offset 7, -8
 1795              		.cfi_offset 14, -4
 1796 0002 82B0     		sub	sp, sp, #8
 1797              		.cfi_def_cfa_offset 16
 1798 0004 00AF     		add	r7, sp, #0
 1799              		.cfi_def_cfa_register 7
 1800 0006 0200     		movs	r2, r0
 1801 0008 FB1D     		adds	r3, r7, #7
 1802 000a 1A70     		strb	r2, [r3]
2332:Generated_Source\PSoC4/USBUART.c ****     /* This registers is used only for manual control of SIE (no masking is
2333:Generated_Source\PSoC4/USBUART.c ****     * needed before write into it).
2334:Generated_Source\PSoC4/USBUART.c ****     */
2335:Generated_Source\PSoC4/USBUART.c ****     USBUART_USBIO_CR0_REG = bState;
 1803              		.loc 1 2335 0
 1804 000c 034B     		ldr	r3, .L103
 1805 000e FA1D     		adds	r2, r7, #7
 1806 0010 1278     		ldrb	r2, [r2]
 1807 0012 1A60     		str	r2, [r3]
2336:Generated_Source\PSoC4/USBUART.c **** }
 1808              		.loc 1 2336 0
 1809 0014 C046     		nop
 1810 0016 BD46     		mov	sp, r7
 1811 0018 02B0     		add	sp, sp, #8
 1812              		@ sp needed
 1813 001a 80BD     		pop	{r7, pc}
 1814              	.L104:
 1815              		.align	2
 1816              	.L103:
 1817 001c 40002C40 		.word	1076625472
ARM GAS  C:\Users\essele\AppData\Local\Temp\ccbSjPdV.s 			page 74


 1818              		.cfi_endproc
 1819              	.LFE18:
 1820              		.size	USBUART_Force, .-USBUART_Force
 1821              		.section	.text.USBUART_GetEPAckState,"ax",%progbits
 1822              		.align	2
 1823              		.global	USBUART_GetEPAckState
 1824              		.code	16
 1825              		.thumb_func
 1826              		.type	USBUART_GetEPAckState, %function
 1827              	USBUART_GetEPAckState:
 1828              	.LFB19:
2337:Generated_Source\PSoC4/USBUART.c **** 
2338:Generated_Source\PSoC4/USBUART.c **** 
2339:Generated_Source\PSoC4/USBUART.c **** /*******************************************************************************
2340:Generated_Source\PSoC4/USBUART.c **** * Function Name: USBUART_GetEPAckState
2341:Generated_Source\PSoC4/USBUART.c **** ****************************************************************************//**
2342:Generated_Source\PSoC4/USBUART.c **** *
2343:Generated_Source\PSoC4/USBUART.c **** *  This function determines whether an ACK transaction occurred on this endpoint
2344:Generated_Source\PSoC4/USBUART.c **** *  by reading the ACK bit in the control register of the endpoint. It does not
2345:Generated_Source\PSoC4/USBUART.c **** *  clear the ACK bit.
2346:Generated_Source\PSoC4/USBUART.c **** *
2347:Generated_Source\PSoC4/USBUART.c **** *  \param epNumber Contains the data endpoint number.
2348:Generated_Source\PSoC4/USBUART.c **** *            Valid values are between 1 and 8.
2349:Generated_Source\PSoC4/USBUART.c **** *
2350:Generated_Source\PSoC4/USBUART.c **** *  \return
2351:Generated_Source\PSoC4/USBUART.c **** *  If an ACKed transaction occurred, this function returns a non-zero value.
2352:Generated_Source\PSoC4/USBUART.c **** *  Otherwise, it returns zero.
2353:Generated_Source\PSoC4/USBUART.c **** *
2354:Generated_Source\PSoC4/USBUART.c **** *******************************************************************************/
2355:Generated_Source\PSoC4/USBUART.c **** uint8 USBUART_GetEPAckState(uint8 epNumber) 
2356:Generated_Source\PSoC4/USBUART.c **** {
 1829              		.loc 1 2356 0
 1830              		.cfi_startproc
 1831              		@ args = 0, pretend = 0, frame = 16
 1832              		@ frame_needed = 1, uses_anonymous_args = 0
 1833 0000 80B5     		push	{r7, lr}
 1834              		.cfi_def_cfa_offset 8
 1835              		.cfi_offset 7, -8
 1836              		.cfi_offset 14, -4
 1837 0002 84B0     		sub	sp, sp, #16
 1838              		.cfi_def_cfa_offset 24
 1839 0004 00AF     		add	r7, sp, #0
 1840              		.cfi_def_cfa_register 7
 1841 0006 0200     		movs	r2, r0
 1842 0008 FB1D     		adds	r3, r7, #7
 1843 000a 1A70     		strb	r2, [r3]
2357:Generated_Source\PSoC4/USBUART.c ****     uint32 cr = 0u;
 1844              		.loc 1 2357 0
 1845 000c 0023     		movs	r3, #0
 1846 000e FB60     		str	r3, [r7, #12]
2358:Generated_Source\PSoC4/USBUART.c **** 
2359:Generated_Source\PSoC4/USBUART.c ****     if ((epNumber > USBUART_EP0) && (epNumber < USBUART_MAX_EP))
 1847              		.loc 1 2359 0
 1848 0010 FB1D     		adds	r3, r7, #7
 1849 0012 1B78     		ldrb	r3, [r3]
 1850 0014 002B     		cmp	r3, #0
 1851 0016 0DD0     		beq	.L106
ARM GAS  C:\Users\essele\AppData\Local\Temp\ccbSjPdV.s 			page 75


 1852              		.loc 1 2359 0 is_stmt 0 discriminator 1
 1853 0018 FB1D     		adds	r3, r7, #7
 1854 001a 1B78     		ldrb	r3, [r3]
 1855 001c 082B     		cmp	r3, #8
 1856 001e 09D8     		bhi	.L106
2360:Generated_Source\PSoC4/USBUART.c ****     {
2361:Generated_Source\PSoC4/USBUART.c ****         cr = USBUART_SIE_EP_BASE.sieEp[epNumber].epCr0 & USBUART_MODE_ACKD;
 1857              		.loc 1 2361 0 is_stmt 1
 1858 0020 074A     		ldr	r2, .L108
 1859 0022 FB1D     		adds	r3, r7, #7
 1860 0024 1B78     		ldrb	r3, [r3]
 1861 0026 9B01     		lsls	r3, r3, #6
 1862 0028 D318     		adds	r3, r2, r3
 1863 002a 0833     		adds	r3, r3, #8
 1864 002c 1B68     		ldr	r3, [r3]
 1865 002e 1022     		movs	r2, #16
 1866 0030 1340     		ands	r3, r2
 1867 0032 FB60     		str	r3, [r7, #12]
 1868              	.L106:
2362:Generated_Source\PSoC4/USBUART.c ****     }
2363:Generated_Source\PSoC4/USBUART.c **** 
2364:Generated_Source\PSoC4/USBUART.c ****     return ((uint8) cr);
 1869              		.loc 1 2364 0
 1870 0034 FB68     		ldr	r3, [r7, #12]
 1871 0036 DBB2     		uxtb	r3, r3
2365:Generated_Source\PSoC4/USBUART.c **** }
 1872              		.loc 1 2365 0
 1873 0038 1800     		movs	r0, r3
 1874 003a BD46     		mov	sp, r7
 1875 003c 04B0     		add	sp, sp, #16
 1876              		@ sp needed
 1877 003e 80BD     		pop	{r7, pc}
 1878              	.L109:
 1879              		.align	2
 1880              	.L108:
 1881 0040 F0FF2B40 		.word	1076625392
 1882              		.cfi_endproc
 1883              	.LFE19:
 1884              		.size	USBUART_GetEPAckState, .-USBUART_GetEPAckState
 1885              		.section	.text.USBUART_SetPowerStatus,"ax",%progbits
 1886              		.align	2
 1887              		.global	USBUART_SetPowerStatus
 1888              		.code	16
 1889              		.thumb_func
 1890              		.type	USBUART_SetPowerStatus, %function
 1891              	USBUART_SetPowerStatus:
 1892              	.LFB20:
2366:Generated_Source\PSoC4/USBUART.c **** 
2367:Generated_Source\PSoC4/USBUART.c **** 
2368:Generated_Source\PSoC4/USBUART.c **** /*******************************************************************************
2369:Generated_Source\PSoC4/USBUART.c **** * Function Name: USBUART_SetPowerStatus
2370:Generated_Source\PSoC4/USBUART.c **** ****************************************************************************//**
2371:Generated_Source\PSoC4/USBUART.c **** *
2372:Generated_Source\PSoC4/USBUART.c **** *  This function sets the current power status. The device replies to USB
2373:Generated_Source\PSoC4/USBUART.c **** *  GET_STATUS requests based on this value. This allows the device to properly
2374:Generated_Source\PSoC4/USBUART.c **** *  report its status for USB Chapter 9 compliance. Devices can change their
2375:Generated_Source\PSoC4/USBUART.c **** *  power source from self powered to bus powered at any time and report their
ARM GAS  C:\Users\essele\AppData\Local\Temp\ccbSjPdV.s 			page 76


2376:Generated_Source\PSoC4/USBUART.c **** *  current power source as part of the device status. You should call this
2377:Generated_Source\PSoC4/USBUART.c **** *  function any time your device changes from self powered to bus powered or
2378:Generated_Source\PSoC4/USBUART.c **** *  vice versa, and set the status appropriately.
2379:Generated_Source\PSoC4/USBUART.c **** *
2380:Generated_Source\PSoC4/USBUART.c **** *  \param powerStatus: Contains the desired power status, one for self powered
2381:Generated_Source\PSoC4/USBUART.c **** *        or zero for bus powered. Symbolic names and their associated values are
2382:Generated_Source\PSoC4/USBUART.c **** *        given here:
2383:Generated_Source\PSoC4/USBUART.c **** *  Power Status                                |Description
2384:Generated_Source\PSoC4/USBUART.c **** *  --------------------------------------------|---------------------------
2385:Generated_Source\PSoC4/USBUART.c **** *  USBUART_DEVICE_STATUS_BUS_POWERED  | Set the device to bus powered
2386:Generated_Source\PSoC4/USBUART.c **** *  USBUART_DEVICE_STATUS_SELF_POWERED | Set the device to self powered
2387:Generated_Source\PSoC4/USBUART.c **** *
2388:Generated_Source\PSoC4/USBUART.c **** * \globalvars
2389:Generated_Source\PSoC4/USBUART.c **** *
2390:Generated_Source\PSoC4/USBUART.c **** *  \ref USBUART_deviceStatus - set power status
2391:Generated_Source\PSoC4/USBUART.c **** *
2392:Generated_Source\PSoC4/USBUART.c **** * \reentrant
2393:Generated_Source\PSoC4/USBUART.c **** *  No.
2394:Generated_Source\PSoC4/USBUART.c **** *
2395:Generated_Source\PSoC4/USBUART.c **** *******************************************************************************/
2396:Generated_Source\PSoC4/USBUART.c **** void USBUART_SetPowerStatus(uint8 powerStatus) 
2397:Generated_Source\PSoC4/USBUART.c **** {
 1893              		.loc 1 2397 0
 1894              		.cfi_startproc
 1895              		@ args = 0, pretend = 0, frame = 8
 1896              		@ frame_needed = 1, uses_anonymous_args = 0
 1897 0000 80B5     		push	{r7, lr}
 1898              		.cfi_def_cfa_offset 8
 1899              		.cfi_offset 7, -8
 1900              		.cfi_offset 14, -4
 1901 0002 82B0     		sub	sp, sp, #8
 1902              		.cfi_def_cfa_offset 16
 1903 0004 00AF     		add	r7, sp, #0
 1904              		.cfi_def_cfa_register 7
 1905 0006 0200     		movs	r2, r0
 1906 0008 FB1D     		adds	r3, r7, #7
 1907 000a 1A70     		strb	r2, [r3]
2398:Generated_Source\PSoC4/USBUART.c ****     if (powerStatus != USBUART_DEVICE_STATUS_BUS_POWERED)
 1908              		.loc 1 2398 0
 1909 000c FB1D     		adds	r3, r7, #7
 1910 000e 1B78     		ldrb	r3, [r3]
 1911 0010 002B     		cmp	r3, #0
 1912 0012 08D0     		beq	.L111
2399:Generated_Source\PSoC4/USBUART.c ****     {
2400:Generated_Source\PSoC4/USBUART.c ****         USBUART_deviceStatus |= (uint8)  USBUART_DEVICE_STATUS_SELF_POWERED;
 1913              		.loc 1 2400 0
 1914 0014 0A4B     		ldr	r3, .L114
 1915 0016 1B78     		ldrb	r3, [r3]
 1916 0018 DBB2     		uxtb	r3, r3
 1917 001a 0122     		movs	r2, #1
 1918 001c 1343     		orrs	r3, r2
 1919 001e DAB2     		uxtb	r2, r3
 1920 0020 074B     		ldr	r3, .L114
 1921 0022 1A70     		strb	r2, [r3]
2401:Generated_Source\PSoC4/USBUART.c ****     }
2402:Generated_Source\PSoC4/USBUART.c ****     else
2403:Generated_Source\PSoC4/USBUART.c ****     {
ARM GAS  C:\Users\essele\AppData\Local\Temp\ccbSjPdV.s 			page 77


2404:Generated_Source\PSoC4/USBUART.c ****         USBUART_deviceStatus &= (uint8) ~USBUART_DEVICE_STATUS_SELF_POWERED;
2405:Generated_Source\PSoC4/USBUART.c ****     }
2406:Generated_Source\PSoC4/USBUART.c **** }
 1922              		.loc 1 2406 0
 1923 0024 07E0     		b	.L113
 1924              	.L111:
2404:Generated_Source\PSoC4/USBUART.c ****     }
 1925              		.loc 1 2404 0
 1926 0026 064B     		ldr	r3, .L114
 1927 0028 1B78     		ldrb	r3, [r3]
 1928 002a DBB2     		uxtb	r3, r3
 1929 002c 0122     		movs	r2, #1
 1930 002e 9343     		bics	r3, r2
 1931 0030 DAB2     		uxtb	r2, r3
 1932 0032 034B     		ldr	r3, .L114
 1933 0034 1A70     		strb	r2, [r3]
 1934              	.L113:
 1935              		.loc 1 2406 0
 1936 0036 C046     		nop
 1937 0038 BD46     		mov	sp, r7
 1938 003a 02B0     		add	sp, sp, #8
 1939              		@ sp needed
 1940 003c 80BD     		pop	{r7, pc}
 1941              	.L115:
 1942 003e C046     		.align	2
 1943              	.L114:
 1944 0040 00000000 		.word	USBUART_deviceStatus
 1945              		.cfi_endproc
 1946              	.LFE20:
 1947              		.size	USBUART_SetPowerStatus, .-USBUART_SetPowerStatus
 1948              		.section	.text.USBUART_VBusPresent,"ax",%progbits
 1949              		.align	2
 1950              		.global	USBUART_VBusPresent
 1951              		.code	16
 1952              		.thumb_func
 1953              		.type	USBUART_VBusPresent, %function
 1954              	USBUART_VBusPresent:
 1955              	.LFB21:
2407:Generated_Source\PSoC4/USBUART.c **** 
2408:Generated_Source\PSoC4/USBUART.c **** 
2409:Generated_Source\PSoC4/USBUART.c **** #if (USBUART_VBUS_MONITORING_ENABLE)
2410:Generated_Source\PSoC4/USBUART.c ****     /***************************************************************************
2411:Generated_Source\PSoC4/USBUART.c ****     * Function Name: USBUART_VBusPresent
2412:Generated_Source\PSoC4/USBUART.c ****     ************************************************************************//**
2413:Generated_Source\PSoC4/USBUART.c ****     *
2414:Generated_Source\PSoC4/USBUART.c ****     *  Determines VBUS presence for self-powered devices. This function is
2415:Generated_Source\PSoC4/USBUART.c ****     *  available when the VBUS Monitoring option is enabled in the Advanced tab.
2416:Generated_Source\PSoC4/USBUART.c ****     *
2417:Generated_Source\PSoC4/USBUART.c ****     * \return
2418:Generated_Source\PSoC4/USBUART.c ****     *  The return value can be the following:
2419:Generated_Source\PSoC4/USBUART.c ****     *  Return Value | Description
2420:Generated_Source\PSoC4/USBUART.c ****     *  -------------|-----------------
2421:Generated_Source\PSoC4/USBUART.c ****     *  1            | VBUS is present
2422:Generated_Source\PSoC4/USBUART.c ****     *  0            | VBUS is absent
2423:Generated_Source\PSoC4/USBUART.c ****     *
2424:Generated_Source\PSoC4/USBUART.c ****     *
2425:Generated_Source\PSoC4/USBUART.c ****     ***************************************************************************/
ARM GAS  C:\Users\essele\AppData\Local\Temp\ccbSjPdV.s 			page 78


2426:Generated_Source\PSoC4/USBUART.c ****     uint8 USBUART_VBusPresent(void) 
2427:Generated_Source\PSoC4/USBUART.c ****     {
 1956              		.loc 1 2427 0
 1957              		.cfi_startproc
 1958              		@ args = 0, pretend = 0, frame = 0
 1959              		@ frame_needed = 1, uses_anonymous_args = 0
 1960 0000 80B5     		push	{r7, lr}
 1961              		.cfi_def_cfa_offset 8
 1962              		.cfi_offset 7, -8
 1963              		.cfi_offset 14, -4
 1964 0002 00AF     		add	r7, sp, #0
 1965              		.cfi_def_cfa_register 7
2428:Generated_Source\PSoC4/USBUART.c ****         return ((0u != (USBUART_VBUS_STATUS_REG & USBUART_VBUS_VALID)) ? (uint8) 1u : (uint8) 0u);
 1966              		.loc 1 2428 0
 1967 0004 044B     		ldr	r3, .L118
 1968 0006 1B68     		ldr	r3, [r3]
 1969 0008 0422     		movs	r2, #4
 1970 000a 1340     		ands	r3, r2
 1971 000c 5A1E     		subs	r2, r3, #1
 1972 000e 9341     		sbcs	r3, r3, r2
 1973 0010 DBB2     		uxtb	r3, r3
2429:Generated_Source\PSoC4/USBUART.c ****     }
 1974              		.loc 1 2429 0
 1975 0012 1800     		movs	r0, r3
 1976 0014 BD46     		mov	sp, r7
 1977              		@ sp needed
 1978 0016 80BD     		pop	{r7, pc}
 1979              	.L119:
 1980              		.align	2
 1981              	.L118:
 1982 0018 040D0440 		.word	1074007300
 1983              		.cfi_endproc
 1984              	.LFE21:
 1985              		.size	USBUART_VBusPresent, .-USBUART_VBusPresent
 1986              		.section	.text.USBUART_RWUEnabled,"ax",%progbits
 1987              		.align	2
 1988              		.global	USBUART_RWUEnabled
 1989              		.code	16
 1990              		.thumb_func
 1991              		.type	USBUART_RWUEnabled, %function
 1992              	USBUART_RWUEnabled:
 1993              	.LFB22:
2430:Generated_Source\PSoC4/USBUART.c **** #endif /* (USBUART_VBUS_MONITORING_ENABLE) */
2431:Generated_Source\PSoC4/USBUART.c **** 
2432:Generated_Source\PSoC4/USBUART.c **** 
2433:Generated_Source\PSoC4/USBUART.c **** /*******************************************************************************
2434:Generated_Source\PSoC4/USBUART.c **** * Function Name: USBUART_RWUEnabled
2435:Generated_Source\PSoC4/USBUART.c **** ****************************************************************************//**
2436:Generated_Source\PSoC4/USBUART.c **** *
2437:Generated_Source\PSoC4/USBUART.c **** *  This function returns the current remote wakeup status.
2438:Generated_Source\PSoC4/USBUART.c **** *  If the device supports remote wakeup, the application should use this
2439:Generated_Source\PSoC4/USBUART.c **** *  function to determine if remote wakeup was enabled by the host. When the
2440:Generated_Source\PSoC4/USBUART.c **** *  device is suspended and it determines the conditions to initiate a remote
2441:Generated_Source\PSoC4/USBUART.c **** *  wakeup are met, the application should use the USBFS_Force() function to
2442:Generated_Source\PSoC4/USBUART.c **** *  force the appropriate J and K states onto the USB bus, signaling a remote
2443:Generated_Source\PSoC4/USBUART.c **** *  wakeup.
2444:Generated_Source\PSoC4/USBUART.c **** *
ARM GAS  C:\Users\essele\AppData\Local\Temp\ccbSjPdV.s 			page 79


2445:Generated_Source\PSoC4/USBUART.c **** *
2446:Generated_Source\PSoC4/USBUART.c **** * \return
2447:Generated_Source\PSoC4/USBUART.c **** *  Returns non-zero value if remote wakeup is enabled and zero otherwise.
2448:Generated_Source\PSoC4/USBUART.c **** *
2449:Generated_Source\PSoC4/USBUART.c **** * \globalvars
2450:Generated_Source\PSoC4/USBUART.c **** *  USBUART_deviceStatus - checked to determine remote status
2451:Generated_Source\PSoC4/USBUART.c **** *
2452:Generated_Source\PSoC4/USBUART.c **** *******************************************************************************/
2453:Generated_Source\PSoC4/USBUART.c **** uint8 USBUART_RWUEnabled(void) 
2454:Generated_Source\PSoC4/USBUART.c **** {
 1994              		.loc 1 2454 0
 1995              		.cfi_startproc
 1996              		@ args = 0, pretend = 0, frame = 8
 1997              		@ frame_needed = 1, uses_anonymous_args = 0
 1998 0000 80B5     		push	{r7, lr}
 1999              		.cfi_def_cfa_offset 8
 2000              		.cfi_offset 7, -8
 2001              		.cfi_offset 14, -4
 2002 0002 82B0     		sub	sp, sp, #8
 2003              		.cfi_def_cfa_offset 16
 2004 0004 00AF     		add	r7, sp, #0
 2005              		.cfi_def_cfa_register 7
2455:Generated_Source\PSoC4/USBUART.c ****     uint8 result = USBUART_FALSE;
 2006              		.loc 1 2455 0
 2007 0006 FB1D     		adds	r3, r7, #7
 2008 0008 0022     		movs	r2, #0
 2009 000a 1A70     		strb	r2, [r3]
2456:Generated_Source\PSoC4/USBUART.c **** 
2457:Generated_Source\PSoC4/USBUART.c ****     if (0u != (USBUART_deviceStatus & USBUART_DEVICE_STATUS_REMOTE_WAKEUP))
 2010              		.loc 1 2457 0
 2011 000c 074B     		ldr	r3, .L123
 2012 000e 1B78     		ldrb	r3, [r3]
 2013 0010 DBB2     		uxtb	r3, r3
 2014 0012 1A00     		movs	r2, r3
 2015 0014 0223     		movs	r3, #2
 2016 0016 1340     		ands	r3, r2
 2017 0018 02D0     		beq	.L121
2458:Generated_Source\PSoC4/USBUART.c ****     {
2459:Generated_Source\PSoC4/USBUART.c ****         result = USBUART_TRUE;
 2018              		.loc 1 2459 0
 2019 001a FB1D     		adds	r3, r7, #7
 2020 001c 0122     		movs	r2, #1
 2021 001e 1A70     		strb	r2, [r3]
 2022              	.L121:
2460:Generated_Source\PSoC4/USBUART.c ****     }
2461:Generated_Source\PSoC4/USBUART.c **** 
2462:Generated_Source\PSoC4/USBUART.c ****     return (result);
 2023              		.loc 1 2462 0
 2024 0020 FB1D     		adds	r3, r7, #7
 2025 0022 1B78     		ldrb	r3, [r3]
2463:Generated_Source\PSoC4/USBUART.c **** }
 2026              		.loc 1 2463 0
 2027 0024 1800     		movs	r0, r3
 2028 0026 BD46     		mov	sp, r7
 2029 0028 02B0     		add	sp, sp, #8
 2030              		@ sp needed
 2031 002a 80BD     		pop	{r7, pc}
ARM GAS  C:\Users\essele\AppData\Local\Temp\ccbSjPdV.s 			page 80


 2032              	.L124:
 2033              		.align	2
 2034              	.L123:
 2035 002c 00000000 		.word	USBUART_deviceStatus
 2036              		.cfi_endproc
 2037              	.LFE22:
 2038              		.size	USBUART_RWUEnabled, .-USBUART_RWUEnabled
 2039              		.section	.text.USBUART_GetDeviceAddress,"ax",%progbits
 2040              		.align	2
 2041              		.global	USBUART_GetDeviceAddress
 2042              		.code	16
 2043              		.thumb_func
 2044              		.type	USBUART_GetDeviceAddress, %function
 2045              	USBUART_GetDeviceAddress:
 2046              	.LFB23:
2464:Generated_Source\PSoC4/USBUART.c **** 
2465:Generated_Source\PSoC4/USBUART.c **** 
2466:Generated_Source\PSoC4/USBUART.c **** /*******************************************************************************
2467:Generated_Source\PSoC4/USBUART.c **** * Function Name: USBUART_GetDeviceAddress
2468:Generated_Source\PSoC4/USBUART.c **** ****************************************************************************//**
2469:Generated_Source\PSoC4/USBUART.c **** *
2470:Generated_Source\PSoC4/USBUART.c **** *  This function returns the currently assigned address for the USB device.
2471:Generated_Source\PSoC4/USBUART.c **** *
2472:Generated_Source\PSoC4/USBUART.c **** * \return
2473:Generated_Source\PSoC4/USBUART.c **** *  Returns the currently assigned address.
2474:Generated_Source\PSoC4/USBUART.c **** *  Returns 0 if the device has not yet been assigned an address.
2475:Generated_Source\PSoC4/USBUART.c **** *
2476:Generated_Source\PSoC4/USBUART.c **** *******************************************************************************/
2477:Generated_Source\PSoC4/USBUART.c **** uint8 USBUART_GetDeviceAddress(void) 
2478:Generated_Source\PSoC4/USBUART.c **** {
 2047              		.loc 1 2478 0
 2048              		.cfi_startproc
 2049              		@ args = 0, pretend = 0, frame = 0
 2050              		@ frame_needed = 1, uses_anonymous_args = 0
 2051 0000 80B5     		push	{r7, lr}
 2052              		.cfi_def_cfa_offset 8
 2053              		.cfi_offset 7, -8
 2054              		.cfi_offset 14, -4
 2055 0002 00AF     		add	r7, sp, #0
 2056              		.cfi_def_cfa_register 7
2479:Generated_Source\PSoC4/USBUART.c ****     return (uint8)(USBUART_CR0_REG & USBUART_CR0_DEVICE_ADDRESS_MASK);
 2057              		.loc 1 2479 0
 2058 0004 044B     		ldr	r3, .L127
 2059 0006 1B68     		ldr	r3, [r3]
 2060 0008 DBB2     		uxtb	r3, r3
 2061 000a 7F22     		movs	r2, #127
 2062 000c 1340     		ands	r3, r2
 2063 000e DBB2     		uxtb	r3, r3
2480:Generated_Source\PSoC4/USBUART.c **** }
 2064              		.loc 1 2480 0
 2065 0010 1800     		movs	r0, r3
 2066 0012 BD46     		mov	sp, r7
 2067              		@ sp needed
 2068 0014 80BD     		pop	{r7, pc}
 2069              	.L128:
 2070 0016 C046     		.align	2
 2071              	.L127:
ARM GAS  C:\Users\essele\AppData\Local\Temp\ccbSjPdV.s 			page 81


 2072 0018 20002C40 		.word	1076625440
 2073              		.cfi_endproc
 2074              	.LFE23:
 2075              		.size	USBUART_GetDeviceAddress, .-USBUART_GetDeviceAddress
 2076              		.section	.text.USBUART_EnableSofInt,"ax",%progbits
 2077              		.align	2
 2078              		.global	USBUART_EnableSofInt
 2079              		.code	16
 2080              		.thumb_func
 2081              		.type	USBUART_EnableSofInt, %function
 2082              	USBUART_EnableSofInt:
 2083              	.LFB24:
2481:Generated_Source\PSoC4/USBUART.c **** 
2482:Generated_Source\PSoC4/USBUART.c **** 
2483:Generated_Source\PSoC4/USBUART.c **** /*******************************************************************************
2484:Generated_Source\PSoC4/USBUART.c **** * Function Name: USBUART_EnableSofInt
2485:Generated_Source\PSoC4/USBUART.c **** ****************************************************************************//**
2486:Generated_Source\PSoC4/USBUART.c **** *
2487:Generated_Source\PSoC4/USBUART.c **** *  This function enables interrupt generation when a Start-of-Frame (SOF)
2488:Generated_Source\PSoC4/USBUART.c **** *  packet is received from the host.
2489:Generated_Source\PSoC4/USBUART.c **** *
2490:Generated_Source\PSoC4/USBUART.c **** *******************************************************************************/
2491:Generated_Source\PSoC4/USBUART.c **** void USBUART_EnableSofInt(void) 
2492:Generated_Source\PSoC4/USBUART.c **** {
 2084              		.loc 1 2492 0
 2085              		.cfi_startproc
 2086              		@ args = 0, pretend = 0, frame = 0
 2087              		@ frame_needed = 1, uses_anonymous_args = 0
 2088 0000 80B5     		push	{r7, lr}
 2089              		.cfi_def_cfa_offset 8
 2090              		.cfi_offset 7, -8
 2091              		.cfi_offset 14, -4
 2092 0002 00AF     		add	r7, sp, #0
 2093              		.cfi_def_cfa_register 7
2493:Generated_Source\PSoC4/USBUART.c **** #if (CY_PSOC4)
2494:Generated_Source\PSoC4/USBUART.c ****     /* Enable SOF interrupt interrupt source. */
2495:Generated_Source\PSoC4/USBUART.c ****     USBUART_INTR_SIE_MASK_REG |= (uint32) USBUART_INTR_SIE_SOF_INTR;
 2094              		.loc 1 2495 0
 2095 0004 044B     		ldr	r3, .L130
 2096 0006 044A     		ldr	r2, .L130
 2097 0008 1268     		ldr	r2, [r2]
 2098 000a 0121     		movs	r1, #1
 2099 000c 0A43     		orrs	r2, r1
 2100 000e 1A60     		str	r2, [r3]
2496:Generated_Source\PSoC4/USBUART.c **** #else
2497:Generated_Source\PSoC4/USBUART.c ****     /* Enable SOF interrupt if it is present. */
2498:Generated_Source\PSoC4/USBUART.c ****     #if (USBUART_SOF_ISR_ACTIVE)
2499:Generated_Source\PSoC4/USBUART.c ****         CyIntEnable(USBUART_SOF_VECT_NUM);
2500:Generated_Source\PSoC4/USBUART.c ****     #endif /* (USBUART_SOF_ISR_ACTIVE) */
2501:Generated_Source\PSoC4/USBUART.c **** #endif /* (CY_PSOC4) */
2502:Generated_Source\PSoC4/USBUART.c **** }
 2101              		.loc 1 2502 0
 2102 0010 C046     		nop
 2103 0012 BD46     		mov	sp, r7
 2104              		@ sp needed
 2105 0014 80BD     		pop	{r7, pc}
 2106              	.L131:
ARM GAS  C:\Users\essele\AppData\Local\Temp\ccbSjPdV.s 			page 82


 2107 0016 C046     		.align	2
 2108              	.L130:
 2109 0018 28202C40 		.word	1076633640
 2110              		.cfi_endproc
 2111              	.LFE24:
 2112              		.size	USBUART_EnableSofInt, .-USBUART_EnableSofInt
 2113              		.section	.text.USBUART_DisableSofInt,"ax",%progbits
 2114              		.align	2
 2115              		.global	USBUART_DisableSofInt
 2116              		.code	16
 2117              		.thumb_func
 2118              		.type	USBUART_DisableSofInt, %function
 2119              	USBUART_DisableSofInt:
 2120              	.LFB25:
2503:Generated_Source\PSoC4/USBUART.c **** 
2504:Generated_Source\PSoC4/USBUART.c **** 
2505:Generated_Source\PSoC4/USBUART.c **** /*******************************************************************************
2506:Generated_Source\PSoC4/USBUART.c **** * Function Name: USBUART_DisableSofInt
2507:Generated_Source\PSoC4/USBUART.c **** ****************************************************************************//**
2508:Generated_Source\PSoC4/USBUART.c **** *
2509:Generated_Source\PSoC4/USBUART.c **** *  This function disables interrupt generation when a Start-of-Frame (SOF)
2510:Generated_Source\PSoC4/USBUART.c **** *  packet is received from the host.
2511:Generated_Source\PSoC4/USBUART.c **** *
2512:Generated_Source\PSoC4/USBUART.c **** *******************************************************************************/
2513:Generated_Source\PSoC4/USBUART.c **** void USBUART_DisableSofInt(void) 
2514:Generated_Source\PSoC4/USBUART.c **** {
 2121              		.loc 1 2514 0
 2122              		.cfi_startproc
 2123              		@ args = 0, pretend = 0, frame = 0
 2124              		@ frame_needed = 1, uses_anonymous_args = 0
 2125 0000 80B5     		push	{r7, lr}
 2126              		.cfi_def_cfa_offset 8
 2127              		.cfi_offset 7, -8
 2128              		.cfi_offset 14, -4
 2129 0002 00AF     		add	r7, sp, #0
 2130              		.cfi_def_cfa_register 7
2515:Generated_Source\PSoC4/USBUART.c **** #if (CY_PSOC4)
2516:Generated_Source\PSoC4/USBUART.c ****     /* Disable SOF interrupt interrupt source. */
2517:Generated_Source\PSoC4/USBUART.c ****     USBUART_INTR_SIE_MASK_REG &= (uint32) ~USBUART_INTR_SIE_SOF_INTR;
 2131              		.loc 1 2517 0
 2132 0004 044B     		ldr	r3, .L133
 2133 0006 044A     		ldr	r2, .L133
 2134 0008 1268     		ldr	r2, [r2]
 2135 000a 0121     		movs	r1, #1
 2136 000c 8A43     		bics	r2, r1
 2137 000e 1A60     		str	r2, [r3]
2518:Generated_Source\PSoC4/USBUART.c **** #else
2519:Generated_Source\PSoC4/USBUART.c ****     /* Disable SOF interrupt if it is present. */
2520:Generated_Source\PSoC4/USBUART.c ****     #if (USBUART_SOF_ISR_ACTIVE)
2521:Generated_Source\PSoC4/USBUART.c ****         CyIntDisable(USBUART_SOF_VECT_NUM);
2522:Generated_Source\PSoC4/USBUART.c ****     #endif /* (USBUART_SOF_ISR_ACTIVE) */
2523:Generated_Source\PSoC4/USBUART.c **** #endif /* (CY_PSOC4) */
2524:Generated_Source\PSoC4/USBUART.c **** }
 2138              		.loc 1 2524 0
 2139 0010 C046     		nop
 2140 0012 BD46     		mov	sp, r7
 2141              		@ sp needed
ARM GAS  C:\Users\essele\AppData\Local\Temp\ccbSjPdV.s 			page 83


 2142 0014 80BD     		pop	{r7, pc}
 2143              	.L134:
 2144 0016 C046     		.align	2
 2145              	.L133:
 2146 0018 28202C40 		.word	1076633640
 2147              		.cfi_endproc
 2148              	.LFE25:
 2149              		.size	USBUART_DisableSofInt, .-USBUART_DisableSofInt
 2150              		.text
 2151              	.Letext0:
 2152              		.file 2 "Generated_Source\\PSoC4\\cytypes.h"
 2153              		.file 3 "Generated_Source\\PSoC4\\USBUART.h"
 2154              		.file 4 "Generated_Source\\PSoC4\\USBUART_pvt.h"
 2155              		.section	.debug_info,"",%progbits
 2156              	.Ldebug_info0:
 2157 0000 AC080000 		.4byte	0x8ac
 2158 0004 0400     		.2byte	0x4
 2159 0006 00000000 		.4byte	.Ldebug_abbrev0
 2160 000a 04       		.byte	0x4
 2161 000b 01       		.uleb128 0x1
 2162 000c DD020000 		.4byte	.LASF103
 2163 0010 0C       		.byte	0xc
 2164 0011 2F000000 		.4byte	.LASF104
 2165 0015 6F050000 		.4byte	.LASF105
 2166 0019 00000000 		.4byte	.Ldebug_ranges0+0
 2167 001d 00000000 		.4byte	0
 2168 0021 00000000 		.4byte	.Ldebug_line0
 2169 0025 02       		.uleb128 0x2
 2170 0026 01       		.byte	0x1
 2171 0027 06       		.byte	0x6
 2172 0028 12010000 		.4byte	.LASF0
 2173 002c 02       		.uleb128 0x2
 2174 002d 01       		.byte	0x1
 2175 002e 08       		.byte	0x8
 2176 002f 59040000 		.4byte	.LASF1
 2177 0033 02       		.uleb128 0x2
 2178 0034 02       		.byte	0x2
 2179 0035 05       		.byte	0x5
 2180 0036 6E040000 		.4byte	.LASF2
 2181 003a 02       		.uleb128 0x2
 2182 003b 02       		.byte	0x2
 2183 003c 07       		.byte	0x7
 2184 003d 80020000 		.4byte	.LASF3
 2185 0041 02       		.uleb128 0x2
 2186 0042 04       		.byte	0x4
 2187 0043 05       		.byte	0x5
 2188 0044 82010000 		.4byte	.LASF4
 2189 0048 02       		.uleb128 0x2
 2190 0049 04       		.byte	0x4
 2191 004a 07       		.byte	0x7
 2192 004b 6E020000 		.4byte	.LASF5
 2193 004f 02       		.uleb128 0x2
 2194 0050 08       		.byte	0x8
 2195 0051 05       		.byte	0x5
 2196 0052 04010000 		.4byte	.LASF6
 2197 0056 02       		.uleb128 0x2
 2198 0057 08       		.byte	0x8
ARM GAS  C:\Users\essele\AppData\Local\Temp\ccbSjPdV.s 			page 84


 2199 0058 07       		.byte	0x7
 2200 0059 8B000000 		.4byte	.LASF7
 2201 005d 03       		.uleb128 0x3
 2202 005e 04       		.byte	0x4
 2203 005f 05       		.byte	0x5
 2204 0060 696E7400 		.ascii	"int\000"
 2205 0064 02       		.uleb128 0x2
 2206 0065 04       		.byte	0x4
 2207 0066 07       		.byte	0x7
 2208 0067 61020000 		.4byte	.LASF8
 2209 006b 04       		.uleb128 0x4
 2210 006c A1010000 		.4byte	.LASF9
 2211 0070 02       		.byte	0x2
 2212 0071 E401     		.2byte	0x1e4
 2213 0073 2C000000 		.4byte	0x2c
 2214 0077 04       		.uleb128 0x4
 2215 0078 00000000 		.4byte	.LASF10
 2216 007c 02       		.byte	0x2
 2217 007d E501     		.2byte	0x1e5
 2218 007f 3A000000 		.4byte	0x3a
 2219 0083 04       		.uleb128 0x4
 2220 0084 22020000 		.4byte	.LASF11
 2221 0088 02       		.byte	0x2
 2222 0089 E601     		.2byte	0x1e6
 2223 008b 48000000 		.4byte	0x48
 2224 008f 02       		.uleb128 0x2
 2225 0090 04       		.byte	0x4
 2226 0091 04       		.byte	0x4
 2227 0092 1D040000 		.4byte	.LASF12
 2228 0096 02       		.uleb128 0x2
 2229 0097 08       		.byte	0x8
 2230 0098 04       		.byte	0x4
 2231 0099 B5010000 		.4byte	.LASF13
 2232 009d 02       		.uleb128 0x2
 2233 009e 01       		.byte	0x1
 2234 009f 08       		.byte	0x8
 2235 00a0 D1040000 		.4byte	.LASF14
 2236 00a4 05       		.uleb128 0x5
 2237 00a5 6B000000 		.4byte	0x6b
 2238 00a9 04       		.uleb128 0x4
 2239 00aa 7C030000 		.4byte	.LASF15
 2240 00ae 02       		.byte	0x2
 2241 00af 9002     		.2byte	0x290
 2242 00b1 B5000000 		.4byte	0xb5
 2243 00b5 05       		.uleb128 0x5
 2244 00b6 83000000 		.4byte	0x83
 2245 00ba 02       		.uleb128 0x2
 2246 00bb 08       		.byte	0x8
 2247 00bc 04       		.byte	0x4
 2248 00bd D8030000 		.4byte	.LASF16
 2249 00c1 02       		.uleb128 0x2
 2250 00c2 04       		.byte	0x4
 2251 00c3 07       		.byte	0x7
 2252 00c4 CF030000 		.4byte	.LASF17
 2253 00c8 06       		.uleb128 0x6
 2254 00c9 0C       		.byte	0xc
 2255 00ca 03       		.byte	0x3
ARM GAS  C:\Users\essele\AppData\Local\Temp\ccbSjPdV.s 			page 85


 2256 00cb 8E       		.byte	0x8e
 2257 00cc 3D010000 		.4byte	0x13d
 2258 00d0 07       		.uleb128 0x7
 2259 00d1 FA030000 		.4byte	.LASF18
 2260 00d5 03       		.byte	0x3
 2261 00d6 90       		.byte	0x90
 2262 00d7 6B000000 		.4byte	0x6b
 2263 00db 00       		.byte	0
 2264 00dc 07       		.uleb128 0x7
 2265 00dd 35040000 		.4byte	.LASF19
 2266 00e1 03       		.byte	0x3
 2267 00e2 91       		.byte	0x91
 2268 00e3 6B000000 		.4byte	0x6b
 2269 00e7 01       		.byte	0x1
 2270 00e8 07       		.uleb128 0x7
 2271 00e9 AE030000 		.4byte	.LASF20
 2272 00ed 03       		.byte	0x3
 2273 00ee 92       		.byte	0x92
 2274 00ef 6B000000 		.4byte	0x6b
 2275 00f3 02       		.byte	0x2
 2276 00f4 07       		.uleb128 0x7
 2277 00f5 A7010000 		.4byte	.LASF21
 2278 00f9 03       		.byte	0x3
 2279 00fa 93       		.byte	0x93
 2280 00fb 6B000000 		.4byte	0x6b
 2281 00ff 03       		.byte	0x3
 2282 0100 07       		.uleb128 0x7
 2283 0101 A2000000 		.4byte	.LASF22
 2284 0105 03       		.byte	0x3
 2285 0106 94       		.byte	0x94
 2286 0107 6B000000 		.4byte	0x6b
 2287 010b 04       		.byte	0x4
 2288 010c 07       		.uleb128 0x7
 2289 010d 35020000 		.4byte	.LASF23
 2290 0111 03       		.byte	0x3
 2291 0112 95       		.byte	0x95
 2292 0113 6B000000 		.4byte	0x6b
 2293 0117 05       		.byte	0x5
 2294 0118 07       		.uleb128 0x7
 2295 0119 2E050000 		.4byte	.LASF24
 2296 011d 03       		.byte	0x3
 2297 011e 96       		.byte	0x96
 2298 011f 77000000 		.4byte	0x77
 2299 0123 06       		.byte	0x6
 2300 0124 07       		.uleb128 0x7
 2301 0125 DB040000 		.4byte	.LASF25
 2302 0129 03       		.byte	0x3
 2303 012a 97       		.byte	0x97
 2304 012b 77000000 		.4byte	0x77
 2305 012f 08       		.byte	0x8
 2306 0130 07       		.uleb128 0x7
 2307 0131 6B030000 		.4byte	.LASF26
 2308 0135 03       		.byte	0x3
 2309 0136 98       		.byte	0x98
 2310 0137 6B000000 		.4byte	0x6b
 2311 013b 0A       		.byte	0xa
 2312 013c 00       		.byte	0
ARM GAS  C:\Users\essele\AppData\Local\Temp\ccbSjPdV.s 			page 86


 2313 013d 08       		.uleb128 0x8
 2314 013e 17050000 		.4byte	.LASF27
 2315 0142 03       		.byte	0x3
 2316 0143 99       		.byte	0x99
 2317 0144 C8000000 		.4byte	0xc8
 2318 0148 06       		.uleb128 0x6
 2319 0149 40       		.byte	0x40
 2320 014a 03       		.byte	0x3
 2321 014b D5       		.byte	0xd5
 2322 014c 81010000 		.4byte	0x181
 2323 0150 07       		.uleb128 0x7
 2324 0151 09040000 		.4byte	.LASF28
 2325 0155 03       		.byte	0x3
 2326 0156 D7       		.byte	0xd7
 2327 0157 83000000 		.4byte	0x83
 2328 015b 00       		.byte	0
 2329 015c 07       		.uleb128 0x7
 2330 015d 10040000 		.4byte	.LASF29
 2331 0161 03       		.byte	0x3
 2332 0162 D8       		.byte	0xd8
 2333 0163 83000000 		.4byte	0x83
 2334 0167 04       		.byte	0x4
 2335 0168 07       		.uleb128 0x7
 2336 0169 17040000 		.4byte	.LASF30
 2337 016d 03       		.byte	0x3
 2338 016e D9       		.byte	0xd9
 2339 016f 83000000 		.4byte	0x83
 2340 0173 08       		.byte	0x8
 2341 0174 09       		.uleb128 0x9
 2342 0175 67617000 		.ascii	"gap\000"
 2343 0179 03       		.byte	0x3
 2344 017a DA       		.byte	0xda
 2345 017b 81010000 		.4byte	0x181
 2346 017f 0C       		.byte	0xc
 2347 0180 00       		.byte	0
 2348 0181 0A       		.uleb128 0xa
 2349 0182 83000000 		.4byte	0x83
 2350 0186 91010000 		.4byte	0x191
 2351 018a 0B       		.uleb128 0xb
 2352 018b C1000000 		.4byte	0xc1
 2353 018f 0C       		.byte	0xc
 2354 0190 00       		.byte	0
 2355 0191 08       		.uleb128 0x8
 2356 0192 AD040000 		.4byte	.LASF31
 2357 0196 03       		.byte	0x3
 2358 0197 DB       		.byte	0xdb
 2359 0198 48010000 		.4byte	0x148
 2360 019c 06       		.uleb128 0x6
 2361 019d 40       		.byte	0x40
 2362 019e 03       		.byte	0x3
 2363 019f E7       		.byte	0xe7
 2364 01a0 1D020000 		.4byte	0x21d
 2365 01a4 07       		.uleb128 0x7
 2366 01a5 AE000000 		.4byte	.LASF32
 2367 01a9 03       		.byte	0x3
 2368 01aa E9       		.byte	0xe9
 2369 01ab 83000000 		.4byte	0x83
ARM GAS  C:\Users\essele\AppData\Local\Temp\ccbSjPdV.s 			page 87


 2370 01af 00       		.byte	0
 2371 01b0 07       		.uleb128 0x7
 2372 01b1 11060000 		.4byte	.LASF33
 2373 01b5 03       		.byte	0x3
 2374 01b6 EA       		.byte	0xea
 2375 01b7 83000000 		.4byte	0x83
 2376 01bb 04       		.byte	0x4
 2377 01bc 07       		.uleb128 0x7
 2378 01bd F5010000 		.4byte	.LASF34
 2379 01c1 03       		.byte	0x3
 2380 01c2 EB       		.byte	0xeb
 2381 01c3 83000000 		.4byte	0x83
 2382 01c7 08       		.byte	0x8
 2383 01c8 07       		.uleb128 0x7
 2384 01c9 3C020000 		.4byte	.LASF35
 2385 01cd 03       		.byte	0x3
 2386 01ce EC       		.byte	0xec
 2387 01cf 83000000 		.4byte	0x83
 2388 01d3 0C       		.byte	0xc
 2389 01d4 07       		.uleb128 0x7
 2390 01d5 B0010000 		.4byte	.LASF36
 2391 01d9 03       		.byte	0x3
 2392 01da ED       		.byte	0xed
 2393 01db 83000000 		.4byte	0x83
 2394 01df 10       		.byte	0x10
 2395 01e0 07       		.uleb128 0x7
 2396 01e1 A5040000 		.4byte	.LASF37
 2397 01e5 03       		.byte	0x3
 2398 01e6 EE       		.byte	0xee
 2399 01e7 83000000 		.4byte	0x83
 2400 01eb 14       		.byte	0x14
 2401 01ec 07       		.uleb128 0x7
 2402 01ed 8B040000 		.4byte	.LASF38
 2403 01f1 03       		.byte	0x3
 2404 01f2 EF       		.byte	0xef
 2405 01f3 83000000 		.4byte	0x83
 2406 01f7 18       		.byte	0x18
 2407 01f8 07       		.uleb128 0x7
 2408 01f9 01040000 		.4byte	.LASF39
 2409 01fd 03       		.byte	0x3
 2410 01fe F0       		.byte	0xf0
 2411 01ff 83000000 		.4byte	0x83
 2412 0203 1C       		.byte	0x1c
 2413 0204 07       		.uleb128 0x7
 2414 0205 C1050000 		.4byte	.LASF40
 2415 0209 03       		.byte	0x3
 2416 020a F1       		.byte	0xf1
 2417 020b 83000000 		.4byte	0x83
 2418 020f 20       		.byte	0x20
 2419 0210 09       		.uleb128 0x9
 2420 0211 67617000 		.ascii	"gap\000"
 2421 0215 03       		.byte	0x3
 2422 0216 F2       		.byte	0xf2
 2423 0217 1D020000 		.4byte	0x21d
 2424 021b 24       		.byte	0x24
 2425 021c 00       		.byte	0
 2426 021d 0A       		.uleb128 0xa
ARM GAS  C:\Users\essele\AppData\Local\Temp\ccbSjPdV.s 			page 88


 2427 021e 83000000 		.4byte	0x83
 2428 0222 2D020000 		.4byte	0x22d
 2429 0226 0B       		.uleb128 0xb
 2430 0227 C1000000 		.4byte	0xc1
 2431 022b 06       		.byte	0x6
 2432 022c 00       		.byte	0
 2433 022d 08       		.uleb128 0x8
 2434 022e 98030000 		.4byte	.LASF41
 2435 0232 03       		.byte	0x3
 2436 0233 F3       		.byte	0xf3
 2437 0234 9C010000 		.4byte	0x19c
 2438 0238 0C       		.uleb128 0xc
 2439 0239 40       		.byte	0x40
 2440 023a 03       		.byte	0x3
 2441 023b 0001     		.2byte	0x100
 2442 023d 90020000 		.4byte	0x290
 2443 0241 0D       		.uleb128 0xd
 2444 0242 A7000000 		.4byte	.LASF42
 2445 0246 03       		.byte	0x3
 2446 0247 0201     		.2byte	0x102
 2447 0249 83000000 		.4byte	0x83
 2448 024d 00       		.byte	0
 2449 024e 0D       		.uleb128 0xd
 2450 024f 19060000 		.4byte	.LASF43
 2451 0253 03       		.byte	0x3
 2452 0254 0301     		.2byte	0x103
 2453 0256 83000000 		.4byte	0x83
 2454 025a 04       		.byte	0x4
 2455 025b 0D       		.uleb128 0xd
 2456 025c 67040000 		.4byte	.LASF44
 2457 0260 03       		.byte	0x3
 2458 0261 0401     		.2byte	0x104
 2459 0263 83000000 		.4byte	0x83
 2460 0267 08       		.byte	0x8
 2461 0268 0D       		.uleb128 0xd
 2462 0269 23060000 		.4byte	.LASF45
 2463 026d 03       		.byte	0x3
 2464 026e 0501     		.2byte	0x105
 2465 0270 83000000 		.4byte	0x83
 2466 0274 0C       		.byte	0xc
 2467 0275 0D       		.uleb128 0xd
 2468 0276 BF000000 		.4byte	.LASF46
 2469 027a 03       		.byte	0x3
 2470 027b 0601     		.2byte	0x106
 2471 027d 83000000 		.4byte	0x83
 2472 0281 10       		.byte	0x10
 2473 0282 0E       		.uleb128 0xe
 2474 0283 67617000 		.ascii	"gap\000"
 2475 0287 03       		.byte	0x3
 2476 0288 0701     		.2byte	0x107
 2477 028a 90020000 		.4byte	0x290
 2478 028e 14       		.byte	0x14
 2479 028f 00       		.byte	0
 2480 0290 0A       		.uleb128 0xa
 2481 0291 83000000 		.4byte	0x83
 2482 0295 A0020000 		.4byte	0x2a0
 2483 0299 0B       		.uleb128 0xb
ARM GAS  C:\Users\essele\AppData\Local\Temp\ccbSjPdV.s 			page 89


 2484 029a C1000000 		.4byte	0xc1
 2485 029e 0A       		.byte	0xa
 2486 029f 00       		.byte	0
 2487 02a0 04       		.uleb128 0x4
 2488 02a1 45020000 		.4byte	.LASF47
 2489 02a5 03       		.byte	0x3
 2490 02a6 0801     		.2byte	0x108
 2491 02a8 38020000 		.4byte	0x238
 2492 02ac 0F       		.uleb128 0xf
 2493 02ad 4002     		.2byte	0x240
 2494 02af 03       		.byte	0x3
 2495 02b0 0F01     		.2byte	0x10f
 2496 02b2 C4020000 		.4byte	0x2c4
 2497 02b6 0D       		.uleb128 0xd
 2498 02b7 2F020000 		.4byte	.LASF48
 2499 02bb 03       		.byte	0x3
 2500 02bc 1101     		.2byte	0x111
 2501 02be C4020000 		.4byte	0x2c4
 2502 02c2 00       		.byte	0
 2503 02c3 00       		.byte	0
 2504 02c4 0A       		.uleb128 0xa
 2505 02c5 91010000 		.4byte	0x191
 2506 02c9 D4020000 		.4byte	0x2d4
 2507 02cd 0B       		.uleb128 0xb
 2508 02ce C1000000 		.4byte	0xc1
 2509 02d2 08       		.byte	0x8
 2510 02d3 00       		.byte	0
 2511 02d4 04       		.uleb128 0x4
 2512 02d5 55010000 		.4byte	.LASF49
 2513 02d9 03       		.byte	0x3
 2514 02da 1201     		.2byte	0x112
 2515 02dc AC020000 		.4byte	0x2ac
 2516 02e0 0F       		.uleb128 0xf
 2517 02e1 4002     		.2byte	0x240
 2518 02e3 03       		.byte	0x3
 2519 02e4 1501     		.2byte	0x115
 2520 02e6 F8020000 		.4byte	0x2f8
 2521 02ea 0D       		.uleb128 0xd
 2522 02eb D7020000 		.4byte	.LASF50
 2523 02ef 03       		.byte	0x3
 2524 02f0 1701     		.2byte	0x117
 2525 02f2 F8020000 		.4byte	0x2f8
 2526 02f6 00       		.byte	0
 2527 02f7 00       		.byte	0
 2528 02f8 0A       		.uleb128 0xa
 2529 02f9 2D020000 		.4byte	0x22d
 2530 02fd 08030000 		.4byte	0x308
 2531 0301 0B       		.uleb128 0xb
 2532 0302 C1000000 		.4byte	0xc1
 2533 0306 08       		.byte	0x8
 2534 0307 00       		.byte	0
 2535 0308 04       		.uleb128 0x4
 2536 0309 B8030000 		.4byte	.LASF51
 2537 030d 03       		.byte	0x3
 2538 030e 1801     		.2byte	0x118
 2539 0310 E0020000 		.4byte	0x2e0
 2540 0314 0F       		.uleb128 0xf
ARM GAS  C:\Users\essele\AppData\Local\Temp\ccbSjPdV.s 			page 90


 2541 0315 4002     		.2byte	0x240
 2542 0317 03       		.byte	0x3
 2543 0318 1C01     		.2byte	0x11c
 2544 031a 2C030000 		.4byte	0x32c
 2545 031e 0D       		.uleb128 0xd
 2546 031f D7020000 		.4byte	.LASF50
 2547 0323 03       		.byte	0x3
 2548 0324 1E01     		.2byte	0x11e
 2549 0326 2C030000 		.4byte	0x32c
 2550 032a 00       		.byte	0
 2551 032b 00       		.byte	0
 2552 032c 0A       		.uleb128 0xa
 2553 032d A0020000 		.4byte	0x2a0
 2554 0331 3C030000 		.4byte	0x33c
 2555 0335 0B       		.uleb128 0xb
 2556 0336 C1000000 		.4byte	0xc1
 2557 033a 08       		.byte	0x8
 2558 033b 00       		.byte	0
 2559 033c 04       		.uleb128 0x4
 2560 033d E6040000 		.4byte	.LASF52
 2561 0341 03       		.byte	0x3
 2562 0342 1F01     		.2byte	0x11f
 2563 0344 14030000 		.4byte	0x314
 2564 0348 10       		.uleb128 0x10
 2565 0349 A0020000 		.4byte	.LASF55
 2566 034d 01       		.byte	0x1
 2567 034e BA       		.byte	0xba
 2568 034f 00000000 		.4byte	.LFB1
 2569 0353 40000000 		.4byte	.LFE1-.LFB1
 2570 0357 01       		.uleb128 0x1
 2571 0358 9C       		.byte	0x9c
 2572 0359 7A030000 		.4byte	0x37a
 2573 035d 11       		.uleb128 0x11
 2574 035e E4000000 		.4byte	.LASF53
 2575 0362 01       		.byte	0x1
 2576 0363 BA       		.byte	0xba
 2577 0364 6B000000 		.4byte	0x6b
 2578 0368 02       		.uleb128 0x2
 2579 0369 91       		.byte	0x91
 2580 036a 77       		.sleb128 -9
 2581 036b 11       		.uleb128 0x11
 2582 036c D6040000 		.4byte	.LASF54
 2583 0370 01       		.byte	0x1
 2584 0371 BA       		.byte	0xba
 2585 0372 6B000000 		.4byte	0x6b
 2586 0376 02       		.uleb128 0x2
 2587 0377 91       		.byte	0x91
 2588 0378 76       		.sleb128 -10
 2589 0379 00       		.byte	0
 2590 037a 12       		.uleb128 0x12
 2591 037b CA020000 		.4byte	.LASF57
 2592 037f 01       		.byte	0x1
 2593 0380 D3       		.byte	0xd3
 2594 0381 00000000 		.4byte	.LFB2
 2595 0385 F0000000 		.4byte	.LFE2-.LFB2
 2596 0389 01       		.uleb128 0x1
 2597 038a 9C       		.byte	0x9c
ARM GAS  C:\Users\essele\AppData\Local\Temp\ccbSjPdV.s 			page 91


 2598 038b 13       		.uleb128 0x13
 2599 038c C6050000 		.4byte	.LASF56
 2600 0390 01       		.byte	0x1
 2601 0391 CC01     		.2byte	0x1cc
 2602 0393 00000000 		.4byte	.LFB3
 2603 0397 F0000000 		.4byte	.LFE3-.LFB3
 2604 039b 01       		.uleb128 0x1
 2605 039c 9C       		.byte	0x9c
 2606 039d C0030000 		.4byte	0x3c0
 2607 03a1 14       		.uleb128 0x14
 2608 03a2 E4000000 		.4byte	.LASF53
 2609 03a6 01       		.byte	0x1
 2610 03a7 CC01     		.2byte	0x1cc
 2611 03a9 6B000000 		.4byte	0x6b
 2612 03ad 02       		.uleb128 0x2
 2613 03ae 91       		.byte	0x91
 2614 03af 77       		.sleb128 -9
 2615 03b0 14       		.uleb128 0x14
 2616 03b1 D6040000 		.4byte	.LASF54
 2617 03b5 01       		.byte	0x1
 2618 03b6 CC01     		.2byte	0x1cc
 2619 03b8 6B000000 		.4byte	0x6b
 2620 03bc 02       		.uleb128 0x2
 2621 03bd 91       		.byte	0x91
 2622 03be 76       		.sleb128 -10
 2623 03bf 00       		.byte	0
 2624 03c0 15       		.uleb128 0x15
 2625 03c1 2D060000 		.4byte	.LASF58
 2626 03c5 01       		.byte	0x1
 2627 03c6 9F02     		.2byte	0x29f
 2628 03c8 00000000 		.4byte	.LFB4
 2629 03cc 64000000 		.4byte	.LFE4-.LFB4
 2630 03d0 01       		.uleb128 0x1
 2631 03d1 9C       		.byte	0x9c
 2632 03d2 13       		.uleb128 0x13
 2633 03d3 93020000 		.4byte	.LASF59
 2634 03d7 01       		.byte	0x1
 2635 03d8 D902     		.2byte	0x2d9
 2636 03da 00000000 		.4byte	.LFB5
 2637 03de A0000000 		.4byte	.LFE5-.LFB5
 2638 03e2 01       		.uleb128 0x1
 2639 03e3 9C       		.byte	0x9c
 2640 03e4 F8030000 		.4byte	0x3f8
 2641 03e8 16       		.uleb128 0x16
 2642 03e9 B0050000 		.4byte	.LASF60
 2643 03ed 01       		.byte	0x1
 2644 03ee DB02     		.2byte	0x2db
 2645 03f0 6B000000 		.4byte	0x6b
 2646 03f4 02       		.uleb128 0x2
 2647 03f5 91       		.byte	0x91
 2648 03f6 6F       		.sleb128 -17
 2649 03f7 00       		.byte	0
 2650 03f8 17       		.uleb128 0x17
 2651 03f9 6C010000 		.4byte	.LASF62
 2652 03fd 01       		.byte	0x1
 2653 03fe 5103     		.2byte	0x351
 2654 0400 6B000000 		.4byte	0x6b
ARM GAS  C:\Users\essele\AppData\Local\Temp\ccbSjPdV.s 			page 92


 2655 0404 00000000 		.4byte	.LFB6
 2656 0408 30000000 		.4byte	.LFE6-.LFB6
 2657 040c 01       		.uleb128 0x1
 2658 040d 9C       		.byte	0x9c
 2659 040e 22040000 		.4byte	0x422
 2660 0412 16       		.uleb128 0x16
 2661 0413 75030000 		.4byte	.LASF61
 2662 0417 01       		.byte	0x1
 2663 0418 5303     		.2byte	0x353
 2664 041a 83000000 		.4byte	0x83
 2665 041e 02       		.uleb128 0x2
 2666 041f 91       		.byte	0x91
 2667 0420 74       		.sleb128 -12
 2668 0421 00       		.byte	0
 2669 0422 18       		.uleb128 0x18
 2670 0423 EB000000 		.4byte	.LASF85
 2671 0427 01       		.byte	0x1
 2672 0428 6803     		.2byte	0x368
 2673 042a 6B000000 		.4byte	0x6b
 2674 042e 00000000 		.4byte	.LFB7
 2675 0432 14000000 		.4byte	.LFE7-.LFB7
 2676 0436 01       		.uleb128 0x1
 2677 0437 9C       		.byte	0x9c
 2678 0438 17       		.uleb128 0x17
 2679 0439 F2050000 		.4byte	.LASF63
 2680 043d 01       		.byte	0x1
 2681 043e 8203     		.2byte	0x382
 2682 0440 6B000000 		.4byte	0x6b
 2683 0444 00000000 		.4byte	.LFB8
 2684 0448 34000000 		.4byte	.LFE8-.LFB8
 2685 044c 01       		.uleb128 0x1
 2686 044d 9C       		.byte	0x9c
 2687 044e 62040000 		.4byte	0x462
 2688 0452 19       		.uleb128 0x19
 2689 0453 72657300 		.ascii	"res\000"
 2690 0457 01       		.byte	0x1
 2691 0458 8403     		.2byte	0x384
 2692 045a 6B000000 		.4byte	0x6b
 2693 045e 02       		.uleb128 0x2
 2694 045f 91       		.byte	0x91
 2695 0460 77       		.sleb128 -9
 2696 0461 00       		.byte	0
 2697 0462 17       		.uleb128 0x17
 2698 0463 AE020000 		.4byte	.LASF64
 2699 0467 01       		.byte	0x1
 2700 0468 9F03     		.2byte	0x39f
 2701 046a 6B000000 		.4byte	0x6b
 2702 046e 00000000 		.4byte	.LFB9
 2703 0472 24000000 		.4byte	.LFE9-.LFB9
 2704 0476 01       		.uleb128 0x1
 2705 0477 9C       		.byte	0x9c
 2706 0478 8C040000 		.4byte	0x48c
 2707 047c 14       		.uleb128 0x14
 2708 047d 39050000 		.4byte	.LASF65
 2709 0481 01       		.byte	0x1
 2710 0482 9F03     		.2byte	0x39f
 2711 0484 6B000000 		.4byte	0x6b
ARM GAS  C:\Users\essele\AppData\Local\Temp\ccbSjPdV.s 			page 93


 2712 0488 02       		.uleb128 0x2
 2713 0489 91       		.byte	0x91
 2714 048a 77       		.sleb128 -9
 2715 048b 00       		.byte	0
 2716 048c 17       		.uleb128 0x17
 2717 048d 78040000 		.4byte	.LASF66
 2718 0491 01       		.byte	0x1
 2719 0492 BF03     		.2byte	0x3bf
 2720 0494 6B000000 		.4byte	0x6b
 2721 0498 00000000 		.4byte	.LFB10
 2722 049c 30000000 		.4byte	.LFE10-.LFB10
 2723 04a0 01       		.uleb128 0x1
 2724 04a1 9C       		.byte	0x9c
 2725 04a2 B6040000 		.4byte	0x4b6
 2726 04a6 14       		.uleb128 0x14
 2727 04a7 C6000000 		.4byte	.LASF67
 2728 04ab 01       		.byte	0x1
 2729 04ac BF03     		.2byte	0x3bf
 2730 04ae 6B000000 		.4byte	0x6b
 2731 04b2 02       		.uleb128 0x2
 2732 04b3 91       		.byte	0x91
 2733 04b4 77       		.sleb128 -9
 2734 04b5 00       		.byte	0
 2735 04b6 17       		.uleb128 0x17
 2736 04b7 49050000 		.4byte	.LASF68
 2737 04bb 01       		.byte	0x1
 2738 04bc D603     		.2byte	0x3d6
 2739 04be 77000000 		.4byte	0x77
 2740 04c2 00000000 		.4byte	.LFB11
 2741 04c6 80000000 		.4byte	.LFE11-.LFB11
 2742 04ca 01       		.uleb128 0x1
 2743 04cb 9C       		.byte	0x9c
 2744 04cc EF040000 		.4byte	0x4ef
 2745 04d0 14       		.uleb128 0x14
 2746 04d1 C6000000 		.4byte	.LASF67
 2747 04d5 01       		.byte	0x1
 2748 04d6 D603     		.2byte	0x3d6
 2749 04d8 6B000000 		.4byte	0x6b
 2750 04dc 02       		.uleb128 0x2
 2751 04dd 91       		.byte	0x91
 2752 04de 6F       		.sleb128 -17
 2753 04df 16       		.uleb128 0x16
 2754 04e0 50010000 		.4byte	.LASF69
 2755 04e4 01       		.byte	0x1
 2756 04e5 D803     		.2byte	0x3d8
 2757 04e7 77000000 		.4byte	0x77
 2758 04eb 02       		.uleb128 0x2
 2759 04ec 91       		.byte	0x91
 2760 04ed 76       		.sleb128 -10
 2761 04ee 00       		.byte	0
 2762 04ef 1A       		.uleb128 0x1a
 2763 04f0 7A000000 		.4byte	.LASF70
 2764 04f4 01       		.byte	0x1
 2765 04f5 3E05     		.2byte	0x53e
 2766 04f7 00000000 		.4byte	.LFB12
 2767 04fb 4C010000 		.4byte	.LFE12-.LFB12
 2768 04ff 01       		.uleb128 0x1
ARM GAS  C:\Users\essele\AppData\Local\Temp\ccbSjPdV.s 			page 94


 2769 0500 9C       		.byte	0x9c
 2770 0501 4A050000 		.4byte	0x54a
 2771 0505 14       		.uleb128 0x14
 2772 0506 C6000000 		.4byte	.LASF67
 2773 050a 01       		.byte	0x1
 2774 050b 3E05     		.2byte	0x53e
 2775 050d 6B000000 		.4byte	0x6b
 2776 0511 02       		.uleb128 0x2
 2777 0512 91       		.byte	0x91
 2778 0513 67       		.sleb128 -25
 2779 0514 14       		.uleb128 0x14
 2780 0515 29020000 		.4byte	.LASF71
 2781 0519 01       		.byte	0x1
 2782 051a 3E05     		.2byte	0x53e
 2783 051c 4A050000 		.4byte	0x54a
 2784 0520 02       		.uleb128 0x2
 2785 0521 91       		.byte	0x91
 2786 0522 60       		.sleb128 -32
 2787 0523 14       		.uleb128 0x14
 2788 0524 CA040000 		.4byte	.LASF72
 2789 0528 01       		.byte	0x1
 2790 0529 3E05     		.2byte	0x53e
 2791 052b 77000000 		.4byte	0x77
 2792 052f 02       		.uleb128 0x2
 2793 0530 91       		.byte	0x91
 2794 0531 64       		.sleb128 -28
 2795 0532 1B       		.uleb128 0x1b
 2796 0533 BA000000 		.4byte	.LBB2
 2797 0537 40000000 		.4byte	.LBE2-.LBB2
 2798 053b 19       		.uleb128 0x19
 2799 053c 6900     		.ascii	"i\000"
 2800 053e 01       		.byte	0x1
 2801 053f 5305     		.2byte	0x553
 2802 0541 77000000 		.4byte	0x77
 2803 0545 02       		.uleb128 0x2
 2804 0546 91       		.byte	0x91
 2805 0547 6E       		.sleb128 -18
 2806 0548 00       		.byte	0
 2807 0549 00       		.byte	0
 2808 054a 1C       		.uleb128 0x1c
 2809 054b 04       		.byte	0x4
 2810 054c 50050000 		.4byte	0x550
 2811 0550 1D       		.uleb128 0x1d
 2812 0551 6B000000 		.4byte	0x6b
 2813 0555 1E       		.uleb128 0x1e
 2814 0556 23040000 		.4byte	.LASF73
 2815 055a 01       		.byte	0x1
 2816 055b 7506     		.2byte	0x675
 2817 055d 77000000 		.4byte	0x77
 2818 0561 00000000 		.4byte	.LFB13
 2819 0565 C0000000 		.4byte	.LFE13-.LFB13
 2820 0569 01       		.uleb128 0x1
 2821 056a 9C       		.byte	0x9c
 2822 056b B4050000 		.4byte	0x5b4
 2823 056f 14       		.uleb128 0x14
 2824 0570 C6000000 		.4byte	.LASF67
 2825 0574 01       		.byte	0x1
ARM GAS  C:\Users\essele\AppData\Local\Temp\ccbSjPdV.s 			page 95


 2826 0575 7506     		.2byte	0x675
 2827 0577 6B000000 		.4byte	0x6b
 2828 057b 02       		.uleb128 0x2
 2829 057c 91       		.byte	0x91
 2830 057d 6F       		.sleb128 -17
 2831 057e 14       		.uleb128 0x14
 2832 057f 29020000 		.4byte	.LASF71
 2833 0583 01       		.byte	0x1
 2834 0584 7506     		.2byte	0x675
 2835 0586 B4050000 		.4byte	0x5b4
 2836 058a 02       		.uleb128 0x2
 2837 058b 91       		.byte	0x91
 2838 058c 68       		.sleb128 -24
 2839 058d 14       		.uleb128 0x14
 2840 058e CA040000 		.4byte	.LASF72
 2841 0592 01       		.byte	0x1
 2842 0593 7506     		.2byte	0x675
 2843 0595 77000000 		.4byte	0x77
 2844 0599 02       		.uleb128 0x2
 2845 059a 91       		.byte	0x91
 2846 059b 6C       		.sleb128 -20
 2847 059c 1B       		.uleb128 0x1b
 2848 059d 5A000000 		.4byte	.LBB3
 2849 05a1 42000000 		.4byte	.LBE3-.LBB3
 2850 05a5 19       		.uleb128 0x19
 2851 05a6 6900     		.ascii	"i\000"
 2852 05a8 01       		.byte	0x1
 2853 05a9 8206     		.2byte	0x682
 2854 05ab 77000000 		.4byte	0x77
 2855 05af 02       		.uleb128 0x2
 2856 05b0 91       		.byte	0x91
 2857 05b1 76       		.sleb128 -10
 2858 05b2 00       		.byte	0
 2859 05b3 00       		.byte	0
 2860 05b4 1C       		.uleb128 0x1c
 2861 05b5 04       		.byte	0x4
 2862 05b6 6B000000 		.4byte	0x6b
 2863 05ba 13       		.uleb128 0x13
 2864 05bb 5C050000 		.4byte	.LASF74
 2865 05bf 01       		.byte	0x1
 2866 05c0 4907     		.2byte	0x749
 2867 05c2 00000000 		.4byte	.LFB14
 2868 05c6 78010000 		.4byte	.LFE14-.LFB14
 2869 05ca 01       		.uleb128 0x1
 2870 05cb 9C       		.byte	0x9c
 2871 05cc 24060000 		.4byte	0x624
 2872 05d0 14       		.uleb128 0x14
 2873 05d1 C6000000 		.4byte	.LASF67
 2874 05d5 01       		.byte	0x1
 2875 05d6 4907     		.2byte	0x749
 2876 05d8 6B000000 		.4byte	0x6b
 2877 05dc 02       		.uleb128 0x2
 2878 05dd 91       		.byte	0x91
 2879 05de 67       		.sleb128 -25
 2880 05df 14       		.uleb128 0x14
 2881 05e0 29020000 		.4byte	.LASF71
 2882 05e4 01       		.byte	0x1
ARM GAS  C:\Users\essele\AppData\Local\Temp\ccbSjPdV.s 			page 96


 2883 05e5 4907     		.2byte	0x749
 2884 05e7 4A050000 		.4byte	0x54a
 2885 05eb 02       		.uleb128 0x2
 2886 05ec 91       		.byte	0x91
 2887 05ed 60       		.sleb128 -32
 2888 05ee 14       		.uleb128 0x14
 2889 05ef CA040000 		.4byte	.LASF72
 2890 05f3 01       		.byte	0x1
 2891 05f4 4907     		.2byte	0x749
 2892 05f6 77000000 		.4byte	0x77
 2893 05fa 02       		.uleb128 0x2
 2894 05fb 91       		.byte	0x91
 2895 05fc 64       		.sleb128 -28
 2896 05fd 1B       		.uleb128 0x1b
 2897 05fe DC000000 		.4byte	.LBB4
 2898 0602 4A000000 		.4byte	.LBE4-.LBB4
 2899 0606 16       		.uleb128 0x16
 2900 0607 F2030000 		.4byte	.LASF75
 2901 060b 01       		.byte	0x1
 2902 060c 6307     		.2byte	0x763
 2903 060e 24060000 		.4byte	0x624
 2904 0612 02       		.uleb128 0x2
 2905 0613 91       		.byte	0x91
 2906 0614 68       		.sleb128 -24
 2907 0615 19       		.uleb128 0x19
 2908 0616 6900     		.ascii	"i\000"
 2909 0618 01       		.byte	0x1
 2910 0619 6607     		.2byte	0x766
 2911 061b 77000000 		.4byte	0x77
 2912 061f 02       		.uleb128 0x2
 2913 0620 91       		.byte	0x91
 2914 0621 6E       		.sleb128 -18
 2915 0622 00       		.byte	0
 2916 0623 00       		.byte	0
 2917 0624 1C       		.uleb128 0x1c
 2918 0625 04       		.byte	0x4
 2919 0626 2A060000 		.4byte	0x62a
 2920 062a 1D       		.uleb128 0x1d
 2921 062b 77000000 		.4byte	0x77
 2922 062f 1E       		.uleb128 0x1e
 2923 0630 1E010000 		.4byte	.LASF76
 2924 0634 01       		.byte	0x1
 2925 0635 3808     		.2byte	0x838
 2926 0637 77000000 		.4byte	0x77
 2927 063b 00000000 		.4byte	.LFB15
 2928 063f E4000000 		.4byte	.LFE15-.LFB15
 2929 0643 01       		.uleb128 0x1
 2930 0644 9C       		.byte	0x9c
 2931 0645 AC060000 		.4byte	0x6ac
 2932 0649 14       		.uleb128 0x14
 2933 064a C6000000 		.4byte	.LASF67
 2934 064e 01       		.byte	0x1
 2935 064f 3808     		.2byte	0x838
 2936 0651 6B000000 		.4byte	0x6b
 2937 0655 02       		.uleb128 0x2
 2938 0656 91       		.byte	0x91
 2939 0657 67       		.sleb128 -25
ARM GAS  C:\Users\essele\AppData\Local\Temp\ccbSjPdV.s 			page 97


 2940 0658 14       		.uleb128 0x14
 2941 0659 29020000 		.4byte	.LASF71
 2942 065d 01       		.byte	0x1
 2943 065e 3808     		.2byte	0x838
 2944 0660 B4050000 		.4byte	0x5b4
 2945 0664 02       		.uleb128 0x2
 2946 0665 91       		.byte	0x91
 2947 0666 60       		.sleb128 -32
 2948 0667 14       		.uleb128 0x14
 2949 0668 CA040000 		.4byte	.LASF72
 2950 066c 01       		.byte	0x1
 2951 066d 3808     		.2byte	0x838
 2952 066f 77000000 		.4byte	0x77
 2953 0673 02       		.uleb128 0x2
 2954 0674 91       		.byte	0x91
 2955 0675 64       		.sleb128 -28
 2956 0676 16       		.uleb128 0x16
 2957 0677 46010000 		.4byte	.LASF77
 2958 067b 01       		.byte	0x1
 2959 067c 3A08     		.2byte	0x83a
 2960 067e 83000000 		.4byte	0x83
 2961 0682 02       		.uleb128 0x2
 2962 0683 91       		.byte	0x91
 2963 0684 70       		.sleb128 -16
 2964 0685 1B       		.uleb128 0x1b
 2965 0686 78000000 		.4byte	.LBB5
 2966 068a 48000000 		.4byte	.LBE5-.LBB5
 2967 068e 16       		.uleb128 0x16
 2968 068f F2030000 		.4byte	.LASF75
 2969 0693 01       		.byte	0x1
 2970 0694 4C08     		.2byte	0x84c
 2971 0696 AC060000 		.4byte	0x6ac
 2972 069a 02       		.uleb128 0x2
 2973 069b 91       		.byte	0x91
 2974 069c 6C       		.sleb128 -20
 2975 069d 19       		.uleb128 0x19
 2976 069e 6900     		.ascii	"i\000"
 2977 06a0 01       		.byte	0x1
 2978 06a1 4F08     		.2byte	0x84f
 2979 06a3 77000000 		.4byte	0x77
 2980 06a7 02       		.uleb128 0x2
 2981 06a8 91       		.byte	0x91
 2982 06a9 76       		.sleb128 -10
 2983 06aa 00       		.byte	0
 2984 06ab 00       		.byte	0
 2985 06ac 1C       		.uleb128 0x1c
 2986 06ad 04       		.byte	0x4
 2987 06ae 77000000 		.4byte	0x77
 2988 06b2 1A       		.uleb128 0x1a
 2989 06b3 32010000 		.4byte	.LASF78
 2990 06b7 01       		.byte	0x1
 2991 06b8 E408     		.2byte	0x8e4
 2992 06ba 00000000 		.4byte	.LFB16
 2993 06be 68000000 		.4byte	.LFE16-.LFB16
 2994 06c2 01       		.uleb128 0x1
 2995 06c3 9C       		.byte	0x9c
 2996 06c4 D8060000 		.4byte	0x6d8
ARM GAS  C:\Users\essele\AppData\Local\Temp\ccbSjPdV.s 			page 98


 2997 06c8 14       		.uleb128 0x14
 2998 06c9 C6000000 		.4byte	.LASF67
 2999 06cd 01       		.byte	0x1
 3000 06ce E408     		.2byte	0x8e4
 3001 06d0 6B000000 		.4byte	0x6b
 3002 06d4 02       		.uleb128 0x2
 3003 06d5 91       		.byte	0x91
 3004 06d6 6F       		.sleb128 -17
 3005 06d7 00       		.byte	0
 3006 06d8 1A       		.uleb128 0x1a
 3007 06d9 90040000 		.4byte	.LASF79
 3008 06dd 01       		.byte	0x1
 3009 06de FC08     		.2byte	0x8fc
 3010 06e0 00000000 		.4byte	.LFB17
 3011 06e4 38000000 		.4byte	.LFE17-.LFB17
 3012 06e8 01       		.uleb128 0x1
 3013 06e9 9C       		.byte	0x9c
 3014 06ea FE060000 		.4byte	0x6fe
 3015 06ee 14       		.uleb128 0x14
 3016 06ef C6000000 		.4byte	.LASF67
 3017 06f3 01       		.byte	0x1
 3018 06f4 FC08     		.2byte	0x8fc
 3019 06f6 6B000000 		.4byte	0x6b
 3020 06fa 02       		.uleb128 0x2
 3021 06fb 91       		.byte	0x91
 3022 06fc 77       		.sleb128 -9
 3023 06fd 00       		.byte	0
 3024 06fe 1A       		.uleb128 0x1a
 3025 06ff E4030000 		.4byte	.LASF80
 3026 0703 01       		.byte	0x1
 3027 0704 1A09     		.2byte	0x91a
 3028 0706 00000000 		.4byte	.LFB18
 3029 070a 20000000 		.4byte	.LFE18-.LFB18
 3030 070e 01       		.uleb128 0x1
 3031 070f 9C       		.byte	0x9c
 3032 0710 24070000 		.4byte	0x724
 3033 0714 14       		.uleb128 0x14
 3034 0715 C3040000 		.4byte	.LASF81
 3035 0719 01       		.byte	0x1
 3036 071a 1A09     		.2byte	0x91a
 3037 071c 6B000000 		.4byte	0x6b
 3038 0720 02       		.uleb128 0x2
 3039 0721 91       		.byte	0x91
 3040 0722 77       		.sleb128 -9
 3041 0723 00       		.byte	0
 3042 0724 17       		.uleb128 0x17
 3043 0725 8B010000 		.4byte	.LASF82
 3044 0729 01       		.byte	0x1
 3045 072a 3309     		.2byte	0x933
 3046 072c 6B000000 		.4byte	0x6b
 3047 0730 00000000 		.4byte	.LFB19
 3048 0734 44000000 		.4byte	.LFE19-.LFB19
 3049 0738 01       		.uleb128 0x1
 3050 0739 9C       		.byte	0x9c
 3051 073a 5C070000 		.4byte	0x75c
 3052 073e 14       		.uleb128 0x14
 3053 073f C6000000 		.4byte	.LASF67
ARM GAS  C:\Users\essele\AppData\Local\Temp\ccbSjPdV.s 			page 99


 3054 0743 01       		.byte	0x1
 3055 0744 3309     		.2byte	0x933
 3056 0746 6B000000 		.4byte	0x6b
 3057 074a 02       		.uleb128 0x2
 3058 074b 91       		.byte	0x91
 3059 074c 6F       		.sleb128 -17
 3060 074d 19       		.uleb128 0x19
 3061 074e 637200   		.ascii	"cr\000"
 3062 0751 01       		.byte	0x1
 3063 0752 3509     		.2byte	0x935
 3064 0754 83000000 		.4byte	0x83
 3065 0758 02       		.uleb128 0x2
 3066 0759 91       		.byte	0x91
 3067 075a 74       		.sleb128 -12
 3068 075b 00       		.byte	0
 3069 075c 1A       		.uleb128 0x1a
 3070 075d DE010000 		.4byte	.LASF83
 3071 0761 01       		.byte	0x1
 3072 0762 5C09     		.2byte	0x95c
 3073 0764 00000000 		.4byte	.LFB20
 3074 0768 44000000 		.4byte	.LFE20-.LFB20
 3075 076c 01       		.uleb128 0x1
 3076 076d 9C       		.byte	0x9c
 3077 076e 82070000 		.4byte	0x782
 3078 0772 14       		.uleb128 0x14
 3079 0773 BC010000 		.4byte	.LASF84
 3080 0777 01       		.byte	0x1
 3081 0778 5C09     		.2byte	0x95c
 3082 077a 6B000000 		.4byte	0x6b
 3083 077e 02       		.uleb128 0x2
 3084 077f 91       		.byte	0x91
 3085 0780 77       		.sleb128 -9
 3086 0781 00       		.byte	0
 3087 0782 18       		.uleb128 0x18
 3088 0783 03050000 		.4byte	.LASF86
 3089 0787 01       		.byte	0x1
 3090 0788 7A09     		.2byte	0x97a
 3091 078a 6B000000 		.4byte	0x6b
 3092 078e 00000000 		.4byte	.LFB21
 3093 0792 1C000000 		.4byte	.LFE21-.LFB21
 3094 0796 01       		.uleb128 0x1
 3095 0797 9C       		.byte	0x9c
 3096 0798 17       		.uleb128 0x17
 3097 0799 50000000 		.4byte	.LASF87
 3098 079d 01       		.byte	0x1
 3099 079e 9509     		.2byte	0x995
 3100 07a0 6B000000 		.4byte	0x6b
 3101 07a4 00000000 		.4byte	.LFB22
 3102 07a8 30000000 		.4byte	.LFE22-.LFB22
 3103 07ac 01       		.uleb128 0x1
 3104 07ad 9C       		.byte	0x9c
 3105 07ae C2070000 		.4byte	0x7c2
 3106 07b2 16       		.uleb128 0x16
 3107 07b3 8D060000 		.4byte	.LASF88
 3108 07b7 01       		.byte	0x1
 3109 07b8 9709     		.2byte	0x997
 3110 07ba 6B000000 		.4byte	0x6b
ARM GAS  C:\Users\essele\AppData\Local\Temp\ccbSjPdV.s 			page 100


 3111 07be 02       		.uleb128 0x2
 3112 07bf 91       		.byte	0x91
 3113 07c0 77       		.sleb128 -9
 3114 07c1 00       		.byte	0
 3115 07c2 18       		.uleb128 0x18
 3116 07c3 16000000 		.4byte	.LASF89
 3117 07c7 01       		.byte	0x1
 3118 07c8 AD09     		.2byte	0x9ad
 3119 07ca 6B000000 		.4byte	0x6b
 3120 07ce 00000000 		.4byte	.LFB23
 3121 07d2 1C000000 		.4byte	.LFE23-.LFB23
 3122 07d6 01       		.uleb128 0x1
 3123 07d7 9C       		.byte	0x9c
 3124 07d8 15       		.uleb128 0x15
 3125 07d9 5B060000 		.4byte	.LASF90
 3126 07dd 01       		.byte	0x1
 3127 07de BB09     		.2byte	0x9bb
 3128 07e0 00000000 		.4byte	.LFB24
 3129 07e4 1C000000 		.4byte	.LFE24-.LFB24
 3130 07e8 01       		.uleb128 0x1
 3131 07e9 9C       		.byte	0x9c
 3132 07ea 15       		.uleb128 0x15
 3133 07eb C8010000 		.4byte	.LASF91
 3134 07ef 01       		.byte	0x1
 3135 07f0 D109     		.2byte	0x9d1
 3136 07f2 00000000 		.4byte	.LFB25
 3137 07f6 1C000000 		.4byte	.LFE25-.LFB25
 3138 07fa 01       		.uleb128 0x1
 3139 07fb 9C       		.byte	0x9c
 3140 07fc 1F       		.uleb128 0x1f
 3141 07fd FA010000 		.4byte	.LASF92
 3142 0801 01       		.byte	0x1
 3143 0802 28       		.byte	0x28
 3144 0803 6B000000 		.4byte	0x6b
 3145 0807 05       		.uleb128 0x5
 3146 0808 03       		.byte	0x3
 3147 0809 00000000 		.4byte	USBUART_initVar
 3148 080d 20       		.uleb128 0x20
 3149 080e 07000000 		.4byte	.LASF93
 3150 0812 03       		.byte	0x3
 3151 0813 D302     		.2byte	0x2d3
 3152 0815 A4000000 		.4byte	0xa4
 3153 0819 20       		.uleb128 0x20
 3154 081a 45060000 		.4byte	.LASF94
 3155 081e 03       		.byte	0x3
 3156 081f D402     		.2byte	0x2d4
 3157 0821 A4000000 		.4byte	0xa4
 3158 0825 20       		.uleb128 0x20
 3159 0826 DC050000 		.4byte	.LASF95
 3160 082a 03       		.byte	0x3
 3161 082b D502     		.2byte	0x2d5
 3162 082d A4000000 		.4byte	0xa4
 3163 0831 20       		.uleb128 0x20
 3164 0832 70060000 		.4byte	.LASF96
 3165 0836 03       		.byte	0x3
 3166 0837 D602     		.2byte	0x2d6
 3167 0839 A4000000 		.4byte	0xa4
ARM GAS  C:\Users\essele\AppData\Local\Temp\ccbSjPdV.s 			page 101


 3168 083d 20       		.uleb128 0x20
 3169 083e CF000000 		.4byte	.LASF97
 3170 0842 03       		.byte	0x3
 3171 0843 D702     		.2byte	0x2d7
 3172 0845 A4000000 		.4byte	0xa4
 3173 0849 21       		.uleb128 0x21
 3174 084a 0A020000 		.4byte	.LASF98
 3175 084e 04       		.byte	0x4
 3176 084f 72       		.byte	0x72
 3177 0850 A4000000 		.4byte	0xa4
 3178 0854 0A       		.uleb128 0xa
 3179 0855 A4000000 		.4byte	0xa4
 3180 0859 64080000 		.4byte	0x864
 3181 085d 0B       		.uleb128 0xb
 3182 085e C1000000 		.4byte	0xc1
 3183 0862 01       		.byte	0x1
 3184 0863 00       		.byte	0
 3185 0864 21       		.uleb128 0x21
 3186 0865 40040000 		.4byte	.LASF99
 3187 0869 04       		.byte	0x4
 3188 086a 73       		.byte	0x73
 3189 086b 6F080000 		.4byte	0x86f
 3190 086f 05       		.uleb128 0x5
 3191 0870 54080000 		.4byte	0x854
 3192 0874 21       		.uleb128 0x21
 3193 0875 82030000 		.4byte	.LASF100
 3194 0879 04       		.byte	0x4
 3195 087a 75       		.byte	0x75
 3196 087b A4000000 		.4byte	0xa4
 3197 087f 0A       		.uleb128 0xa
 3198 0880 8F080000 		.4byte	0x88f
 3199 0884 8F080000 		.4byte	0x88f
 3200 0888 0B       		.uleb128 0xb
 3201 0889 C1000000 		.4byte	0xc1
 3202 088d 08       		.byte	0x8
 3203 088e 00       		.byte	0
 3204 088f 05       		.uleb128 0x5
 3205 0890 3D010000 		.4byte	0x13d
 3206 0894 21       		.uleb128 0x21
 3207 0895 B4000000 		.4byte	.LASF101
 3208 0899 04       		.byte	0x4
 3209 089a 79       		.byte	0x79
 3210 089b 9F080000 		.4byte	0x89f
 3211 089f 05       		.uleb128 0x5
 3212 08a0 7F080000 		.4byte	0x87f
 3213 08a4 21       		.uleb128 0x21
 3214 08a5 63000000 		.4byte	.LASF102
 3215 08a9 04       		.byte	0x4
 3216 08aa 9B       		.byte	0x9b
 3217 08ab A4000000 		.4byte	0xa4
 3218 08af 00       		.byte	0
 3219              		.section	.debug_abbrev,"",%progbits
 3220              	.Ldebug_abbrev0:
 3221 0000 01       		.uleb128 0x1
 3222 0001 11       		.uleb128 0x11
 3223 0002 01       		.byte	0x1
 3224 0003 25       		.uleb128 0x25
ARM GAS  C:\Users\essele\AppData\Local\Temp\ccbSjPdV.s 			page 102


 3225 0004 0E       		.uleb128 0xe
 3226 0005 13       		.uleb128 0x13
 3227 0006 0B       		.uleb128 0xb
 3228 0007 03       		.uleb128 0x3
 3229 0008 0E       		.uleb128 0xe
 3230 0009 1B       		.uleb128 0x1b
 3231 000a 0E       		.uleb128 0xe
 3232 000b 55       		.uleb128 0x55
 3233 000c 17       		.uleb128 0x17
 3234 000d 11       		.uleb128 0x11
 3235 000e 01       		.uleb128 0x1
 3236 000f 10       		.uleb128 0x10
 3237 0010 17       		.uleb128 0x17
 3238 0011 00       		.byte	0
 3239 0012 00       		.byte	0
 3240 0013 02       		.uleb128 0x2
 3241 0014 24       		.uleb128 0x24
 3242 0015 00       		.byte	0
 3243 0016 0B       		.uleb128 0xb
 3244 0017 0B       		.uleb128 0xb
 3245 0018 3E       		.uleb128 0x3e
 3246 0019 0B       		.uleb128 0xb
 3247 001a 03       		.uleb128 0x3
 3248 001b 0E       		.uleb128 0xe
 3249 001c 00       		.byte	0
 3250 001d 00       		.byte	0
 3251 001e 03       		.uleb128 0x3
 3252 001f 24       		.uleb128 0x24
 3253 0020 00       		.byte	0
 3254 0021 0B       		.uleb128 0xb
 3255 0022 0B       		.uleb128 0xb
 3256 0023 3E       		.uleb128 0x3e
 3257 0024 0B       		.uleb128 0xb
 3258 0025 03       		.uleb128 0x3
 3259 0026 08       		.uleb128 0x8
 3260 0027 00       		.byte	0
 3261 0028 00       		.byte	0
 3262 0029 04       		.uleb128 0x4
 3263 002a 16       		.uleb128 0x16
 3264 002b 00       		.byte	0
 3265 002c 03       		.uleb128 0x3
 3266 002d 0E       		.uleb128 0xe
 3267 002e 3A       		.uleb128 0x3a
 3268 002f 0B       		.uleb128 0xb
 3269 0030 3B       		.uleb128 0x3b
 3270 0031 05       		.uleb128 0x5
 3271 0032 49       		.uleb128 0x49
 3272 0033 13       		.uleb128 0x13
 3273 0034 00       		.byte	0
 3274 0035 00       		.byte	0
 3275 0036 05       		.uleb128 0x5
 3276 0037 35       		.uleb128 0x35
 3277 0038 00       		.byte	0
 3278 0039 49       		.uleb128 0x49
 3279 003a 13       		.uleb128 0x13
 3280 003b 00       		.byte	0
 3281 003c 00       		.byte	0
ARM GAS  C:\Users\essele\AppData\Local\Temp\ccbSjPdV.s 			page 103


 3282 003d 06       		.uleb128 0x6
 3283 003e 13       		.uleb128 0x13
 3284 003f 01       		.byte	0x1
 3285 0040 0B       		.uleb128 0xb
 3286 0041 0B       		.uleb128 0xb
 3287 0042 3A       		.uleb128 0x3a
 3288 0043 0B       		.uleb128 0xb
 3289 0044 3B       		.uleb128 0x3b
 3290 0045 0B       		.uleb128 0xb
 3291 0046 01       		.uleb128 0x1
 3292 0047 13       		.uleb128 0x13
 3293 0048 00       		.byte	0
 3294 0049 00       		.byte	0
 3295 004a 07       		.uleb128 0x7
 3296 004b 0D       		.uleb128 0xd
 3297 004c 00       		.byte	0
 3298 004d 03       		.uleb128 0x3
 3299 004e 0E       		.uleb128 0xe
 3300 004f 3A       		.uleb128 0x3a
 3301 0050 0B       		.uleb128 0xb
 3302 0051 3B       		.uleb128 0x3b
 3303 0052 0B       		.uleb128 0xb
 3304 0053 49       		.uleb128 0x49
 3305 0054 13       		.uleb128 0x13
 3306 0055 38       		.uleb128 0x38
 3307 0056 0B       		.uleb128 0xb
 3308 0057 00       		.byte	0
 3309 0058 00       		.byte	0
 3310 0059 08       		.uleb128 0x8
 3311 005a 16       		.uleb128 0x16
 3312 005b 00       		.byte	0
 3313 005c 03       		.uleb128 0x3
 3314 005d 0E       		.uleb128 0xe
 3315 005e 3A       		.uleb128 0x3a
 3316 005f 0B       		.uleb128 0xb
 3317 0060 3B       		.uleb128 0x3b
 3318 0061 0B       		.uleb128 0xb
 3319 0062 49       		.uleb128 0x49
 3320 0063 13       		.uleb128 0x13
 3321 0064 00       		.byte	0
 3322 0065 00       		.byte	0
 3323 0066 09       		.uleb128 0x9
 3324 0067 0D       		.uleb128 0xd
 3325 0068 00       		.byte	0
 3326 0069 03       		.uleb128 0x3
 3327 006a 08       		.uleb128 0x8
 3328 006b 3A       		.uleb128 0x3a
 3329 006c 0B       		.uleb128 0xb
 3330 006d 3B       		.uleb128 0x3b
 3331 006e 0B       		.uleb128 0xb
 3332 006f 49       		.uleb128 0x49
 3333 0070 13       		.uleb128 0x13
 3334 0071 38       		.uleb128 0x38
 3335 0072 0B       		.uleb128 0xb
 3336 0073 00       		.byte	0
 3337 0074 00       		.byte	0
 3338 0075 0A       		.uleb128 0xa
ARM GAS  C:\Users\essele\AppData\Local\Temp\ccbSjPdV.s 			page 104


 3339 0076 01       		.uleb128 0x1
 3340 0077 01       		.byte	0x1
 3341 0078 49       		.uleb128 0x49
 3342 0079 13       		.uleb128 0x13
 3343 007a 01       		.uleb128 0x1
 3344 007b 13       		.uleb128 0x13
 3345 007c 00       		.byte	0
 3346 007d 00       		.byte	0
 3347 007e 0B       		.uleb128 0xb
 3348 007f 21       		.uleb128 0x21
 3349 0080 00       		.byte	0
 3350 0081 49       		.uleb128 0x49
 3351 0082 13       		.uleb128 0x13
 3352 0083 2F       		.uleb128 0x2f
 3353 0084 0B       		.uleb128 0xb
 3354 0085 00       		.byte	0
 3355 0086 00       		.byte	0
 3356 0087 0C       		.uleb128 0xc
 3357 0088 13       		.uleb128 0x13
 3358 0089 01       		.byte	0x1
 3359 008a 0B       		.uleb128 0xb
 3360 008b 0B       		.uleb128 0xb
 3361 008c 3A       		.uleb128 0x3a
 3362 008d 0B       		.uleb128 0xb
 3363 008e 3B       		.uleb128 0x3b
 3364 008f 05       		.uleb128 0x5
 3365 0090 01       		.uleb128 0x1
 3366 0091 13       		.uleb128 0x13
 3367 0092 00       		.byte	0
 3368 0093 00       		.byte	0
 3369 0094 0D       		.uleb128 0xd
 3370 0095 0D       		.uleb128 0xd
 3371 0096 00       		.byte	0
 3372 0097 03       		.uleb128 0x3
 3373 0098 0E       		.uleb128 0xe
 3374 0099 3A       		.uleb128 0x3a
 3375 009a 0B       		.uleb128 0xb
 3376 009b 3B       		.uleb128 0x3b
 3377 009c 05       		.uleb128 0x5
 3378 009d 49       		.uleb128 0x49
 3379 009e 13       		.uleb128 0x13
 3380 009f 38       		.uleb128 0x38
 3381 00a0 0B       		.uleb128 0xb
 3382 00a1 00       		.byte	0
 3383 00a2 00       		.byte	0
 3384 00a3 0E       		.uleb128 0xe
 3385 00a4 0D       		.uleb128 0xd
 3386 00a5 00       		.byte	0
 3387 00a6 03       		.uleb128 0x3
 3388 00a7 08       		.uleb128 0x8
 3389 00a8 3A       		.uleb128 0x3a
 3390 00a9 0B       		.uleb128 0xb
 3391 00aa 3B       		.uleb128 0x3b
 3392 00ab 05       		.uleb128 0x5
 3393 00ac 49       		.uleb128 0x49
 3394 00ad 13       		.uleb128 0x13
 3395 00ae 38       		.uleb128 0x38
ARM GAS  C:\Users\essele\AppData\Local\Temp\ccbSjPdV.s 			page 105


 3396 00af 0B       		.uleb128 0xb
 3397 00b0 00       		.byte	0
 3398 00b1 00       		.byte	0
 3399 00b2 0F       		.uleb128 0xf
 3400 00b3 13       		.uleb128 0x13
 3401 00b4 01       		.byte	0x1
 3402 00b5 0B       		.uleb128 0xb
 3403 00b6 05       		.uleb128 0x5
 3404 00b7 3A       		.uleb128 0x3a
 3405 00b8 0B       		.uleb128 0xb
 3406 00b9 3B       		.uleb128 0x3b
 3407 00ba 05       		.uleb128 0x5
 3408 00bb 01       		.uleb128 0x1
 3409 00bc 13       		.uleb128 0x13
 3410 00bd 00       		.byte	0
 3411 00be 00       		.byte	0
 3412 00bf 10       		.uleb128 0x10
 3413 00c0 2E       		.uleb128 0x2e
 3414 00c1 01       		.byte	0x1
 3415 00c2 3F       		.uleb128 0x3f
 3416 00c3 19       		.uleb128 0x19
 3417 00c4 03       		.uleb128 0x3
 3418 00c5 0E       		.uleb128 0xe
 3419 00c6 3A       		.uleb128 0x3a
 3420 00c7 0B       		.uleb128 0xb
 3421 00c8 3B       		.uleb128 0x3b
 3422 00c9 0B       		.uleb128 0xb
 3423 00ca 27       		.uleb128 0x27
 3424 00cb 19       		.uleb128 0x19
 3425 00cc 11       		.uleb128 0x11
 3426 00cd 01       		.uleb128 0x1
 3427 00ce 12       		.uleb128 0x12
 3428 00cf 06       		.uleb128 0x6
 3429 00d0 40       		.uleb128 0x40
 3430 00d1 18       		.uleb128 0x18
 3431 00d2 9642     		.uleb128 0x2116
 3432 00d4 19       		.uleb128 0x19
 3433 00d5 01       		.uleb128 0x1
 3434 00d6 13       		.uleb128 0x13
 3435 00d7 00       		.byte	0
 3436 00d8 00       		.byte	0
 3437 00d9 11       		.uleb128 0x11
 3438 00da 05       		.uleb128 0x5
 3439 00db 00       		.byte	0
 3440 00dc 03       		.uleb128 0x3
 3441 00dd 0E       		.uleb128 0xe
 3442 00de 3A       		.uleb128 0x3a
 3443 00df 0B       		.uleb128 0xb
 3444 00e0 3B       		.uleb128 0x3b
 3445 00e1 0B       		.uleb128 0xb
 3446 00e2 49       		.uleb128 0x49
 3447 00e3 13       		.uleb128 0x13
 3448 00e4 02       		.uleb128 0x2
 3449 00e5 18       		.uleb128 0x18
 3450 00e6 00       		.byte	0
 3451 00e7 00       		.byte	0
 3452 00e8 12       		.uleb128 0x12
ARM GAS  C:\Users\essele\AppData\Local\Temp\ccbSjPdV.s 			page 106


 3453 00e9 2E       		.uleb128 0x2e
 3454 00ea 00       		.byte	0
 3455 00eb 3F       		.uleb128 0x3f
 3456 00ec 19       		.uleb128 0x19
 3457 00ed 03       		.uleb128 0x3
 3458 00ee 0E       		.uleb128 0xe
 3459 00ef 3A       		.uleb128 0x3a
 3460 00f0 0B       		.uleb128 0xb
 3461 00f1 3B       		.uleb128 0x3b
 3462 00f2 0B       		.uleb128 0xb
 3463 00f3 27       		.uleb128 0x27
 3464 00f4 19       		.uleb128 0x19
 3465 00f5 11       		.uleb128 0x11
 3466 00f6 01       		.uleb128 0x1
 3467 00f7 12       		.uleb128 0x12
 3468 00f8 06       		.uleb128 0x6
 3469 00f9 40       		.uleb128 0x40
 3470 00fa 18       		.uleb128 0x18
 3471 00fb 9642     		.uleb128 0x2116
 3472 00fd 19       		.uleb128 0x19
 3473 00fe 00       		.byte	0
 3474 00ff 00       		.byte	0
 3475 0100 13       		.uleb128 0x13
 3476 0101 2E       		.uleb128 0x2e
 3477 0102 01       		.byte	0x1
 3478 0103 3F       		.uleb128 0x3f
 3479 0104 19       		.uleb128 0x19
 3480 0105 03       		.uleb128 0x3
 3481 0106 0E       		.uleb128 0xe
 3482 0107 3A       		.uleb128 0x3a
 3483 0108 0B       		.uleb128 0xb
 3484 0109 3B       		.uleb128 0x3b
 3485 010a 05       		.uleb128 0x5
 3486 010b 27       		.uleb128 0x27
 3487 010c 19       		.uleb128 0x19
 3488 010d 11       		.uleb128 0x11
 3489 010e 01       		.uleb128 0x1
 3490 010f 12       		.uleb128 0x12
 3491 0110 06       		.uleb128 0x6
 3492 0111 40       		.uleb128 0x40
 3493 0112 18       		.uleb128 0x18
 3494 0113 9642     		.uleb128 0x2116
 3495 0115 19       		.uleb128 0x19
 3496 0116 01       		.uleb128 0x1
 3497 0117 13       		.uleb128 0x13
 3498 0118 00       		.byte	0
 3499 0119 00       		.byte	0
 3500 011a 14       		.uleb128 0x14
 3501 011b 05       		.uleb128 0x5
 3502 011c 00       		.byte	0
 3503 011d 03       		.uleb128 0x3
 3504 011e 0E       		.uleb128 0xe
 3505 011f 3A       		.uleb128 0x3a
 3506 0120 0B       		.uleb128 0xb
 3507 0121 3B       		.uleb128 0x3b
 3508 0122 05       		.uleb128 0x5
 3509 0123 49       		.uleb128 0x49
ARM GAS  C:\Users\essele\AppData\Local\Temp\ccbSjPdV.s 			page 107


 3510 0124 13       		.uleb128 0x13
 3511 0125 02       		.uleb128 0x2
 3512 0126 18       		.uleb128 0x18
 3513 0127 00       		.byte	0
 3514 0128 00       		.byte	0
 3515 0129 15       		.uleb128 0x15
 3516 012a 2E       		.uleb128 0x2e
 3517 012b 00       		.byte	0
 3518 012c 3F       		.uleb128 0x3f
 3519 012d 19       		.uleb128 0x19
 3520 012e 03       		.uleb128 0x3
 3521 012f 0E       		.uleb128 0xe
 3522 0130 3A       		.uleb128 0x3a
 3523 0131 0B       		.uleb128 0xb
 3524 0132 3B       		.uleb128 0x3b
 3525 0133 05       		.uleb128 0x5
 3526 0134 27       		.uleb128 0x27
 3527 0135 19       		.uleb128 0x19
 3528 0136 11       		.uleb128 0x11
 3529 0137 01       		.uleb128 0x1
 3530 0138 12       		.uleb128 0x12
 3531 0139 06       		.uleb128 0x6
 3532 013a 40       		.uleb128 0x40
 3533 013b 18       		.uleb128 0x18
 3534 013c 9742     		.uleb128 0x2117
 3535 013e 19       		.uleb128 0x19
 3536 013f 00       		.byte	0
 3537 0140 00       		.byte	0
 3538 0141 16       		.uleb128 0x16
 3539 0142 34       		.uleb128 0x34
 3540 0143 00       		.byte	0
 3541 0144 03       		.uleb128 0x3
 3542 0145 0E       		.uleb128 0xe
 3543 0146 3A       		.uleb128 0x3a
 3544 0147 0B       		.uleb128 0xb
 3545 0148 3B       		.uleb128 0x3b
 3546 0149 05       		.uleb128 0x5
 3547 014a 49       		.uleb128 0x49
 3548 014b 13       		.uleb128 0x13
 3549 014c 02       		.uleb128 0x2
 3550 014d 18       		.uleb128 0x18
 3551 014e 00       		.byte	0
 3552 014f 00       		.byte	0
 3553 0150 17       		.uleb128 0x17
 3554 0151 2E       		.uleb128 0x2e
 3555 0152 01       		.byte	0x1
 3556 0153 3F       		.uleb128 0x3f
 3557 0154 19       		.uleb128 0x19
 3558 0155 03       		.uleb128 0x3
 3559 0156 0E       		.uleb128 0xe
 3560 0157 3A       		.uleb128 0x3a
 3561 0158 0B       		.uleb128 0xb
 3562 0159 3B       		.uleb128 0x3b
 3563 015a 05       		.uleb128 0x5
 3564 015b 27       		.uleb128 0x27
 3565 015c 19       		.uleb128 0x19
 3566 015d 49       		.uleb128 0x49
ARM GAS  C:\Users\essele\AppData\Local\Temp\ccbSjPdV.s 			page 108


 3567 015e 13       		.uleb128 0x13
 3568 015f 11       		.uleb128 0x11
 3569 0160 01       		.uleb128 0x1
 3570 0161 12       		.uleb128 0x12
 3571 0162 06       		.uleb128 0x6
 3572 0163 40       		.uleb128 0x40
 3573 0164 18       		.uleb128 0x18
 3574 0165 9742     		.uleb128 0x2117
 3575 0167 19       		.uleb128 0x19
 3576 0168 01       		.uleb128 0x1
 3577 0169 13       		.uleb128 0x13
 3578 016a 00       		.byte	0
 3579 016b 00       		.byte	0
 3580 016c 18       		.uleb128 0x18
 3581 016d 2E       		.uleb128 0x2e
 3582 016e 00       		.byte	0
 3583 016f 3F       		.uleb128 0x3f
 3584 0170 19       		.uleb128 0x19
 3585 0171 03       		.uleb128 0x3
 3586 0172 0E       		.uleb128 0xe
 3587 0173 3A       		.uleb128 0x3a
 3588 0174 0B       		.uleb128 0xb
 3589 0175 3B       		.uleb128 0x3b
 3590 0176 05       		.uleb128 0x5
 3591 0177 27       		.uleb128 0x27
 3592 0178 19       		.uleb128 0x19
 3593 0179 49       		.uleb128 0x49
 3594 017a 13       		.uleb128 0x13
 3595 017b 11       		.uleb128 0x11
 3596 017c 01       		.uleb128 0x1
 3597 017d 12       		.uleb128 0x12
 3598 017e 06       		.uleb128 0x6
 3599 017f 40       		.uleb128 0x40
 3600 0180 18       		.uleb128 0x18
 3601 0181 9742     		.uleb128 0x2117
 3602 0183 19       		.uleb128 0x19
 3603 0184 00       		.byte	0
 3604 0185 00       		.byte	0
 3605 0186 19       		.uleb128 0x19
 3606 0187 34       		.uleb128 0x34
 3607 0188 00       		.byte	0
 3608 0189 03       		.uleb128 0x3
 3609 018a 08       		.uleb128 0x8
 3610 018b 3A       		.uleb128 0x3a
 3611 018c 0B       		.uleb128 0xb
 3612 018d 3B       		.uleb128 0x3b
 3613 018e 05       		.uleb128 0x5
 3614 018f 49       		.uleb128 0x49
 3615 0190 13       		.uleb128 0x13
 3616 0191 02       		.uleb128 0x2
 3617 0192 18       		.uleb128 0x18
 3618 0193 00       		.byte	0
 3619 0194 00       		.byte	0
 3620 0195 1A       		.uleb128 0x1a
 3621 0196 2E       		.uleb128 0x2e
 3622 0197 01       		.byte	0x1
 3623 0198 3F       		.uleb128 0x3f
ARM GAS  C:\Users\essele\AppData\Local\Temp\ccbSjPdV.s 			page 109


 3624 0199 19       		.uleb128 0x19
 3625 019a 03       		.uleb128 0x3
 3626 019b 0E       		.uleb128 0xe
 3627 019c 3A       		.uleb128 0x3a
 3628 019d 0B       		.uleb128 0xb
 3629 019e 3B       		.uleb128 0x3b
 3630 019f 05       		.uleb128 0x5
 3631 01a0 27       		.uleb128 0x27
 3632 01a1 19       		.uleb128 0x19
 3633 01a2 11       		.uleb128 0x11
 3634 01a3 01       		.uleb128 0x1
 3635 01a4 12       		.uleb128 0x12
 3636 01a5 06       		.uleb128 0x6
 3637 01a6 40       		.uleb128 0x40
 3638 01a7 18       		.uleb128 0x18
 3639 01a8 9742     		.uleb128 0x2117
 3640 01aa 19       		.uleb128 0x19
 3641 01ab 01       		.uleb128 0x1
 3642 01ac 13       		.uleb128 0x13
 3643 01ad 00       		.byte	0
 3644 01ae 00       		.byte	0
 3645 01af 1B       		.uleb128 0x1b
 3646 01b0 0B       		.uleb128 0xb
 3647 01b1 01       		.byte	0x1
 3648 01b2 11       		.uleb128 0x11
 3649 01b3 01       		.uleb128 0x1
 3650 01b4 12       		.uleb128 0x12
 3651 01b5 06       		.uleb128 0x6
 3652 01b6 00       		.byte	0
 3653 01b7 00       		.byte	0
 3654 01b8 1C       		.uleb128 0x1c
 3655 01b9 0F       		.uleb128 0xf
 3656 01ba 00       		.byte	0
 3657 01bb 0B       		.uleb128 0xb
 3658 01bc 0B       		.uleb128 0xb
 3659 01bd 49       		.uleb128 0x49
 3660 01be 13       		.uleb128 0x13
 3661 01bf 00       		.byte	0
 3662 01c0 00       		.byte	0
 3663 01c1 1D       		.uleb128 0x1d
 3664 01c2 26       		.uleb128 0x26
 3665 01c3 00       		.byte	0
 3666 01c4 49       		.uleb128 0x49
 3667 01c5 13       		.uleb128 0x13
 3668 01c6 00       		.byte	0
 3669 01c7 00       		.byte	0
 3670 01c8 1E       		.uleb128 0x1e
 3671 01c9 2E       		.uleb128 0x2e
 3672 01ca 01       		.byte	0x1
 3673 01cb 3F       		.uleb128 0x3f
 3674 01cc 19       		.uleb128 0x19
 3675 01cd 03       		.uleb128 0x3
 3676 01ce 0E       		.uleb128 0xe
 3677 01cf 3A       		.uleb128 0x3a
 3678 01d0 0B       		.uleb128 0xb
 3679 01d1 3B       		.uleb128 0x3b
 3680 01d2 05       		.uleb128 0x5
ARM GAS  C:\Users\essele\AppData\Local\Temp\ccbSjPdV.s 			page 110


 3681 01d3 27       		.uleb128 0x27
 3682 01d4 19       		.uleb128 0x19
 3683 01d5 49       		.uleb128 0x49
 3684 01d6 13       		.uleb128 0x13
 3685 01d7 11       		.uleb128 0x11
 3686 01d8 01       		.uleb128 0x1
 3687 01d9 12       		.uleb128 0x12
 3688 01da 06       		.uleb128 0x6
 3689 01db 40       		.uleb128 0x40
 3690 01dc 18       		.uleb128 0x18
 3691 01dd 9642     		.uleb128 0x2116
 3692 01df 19       		.uleb128 0x19
 3693 01e0 01       		.uleb128 0x1
 3694 01e1 13       		.uleb128 0x13
 3695 01e2 00       		.byte	0
 3696 01e3 00       		.byte	0
 3697 01e4 1F       		.uleb128 0x1f
 3698 01e5 34       		.uleb128 0x34
 3699 01e6 00       		.byte	0
 3700 01e7 03       		.uleb128 0x3
 3701 01e8 0E       		.uleb128 0xe
 3702 01e9 3A       		.uleb128 0x3a
 3703 01ea 0B       		.uleb128 0xb
 3704 01eb 3B       		.uleb128 0x3b
 3705 01ec 0B       		.uleb128 0xb
 3706 01ed 49       		.uleb128 0x49
 3707 01ee 13       		.uleb128 0x13
 3708 01ef 3F       		.uleb128 0x3f
 3709 01f0 19       		.uleb128 0x19
 3710 01f1 02       		.uleb128 0x2
 3711 01f2 18       		.uleb128 0x18
 3712 01f3 00       		.byte	0
 3713 01f4 00       		.byte	0
 3714 01f5 20       		.uleb128 0x20
 3715 01f6 34       		.uleb128 0x34
 3716 01f7 00       		.byte	0
 3717 01f8 03       		.uleb128 0x3
 3718 01f9 0E       		.uleb128 0xe
 3719 01fa 3A       		.uleb128 0x3a
 3720 01fb 0B       		.uleb128 0xb
 3721 01fc 3B       		.uleb128 0x3b
 3722 01fd 05       		.uleb128 0x5
 3723 01fe 49       		.uleb128 0x49
 3724 01ff 13       		.uleb128 0x13
 3725 0200 3F       		.uleb128 0x3f
 3726 0201 19       		.uleb128 0x19
 3727 0202 3C       		.uleb128 0x3c
 3728 0203 19       		.uleb128 0x19
 3729 0204 00       		.byte	0
 3730 0205 00       		.byte	0
 3731 0206 21       		.uleb128 0x21
 3732 0207 34       		.uleb128 0x34
 3733 0208 00       		.byte	0
 3734 0209 03       		.uleb128 0x3
 3735 020a 0E       		.uleb128 0xe
 3736 020b 3A       		.uleb128 0x3a
 3737 020c 0B       		.uleb128 0xb
ARM GAS  C:\Users\essele\AppData\Local\Temp\ccbSjPdV.s 			page 111


 3738 020d 3B       		.uleb128 0x3b
 3739 020e 0B       		.uleb128 0xb
 3740 020f 49       		.uleb128 0x49
 3741 0210 13       		.uleb128 0x13
 3742 0211 3F       		.uleb128 0x3f
 3743 0212 19       		.uleb128 0x19
 3744 0213 3C       		.uleb128 0x3c
 3745 0214 19       		.uleb128 0x19
 3746 0215 00       		.byte	0
 3747 0216 00       		.byte	0
 3748 0217 00       		.byte	0
 3749              		.section	.debug_aranges,"",%progbits
 3750 0000 DC000000 		.4byte	0xdc
 3751 0004 0200     		.2byte	0x2
 3752 0006 00000000 		.4byte	.Ldebug_info0
 3753 000a 04       		.byte	0x4
 3754 000b 00       		.byte	0
 3755 000c 0000     		.2byte	0
 3756 000e 0000     		.2byte	0
 3757 0010 00000000 		.4byte	.LFB1
 3758 0014 40000000 		.4byte	.LFE1-.LFB1
 3759 0018 00000000 		.4byte	.LFB2
 3760 001c F0000000 		.4byte	.LFE2-.LFB2
 3761 0020 00000000 		.4byte	.LFB3
 3762 0024 F0000000 		.4byte	.LFE3-.LFB3
 3763 0028 00000000 		.4byte	.LFB4
 3764 002c 64000000 		.4byte	.LFE4-.LFB4
 3765 0030 00000000 		.4byte	.LFB5
 3766 0034 A0000000 		.4byte	.LFE5-.LFB5
 3767 0038 00000000 		.4byte	.LFB6
 3768 003c 30000000 		.4byte	.LFE6-.LFB6
 3769 0040 00000000 		.4byte	.LFB7
 3770 0044 14000000 		.4byte	.LFE7-.LFB7
 3771 0048 00000000 		.4byte	.LFB8
 3772 004c 34000000 		.4byte	.LFE8-.LFB8
 3773 0050 00000000 		.4byte	.LFB9
 3774 0054 24000000 		.4byte	.LFE9-.LFB9
 3775 0058 00000000 		.4byte	.LFB10
 3776 005c 30000000 		.4byte	.LFE10-.LFB10
 3777 0060 00000000 		.4byte	.LFB11
 3778 0064 80000000 		.4byte	.LFE11-.LFB11
 3779 0068 00000000 		.4byte	.LFB12
 3780 006c 4C010000 		.4byte	.LFE12-.LFB12
 3781 0070 00000000 		.4byte	.LFB13
 3782 0074 C0000000 		.4byte	.LFE13-.LFB13
 3783 0078 00000000 		.4byte	.LFB14
 3784 007c 78010000 		.4byte	.LFE14-.LFB14
 3785 0080 00000000 		.4byte	.LFB15
 3786 0084 E4000000 		.4byte	.LFE15-.LFB15
 3787 0088 00000000 		.4byte	.LFB16
 3788 008c 68000000 		.4byte	.LFE16-.LFB16
 3789 0090 00000000 		.4byte	.LFB17
 3790 0094 38000000 		.4byte	.LFE17-.LFB17
 3791 0098 00000000 		.4byte	.LFB18
 3792 009c 20000000 		.4byte	.LFE18-.LFB18
 3793 00a0 00000000 		.4byte	.LFB19
 3794 00a4 44000000 		.4byte	.LFE19-.LFB19
ARM GAS  C:\Users\essele\AppData\Local\Temp\ccbSjPdV.s 			page 112


 3795 00a8 00000000 		.4byte	.LFB20
 3796 00ac 44000000 		.4byte	.LFE20-.LFB20
 3797 00b0 00000000 		.4byte	.LFB21
 3798 00b4 1C000000 		.4byte	.LFE21-.LFB21
 3799 00b8 00000000 		.4byte	.LFB22
 3800 00bc 30000000 		.4byte	.LFE22-.LFB22
 3801 00c0 00000000 		.4byte	.LFB23
 3802 00c4 1C000000 		.4byte	.LFE23-.LFB23
 3803 00c8 00000000 		.4byte	.LFB24
 3804 00cc 1C000000 		.4byte	.LFE24-.LFB24
 3805 00d0 00000000 		.4byte	.LFB25
 3806 00d4 1C000000 		.4byte	.LFE25-.LFB25
 3807 00d8 00000000 		.4byte	0
 3808 00dc 00000000 		.4byte	0
 3809              		.section	.debug_ranges,"",%progbits
 3810              	.Ldebug_ranges0:
 3811 0000 00000000 		.4byte	.LFB1
 3812 0004 40000000 		.4byte	.LFE1
 3813 0008 00000000 		.4byte	.LFB2
 3814 000c F0000000 		.4byte	.LFE2
 3815 0010 00000000 		.4byte	.LFB3
 3816 0014 F0000000 		.4byte	.LFE3
 3817 0018 00000000 		.4byte	.LFB4
 3818 001c 64000000 		.4byte	.LFE4
 3819 0020 00000000 		.4byte	.LFB5
 3820 0024 A0000000 		.4byte	.LFE5
 3821 0028 00000000 		.4byte	.LFB6
 3822 002c 30000000 		.4byte	.LFE6
 3823 0030 00000000 		.4byte	.LFB7
 3824 0034 14000000 		.4byte	.LFE7
 3825 0038 00000000 		.4byte	.LFB8
 3826 003c 34000000 		.4byte	.LFE8
 3827 0040 00000000 		.4byte	.LFB9
 3828 0044 24000000 		.4byte	.LFE9
 3829 0048 00000000 		.4byte	.LFB10
 3830 004c 30000000 		.4byte	.LFE10
 3831 0050 00000000 		.4byte	.LFB11
 3832 0054 80000000 		.4byte	.LFE11
 3833 0058 00000000 		.4byte	.LFB12
 3834 005c 4C010000 		.4byte	.LFE12
 3835 0060 00000000 		.4byte	.LFB13
 3836 0064 C0000000 		.4byte	.LFE13
 3837 0068 00000000 		.4byte	.LFB14
 3838 006c 78010000 		.4byte	.LFE14
 3839 0070 00000000 		.4byte	.LFB15
 3840 0074 E4000000 		.4byte	.LFE15
 3841 0078 00000000 		.4byte	.LFB16
 3842 007c 68000000 		.4byte	.LFE16
 3843 0080 00000000 		.4byte	.LFB17
 3844 0084 38000000 		.4byte	.LFE17
 3845 0088 00000000 		.4byte	.LFB18
 3846 008c 20000000 		.4byte	.LFE18
 3847 0090 00000000 		.4byte	.LFB19
 3848 0094 44000000 		.4byte	.LFE19
 3849 0098 00000000 		.4byte	.LFB20
 3850 009c 44000000 		.4byte	.LFE20
 3851 00a0 00000000 		.4byte	.LFB21
ARM GAS  C:\Users\essele\AppData\Local\Temp\ccbSjPdV.s 			page 113


 3852 00a4 1C000000 		.4byte	.LFE21
 3853 00a8 00000000 		.4byte	.LFB22
 3854 00ac 30000000 		.4byte	.LFE22
 3855 00b0 00000000 		.4byte	.LFB23
 3856 00b4 1C000000 		.4byte	.LFE23
 3857 00b8 00000000 		.4byte	.LFB24
 3858 00bc 1C000000 		.4byte	.LFE24
 3859 00c0 00000000 		.4byte	.LFB25
 3860 00c4 1C000000 		.4byte	.LFE25
 3861 00c8 00000000 		.4byte	0
 3862 00cc 00000000 		.4byte	0
 3863              		.section	.debug_line,"",%progbits
 3864              	.Ldebug_line0:
 3865 0000 DD030000 		.section	.debug_str,"MS",%progbits,1
 3865      02006200 
 3865      00000201 
 3865      FB0E0D00 
 3865      01010101 
 3866              	.LASF10:
 3867 0000 75696E74 		.ascii	"uint16\000"
 3867      313600
 3868              	.LASF93:
 3869 0007 55534255 		.ascii	"USBUART_device\000"
 3869      4152545F 
 3869      64657669 
 3869      636500
 3870              	.LASF89:
 3871 0016 55534255 		.ascii	"USBUART_GetDeviceAddress\000"
 3871      4152545F 
 3871      47657444 
 3871      65766963 
 3871      65416464 
 3872              	.LASF104:
 3873 002f 47656E65 		.ascii	"Generated_Source\\PSoC4\\USBUART.c\000"
 3873      72617465 
 3873      645F536F 
 3873      75726365 
 3873      5C50536F 
 3874              	.LASF87:
 3875 0050 55534255 		.ascii	"USBUART_RWUEnabled\000"
 3875      4152545F 
 3875      52575545 
 3875      6E61626C 
 3875      656400
 3876              	.LASF102:
 3877 0063 55534255 		.ascii	"USBUART_lastPacketSize\000"
 3877      4152545F 
 3877      6C617374 
 3877      5061636B 
 3877      65745369 
 3878              	.LASF70:
 3879 007a 55534255 		.ascii	"USBUART_LoadInEP\000"
 3879      4152545F 
 3879      4C6F6164 
 3879      496E4550 
 3879      00
 3880              	.LASF7:
ARM GAS  C:\Users\essele\AppData\Local\Temp\ccbSjPdV.s 			page 114


 3881 008b 6C6F6E67 		.ascii	"long long unsigned int\000"
 3881      206C6F6E 
 3881      6720756E 
 3881      7369676E 
 3881      65642069 
 3882              	.LASF22:
 3883 00a2 61646472 		.ascii	"addr\000"
 3883      00
 3884              	.LASF42:
 3885 00a7 72775761 		.ascii	"rwWa16\000"
 3885      313600
 3886              	.LASF32:
 3887 00ae 65704366 		.ascii	"epCfg\000"
 3887      6700
 3888              	.LASF101:
 3889 00b4 55534255 		.ascii	"USBUART_EP\000"
 3889      4152545F 
 3889      455000
 3890              	.LASF46:
 3891 00bf 72774472 		.ascii	"rwDr16\000"
 3891      313600
 3892              	.LASF67:
 3893 00c6 65704E75 		.ascii	"epNumber\000"
 3893      6D626572 
 3893      00
 3894              	.LASF97:
 3895 00cf 55534255 		.ascii	"USBUART_deviceStatus\000"
 3895      4152545F 
 3895      64657669 
 3895      63655374 
 3895      61747573 
 3896              	.LASF53:
 3897 00e4 64657669 		.ascii	"device\000"
 3897      636500
 3898              	.LASF85:
 3899 00eb 55534255 		.ascii	"USBUART_GetConfiguration\000"
 3899      4152545F 
 3899      47657443 
 3899      6F6E6669 
 3899      67757261 
 3900              	.LASF6:
 3901 0104 6C6F6E67 		.ascii	"long long int\000"
 3901      206C6F6E 
 3901      6720696E 
 3901      7400
 3902              	.LASF0:
 3903 0112 7369676E 		.ascii	"signed char\000"
 3903      65642063 
 3903      68617200 
 3904              	.LASF76:
 3905 011e 55534255 		.ascii	"USBUART_ReadOutEP16\000"
 3905      4152545F 
 3905      52656164 
 3905      4F757445 
 3905      50313600 
 3906              	.LASF78:
 3907 0132 55534255 		.ascii	"USBUART_EnableOutEP\000"
ARM GAS  C:\Users\essele\AppData\Local\Temp\ccbSjPdV.s 			page 115


 3907      4152545F 
 3907      456E6162 
 3907      6C654F75 
 3907      74455000 
 3908              	.LASF77:
 3909 0146 61646A4C 		.ascii	"adjLength\000"
 3909      656E6774 
 3909      6800
 3910              	.LASF69:
 3911 0150 636E7472 		.ascii	"cntr\000"
 3911      00
 3912              	.LASF49:
 3913 0155 55534255 		.ascii	"USBUART_sie_eps_struct\000"
 3913      4152545F 
 3913      7369655F 
 3913      6570735F 
 3913      73747275 
 3914              	.LASF62:
 3915 016c 55534255 		.ascii	"USBUART_CheckActivity\000"
 3915      4152545F 
 3915      43686563 
 3915      6B416374 
 3915      69766974 
 3916              	.LASF4:
 3917 0182 6C6F6E67 		.ascii	"long int\000"
 3917      20696E74 
 3917      00
 3918              	.LASF82:
 3919 018b 55534255 		.ascii	"USBUART_GetEPAckState\000"
 3919      4152545F 
 3919      47657445 
 3919      5041636B 
 3919      53746174 
 3920              	.LASF9:
 3921 01a1 75696E74 		.ascii	"uint8\000"
 3921      3800
 3922              	.LASF21:
 3923 01a7 6570546F 		.ascii	"epToggle\000"
 3923      67676C65 
 3923      00
 3924              	.LASF36:
 3925 01b0 72775761 		.ascii	"rwWa\000"
 3925      00
 3926              	.LASF13:
 3927 01b5 646F7562 		.ascii	"double\000"
 3927      6C6500
 3928              	.LASF84:
 3929 01bc 706F7765 		.ascii	"powerStatus\000"
 3929      72537461 
 3929      74757300 
 3930              	.LASF91:
 3931 01c8 55534255 		.ascii	"USBUART_DisableSofInt\000"
 3931      4152545F 
 3931      44697361 
 3931      626C6553 
 3931      6F66496E 
 3932              	.LASF83:
ARM GAS  C:\Users\essele\AppData\Local\Temp\ccbSjPdV.s 			page 116


 3933 01de 55534255 		.ascii	"USBUART_SetPowerStatus\000"
 3933      4152545F 
 3933      53657450 
 3933      6F776572 
 3933      53746174 
 3934              	.LASF34:
 3935 01f5 65705372 		.ascii	"epSr\000"
 3935      00
 3936              	.LASF92:
 3937 01fa 55534255 		.ascii	"USBUART_initVar\000"
 3937      4152545F 
 3937      696E6974 
 3937      56617200 
 3938              	.LASF98:
 3939 020a 55534255 		.ascii	"USBUART_interfaceNumber\000"
 3939      4152545F 
 3939      696E7465 
 3939      72666163 
 3939      654E756D 
 3940              	.LASF11:
 3941 0222 75696E74 		.ascii	"uint32\000"
 3941      333200
 3942              	.LASF71:
 3943 0229 70446174 		.ascii	"pData\000"
 3943      6100
 3944              	.LASF48:
 3945 022f 73696545 		.ascii	"sieEp\000"
 3945      7000
 3946              	.LASF23:
 3947 0235 65704D6F 		.ascii	"epMode\000"
 3947      646500
 3948              	.LASF35:
 3949 023c 72657365 		.ascii	"reserved\000"
 3949      72766564 
 3949      00
 3950              	.LASF47:
 3951 0245 55534255 		.ascii	"USBUART_arb_ep_reg16_struct\000"
 3951      4152545F 
 3951      6172625F 
 3951      65705F72 
 3951      65673136 
 3952              	.LASF8:
 3953 0261 756E7369 		.ascii	"unsigned int\000"
 3953      676E6564 
 3953      20696E74 
 3953      00
 3954              	.LASF5:
 3955 026e 6C6F6E67 		.ascii	"long unsigned int\000"
 3955      20756E73 
 3955      69676E65 
 3955      6420696E 
 3955      7400
 3956              	.LASF3:
 3957 0280 73686F72 		.ascii	"short unsigned int\000"
 3957      7420756E 
 3957      7369676E 
 3957      65642069 
ARM GAS  C:\Users\essele\AppData\Local\Temp\ccbSjPdV.s 			page 117


 3957      6E7400
 3958              	.LASF59:
 3959 0293 55534255 		.ascii	"USBUART_Stop\000"
 3959      4152545F 
 3959      53746F70 
 3959      00
 3960              	.LASF55:
 3961 02a0 55534255 		.ascii	"USBUART_Start\000"
 3961      4152545F 
 3961      53746172 
 3961      7400
 3962              	.LASF64:
 3963 02ae 55534255 		.ascii	"USBUART_GetInterfaceSetting\000"
 3963      4152545F 
 3963      47657449 
 3963      6E746572 
 3963      66616365 
 3964              	.LASF57:
 3965 02ca 55534255 		.ascii	"USBUART_Init\000"
 3965      4152545F 
 3965      496E6974 
 3965      00
 3966              	.LASF50:
 3967 02d7 61726245 		.ascii	"arbEp\000"
 3967      7000
 3968              	.LASF103:
 3969 02dd 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 3969      43313120 
 3969      352E342E 
 3969      31203230 
 3969      31363036 
 3970 0310 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m0 -mthumb -g -O"
 3970      20726576 
 3970      6973696F 
 3970      6E203233 
 3970      37373135 
 3971 0343 30202D66 		.ascii	"0 -ffunction-sections -ffat-lto-objects\000"
 3971      66756E63 
 3971      74696F6E 
 3971      2D736563 
 3971      74696F6E 
 3972              	.LASF26:
 3973 036b 696E7465 		.ascii	"interface\000"
 3973      72666163 
 3973      6500
 3974              	.LASF61:
 3975 0375 63723152 		.ascii	"cr1Reg\000"
 3975      656700
 3976              	.LASF15:
 3977 037c 72656733 		.ascii	"reg32\000"
 3977      3200
 3978              	.LASF100:
 3979 0382 55534255 		.ascii	"USBUART_deviceAddress\000"
 3979      4152545F 
 3979      64657669 
 3979      63654164 
 3979      64726573 
ARM GAS  C:\Users\essele\AppData\Local\Temp\ccbSjPdV.s 			page 118


 3980              	.LASF41:
 3981 0398 55534255 		.ascii	"USBUART_arb_ep_struct\000"
 3981      4152545F 
 3981      6172625F 
 3981      65705F73 
 3981      74727563 
 3982              	.LASF20:
 3983 03ae 68774570 		.ascii	"hwEpState\000"
 3983      53746174 
 3983      6500
 3984              	.LASF51:
 3985 03b8 55534255 		.ascii	"USBUART_arb_eps_struct\000"
 3985      4152545F 
 3985      6172625F 
 3985      6570735F 
 3985      73747275 
 3986              	.LASF17:
 3987 03cf 73697A65 		.ascii	"sizetype\000"
 3987      74797065 
 3987      00
 3988              	.LASF16:
 3989 03d8 6C6F6E67 		.ascii	"long double\000"
 3989      20646F75 
 3989      626C6500 
 3990              	.LASF80:
 3991 03e4 55534255 		.ascii	"USBUART_Force\000"
 3991      4152545F 
 3991      466F7263 
 3991      6500
 3992              	.LASF75:
 3993 03f2 64617461 		.ascii	"dataBuf\000"
 3993      42756600 
 3994              	.LASF18:
 3995 03fa 61747472 		.ascii	"attrib\000"
 3995      696200
 3996              	.LASF39:
 3997 0401 72775261 		.ascii	"rwRaMsb\000"
 3997      4D736200 
 3998              	.LASF28:
 3999 0409 6570436E 		.ascii	"epCnt0\000"
 3999      743000
 4000              	.LASF29:
 4001 0410 6570436E 		.ascii	"epCnt1\000"
 4001      743100
 4002              	.LASF30:
 4003 0417 65704372 		.ascii	"epCr0\000"
 4003      3000
 4004              	.LASF12:
 4005 041d 666C6F61 		.ascii	"float\000"
 4005      7400
 4006              	.LASF73:
 4007 0423 55534255 		.ascii	"USBUART_ReadOutEP\000"
 4007      4152545F 
 4007      52656164 
 4007      4F757445 
 4007      5000
 4008              	.LASF19:
ARM GAS  C:\Users\essele\AppData\Local\Temp\ccbSjPdV.s 			page 119


 4009 0435 61706945 		.ascii	"apiEpState\000"
 4009      70537461 
 4009      746500
 4010              	.LASF99:
 4011 0440 55534255 		.ascii	"USBUART_interfaceSetting\000"
 4011      4152545F 
 4011      696E7465 
 4011      72666163 
 4011      65536574 
 4012              	.LASF1:
 4013 0459 756E7369 		.ascii	"unsigned char\000"
 4013      676E6564 
 4013      20636861 
 4013      7200
 4014              	.LASF44:
 4015 0467 72775261 		.ascii	"rwRa16\000"
 4015      313600
 4016              	.LASF2:
 4017 046e 73686F72 		.ascii	"short int\000"
 4017      7420696E 
 4017      7400
 4018              	.LASF66:
 4019 0478 55534255 		.ascii	"USBUART_GetEPState\000"
 4019      4152545F 
 4019      47657445 
 4019      50537461 
 4019      746500
 4020              	.LASF38:
 4021 048b 72775261 		.ascii	"rwRa\000"
 4021      00
 4022              	.LASF79:
 4023 0490 55534255 		.ascii	"USBUART_DisableOutEP\000"
 4023      4152545F 
 4023      44697361 
 4023      626C654F 
 4023      75744550 
 4024              	.LASF37:
 4025 04a5 72775761 		.ascii	"rwWaMsb\000"
 4025      4D736200 
 4026              	.LASF31:
 4027 04ad 55534255 		.ascii	"USBUART_sie_ep_struct\000"
 4027      4152545F 
 4027      7369655F 
 4027      65705F73 
 4027      74727563 
 4028              	.LASF81:
 4029 04c3 62537461 		.ascii	"bState\000"
 4029      746500
 4030              	.LASF72:
 4031 04ca 6C656E67 		.ascii	"length\000"
 4031      746800
 4032              	.LASF14:
 4033 04d1 63686172 		.ascii	"char\000"
 4033      00
 4034              	.LASF54:
 4035 04d6 6D6F6465 		.ascii	"mode\000"
 4035      00
ARM GAS  C:\Users\essele\AppData\Local\Temp\ccbSjPdV.s 			page 120


 4036              	.LASF25:
 4037 04db 62756666 		.ascii	"bufferSize\000"
 4037      65725369 
 4037      7A6500
 4038              	.LASF52:
 4039 04e6 55534255 		.ascii	"USBUART_arb_eps_reg16_struct\000"
 4039      4152545F 
 4039      6172625F 
 4039      6570735F 
 4039      72656731 
 4040              	.LASF86:
 4041 0503 55534255 		.ascii	"USBUART_VBusPresent\000"
 4041      4152545F 
 4041      56427573 
 4041      50726573 
 4041      656E7400 
 4042              	.LASF27:
 4043 0517 545F5553 		.ascii	"T_USBUART_EP_CTL_BLOCK\000"
 4043      42554152 
 4043      545F4550 
 4043      5F43544C 
 4043      5F424C4F 
 4044              	.LASF24:
 4045 052e 62756666 		.ascii	"buffOffset\000"
 4045      4F666673 
 4045      657400
 4046              	.LASF65:
 4047 0539 696E7465 		.ascii	"interfaceNumber\000"
 4047      72666163 
 4047      654E756D 
 4047      62657200 
 4048              	.LASF68:
 4049 0549 55534255 		.ascii	"USBUART_GetEPCount\000"
 4049      4152545F 
 4049      47657445 
 4049      50436F75 
 4049      6E7400
 4050              	.LASF74:
 4051 055c 55534255 		.ascii	"USBUART_LoadInEP16\000"
 4051      4152545F 
 4051      4C6F6164 
 4051      496E4550 
 4051      313600
 4052              	.LASF105:
 4053 056f 5C5C4D61 		.ascii	"\\\\Mac\\Home\\Documents\\dev\\yaugi\\GPIB USB Adap"
 4053      635C486F 
 4053      6D655C44 
 4053      6F63756D 
 4053      656E7473 
 4054 059b 7465725C 		.ascii	"ter\\GPIB USB 1.cydsn\000"
 4054      47504942 
 4054      20555342 
 4054      20312E63 
 4054      7964736E 
 4055              	.LASF60:
 4056 05b0 656E6162 		.ascii	"enableInterrupts\000"
 4056      6C65496E 
ARM GAS  C:\Users\essele\AppData\Local\Temp\ccbSjPdV.s 			page 121


 4056      74657272 
 4056      75707473 
 4056      00
 4057              	.LASF40:
 4058 05c1 72774472 		.ascii	"rwDr\000"
 4058      00
 4059              	.LASF56:
 4060 05c6 55534255 		.ascii	"USBUART_InitComponent\000"
 4060      4152545F 
 4060      496E6974 
 4060      436F6D70 
 4060      6F6E656E 
 4061              	.LASF95:
 4062 05dc 55534255 		.ascii	"USBUART_configuration\000"
 4062      4152545F 
 4062      636F6E66 
 4062      69677572 
 4062      6174696F 
 4063              	.LASF63:
 4064 05f2 55534255 		.ascii	"USBUART_IsConfigurationChanged\000"
 4064      4152545F 
 4064      4973436F 
 4064      6E666967 
 4064      75726174 
 4065              	.LASF33:
 4066 0611 6570496E 		.ascii	"epIntEn\000"
 4066      74456E00 
 4067              	.LASF43:
 4068 0619 72657365 		.ascii	"reserved0\000"
 4068      72766564 
 4068      3000
 4069              	.LASF45:
 4070 0623 72657365 		.ascii	"reserved1\000"
 4070      72766564 
 4070      3100
 4071              	.LASF58:
 4072 062d 55534255 		.ascii	"USBUART_ReInitComponent\000"
 4072      4152545F 
 4072      5265496E 
 4072      6974436F 
 4072      6D706F6E 
 4073              	.LASF94:
 4074 0645 55534255 		.ascii	"USBUART_transferState\000"
 4074      4152545F 
 4074      7472616E 
 4074      73666572 
 4074      53746174 
 4075              	.LASF90:
 4076 065b 55534255 		.ascii	"USBUART_EnableSofInt\000"
 4076      4152545F 
 4076      456E6162 
 4076      6C65536F 
 4076      66496E74 
 4077              	.LASF96:
 4078 0670 55534255 		.ascii	"USBUART_configurationChanged\000"
 4078      4152545F 
 4078      636F6E66 
ARM GAS  C:\Users\essele\AppData\Local\Temp\ccbSjPdV.s 			page 122


 4078      69677572 
 4078      6174696F 
 4079              	.LASF88:
 4080 068d 72657375 		.ascii	"result\000"
 4080      6C7400
 4081              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
