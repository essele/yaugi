ARM GAS  C:\Users\essele\AppData\Local\Temp\ccfSlmaE.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m0
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 0
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"gpib.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.comm	gpib_buffer,256,4
  20              		.section	.text.gpib_get_buffer,"ax",%progbits
  21              		.align	2
  22              		.global	gpib_get_buffer
  23              		.code	16
  24              		.thumb_func
  25              		.type	gpib_get_buffer, %function
  26              	gpib_get_buffer:
  27              	.LFB34:
  28              		.file 1 "gpib.c"
   1:gpib.c        **** /****
   2:gpib.c        ****  * YAUGI -- Yet Another USB GPIB Interface
   3:gpib.c        ****  * 
   4:gpib.c        ****  * Lee Essen, 2019
   5:gpib.c        ****  *
   6:gpib.c        ****  * This work is licensed under a Creative Commons 
   7:gpib.c        ****  * Attribution-NonCommercial-ShareAlike 4.0 International License.
   8:gpib.c        ****  *
   9:gpib.c        ****  */
  10:gpib.c        **** 
  11:gpib.c        **** #include "gpib.h"
  12:gpib.c        **** #include "settings.h"
  13:gpib.c        **** 
  14:gpib.c        **** /**
  15:gpib.c        ****  * How long after we start to see a device do we consider it ok to talk to
  16:gpib.c        ****  * (in ms)
  17:gpib.c        ****  */
  18:gpib.c        **** #define GPIB_INIT_TIME      3000
  19:gpib.c        **** 
  20:gpib.c        **** /**
  21:gpib.c        ****  * The internal gpib buffer
  22:gpib.c        ****  */
  23:gpib.c        **** #define GPIB_BUF_SIZE       256
  24:gpib.c        **** uint8_t gpib_buffer[GPIB_BUF_SIZE];
  25:gpib.c        **** 
  26:gpib.c        **** uint8_t *gpib_get_buffer() {
  29              		.loc 1 26 0
  30              		.cfi_startproc
  31              		@ args = 0, pretend = 0, frame = 0
ARM GAS  C:\Users\essele\AppData\Local\Temp\ccfSlmaE.s 			page 2


  32              		@ frame_needed = 1, uses_anonymous_args = 0
  33 0000 80B5     		push	{r7, lr}
  34              		.cfi_def_cfa_offset 8
  35              		.cfi_offset 7, -8
  36              		.cfi_offset 14, -4
  37 0002 00AF     		add	r7, sp, #0
  38              		.cfi_def_cfa_register 7
  27:gpib.c        ****     return gpib_buffer;
  39              		.loc 1 27 0
  40 0004 014B     		ldr	r3, .L3
  28:gpib.c        **** }
  41              		.loc 1 28 0
  42 0006 1800     		movs	r0, r3
  43 0008 BD46     		mov	sp, r7
  44              		@ sp needed
  45 000a 80BD     		pop	{r7, pc}
  46              	.L4:
  47              		.align	2
  48              	.L3:
  49 000c 00000000 		.word	gpib_buffer
  50              		.cfi_endproc
  51              	.LFE34:
  52              		.size	gpib_get_buffer, .-gpib_get_buffer
  53              		.global	my_address
  54              		.data
  55              		.type	my_address, %object
  56              		.size	my_address, 1
  57              	my_address:
  58 0000 15       		.byte	21
  59              		.section	.text.gpib_init_pins,"ax",%progbits
  60              		.align	2
  61              		.global	gpib_init_pins
  62              		.code	16
  63              		.thumb_func
  64              		.type	gpib_init_pins, %function
  65              	gpib_init_pins:
  66              	.LFB35:
  29:gpib.c        **** 
  30:gpib.c        **** 
  31:gpib.c        **** /**
  32:gpib.c        ****  * Definitions of the various lines (for bitbanging)
  33:gpib.c        ****  */
  34:gpib.c        **** typedef enum {
  35:gpib.c        ****     ATN=0, SRQ, IFC, NDAC, NRFD, DAV, EOI, REN } gpib_line;
  36:gpib.c        **** 
  37:gpib.c        **** /**
  38:gpib.c        ****  * My internal GPIB address (default controller = 21)
  39:gpib.c        ****  */
  40:gpib.c        **** uint8_t my_address = 21;
  41:gpib.c        **** 
  42:gpib.c        **** /**
  43:gpib.c        ****  * Ensure the pin settings are correct for all of the pins. This should be
  44:gpib.c        ****  * open drain, with a drive low. (This will be done by the design)
  45:gpib.c        ****  *
  46:gpib.c        ****  */
  47:gpib.c        **** void gpib_init_pins() {
  67              		.loc 1 47 0
ARM GAS  C:\Users\essele\AppData\Local\Temp\ccfSlmaE.s 			page 3


  68              		.cfi_startproc
  69              		@ args = 0, pretend = 0, frame = 0
  70              		@ frame_needed = 1, uses_anonymous_args = 0
  71 0000 80B5     		push	{r7, lr}
  72              		.cfi_def_cfa_offset 8
  73              		.cfi_offset 7, -8
  74              		.cfi_offset 14, -4
  75 0002 00AF     		add	r7, sp, #0
  76              		.cfi_def_cfa_register 7
  48:gpib.c        ****     
  49:gpib.c        **** }
  77              		.loc 1 49 0
  78 0004 C046     		nop
  79 0006 BD46     		mov	sp, r7
  80              		@ sp needed
  81 0008 80BD     		pop	{r7, pc}
  82              		.cfi_endproc
  83              	.LFE35:
  84              		.size	gpib_init_pins, .-gpib_init_pins
  85              		.section	.text.gpib_settle,"ax",%progbits
  86              		.align	2
  87              		.global	gpib_settle
  88              		.code	16
  89              		.thumb_func
  90              		.type	gpib_settle, %function
  91              	gpib_settle:
  92              	.LFB36:
  50:gpib.c        **** 
  51:gpib.c        **** void gpib_settle() {
  93              		.loc 1 51 0
  94              		.cfi_startproc
  95              		@ args = 0, pretend = 0, frame = 0
  96              		@ frame_needed = 1, uses_anonymous_args = 0
  97 0000 80B5     		push	{r7, lr}
  98              		.cfi_def_cfa_offset 8
  99              		.cfi_offset 7, -8
 100              		.cfi_offset 14, -4
 101 0002 00AF     		add	r7, sp, #0
 102              		.cfi_def_cfa_register 7
  52:gpib.c        ****     CyDelayUs(2);
 103              		.loc 1 52 0
 104 0004 0220     		movs	r0, #2
 105 0006 FFF7FEFF 		bl	CyDelayUs
  53:gpib.c        **** }
 106              		.loc 1 53 0
 107 000a C046     		nop
 108 000c BD46     		mov	sp, r7
 109              		@ sp needed
 110 000e 80BD     		pop	{r7, pc}
 111              		.cfi_endproc
 112              	.LFE36:
 113              		.size	gpib_settle, .-gpib_settle
 114              		.global	_gpib_mode
 115              		.bss
 116              		.align	2
 117              		.type	_gpib_mode, %object
 118              		.size	_gpib_mode, 4
ARM GAS  C:\Users\essele\AppData\Local\Temp\ccfSlmaE.s 			page 4


 119              	_gpib_mode:
 120 0000 00000000 		.space	4
 121              		.section	.text.gpib_assert_line,"ax",%progbits
 122              		.align	2
 123              		.global	gpib_assert_line
 124              		.code	16
 125              		.thumb_func
 126              		.type	gpib_assert_line, %function
 127              	gpib_assert_line:
 128              	.LFB37:
  54:gpib.c        **** 
  55:gpib.c        **** /**
  56:gpib.c        ****  * We can detect if a device is not present since all the pins will be low, if
  57:gpib.c        ****  * that is the case then we don't want to proceed. We'll just check the SIG pins
  58:gpib.c        ****  * since all shouldn't be low in normal operation.
  59:gpib.c        ****  *
  60:gpib.c        ****  * TODO: we should only really do this check when we are not driving anything, otherwise
  61:gpib.c        ****  * we might get strange results.
  62:gpib.c        ****  */
  63:gpib.c        **** 
  64:gpib.c        **** int _gpib_mode = GPIB_NODEVICE;
  65:gpib.c        **** 
  66:gpib.c        **** 
  67:gpib.c        **** 
  68:gpib.c        **** 
  69:gpib.c        **** 
  70:gpib.c        **** /**
  71:gpib.c        ****  * Assert means pulling a line low
  72:gpib.c        ****  */
  73:gpib.c        **** void gpib_assert_line(gpib_line line) {
 129              		.loc 1 73 0
 130              		.cfi_startproc
 131              		@ args = 0, pretend = 0, frame = 8
 132              		@ frame_needed = 1, uses_anonymous_args = 0
 133 0000 80B5     		push	{r7, lr}
 134              		.cfi_def_cfa_offset 8
 135              		.cfi_offset 7, -8
 136              		.cfi_offset 14, -4
 137 0002 82B0     		sub	sp, sp, #8
 138              		.cfi_def_cfa_offset 16
 139 0004 00AF     		add	r7, sp, #0
 140              		.cfi_def_cfa_register 7
 141 0006 0200     		movs	r2, r0
 142 0008 FB1D     		adds	r3, r7, #7
 143 000a 1A70     		strb	r2, [r3]
  74:gpib.c        ****     (*(reg32 *)SIG__DR_CLR) = (1 << line);
 144              		.loc 1 74 0
 145 000c 054B     		ldr	r3, .L8
 146 000e FA1D     		adds	r2, r7, #7
 147 0010 1278     		ldrb	r2, [r2]
 148 0012 0121     		movs	r1, #1
 149 0014 9140     		lsls	r1, r1, r2
 150 0016 0A00     		movs	r2, r1
 151 0018 1A60     		str	r2, [r3]
  75:gpib.c        **** }
 152              		.loc 1 75 0
 153 001a C046     		nop
ARM GAS  C:\Users\essele\AppData\Local\Temp\ccfSlmaE.s 			page 5


 154 001c BD46     		mov	sp, r7
 155 001e 02B0     		add	sp, sp, #8
 156              		@ sp needed
 157 0020 80BD     		pop	{r7, pc}
 158              	.L9:
 159 0022 C046     		.align	2
 160              	.L8:
 161 0024 44010440 		.word	1074004292
 162              		.cfi_endproc
 163              	.LFE37:
 164              		.size	gpib_assert_line, .-gpib_assert_line
 165              		.section	.text.gpib_unassert_line,"ax",%progbits
 166              		.align	2
 167              		.global	gpib_unassert_line
 168              		.code	16
 169              		.thumb_func
 170              		.type	gpib_unassert_line, %function
 171              	gpib_unassert_line:
 172              	.LFB38:
  76:gpib.c        **** 
  77:gpib.c        **** /**
  78:gpib.c        ****  * Unasserting means letting it float high
  79:gpib.c        ****  */
  80:gpib.c        **** void gpib_unassert_line(gpib_line line) {
 173              		.loc 1 80 0
 174              		.cfi_startproc
 175              		@ args = 0, pretend = 0, frame = 8
 176              		@ frame_needed = 1, uses_anonymous_args = 0
 177 0000 80B5     		push	{r7, lr}
 178              		.cfi_def_cfa_offset 8
 179              		.cfi_offset 7, -8
 180              		.cfi_offset 14, -4
 181 0002 82B0     		sub	sp, sp, #8
 182              		.cfi_def_cfa_offset 16
 183 0004 00AF     		add	r7, sp, #0
 184              		.cfi_def_cfa_register 7
 185 0006 0200     		movs	r2, r0
 186 0008 FB1D     		adds	r3, r7, #7
 187 000a 1A70     		strb	r2, [r3]
  81:gpib.c        ****     (*(reg32 *)SIG__DR_SET) = (1 << line);
 188              		.loc 1 81 0
 189 000c 054B     		ldr	r3, .L11
 190 000e FA1D     		adds	r2, r7, #7
 191 0010 1278     		ldrb	r2, [r2]
 192 0012 0121     		movs	r1, #1
 193 0014 9140     		lsls	r1, r1, r2
 194 0016 0A00     		movs	r2, r1
 195 0018 1A60     		str	r2, [r3]
  82:gpib.c        **** }
 196              		.loc 1 82 0
 197 001a C046     		nop
 198 001c BD46     		mov	sp, r7
 199 001e 02B0     		add	sp, sp, #8
 200              		@ sp needed
 201 0020 80BD     		pop	{r7, pc}
 202              	.L12:
 203 0022 C046     		.align	2
ARM GAS  C:\Users\essele\AppData\Local\Temp\ccfSlmaE.s 			page 6


 204              	.L11:
 205 0024 40010440 		.word	1074004288
 206              		.cfi_endproc
 207              	.LFE38:
 208              		.size	gpib_unassert_line, .-gpib_unassert_line
 209              		.section	.text.gpib_readall,"ax",%progbits
 210              		.align	2
 211              		.global	gpib_readall
 212              		.code	16
 213              		.thumb_func
 214              		.type	gpib_readall, %function
 215              	gpib_readall:
 216              	.LFB39:
  83:gpib.c        **** 
  84:gpib.c        **** uint16_t gpib_readall() {
 217              		.loc 1 84 0
 218              		.cfi_startproc
 219              		@ args = 0, pretend = 0, frame = 8
 220              		@ frame_needed = 1, uses_anonymous_args = 0
 221 0000 80B5     		push	{r7, lr}
 222              		.cfi_def_cfa_offset 8
 223              		.cfi_offset 7, -8
 224              		.cfi_offset 14, -4
 225 0002 82B0     		sub	sp, sp, #8
 226              		.cfi_def_cfa_offset 16
 227 0004 00AF     		add	r7, sp, #0
 228              		.cfi_def_cfa_register 7
  85:gpib.c        ****     uint16_t rc = ((*(reg32 *)SIG__PS) & 0xff) << 8;
 229              		.loc 1 85 0
 230 0006 0C4B     		ldr	r3, .L15
 231 0008 1B68     		ldr	r3, [r3]
 232 000a 9BB2     		uxth	r3, r3
 233 000c FF22     		movs	r2, #255
 234 000e 1340     		ands	r3, r2
 235 0010 9AB2     		uxth	r2, r3
 236 0012 BB1D     		adds	r3, r7, #6
 237 0014 1202     		lsls	r2, r2, #8
 238 0016 1A80     		strh	r2, [r3]
  86:gpib.c        ****     rc |= ((*(reg32 *)DIO__PS) & 0xff);
 239              		.loc 1 86 0
 240 0018 084B     		ldr	r3, .L15+4
 241 001a 1B68     		ldr	r3, [r3]
 242 001c FF22     		movs	r2, #255
 243 001e 1340     		ands	r3, r2
 244 0020 99B2     		uxth	r1, r3
 245 0022 BB1D     		adds	r3, r7, #6
 246 0024 BA1D     		adds	r2, r7, #6
 247 0026 1288     		ldrh	r2, [r2]
 248 0028 0A43     		orrs	r2, r1
 249 002a 1A80     		strh	r2, [r3]
  87:gpib.c        ****     return rc;
 250              		.loc 1 87 0
 251 002c BB1D     		adds	r3, r7, #6
 252 002e 1B88     		ldrh	r3, [r3]
  88:gpib.c        **** }
 253              		.loc 1 88 0
 254 0030 1800     		movs	r0, r3
ARM GAS  C:\Users\essele\AppData\Local\Temp\ccfSlmaE.s 			page 7


 255 0032 BD46     		mov	sp, r7
 256 0034 02B0     		add	sp, sp, #8
 257              		@ sp needed
 258 0036 80BD     		pop	{r7, pc}
 259              	.L16:
 260              		.align	2
 261              	.L15:
 262 0038 04010440 		.word	1074004228
 263 003c 04020440 		.word	1074004484
 264              		.cfi_endproc
 265              	.LFE39:
 266              		.size	gpib_readall, .-gpib_readall
 267              		.section	.text.gpib_read_line,"ax",%progbits
 268              		.align	2
 269              		.global	gpib_read_line
 270              		.code	16
 271              		.thumb_func
 272              		.type	gpib_read_line, %function
 273              	gpib_read_line:
 274              	.LFB40:
  89:gpib.c        **** 
  90:gpib.c        **** 
  91:gpib.c        **** /**
  92:gpib.c        ****  * Read the status of a line ... true is low! false is high!
  93:gpib.c        ****  */
  94:gpib.c        **** bool gpib_read_line(gpib_line line) {
 275              		.loc 1 94 0
 276              		.cfi_startproc
 277              		@ args = 0, pretend = 0, frame = 16
 278              		@ frame_needed = 1, uses_anonymous_args = 0
 279 0000 80B5     		push	{r7, lr}
 280              		.cfi_def_cfa_offset 8
 281              		.cfi_offset 7, -8
 282              		.cfi_offset 14, -4
 283 0002 84B0     		sub	sp, sp, #16
 284              		.cfi_def_cfa_offset 24
 285 0004 00AF     		add	r7, sp, #0
 286              		.cfi_def_cfa_register 7
 287 0006 0200     		movs	r2, r0
 288 0008 FB1D     		adds	r3, r7, #7
 289 000a 1A70     		strb	r2, [r3]
  95:gpib.c        ****     int v = ((*(reg32 *)SIG__PS) >> line) & 0x0001;
 290              		.loc 1 95 0
 291 000c 084B     		ldr	r3, .L19
 292 000e 1A68     		ldr	r2, [r3]
 293 0010 FB1D     		adds	r3, r7, #7
 294 0012 1B78     		ldrb	r3, [r3]
 295 0014 DA40     		lsrs	r2, r2, r3
 296 0016 1300     		movs	r3, r2
 297 0018 1A00     		movs	r2, r3
 298 001a 0123     		movs	r3, #1
 299 001c 1340     		ands	r3, r2
 300 001e FB60     		str	r3, [r7, #12]
  96:gpib.c        ****     return v == 0 ? true : false;
 301              		.loc 1 96 0
 302 0020 FB68     		ldr	r3, [r7, #12]
 303 0022 5A42     		rsbs	r2, r3, #0
ARM GAS  C:\Users\essele\AppData\Local\Temp\ccfSlmaE.s 			page 8


 304 0024 5341     		adcs	r3, r3, r2
 305 0026 DBB2     		uxtb	r3, r3
  97:gpib.c        **** }
 306              		.loc 1 97 0
 307 0028 1800     		movs	r0, r3
 308 002a BD46     		mov	sp, r7
 309 002c 04B0     		add	sp, sp, #16
 310              		@ sp needed
 311 002e 80BD     		pop	{r7, pc}
 312              	.L20:
 313              		.align	2
 314              	.L19:
 315 0030 04010440 		.word	1074004228
 316              		.cfi_endproc
 317              	.LFE40:
 318              		.size	gpib_read_line, .-gpib_read_line
 319              		.section	.text.gpib_poll,"ax",%progbits
 320              		.align	2
 321              		.global	gpib_poll
 322              		.code	16
 323              		.thumb_func
 324              		.type	gpib_poll, %function
 325              	gpib_poll:
 326              	.LFB41:
  98:gpib.c        **** 
  99:gpib.c        **** 
 100:gpib.c        **** /**
 101:gpib.c        ****  * Called periodically, will announce state changes, return value of 1 indicates we have
 102:gpib.c        ****  * had a state change.
 103:gpib.c        ****  *
 104:gpib.c        ****  * We'll just keep an eye on IFC and ATN ... if either are low then (since we are the controller) t
 105:gpib.c        ****  * must be a power fail/missing device.
 106:gpib.c        ****  *
 107:gpib.c        ****  * Once a device looks like it's back, we start a timer so we don't jump the gun
 108:gpib.c        ****  */
 109:gpib.c        **** int gpib_poll() {
 327              		.loc 1 109 0
 328              		.cfi_startproc
 329              		@ args = 0, pretend = 0, frame = 8
 330              		@ frame_needed = 1, uses_anonymous_args = 0
 331 0000 90B5     		push	{r4, r7, lr}
 332              		.cfi_def_cfa_offset 12
 333              		.cfi_offset 4, -12
 334              		.cfi_offset 7, -8
 335              		.cfi_offset 14, -4
 336 0002 83B0     		sub	sp, sp, #12
 337              		.cfi_def_cfa_offset 24
 338 0004 00AF     		add	r7, sp, #0
 339              		.cfi_def_cfa_register 7
 110:gpib.c        ****     //uint8_t sig = (*(reg32 *)SIG__PS & 0xff);
 111:gpib.c        ****     int old_state = _gpib_mode;
 340              		.loc 1 111 0
 341 0006 1F4B     		ldr	r3, .L27
 342 0008 1B68     		ldr	r3, [r3]
 343 000a 7B60     		str	r3, [r7, #4]
 112:gpib.c        ****    
 113:gpib.c        ****     bool atn = gpib_read_line(ATN);
ARM GAS  C:\Users\essele\AppData\Local\Temp\ccfSlmaE.s 			page 9


 344              		.loc 1 113 0
 345 000c FC1C     		adds	r4, r7, #3
 346 000e 0020     		movs	r0, #0
 347 0010 FFF7FEFF 		bl	gpib_read_line
 348 0014 0300     		movs	r3, r0
 349 0016 2370     		strb	r3, [r4]
 114:gpib.c        ****     bool ifc = gpib_read_line(IFC);
 350              		.loc 1 114 0
 351 0018 BC1C     		adds	r4, r7, #2
 352 001a 0220     		movs	r0, #2
 353 001c FFF7FEFF 		bl	gpib_read_line
 354 0020 0300     		movs	r3, r0
 355 0022 2370     		strb	r3, [r4]
 115:gpib.c        ****     
 116:gpib.c        ****     // Used to disable state checking (if a scope is on the lines!)
 117:gpib.c        ****     //    atn = ifc = false;
 118:gpib.c        ****     
 119:gpib.c        ****     // If either ATN or IFC are zero, then we must be missing a device ;-)
 120:gpib.c        ****     if (atn || ifc) {
 356              		.loc 1 120 0
 357 0024 FB1C     		adds	r3, r7, #3
 358 0026 1B78     		ldrb	r3, [r3]
 359 0028 002B     		cmp	r3, #0
 360 002a 03D1     		bne	.L22
 361              		.loc 1 120 0 is_stmt 0 discriminator 1
 362 002c BB1C     		adds	r3, r7, #2
 363 002e 1B78     		ldrb	r3, [r3]
 364 0030 002B     		cmp	r3, #0
 365 0032 03D0     		beq	.L23
 366              	.L22:
 121:gpib.c        ****         _gpib_mode = GPIB_NODEVICE;
 367              		.loc 1 121 0 is_stmt 1
 368 0034 134B     		ldr	r3, .L27
 369 0036 0022     		movs	r2, #0
 370 0038 1A60     		str	r2, [r3]
 371 003a 17E0     		b	.L24
 372              	.L23:
 122:gpib.c        ****     } else if (_gpib_mode == GPIB_NODEVICE) {
 373              		.loc 1 122 0
 374 003c 114B     		ldr	r3, .L27
 375 003e 1B68     		ldr	r3, [r3]
 376 0040 002B     		cmp	r3, #0
 377 0042 06D1     		bne	.L25
 123:gpib.c        ****         // device has potentially come back ... zero the timer..
 124:gpib.c        ****         Timer1_WriteCounter(0);
 378              		.loc 1 124 0
 379 0044 0020     		movs	r0, #0
 380 0046 FFF7FEFF 		bl	Timer1_WriteCounter
 125:gpib.c        ****         _gpib_mode = GPIB_INIT;
 381              		.loc 1 125 0
 382 004a 0E4B     		ldr	r3, .L27
 383 004c 0122     		movs	r2, #1
 384 004e 1A60     		str	r2, [r3]
 385 0050 0CE0     		b	.L24
 386              	.L25:
 126:gpib.c        ****     } else if (_gpib_mode == GPIB_INIT) {
 387              		.loc 1 126 0
ARM GAS  C:\Users\essele\AppData\Local\Temp\ccfSlmaE.s 			page 10


 388 0052 0C4B     		ldr	r3, .L27
 389 0054 1B68     		ldr	r3, [r3]
 390 0056 012B     		cmp	r3, #1
 391 0058 08D1     		bne	.L24
 127:gpib.c        ****         // after a period we need to switch
 128:gpib.c        ****         if (Timer1_ReadCounter() > GPIB_INIT_TIME) {
 392              		.loc 1 128 0
 393 005a FFF7FEFF 		bl	Timer1_ReadCounter
 394 005e 0200     		movs	r2, r0
 395 0060 094B     		ldr	r3, .L27+4
 396 0062 9A42     		cmp	r2, r3
 397 0064 02D9     		bls	.L24
 129:gpib.c        ****             _gpib_mode = GPIB_RUNNING;
 398              		.loc 1 129 0
 399 0066 074B     		ldr	r3, .L27
 400 0068 0222     		movs	r2, #2
 401 006a 1A60     		str	r2, [r3]
 402              	.L24:
 130:gpib.c        ****         }
 131:gpib.c        ****     }    
 132:gpib.c        ****     return (_gpib_mode != old_state ? 1 : 0);
 403              		.loc 1 132 0
 404 006c 054B     		ldr	r3, .L27
 405 006e 1A68     		ldr	r2, [r3]
 406 0070 7B68     		ldr	r3, [r7, #4]
 407 0072 D31A     		subs	r3, r2, r3
 408 0074 5A1E     		subs	r2, r3, #1
 409 0076 9341     		sbcs	r3, r3, r2
 410 0078 DBB2     		uxtb	r3, r3
 133:gpib.c        **** }
 411              		.loc 1 133 0
 412 007a 1800     		movs	r0, r3
 413 007c BD46     		mov	sp, r7
 414 007e 03B0     		add	sp, sp, #12
 415              		@ sp needed
 416 0080 90BD     		pop	{r4, r7, pc}
 417              	.L28:
 418 0082 C046     		.align	2
 419              	.L27:
 420 0084 00000000 		.word	_gpib_mode
 421 0088 B80B0000 		.word	3000
 422              		.cfi_endproc
 423              	.LFE41:
 424              		.size	gpib_poll, .-gpib_poll
 425              		.section	.text.gpib_get_mode,"ax",%progbits
 426              		.align	2
 427              		.global	gpib_get_mode
 428              		.code	16
 429              		.thumb_func
 430              		.type	gpib_get_mode, %function
 431              	gpib_get_mode:
 432              	.LFB42:
 134:gpib.c        **** 
 135:gpib.c        **** int gpib_get_mode() {
 433              		.loc 1 135 0
 434              		.cfi_startproc
 435              		@ args = 0, pretend = 0, frame = 0
ARM GAS  C:\Users\essele\AppData\Local\Temp\ccfSlmaE.s 			page 11


 436              		@ frame_needed = 1, uses_anonymous_args = 0
 437 0000 80B5     		push	{r7, lr}
 438              		.cfi_def_cfa_offset 8
 439              		.cfi_offset 7, -8
 440              		.cfi_offset 14, -4
 441 0002 00AF     		add	r7, sp, #0
 442              		.cfi_def_cfa_register 7
 136:gpib.c        ****     return _gpib_mode;
 443              		.loc 1 136 0
 444 0004 024B     		ldr	r3, .L31
 445 0006 1B68     		ldr	r3, [r3]
 137:gpib.c        **** }
 446              		.loc 1 137 0
 447 0008 1800     		movs	r0, r3
 448 000a BD46     		mov	sp, r7
 449              		@ sp needed
 450 000c 80BD     		pop	{r7, pc}
 451              	.L32:
 452 000e C046     		.align	2
 453              	.L31:
 454 0010 00000000 		.word	_gpib_mode
 455              		.cfi_endproc
 456              	.LFE42:
 457              		.size	gpib_get_mode, .-gpib_get_mode
 458              		.section	.text.gpib_wait_for_line_to_assert,"ax",%progbits
 459              		.align	2
 460              		.global	gpib_wait_for_line_to_assert
 461              		.code	16
 462              		.thumb_func
 463              		.type	gpib_wait_for_line_to_assert, %function
 464              	gpib_wait_for_line_to_assert:
 465              	.LFB43:
 138:gpib.c        **** 
 139:gpib.c        **** /**
 140:gpib.c        ****  * Wait for a line to go low, if it doesn't within read_tmo_ms then timeout
 141:gpib.c        ****  */
 142:gpib.c        **** bool gpib_wait_for_line_to_assert(gpib_line line) {
 466              		.loc 1 142 0
 467              		.cfi_startproc
 468              		@ args = 0, pretend = 0, frame = 8
 469              		@ frame_needed = 1, uses_anonymous_args = 0
 470 0000 80B5     		push	{r7, lr}
 471              		.cfi_def_cfa_offset 8
 472              		.cfi_offset 7, -8
 473              		.cfi_offset 14, -4
 474 0002 82B0     		sub	sp, sp, #8
 475              		.cfi_def_cfa_offset 16
 476 0004 00AF     		add	r7, sp, #0
 477              		.cfi_def_cfa_register 7
 478 0006 0200     		movs	r2, r0
 479 0008 FB1D     		adds	r3, r7, #7
 480 000a 1A70     		strb	r2, [r3]
 143:gpib.c        ****     // Prepare the counter...
 144:gpib.c        ****     Timer1_WriteCounter(0);
 481              		.loc 1 144 0
 482 000c 0020     		movs	r0, #0
 483 000e FFF7FEFF 		bl	Timer1_WriteCounter
ARM GAS  C:\Users\essele\AppData\Local\Temp\ccfSlmaE.s 			page 12


 484              	.L37:
 145:gpib.c        ****     
 146:gpib.c        ****     while (1) {
 147:gpib.c        ****         if (gpib_read_line(line) == true) {
 485              		.loc 1 147 0
 486 0012 FB1D     		adds	r3, r7, #7
 487 0014 1B78     		ldrb	r3, [r3]
 488 0016 1800     		movs	r0, r3
 489 0018 FFF7FEFF 		bl	gpib_read_line
 490 001c 031E     		subs	r3, r0, #0
 491 001e 01D0     		beq	.L34
 148:gpib.c        ****             return true;
 492              		.loc 1 148 0
 493 0020 0123     		movs	r3, #1
 494 0022 07E0     		b	.L35
 495              	.L34:
 149:gpib.c        ****         }
 150:gpib.c        ****         if (Timer1_ReadCounter() > settings.read_tmo_ms) {
 496              		.loc 1 150 0
 497 0024 FFF7FEFF 		bl	Timer1_ReadCounter
 498 0028 0200     		movs	r2, r0
 499 002a 044B     		ldr	r3, .L38
 500 002c 5B8A     		ldrh	r3, [r3, #18]
 501 002e 9A42     		cmp	r2, r3
 502 0030 EFD9     		bls	.L37
 151:gpib.c        ****             return false;
 503              		.loc 1 151 0
 504 0032 0023     		movs	r3, #0
 505              	.L35:
 152:gpib.c        ****         }
 153:gpib.c        ****     }
 154:gpib.c        **** }
 506              		.loc 1 154 0
 507 0034 1800     		movs	r0, r3
 508 0036 BD46     		mov	sp, r7
 509 0038 02B0     		add	sp, sp, #8
 510              		@ sp needed
 511 003a 80BD     		pop	{r7, pc}
 512              	.L39:
 513              		.align	2
 514              	.L38:
 515 003c 00000000 		.word	settings
 516              		.cfi_endproc
 517              	.LFE43:
 518              		.size	gpib_wait_for_line_to_assert, .-gpib_wait_for_line_to_assert
 519              		.section	.text.gpib_wait_for_line_to_unassert,"ax",%progbits
 520              		.align	2
 521              		.global	gpib_wait_for_line_to_unassert
 522              		.code	16
 523              		.thumb_func
 524              		.type	gpib_wait_for_line_to_unassert, %function
 525              	gpib_wait_for_line_to_unassert:
 526              	.LFB44:
 155:gpib.c        **** 
 156:gpib.c        **** /**
 157:gpib.c        ****  * Wait for a line to go high, if it doesn't within read_tmo_ms then timeout
 158:gpib.c        ****  */
ARM GAS  C:\Users\essele\AppData\Local\Temp\ccfSlmaE.s 			page 13


 159:gpib.c        **** bool gpib_wait_for_line_to_unassert(gpib_line line) {
 527              		.loc 1 159 0
 528              		.cfi_startproc
 529              		@ args = 0, pretend = 0, frame = 8
 530              		@ frame_needed = 1, uses_anonymous_args = 0
 531 0000 80B5     		push	{r7, lr}
 532              		.cfi_def_cfa_offset 8
 533              		.cfi_offset 7, -8
 534              		.cfi_offset 14, -4
 535 0002 82B0     		sub	sp, sp, #8
 536              		.cfi_def_cfa_offset 16
 537 0004 00AF     		add	r7, sp, #0
 538              		.cfi_def_cfa_register 7
 539 0006 0200     		movs	r2, r0
 540 0008 FB1D     		adds	r3, r7, #7
 541 000a 1A70     		strb	r2, [r3]
 160:gpib.c        ****     // Prepare the counter...
 161:gpib.c        ****     Timer1_WriteCounter(0);
 542              		.loc 1 161 0
 543 000c 0020     		movs	r0, #0
 544 000e FFF7FEFF 		bl	Timer1_WriteCounter
 545              	.L44:
 162:gpib.c        ****  
 163:gpib.c        ****     while (1) {
 164:gpib.c        ****         if (gpib_read_line(line) == false) {
 546              		.loc 1 164 0
 547 0012 FB1D     		adds	r3, r7, #7
 548 0014 1B78     		ldrb	r3, [r3]
 549 0016 1800     		movs	r0, r3
 550 0018 FFF7FEFF 		bl	gpib_read_line
 551 001c 0300     		movs	r3, r0
 552 001e 1A00     		movs	r2, r3
 553 0020 0123     		movs	r3, #1
 554 0022 5340     		eors	r3, r2
 555 0024 DBB2     		uxtb	r3, r3
 556 0026 002B     		cmp	r3, #0
 557 0028 01D0     		beq	.L41
 165:gpib.c        ****             return true;
 558              		.loc 1 165 0
 559 002a 0123     		movs	r3, #1
 560 002c 07E0     		b	.L42
 561              	.L41:
 166:gpib.c        ****         }
 167:gpib.c        ****         if (Timer1_ReadCounter() > settings.read_tmo_ms) {
 562              		.loc 1 167 0
 563 002e FFF7FEFF 		bl	Timer1_ReadCounter
 564 0032 0200     		movs	r2, r0
 565 0034 044B     		ldr	r3, .L45
 566 0036 5B8A     		ldrh	r3, [r3, #18]
 567 0038 9A42     		cmp	r2, r3
 568 003a EAD9     		bls	.L44
 168:gpib.c        ****             return false;
 569              		.loc 1 168 0
 570 003c 0023     		movs	r3, #0
 571              	.L42:
 169:gpib.c        ****         }
 170:gpib.c        ****     }
ARM GAS  C:\Users\essele\AppData\Local\Temp\ccfSlmaE.s 			page 14


 171:gpib.c        **** }
 572              		.loc 1 171 0
 573 003e 1800     		movs	r0, r3
 574 0040 BD46     		mov	sp, r7
 575 0042 02B0     		add	sp, sp, #8
 576              		@ sp needed
 577 0044 80BD     		pop	{r7, pc}
 578              	.L46:
 579 0046 C046     		.align	2
 580              	.L45:
 581 0048 00000000 		.word	settings
 582              		.cfi_endproc
 583              	.LFE44:
 584              		.size	gpib_wait_for_line_to_unassert, .-gpib_wait_for_line_to_unassert
 585              		.section	.text.gpib_send_byte,"ax",%progbits
 586              		.align	2
 587              		.global	gpib_send_byte
 588              		.code	16
 589              		.thumb_func
 590              		.type	gpib_send_byte, %function
 591              	gpib_send_byte:
 592              	.LFB45:
 172:gpib.c        **** 
 173:gpib.c        **** /**
 174:gpib.c        ****  * Transmit a byte of data on the bus, post this call nothing should be
 175:gpib.c        ****  * asserted. An error returns false.
 176:gpib.c        ****  */
 177:gpib.c        **** bool gpib_send_byte(uint8_t byte, bool last) {
 593              		.loc 1 177 0
 594              		.cfi_startproc
 595              		@ args = 0, pretend = 0, frame = 16
 596              		@ frame_needed = 1, uses_anonymous_args = 0
 597 0000 90B5     		push	{r4, r7, lr}
 598              		.cfi_def_cfa_offset 12
 599              		.cfi_offset 4, -12
 600              		.cfi_offset 7, -8
 601              		.cfi_offset 14, -4
 602 0002 85B0     		sub	sp, sp, #20
 603              		.cfi_def_cfa_offset 32
 604 0004 00AF     		add	r7, sp, #0
 605              		.cfi_def_cfa_register 7
 606 0006 0200     		movs	r2, r0
 607 0008 FB1D     		adds	r3, r7, #7
 608 000a 1A70     		strb	r2, [r3]
 609 000c BB1D     		adds	r3, r7, #6
 610 000e 0A1C     		adds	r2, r1, #0
 611 0010 1A70     		strb	r2, [r3]
 178:gpib.c        ****     bool ok;
 179:gpib.c        ****     
 180:gpib.c        ****     if (last) {
 612              		.loc 1 180 0
 613 0012 BB1D     		adds	r3, r7, #6
 614 0014 1B78     		ldrb	r3, [r3]
 615 0016 002B     		cmp	r3, #0
 616 0018 02D0     		beq	.L48
 181:gpib.c        ****        gpib_assert_line(EOI);
 617              		.loc 1 181 0
ARM GAS  C:\Users\essele\AppData\Local\Temp\ccfSlmaE.s 			page 15


 618 001a 0620     		movs	r0, #6
 619 001c FFF7FEFF 		bl	gpib_assert_line
 620              	.L48:
 182:gpib.c        ****     }
 183:gpib.c        ****     
 184:gpib.c        ****     // Wait for NRFD to be high...
 185:gpib.c        ****     ok = gpib_wait_for_line_to_unassert(NRFD);
 621              		.loc 1 185 0
 622 0020 0F23     		movs	r3, #15
 623 0022 FC18     		adds	r4, r7, r3
 624 0024 0420     		movs	r0, #4
 625 0026 FFF7FEFF 		bl	gpib_wait_for_line_to_unassert
 626 002a 0300     		movs	r3, r0
 627 002c 2370     		strb	r3, [r4]
 186:gpib.c        ****     if (!ok) goto cleanup;
 628              		.loc 1 186 0
 629 002e 0F23     		movs	r3, #15
 630 0030 FB18     		adds	r3, r7, r3
 631 0032 1B78     		ldrb	r3, [r3]
 632 0034 0122     		movs	r2, #1
 633 0036 5340     		eors	r3, r2
 634 0038 DBB2     		uxtb	r3, r3
 635 003a 002B     		cmp	r3, #0
 636 003c 11D1     		bne	.L52
 187:gpib.c        ****     
 188:gpib.c        ****     // Write data onto the bus... (reverse logic!)
 189:gpib.c        ****     (*(reg32 *)DIO__DR) = ~byte;
 637              		.loc 1 189 0
 638 003e 114B     		ldr	r3, .L53
 639 0040 FA1D     		adds	r2, r7, #7
 640 0042 1278     		ldrb	r2, [r2]
 641 0044 D243     		mvns	r2, r2
 642 0046 1A60     		str	r2, [r3]
 190:gpib.c        ****     
 191:gpib.c        ****     // Allow settling time...
 192:gpib.c        ****     gpib_settle();     // we may need to adjust this later
 643              		.loc 1 192 0
 644 0048 FFF7FEFF 		bl	gpib_settle
 193:gpib.c        ****     
 194:gpib.c        ****     // Signal data is valie...
 195:gpib.c        ****     gpib_assert_line(DAV);
 645              		.loc 1 195 0
 646 004c 0520     		movs	r0, #5
 647 004e FFF7FEFF 		bl	gpib_assert_line
 196:gpib.c        ****     
 197:gpib.c        ****     // Wait until everyone has received it...
 198:gpib.c        ****     ok = gpib_wait_for_line_to_unassert(NDAC);
 648              		.loc 1 198 0
 649 0052 0F23     		movs	r3, #15
 650 0054 FC18     		adds	r4, r7, r3
 651 0056 0320     		movs	r0, #3
 652 0058 FFF7FEFF 		bl	gpib_wait_for_line_to_unassert
 653 005c 0300     		movs	r3, r0
 654 005e 2370     		strb	r3, [r4]
 655 0060 00E0     		b	.L50
 656              	.L52:
 186:gpib.c        ****     
ARM GAS  C:\Users\essele\AppData\Local\Temp\ccfSlmaE.s 			page 16


 657              		.loc 1 186 0
 658 0062 C046     		nop
 659              	.L50:
 199:gpib.c        **** 
 200:gpib.c        **** cleanup:    
 201:gpib.c        ****     // Stop transmitting and clear the data
 202:gpib.c        ****     gpib_unassert_line(DAV);
 660              		.loc 1 202 0
 661 0064 0520     		movs	r0, #5
 662 0066 FFF7FEFF 		bl	gpib_unassert_line
 203:gpib.c        ****     (*(reg32 *)DIO__DR) = 0xff;
 663              		.loc 1 203 0
 664 006a 064B     		ldr	r3, .L53
 665 006c FF22     		movs	r2, #255
 666 006e 1A60     		str	r2, [r3]
 204:gpib.c        **** 
 205:gpib.c        ****     // Unassert anyway...
 206:gpib.c        ****     gpib_unassert_line(EOI);
 667              		.loc 1 206 0
 668 0070 0620     		movs	r0, #6
 669 0072 FFF7FEFF 		bl	gpib_unassert_line
 207:gpib.c        ****     
 208:gpib.c        ****     return ok;
 670              		.loc 1 208 0
 671 0076 0F23     		movs	r3, #15
 672 0078 FB18     		adds	r3, r7, r3
 673 007a 1B78     		ldrb	r3, [r3]
 209:gpib.c        ****  }
 674              		.loc 1 209 0
 675 007c 1800     		movs	r0, r3
 676 007e BD46     		mov	sp, r7
 677 0080 05B0     		add	sp, sp, #20
 678              		@ sp needed
 679 0082 90BD     		pop	{r4, r7, pc}
 680              	.L54:
 681              		.align	2
 682              	.L53:
 683 0084 00020440 		.word	1074004480
 684              		.cfi_endproc
 685              	.LFE45:
 686              		.size	gpib_send_byte, .-gpib_send_byte
 687              		.section	.text.gpib_receive_byte,"ax",%progbits
 688              		.align	2
 689              		.global	gpib_receive_byte
 690              		.code	16
 691              		.thumb_func
 692              		.type	gpib_receive_byte, %function
 693              	gpib_receive_byte:
 694              	.LFB46:
 210:gpib.c        **** 
 211:gpib.c        **** /**
 212:gpib.c        ****  * Read a character from the GPIB bus, return 0 if we got a timeout
 213:gpib.c        ****  * or 1 on success.
 214:gpib.c        ****  */
 215:gpib.c        **** int gpib_receive_byte(uint8_t *byte, int *eoi) {
 695              		.loc 1 215 0
 696              		.cfi_startproc
ARM GAS  C:\Users\essele\AppData\Local\Temp\ccfSlmaE.s 			page 17


 697              		@ args = 0, pretend = 0, frame = 16
 698              		@ frame_needed = 1, uses_anonymous_args = 0
 699 0000 80B5     		push	{r7, lr}
 700              		.cfi_def_cfa_offset 8
 701              		.cfi_offset 7, -8
 702              		.cfi_offset 14, -4
 703 0002 84B0     		sub	sp, sp, #16
 704              		.cfi_def_cfa_offset 24
 705 0004 00AF     		add	r7, sp, #0
 706              		.cfi_def_cfa_register 7
 707 0006 7860     		str	r0, [r7, #4]
 708 0008 3960     		str	r1, [r7]
 216:gpib.c        ****     int ok;
 217:gpib.c        ****     
 218:gpib.c        ****     gpib_assert_line(NDAC);
 709              		.loc 1 218 0
 710 000a 0320     		movs	r0, #3
 711 000c FFF7FEFF 		bl	gpib_assert_line
 219:gpib.c        ****     
 220:gpib.c        ****     /*
 221:gpib.c        ****     // Prepare to receive...
 222:gpib.c        ****     gpib_assert_line(NRFD);
 223:gpib.c        ****     
 224:gpib.c        ****     // Why do they unassert ATN if it's set??
 225:gpib.c        ****     */
 226:gpib.c        ****     
 227:gpib.c        ****     // Signal our readiness... (should alreadt be done)
 228:gpib.c        ****     gpib_unassert_line(NRFD);
 712              		.loc 1 228 0
 713 0010 0420     		movs	r0, #4
 714 0012 FFF7FEFF 		bl	gpib_unassert_line
 229:gpib.c        ****     
 230:gpib.c        ****     
 231:gpib.c        ****     // Wait for data to be available...
 232:gpib.c        ****     ok = gpib_wait_for_line_to_assert(DAV);
 715              		.loc 1 232 0
 716 0016 0520     		movs	r0, #5
 717 0018 FFF7FEFF 		bl	gpib_wait_for_line_to_assert
 718 001c 0300     		movs	r3, r0
 719 001e FB60     		str	r3, [r7, #12]
 233:gpib.c        ****     if (!ok) {
 720              		.loc 1 233 0
 721 0020 FB68     		ldr	r3, [r7, #12]
 722 0022 002B     		cmp	r3, #0
 723 0024 07D1     		bne	.L56
 234:gpib.c        ****         gpib_unassert_line(NRFD);
 724              		.loc 1 234 0
 725 0026 0420     		movs	r0, #4
 726 0028 FFF7FEFF 		bl	gpib_unassert_line
 235:gpib.c        ****         gpib_unassert_line(NDAC);
 727              		.loc 1 235 0
 728 002c 0320     		movs	r0, #3
 729 002e FFF7FEFF 		bl	gpib_unassert_line
 236:gpib.c        ****         return 0;
 730              		.loc 1 236 0
 731 0032 0023     		movs	r3, #0
 732 0034 26E0     		b	.L57
ARM GAS  C:\Users\essele\AppData\Local\Temp\ccfSlmaE.s 			page 18


 733              	.L56:
 237:gpib.c        ****     }
 238:gpib.c        ****     // Not ready for more data at this point
 239:gpib.c        ****     gpib_assert_line(NRFD);
 734              		.loc 1 239 0
 735 0036 0420     		movs	r0, #4
 736 0038 FFF7FEFF 		bl	gpib_assert_line
 240:gpib.c        ****     
 241:gpib.c        ****     // Read the data...
 242:gpib.c        ****     *byte = ~(*(reg32 *)DIO__PS);
 737              		.loc 1 242 0
 738 003c 134B     		ldr	r3, .L59
 739 003e 1B68     		ldr	r3, [r3]
 740 0040 DBB2     		uxtb	r3, r3
 741 0042 DB43     		mvns	r3, r3
 742 0044 DAB2     		uxtb	r2, r3
 743 0046 7B68     		ldr	r3, [r7, #4]
 744 0048 1A70     		strb	r2, [r3]
 243:gpib.c        ****     *eoi = gpib_read_line(EOI);
 745              		.loc 1 243 0
 746 004a 0620     		movs	r0, #6
 747 004c FFF7FEFF 		bl	gpib_read_line
 748 0050 0300     		movs	r3, r0
 749 0052 1A00     		movs	r2, r3
 750 0054 3B68     		ldr	r3, [r7]
 751 0056 1A60     		str	r2, [r3]
 244:gpib.c        ****     
 245:gpib.c        ****     // If byte is NL (10 decimal) then it's the same as EOI
 246:gpib.c        ****     if (*byte == 10) {
 752              		.loc 1 246 0
 753 0058 7B68     		ldr	r3, [r7, #4]
 754 005a 1B78     		ldrb	r3, [r3]
 755 005c 0A2B     		cmp	r3, #10
 756 005e 02D1     		bne	.L58
 247:gpib.c        ****         *eoi = true;    // TODO
 757              		.loc 1 247 0
 758 0060 3B68     		ldr	r3, [r7]
 759 0062 0122     		movs	r2, #1
 760 0064 1A60     		str	r2, [r3]
 761              	.L58:
 248:gpib.c        ****     }
 249:gpib.c        ****     
 250:gpib.c        ****     
 251:gpib.c        ****     // We've read it...
 252:gpib.c        ****     gpib_unassert_line(NDAC);
 762              		.loc 1 252 0
 763 0066 0320     		movs	r0, #3
 764 0068 FFF7FEFF 		bl	gpib_unassert_line
 253:gpib.c        ****  //   gpib_settle();                  // why would we do this?
 254:gpib.c        ****     
 255:gpib.c        ****     // Wait for the talker to finish this byte
 256:gpib.c        ****     ok = gpib_wait_for_line_to_unassert(DAV);    
 765              		.loc 1 256 0
 766 006c 0520     		movs	r0, #5
 767 006e FFF7FEFF 		bl	gpib_wait_for_line_to_unassert
 768 0072 0300     		movs	r3, r0
 769 0074 FB60     		str	r3, [r7, #12]
ARM GAS  C:\Users\essele\AppData\Local\Temp\ccfSlmaE.s 			page 19


 257:gpib.c        **** 
 258:gpib.c        **** //cleanup:
 259:gpib.c        ****     gpib_assert_line(NDAC);
 770              		.loc 1 259 0
 771 0076 0320     		movs	r0, #3
 772 0078 FFF7FEFF 		bl	gpib_assert_line
 260:gpib.c        ****     gpib_unassert_line(NRFD);   // we are still ready for data
 773              		.loc 1 260 0
 774 007c 0420     		movs	r0, #4
 775 007e FFF7FEFF 		bl	gpib_unassert_line
 261:gpib.c        ****  
 262:gpib.c        ****     //gpib_settle();
 263:gpib.c        ****     
 264:gpib.c        ****     return ok;
 776              		.loc 1 264 0
 777 0082 FB68     		ldr	r3, [r7, #12]
 778              	.L57:
 265:gpib.c        **** }
 779              		.loc 1 265 0
 780 0084 1800     		movs	r0, r3
 781 0086 BD46     		mov	sp, r7
 782 0088 04B0     		add	sp, sp, #16
 783              		@ sp needed
 784 008a 80BD     		pop	{r7, pc}
 785              	.L60:
 786              		.align	2
 787              	.L59:
 788 008c 04020440 		.word	1074004484
 789              		.cfi_endproc
 790              	.LFE46:
 791              		.size	gpib_receive_byte, .-gpib_receive_byte
 792              		.section	.text.gpib_interface_clear,"ax",%progbits
 793              		.align	2
 794              		.global	gpib_interface_clear
 795              		.code	16
 796              		.thumb_func
 797              		.type	gpib_interface_clear, %function
 798              	gpib_interface_clear:
 799              	.LFB47:
 266:gpib.c        **** 
 267:gpib.c        **** void gpib_interface_clear() {
 800              		.loc 1 267 0
 801              		.cfi_startproc
 802              		@ args = 0, pretend = 0, frame = 0
 803              		@ frame_needed = 1, uses_anonymous_args = 0
 804 0000 80B5     		push	{r7, lr}
 805              		.cfi_def_cfa_offset 8
 806              		.cfi_offset 7, -8
 807              		.cfi_offset 14, -4
 808 0002 00AF     		add	r7, sp, #0
 809              		.cfi_def_cfa_register 7
 268:gpib.c        ****     gpib_assert_line(IFC);
 810              		.loc 1 268 0
 811 0004 0220     		movs	r0, #2
 812 0006 FFF7FEFF 		bl	gpib_assert_line
 269:gpib.c        ****     CyDelayUs(150);
 813              		.loc 1 269 0
ARM GAS  C:\Users\essele\AppData\Local\Temp\ccfSlmaE.s 			page 20


 814 000a 9620     		movs	r0, #150
 815 000c FFF7FEFF 		bl	CyDelayUs
 270:gpib.c        ****     gpib_unassert_line(IFC);
 816              		.loc 1 270 0
 817 0010 0220     		movs	r0, #2
 818 0012 FFF7FEFF 		bl	gpib_unassert_line
 271:gpib.c        ****     CyDelayUs(150);                 // do we need to delay afterwards?
 819              		.loc 1 271 0
 820 0016 9620     		movs	r0, #150
 821 0018 FFF7FEFF 		bl	CyDelayUs
 272:gpib.c        **** }
 822              		.loc 1 272 0
 823 001c C046     		nop
 824 001e BD46     		mov	sp, r7
 825              		@ sp needed
 826 0020 80BD     		pop	{r7, pc}
 827              		.cfi_endproc
 828              	.LFE47:
 829              		.size	gpib_interface_clear, .-gpib_interface_clear
 830 0022 C046     		.section	.text.gpib_LAD,"ax",%progbits
 831              		.align	2
 832              		.global	gpib_LAD
 833              		.code	16
 834              		.thumb_func
 835              		.type	gpib_LAD, %function
 836              	gpib_LAD:
 837              	.LFB48:
 273:gpib.c        **** 
 274:gpib.c        **** void gpib_LAD(uint8_t address) {
 838              		.loc 1 274 0
 839              		.cfi_startproc
 840              		@ args = 0, pretend = 0, frame = 8
 841              		@ frame_needed = 1, uses_anonymous_args = 0
 842 0000 80B5     		push	{r7, lr}
 843              		.cfi_def_cfa_offset 8
 844              		.cfi_offset 7, -8
 845              		.cfi_offset 14, -4
 846 0002 82B0     		sub	sp, sp, #8
 847              		.cfi_def_cfa_offset 16
 848 0004 00AF     		add	r7, sp, #0
 849              		.cfi_def_cfa_register 7
 850 0006 0200     		movs	r2, r0
 851 0008 FB1D     		adds	r3, r7, #7
 852 000a 1A70     		strb	r2, [r3]
 275:gpib.c        ****     gpib_send_byte(0x20 + address, false);
 853              		.loc 1 275 0
 854 000c FB1D     		adds	r3, r7, #7
 855 000e 1B78     		ldrb	r3, [r3]
 856 0010 2033     		adds	r3, r3, #32
 857 0012 DBB2     		uxtb	r3, r3
 858 0014 0021     		movs	r1, #0
 859 0016 1800     		movs	r0, r3
 860 0018 FFF7FEFF 		bl	gpib_send_byte
 276:gpib.c        **** }
 861              		.loc 1 276 0
 862 001c C046     		nop
 863 001e BD46     		mov	sp, r7
ARM GAS  C:\Users\essele\AppData\Local\Temp\ccfSlmaE.s 			page 21


 864 0020 02B0     		add	sp, sp, #8
 865              		@ sp needed
 866 0022 80BD     		pop	{r7, pc}
 867              		.cfi_endproc
 868              	.LFE48:
 869              		.size	gpib_LAD, .-gpib_LAD
 870              		.section	.text.gpib_TAD,"ax",%progbits
 871              		.align	2
 872              		.global	gpib_TAD
 873              		.code	16
 874              		.thumb_func
 875              		.type	gpib_TAD, %function
 876              	gpib_TAD:
 877              	.LFB49:
 277:gpib.c        **** 
 278:gpib.c        **** void gpib_TAD(uint8_t address) {
 878              		.loc 1 278 0
 879              		.cfi_startproc
 880              		@ args = 0, pretend = 0, frame = 8
 881              		@ frame_needed = 1, uses_anonymous_args = 0
 882 0000 80B5     		push	{r7, lr}
 883              		.cfi_def_cfa_offset 8
 884              		.cfi_offset 7, -8
 885              		.cfi_offset 14, -4
 886 0002 82B0     		sub	sp, sp, #8
 887              		.cfi_def_cfa_offset 16
 888 0004 00AF     		add	r7, sp, #0
 889              		.cfi_def_cfa_register 7
 890 0006 0200     		movs	r2, r0
 891 0008 FB1D     		adds	r3, r7, #7
 892 000a 1A70     		strb	r2, [r3]
 279:gpib.c        ****     gpib_send_byte(0x40 + address, false);
 893              		.loc 1 279 0
 894 000c FB1D     		adds	r3, r7, #7
 895 000e 1B78     		ldrb	r3, [r3]
 896 0010 4033     		adds	r3, r3, #64
 897 0012 DBB2     		uxtb	r3, r3
 898 0014 0021     		movs	r1, #0
 899 0016 1800     		movs	r0, r3
 900 0018 FFF7FEFF 		bl	gpib_send_byte
 280:gpib.c        **** }
 901              		.loc 1 280 0
 902 001c C046     		nop
 903 001e BD46     		mov	sp, r7
 904 0020 02B0     		add	sp, sp, #8
 905              		@ sp needed
 906 0022 80BD     		pop	{r7, pc}
 907              		.cfi_endproc
 908              	.LFE49:
 909              		.size	gpib_TAD, .-gpib_TAD
 910              		.section	.text.gpib_UNL,"ax",%progbits
 911              		.align	2
 912              		.global	gpib_UNL
 913              		.code	16
 914              		.thumb_func
 915              		.type	gpib_UNL, %function
 916              	gpib_UNL:
ARM GAS  C:\Users\essele\AppData\Local\Temp\ccfSlmaE.s 			page 22


 917              	.LFB50:
 281:gpib.c        **** 
 282:gpib.c        **** void gpib_UNL() {
 918              		.loc 1 282 0
 919              		.cfi_startproc
 920              		@ args = 0, pretend = 0, frame = 0
 921              		@ frame_needed = 1, uses_anonymous_args = 0
 922 0000 80B5     		push	{r7, lr}
 923              		.cfi_def_cfa_offset 8
 924              		.cfi_offset 7, -8
 925              		.cfi_offset 14, -4
 926 0002 00AF     		add	r7, sp, #0
 927              		.cfi_def_cfa_register 7
 283:gpib.c        ****     gpib_LAD(31);
 928              		.loc 1 283 0
 929 0004 1F20     		movs	r0, #31
 930 0006 FFF7FEFF 		bl	gpib_LAD
 284:gpib.c        **** }
 931              		.loc 1 284 0
 932 000a C046     		nop
 933 000c BD46     		mov	sp, r7
 934              		@ sp needed
 935 000e 80BD     		pop	{r7, pc}
 936              		.cfi_endproc
 937              	.LFE50:
 938              		.size	gpib_UNL, .-gpib_UNL
 939              		.section	.text.gpib_UNT,"ax",%progbits
 940              		.align	2
 941              		.global	gpib_UNT
 942              		.code	16
 943              		.thumb_func
 944              		.type	gpib_UNT, %function
 945              	gpib_UNT:
 946              	.LFB51:
 285:gpib.c        **** 
 286:gpib.c        **** void gpib_UNT() {
 947              		.loc 1 286 0
 948              		.cfi_startproc
 949              		@ args = 0, pretend = 0, frame = 0
 950              		@ frame_needed = 1, uses_anonymous_args = 0
 951 0000 80B5     		push	{r7, lr}
 952              		.cfi_def_cfa_offset 8
 953              		.cfi_offset 7, -8
 954              		.cfi_offset 14, -4
 955 0002 00AF     		add	r7, sp, #0
 956              		.cfi_def_cfa_register 7
 287:gpib.c        ****     gpib_TAD(31);
 957              		.loc 1 287 0
 958 0004 1F20     		movs	r0, #31
 959 0006 FFF7FEFF 		bl	gpib_TAD
 288:gpib.c        **** }
 960              		.loc 1 288 0
 961 000a C046     		nop
 962 000c BD46     		mov	sp, r7
 963              		@ sp needed
 964 000e 80BD     		pop	{r7, pc}
 965              		.cfi_endproc
ARM GAS  C:\Users\essele\AppData\Local\Temp\ccfSlmaE.s 			page 23


 966              	.LFE51:
 967              		.size	gpib_UNT, .-gpib_UNT
 968              		.section	.text.gpib_send_SDC,"ax",%progbits
 969              		.align	2
 970              		.global	gpib_send_SDC
 971              		.code	16
 972              		.thumb_func
 973              		.type	gpib_send_SDC, %function
 974              	gpib_send_SDC:
 975              	.LFB52:
 289:gpib.c        **** 
 290:gpib.c        **** // TODO: this all needs to be tidied and parameterised ... horrible!
 291:gpib.c        **** void gpib_send_SDC() {
 976              		.loc 1 291 0
 977              		.cfi_startproc
 978              		@ args = 0, pretend = 0, frame = 0
 979              		@ frame_needed = 1, uses_anonymous_args = 0
 980 0000 80B5     		push	{r7, lr}
 981              		.cfi_def_cfa_offset 8
 982              		.cfi_offset 7, -8
 983              		.cfi_offset 14, -4
 984 0002 00AF     		add	r7, sp, #0
 985              		.cfi_def_cfa_register 7
 292:gpib.c        ****     gpib_assert_line(ATN);
 986              		.loc 1 292 0
 987 0004 0020     		movs	r0, #0
 988 0006 FFF7FEFF 		bl	gpib_assert_line
 293:gpib.c        ****     gpib_settle();                  // do we need this?
 989              		.loc 1 293 0
 990 000a FFF7FEFF 		bl	gpib_settle
 294:gpib.c        ****     gpib_send_byte(0x04, false);
 991              		.loc 1 294 0
 992 000e 0021     		movs	r1, #0
 993 0010 0420     		movs	r0, #4
 994 0012 FFF7FEFF 		bl	gpib_send_byte
 295:gpib.c        ****     gpib_unassert_line(ATN);
 995              		.loc 1 295 0
 996 0016 0020     		movs	r0, #0
 997 0018 FFF7FEFF 		bl	gpib_unassert_line
 296:gpib.c        ****     gpib_settle();                  // do we need this?
 998              		.loc 1 296 0
 999 001c FFF7FEFF 		bl	gpib_settle
 297:gpib.c        **** }
 1000              		.loc 1 297 0
 1001 0020 C046     		nop
 1002 0022 BD46     		mov	sp, r7
 1003              		@ sp needed
 1004 0024 80BD     		pop	{r7, pc}
 1005              		.cfi_endproc
 1006              	.LFE52:
 1007              		.size	gpib_send_SDC, .-gpib_send_SDC
 1008 0026 C046     		.section	.text.gpib_send_LLO,"ax",%progbits
 1009              		.align	2
 1010              		.global	gpib_send_LLO
 1011              		.code	16
 1012              		.thumb_func
 1013              		.type	gpib_send_LLO, %function
ARM GAS  C:\Users\essele\AppData\Local\Temp\ccfSlmaE.s 			page 24


 1014              	gpib_send_LLO:
 1015              	.LFB53:
 298:gpib.c        **** void gpib_send_LLO() {
 1016              		.loc 1 298 0
 1017              		.cfi_startproc
 1018              		@ args = 0, pretend = 0, frame = 0
 1019              		@ frame_needed = 1, uses_anonymous_args = 0
 1020 0000 80B5     		push	{r7, lr}
 1021              		.cfi_def_cfa_offset 8
 1022              		.cfi_offset 7, -8
 1023              		.cfi_offset 14, -4
 1024 0002 00AF     		add	r7, sp, #0
 1025              		.cfi_def_cfa_register 7
 299:gpib.c        ****     gpib_assert_line(ATN);
 1026              		.loc 1 299 0
 1027 0004 0020     		movs	r0, #0
 1028 0006 FFF7FEFF 		bl	gpib_assert_line
 300:gpib.c        ****     gpib_settle();                  // do we need this?
 1029              		.loc 1 300 0
 1030 000a FFF7FEFF 		bl	gpib_settle
 301:gpib.c        ****     gpib_send_byte(0x11, false);
 1031              		.loc 1 301 0
 1032 000e 0021     		movs	r1, #0
 1033 0010 1120     		movs	r0, #17
 1034 0012 FFF7FEFF 		bl	gpib_send_byte
 302:gpib.c        ****     gpib_unassert_line(ATN);
 1035              		.loc 1 302 0
 1036 0016 0020     		movs	r0, #0
 1037 0018 FFF7FEFF 		bl	gpib_unassert_line
 303:gpib.c        ****     gpib_settle();                  // do we need this?
 1038              		.loc 1 303 0
 1039 001c FFF7FEFF 		bl	gpib_settle
 304:gpib.c        **** }
 1040              		.loc 1 304 0
 1041 0020 C046     		nop
 1042 0022 BD46     		mov	sp, r7
 1043              		@ sp needed
 1044 0024 80BD     		pop	{r7, pc}
 1045              		.cfi_endproc
 1046              	.LFE53:
 1047              		.size	gpib_send_LLO, .-gpib_send_LLO
 1048 0026 C046     		.section	.text.gpib_send_GTL,"ax",%progbits
 1049              		.align	2
 1050              		.global	gpib_send_GTL
 1051              		.code	16
 1052              		.thumb_func
 1053              		.type	gpib_send_GTL, %function
 1054              	gpib_send_GTL:
 1055              	.LFB54:
 305:gpib.c        **** // need REN unasserted for this one...
 306:gpib.c        **** void gpib_send_GTL() {
 1056              		.loc 1 306 0
 1057              		.cfi_startproc
 1058              		@ args = 0, pretend = 0, frame = 0
 1059              		@ frame_needed = 1, uses_anonymous_args = 0
 1060 0000 80B5     		push	{r7, lr}
 1061              		.cfi_def_cfa_offset 8
ARM GAS  C:\Users\essele\AppData\Local\Temp\ccfSlmaE.s 			page 25


 1062              		.cfi_offset 7, -8
 1063              		.cfi_offset 14, -4
 1064 0002 00AF     		add	r7, sp, #0
 1065              		.cfi_def_cfa_register 7
 307:gpib.c        ****     gpib_unassert_line(REN);
 1066              		.loc 1 307 0
 1067 0004 0720     		movs	r0, #7
 1068 0006 FFF7FEFF 		bl	gpib_unassert_line
 308:gpib.c        ****     gpib_assert_line(ATN);
 1069              		.loc 1 308 0
 1070 000a 0020     		movs	r0, #0
 1071 000c FFF7FEFF 		bl	gpib_assert_line
 309:gpib.c        ****     gpib_settle();                  // do we need this?
 1072              		.loc 1 309 0
 1073 0010 FFF7FEFF 		bl	gpib_settle
 310:gpib.c        ****     gpib_send_byte(0x01, false);
 1074              		.loc 1 310 0
 1075 0014 0021     		movs	r1, #0
 1076 0016 0120     		movs	r0, #1
 1077 0018 FFF7FEFF 		bl	gpib_send_byte
 311:gpib.c        ****     gpib_unassert_line(ATN);
 1078              		.loc 1 311 0
 1079 001c 0020     		movs	r0, #0
 1080 001e FFF7FEFF 		bl	gpib_unassert_line
 312:gpib.c        ****     gpib_settle();                  // do we need this?
 1081              		.loc 1 312 0
 1082 0022 FFF7FEFF 		bl	gpib_settle
 313:gpib.c        **** }
 1083              		.loc 1 313 0
 1084 0026 C046     		nop
 1085 0028 BD46     		mov	sp, r7
 1086              		@ sp needed
 1087 002a 80BD     		pop	{r7, pc}
 1088              		.cfi_endproc
 1089              	.LFE54:
 1090              		.size	gpib_send_GTL, .-gpib_send_GTL
 1091              		.section	.text.gpib_address_listener,"ax",%progbits
 1092              		.align	2
 1093              		.global	gpib_address_listener
 1094              		.code	16
 1095              		.thumb_func
 1096              		.type	gpib_address_listener, %function
 1097              	gpib_address_listener:
 1098              	.LFB55:
 314:gpib.c        **** 
 315:gpib.c        **** void gpib_address_listener(uint8_t address) {
 1099              		.loc 1 315 0
 1100              		.cfi_startproc
 1101              		@ args = 0, pretend = 0, frame = 8
 1102              		@ frame_needed = 1, uses_anonymous_args = 0
 1103 0000 80B5     		push	{r7, lr}
 1104              		.cfi_def_cfa_offset 8
 1105              		.cfi_offset 7, -8
 1106              		.cfi_offset 14, -4
 1107 0002 82B0     		sub	sp, sp, #8
 1108              		.cfi_def_cfa_offset 16
 1109 0004 00AF     		add	r7, sp, #0
ARM GAS  C:\Users\essele\AppData\Local\Temp\ccfSlmaE.s 			page 26


 1110              		.cfi_def_cfa_register 7
 1111 0006 0200     		movs	r2, r0
 1112 0008 FB1D     		adds	r3, r7, #7
 1113 000a 1A70     		strb	r2, [r3]
 316:gpib.c        ****     // Need to enable "REMOTE" so devices will enter remote mode
 317:gpib.c        ****     // TODO: this should probably be an option??
 318:gpib.c        ****     // TODO: do we need to undo this for a talker??
 319:gpib.c        ****     
 320:gpib.c        ****     gpib_unassert_line(NRFD);
 1114              		.loc 1 320 0
 1115 000c 0420     		movs	r0, #4
 1116 000e FFF7FEFF 		bl	gpib_unassert_line
 321:gpib.c        ****     gpib_unassert_line(NDAC);
 1117              		.loc 1 321 0
 1118 0012 0320     		movs	r0, #3
 1119 0014 FFF7FEFF 		bl	gpib_unassert_line
 322:gpib.c        ****     
 323:gpib.c        ****     gpib_assert_line(REN);
 1120              		.loc 1 323 0
 1121 0018 0720     		movs	r0, #7
 1122 001a FFF7FEFF 		bl	gpib_assert_line
 324:gpib.c        ****     gpib_settle();                  // do we need this?
 1123              		.loc 1 324 0
 1124 001e FFF7FEFF 		bl	gpib_settle
 325:gpib.c        **** 
 326:gpib.c        ****     gpib_assert_line(ATN);
 1125              		.loc 1 326 0
 1126 0022 0020     		movs	r0, #0
 1127 0024 FFF7FEFF 		bl	gpib_assert_line
 327:gpib.c        ****     gpib_settle();                  // do we need this?
 1128              		.loc 1 327 0
 1129 0028 FFF7FEFF 		bl	gpib_settle
 328:gpib.c        ****     
 329:gpib.c        ****     gpib_UNL();     // stop everyone listening
 1130              		.loc 1 329 0
 1131 002c FFF7FEFF 		bl	gpib_UNL
 330:gpib.c        ****     gpib_UNT();     // stop everyone talking
 1132              		.loc 1 330 0
 1133 0030 FFF7FEFF 		bl	gpib_UNT
 331:gpib.c        ****     gpib_LAD(address);
 1134              		.loc 1 331 0
 1135 0034 FB1D     		adds	r3, r7, #7
 1136 0036 1B78     		ldrb	r3, [r3]
 1137 0038 1800     		movs	r0, r3
 1138 003a FFF7FEFF 		bl	gpib_LAD
 332:gpib.c        ****     gpib_TAD(my_address);
 1139              		.loc 1 332 0
 1140 003e 074B     		ldr	r3, .L70
 1141 0040 1B78     		ldrb	r3, [r3]
 1142 0042 1800     		movs	r0, r3
 1143 0044 FFF7FEFF 		bl	gpib_TAD
 333:gpib.c        ****     
 334:gpib.c        ****     gpib_unassert_line(ATN);
 1144              		.loc 1 334 0
 1145 0048 0020     		movs	r0, #0
 1146 004a FFF7FEFF 		bl	gpib_unassert_line
 335:gpib.c        ****     gpib_settle();              // do we need this?
ARM GAS  C:\Users\essele\AppData\Local\Temp\ccfSlmaE.s 			page 27


 1147              		.loc 1 335 0
 1148 004e FFF7FEFF 		bl	gpib_settle
 336:gpib.c        **** }
 1149              		.loc 1 336 0
 1150 0052 C046     		nop
 1151 0054 BD46     		mov	sp, r7
 1152 0056 02B0     		add	sp, sp, #8
 1153              		@ sp needed
 1154 0058 80BD     		pop	{r7, pc}
 1155              	.L71:
 1156 005a C046     		.align	2
 1157              	.L70:
 1158 005c 00000000 		.word	my_address
 1159              		.cfi_endproc
 1160              	.LFE55:
 1161              		.size	gpib_address_listener, .-gpib_address_listener
 1162              		.section	.text.gpib_address_talker,"ax",%progbits
 1163              		.align	2
 1164              		.global	gpib_address_talker
 1165              		.code	16
 1166              		.thumb_func
 1167              		.type	gpib_address_talker, %function
 1168              	gpib_address_talker:
 1169              	.LFB56:
 337:gpib.c        **** 
 338:gpib.c        **** void gpib_address_talker(uint8_t address) {
 1170              		.loc 1 338 0
 1171              		.cfi_startproc
 1172              		@ args = 0, pretend = 0, frame = 8
 1173              		@ frame_needed = 1, uses_anonymous_args = 0
 1174 0000 80B5     		push	{r7, lr}
 1175              		.cfi_def_cfa_offset 8
 1176              		.cfi_offset 7, -8
 1177              		.cfi_offset 14, -4
 1178 0002 82B0     		sub	sp, sp, #8
 1179              		.cfi_def_cfa_offset 16
 1180 0004 00AF     		add	r7, sp, #0
 1181              		.cfi_def_cfa_register 7
 1182 0006 0200     		movs	r2, r0
 1183 0008 FB1D     		adds	r3, r7, #7
 1184 000a 1A70     		strb	r2, [r3]
 339:gpib.c        ****     // Make sure we are not asserting any handshake stuff...
 340:gpib.c        ****     gpib_unassert_line(NRFD);
 1185              		.loc 1 340 0
 1186 000c 0420     		movs	r0, #4
 1187 000e FFF7FEFF 		bl	gpib_unassert_line
 341:gpib.c        ****     gpib_unassert_line(NDAC);
 1188              		.loc 1 341 0
 1189 0012 0320     		movs	r0, #3
 1190 0014 FFF7FEFF 		bl	gpib_unassert_line
 342:gpib.c        ****  
 343:gpib.c        ****     // 
 344:gpib.c        ****     gpib_assert_line(ATN);
 1191              		.loc 1 344 0
 1192 0018 0020     		movs	r0, #0
 1193 001a FFF7FEFF 		bl	gpib_assert_line
 345:gpib.c        ****     gpib_settle();                  // do we need this?
ARM GAS  C:\Users\essele\AppData\Local\Temp\ccfSlmaE.s 			page 28


 1194              		.loc 1 345 0
 1195 001e FFF7FEFF 		bl	gpib_settle
 346:gpib.c        ****     
 347:gpib.c        ****     gpib_UNL();     // stop everyone listening
 1196              		.loc 1 347 0
 1197 0022 FFF7FEFF 		bl	gpib_UNL
 348:gpib.c        ****     gpib_UNT();     // stop everyone talking
 1198              		.loc 1 348 0
 1199 0026 FFF7FEFF 		bl	gpib_UNT
 349:gpib.c        ****     gpib_LAD(my_address);
 1200              		.loc 1 349 0
 1201 002a 0E4B     		ldr	r3, .L73
 1202 002c 1B78     		ldrb	r3, [r3]
 1203 002e 1800     		movs	r0, r3
 1204 0030 FFF7FEFF 		bl	gpib_LAD
 350:gpib.c        ****     gpib_TAD(address);
 1205              		.loc 1 350 0
 1206 0034 FB1D     		adds	r3, r7, #7
 1207 0036 1B78     		ldrb	r3, [r3]
 1208 0038 1800     		movs	r0, r3
 1209 003a FFF7FEFF 		bl	gpib_TAD
 351:gpib.c        ****     
 352:gpib.c        ****     gpib_unassert_line(ATN);
 1210              		.loc 1 352 0
 1211 003e 0020     		movs	r0, #0
 1212 0040 FFF7FEFF 		bl	gpib_unassert_line
 353:gpib.c        ****     gpib_settle();              // do we need this?
 1213              		.loc 1 353 0
 1214 0044 FFF7FEFF 		bl	gpib_settle
 354:gpib.c        ****     
 355:gpib.c        ****     // Prepare to receive... should NDAC be earlier to avoid both high errors
 356:gpib.c        ****     gpib_assert_line(NRFD);
 1215              		.loc 1 356 0
 1216 0048 0420     		movs	r0, #4
 1217 004a FFF7FEFF 		bl	gpib_assert_line
 357:gpib.c        ****     gpib_assert_line(NDAC);
 1218              		.loc 1 357 0
 1219 004e 0320     		movs	r0, #3
 1220 0050 FFF7FEFF 		bl	gpib_assert_line
 358:gpib.c        ****     
 359:gpib.c        ****     // Signal our readiness...
 360:gpib.c        ****     gpib_unassert_line(NRFD);
 1221              		.loc 1 360 0
 1222 0054 0420     		movs	r0, #4
 1223 0056 FFF7FEFF 		bl	gpib_unassert_line
 361:gpib.c        **** }
 1224              		.loc 1 361 0
 1225 005a C046     		nop
 1226 005c BD46     		mov	sp, r7
 1227 005e 02B0     		add	sp, sp, #8
 1228              		@ sp needed
 1229 0060 80BD     		pop	{r7, pc}
 1230              	.L74:
 1231 0062 C046     		.align	2
 1232              	.L73:
 1233 0064 00000000 		.word	my_address
 1234              		.cfi_endproc
ARM GAS  C:\Users\essele\AppData\Local\Temp\ccfSlmaE.s 			page 29


 1235              	.LFE56:
 1236              		.size	gpib_address_talker, .-gpib_address_talker
 1237              		.section	.text.gpib_talking,"ax",%progbits
 1238              		.align	2
 1239              		.global	gpib_talking
 1240              		.code	16
 1241              		.thumb_func
 1242              		.type	gpib_talking, %function
 1243              	gpib_talking:
 1244              	.LFB57:
 362:gpib.c        **** 
 363:gpib.c        **** /**
 364:gpib.c        ****  * See if the talker has put some data on the bus...
 365:gpib.c        ****  */
 366:gpib.c        **** // TODO: get rid of bool
 367:gpib.c        **** bool gpib_talking() {
 1245              		.loc 1 367 0
 1246              		.cfi_startproc
 1247              		@ args = 0, pretend = 0, frame = 0
 1248              		@ frame_needed = 1, uses_anonymous_args = 0
 1249 0000 80B5     		push	{r7, lr}
 1250              		.cfi_def_cfa_offset 8
 1251              		.cfi_offset 7, -8
 1252              		.cfi_offset 14, -4
 1253 0002 00AF     		add	r7, sp, #0
 1254              		.cfi_def_cfa_register 7
 368:gpib.c        ****     return gpib_read_line(DAV);
 1255              		.loc 1 368 0
 1256 0004 0520     		movs	r0, #5
 1257 0006 FFF7FEFF 		bl	gpib_read_line
 1258 000a 0300     		movs	r3, r0
 369:gpib.c        **** }
 1259              		.loc 1 369 0
 1260 000c 1800     		movs	r0, r3
 1261 000e BD46     		mov	sp, r7
 1262              		@ sp needed
 1263 0010 80BD     		pop	{r7, pc}
 1264              		.cfi_endproc
 1265              	.LFE57:
 1266              		.size	gpib_talking, .-gpib_talking
 1267 0012 C046     		.section	.text.gpib_send,"ax",%progbits
 1268              		.align	2
 1269              		.global	gpib_send
 1270              		.code	16
 1271              		.thumb_func
 1272              		.type	gpib_send, %function
 1273              	gpib_send:
 1274              	.LFB58:
 370:gpib.c        **** 
 371:gpib.c        **** /**
 372:gpib.c        ****  * Send a buffer over the GPIB interface, do the right thing with EO
 373:gpib.c        ****  * unless we have it disabled.
 374:gpib.c        ****  */
 375:gpib.c        **** // TODO: error checking and return
 376:gpib.c        **** // TODO: should separate the address listener and the send, so we can send
 377:gpib.c        **** //       multiple chunks??
 378:gpib.c        **** void gpib_send(uint8_t address, const uint8_t *buf, int len) {
ARM GAS  C:\Users\essele\AppData\Local\Temp\ccfSlmaE.s 			page 30


 1275              		.loc 1 378 0
 1276              		.cfi_startproc
 1277              		@ args = 0, pretend = 0, frame = 32
 1278              		@ frame_needed = 1, uses_anonymous_args = 0
 1279 0000 80B5     		push	{r7, lr}
 1280              		.cfi_def_cfa_offset 8
 1281              		.cfi_offset 7, -8
 1282              		.cfi_offset 14, -4
 1283 0002 88B0     		sub	sp, sp, #32
 1284              		.cfi_def_cfa_offset 40
 1285 0004 00AF     		add	r7, sp, #0
 1286              		.cfi_def_cfa_register 7
 1287 0006 B960     		str	r1, [r7, #8]
 1288 0008 7A60     		str	r2, [r7, #4]
 1289 000a 0F23     		movs	r3, #15
 1290 000c FB18     		adds	r3, r7, r3
 1291 000e 021C     		adds	r2, r0, #0
 1292 0010 1A70     		strb	r2, [r3]
 379:gpib.c        ****     char *p = (char *)buf;
 1293              		.loc 1 379 0
 1294 0012 BB68     		ldr	r3, [r7, #8]
 1295 0014 BB61     		str	r3, [r7, #24]
 380:gpib.c        ****     
 381:gpib.c        ****     int eoipos = (settings.eoi ? len-1 : -1);
 1296              		.loc 1 381 0
 1297 0016 154B     		ldr	r3, .L82
 1298 0018 5B89     		ldrh	r3, [r3, #10]
 1299 001a 002B     		cmp	r3, #0
 1300 001c 02D0     		beq	.L78
 1301              		.loc 1 381 0 is_stmt 0 discriminator 1
 1302 001e 7B68     		ldr	r3, [r7, #4]
 1303 0020 013B     		subs	r3, r3, #1
 1304 0022 01E0     		b	.L79
 1305              	.L78:
 1306              		.loc 1 381 0 discriminator 2
 1307 0024 0123     		movs	r3, #1
 1308 0026 5B42     		rsbs	r3, r3, #0
 1309              	.L79:
 1310              		.loc 1 381 0 discriminator 4
 1311 0028 7B61     		str	r3, [r7, #20]
 382:gpib.c        ****     
 383:gpib.c        ****     gpib_address_listener(address);
 1312              		.loc 1 383 0 is_stmt 1 discriminator 4
 1313 002a 0F23     		movs	r3, #15
 1314 002c FB18     		adds	r3, r7, r3
 1315 002e 1B78     		ldrb	r3, [r3]
 1316 0030 1800     		movs	r0, r3
 1317 0032 FFF7FEFF 		bl	gpib_address_listener
 1318              	.LBB2:
 384:gpib.c        ****     
 385:gpib.c        ****     for (int i=0; i < len; i++) {
 1319              		.loc 1 385 0 discriminator 4
 1320 0036 0023     		movs	r3, #0
 1321 0038 FB61     		str	r3, [r7, #28]
 1322 003a 0FE0     		b	.L80
 1323              	.L81:
 386:gpib.c        ****         gpib_send_byte(buf[i], (i == eoipos));
ARM GAS  C:\Users\essele\AppData\Local\Temp\ccfSlmaE.s 			page 31


 1324              		.loc 1 386 0 discriminator 3
 1325 003c FB69     		ldr	r3, [r7, #28]
 1326 003e BA68     		ldr	r2, [r7, #8]
 1327 0040 D318     		adds	r3, r2, r3
 1328 0042 1878     		ldrb	r0, [r3]
 1329 0044 FA69     		ldr	r2, [r7, #28]
 1330 0046 7B69     		ldr	r3, [r7, #20]
 1331 0048 D31A     		subs	r3, r2, r3
 1332 004a 5A42     		rsbs	r2, r3, #0
 1333 004c 5341     		adcs	r3, r3, r2
 1334 004e DBB2     		uxtb	r3, r3
 1335 0050 1900     		movs	r1, r3
 1336 0052 FFF7FEFF 		bl	gpib_send_byte
 385:gpib.c        ****         gpib_send_byte(buf[i], (i == eoipos));
 1337              		.loc 1 385 0 discriminator 3
 1338 0056 FB69     		ldr	r3, [r7, #28]
 1339 0058 0133     		adds	r3, r3, #1
 1340 005a FB61     		str	r3, [r7, #28]
 1341              	.L80:
 385:gpib.c        ****         gpib_send_byte(buf[i], (i == eoipos));
 1342              		.loc 1 385 0 is_stmt 0 discriminator 1
 1343 005c FA69     		ldr	r2, [r7, #28]
 1344 005e 7B68     		ldr	r3, [r7, #4]
 1345 0060 9A42     		cmp	r2, r3
 1346 0062 EBDB     		blt	.L81
 1347              	.LBE2:
 387:gpib.c        ****     }
 388:gpib.c        **** }
 1348              		.loc 1 388 0 is_stmt 1
 1349 0064 C046     		nop
 1350 0066 BD46     		mov	sp, r7
 1351 0068 08B0     		add	sp, sp, #32
 1352              		@ sp needed
 1353 006a 80BD     		pop	{r7, pc}
 1354              	.L83:
 1355              		.align	2
 1356              	.L82:
 1357 006c 00000000 		.word	settings
 1358              		.cfi_endproc
 1359              	.LFE58:
 1360              		.size	gpib_send, .-gpib_send
 1361              		.section	.text.gpib_send_bytes,"ax",%progbits
 1362              		.align	2
 1363              		.global	gpib_send_bytes
 1364              		.code	16
 1365              		.thumb_func
 1366              		.type	gpib_send_bytes, %function
 1367              	gpib_send_bytes:
 1368              	.LFB59:
 389:gpib.c        **** void gpib_send_bytes(const uint8_t *buf, int len, int last) {
 1369              		.loc 1 389 0
 1370              		.cfi_startproc
 1371              		@ args = 0, pretend = 0, frame = 24
 1372              		@ frame_needed = 1, uses_anonymous_args = 0
 1373 0000 80B5     		push	{r7, lr}
 1374              		.cfi_def_cfa_offset 8
 1375              		.cfi_offset 7, -8
ARM GAS  C:\Users\essele\AppData\Local\Temp\ccfSlmaE.s 			page 32


 1376              		.cfi_offset 14, -4
 1377 0002 86B0     		sub	sp, sp, #24
 1378              		.cfi_def_cfa_offset 32
 1379 0004 00AF     		add	r7, sp, #0
 1380              		.cfi_def_cfa_register 7
 1381 0006 F860     		str	r0, [r7, #12]
 1382 0008 B960     		str	r1, [r7, #8]
 1383 000a 7A60     		str	r2, [r7, #4]
 390:gpib.c        ****     int eoipos = (settings.eoi && last ? len-1 : -1);
 1384              		.loc 1 390 0
 1385 000c 134B     		ldr	r3, .L89
 1386 000e 5B89     		ldrh	r3, [r3, #10]
 1387 0010 002B     		cmp	r3, #0
 1388 0012 05D0     		beq	.L85
 1389              		.loc 1 390 0 is_stmt 0 discriminator 1
 1390 0014 7B68     		ldr	r3, [r7, #4]
 1391 0016 002B     		cmp	r3, #0
 1392 0018 02D0     		beq	.L85
 1393              		.loc 1 390 0 discriminator 3
 1394 001a BB68     		ldr	r3, [r7, #8]
 1395 001c 013B     		subs	r3, r3, #1
 1396 001e 01E0     		b	.L86
 1397              	.L85:
 1398              		.loc 1 390 0 discriminator 4
 1399 0020 0123     		movs	r3, #1
 1400 0022 5B42     		rsbs	r3, r3, #0
 1401              	.L86:
 1402              		.loc 1 390 0 discriminator 6
 1403 0024 3B61     		str	r3, [r7, #16]
 1404              	.LBB3:
 391:gpib.c        ****     
 392:gpib.c        ****     for (int i=0; i < len; i++) {
 1405              		.loc 1 392 0 is_stmt 1 discriminator 6
 1406 0026 0023     		movs	r3, #0
 1407 0028 7B61     		str	r3, [r7, #20]
 1408 002a 0FE0     		b	.L87
 1409              	.L88:
 393:gpib.c        ****         gpib_send_byte(buf[i], (i == eoipos));
 1410              		.loc 1 393 0 discriminator 3
 1411 002c 7B69     		ldr	r3, [r7, #20]
 1412 002e FA68     		ldr	r2, [r7, #12]
 1413 0030 D318     		adds	r3, r2, r3
 1414 0032 1878     		ldrb	r0, [r3]
 1415 0034 7A69     		ldr	r2, [r7, #20]
 1416 0036 3B69     		ldr	r3, [r7, #16]
 1417 0038 D31A     		subs	r3, r2, r3
 1418 003a 5A42     		rsbs	r2, r3, #0
 1419 003c 5341     		adcs	r3, r3, r2
 1420 003e DBB2     		uxtb	r3, r3
 1421 0040 1900     		movs	r1, r3
 1422 0042 FFF7FEFF 		bl	gpib_send_byte
 392:gpib.c        ****         gpib_send_byte(buf[i], (i == eoipos));
 1423              		.loc 1 392 0 discriminator 3
 1424 0046 7B69     		ldr	r3, [r7, #20]
 1425 0048 0133     		adds	r3, r3, #1
 1426 004a 7B61     		str	r3, [r7, #20]
 1427              	.L87:
ARM GAS  C:\Users\essele\AppData\Local\Temp\ccfSlmaE.s 			page 33


 392:gpib.c        ****         gpib_send_byte(buf[i], (i == eoipos));
 1428              		.loc 1 392 0 is_stmt 0 discriminator 1
 1429 004c 7A69     		ldr	r2, [r7, #20]
 1430 004e BB68     		ldr	r3, [r7, #8]
 1431 0050 9A42     		cmp	r2, r3
 1432 0052 EBDB     		blt	.L88
 1433              	.LBE3:
 394:gpib.c        ****     }
 395:gpib.c        **** }
 1434              		.loc 1 395 0 is_stmt 1
 1435 0054 C046     		nop
 1436 0056 BD46     		mov	sp, r7
 1437 0058 06B0     		add	sp, sp, #24
 1438              		@ sp needed
 1439 005a 80BD     		pop	{r7, pc}
 1440              	.L90:
 1441              		.align	2
 1442              	.L89:
 1443 005c 00000000 		.word	settings
 1444              		.cfi_endproc
 1445              	.LFE59:
 1446              		.size	gpib_send_bytes, .-gpib_send_bytes
 1447              		.section	.text.gpib_read,"ax",%progbits
 1448              		.align	2
 1449              		.global	gpib_read
 1450              		.code	16
 1451              		.thumb_func
 1452              		.type	gpib_read, %function
 1453              	gpib_read:
 1454              	.LFB60:
 396:gpib.c        **** 
 397:gpib.c        **** /**
 398:gpib.c        ****  * Read from the GPIB interface, can use different end states:
 399:gpib.c        ****  *
 400:gpib.c        ****  * until = GPIB_TIMEOUT -- keep going until we get a timeout
 401:gpib.c        ****  * until = GPIB_EOI     -- wait for the EOI indication
 402:gpib.c        ****  * until = <char>       -- wait until we get <char>
 403:gpib.c        ****  *
 404:gpib.c        ****  * end = GPIB_TIMEOUT, or GPIB_ENDED, or GPIB_NOT_ENDED
 405:gpib.c        ****  * return = number of chars
 406:gpib.c        ****  *
 407:gpib.c        ****  */
 408:gpib.c        **** int gpib_read(int until, int *end) {
 1455              		.loc 1 408 0
 1456              		.cfi_startproc
 1457              		@ args = 0, pretend = 0, frame = 24
 1458              		@ frame_needed = 1, uses_anonymous_args = 0
 1459 0000 80B5     		push	{r7, lr}
 1460              		.cfi_def_cfa_offset 8
 1461              		.cfi_offset 7, -8
 1462              		.cfi_offset 14, -4
 1463 0002 86B0     		sub	sp, sp, #24
 1464              		.cfi_def_cfa_offset 32
 1465 0004 00AF     		add	r7, sp, #0
 1466              		.cfi_def_cfa_register 7
 1467 0006 7860     		str	r0, [r7, #4]
 1468 0008 3960     		str	r1, [r7]
ARM GAS  C:\Users\essele\AppData\Local\Temp\ccfSlmaE.s 			page 34


 409:gpib.c        ****     int         i = 0;
 1469              		.loc 1 409 0
 1470 000a 0023     		movs	r3, #0
 1471 000c 7B61     		str	r3, [r7, #20]
 410:gpib.c        ****     int         ok;
 411:gpib.c        ****     int         eoi;
 412:gpib.c        ****     uint8_t     *buf;
 413:gpib.c        ****     
 414:gpib.c        ****     buf = gpib_buffer;
 1472              		.loc 1 414 0
 1473 000e 294B     		ldr	r3, .L101
 1474 0010 3B61     		str	r3, [r7, #16]
 415:gpib.c        ****     
 416:gpib.c        ****     while (i < (GPIB_BUF_SIZE-1)) {
 1475              		.loc 1 416 0
 1476 0012 44E0     		b	.L92
 1477              	.L99:
 417:gpib.c        ****         // First case is a potential timeout (no errors on read)
 418:gpib.c        ****         if (!gpib_receive_byte(buf, &eoi)) {
 1478              		.loc 1 418 0
 1479 0014 0C23     		movs	r3, #12
 1480 0016 FA18     		adds	r2, r7, r3
 1481 0018 3B69     		ldr	r3, [r7, #16]
 1482 001a 1100     		movs	r1, r2
 1483 001c 1800     		movs	r0, r3
 1484 001e FFF7FEFF 		bl	gpib_receive_byte
 1485 0022 031E     		subs	r3, r0, #0
 1486 0024 05D1     		bne	.L93
 419:gpib.c        ****             *end = GPIB_TIMEOUT;
 1487              		.loc 1 419 0
 1488 0026 3B68     		ldr	r3, [r7]
 1489 0028 0222     		movs	r2, #2
 1490 002a FF32     		adds	r2, r2, #255
 1491 002c 1A60     		str	r2, [r3]
 420:gpib.c        ****             return i;
 1492              		.loc 1 420 0
 1493 002e 7B69     		ldr	r3, [r7, #20]
 1494 0030 3CE0     		b	.L100
 1495              	.L93:
 421:gpib.c        ****         }
 422:gpib.c        ****                
 423:gpib.c        ****         // We assume is a valid character...
 424:gpib.c        ****         i++;
 1496              		.loc 1 424 0
 1497 0032 7B69     		ldr	r3, [r7, #20]
 1498 0034 0133     		adds	r3, r3, #1
 1499 0036 7B61     		str	r3, [r7, #20]
 425:gpib.c        **** 
 426:gpib.c        ****         // If we get an EOI then we might need to add an extra char and
 427:gpib.c        ****         // potentially end this read
 428:gpib.c        ****         if (eoi) {
 1500              		.loc 1 428 0
 1501 0038 FB68     		ldr	r3, [r7, #12]
 1502 003a 002B     		cmp	r3, #0
 1503 003c 18D0     		beq	.L95
 429:gpib.c        ****             if (settings.eot_enable) {
 1504              		.loc 1 429 0
ARM GAS  C:\Users\essele\AppData\Local\Temp\ccfSlmaE.s 			page 35


 1505 003e 1E4B     		ldr	r3, .L101+4
 1506 0040 1B8A     		ldrh	r3, [r3, #16]
 1507 0042 002B     		cmp	r3, #0
 1508 0044 0AD0     		beq	.L96
 430:gpib.c        ****                 *++buf = settings.eot_char;
 1509              		.loc 1 430 0
 1510 0046 3B69     		ldr	r3, [r7, #16]
 1511 0048 0133     		adds	r3, r3, #1
 1512 004a 3B61     		str	r3, [r7, #16]
 1513 004c 1A4B     		ldr	r3, .L101+4
 1514 004e DB89     		ldrh	r3, [r3, #14]
 1515 0050 DAB2     		uxtb	r2, r3
 1516 0052 3B69     		ldr	r3, [r7, #16]
 1517 0054 1A70     		strb	r2, [r3]
 431:gpib.c        ****                 i++;
 1518              		.loc 1 431 0
 1519 0056 7B69     		ldr	r3, [r7, #20]
 1520 0058 0133     		adds	r3, r3, #1
 1521 005a 7B61     		str	r3, [r7, #20]
 1522              	.L96:
 432:gpib.c        ****             }
 433:gpib.c        ****             if (until == GPIB_EOI) {
 1523              		.loc 1 433 0
 1524 005c 7A68     		ldr	r2, [r7, #4]
 1525 005e 8023     		movs	r3, #128
 1526 0060 5B00     		lsls	r3, r3, #1
 1527 0062 9A42     		cmp	r2, r3
 1528 0064 04D1     		bne	.L95
 434:gpib.c        ****                 *end = GPIB_ENDED;
 1529              		.loc 1 434 0
 1530 0066 3B68     		ldr	r3, [r7]
 1531 0068 0122     		movs	r2, #1
 1532 006a 1A60     		str	r2, [r3]
 435:gpib.c        ****                 return i;
 1533              		.loc 1 435 0
 1534 006c 7B69     		ldr	r3, [r7, #20]
 1535 006e 1DE0     		b	.L100
 1536              	.L95:
 436:gpib.c        ****             }
 437:gpib.c        ****         }        
 438:gpib.c        ****         
 439:gpib.c        ****         // If we are only waiting for timeout, then loop...
 440:gpib.c        ****         if (until == GPIB_TIMEOUT) {    
 1537              		.loc 1 440 0
 1538 0070 7A68     		ldr	r2, [r7, #4]
 1539 0072 0223     		movs	r3, #2
 1540 0074 FF33     		adds	r3, r3, #255
 1541 0076 9A42     		cmp	r2, r3
 1542 0078 03D1     		bne	.L97
 441:gpib.c        ****             buf++;
 1543              		.loc 1 441 0
 1544 007a 3B69     		ldr	r3, [r7, #16]
 1545 007c 0133     		adds	r3, r3, #1
 1546 007e 3B61     		str	r3, [r7, #16]
 442:gpib.c        ****             continue;
 1547              		.loc 1 442 0
 1548 0080 0DE0     		b	.L92
ARM GAS  C:\Users\essele\AppData\Local\Temp\ccfSlmaE.s 			page 36


 1549              	.L97:
 443:gpib.c        ****         }
 444:gpib.c        ****         
 445:gpib.c        ****         // If we match the given end char
 446:gpib.c        ****         if (until == *buf) {
 1550              		.loc 1 446 0
 1551 0082 3B69     		ldr	r3, [r7, #16]
 1552 0084 1B78     		ldrb	r3, [r3]
 1553 0086 1A00     		movs	r2, r3
 1554 0088 7B68     		ldr	r3, [r7, #4]
 1555 008a 9A42     		cmp	r2, r3
 1556 008c 04D1     		bne	.L98
 447:gpib.c        ****             *end = GPIB_ENDED;
 1557              		.loc 1 447 0
 1558 008e 3B68     		ldr	r3, [r7]
 1559 0090 0122     		movs	r2, #1
 1560 0092 1A60     		str	r2, [r3]
 448:gpib.c        ****             return i;
 1561              		.loc 1 448 0
 1562 0094 7B69     		ldr	r3, [r7, #20]
 1563 0096 09E0     		b	.L100
 1564              	.L98:
 449:gpib.c        ****         }     
 450:gpib.c        ****         buf++;
 1565              		.loc 1 450 0
 1566 0098 3B69     		ldr	r3, [r7, #16]
 1567 009a 0133     		adds	r3, r3, #1
 1568 009c 3B61     		str	r3, [r7, #16]
 1569              	.L92:
 416:gpib.c        ****         // First case is a potential timeout (no errors on read)
 1570              		.loc 1 416 0
 1571 009e 7B69     		ldr	r3, [r7, #20]
 1572 00a0 FE2B     		cmp	r3, #254
 1573 00a2 B7DD     		ble	.L99
 451:gpib.c        ****     }
 452:gpib.c        ****     *end = GPIB_NOT_ENDED;
 1574              		.loc 1 452 0
 1575 00a4 3B68     		ldr	r3, [r7]
 1576 00a6 0022     		movs	r2, #0
 1577 00a8 1A60     		str	r2, [r3]
 453:gpib.c        ****     return i;
 1578              		.loc 1 453 0
 1579 00aa 7B69     		ldr	r3, [r7, #20]
 1580              	.L100:
 454:gpib.c        **** }
 1581              		.loc 1 454 0 discriminator 1
 1582 00ac 1800     		movs	r0, r3
 1583 00ae BD46     		mov	sp, r7
 1584 00b0 06B0     		add	sp, sp, #24
 1585              		@ sp needed
 1586 00b2 80BD     		pop	{r7, pc}
 1587              	.L102:
 1588              		.align	2
 1589              	.L101:
 1590 00b4 00000000 		.word	gpib_buffer
 1591 00b8 00000000 		.word	settings
 1592              		.cfi_endproc
ARM GAS  C:\Users\essele\AppData\Local\Temp\ccfSlmaE.s 			page 37


 1593              	.LFE60:
 1594              		.size	gpib_read, .-gpib_read
 1595              		.section	.text.gpib_read_bytes,"ax",%progbits
 1596              		.align	2
 1597              		.global	gpib_read_bytes
 1598              		.code	16
 1599              		.thumb_func
 1600              		.type	gpib_read_bytes, %function
 1601              	gpib_read_bytes:
 1602              	.LFB61:
 455:gpib.c        **** 
 456:gpib.c        **** /**
 457:gpib.c        ****  * Test routine ... assume EOI for now
 458:gpib.c        ****  */ 
 459:gpib.c        **** int gpib_read_bytes(uint8_t *dest, int maxlen, int *end) {
 1603              		.loc 1 459 0
 1604              		.cfi_startproc
 1605              		@ args = 0, pretend = 0, frame = 24
 1606              		@ frame_needed = 1, uses_anonymous_args = 0
 1607 0000 80B5     		push	{r7, lr}
 1608              		.cfi_def_cfa_offset 8
 1609              		.cfi_offset 7, -8
 1610              		.cfi_offset 14, -4
 1611 0002 86B0     		sub	sp, sp, #24
 1612              		.cfi_def_cfa_offset 32
 1613 0004 00AF     		add	r7, sp, #0
 1614              		.cfi_def_cfa_register 7
 1615 0006 F860     		str	r0, [r7, #12]
 1616 0008 B960     		str	r1, [r7, #8]
 1617 000a 7A60     		str	r2, [r7, #4]
 460:gpib.c        ****     int eoi;
 461:gpib.c        ****     int i = 0;
 1618              		.loc 1 461 0
 1619 000c 0023     		movs	r3, #0
 1620 000e 7B61     		str	r3, [r7, #20]
 462:gpib.c        ****     
 463:gpib.c        ****     while (i < maxlen) {
 1621              		.loc 1 463 0
 1622 0010 1BE0     		b	.L104
 1623              	.L107:
 464:gpib.c        ****         if (!gpib_receive_byte(dest++, &eoi)) {
 1624              		.loc 1 464 0
 1625 0012 FB68     		ldr	r3, [r7, #12]
 1626 0014 5A1C     		adds	r2, r3, #1
 1627 0016 FA60     		str	r2, [r7, #12]
 1628 0018 1022     		movs	r2, #16
 1629 001a BA18     		adds	r2, r7, r2
 1630 001c 1100     		movs	r1, r2
 1631 001e 1800     		movs	r0, r3
 1632 0020 FFF7FEFF 		bl	gpib_receive_byte
 1633 0024 031E     		subs	r3, r0, #0
 1634 0026 05D1     		bne	.L105
 465:gpib.c        ****             *end = GPIB_TIMEOUT;
 1635              		.loc 1 465 0
 1636 0028 7B68     		ldr	r3, [r7, #4]
 1637 002a 0222     		movs	r2, #2
 1638 002c FF32     		adds	r2, r2, #255
ARM GAS  C:\Users\essele\AppData\Local\Temp\ccfSlmaE.s 			page 38


 1639 002e 1A60     		str	r2, [r3]
 466:gpib.c        ****             return i;
 1640              		.loc 1 466 0
 1641 0030 7B69     		ldr	r3, [r7, #20]
 1642 0032 12E0     		b	.L108
 1643              	.L105:
 467:gpib.c        ****         }
 468:gpib.c        ****         i++;
 1644              		.loc 1 468 0
 1645 0034 7B69     		ldr	r3, [r7, #20]
 1646 0036 0133     		adds	r3, r3, #1
 1647 0038 7B61     		str	r3, [r7, #20]
 469:gpib.c        ****         if (eoi) {
 1648              		.loc 1 469 0
 1649 003a 3B69     		ldr	r3, [r7, #16]
 1650 003c 002B     		cmp	r3, #0
 1651 003e 04D0     		beq	.L104
 470:gpib.c        ****             *end = GPIB_ENDED;
 1652              		.loc 1 470 0
 1653 0040 7B68     		ldr	r3, [r7, #4]
 1654 0042 0122     		movs	r2, #1
 1655 0044 1A60     		str	r2, [r3]
 471:gpib.c        ****             return i;
 1656              		.loc 1 471 0
 1657 0046 7B69     		ldr	r3, [r7, #20]
 1658 0048 07E0     		b	.L108
 1659              	.L104:
 463:gpib.c        ****         if (!gpib_receive_byte(dest++, &eoi)) {
 1660              		.loc 1 463 0
 1661 004a 7A69     		ldr	r2, [r7, #20]
 1662 004c BB68     		ldr	r3, [r7, #8]
 1663 004e 9A42     		cmp	r2, r3
 1664 0050 DFDB     		blt	.L107
 472:gpib.c        ****         }
 473:gpib.c        ****     }
 474:gpib.c        ****     *end = GPIB_NOT_ENDED;
 1665              		.loc 1 474 0
 1666 0052 7B68     		ldr	r3, [r7, #4]
 1667 0054 0022     		movs	r2, #0
 1668 0056 1A60     		str	r2, [r3]
 475:gpib.c        ****     return i;
 1669              		.loc 1 475 0
 1670 0058 7B69     		ldr	r3, [r7, #20]
 1671              	.L108:
 476:gpib.c        **** }
 1672              		.loc 1 476 0 discriminator 1
 1673 005a 1800     		movs	r0, r3
 1674 005c BD46     		mov	sp, r7
 1675 005e 06B0     		add	sp, sp, #24
 1676              		@ sp needed
 1677 0060 80BD     		pop	{r7, pc}
 1678              		.cfi_endproc
 1679              	.LFE61:
 1680              		.size	gpib_read_bytes, .-gpib_read_bytes
 1681 0062 C046     		.text
 1682              	.Letext0:
 1683              		.file 2 "c:\\program files (x86)\\cypress\\psoc creator\\4.2\\psoc creator\\import\\gnu\\arm\\5.4.
ARM GAS  C:\Users\essele\AppData\Local\Temp\ccfSlmaE.s 			page 39


 1684              		.file 3 "c:\\program files (x86)\\cypress\\psoc creator\\4.2\\psoc creator\\import\\gnu\\arm\\5.4.
 1685              		.file 4 "Generated_Source\\PSoC4/cytypes.h"
 1686              		.file 5 "settings.h"
 1687              		.section	.debug_info,"",%progbits
 1688              	.Ldebug_info0:
 1689 0000 FF060000 		.4byte	0x6ff
 1690 0004 0400     		.2byte	0x4
 1691 0006 00000000 		.4byte	.Ldebug_abbrev0
 1692 000a 04       		.byte	0x4
 1693 000b 01       		.uleb128 0x1
 1694 000c 77010000 		.4byte	.LASF73
 1695 0010 0C       		.byte	0xc
 1696 0011 44010000 		.4byte	.LASF74
 1697 0015 65000000 		.4byte	.LASF75
 1698 0019 00000000 		.4byte	.Ldebug_ranges0+0
 1699 001d 00000000 		.4byte	0
 1700 0021 00000000 		.4byte	.Ldebug_line0
 1701 0025 02       		.uleb128 0x2
 1702 0026 01       		.byte	0x1
 1703 0027 06       		.byte	0x6
 1704 0028 4F020000 		.4byte	.LASF0
 1705 002c 03       		.uleb128 0x3
 1706 002d 54010000 		.4byte	.LASF3
 1707 0031 02       		.byte	0x2
 1708 0032 1D       		.byte	0x1d
 1709 0033 37000000 		.4byte	0x37
 1710 0037 02       		.uleb128 0x2
 1711 0038 01       		.byte	0x1
 1712 0039 08       		.byte	0x8
 1713 003a 05020000 		.4byte	.LASF1
 1714 003e 02       		.uleb128 0x2
 1715 003f 02       		.byte	0x2
 1716 0040 05       		.byte	0x5
 1717 0041 4C000000 		.4byte	.LASF2
 1718 0045 03       		.uleb128 0x3
 1719 0046 C7000000 		.4byte	.LASF4
 1720 004a 02       		.byte	0x2
 1721 004b 2B       		.byte	0x2b
 1722 004c 50000000 		.4byte	0x50
 1723 0050 02       		.uleb128 0x2
 1724 0051 02       		.byte	0x2
 1725 0052 07       		.byte	0x7
 1726 0053 E0020000 		.4byte	.LASF5
 1727 0057 02       		.uleb128 0x2
 1728 0058 04       		.byte	0x4
 1729 0059 05       		.byte	0x5
 1730 005a 3B010000 		.4byte	.LASF6
 1731 005e 03       		.uleb128 0x3
 1732 005f A9030000 		.4byte	.LASF7
 1733 0063 02       		.byte	0x2
 1734 0064 41       		.byte	0x41
 1735 0065 69000000 		.4byte	0x69
 1736 0069 02       		.uleb128 0x2
 1737 006a 04       		.byte	0x4
 1738 006b 07       		.byte	0x7
 1739 006c 7D030000 		.4byte	.LASF8
 1740 0070 02       		.uleb128 0x2
ARM GAS  C:\Users\essele\AppData\Local\Temp\ccfSlmaE.s 			page 40


 1741 0071 08       		.byte	0x8
 1742 0072 05       		.byte	0x5
 1743 0073 13010000 		.4byte	.LASF9
 1744 0077 02       		.uleb128 0x2
 1745 0078 08       		.byte	0x8
 1746 0079 07       		.byte	0x7
 1747 007a 5B020000 		.4byte	.LASF10
 1748 007e 04       		.uleb128 0x4
 1749 007f 04       		.byte	0x4
 1750 0080 05       		.byte	0x5
 1751 0081 696E7400 		.ascii	"int\000"
 1752 0085 02       		.uleb128 0x2
 1753 0086 04       		.byte	0x4
 1754 0087 07       		.byte	0x7
 1755 0088 7B020000 		.4byte	.LASF11
 1756 008c 03       		.uleb128 0x3
 1757 008d DC000000 		.4byte	.LASF12
 1758 0091 03       		.byte	0x3
 1759 0092 18       		.byte	0x18
 1760 0093 2C000000 		.4byte	0x2c
 1761 0097 03       		.uleb128 0x3
 1762 0098 88020000 		.4byte	.LASF13
 1763 009c 03       		.byte	0x3
 1764 009d 24       		.byte	0x24
 1765 009e 45000000 		.4byte	0x45
 1766 00a2 03       		.uleb128 0x3
 1767 00a3 72020000 		.4byte	.LASF14
 1768 00a7 03       		.byte	0x3
 1769 00a8 30       		.byte	0x30
 1770 00a9 5E000000 		.4byte	0x5e
 1771 00ad 05       		.uleb128 0x5
 1772 00ae 76030000 		.4byte	.LASF15
 1773 00b2 04       		.byte	0x4
 1774 00b3 E601     		.2byte	0x1e6
 1775 00b5 69000000 		.4byte	0x69
 1776 00b9 02       		.uleb128 0x2
 1777 00ba 04       		.byte	0x4
 1778 00bb 04       		.byte	0x4
 1779 00bc 70030000 		.4byte	.LASF16
 1780 00c0 02       		.uleb128 0x2
 1781 00c1 08       		.byte	0x8
 1782 00c2 04       		.byte	0x4
 1783 00c3 8F030000 		.4byte	.LASF17
 1784 00c7 02       		.uleb128 0x2
 1785 00c8 01       		.byte	0x1
 1786 00c9 08       		.byte	0x8
 1787 00ca 19030000 		.4byte	.LASF18
 1788 00ce 05       		.uleb128 0x5
 1789 00cf D1020000 		.4byte	.LASF19
 1790 00d3 04       		.byte	0x4
 1791 00d4 9002     		.2byte	0x290
 1792 00d6 DA000000 		.4byte	0xda
 1793 00da 06       		.uleb128 0x6
 1794 00db AD000000 		.4byte	0xad
 1795 00df 02       		.uleb128 0x2
 1796 00e0 08       		.byte	0x8
 1797 00e1 04       		.byte	0x4
ARM GAS  C:\Users\essele\AppData\Local\Temp\ccfSlmaE.s 			page 41


 1798 00e2 13020000 		.4byte	.LASF20
 1799 00e6 02       		.uleb128 0x2
 1800 00e7 04       		.byte	0x4
 1801 00e8 07       		.byte	0x7
 1802 00e9 56000000 		.4byte	.LASF21
 1803 00ed 07       		.uleb128 0x7
 1804 00ee 04       		.byte	0x4
 1805 00ef C7000000 		.4byte	0xc7
 1806 00f3 08       		.uleb128 0x8
 1807 00f4 0A010000 		.4byte	.LASF69
 1808 00f8 14       		.byte	0x14
 1809 00f9 05       		.byte	0x5
 1810 00fa 0D       		.byte	0xd
 1811 00fb 6C010000 		.4byte	0x16c
 1812 00ff 09       		.uleb128 0x9
 1813 0100 E3030000 		.4byte	.LASF22
 1814 0104 05       		.byte	0x5
 1815 0105 0E       		.byte	0xe
 1816 0106 A2000000 		.4byte	0xa2
 1817 010a 00       		.byte	0
 1818 010b 09       		.uleb128 0x9
 1819 010c 0A000000 		.4byte	.LASF23
 1820 0110 05       		.byte	0x5
 1821 0111 0F       		.byte	0xf
 1822 0112 97000000 		.4byte	0x97
 1823 0116 04       		.byte	0x4
 1824 0117 09       		.uleb128 0x9
 1825 0118 38000000 		.4byte	.LASF24
 1826 011c 05       		.byte	0x5
 1827 011d 10       		.byte	0x10
 1828 011e 97000000 		.4byte	0x97
 1829 0122 06       		.byte	0x6
 1830 0123 09       		.uleb128 0x9
 1831 0124 E4000000 		.4byte	.LASF25
 1832 0128 05       		.byte	0x5
 1833 0129 11       		.byte	0x11
 1834 012a 97000000 		.4byte	0x97
 1835 012e 08       		.byte	0x8
 1836 012f 0A       		.uleb128 0xa
 1837 0130 656F6900 		.ascii	"eoi\000"
 1838 0134 05       		.byte	0x5
 1839 0135 12       		.byte	0x12
 1840 0136 97000000 		.4byte	0x97
 1841 013a 0A       		.byte	0xa
 1842 013b 0A       		.uleb128 0xa
 1843 013c 656F7300 		.ascii	"eos\000"
 1844 0140 05       		.byte	0x5
 1845 0141 13       		.byte	0x13
 1846 0142 97000000 		.4byte	0x97
 1847 0146 0C       		.byte	0xc
 1848 0147 09       		.uleb128 0x9
 1849 0148 D7020000 		.4byte	.LASF26
 1850 014c 05       		.byte	0x5
 1851 014d 14       		.byte	0x14
 1852 014e 97000000 		.4byte	0x97
 1853 0152 0E       		.byte	0xe
 1854 0153 09       		.uleb128 0x9
ARM GAS  C:\Users\essele\AppData\Local\Temp\ccfSlmaE.s 			page 42


 1855 0154 F3020000 		.4byte	.LASF27
 1856 0158 05       		.byte	0x5
 1857 0159 15       		.byte	0x15
 1858 015a 97000000 		.4byte	0x97
 1859 015e 10       		.byte	0x10
 1860 015f 09       		.uleb128 0x9
 1861 0160 2F010000 		.4byte	.LASF28
 1862 0164 05       		.byte	0x5
 1863 0165 16       		.byte	0x16
 1864 0166 97000000 		.4byte	0x97
 1865 016a 12       		.byte	0x12
 1866 016b 00       		.byte	0
 1867 016c 0B       		.uleb128 0xb
 1868 016d 01       		.byte	0x1
 1869 016e 37000000 		.4byte	0x37
 1870 0172 01       		.byte	0x1
 1871 0173 22       		.byte	0x22
 1872 0174 A9010000 		.4byte	0x1a9
 1873 0178 0C       		.uleb128 0xc
 1874 0179 41544E00 		.ascii	"ATN\000"
 1875 017d 00       		.byte	0
 1876 017e 0C       		.uleb128 0xc
 1877 017f 53525100 		.ascii	"SRQ\000"
 1878 0183 01       		.byte	0x1
 1879 0184 0C       		.uleb128 0xc
 1880 0185 49464300 		.ascii	"IFC\000"
 1881 0189 02       		.byte	0x2
 1882 018a 0D       		.uleb128 0xd
 1883 018b 33040000 		.4byte	.LASF29
 1884 018f 03       		.byte	0x3
 1885 0190 0D       		.uleb128 0xd
 1886 0191 2C030000 		.4byte	.LASF30
 1887 0195 04       		.byte	0x4
 1888 0196 0C       		.uleb128 0xc
 1889 0197 44415600 		.ascii	"DAV\000"
 1890 019b 05       		.byte	0x5
 1891 019c 0C       		.uleb128 0xc
 1892 019d 454F4900 		.ascii	"EOI\000"
 1893 01a1 06       		.byte	0x6
 1894 01a2 0C       		.uleb128 0xc
 1895 01a3 52454E00 		.ascii	"REN\000"
 1896 01a7 07       		.byte	0x7
 1897 01a8 00       		.byte	0
 1898 01a9 03       		.uleb128 0x3
 1899 01aa 00000000 		.4byte	.LASF31
 1900 01ae 01       		.byte	0x1
 1901 01af 23       		.byte	0x23
 1902 01b0 6C010000 		.4byte	0x16c
 1903 01b4 0E       		.uleb128 0xe
 1904 01b5 28000000 		.4byte	.LASF41
 1905 01b9 01       		.byte	0x1
 1906 01ba 1A       		.byte	0x1a
 1907 01bb C9010000 		.4byte	0x1c9
 1908 01bf 00000000 		.4byte	.LFB34
 1909 01c3 10000000 		.4byte	.LFE34-.LFB34
 1910 01c7 01       		.uleb128 0x1
 1911 01c8 9C       		.byte	0x9c
ARM GAS  C:\Users\essele\AppData\Local\Temp\ccfSlmaE.s 			page 43


 1912 01c9 07       		.uleb128 0x7
 1913 01ca 04       		.byte	0x4
 1914 01cb 8C000000 		.4byte	0x8c
 1915 01cf 0F       		.uleb128 0xf
 1916 01d0 40020000 		.4byte	.LASF32
 1917 01d4 01       		.byte	0x1
 1918 01d5 2F       		.byte	0x2f
 1919 01d6 00000000 		.4byte	.LFB35
 1920 01da 0A000000 		.4byte	.LFE35-.LFB35
 1921 01de 01       		.uleb128 0x1
 1922 01df 9C       		.byte	0x9c
 1923 01e0 10       		.uleb128 0x10
 1924 01e1 BB000000 		.4byte	.LASF33
 1925 01e5 01       		.byte	0x1
 1926 01e6 33       		.byte	0x33
 1927 01e7 00000000 		.4byte	.LFB36
 1928 01eb 10000000 		.4byte	.LFE36-.LFB36
 1929 01ef 01       		.uleb128 0x1
 1930 01f0 9C       		.byte	0x9c
 1931 01f1 11       		.uleb128 0x11
 1932 01f2 4E030000 		.4byte	.LASF34
 1933 01f6 01       		.byte	0x1
 1934 01f7 49       		.byte	0x49
 1935 01f8 00000000 		.4byte	.LFB37
 1936 01fc 28000000 		.4byte	.LFE37-.LFB37
 1937 0200 01       		.uleb128 0x1
 1938 0201 9C       		.byte	0x9c
 1939 0202 15020000 		.4byte	0x215
 1940 0206 12       		.uleb128 0x12
 1941 0207 ED000000 		.4byte	.LASF36
 1942 020b 01       		.byte	0x1
 1943 020c 49       		.byte	0x49
 1944 020d A9010000 		.4byte	0x1a9
 1945 0211 02       		.uleb128 0x2
 1946 0212 91       		.byte	0x91
 1947 0213 77       		.sleb128 -9
 1948 0214 00       		.byte	0
 1949 0215 11       		.uleb128 0x11
 1950 0216 96030000 		.4byte	.LASF35
 1951 021a 01       		.byte	0x1
 1952 021b 50       		.byte	0x50
 1953 021c 00000000 		.4byte	.LFB38
 1954 0220 28000000 		.4byte	.LFE38-.LFB38
 1955 0224 01       		.uleb128 0x1
 1956 0225 9C       		.byte	0x9c
 1957 0226 39020000 		.4byte	0x239
 1958 022a 12       		.uleb128 0x12
 1959 022b ED000000 		.4byte	.LASF36
 1960 022f 01       		.byte	0x1
 1961 0230 50       		.byte	0x50
 1962 0231 A9010000 		.4byte	0x1a9
 1963 0235 02       		.uleb128 0x2
 1964 0236 91       		.byte	0x91
 1965 0237 77       		.sleb128 -9
 1966 0238 00       		.byte	0
 1967 0239 13       		.uleb128 0x13
 1968 023a 26040000 		.4byte	.LASF37
ARM GAS  C:\Users\essele\AppData\Local\Temp\ccfSlmaE.s 			page 44


 1969 023e 01       		.byte	0x1
 1970 023f 54       		.byte	0x54
 1971 0240 97000000 		.4byte	0x97
 1972 0244 00000000 		.4byte	.LFB39
 1973 0248 40000000 		.4byte	.LFE39-.LFB39
 1974 024c 01       		.uleb128 0x1
 1975 024d 9C       		.byte	0x9c
 1976 024e 60020000 		.4byte	0x260
 1977 0252 14       		.uleb128 0x14
 1978 0253 726300   		.ascii	"rc\000"
 1979 0256 01       		.byte	0x1
 1980 0257 55       		.byte	0x55
 1981 0258 97000000 		.4byte	0x97
 1982 025c 02       		.uleb128 0x2
 1983 025d 91       		.byte	0x91
 1984 025e 76       		.sleb128 -10
 1985 025f 00       		.byte	0
 1986 0260 15       		.uleb128 0x15
 1987 0261 0E040000 		.4byte	.LASF43
 1988 0265 01       		.byte	0x1
 1989 0266 5E       		.byte	0x5e
 1990 0267 94020000 		.4byte	0x294
 1991 026b 00000000 		.4byte	.LFB40
 1992 026f 34000000 		.4byte	.LFE40-.LFB40
 1993 0273 01       		.uleb128 0x1
 1994 0274 9C       		.byte	0x9c
 1995 0275 94020000 		.4byte	0x294
 1996 0279 12       		.uleb128 0x12
 1997 027a ED000000 		.4byte	.LASF36
 1998 027e 01       		.byte	0x1
 1999 027f 5E       		.byte	0x5e
 2000 0280 A9010000 		.4byte	0x1a9
 2001 0284 02       		.uleb128 0x2
 2002 0285 91       		.byte	0x91
 2003 0286 6F       		.sleb128 -17
 2004 0287 14       		.uleb128 0x14
 2005 0288 7600     		.ascii	"v\000"
 2006 028a 01       		.byte	0x1
 2007 028b 5F       		.byte	0x5f
 2008 028c 7E000000 		.4byte	0x7e
 2009 0290 02       		.uleb128 0x2
 2010 0291 91       		.byte	0x91
 2011 0292 74       		.sleb128 -12
 2012 0293 00       		.byte	0
 2013 0294 02       		.uleb128 0x2
 2014 0295 01       		.byte	0x1
 2015 0296 02       		.byte	0x2
 2016 0297 5F030000 		.4byte	.LASF38
 2017 029b 16       		.uleb128 0x16
 2018 029c ED030000 		.4byte	.LASF39
 2019 02a0 01       		.byte	0x1
 2020 02a1 6D       		.byte	0x6d
 2021 02a2 7E000000 		.4byte	0x7e
 2022 02a6 00000000 		.4byte	.LFB41
 2023 02aa 8C000000 		.4byte	.LFE41-.LFB41
 2024 02ae 01       		.uleb128 0x1
 2025 02af 9C       		.byte	0x9c
ARM GAS  C:\Users\essele\AppData\Local\Temp\ccfSlmaE.s 			page 45


 2026 02b0 DF020000 		.4byte	0x2df
 2027 02b4 17       		.uleb128 0x17
 2028 02b5 D2000000 		.4byte	.LASF40
 2029 02b9 01       		.byte	0x1
 2030 02ba 6F       		.byte	0x6f
 2031 02bb 7E000000 		.4byte	0x7e
 2032 02bf 02       		.uleb128 0x2
 2033 02c0 91       		.byte	0x91
 2034 02c1 6C       		.sleb128 -20
 2035 02c2 14       		.uleb128 0x14
 2036 02c3 61746E00 		.ascii	"atn\000"
 2037 02c7 01       		.byte	0x1
 2038 02c8 71       		.byte	0x71
 2039 02c9 94020000 		.4byte	0x294
 2040 02cd 02       		.uleb128 0x2
 2041 02ce 91       		.byte	0x91
 2042 02cf 6B       		.sleb128 -21
 2043 02d0 14       		.uleb128 0x14
 2044 02d1 69666300 		.ascii	"ifc\000"
 2045 02d5 01       		.byte	0x1
 2046 02d6 72       		.byte	0x72
 2047 02d7 94020000 		.4byte	0x294
 2048 02db 02       		.uleb128 0x2
 2049 02dc 91       		.byte	0x91
 2050 02dd 6A       		.sleb128 -22
 2051 02de 00       		.byte	0
 2052 02df 0E       		.uleb128 0xe
 2053 02e0 FC000000 		.4byte	.LASF42
 2054 02e4 01       		.byte	0x1
 2055 02e5 87       		.byte	0x87
 2056 02e6 7E000000 		.4byte	0x7e
 2057 02ea 00000000 		.4byte	.LFB42
 2058 02ee 14000000 		.4byte	.LFE42-.LFB42
 2059 02f2 01       		.uleb128 0x1
 2060 02f3 9C       		.byte	0x9c
 2061 02f4 18       		.uleb128 0x18
 2062 02f5 B9030000 		.4byte	.LASF44
 2063 02f9 01       		.byte	0x1
 2064 02fa 8E       		.byte	0x8e
 2065 02fb 94020000 		.4byte	0x294
 2066 02ff 00000000 		.4byte	.LFB43
 2067 0303 40000000 		.4byte	.LFE43-.LFB43
 2068 0307 01       		.uleb128 0x1
 2069 0308 9C       		.byte	0x9c
 2070 0309 1C030000 		.4byte	0x31c
 2071 030d 12       		.uleb128 0x12
 2072 030e ED000000 		.4byte	.LASF36
 2073 0312 01       		.byte	0x1
 2074 0313 8E       		.byte	0x8e
 2075 0314 A9010000 		.4byte	0x1a9
 2076 0318 02       		.uleb128 0x2
 2077 0319 91       		.byte	0x91
 2078 031a 77       		.sleb128 -9
 2079 031b 00       		.byte	0
 2080 031c 18       		.uleb128 0x18
 2081 031d A6020000 		.4byte	.LASF45
 2082 0321 01       		.byte	0x1
ARM GAS  C:\Users\essele\AppData\Local\Temp\ccfSlmaE.s 			page 46


 2083 0322 9F       		.byte	0x9f
 2084 0323 94020000 		.4byte	0x294
 2085 0327 00000000 		.4byte	.LFB44
 2086 032b 4C000000 		.4byte	.LFE44-.LFB44
 2087 032f 01       		.uleb128 0x1
 2088 0330 9C       		.byte	0x9c
 2089 0331 44030000 		.4byte	0x344
 2090 0335 12       		.uleb128 0x12
 2091 0336 ED000000 		.4byte	.LASF36
 2092 033a 01       		.byte	0x1
 2093 033b 9F       		.byte	0x9f
 2094 033c A9010000 		.4byte	0x1a9
 2095 0340 02       		.uleb128 0x2
 2096 0341 91       		.byte	0x91
 2097 0342 77       		.sleb128 -9
 2098 0343 00       		.byte	0
 2099 0344 18       		.uleb128 0x18
 2100 0345 31030000 		.4byte	.LASF46
 2101 0349 01       		.byte	0x1
 2102 034a B1       		.byte	0xb1
 2103 034b 94020000 		.4byte	0x294
 2104 034f 00000000 		.4byte	.LFB45
 2105 0353 88000000 		.4byte	.LFE45-.LFB45
 2106 0357 01       		.uleb128 0x1
 2107 0358 9C       		.byte	0x9c
 2108 0359 92030000 		.4byte	0x392
 2109 035d 12       		.uleb128 0x12
 2110 035e B4030000 		.4byte	.LASF47
 2111 0362 01       		.byte	0x1
 2112 0363 B1       		.byte	0xb1
 2113 0364 8C000000 		.4byte	0x8c
 2114 0368 02       		.uleb128 0x2
 2115 0369 91       		.byte	0x91
 2116 036a 67       		.sleb128 -25
 2117 036b 12       		.uleb128 0x12
 2118 036c CC020000 		.4byte	.LASF48
 2119 0370 01       		.byte	0x1
 2120 0371 B1       		.byte	0xb1
 2121 0372 94020000 		.4byte	0x294
 2122 0376 02       		.uleb128 0x2
 2123 0377 91       		.byte	0x91
 2124 0378 66       		.sleb128 -26
 2125 0379 14       		.uleb128 0x14
 2126 037a 6F6B00   		.ascii	"ok\000"
 2127 037d 01       		.byte	0x1
 2128 037e B2       		.byte	0xb2
 2129 037f 94020000 		.4byte	0x294
 2130 0383 02       		.uleb128 0x2
 2131 0384 91       		.byte	0x91
 2132 0385 6F       		.sleb128 -17
 2133 0386 19       		.uleb128 0x19
 2134 0387 1F020000 		.4byte	.LASF76
 2135 038b 01       		.byte	0x1
 2136 038c C8       		.byte	0xc8
 2137 038d 64000000 		.4byte	.L50
 2138 0391 00       		.byte	0
 2139 0392 18       		.uleb128 0x18
ARM GAS  C:\Users\essele\AppData\Local\Temp\ccfSlmaE.s 			page 47


 2140 0393 FE020000 		.4byte	.LASF49
 2141 0397 01       		.byte	0x1
 2142 0398 D7       		.byte	0xd7
 2143 0399 7E000000 		.4byte	0x7e
 2144 039d 00000000 		.4byte	.LFB46
 2145 03a1 90000000 		.4byte	.LFE46-.LFB46
 2146 03a5 01       		.uleb128 0x1
 2147 03a6 9C       		.byte	0x9c
 2148 03a7 D5030000 		.4byte	0x3d5
 2149 03ab 12       		.uleb128 0x12
 2150 03ac B4030000 		.4byte	.LASF47
 2151 03b0 01       		.byte	0x1
 2152 03b1 D7       		.byte	0xd7
 2153 03b2 C9010000 		.4byte	0x1c9
 2154 03b6 02       		.uleb128 0x2
 2155 03b7 91       		.byte	0x91
 2156 03b8 6C       		.sleb128 -20
 2157 03b9 1A       		.uleb128 0x1a
 2158 03ba 656F6900 		.ascii	"eoi\000"
 2159 03be 01       		.byte	0x1
 2160 03bf D7       		.byte	0xd7
 2161 03c0 D5030000 		.4byte	0x3d5
 2162 03c4 02       		.uleb128 0x2
 2163 03c5 91       		.byte	0x91
 2164 03c6 68       		.sleb128 -24
 2165 03c7 14       		.uleb128 0x14
 2166 03c8 6F6B00   		.ascii	"ok\000"
 2167 03cb 01       		.byte	0x1
 2168 03cc D8       		.byte	0xd8
 2169 03cd 7E000000 		.4byte	0x7e
 2170 03d1 02       		.uleb128 0x2
 2171 03d2 91       		.byte	0x91
 2172 03d3 74       		.sleb128 -12
 2173 03d4 00       		.byte	0
 2174 03d5 07       		.uleb128 0x7
 2175 03d6 04       		.byte	0x4
 2176 03d7 7E000000 		.4byte	0x7e
 2177 03db 1B       		.uleb128 0x1b
 2178 03dc A6000000 		.4byte	.LASF50
 2179 03e0 01       		.byte	0x1
 2180 03e1 0B01     		.2byte	0x10b
 2181 03e3 00000000 		.4byte	.LFB47
 2182 03e7 22000000 		.4byte	.LFE47-.LFB47
 2183 03eb 01       		.uleb128 0x1
 2184 03ec 9C       		.byte	0x9c
 2185 03ed 1C       		.uleb128 0x1c
 2186 03ee 4B010000 		.4byte	.LASF51
 2187 03f2 01       		.byte	0x1
 2188 03f3 1201     		.2byte	0x112
 2189 03f5 00000000 		.4byte	.LFB48
 2190 03f9 24000000 		.4byte	.LFE48-.LFB48
 2191 03fd 01       		.uleb128 0x1
 2192 03fe 9C       		.byte	0x9c
 2193 03ff 13040000 		.4byte	0x413
 2194 0403 1D       		.uleb128 0x1d
 2195 0404 38000000 		.4byte	.LASF24
 2196 0408 01       		.byte	0x1
ARM GAS  C:\Users\essele\AppData\Local\Temp\ccfSlmaE.s 			page 48


 2197 0409 1201     		.2byte	0x112
 2198 040b 8C000000 		.4byte	0x8c
 2199 040f 02       		.uleb128 0x2
 2200 0410 91       		.byte	0x91
 2201 0411 77       		.sleb128 -9
 2202 0412 00       		.byte	0
 2203 0413 1C       		.uleb128 0x1c
 2204 0414 37020000 		.4byte	.LASF52
 2205 0418 01       		.byte	0x1
 2206 0419 1601     		.2byte	0x116
 2207 041b 00000000 		.4byte	.LFB49
 2208 041f 24000000 		.4byte	.LFE49-.LFB49
 2209 0423 01       		.uleb128 0x1
 2210 0424 9C       		.byte	0x9c
 2211 0425 39040000 		.4byte	0x439
 2212 0429 1D       		.uleb128 0x1d
 2213 042a 38000000 		.4byte	.LASF24
 2214 042e 01       		.byte	0x1
 2215 042f 1601     		.2byte	0x116
 2216 0431 8C000000 		.4byte	0x8c
 2217 0435 02       		.uleb128 0x2
 2218 0436 91       		.byte	0x91
 2219 0437 77       		.sleb128 -9
 2220 0438 00       		.byte	0
 2221 0439 1B       		.uleb128 0x1b
 2222 043a 10030000 		.4byte	.LASF53
 2223 043e 01       		.byte	0x1
 2224 043f 1A01     		.2byte	0x11a
 2225 0441 00000000 		.4byte	.LFB50
 2226 0445 10000000 		.4byte	.LFE50-.LFB50
 2227 0449 01       		.uleb128 0x1
 2228 044a 9C       		.byte	0x9c
 2229 044b 1B       		.uleb128 0x1b
 2230 044c 1D040000 		.4byte	.LASF54
 2231 0450 01       		.byte	0x1
 2232 0451 1E01     		.2byte	0x11e
 2233 0453 00000000 		.4byte	.LFB51
 2234 0457 10000000 		.4byte	.LFE51-.LFB51
 2235 045b 01       		.uleb128 0x1
 2236 045c 9C       		.byte	0x9c
 2237 045d 1B       		.uleb128 0x1b
 2238 045e 1E030000 		.4byte	.LASF55
 2239 0462 01       		.byte	0x1
 2240 0463 2301     		.2byte	0x123
 2241 0465 00000000 		.4byte	.LFB52
 2242 0469 26000000 		.4byte	.LFE52-.LFB52
 2243 046d 01       		.uleb128 0x1
 2244 046e 9C       		.byte	0x9c
 2245 046f 1B       		.uleb128 0x1b
 2246 0470 40030000 		.4byte	.LASF56
 2247 0474 01       		.byte	0x1
 2248 0475 2A01     		.2byte	0x12a
 2249 0477 00000000 		.4byte	.LFB53
 2250 047b 26000000 		.4byte	.LFE53-.LFB53
 2251 047f 01       		.uleb128 0x1
 2252 0480 9C       		.byte	0x9c
 2253 0481 1B       		.uleb128 0x1b
ARM GAS  C:\Users\essele\AppData\Local\Temp\ccfSlmaE.s 			page 49


 2254 0482 21010000 		.4byte	.LASF57
 2255 0486 01       		.byte	0x1
 2256 0487 3201     		.2byte	0x132
 2257 0489 00000000 		.4byte	.LFB54
 2258 048d 2C000000 		.4byte	.LFE54-.LFB54
 2259 0491 01       		.uleb128 0x1
 2260 0492 9C       		.byte	0x9c
 2261 0493 1C       		.uleb128 0x1c
 2262 0494 12000000 		.4byte	.LASF58
 2263 0498 01       		.byte	0x1
 2264 0499 3B01     		.2byte	0x13b
 2265 049b 00000000 		.4byte	.LFB55
 2266 049f 60000000 		.4byte	.LFE55-.LFB55
 2267 04a3 01       		.uleb128 0x1
 2268 04a4 9C       		.byte	0x9c
 2269 04a5 B9040000 		.4byte	0x4b9
 2270 04a9 1D       		.uleb128 0x1d
 2271 04aa 38000000 		.4byte	.LASF24
 2272 04ae 01       		.byte	0x1
 2273 04af 3B01     		.2byte	0x13b
 2274 04b1 8C000000 		.4byte	0x8c
 2275 04b5 02       		.uleb128 0x2
 2276 04b6 91       		.byte	0x91
 2277 04b7 77       		.sleb128 -9
 2278 04b8 00       		.byte	0
 2279 04b9 1C       		.uleb128 0x1c
 2280 04ba 63010000 		.4byte	.LASF59
 2281 04be 01       		.byte	0x1
 2282 04bf 5201     		.2byte	0x152
 2283 04c1 00000000 		.4byte	.LFB56
 2284 04c5 68000000 		.4byte	.LFE56-.LFB56
 2285 04c9 01       		.uleb128 0x1
 2286 04ca 9C       		.byte	0x9c
 2287 04cb DF040000 		.4byte	0x4df
 2288 04cf 1D       		.uleb128 0x1d
 2289 04d0 38000000 		.4byte	.LASF24
 2290 04d4 01       		.byte	0x1
 2291 04d5 5201     		.2byte	0x152
 2292 04d7 8C000000 		.4byte	0x8c
 2293 04db 02       		.uleb128 0x2
 2294 04dc 91       		.byte	0x91
 2295 04dd 77       		.sleb128 -9
 2296 04de 00       		.byte	0
 2297 04df 1E       		.uleb128 0x1e
 2298 04e0 D6030000 		.4byte	.LASF60
 2299 04e4 01       		.byte	0x1
 2300 04e5 6F01     		.2byte	0x16f
 2301 04e7 94020000 		.4byte	0x294
 2302 04eb 00000000 		.4byte	.LFB57
 2303 04ef 12000000 		.4byte	.LFE57-.LFB57
 2304 04f3 01       		.uleb128 0x1
 2305 04f4 9C       		.byte	0x9c
 2306 04f5 1C       		.uleb128 0x1c
 2307 04f6 F2000000 		.4byte	.LASF61
 2308 04fa 01       		.byte	0x1
 2309 04fb 7A01     		.2byte	0x17a
 2310 04fd 00000000 		.4byte	.LFB58
ARM GAS  C:\Users\essele\AppData\Local\Temp\ccfSlmaE.s 			page 50


 2311 0501 70000000 		.4byte	.LFE58-.LFB58
 2312 0505 01       		.uleb128 0x1
 2313 0506 9C       		.byte	0x9c
 2314 0507 6C050000 		.4byte	0x56c
 2315 050b 1D       		.uleb128 0x1d
 2316 050c 38000000 		.4byte	.LASF24
 2317 0510 01       		.byte	0x1
 2318 0511 7A01     		.2byte	0x17a
 2319 0513 8C000000 		.4byte	0x8c
 2320 0517 02       		.uleb128 0x2
 2321 0518 91       		.byte	0x91
 2322 0519 67       		.sleb128 -25
 2323 051a 1F       		.uleb128 0x1f
 2324 051b 62756600 		.ascii	"buf\000"
 2325 051f 01       		.byte	0x1
 2326 0520 7A01     		.2byte	0x17a
 2327 0522 6C050000 		.4byte	0x56c
 2328 0526 02       		.uleb128 0x2
 2329 0527 91       		.byte	0x91
 2330 0528 60       		.sleb128 -32
 2331 0529 1F       		.uleb128 0x1f
 2332 052a 6C656E00 		.ascii	"len\000"
 2333 052e 01       		.byte	0x1
 2334 052f 7A01     		.2byte	0x17a
 2335 0531 7E000000 		.4byte	0x7e
 2336 0535 02       		.uleb128 0x2
 2337 0536 91       		.byte	0x91
 2338 0537 5C       		.sleb128 -36
 2339 0538 20       		.uleb128 0x20
 2340 0539 7000     		.ascii	"p\000"
 2341 053b 01       		.byte	0x1
 2342 053c 7B01     		.2byte	0x17b
 2343 053e ED000000 		.4byte	0xed
 2344 0542 02       		.uleb128 0x2
 2345 0543 91       		.byte	0x91
 2346 0544 70       		.sleb128 -16
 2347 0545 21       		.uleb128 0x21
 2348 0546 07040000 		.4byte	.LASF62
 2349 054a 01       		.byte	0x1
 2350 054b 7D01     		.2byte	0x17d
 2351 054d 7E000000 		.4byte	0x7e
 2352 0551 02       		.uleb128 0x2
 2353 0552 91       		.byte	0x91
 2354 0553 6C       		.sleb128 -20
 2355 0554 22       		.uleb128 0x22
 2356 0555 36000000 		.4byte	.LBB2
 2357 0559 2E000000 		.4byte	.LBE2-.LBB2
 2358 055d 20       		.uleb128 0x20
 2359 055e 6900     		.ascii	"i\000"
 2360 0560 01       		.byte	0x1
 2361 0561 8101     		.2byte	0x181
 2362 0563 7E000000 		.4byte	0x7e
 2363 0567 02       		.uleb128 0x2
 2364 0568 91       		.byte	0x91
 2365 0569 74       		.sleb128 -12
 2366 056a 00       		.byte	0
 2367 056b 00       		.byte	0
ARM GAS  C:\Users\essele\AppData\Local\Temp\ccfSlmaE.s 			page 51


 2368 056c 07       		.uleb128 0x7
 2369 056d 04       		.byte	0x4
 2370 056e 72050000 		.4byte	0x572
 2371 0572 23       		.uleb128 0x23
 2372 0573 8C000000 		.4byte	0x8c
 2373 0577 1C       		.uleb128 0x1c
 2374 0578 F7030000 		.4byte	.LASF63
 2375 057c 01       		.byte	0x1
 2376 057d 8501     		.2byte	0x185
 2377 057f 00000000 		.4byte	.LFB59
 2378 0583 60000000 		.4byte	.LFE59-.LFB59
 2379 0587 01       		.uleb128 0x1
 2380 0588 9C       		.byte	0x9c
 2381 0589 E1050000 		.4byte	0x5e1
 2382 058d 1F       		.uleb128 0x1f
 2383 058e 62756600 		.ascii	"buf\000"
 2384 0592 01       		.byte	0x1
 2385 0593 8501     		.2byte	0x185
 2386 0595 6C050000 		.4byte	0x56c
 2387 0599 02       		.uleb128 0x2
 2388 059a 91       		.byte	0x91
 2389 059b 6C       		.sleb128 -20
 2390 059c 1F       		.uleb128 0x1f
 2391 059d 6C656E00 		.ascii	"len\000"
 2392 05a1 01       		.byte	0x1
 2393 05a2 8501     		.2byte	0x185
 2394 05a4 7E000000 		.4byte	0x7e
 2395 05a8 02       		.uleb128 0x2
 2396 05a9 91       		.byte	0x91
 2397 05aa 68       		.sleb128 -24
 2398 05ab 1D       		.uleb128 0x1d
 2399 05ac CC020000 		.4byte	.LASF48
 2400 05b0 01       		.byte	0x1
 2401 05b1 8501     		.2byte	0x185
 2402 05b3 7E000000 		.4byte	0x7e
 2403 05b7 02       		.uleb128 0x2
 2404 05b8 91       		.byte	0x91
 2405 05b9 64       		.sleb128 -28
 2406 05ba 21       		.uleb128 0x21
 2407 05bb 07040000 		.4byte	.LASF62
 2408 05bf 01       		.byte	0x1
 2409 05c0 8601     		.2byte	0x186
 2410 05c2 7E000000 		.4byte	0x7e
 2411 05c6 02       		.uleb128 0x2
 2412 05c7 91       		.byte	0x91
 2413 05c8 70       		.sleb128 -16
 2414 05c9 22       		.uleb128 0x22
 2415 05ca 26000000 		.4byte	.LBB3
 2416 05ce 2E000000 		.4byte	.LBE3-.LBB3
 2417 05d2 20       		.uleb128 0x20
 2418 05d3 6900     		.ascii	"i\000"
 2419 05d5 01       		.byte	0x1
 2420 05d6 8801     		.2byte	0x188
 2421 05d8 7E000000 		.4byte	0x7e
 2422 05dc 02       		.uleb128 0x2
 2423 05dd 91       		.byte	0x91
 2424 05de 74       		.sleb128 -12
ARM GAS  C:\Users\essele\AppData\Local\Temp\ccfSlmaE.s 			page 52


 2425 05df 00       		.byte	0
 2426 05e0 00       		.byte	0
 2427 05e1 24       		.uleb128 0x24
 2428 05e2 9C020000 		.4byte	.LASF64
 2429 05e6 01       		.byte	0x1
 2430 05e7 9801     		.2byte	0x198
 2431 05e9 7E000000 		.4byte	0x7e
 2432 05ed 00000000 		.4byte	.LFB60
 2433 05f1 BC000000 		.4byte	.LFE60-.LFB60
 2434 05f5 01       		.uleb128 0x1
 2435 05f6 9C       		.byte	0x9c
 2436 05f7 50060000 		.4byte	0x650
 2437 05fb 1D       		.uleb128 0x1d
 2438 05fc 5F000000 		.4byte	.LASF65
 2439 0600 01       		.byte	0x1
 2440 0601 9801     		.2byte	0x198
 2441 0603 7E000000 		.4byte	0x7e
 2442 0607 02       		.uleb128 0x2
 2443 0608 91       		.byte	0x91
 2444 0609 64       		.sleb128 -28
 2445 060a 1F       		.uleb128 0x1f
 2446 060b 656E6400 		.ascii	"end\000"
 2447 060f 01       		.byte	0x1
 2448 0610 9801     		.2byte	0x198
 2449 0612 D5030000 		.4byte	0x3d5
 2450 0616 02       		.uleb128 0x2
 2451 0617 91       		.byte	0x91
 2452 0618 60       		.sleb128 -32
 2453 0619 20       		.uleb128 0x20
 2454 061a 6900     		.ascii	"i\000"
 2455 061c 01       		.byte	0x1
 2456 061d 9901     		.2byte	0x199
 2457 061f 7E000000 		.4byte	0x7e
 2458 0623 02       		.uleb128 0x2
 2459 0624 91       		.byte	0x91
 2460 0625 74       		.sleb128 -12
 2461 0626 25       		.uleb128 0x25
 2462 0627 6F6B00   		.ascii	"ok\000"
 2463 062a 01       		.byte	0x1
 2464 062b 9A01     		.2byte	0x19a
 2465 062d 7E000000 		.4byte	0x7e
 2466 0631 20       		.uleb128 0x20
 2467 0632 656F6900 		.ascii	"eoi\000"
 2468 0636 01       		.byte	0x1
 2469 0637 9B01     		.2byte	0x19b
 2470 0639 7E000000 		.4byte	0x7e
 2471 063d 02       		.uleb128 0x2
 2472 063e 91       		.byte	0x91
 2473 063f 6C       		.sleb128 -20
 2474 0640 20       		.uleb128 0x20
 2475 0641 62756600 		.ascii	"buf\000"
 2476 0645 01       		.byte	0x1
 2477 0646 9C01     		.2byte	0x19c
 2478 0648 C9010000 		.4byte	0x1c9
 2479 064c 02       		.uleb128 0x2
 2480 064d 91       		.byte	0x91
 2481 064e 70       		.sleb128 -16
ARM GAS  C:\Users\essele\AppData\Local\Temp\ccfSlmaE.s 			page 53


 2482 064f 00       		.byte	0
 2483 0650 24       		.uleb128 0x24
 2484 0651 27020000 		.4byte	.LASF66
 2485 0655 01       		.byte	0x1
 2486 0656 CB01     		.2byte	0x1cb
 2487 0658 7E000000 		.4byte	0x7e
 2488 065c 00000000 		.4byte	.LFB61
 2489 0660 62000000 		.4byte	.LFE61-.LFB61
 2490 0664 01       		.uleb128 0x1
 2491 0665 9C       		.byte	0x9c
 2492 0666 B4060000 		.4byte	0x6b4
 2493 066a 1D       		.uleb128 0x1d
 2494 066b 5E010000 		.4byte	.LASF67
 2495 066f 01       		.byte	0x1
 2496 0670 CB01     		.2byte	0x1cb
 2497 0672 C9010000 		.4byte	0x1c9
 2498 0676 02       		.uleb128 0x2
 2499 0677 91       		.byte	0x91
 2500 0678 6C       		.sleb128 -20
 2501 0679 1D       		.uleb128 0x1d
 2502 067a C5020000 		.4byte	.LASF68
 2503 067e 01       		.byte	0x1
 2504 067f CB01     		.2byte	0x1cb
 2505 0681 7E000000 		.4byte	0x7e
 2506 0685 02       		.uleb128 0x2
 2507 0686 91       		.byte	0x91
 2508 0687 68       		.sleb128 -24
 2509 0688 1F       		.uleb128 0x1f
 2510 0689 656E6400 		.ascii	"end\000"
 2511 068d 01       		.byte	0x1
 2512 068e CB01     		.2byte	0x1cb
 2513 0690 D5030000 		.4byte	0x3d5
 2514 0694 02       		.uleb128 0x2
 2515 0695 91       		.byte	0x91
 2516 0696 64       		.sleb128 -28
 2517 0697 20       		.uleb128 0x20
 2518 0698 656F6900 		.ascii	"eoi\000"
 2519 069c 01       		.byte	0x1
 2520 069d CC01     		.2byte	0x1cc
 2521 069f 7E000000 		.4byte	0x7e
 2522 06a3 02       		.uleb128 0x2
 2523 06a4 91       		.byte	0x91
 2524 06a5 70       		.sleb128 -16
 2525 06a6 20       		.uleb128 0x20
 2526 06a7 6900     		.ascii	"i\000"
 2527 06a9 01       		.byte	0x1
 2528 06aa CD01     		.2byte	0x1cd
 2529 06ac 7E000000 		.4byte	0x7e
 2530 06b0 02       		.uleb128 0x2
 2531 06b1 91       		.byte	0x91
 2532 06b2 74       		.sleb128 -12
 2533 06b3 00       		.byte	0
 2534 06b4 26       		.uleb128 0x26
 2535 06b5 0A010000 		.4byte	.LASF69
 2536 06b9 05       		.byte	0x5
 2537 06ba 1A       		.byte	0x1a
 2538 06bb F3000000 		.4byte	0xf3
ARM GAS  C:\Users\essele\AppData\Local\Temp\ccfSlmaE.s 			page 54


 2539 06bf 27       		.uleb128 0x27
 2540 06c0 8C000000 		.4byte	0x8c
 2541 06c4 CF060000 		.4byte	0x6cf
 2542 06c8 28       		.uleb128 0x28
 2543 06c9 E6000000 		.4byte	0xe6
 2544 06cd FF       		.byte	0xff
 2545 06ce 00       		.byte	0
 2546 06cf 29       		.uleb128 0x29
 2547 06d0 40000000 		.4byte	.LASF70
 2548 06d4 01       		.byte	0x1
 2549 06d5 18       		.byte	0x18
 2550 06d6 BF060000 		.4byte	0x6bf
 2551 06da 05       		.uleb128 0x5
 2552 06db 03       		.byte	0x3
 2553 06dc 00000000 		.4byte	gpib_buffer
 2554 06e0 29       		.uleb128 0x29
 2555 06e1 91020000 		.4byte	.LASF71
 2556 06e5 01       		.byte	0x1
 2557 06e6 28       		.byte	0x28
 2558 06e7 8C000000 		.4byte	0x8c
 2559 06eb 05       		.uleb128 0x5
 2560 06ec 03       		.byte	0x3
 2561 06ed 00000000 		.4byte	my_address
 2562 06f1 29       		.uleb128 0x29
 2563 06f2 65030000 		.4byte	.LASF72
 2564 06f6 01       		.byte	0x1
 2565 06f7 40       		.byte	0x40
 2566 06f8 7E000000 		.4byte	0x7e
 2567 06fc 05       		.uleb128 0x5
 2568 06fd 03       		.byte	0x3
 2569 06fe 00000000 		.4byte	_gpib_mode
 2570 0702 00       		.byte	0
 2571              		.section	.debug_abbrev,"",%progbits
 2572              	.Ldebug_abbrev0:
 2573 0000 01       		.uleb128 0x1
 2574 0001 11       		.uleb128 0x11
 2575 0002 01       		.byte	0x1
 2576 0003 25       		.uleb128 0x25
 2577 0004 0E       		.uleb128 0xe
 2578 0005 13       		.uleb128 0x13
 2579 0006 0B       		.uleb128 0xb
 2580 0007 03       		.uleb128 0x3
 2581 0008 0E       		.uleb128 0xe
 2582 0009 1B       		.uleb128 0x1b
 2583 000a 0E       		.uleb128 0xe
 2584 000b 55       		.uleb128 0x55
 2585 000c 17       		.uleb128 0x17
 2586 000d 11       		.uleb128 0x11
 2587 000e 01       		.uleb128 0x1
 2588 000f 10       		.uleb128 0x10
 2589 0010 17       		.uleb128 0x17
 2590 0011 00       		.byte	0
 2591 0012 00       		.byte	0
 2592 0013 02       		.uleb128 0x2
 2593 0014 24       		.uleb128 0x24
 2594 0015 00       		.byte	0
 2595 0016 0B       		.uleb128 0xb
ARM GAS  C:\Users\essele\AppData\Local\Temp\ccfSlmaE.s 			page 55


 2596 0017 0B       		.uleb128 0xb
 2597 0018 3E       		.uleb128 0x3e
 2598 0019 0B       		.uleb128 0xb
 2599 001a 03       		.uleb128 0x3
 2600 001b 0E       		.uleb128 0xe
 2601 001c 00       		.byte	0
 2602 001d 00       		.byte	0
 2603 001e 03       		.uleb128 0x3
 2604 001f 16       		.uleb128 0x16
 2605 0020 00       		.byte	0
 2606 0021 03       		.uleb128 0x3
 2607 0022 0E       		.uleb128 0xe
 2608 0023 3A       		.uleb128 0x3a
 2609 0024 0B       		.uleb128 0xb
 2610 0025 3B       		.uleb128 0x3b
 2611 0026 0B       		.uleb128 0xb
 2612 0027 49       		.uleb128 0x49
 2613 0028 13       		.uleb128 0x13
 2614 0029 00       		.byte	0
 2615 002a 00       		.byte	0
 2616 002b 04       		.uleb128 0x4
 2617 002c 24       		.uleb128 0x24
 2618 002d 00       		.byte	0
 2619 002e 0B       		.uleb128 0xb
 2620 002f 0B       		.uleb128 0xb
 2621 0030 3E       		.uleb128 0x3e
 2622 0031 0B       		.uleb128 0xb
 2623 0032 03       		.uleb128 0x3
 2624 0033 08       		.uleb128 0x8
 2625 0034 00       		.byte	0
 2626 0035 00       		.byte	0
 2627 0036 05       		.uleb128 0x5
 2628 0037 16       		.uleb128 0x16
 2629 0038 00       		.byte	0
 2630 0039 03       		.uleb128 0x3
 2631 003a 0E       		.uleb128 0xe
 2632 003b 3A       		.uleb128 0x3a
 2633 003c 0B       		.uleb128 0xb
 2634 003d 3B       		.uleb128 0x3b
 2635 003e 05       		.uleb128 0x5
 2636 003f 49       		.uleb128 0x49
 2637 0040 13       		.uleb128 0x13
 2638 0041 00       		.byte	0
 2639 0042 00       		.byte	0
 2640 0043 06       		.uleb128 0x6
 2641 0044 35       		.uleb128 0x35
 2642 0045 00       		.byte	0
 2643 0046 49       		.uleb128 0x49
 2644 0047 13       		.uleb128 0x13
 2645 0048 00       		.byte	0
 2646 0049 00       		.byte	0
 2647 004a 07       		.uleb128 0x7
 2648 004b 0F       		.uleb128 0xf
 2649 004c 00       		.byte	0
 2650 004d 0B       		.uleb128 0xb
 2651 004e 0B       		.uleb128 0xb
 2652 004f 49       		.uleb128 0x49
ARM GAS  C:\Users\essele\AppData\Local\Temp\ccfSlmaE.s 			page 56


 2653 0050 13       		.uleb128 0x13
 2654 0051 00       		.byte	0
 2655 0052 00       		.byte	0
 2656 0053 08       		.uleb128 0x8
 2657 0054 13       		.uleb128 0x13
 2658 0055 01       		.byte	0x1
 2659 0056 03       		.uleb128 0x3
 2660 0057 0E       		.uleb128 0xe
 2661 0058 0B       		.uleb128 0xb
 2662 0059 0B       		.uleb128 0xb
 2663 005a 3A       		.uleb128 0x3a
 2664 005b 0B       		.uleb128 0xb
 2665 005c 3B       		.uleb128 0x3b
 2666 005d 0B       		.uleb128 0xb
 2667 005e 01       		.uleb128 0x1
 2668 005f 13       		.uleb128 0x13
 2669 0060 00       		.byte	0
 2670 0061 00       		.byte	0
 2671 0062 09       		.uleb128 0x9
 2672 0063 0D       		.uleb128 0xd
 2673 0064 00       		.byte	0
 2674 0065 03       		.uleb128 0x3
 2675 0066 0E       		.uleb128 0xe
 2676 0067 3A       		.uleb128 0x3a
 2677 0068 0B       		.uleb128 0xb
 2678 0069 3B       		.uleb128 0x3b
 2679 006a 0B       		.uleb128 0xb
 2680 006b 49       		.uleb128 0x49
 2681 006c 13       		.uleb128 0x13
 2682 006d 38       		.uleb128 0x38
 2683 006e 0B       		.uleb128 0xb
 2684 006f 00       		.byte	0
 2685 0070 00       		.byte	0
 2686 0071 0A       		.uleb128 0xa
 2687 0072 0D       		.uleb128 0xd
 2688 0073 00       		.byte	0
 2689 0074 03       		.uleb128 0x3
 2690 0075 08       		.uleb128 0x8
 2691 0076 3A       		.uleb128 0x3a
 2692 0077 0B       		.uleb128 0xb
 2693 0078 3B       		.uleb128 0x3b
 2694 0079 0B       		.uleb128 0xb
 2695 007a 49       		.uleb128 0x49
 2696 007b 13       		.uleb128 0x13
 2697 007c 38       		.uleb128 0x38
 2698 007d 0B       		.uleb128 0xb
 2699 007e 00       		.byte	0
 2700 007f 00       		.byte	0
 2701 0080 0B       		.uleb128 0xb
 2702 0081 04       		.uleb128 0x4
 2703 0082 01       		.byte	0x1
 2704 0083 0B       		.uleb128 0xb
 2705 0084 0B       		.uleb128 0xb
 2706 0085 49       		.uleb128 0x49
 2707 0086 13       		.uleb128 0x13
 2708 0087 3A       		.uleb128 0x3a
 2709 0088 0B       		.uleb128 0xb
ARM GAS  C:\Users\essele\AppData\Local\Temp\ccfSlmaE.s 			page 57


 2710 0089 3B       		.uleb128 0x3b
 2711 008a 0B       		.uleb128 0xb
 2712 008b 01       		.uleb128 0x1
 2713 008c 13       		.uleb128 0x13
 2714 008d 00       		.byte	0
 2715 008e 00       		.byte	0
 2716 008f 0C       		.uleb128 0xc
 2717 0090 28       		.uleb128 0x28
 2718 0091 00       		.byte	0
 2719 0092 03       		.uleb128 0x3
 2720 0093 08       		.uleb128 0x8
 2721 0094 1C       		.uleb128 0x1c
 2722 0095 0B       		.uleb128 0xb
 2723 0096 00       		.byte	0
 2724 0097 00       		.byte	0
 2725 0098 0D       		.uleb128 0xd
 2726 0099 28       		.uleb128 0x28
 2727 009a 00       		.byte	0
 2728 009b 03       		.uleb128 0x3
 2729 009c 0E       		.uleb128 0xe
 2730 009d 1C       		.uleb128 0x1c
 2731 009e 0B       		.uleb128 0xb
 2732 009f 00       		.byte	0
 2733 00a0 00       		.byte	0
 2734 00a1 0E       		.uleb128 0xe
 2735 00a2 2E       		.uleb128 0x2e
 2736 00a3 00       		.byte	0
 2737 00a4 3F       		.uleb128 0x3f
 2738 00a5 19       		.uleb128 0x19
 2739 00a6 03       		.uleb128 0x3
 2740 00a7 0E       		.uleb128 0xe
 2741 00a8 3A       		.uleb128 0x3a
 2742 00a9 0B       		.uleb128 0xb
 2743 00aa 3B       		.uleb128 0x3b
 2744 00ab 0B       		.uleb128 0xb
 2745 00ac 49       		.uleb128 0x49
 2746 00ad 13       		.uleb128 0x13
 2747 00ae 11       		.uleb128 0x11
 2748 00af 01       		.uleb128 0x1
 2749 00b0 12       		.uleb128 0x12
 2750 00b1 06       		.uleb128 0x6
 2751 00b2 40       		.uleb128 0x40
 2752 00b3 18       		.uleb128 0x18
 2753 00b4 9742     		.uleb128 0x2117
 2754 00b6 19       		.uleb128 0x19
 2755 00b7 00       		.byte	0
 2756 00b8 00       		.byte	0
 2757 00b9 0F       		.uleb128 0xf
 2758 00ba 2E       		.uleb128 0x2e
 2759 00bb 00       		.byte	0
 2760 00bc 3F       		.uleb128 0x3f
 2761 00bd 19       		.uleb128 0x19
 2762 00be 03       		.uleb128 0x3
 2763 00bf 0E       		.uleb128 0xe
 2764 00c0 3A       		.uleb128 0x3a
 2765 00c1 0B       		.uleb128 0xb
 2766 00c2 3B       		.uleb128 0x3b
ARM GAS  C:\Users\essele\AppData\Local\Temp\ccfSlmaE.s 			page 58


 2767 00c3 0B       		.uleb128 0xb
 2768 00c4 11       		.uleb128 0x11
 2769 00c5 01       		.uleb128 0x1
 2770 00c6 12       		.uleb128 0x12
 2771 00c7 06       		.uleb128 0x6
 2772 00c8 40       		.uleb128 0x40
 2773 00c9 18       		.uleb128 0x18
 2774 00ca 9742     		.uleb128 0x2117
 2775 00cc 19       		.uleb128 0x19
 2776 00cd 00       		.byte	0
 2777 00ce 00       		.byte	0
 2778 00cf 10       		.uleb128 0x10
 2779 00d0 2E       		.uleb128 0x2e
 2780 00d1 00       		.byte	0
 2781 00d2 3F       		.uleb128 0x3f
 2782 00d3 19       		.uleb128 0x19
 2783 00d4 03       		.uleb128 0x3
 2784 00d5 0E       		.uleb128 0xe
 2785 00d6 3A       		.uleb128 0x3a
 2786 00d7 0B       		.uleb128 0xb
 2787 00d8 3B       		.uleb128 0x3b
 2788 00d9 0B       		.uleb128 0xb
 2789 00da 11       		.uleb128 0x11
 2790 00db 01       		.uleb128 0x1
 2791 00dc 12       		.uleb128 0x12
 2792 00dd 06       		.uleb128 0x6
 2793 00de 40       		.uleb128 0x40
 2794 00df 18       		.uleb128 0x18
 2795 00e0 9642     		.uleb128 0x2116
 2796 00e2 19       		.uleb128 0x19
 2797 00e3 00       		.byte	0
 2798 00e4 00       		.byte	0
 2799 00e5 11       		.uleb128 0x11
 2800 00e6 2E       		.uleb128 0x2e
 2801 00e7 01       		.byte	0x1
 2802 00e8 3F       		.uleb128 0x3f
 2803 00e9 19       		.uleb128 0x19
 2804 00ea 03       		.uleb128 0x3
 2805 00eb 0E       		.uleb128 0xe
 2806 00ec 3A       		.uleb128 0x3a
 2807 00ed 0B       		.uleb128 0xb
 2808 00ee 3B       		.uleb128 0x3b
 2809 00ef 0B       		.uleb128 0xb
 2810 00f0 27       		.uleb128 0x27
 2811 00f1 19       		.uleb128 0x19
 2812 00f2 11       		.uleb128 0x11
 2813 00f3 01       		.uleb128 0x1
 2814 00f4 12       		.uleb128 0x12
 2815 00f5 06       		.uleb128 0x6
 2816 00f6 40       		.uleb128 0x40
 2817 00f7 18       		.uleb128 0x18
 2818 00f8 9742     		.uleb128 0x2117
 2819 00fa 19       		.uleb128 0x19
 2820 00fb 01       		.uleb128 0x1
 2821 00fc 13       		.uleb128 0x13
 2822 00fd 00       		.byte	0
 2823 00fe 00       		.byte	0
ARM GAS  C:\Users\essele\AppData\Local\Temp\ccfSlmaE.s 			page 59


 2824 00ff 12       		.uleb128 0x12
 2825 0100 05       		.uleb128 0x5
 2826 0101 00       		.byte	0
 2827 0102 03       		.uleb128 0x3
 2828 0103 0E       		.uleb128 0xe
 2829 0104 3A       		.uleb128 0x3a
 2830 0105 0B       		.uleb128 0xb
 2831 0106 3B       		.uleb128 0x3b
 2832 0107 0B       		.uleb128 0xb
 2833 0108 49       		.uleb128 0x49
 2834 0109 13       		.uleb128 0x13
 2835 010a 02       		.uleb128 0x2
 2836 010b 18       		.uleb128 0x18
 2837 010c 00       		.byte	0
 2838 010d 00       		.byte	0
 2839 010e 13       		.uleb128 0x13
 2840 010f 2E       		.uleb128 0x2e
 2841 0110 01       		.byte	0x1
 2842 0111 3F       		.uleb128 0x3f
 2843 0112 19       		.uleb128 0x19
 2844 0113 03       		.uleb128 0x3
 2845 0114 0E       		.uleb128 0xe
 2846 0115 3A       		.uleb128 0x3a
 2847 0116 0B       		.uleb128 0xb
 2848 0117 3B       		.uleb128 0x3b
 2849 0118 0B       		.uleb128 0xb
 2850 0119 49       		.uleb128 0x49
 2851 011a 13       		.uleb128 0x13
 2852 011b 11       		.uleb128 0x11
 2853 011c 01       		.uleb128 0x1
 2854 011d 12       		.uleb128 0x12
 2855 011e 06       		.uleb128 0x6
 2856 011f 40       		.uleb128 0x40
 2857 0120 18       		.uleb128 0x18
 2858 0121 9742     		.uleb128 0x2117
 2859 0123 19       		.uleb128 0x19
 2860 0124 01       		.uleb128 0x1
 2861 0125 13       		.uleb128 0x13
 2862 0126 00       		.byte	0
 2863 0127 00       		.byte	0
 2864 0128 14       		.uleb128 0x14
 2865 0129 34       		.uleb128 0x34
 2866 012a 00       		.byte	0
 2867 012b 03       		.uleb128 0x3
 2868 012c 08       		.uleb128 0x8
 2869 012d 3A       		.uleb128 0x3a
 2870 012e 0B       		.uleb128 0xb
 2871 012f 3B       		.uleb128 0x3b
 2872 0130 0B       		.uleb128 0xb
 2873 0131 49       		.uleb128 0x49
 2874 0132 13       		.uleb128 0x13
 2875 0133 02       		.uleb128 0x2
 2876 0134 18       		.uleb128 0x18
 2877 0135 00       		.byte	0
 2878 0136 00       		.byte	0
 2879 0137 15       		.uleb128 0x15
 2880 0138 2E       		.uleb128 0x2e
ARM GAS  C:\Users\essele\AppData\Local\Temp\ccfSlmaE.s 			page 60


 2881 0139 01       		.byte	0x1
 2882 013a 3F       		.uleb128 0x3f
 2883 013b 19       		.uleb128 0x19
 2884 013c 03       		.uleb128 0x3
 2885 013d 0E       		.uleb128 0xe
 2886 013e 3A       		.uleb128 0x3a
 2887 013f 0B       		.uleb128 0xb
 2888 0140 3B       		.uleb128 0x3b
 2889 0141 0B       		.uleb128 0xb
 2890 0142 27       		.uleb128 0x27
 2891 0143 19       		.uleb128 0x19
 2892 0144 49       		.uleb128 0x49
 2893 0145 13       		.uleb128 0x13
 2894 0146 11       		.uleb128 0x11
 2895 0147 01       		.uleb128 0x1
 2896 0148 12       		.uleb128 0x12
 2897 0149 06       		.uleb128 0x6
 2898 014a 40       		.uleb128 0x40
 2899 014b 18       		.uleb128 0x18
 2900 014c 9742     		.uleb128 0x2117
 2901 014e 19       		.uleb128 0x19
 2902 014f 01       		.uleb128 0x1
 2903 0150 13       		.uleb128 0x13
 2904 0151 00       		.byte	0
 2905 0152 00       		.byte	0
 2906 0153 16       		.uleb128 0x16
 2907 0154 2E       		.uleb128 0x2e
 2908 0155 01       		.byte	0x1
 2909 0156 3F       		.uleb128 0x3f
 2910 0157 19       		.uleb128 0x19
 2911 0158 03       		.uleb128 0x3
 2912 0159 0E       		.uleb128 0xe
 2913 015a 3A       		.uleb128 0x3a
 2914 015b 0B       		.uleb128 0xb
 2915 015c 3B       		.uleb128 0x3b
 2916 015d 0B       		.uleb128 0xb
 2917 015e 49       		.uleb128 0x49
 2918 015f 13       		.uleb128 0x13
 2919 0160 11       		.uleb128 0x11
 2920 0161 01       		.uleb128 0x1
 2921 0162 12       		.uleb128 0x12
 2922 0163 06       		.uleb128 0x6
 2923 0164 40       		.uleb128 0x40
 2924 0165 18       		.uleb128 0x18
 2925 0166 9642     		.uleb128 0x2116
 2926 0168 19       		.uleb128 0x19
 2927 0169 01       		.uleb128 0x1
 2928 016a 13       		.uleb128 0x13
 2929 016b 00       		.byte	0
 2930 016c 00       		.byte	0
 2931 016d 17       		.uleb128 0x17
 2932 016e 34       		.uleb128 0x34
 2933 016f 00       		.byte	0
 2934 0170 03       		.uleb128 0x3
 2935 0171 0E       		.uleb128 0xe
 2936 0172 3A       		.uleb128 0x3a
 2937 0173 0B       		.uleb128 0xb
ARM GAS  C:\Users\essele\AppData\Local\Temp\ccfSlmaE.s 			page 61


 2938 0174 3B       		.uleb128 0x3b
 2939 0175 0B       		.uleb128 0xb
 2940 0176 49       		.uleb128 0x49
 2941 0177 13       		.uleb128 0x13
 2942 0178 02       		.uleb128 0x2
 2943 0179 18       		.uleb128 0x18
 2944 017a 00       		.byte	0
 2945 017b 00       		.byte	0
 2946 017c 18       		.uleb128 0x18
 2947 017d 2E       		.uleb128 0x2e
 2948 017e 01       		.byte	0x1
 2949 017f 3F       		.uleb128 0x3f
 2950 0180 19       		.uleb128 0x19
 2951 0181 03       		.uleb128 0x3
 2952 0182 0E       		.uleb128 0xe
 2953 0183 3A       		.uleb128 0x3a
 2954 0184 0B       		.uleb128 0xb
 2955 0185 3B       		.uleb128 0x3b
 2956 0186 0B       		.uleb128 0xb
 2957 0187 27       		.uleb128 0x27
 2958 0188 19       		.uleb128 0x19
 2959 0189 49       		.uleb128 0x49
 2960 018a 13       		.uleb128 0x13
 2961 018b 11       		.uleb128 0x11
 2962 018c 01       		.uleb128 0x1
 2963 018d 12       		.uleb128 0x12
 2964 018e 06       		.uleb128 0x6
 2965 018f 40       		.uleb128 0x40
 2966 0190 18       		.uleb128 0x18
 2967 0191 9642     		.uleb128 0x2116
 2968 0193 19       		.uleb128 0x19
 2969 0194 01       		.uleb128 0x1
 2970 0195 13       		.uleb128 0x13
 2971 0196 00       		.byte	0
 2972 0197 00       		.byte	0
 2973 0198 19       		.uleb128 0x19
 2974 0199 0A       		.uleb128 0xa
 2975 019a 00       		.byte	0
 2976 019b 03       		.uleb128 0x3
 2977 019c 0E       		.uleb128 0xe
 2978 019d 3A       		.uleb128 0x3a
 2979 019e 0B       		.uleb128 0xb
 2980 019f 3B       		.uleb128 0x3b
 2981 01a0 0B       		.uleb128 0xb
 2982 01a1 11       		.uleb128 0x11
 2983 01a2 01       		.uleb128 0x1
 2984 01a3 00       		.byte	0
 2985 01a4 00       		.byte	0
 2986 01a5 1A       		.uleb128 0x1a
 2987 01a6 05       		.uleb128 0x5
 2988 01a7 00       		.byte	0
 2989 01a8 03       		.uleb128 0x3
 2990 01a9 08       		.uleb128 0x8
 2991 01aa 3A       		.uleb128 0x3a
 2992 01ab 0B       		.uleb128 0xb
 2993 01ac 3B       		.uleb128 0x3b
 2994 01ad 0B       		.uleb128 0xb
ARM GAS  C:\Users\essele\AppData\Local\Temp\ccfSlmaE.s 			page 62


 2995 01ae 49       		.uleb128 0x49
 2996 01af 13       		.uleb128 0x13
 2997 01b0 02       		.uleb128 0x2
 2998 01b1 18       		.uleb128 0x18
 2999 01b2 00       		.byte	0
 3000 01b3 00       		.byte	0
 3001 01b4 1B       		.uleb128 0x1b
 3002 01b5 2E       		.uleb128 0x2e
 3003 01b6 00       		.byte	0
 3004 01b7 3F       		.uleb128 0x3f
 3005 01b8 19       		.uleb128 0x19
 3006 01b9 03       		.uleb128 0x3
 3007 01ba 0E       		.uleb128 0xe
 3008 01bb 3A       		.uleb128 0x3a
 3009 01bc 0B       		.uleb128 0xb
 3010 01bd 3B       		.uleb128 0x3b
 3011 01be 05       		.uleb128 0x5
 3012 01bf 11       		.uleb128 0x11
 3013 01c0 01       		.uleb128 0x1
 3014 01c1 12       		.uleb128 0x12
 3015 01c2 06       		.uleb128 0x6
 3016 01c3 40       		.uleb128 0x40
 3017 01c4 18       		.uleb128 0x18
 3018 01c5 9642     		.uleb128 0x2116
 3019 01c7 19       		.uleb128 0x19
 3020 01c8 00       		.byte	0
 3021 01c9 00       		.byte	0
 3022 01ca 1C       		.uleb128 0x1c
 3023 01cb 2E       		.uleb128 0x2e
 3024 01cc 01       		.byte	0x1
 3025 01cd 3F       		.uleb128 0x3f
 3026 01ce 19       		.uleb128 0x19
 3027 01cf 03       		.uleb128 0x3
 3028 01d0 0E       		.uleb128 0xe
 3029 01d1 3A       		.uleb128 0x3a
 3030 01d2 0B       		.uleb128 0xb
 3031 01d3 3B       		.uleb128 0x3b
 3032 01d4 05       		.uleb128 0x5
 3033 01d5 27       		.uleb128 0x27
 3034 01d6 19       		.uleb128 0x19
 3035 01d7 11       		.uleb128 0x11
 3036 01d8 01       		.uleb128 0x1
 3037 01d9 12       		.uleb128 0x12
 3038 01da 06       		.uleb128 0x6
 3039 01db 40       		.uleb128 0x40
 3040 01dc 18       		.uleb128 0x18
 3041 01dd 9642     		.uleb128 0x2116
 3042 01df 19       		.uleb128 0x19
 3043 01e0 01       		.uleb128 0x1
 3044 01e1 13       		.uleb128 0x13
 3045 01e2 00       		.byte	0
 3046 01e3 00       		.byte	0
 3047 01e4 1D       		.uleb128 0x1d
 3048 01e5 05       		.uleb128 0x5
 3049 01e6 00       		.byte	0
 3050 01e7 03       		.uleb128 0x3
 3051 01e8 0E       		.uleb128 0xe
ARM GAS  C:\Users\essele\AppData\Local\Temp\ccfSlmaE.s 			page 63


 3052 01e9 3A       		.uleb128 0x3a
 3053 01ea 0B       		.uleb128 0xb
 3054 01eb 3B       		.uleb128 0x3b
 3055 01ec 05       		.uleb128 0x5
 3056 01ed 49       		.uleb128 0x49
 3057 01ee 13       		.uleb128 0x13
 3058 01ef 02       		.uleb128 0x2
 3059 01f0 18       		.uleb128 0x18
 3060 01f1 00       		.byte	0
 3061 01f2 00       		.byte	0
 3062 01f3 1E       		.uleb128 0x1e
 3063 01f4 2E       		.uleb128 0x2e
 3064 01f5 00       		.byte	0
 3065 01f6 3F       		.uleb128 0x3f
 3066 01f7 19       		.uleb128 0x19
 3067 01f8 03       		.uleb128 0x3
 3068 01f9 0E       		.uleb128 0xe
 3069 01fa 3A       		.uleb128 0x3a
 3070 01fb 0B       		.uleb128 0xb
 3071 01fc 3B       		.uleb128 0x3b
 3072 01fd 05       		.uleb128 0x5
 3073 01fe 49       		.uleb128 0x49
 3074 01ff 13       		.uleb128 0x13
 3075 0200 11       		.uleb128 0x11
 3076 0201 01       		.uleb128 0x1
 3077 0202 12       		.uleb128 0x12
 3078 0203 06       		.uleb128 0x6
 3079 0204 40       		.uleb128 0x40
 3080 0205 18       		.uleb128 0x18
 3081 0206 9642     		.uleb128 0x2116
 3082 0208 19       		.uleb128 0x19
 3083 0209 00       		.byte	0
 3084 020a 00       		.byte	0
 3085 020b 1F       		.uleb128 0x1f
 3086 020c 05       		.uleb128 0x5
 3087 020d 00       		.byte	0
 3088 020e 03       		.uleb128 0x3
 3089 020f 08       		.uleb128 0x8
 3090 0210 3A       		.uleb128 0x3a
 3091 0211 0B       		.uleb128 0xb
 3092 0212 3B       		.uleb128 0x3b
 3093 0213 05       		.uleb128 0x5
 3094 0214 49       		.uleb128 0x49
 3095 0215 13       		.uleb128 0x13
 3096 0216 02       		.uleb128 0x2
 3097 0217 18       		.uleb128 0x18
 3098 0218 00       		.byte	0
 3099 0219 00       		.byte	0
 3100 021a 20       		.uleb128 0x20
 3101 021b 34       		.uleb128 0x34
 3102 021c 00       		.byte	0
 3103 021d 03       		.uleb128 0x3
 3104 021e 08       		.uleb128 0x8
 3105 021f 3A       		.uleb128 0x3a
 3106 0220 0B       		.uleb128 0xb
 3107 0221 3B       		.uleb128 0x3b
 3108 0222 05       		.uleb128 0x5
ARM GAS  C:\Users\essele\AppData\Local\Temp\ccfSlmaE.s 			page 64


 3109 0223 49       		.uleb128 0x49
 3110 0224 13       		.uleb128 0x13
 3111 0225 02       		.uleb128 0x2
 3112 0226 18       		.uleb128 0x18
 3113 0227 00       		.byte	0
 3114 0228 00       		.byte	0
 3115 0229 21       		.uleb128 0x21
 3116 022a 34       		.uleb128 0x34
 3117 022b 00       		.byte	0
 3118 022c 03       		.uleb128 0x3
 3119 022d 0E       		.uleb128 0xe
 3120 022e 3A       		.uleb128 0x3a
 3121 022f 0B       		.uleb128 0xb
 3122 0230 3B       		.uleb128 0x3b
 3123 0231 05       		.uleb128 0x5
 3124 0232 49       		.uleb128 0x49
 3125 0233 13       		.uleb128 0x13
 3126 0234 02       		.uleb128 0x2
 3127 0235 18       		.uleb128 0x18
 3128 0236 00       		.byte	0
 3129 0237 00       		.byte	0
 3130 0238 22       		.uleb128 0x22
 3131 0239 0B       		.uleb128 0xb
 3132 023a 01       		.byte	0x1
 3133 023b 11       		.uleb128 0x11
 3134 023c 01       		.uleb128 0x1
 3135 023d 12       		.uleb128 0x12
 3136 023e 06       		.uleb128 0x6
 3137 023f 00       		.byte	0
 3138 0240 00       		.byte	0
 3139 0241 23       		.uleb128 0x23
 3140 0242 26       		.uleb128 0x26
 3141 0243 00       		.byte	0
 3142 0244 49       		.uleb128 0x49
 3143 0245 13       		.uleb128 0x13
 3144 0246 00       		.byte	0
 3145 0247 00       		.byte	0
 3146 0248 24       		.uleb128 0x24
 3147 0249 2E       		.uleb128 0x2e
 3148 024a 01       		.byte	0x1
 3149 024b 3F       		.uleb128 0x3f
 3150 024c 19       		.uleb128 0x19
 3151 024d 03       		.uleb128 0x3
 3152 024e 0E       		.uleb128 0xe
 3153 024f 3A       		.uleb128 0x3a
 3154 0250 0B       		.uleb128 0xb
 3155 0251 3B       		.uleb128 0x3b
 3156 0252 05       		.uleb128 0x5
 3157 0253 27       		.uleb128 0x27
 3158 0254 19       		.uleb128 0x19
 3159 0255 49       		.uleb128 0x49
 3160 0256 13       		.uleb128 0x13
 3161 0257 11       		.uleb128 0x11
 3162 0258 01       		.uleb128 0x1
 3163 0259 12       		.uleb128 0x12
 3164 025a 06       		.uleb128 0x6
 3165 025b 40       		.uleb128 0x40
ARM GAS  C:\Users\essele\AppData\Local\Temp\ccfSlmaE.s 			page 65


 3166 025c 18       		.uleb128 0x18
 3167 025d 9642     		.uleb128 0x2116
 3168 025f 19       		.uleb128 0x19
 3169 0260 01       		.uleb128 0x1
 3170 0261 13       		.uleb128 0x13
 3171 0262 00       		.byte	0
 3172 0263 00       		.byte	0
 3173 0264 25       		.uleb128 0x25
 3174 0265 34       		.uleb128 0x34
 3175 0266 00       		.byte	0
 3176 0267 03       		.uleb128 0x3
 3177 0268 08       		.uleb128 0x8
 3178 0269 3A       		.uleb128 0x3a
 3179 026a 0B       		.uleb128 0xb
 3180 026b 3B       		.uleb128 0x3b
 3181 026c 05       		.uleb128 0x5
 3182 026d 49       		.uleb128 0x49
 3183 026e 13       		.uleb128 0x13
 3184 026f 00       		.byte	0
 3185 0270 00       		.byte	0
 3186 0271 26       		.uleb128 0x26
 3187 0272 34       		.uleb128 0x34
 3188 0273 00       		.byte	0
 3189 0274 03       		.uleb128 0x3
 3190 0275 0E       		.uleb128 0xe
 3191 0276 3A       		.uleb128 0x3a
 3192 0277 0B       		.uleb128 0xb
 3193 0278 3B       		.uleb128 0x3b
 3194 0279 0B       		.uleb128 0xb
 3195 027a 49       		.uleb128 0x49
 3196 027b 13       		.uleb128 0x13
 3197 027c 3F       		.uleb128 0x3f
 3198 027d 19       		.uleb128 0x19
 3199 027e 3C       		.uleb128 0x3c
 3200 027f 19       		.uleb128 0x19
 3201 0280 00       		.byte	0
 3202 0281 00       		.byte	0
 3203 0282 27       		.uleb128 0x27
 3204 0283 01       		.uleb128 0x1
 3205 0284 01       		.byte	0x1
 3206 0285 49       		.uleb128 0x49
 3207 0286 13       		.uleb128 0x13
 3208 0287 01       		.uleb128 0x1
 3209 0288 13       		.uleb128 0x13
 3210 0289 00       		.byte	0
 3211 028a 00       		.byte	0
 3212 028b 28       		.uleb128 0x28
 3213 028c 21       		.uleb128 0x21
 3214 028d 00       		.byte	0
 3215 028e 49       		.uleb128 0x49
 3216 028f 13       		.uleb128 0x13
 3217 0290 2F       		.uleb128 0x2f
 3218 0291 0B       		.uleb128 0xb
 3219 0292 00       		.byte	0
 3220 0293 00       		.byte	0
 3221 0294 29       		.uleb128 0x29
 3222 0295 34       		.uleb128 0x34
ARM GAS  C:\Users\essele\AppData\Local\Temp\ccfSlmaE.s 			page 66


 3223 0296 00       		.byte	0
 3224 0297 03       		.uleb128 0x3
 3225 0298 0E       		.uleb128 0xe
 3226 0299 3A       		.uleb128 0x3a
 3227 029a 0B       		.uleb128 0xb
 3228 029b 3B       		.uleb128 0x3b
 3229 029c 0B       		.uleb128 0xb
 3230 029d 49       		.uleb128 0x49
 3231 029e 13       		.uleb128 0x13
 3232 029f 3F       		.uleb128 0x3f
 3233 02a0 19       		.uleb128 0x19
 3234 02a1 02       		.uleb128 0x2
 3235 02a2 18       		.uleb128 0x18
 3236 02a3 00       		.byte	0
 3237 02a4 00       		.byte	0
 3238 02a5 00       		.byte	0
 3239              		.section	.debug_aranges,"",%progbits
 3240 0000 F4000000 		.4byte	0xf4
 3241 0004 0200     		.2byte	0x2
 3242 0006 00000000 		.4byte	.Ldebug_info0
 3243 000a 04       		.byte	0x4
 3244 000b 00       		.byte	0
 3245 000c 0000     		.2byte	0
 3246 000e 0000     		.2byte	0
 3247 0010 00000000 		.4byte	.LFB34
 3248 0014 10000000 		.4byte	.LFE34-.LFB34
 3249 0018 00000000 		.4byte	.LFB35
 3250 001c 0A000000 		.4byte	.LFE35-.LFB35
 3251 0020 00000000 		.4byte	.LFB36
 3252 0024 10000000 		.4byte	.LFE36-.LFB36
 3253 0028 00000000 		.4byte	.LFB37
 3254 002c 28000000 		.4byte	.LFE37-.LFB37
 3255 0030 00000000 		.4byte	.LFB38
 3256 0034 28000000 		.4byte	.LFE38-.LFB38
 3257 0038 00000000 		.4byte	.LFB39
 3258 003c 40000000 		.4byte	.LFE39-.LFB39
 3259 0040 00000000 		.4byte	.LFB40
 3260 0044 34000000 		.4byte	.LFE40-.LFB40
 3261 0048 00000000 		.4byte	.LFB41
 3262 004c 8C000000 		.4byte	.LFE41-.LFB41
 3263 0050 00000000 		.4byte	.LFB42
 3264 0054 14000000 		.4byte	.LFE42-.LFB42
 3265 0058 00000000 		.4byte	.LFB43
 3266 005c 40000000 		.4byte	.LFE43-.LFB43
 3267 0060 00000000 		.4byte	.LFB44
 3268 0064 4C000000 		.4byte	.LFE44-.LFB44
 3269 0068 00000000 		.4byte	.LFB45
 3270 006c 88000000 		.4byte	.LFE45-.LFB45
 3271 0070 00000000 		.4byte	.LFB46
 3272 0074 90000000 		.4byte	.LFE46-.LFB46
 3273 0078 00000000 		.4byte	.LFB47
 3274 007c 22000000 		.4byte	.LFE47-.LFB47
 3275 0080 00000000 		.4byte	.LFB48
 3276 0084 24000000 		.4byte	.LFE48-.LFB48
 3277 0088 00000000 		.4byte	.LFB49
 3278 008c 24000000 		.4byte	.LFE49-.LFB49
 3279 0090 00000000 		.4byte	.LFB50
ARM GAS  C:\Users\essele\AppData\Local\Temp\ccfSlmaE.s 			page 67


 3280 0094 10000000 		.4byte	.LFE50-.LFB50
 3281 0098 00000000 		.4byte	.LFB51
 3282 009c 10000000 		.4byte	.LFE51-.LFB51
 3283 00a0 00000000 		.4byte	.LFB52
 3284 00a4 26000000 		.4byte	.LFE52-.LFB52
 3285 00a8 00000000 		.4byte	.LFB53
 3286 00ac 26000000 		.4byte	.LFE53-.LFB53
 3287 00b0 00000000 		.4byte	.LFB54
 3288 00b4 2C000000 		.4byte	.LFE54-.LFB54
 3289 00b8 00000000 		.4byte	.LFB55
 3290 00bc 60000000 		.4byte	.LFE55-.LFB55
 3291 00c0 00000000 		.4byte	.LFB56
 3292 00c4 68000000 		.4byte	.LFE56-.LFB56
 3293 00c8 00000000 		.4byte	.LFB57
 3294 00cc 12000000 		.4byte	.LFE57-.LFB57
 3295 00d0 00000000 		.4byte	.LFB58
 3296 00d4 70000000 		.4byte	.LFE58-.LFB58
 3297 00d8 00000000 		.4byte	.LFB59
 3298 00dc 60000000 		.4byte	.LFE59-.LFB59
 3299 00e0 00000000 		.4byte	.LFB60
 3300 00e4 BC000000 		.4byte	.LFE60-.LFB60
 3301 00e8 00000000 		.4byte	.LFB61
 3302 00ec 62000000 		.4byte	.LFE61-.LFB61
 3303 00f0 00000000 		.4byte	0
 3304 00f4 00000000 		.4byte	0
 3305              		.section	.debug_ranges,"",%progbits
 3306              	.Ldebug_ranges0:
 3307 0000 00000000 		.4byte	.LFB34
 3308 0004 10000000 		.4byte	.LFE34
 3309 0008 00000000 		.4byte	.LFB35
 3310 000c 0A000000 		.4byte	.LFE35
 3311 0010 00000000 		.4byte	.LFB36
 3312 0014 10000000 		.4byte	.LFE36
 3313 0018 00000000 		.4byte	.LFB37
 3314 001c 28000000 		.4byte	.LFE37
 3315 0020 00000000 		.4byte	.LFB38
 3316 0024 28000000 		.4byte	.LFE38
 3317 0028 00000000 		.4byte	.LFB39
 3318 002c 40000000 		.4byte	.LFE39
 3319 0030 00000000 		.4byte	.LFB40
 3320 0034 34000000 		.4byte	.LFE40
 3321 0038 00000000 		.4byte	.LFB41
 3322 003c 8C000000 		.4byte	.LFE41
 3323 0040 00000000 		.4byte	.LFB42
 3324 0044 14000000 		.4byte	.LFE42
 3325 0048 00000000 		.4byte	.LFB43
 3326 004c 40000000 		.4byte	.LFE43
 3327 0050 00000000 		.4byte	.LFB44
 3328 0054 4C000000 		.4byte	.LFE44
 3329 0058 00000000 		.4byte	.LFB45
 3330 005c 88000000 		.4byte	.LFE45
 3331 0060 00000000 		.4byte	.LFB46
 3332 0064 90000000 		.4byte	.LFE46
 3333 0068 00000000 		.4byte	.LFB47
 3334 006c 22000000 		.4byte	.LFE47
 3335 0070 00000000 		.4byte	.LFB48
 3336 0074 24000000 		.4byte	.LFE48
ARM GAS  C:\Users\essele\AppData\Local\Temp\ccfSlmaE.s 			page 68


 3337 0078 00000000 		.4byte	.LFB49
 3338 007c 24000000 		.4byte	.LFE49
 3339 0080 00000000 		.4byte	.LFB50
 3340 0084 10000000 		.4byte	.LFE50
 3341 0088 00000000 		.4byte	.LFB51
 3342 008c 10000000 		.4byte	.LFE51
 3343 0090 00000000 		.4byte	.LFB52
 3344 0094 26000000 		.4byte	.LFE52
 3345 0098 00000000 		.4byte	.LFB53
 3346 009c 26000000 		.4byte	.LFE53
 3347 00a0 00000000 		.4byte	.LFB54
 3348 00a4 2C000000 		.4byte	.LFE54
 3349 00a8 00000000 		.4byte	.LFB55
 3350 00ac 60000000 		.4byte	.LFE55
 3351 00b0 00000000 		.4byte	.LFB56
 3352 00b4 68000000 		.4byte	.LFE56
 3353 00b8 00000000 		.4byte	.LFB57
 3354 00bc 12000000 		.4byte	.LFE57
 3355 00c0 00000000 		.4byte	.LFB58
 3356 00c4 70000000 		.4byte	.LFE58
 3357 00c8 00000000 		.4byte	.LFB59
 3358 00cc 60000000 		.4byte	.LFE59
 3359 00d0 00000000 		.4byte	.LFB60
 3360 00d4 BC000000 		.4byte	.LFE60
 3361 00d8 00000000 		.4byte	.LFB61
 3362 00dc 62000000 		.4byte	.LFE61
 3363 00e0 00000000 		.4byte	0
 3364 00e4 00000000 		.4byte	0
 3365              		.section	.debug_line,"",%progbits
 3366              	.Ldebug_line0:
 3367 0000 37040000 		.section	.debug_str,"MS",%progbits,1
 3367      02004C01 
 3367      00000201 
 3367      FB0E0D00 
 3367      01010101 
 3368              	.LASF31:
 3369 0000 67706962 		.ascii	"gpib_line\000"
 3369      5F6C696E 
 3369      6500
 3370              	.LASF23:
 3371 000a 76657273 		.ascii	"version\000"
 3371      696F6E00 
 3372              	.LASF58:
 3373 0012 67706962 		.ascii	"gpib_address_listener\000"
 3373      5F616464 
 3373      72657373 
 3373      5F6C6973 
 3373      74656E65 
 3374              	.LASF41:
 3375 0028 67706962 		.ascii	"gpib_get_buffer\000"
 3375      5F676574 
 3375      5F627566 
 3375      66657200 
 3376              	.LASF24:
 3377 0038 61646472 		.ascii	"address\000"
 3377      65737300 
 3378              	.LASF70:
ARM GAS  C:\Users\essele\AppData\Local\Temp\ccfSlmaE.s 			page 69


 3379 0040 67706962 		.ascii	"gpib_buffer\000"
 3379      5F627566 
 3379      66657200 
 3380              	.LASF2:
 3381 004c 73686F72 		.ascii	"short int\000"
 3381      7420696E 
 3381      7400
 3382              	.LASF21:
 3383 0056 73697A65 		.ascii	"sizetype\000"
 3383      74797065 
 3383      00
 3384              	.LASF65:
 3385 005f 756E7469 		.ascii	"until\000"
 3385      6C00
 3386              	.LASF75:
 3387 0065 5C5C4D61 		.ascii	"\\\\Mac\\Home\\Documents\\dev\\yaugi\\GPIB USB Adap"
 3387      635C486F 
 3387      6D655C44 
 3387      6F63756D 
 3387      656E7473 
 3388 0091 7465725C 		.ascii	"ter\\GPIB USB 1.cydsn\000"
 3388      47504942 
 3388      20555342 
 3388      20312E63 
 3388      7964736E 
 3389              	.LASF50:
 3390 00a6 67706962 		.ascii	"gpib_interface_clear\000"
 3390      5F696E74 
 3390      65726661 
 3390      63655F63 
 3390      6C656172 
 3391              	.LASF33:
 3392 00bb 67706962 		.ascii	"gpib_settle\000"
 3392      5F736574 
 3392      746C6500 
 3393              	.LASF4:
 3394 00c7 5F5F7569 		.ascii	"__uint16_t\000"
 3394      6E743136 
 3394      5F7400
 3395              	.LASF40:
 3396 00d2 6F6C645F 		.ascii	"old_state\000"
 3396      73746174 
 3396      6500
 3397              	.LASF12:
 3398 00dc 75696E74 		.ascii	"uint8_t\000"
 3398      385F7400 
 3399              	.LASF25:
 3400 00e4 6175746F 		.ascii	"autoread\000"
 3400      72656164 
 3400      00
 3401              	.LASF36:
 3402 00ed 6C696E65 		.ascii	"line\000"
 3402      00
 3403              	.LASF61:
 3404 00f2 67706962 		.ascii	"gpib_send\000"
 3404      5F73656E 
 3404      6400
ARM GAS  C:\Users\essele\AppData\Local\Temp\ccfSlmaE.s 			page 70


 3405              	.LASF42:
 3406 00fc 67706962 		.ascii	"gpib_get_mode\000"
 3406      5F676574 
 3406      5F6D6F64 
 3406      6500
 3407              	.LASF69:
 3408 010a 73657474 		.ascii	"settings\000"
 3408      696E6773 
 3408      00
 3409              	.LASF9:
 3410 0113 6C6F6E67 		.ascii	"long long int\000"
 3410      206C6F6E 
 3410      6720696E 
 3410      7400
 3411              	.LASF57:
 3412 0121 67706962 		.ascii	"gpib_send_GTL\000"
 3412      5F73656E 
 3412      645F4754 
 3412      4C00
 3413              	.LASF28:
 3414 012f 72656164 		.ascii	"read_tmo_ms\000"
 3414      5F746D6F 
 3414      5F6D7300 
 3415              	.LASF6:
 3416 013b 6C6F6E67 		.ascii	"long int\000"
 3416      20696E74 
 3416      00
 3417              	.LASF74:
 3418 0144 67706962 		.ascii	"gpib.c\000"
 3418      2E6300
 3419              	.LASF51:
 3420 014b 67706962 		.ascii	"gpib_LAD\000"
 3420      5F4C4144 
 3420      00
 3421              	.LASF3:
 3422 0154 5F5F7569 		.ascii	"__uint8_t\000"
 3422      6E74385F 
 3422      7400
 3423              	.LASF67:
 3424 015e 64657374 		.ascii	"dest\000"
 3424      00
 3425              	.LASF59:
 3426 0163 67706962 		.ascii	"gpib_address_talker\000"
 3426      5F616464 
 3426      72657373 
 3426      5F74616C 
 3426      6B657200 
 3427              	.LASF73:
 3428 0177 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 3428      43313120 
 3428      352E342E 
 3428      31203230 
 3428      31363036 
 3429 01aa 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m0 -mthumb -g -O"
 3429      20726576 
 3429      6973696F 
 3429      6E203233 
ARM GAS  C:\Users\essele\AppData\Local\Temp\ccfSlmaE.s 			page 71


 3429      37373135 
 3430 01dd 30202D66 		.ascii	"0 -ffunction-sections -ffat-lto-objects\000"
 3430      66756E63 
 3430      74696F6E 
 3430      2D736563 
 3430      74696F6E 
 3431              	.LASF1:
 3432 0205 756E7369 		.ascii	"unsigned char\000"
 3432      676E6564 
 3432      20636861 
 3432      7200
 3433              	.LASF20:
 3434 0213 6C6F6E67 		.ascii	"long double\000"
 3434      20646F75 
 3434      626C6500 
 3435              	.LASF76:
 3436 021f 636C6561 		.ascii	"cleanup\000"
 3436      6E757000 
 3437              	.LASF66:
 3438 0227 67706962 		.ascii	"gpib_read_bytes\000"
 3438      5F726561 
 3438      645F6279 
 3438      74657300 
 3439              	.LASF52:
 3440 0237 67706962 		.ascii	"gpib_TAD\000"
 3440      5F544144 
 3440      00
 3441              	.LASF32:
 3442 0240 67706962 		.ascii	"gpib_init_pins\000"
 3442      5F696E69 
 3442      745F7069 
 3442      6E7300
 3443              	.LASF0:
 3444 024f 7369676E 		.ascii	"signed char\000"
 3444      65642063 
 3444      68617200 
 3445              	.LASF10:
 3446 025b 6C6F6E67 		.ascii	"long long unsigned int\000"
 3446      206C6F6E 
 3446      6720756E 
 3446      7369676E 
 3446      65642069 
 3447              	.LASF14:
 3448 0272 75696E74 		.ascii	"uint32_t\000"
 3448      33325F74 
 3448      00
 3449              	.LASF11:
 3450 027b 756E7369 		.ascii	"unsigned int\000"
 3450      676E6564 
 3450      20696E74 
 3450      00
 3451              	.LASF13:
 3452 0288 75696E74 		.ascii	"uint16_t\000"
 3452      31365F74 
 3452      00
 3453              	.LASF71:
 3454 0291 6D795F61 		.ascii	"my_address\000"
ARM GAS  C:\Users\essele\AppData\Local\Temp\ccfSlmaE.s 			page 72


 3454      64647265 
 3454      737300
 3455              	.LASF64:
 3456 029c 67706962 		.ascii	"gpib_read\000"
 3456      5F726561 
 3456      6400
 3457              	.LASF45:
 3458 02a6 67706962 		.ascii	"gpib_wait_for_line_to_unassert\000"
 3458      5F776169 
 3458      745F666F 
 3458      725F6C69 
 3458      6E655F74 
 3459              	.LASF68:
 3460 02c5 6D61786C 		.ascii	"maxlen\000"
 3460      656E00
 3461              	.LASF48:
 3462 02cc 6C617374 		.ascii	"last\000"
 3462      00
 3463              	.LASF19:
 3464 02d1 72656733 		.ascii	"reg32\000"
 3464      3200
 3465              	.LASF26:
 3466 02d7 656F745F 		.ascii	"eot_char\000"
 3466      63686172 
 3466      00
 3467              	.LASF5:
 3468 02e0 73686F72 		.ascii	"short unsigned int\000"
 3468      7420756E 
 3468      7369676E 
 3468      65642069 
 3468      6E7400
 3469              	.LASF27:
 3470 02f3 656F745F 		.ascii	"eot_enable\000"
 3470      656E6162 
 3470      6C6500
 3471              	.LASF49:
 3472 02fe 67706962 		.ascii	"gpib_receive_byte\000"
 3472      5F726563 
 3472      65697665 
 3472      5F627974 
 3472      6500
 3473              	.LASF53:
 3474 0310 67706962 		.ascii	"gpib_UNL\000"
 3474      5F554E4C 
 3474      00
 3475              	.LASF18:
 3476 0319 63686172 		.ascii	"char\000"
 3476      00
 3477              	.LASF55:
 3478 031e 67706962 		.ascii	"gpib_send_SDC\000"
 3478      5F73656E 
 3478      645F5344 
 3478      4300
 3479              	.LASF30:
 3480 032c 4E524644 		.ascii	"NRFD\000"
 3480      00
 3481              	.LASF46:
ARM GAS  C:\Users\essele\AppData\Local\Temp\ccfSlmaE.s 			page 73


 3482 0331 67706962 		.ascii	"gpib_send_byte\000"
 3482      5F73656E 
 3482      645F6279 
 3482      746500
 3483              	.LASF56:
 3484 0340 67706962 		.ascii	"gpib_send_LLO\000"
 3484      5F73656E 
 3484      645F4C4C 
 3484      4F00
 3485              	.LASF34:
 3486 034e 67706962 		.ascii	"gpib_assert_line\000"
 3486      5F617373 
 3486      6572745F 
 3486      6C696E65 
 3486      00
 3487              	.LASF38:
 3488 035f 5F426F6F 		.ascii	"_Bool\000"
 3488      6C00
 3489              	.LASF72:
 3490 0365 5F677069 		.ascii	"_gpib_mode\000"
 3490      625F6D6F 
 3490      646500
 3491              	.LASF16:
 3492 0370 666C6F61 		.ascii	"float\000"
 3492      7400
 3493              	.LASF15:
 3494 0376 75696E74 		.ascii	"uint32\000"
 3494      333200
 3495              	.LASF8:
 3496 037d 6C6F6E67 		.ascii	"long unsigned int\000"
 3496      20756E73 
 3496      69676E65 
 3496      6420696E 
 3496      7400
 3497              	.LASF17:
 3498 038f 646F7562 		.ascii	"double\000"
 3498      6C6500
 3499              	.LASF35:
 3500 0396 67706962 		.ascii	"gpib_unassert_line\000"
 3500      5F756E61 
 3500      73736572 
 3500      745F6C69 
 3500      6E6500
 3501              	.LASF7:
 3502 03a9 5F5F7569 		.ascii	"__uint32_t\000"
 3502      6E743332 
 3502      5F7400
 3503              	.LASF47:
 3504 03b4 62797465 		.ascii	"byte\000"
 3504      00
 3505              	.LASF44:
 3506 03b9 67706962 		.ascii	"gpib_wait_for_line_to_assert\000"
 3506      5F776169 
 3506      745F666F 
 3506      725F6C69 
 3506      6E655F74 
 3507              	.LASF60:
ARM GAS  C:\Users\essele\AppData\Local\Temp\ccfSlmaE.s 			page 74


 3508 03d6 67706962 		.ascii	"gpib_talking\000"
 3508      5F74616C 
 3508      6B696E67 
 3508      00
 3509              	.LASF22:
 3510 03e3 7369676E 		.ascii	"signature\000"
 3510      61747572 
 3510      6500
 3511              	.LASF39:
 3512 03ed 67706962 		.ascii	"gpib_poll\000"
 3512      5F706F6C 
 3512      6C00
 3513              	.LASF63:
 3514 03f7 67706962 		.ascii	"gpib_send_bytes\000"
 3514      5F73656E 
 3514      645F6279 
 3514      74657300 
 3515              	.LASF62:
 3516 0407 656F6970 		.ascii	"eoipos\000"
 3516      6F7300
 3517              	.LASF43:
 3518 040e 67706962 		.ascii	"gpib_read_line\000"
 3518      5F726561 
 3518      645F6C69 
 3518      6E6500
 3519              	.LASF54:
 3520 041d 67706962 		.ascii	"gpib_UNT\000"
 3520      5F554E54 
 3520      00
 3521              	.LASF37:
 3522 0426 67706962 		.ascii	"gpib_readall\000"
 3522      5F726561 
 3522      64616C6C 
 3522      00
 3523              	.LASF29:
 3524 0433 4E444143 		.ascii	"NDAC\000"
 3524      00
 3525              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
