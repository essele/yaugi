ARM GAS  C:\Users\essele\AppData\Local\Temp\cclqzyvT.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m0
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 0
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"gpib.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.comm	gpib_buffer,256,4
  20              		.section	.text.gpib_get_buffer,"ax",%progbits
  21              		.align	2
  22              		.global	gpib_get_buffer
  23              		.code	16
  24              		.thumb_func
  25              		.type	gpib_get_buffer, %function
  26              	gpib_get_buffer:
  27              	.LFB34:
  28              		.file 1 "gpib.c"
   1:gpib.c        **** /****
   2:gpib.c        ****  * YAUGI -- Yet Another USB GPIB Interface
   3:gpib.c        ****  * 
   4:gpib.c        ****  * Lee Essen, 2019
   5:gpib.c        ****  *
   6:gpib.c        ****  * This work is licensed under a Creative Commons 
   7:gpib.c        ****  * Attribution-NonCommercial-ShareAlike 4.0 International License.
   8:gpib.c        ****  *
   9:gpib.c        ****  */
  10:gpib.c        **** 
  11:gpib.c        **** #include "gpib.h"
  12:gpib.c        **** #include "settings.h"
  13:gpib.c        **** 
  14:gpib.c        **** /**
  15:gpib.c        ****  * How long after we start to see a device do we consider it ok to talk to
  16:gpib.c        ****  * (in ms)
  17:gpib.c        ****  */
  18:gpib.c        **** #define GPIB_INIT_TIME      3000
  19:gpib.c        **** 
  20:gpib.c        **** /**
  21:gpib.c        ****  * The internal gpib buffer
  22:gpib.c        ****  */
  23:gpib.c        **** #define GPIB_BUF_SIZE       256
  24:gpib.c        **** uint8_t gpib_buffer[GPIB_BUF_SIZE];
  25:gpib.c        **** 
  26:gpib.c        **** uint8_t *gpib_get_buffer() {
  29              		.loc 1 26 0
  30              		.cfi_startproc
  31              		@ args = 0, pretend = 0, frame = 0
ARM GAS  C:\Users\essele\AppData\Local\Temp\cclqzyvT.s 			page 2


  32              		@ frame_needed = 1, uses_anonymous_args = 0
  33 0000 80B5     		push	{r7, lr}
  34              		.cfi_def_cfa_offset 8
  35              		.cfi_offset 7, -8
  36              		.cfi_offset 14, -4
  37 0002 00AF     		add	r7, sp, #0
  38              		.cfi_def_cfa_register 7
  27:gpib.c        ****     return gpib_buffer;
  39              		.loc 1 27 0
  40 0004 014B     		ldr	r3, .L3
  28:gpib.c        **** }
  41              		.loc 1 28 0
  42 0006 1800     		movs	r0, r3
  43 0008 BD46     		mov	sp, r7
  44              		@ sp needed
  45 000a 80BD     		pop	{r7, pc}
  46              	.L4:
  47              		.align	2
  48              	.L3:
  49 000c 00000000 		.word	gpib_buffer
  50              		.cfi_endproc
  51              	.LFE34:
  52              		.size	gpib_get_buffer, .-gpib_get_buffer
  53              		.global	my_address
  54              		.data
  55              		.type	my_address, %object
  56              		.size	my_address, 1
  57              	my_address:
  58 0000 15       		.byte	21
  59              		.global	listening
  60 0001 000000   		.align	2
  61              		.type	listening, %object
  62              		.size	listening, 4
  63              	listening:
  64 0004 FFFFFFFF 		.word	-1
  65              		.global	talking
  66              		.align	2
  67              		.type	talking, %object
  68              		.size	talking, 4
  69              	talking:
  70 0008 FFFFFFFF 		.word	-1
  71              		.section	.text.gpib_init_pins,"ax",%progbits
  72              		.align	2
  73              		.global	gpib_init_pins
  74              		.code	16
  75              		.thumb_func
  76              		.type	gpib_init_pins, %function
  77              	gpib_init_pins:
  78              	.LFB35:
  29:gpib.c        **** 
  30:gpib.c        **** 
  31:gpib.c        **** /**
  32:gpib.c        ****  * Definitions of the various lines (for bitbanging)
  33:gpib.c        ****  */
  34:gpib.c        **** typedef enum {
  35:gpib.c        ****     ATN=0, SRQ, IFC, NDAC, NRFD, DAV, EOI, REN } gpib_line;
  36:gpib.c        **** 
ARM GAS  C:\Users\essele\AppData\Local\Temp\cclqzyvT.s 			page 3


  37:gpib.c        **** /**
  38:gpib.c        ****  * My internal GPIB address (default controller = 21)
  39:gpib.c        ****  */
  40:gpib.c        **** uint8_t my_address = 21;
  41:gpib.c        **** 
  42:gpib.c        **** /**
  43:gpib.c        ****  * Track who is listening and who is talking so we only send commands
  44:gpib.c        ****  * when we need to
  45:gpib.c        ****  */
  46:gpib.c        **** int listening = -1;
  47:gpib.c        **** int talking = -1;
  48:gpib.c        **** 
  49:gpib.c        **** /**
  50:gpib.c        ****  * Ensure the pin settings are correct for all of the pins. This should be
  51:gpib.c        ****  * open drain, with a drive low. (This will be done by the design)
  52:gpib.c        ****  *
  53:gpib.c        ****  */
  54:gpib.c        **** void gpib_init_pins() {
  79              		.loc 1 54 0
  80              		.cfi_startproc
  81              		@ args = 0, pretend = 0, frame = 0
  82              		@ frame_needed = 1, uses_anonymous_args = 0
  83 0000 80B5     		push	{r7, lr}
  84              		.cfi_def_cfa_offset 8
  85              		.cfi_offset 7, -8
  86              		.cfi_offset 14, -4
  87 0002 00AF     		add	r7, sp, #0
  88              		.cfi_def_cfa_register 7
  55:gpib.c        ****     
  56:gpib.c        **** }
  89              		.loc 1 56 0
  90 0004 C046     		nop
  91 0006 BD46     		mov	sp, r7
  92              		@ sp needed
  93 0008 80BD     		pop	{r7, pc}
  94              		.cfi_endproc
  95              	.LFE35:
  96              		.size	gpib_init_pins, .-gpib_init_pins
  97              		.section	.text.gpib_settle,"ax",%progbits
  98              		.align	2
  99              		.global	gpib_settle
 100              		.code	16
 101              		.thumb_func
 102              		.type	gpib_settle, %function
 103              	gpib_settle:
 104              	.LFB36:
  57:gpib.c        **** 
  58:gpib.c        **** void gpib_settle() {
 105              		.loc 1 58 0
 106              		.cfi_startproc
 107              		@ args = 0, pretend = 0, frame = 0
 108              		@ frame_needed = 1, uses_anonymous_args = 0
 109 0000 80B5     		push	{r7, lr}
 110              		.cfi_def_cfa_offset 8
 111              		.cfi_offset 7, -8
 112              		.cfi_offset 14, -4
 113 0002 00AF     		add	r7, sp, #0
ARM GAS  C:\Users\essele\AppData\Local\Temp\cclqzyvT.s 			page 4


 114              		.cfi_def_cfa_register 7
  59:gpib.c        ****     CyDelayUs(2);
 115              		.loc 1 59 0
 116 0004 0220     		movs	r0, #2
 117 0006 FFF7FEFF 		bl	CyDelayUs
  60:gpib.c        **** }
 118              		.loc 1 60 0
 119 000a C046     		nop
 120 000c BD46     		mov	sp, r7
 121              		@ sp needed
 122 000e 80BD     		pop	{r7, pc}
 123              		.cfi_endproc
 124              	.LFE36:
 125              		.size	gpib_settle, .-gpib_settle
 126              		.global	_gpib_mode
 127              		.bss
 128              		.align	2
 129              		.type	_gpib_mode, %object
 130              		.size	_gpib_mode, 4
 131              	_gpib_mode:
 132 0000 00000000 		.space	4
 133              		.section	.text.gpib_assert_line,"ax",%progbits
 134              		.align	2
 135              		.global	gpib_assert_line
 136              		.code	16
 137              		.thumb_func
 138              		.type	gpib_assert_line, %function
 139              	gpib_assert_line:
 140              	.LFB37:
  61:gpib.c        **** 
  62:gpib.c        **** /**
  63:gpib.c        ****  * We can detect if a device is not present since all the pins will be low, if
  64:gpib.c        ****  * that is the case then we don't want to proceed. We'll just check the SIG pins
  65:gpib.c        ****  * since all shouldn't be low in normal operation.
  66:gpib.c        ****  *
  67:gpib.c        ****  * TODO: we should only really do this check when we are not driving anything, otherwise
  68:gpib.c        ****  * we might get strange results.
  69:gpib.c        ****  */
  70:gpib.c        **** 
  71:gpib.c        **** int _gpib_mode = GPIB_NODEVICE;
  72:gpib.c        **** 
  73:gpib.c        **** 
  74:gpib.c        **** 
  75:gpib.c        **** 
  76:gpib.c        **** 
  77:gpib.c        **** /**
  78:gpib.c        ****  * Assert means pulling a line low
  79:gpib.c        ****  */
  80:gpib.c        **** void gpib_assert_line(gpib_line line) {
 141              		.loc 1 80 0
 142              		.cfi_startproc
 143              		@ args = 0, pretend = 0, frame = 8
 144              		@ frame_needed = 1, uses_anonymous_args = 0
 145 0000 80B5     		push	{r7, lr}
 146              		.cfi_def_cfa_offset 8
 147              		.cfi_offset 7, -8
 148              		.cfi_offset 14, -4
ARM GAS  C:\Users\essele\AppData\Local\Temp\cclqzyvT.s 			page 5


 149 0002 82B0     		sub	sp, sp, #8
 150              		.cfi_def_cfa_offset 16
 151 0004 00AF     		add	r7, sp, #0
 152              		.cfi_def_cfa_register 7
 153 0006 0200     		movs	r2, r0
 154 0008 FB1D     		adds	r3, r7, #7
 155 000a 1A70     		strb	r2, [r3]
  81:gpib.c        ****     (*(reg32 *)SIG__DR_CLR) = (1 << line);
 156              		.loc 1 81 0
 157 000c 054B     		ldr	r3, .L8
 158 000e FA1D     		adds	r2, r7, #7
 159 0010 1278     		ldrb	r2, [r2]
 160 0012 0121     		movs	r1, #1
 161 0014 9140     		lsls	r1, r1, r2
 162 0016 0A00     		movs	r2, r1
 163 0018 1A60     		str	r2, [r3]
  82:gpib.c        **** }
 164              		.loc 1 82 0
 165 001a C046     		nop
 166 001c BD46     		mov	sp, r7
 167 001e 02B0     		add	sp, sp, #8
 168              		@ sp needed
 169 0020 80BD     		pop	{r7, pc}
 170              	.L9:
 171 0022 C046     		.align	2
 172              	.L8:
 173 0024 44010440 		.word	1074004292
 174              		.cfi_endproc
 175              	.LFE37:
 176              		.size	gpib_assert_line, .-gpib_assert_line
 177              		.section	.text.gpib_unassert_line,"ax",%progbits
 178              		.align	2
 179              		.global	gpib_unassert_line
 180              		.code	16
 181              		.thumb_func
 182              		.type	gpib_unassert_line, %function
 183              	gpib_unassert_line:
 184              	.LFB38:
  83:gpib.c        **** 
  84:gpib.c        **** /**
  85:gpib.c        ****  * Unasserting means letting it float high
  86:gpib.c        ****  */
  87:gpib.c        **** void gpib_unassert_line(gpib_line line) {
 185              		.loc 1 87 0
 186              		.cfi_startproc
 187              		@ args = 0, pretend = 0, frame = 8
 188              		@ frame_needed = 1, uses_anonymous_args = 0
 189 0000 80B5     		push	{r7, lr}
 190              		.cfi_def_cfa_offset 8
 191              		.cfi_offset 7, -8
 192              		.cfi_offset 14, -4
 193 0002 82B0     		sub	sp, sp, #8
 194              		.cfi_def_cfa_offset 16
 195 0004 00AF     		add	r7, sp, #0
 196              		.cfi_def_cfa_register 7
 197 0006 0200     		movs	r2, r0
 198 0008 FB1D     		adds	r3, r7, #7
ARM GAS  C:\Users\essele\AppData\Local\Temp\cclqzyvT.s 			page 6


 199 000a 1A70     		strb	r2, [r3]
  88:gpib.c        ****     (*(reg32 *)SIG__DR_SET) = (1 << line);
 200              		.loc 1 88 0
 201 000c 054B     		ldr	r3, .L11
 202 000e FA1D     		adds	r2, r7, #7
 203 0010 1278     		ldrb	r2, [r2]
 204 0012 0121     		movs	r1, #1
 205 0014 9140     		lsls	r1, r1, r2
 206 0016 0A00     		movs	r2, r1
 207 0018 1A60     		str	r2, [r3]
  89:gpib.c        **** }
 208              		.loc 1 89 0
 209 001a C046     		nop
 210 001c BD46     		mov	sp, r7
 211 001e 02B0     		add	sp, sp, #8
 212              		@ sp needed
 213 0020 80BD     		pop	{r7, pc}
 214              	.L12:
 215 0022 C046     		.align	2
 216              	.L11:
 217 0024 40010440 		.word	1074004288
 218              		.cfi_endproc
 219              	.LFE38:
 220              		.size	gpib_unassert_line, .-gpib_unassert_line
 221              		.section	.text.gpib_readall,"ax",%progbits
 222              		.align	2
 223              		.global	gpib_readall
 224              		.code	16
 225              		.thumb_func
 226              		.type	gpib_readall, %function
 227              	gpib_readall:
 228              	.LFB39:
  90:gpib.c        **** 
  91:gpib.c        **** uint16_t gpib_readall() {
 229              		.loc 1 91 0
 230              		.cfi_startproc
 231              		@ args = 0, pretend = 0, frame = 8
 232              		@ frame_needed = 1, uses_anonymous_args = 0
 233 0000 80B5     		push	{r7, lr}
 234              		.cfi_def_cfa_offset 8
 235              		.cfi_offset 7, -8
 236              		.cfi_offset 14, -4
 237 0002 82B0     		sub	sp, sp, #8
 238              		.cfi_def_cfa_offset 16
 239 0004 00AF     		add	r7, sp, #0
 240              		.cfi_def_cfa_register 7
  92:gpib.c        ****     uint16_t rc = ((*(reg32 *)SIG__PS) & 0xff) << 8;
 241              		.loc 1 92 0
 242 0006 0C4B     		ldr	r3, .L15
 243 0008 1B68     		ldr	r3, [r3]
 244 000a 9BB2     		uxth	r3, r3
 245 000c FF22     		movs	r2, #255
 246 000e 1340     		ands	r3, r2
 247 0010 9AB2     		uxth	r2, r3
 248 0012 BB1D     		adds	r3, r7, #6
 249 0014 1202     		lsls	r2, r2, #8
 250 0016 1A80     		strh	r2, [r3]
ARM GAS  C:\Users\essele\AppData\Local\Temp\cclqzyvT.s 			page 7


  93:gpib.c        ****     rc |= ((*(reg32 *)DIO__PS) & 0xff);
 251              		.loc 1 93 0
 252 0018 084B     		ldr	r3, .L15+4
 253 001a 1B68     		ldr	r3, [r3]
 254 001c FF22     		movs	r2, #255
 255 001e 1340     		ands	r3, r2
 256 0020 99B2     		uxth	r1, r3
 257 0022 BB1D     		adds	r3, r7, #6
 258 0024 BA1D     		adds	r2, r7, #6
 259 0026 1288     		ldrh	r2, [r2]
 260 0028 0A43     		orrs	r2, r1
 261 002a 1A80     		strh	r2, [r3]
  94:gpib.c        ****     return rc;
 262              		.loc 1 94 0
 263 002c BB1D     		adds	r3, r7, #6
 264 002e 1B88     		ldrh	r3, [r3]
  95:gpib.c        **** }
 265              		.loc 1 95 0
 266 0030 1800     		movs	r0, r3
 267 0032 BD46     		mov	sp, r7
 268 0034 02B0     		add	sp, sp, #8
 269              		@ sp needed
 270 0036 80BD     		pop	{r7, pc}
 271              	.L16:
 272              		.align	2
 273              	.L15:
 274 0038 04010440 		.word	1074004228
 275 003c 04020440 		.word	1074004484
 276              		.cfi_endproc
 277              	.LFE39:
 278              		.size	gpib_readall, .-gpib_readall
 279              		.section	.text.gpib_read_line,"ax",%progbits
 280              		.align	2
 281              		.global	gpib_read_line
 282              		.code	16
 283              		.thumb_func
 284              		.type	gpib_read_line, %function
 285              	gpib_read_line:
 286              	.LFB40:
  96:gpib.c        **** 
  97:gpib.c        **** 
  98:gpib.c        **** /**
  99:gpib.c        ****  * Read the status of a line ... true is low! false is high!
 100:gpib.c        ****  */
 101:gpib.c        **** bool gpib_read_line(gpib_line line) {
 287              		.loc 1 101 0
 288              		.cfi_startproc
 289              		@ args = 0, pretend = 0, frame = 16
 290              		@ frame_needed = 1, uses_anonymous_args = 0
 291 0000 80B5     		push	{r7, lr}
 292              		.cfi_def_cfa_offset 8
 293              		.cfi_offset 7, -8
 294              		.cfi_offset 14, -4
 295 0002 84B0     		sub	sp, sp, #16
 296              		.cfi_def_cfa_offset 24
 297 0004 00AF     		add	r7, sp, #0
 298              		.cfi_def_cfa_register 7
ARM GAS  C:\Users\essele\AppData\Local\Temp\cclqzyvT.s 			page 8


 299 0006 0200     		movs	r2, r0
 300 0008 FB1D     		adds	r3, r7, #7
 301 000a 1A70     		strb	r2, [r3]
 102:gpib.c        ****     int v = ((*(reg32 *)SIG__PS) >> line) & 0x0001;
 302              		.loc 1 102 0
 303 000c 084B     		ldr	r3, .L19
 304 000e 1A68     		ldr	r2, [r3]
 305 0010 FB1D     		adds	r3, r7, #7
 306 0012 1B78     		ldrb	r3, [r3]
 307 0014 DA40     		lsrs	r2, r2, r3
 308 0016 1300     		movs	r3, r2
 309 0018 1A00     		movs	r2, r3
 310 001a 0123     		movs	r3, #1
 311 001c 1340     		ands	r3, r2
 312 001e FB60     		str	r3, [r7, #12]
 103:gpib.c        ****     return v == 0 ? true : false;
 313              		.loc 1 103 0
 314 0020 FB68     		ldr	r3, [r7, #12]
 315 0022 5A42     		rsbs	r2, r3, #0
 316 0024 5341     		adcs	r3, r3, r2
 317 0026 DBB2     		uxtb	r3, r3
 104:gpib.c        **** }
 318              		.loc 1 104 0
 319 0028 1800     		movs	r0, r3
 320 002a BD46     		mov	sp, r7
 321 002c 04B0     		add	sp, sp, #16
 322              		@ sp needed
 323 002e 80BD     		pop	{r7, pc}
 324              	.L20:
 325              		.align	2
 326              	.L19:
 327 0030 04010440 		.word	1074004228
 328              		.cfi_endproc
 329              	.LFE40:
 330              		.size	gpib_read_line, .-gpib_read_line
 331              		.section	.text.gpib_poll,"ax",%progbits
 332              		.align	2
 333              		.global	gpib_poll
 334              		.code	16
 335              		.thumb_func
 336              		.type	gpib_poll, %function
 337              	gpib_poll:
 338              	.LFB41:
 105:gpib.c        **** 
 106:gpib.c        **** 
 107:gpib.c        **** /**
 108:gpib.c        ****  * Called periodically, will announce state changes, return value of 1 indicates we have
 109:gpib.c        ****  * had a state change.
 110:gpib.c        ****  *
 111:gpib.c        ****  * We'll just keep an eye on IFC and ATN ... if either are low then (since we are the controller) t
 112:gpib.c        ****  * must be a power fail/missing device.
 113:gpib.c        ****  *
 114:gpib.c        ****  * Once a device looks like it's back, we start a timer so we don't jump the gun
 115:gpib.c        ****  */
 116:gpib.c        **** int gpib_poll() {
 339              		.loc 1 116 0
 340              		.cfi_startproc
ARM GAS  C:\Users\essele\AppData\Local\Temp\cclqzyvT.s 			page 9


 341              		@ args = 0, pretend = 0, frame = 8
 342              		@ frame_needed = 1, uses_anonymous_args = 0
 343 0000 90B5     		push	{r4, r7, lr}
 344              		.cfi_def_cfa_offset 12
 345              		.cfi_offset 4, -12
 346              		.cfi_offset 7, -8
 347              		.cfi_offset 14, -4
 348 0002 83B0     		sub	sp, sp, #12
 349              		.cfi_def_cfa_offset 24
 350 0004 00AF     		add	r7, sp, #0
 351              		.cfi_def_cfa_register 7
 117:gpib.c        ****     //uint8_t sig = (*(reg32 *)SIG__PS & 0xff);
 118:gpib.c        ****     int old_state = _gpib_mode;
 352              		.loc 1 118 0
 353 0006 1F4B     		ldr	r3, .L27
 354 0008 1B68     		ldr	r3, [r3]
 355 000a 7B60     		str	r3, [r7, #4]
 119:gpib.c        ****    
 120:gpib.c        ****     bool atn = gpib_read_line(ATN);
 356              		.loc 1 120 0
 357 000c FC1C     		adds	r4, r7, #3
 358 000e 0020     		movs	r0, #0
 359 0010 FFF7FEFF 		bl	gpib_read_line
 360 0014 0300     		movs	r3, r0
 361 0016 2370     		strb	r3, [r4]
 121:gpib.c        ****     bool ifc = gpib_read_line(IFC);
 362              		.loc 1 121 0
 363 0018 BC1C     		adds	r4, r7, #2
 364 001a 0220     		movs	r0, #2
 365 001c FFF7FEFF 		bl	gpib_read_line
 366 0020 0300     		movs	r3, r0
 367 0022 2370     		strb	r3, [r4]
 122:gpib.c        ****     
 123:gpib.c        ****     // Used to disable state checking (if a scope is on the lines!)
 124:gpib.c        ****     //    atn = ifc = false;
 125:gpib.c        ****     
 126:gpib.c        ****     // If either ATN or IFC are zero, then we must be missing a device ;-)
 127:gpib.c        ****     if (atn || ifc) {
 368              		.loc 1 127 0
 369 0024 FB1C     		adds	r3, r7, #3
 370 0026 1B78     		ldrb	r3, [r3]
 371 0028 002B     		cmp	r3, #0
 372 002a 03D1     		bne	.L22
 373              		.loc 1 127 0 is_stmt 0 discriminator 1
 374 002c BB1C     		adds	r3, r7, #2
 375 002e 1B78     		ldrb	r3, [r3]
 376 0030 002B     		cmp	r3, #0
 377 0032 03D0     		beq	.L23
 378              	.L22:
 128:gpib.c        ****         _gpib_mode = GPIB_NODEVICE;
 379              		.loc 1 128 0 is_stmt 1
 380 0034 134B     		ldr	r3, .L27
 381 0036 0022     		movs	r2, #0
 382 0038 1A60     		str	r2, [r3]
 383 003a 17E0     		b	.L24
 384              	.L23:
 129:gpib.c        ****     } else if (_gpib_mode == GPIB_NODEVICE) {
ARM GAS  C:\Users\essele\AppData\Local\Temp\cclqzyvT.s 			page 10


 385              		.loc 1 129 0
 386 003c 114B     		ldr	r3, .L27
 387 003e 1B68     		ldr	r3, [r3]
 388 0040 002B     		cmp	r3, #0
 389 0042 06D1     		bne	.L25
 130:gpib.c        ****         // device has potentially come back ... zero the timer..
 131:gpib.c        ****         Timer1_WriteCounter(0);
 390              		.loc 1 131 0
 391 0044 0020     		movs	r0, #0
 392 0046 FFF7FEFF 		bl	Timer1_WriteCounter
 132:gpib.c        ****         _gpib_mode = GPIB_INIT;
 393              		.loc 1 132 0
 394 004a 0E4B     		ldr	r3, .L27
 395 004c 0122     		movs	r2, #1
 396 004e 1A60     		str	r2, [r3]
 397 0050 0CE0     		b	.L24
 398              	.L25:
 133:gpib.c        ****     } else if (_gpib_mode == GPIB_INIT) {
 399              		.loc 1 133 0
 400 0052 0C4B     		ldr	r3, .L27
 401 0054 1B68     		ldr	r3, [r3]
 402 0056 012B     		cmp	r3, #1
 403 0058 08D1     		bne	.L24
 134:gpib.c        ****         // after a period we need to switch
 135:gpib.c        ****         if (Timer1_ReadCounter() > GPIB_INIT_TIME) {
 404              		.loc 1 135 0
 405 005a FFF7FEFF 		bl	Timer1_ReadCounter
 406 005e 0200     		movs	r2, r0
 407 0060 094B     		ldr	r3, .L27+4
 408 0062 9A42     		cmp	r2, r3
 409 0064 02D9     		bls	.L24
 136:gpib.c        ****             _gpib_mode = GPIB_RUNNING;
 410              		.loc 1 136 0
 411 0066 074B     		ldr	r3, .L27
 412 0068 0222     		movs	r2, #2
 413 006a 1A60     		str	r2, [r3]
 414              	.L24:
 137:gpib.c        ****         }
 138:gpib.c        ****     }    
 139:gpib.c        ****     return (_gpib_mode != old_state ? 1 : 0);
 415              		.loc 1 139 0
 416 006c 054B     		ldr	r3, .L27
 417 006e 1A68     		ldr	r2, [r3]
 418 0070 7B68     		ldr	r3, [r7, #4]
 419 0072 D31A     		subs	r3, r2, r3
 420 0074 5A1E     		subs	r2, r3, #1
 421 0076 9341     		sbcs	r3, r3, r2
 422 0078 DBB2     		uxtb	r3, r3
 140:gpib.c        **** }
 423              		.loc 1 140 0
 424 007a 1800     		movs	r0, r3
 425 007c BD46     		mov	sp, r7
 426 007e 03B0     		add	sp, sp, #12
 427              		@ sp needed
 428 0080 90BD     		pop	{r4, r7, pc}
 429              	.L28:
 430 0082 C046     		.align	2
ARM GAS  C:\Users\essele\AppData\Local\Temp\cclqzyvT.s 			page 11


 431              	.L27:
 432 0084 00000000 		.word	_gpib_mode
 433 0088 B80B0000 		.word	3000
 434              		.cfi_endproc
 435              	.LFE41:
 436              		.size	gpib_poll, .-gpib_poll
 437              		.section	.text.gpib_get_mode,"ax",%progbits
 438              		.align	2
 439              		.global	gpib_get_mode
 440              		.code	16
 441              		.thumb_func
 442              		.type	gpib_get_mode, %function
 443              	gpib_get_mode:
 444              	.LFB42:
 141:gpib.c        **** 
 142:gpib.c        **** int gpib_get_mode() {
 445              		.loc 1 142 0
 446              		.cfi_startproc
 447              		@ args = 0, pretend = 0, frame = 0
 448              		@ frame_needed = 1, uses_anonymous_args = 0
 449 0000 80B5     		push	{r7, lr}
 450              		.cfi_def_cfa_offset 8
 451              		.cfi_offset 7, -8
 452              		.cfi_offset 14, -4
 453 0002 00AF     		add	r7, sp, #0
 454              		.cfi_def_cfa_register 7
 143:gpib.c        ****     return _gpib_mode;
 455              		.loc 1 143 0
 456 0004 024B     		ldr	r3, .L31
 457 0006 1B68     		ldr	r3, [r3]
 144:gpib.c        **** }
 458              		.loc 1 144 0
 459 0008 1800     		movs	r0, r3
 460 000a BD46     		mov	sp, r7
 461              		@ sp needed
 462 000c 80BD     		pop	{r7, pc}
 463              	.L32:
 464 000e C046     		.align	2
 465              	.L31:
 466 0010 00000000 		.word	_gpib_mode
 467              		.cfi_endproc
 468              	.LFE42:
 469              		.size	gpib_get_mode, .-gpib_get_mode
 470              		.section	.text.gpib_wait_for_line_to_assert,"ax",%progbits
 471              		.align	2
 472              		.global	gpib_wait_for_line_to_assert
 473              		.code	16
 474              		.thumb_func
 475              		.type	gpib_wait_for_line_to_assert, %function
 476              	gpib_wait_for_line_to_assert:
 477              	.LFB43:
 145:gpib.c        **** 
 146:gpib.c        **** /**
 147:gpib.c        ****  * Wait for a line to go low, if it doesn't within read_tmo_ms then timeout
 148:gpib.c        ****  */
 149:gpib.c        **** bool gpib_wait_for_line_to_assert(gpib_line line) {
 478              		.loc 1 149 0
ARM GAS  C:\Users\essele\AppData\Local\Temp\cclqzyvT.s 			page 12


 479              		.cfi_startproc
 480              		@ args = 0, pretend = 0, frame = 8
 481              		@ frame_needed = 1, uses_anonymous_args = 0
 482 0000 80B5     		push	{r7, lr}
 483              		.cfi_def_cfa_offset 8
 484              		.cfi_offset 7, -8
 485              		.cfi_offset 14, -4
 486 0002 82B0     		sub	sp, sp, #8
 487              		.cfi_def_cfa_offset 16
 488 0004 00AF     		add	r7, sp, #0
 489              		.cfi_def_cfa_register 7
 490 0006 0200     		movs	r2, r0
 491 0008 FB1D     		adds	r3, r7, #7
 492 000a 1A70     		strb	r2, [r3]
 150:gpib.c        ****     // Prepare the counter...
 151:gpib.c        ****     Timer1_WriteCounter(0);
 493              		.loc 1 151 0
 494 000c 0020     		movs	r0, #0
 495 000e FFF7FEFF 		bl	Timer1_WriteCounter
 496              	.L37:
 152:gpib.c        ****     
 153:gpib.c        ****     while (1) {
 154:gpib.c        ****         if (gpib_read_line(line) == true) {
 497              		.loc 1 154 0
 498 0012 FB1D     		adds	r3, r7, #7
 499 0014 1B78     		ldrb	r3, [r3]
 500 0016 1800     		movs	r0, r3
 501 0018 FFF7FEFF 		bl	gpib_read_line
 502 001c 031E     		subs	r3, r0, #0
 503 001e 01D0     		beq	.L34
 155:gpib.c        ****             return true;
 504              		.loc 1 155 0
 505 0020 0123     		movs	r3, #1
 506 0022 07E0     		b	.L35
 507              	.L34:
 156:gpib.c        ****         }
 157:gpib.c        ****         if (Timer1_ReadCounter() > settings.read_tmo_ms) {
 508              		.loc 1 157 0
 509 0024 FFF7FEFF 		bl	Timer1_ReadCounter
 510 0028 0200     		movs	r2, r0
 511 002a 044B     		ldr	r3, .L38
 512 002c 5B8A     		ldrh	r3, [r3, #18]
 513 002e 9A42     		cmp	r2, r3
 514 0030 EFD9     		bls	.L37
 158:gpib.c        ****             return false;
 515              		.loc 1 158 0
 516 0032 0023     		movs	r3, #0
 517              	.L35:
 159:gpib.c        ****         }
 160:gpib.c        ****     }
 161:gpib.c        **** }
 518              		.loc 1 161 0
 519 0034 1800     		movs	r0, r3
 520 0036 BD46     		mov	sp, r7
 521 0038 02B0     		add	sp, sp, #8
 522              		@ sp needed
 523 003a 80BD     		pop	{r7, pc}
ARM GAS  C:\Users\essele\AppData\Local\Temp\cclqzyvT.s 			page 13


 524              	.L39:
 525              		.align	2
 526              	.L38:
 527 003c 00000000 		.word	settings
 528              		.cfi_endproc
 529              	.LFE43:
 530              		.size	gpib_wait_for_line_to_assert, .-gpib_wait_for_line_to_assert
 531              		.section	.text.gpib_wait_for_line_to_unassert,"ax",%progbits
 532              		.align	2
 533              		.global	gpib_wait_for_line_to_unassert
 534              		.code	16
 535              		.thumb_func
 536              		.type	gpib_wait_for_line_to_unassert, %function
 537              	gpib_wait_for_line_to_unassert:
 538              	.LFB44:
 162:gpib.c        **** 
 163:gpib.c        **** /**
 164:gpib.c        ****  * Wait for a line to go high, if it doesn't within read_tmo_ms then timeout
 165:gpib.c        ****  */
 166:gpib.c        **** bool gpib_wait_for_line_to_unassert(gpib_line line) {
 539              		.loc 1 166 0
 540              		.cfi_startproc
 541              		@ args = 0, pretend = 0, frame = 8
 542              		@ frame_needed = 1, uses_anonymous_args = 0
 543 0000 80B5     		push	{r7, lr}
 544              		.cfi_def_cfa_offset 8
 545              		.cfi_offset 7, -8
 546              		.cfi_offset 14, -4
 547 0002 82B0     		sub	sp, sp, #8
 548              		.cfi_def_cfa_offset 16
 549 0004 00AF     		add	r7, sp, #0
 550              		.cfi_def_cfa_register 7
 551 0006 0200     		movs	r2, r0
 552 0008 FB1D     		adds	r3, r7, #7
 553 000a 1A70     		strb	r2, [r3]
 167:gpib.c        ****     // Prepare the counter...
 168:gpib.c        ****     Timer1_WriteCounter(0);
 554              		.loc 1 168 0
 555 000c 0020     		movs	r0, #0
 556 000e FFF7FEFF 		bl	Timer1_WriteCounter
 557              	.L44:
 169:gpib.c        ****  
 170:gpib.c        ****     while (1) {
 171:gpib.c        ****         if (gpib_read_line(line) == false) {
 558              		.loc 1 171 0
 559 0012 FB1D     		adds	r3, r7, #7
 560 0014 1B78     		ldrb	r3, [r3]
 561 0016 1800     		movs	r0, r3
 562 0018 FFF7FEFF 		bl	gpib_read_line
 563 001c 0300     		movs	r3, r0
 564 001e 1A00     		movs	r2, r3
 565 0020 0123     		movs	r3, #1
 566 0022 5340     		eors	r3, r2
 567 0024 DBB2     		uxtb	r3, r3
 568 0026 002B     		cmp	r3, #0
 569 0028 01D0     		beq	.L41
 172:gpib.c        ****             return true;
ARM GAS  C:\Users\essele\AppData\Local\Temp\cclqzyvT.s 			page 14


 570              		.loc 1 172 0
 571 002a 0123     		movs	r3, #1
 572 002c 07E0     		b	.L42
 573              	.L41:
 173:gpib.c        ****         }
 174:gpib.c        ****         if (Timer1_ReadCounter() > settings.read_tmo_ms) {
 574              		.loc 1 174 0
 575 002e FFF7FEFF 		bl	Timer1_ReadCounter
 576 0032 0200     		movs	r2, r0
 577 0034 044B     		ldr	r3, .L45
 578 0036 5B8A     		ldrh	r3, [r3, #18]
 579 0038 9A42     		cmp	r2, r3
 580 003a EAD9     		bls	.L44
 175:gpib.c        ****             return false;
 581              		.loc 1 175 0
 582 003c 0023     		movs	r3, #0
 583              	.L42:
 176:gpib.c        ****         }
 177:gpib.c        ****     }
 178:gpib.c        **** }
 584              		.loc 1 178 0
 585 003e 1800     		movs	r0, r3
 586 0040 BD46     		mov	sp, r7
 587 0042 02B0     		add	sp, sp, #8
 588              		@ sp needed
 589 0044 80BD     		pop	{r7, pc}
 590              	.L46:
 591 0046 C046     		.align	2
 592              	.L45:
 593 0048 00000000 		.word	settings
 594              		.cfi_endproc
 595              	.LFE44:
 596              		.size	gpib_wait_for_line_to_unassert, .-gpib_wait_for_line_to_unassert
 597              		.section	.text.gpib_send_byte,"ax",%progbits
 598              		.align	2
 599              		.global	gpib_send_byte
 600              		.code	16
 601              		.thumb_func
 602              		.type	gpib_send_byte, %function
 603              	gpib_send_byte:
 604              	.LFB45:
 179:gpib.c        **** 
 180:gpib.c        **** /**
 181:gpib.c        ****  * Transmit a byte of data on the bus, post this call nothing should be
 182:gpib.c        ****  * asserted. An error returns false.
 183:gpib.c        ****  */
 184:gpib.c        **** bool gpib_send_byte(uint8_t byte, bool last) {
 605              		.loc 1 184 0
 606              		.cfi_startproc
 607              		@ args = 0, pretend = 0, frame = 16
 608              		@ frame_needed = 1, uses_anonymous_args = 0
 609 0000 90B5     		push	{r4, r7, lr}
 610              		.cfi_def_cfa_offset 12
 611              		.cfi_offset 4, -12
 612              		.cfi_offset 7, -8
 613              		.cfi_offset 14, -4
 614 0002 85B0     		sub	sp, sp, #20
ARM GAS  C:\Users\essele\AppData\Local\Temp\cclqzyvT.s 			page 15


 615              		.cfi_def_cfa_offset 32
 616 0004 00AF     		add	r7, sp, #0
 617              		.cfi_def_cfa_register 7
 618 0006 0200     		movs	r2, r0
 619 0008 FB1D     		adds	r3, r7, #7
 620 000a 1A70     		strb	r2, [r3]
 621 000c BB1D     		adds	r3, r7, #6
 622 000e 0A1C     		adds	r2, r1, #0
 623 0010 1A70     		strb	r2, [r3]
 185:gpib.c        ****     bool ok;
 186:gpib.c        ****     
 187:gpib.c        ****     if (last) {
 624              		.loc 1 187 0
 625 0012 BB1D     		adds	r3, r7, #6
 626 0014 1B78     		ldrb	r3, [r3]
 627 0016 002B     		cmp	r3, #0
 628 0018 02D0     		beq	.L48
 188:gpib.c        ****        gpib_assert_line(EOI);
 629              		.loc 1 188 0
 630 001a 0620     		movs	r0, #6
 631 001c FFF7FEFF 		bl	gpib_assert_line
 632              	.L48:
 189:gpib.c        ****     }
 190:gpib.c        ****     
 191:gpib.c        ****     // Wait for NRFD to be high...
 192:gpib.c        ****     ok = gpib_wait_for_line_to_unassert(NRFD);
 633              		.loc 1 192 0
 634 0020 0F23     		movs	r3, #15
 635 0022 FC18     		adds	r4, r7, r3
 636 0024 0420     		movs	r0, #4
 637 0026 FFF7FEFF 		bl	gpib_wait_for_line_to_unassert
 638 002a 0300     		movs	r3, r0
 639 002c 2370     		strb	r3, [r4]
 193:gpib.c        ****     if (!ok) goto cleanup;
 640              		.loc 1 193 0
 641 002e 0F23     		movs	r3, #15
 642 0030 FB18     		adds	r3, r7, r3
 643 0032 1B78     		ldrb	r3, [r3]
 644 0034 0122     		movs	r2, #1
 645 0036 5340     		eors	r3, r2
 646 0038 DBB2     		uxtb	r3, r3
 647 003a 002B     		cmp	r3, #0
 648 003c 11D1     		bne	.L52
 194:gpib.c        ****     
 195:gpib.c        ****     // Write data onto the bus... (reverse logic!)
 196:gpib.c        ****     (*(reg32 *)DIO__DR) = ~byte;
 649              		.loc 1 196 0
 650 003e 114B     		ldr	r3, .L53
 651 0040 FA1D     		adds	r2, r7, #7
 652 0042 1278     		ldrb	r2, [r2]
 653 0044 D243     		mvns	r2, r2
 654 0046 1A60     		str	r2, [r3]
 197:gpib.c        ****     
 198:gpib.c        ****     // Allow settling time...
 199:gpib.c        ****     gpib_settle();     // we may need to adjust this later
 655              		.loc 1 199 0
 656 0048 FFF7FEFF 		bl	gpib_settle
ARM GAS  C:\Users\essele\AppData\Local\Temp\cclqzyvT.s 			page 16


 200:gpib.c        ****     
 201:gpib.c        ****     // Signal data is valie...
 202:gpib.c        ****     gpib_assert_line(DAV);
 657              		.loc 1 202 0
 658 004c 0520     		movs	r0, #5
 659 004e FFF7FEFF 		bl	gpib_assert_line
 203:gpib.c        ****     
 204:gpib.c        ****     // Wait until everyone has received it...
 205:gpib.c        ****     ok = gpib_wait_for_line_to_unassert(NDAC);
 660              		.loc 1 205 0
 661 0052 0F23     		movs	r3, #15
 662 0054 FC18     		adds	r4, r7, r3
 663 0056 0320     		movs	r0, #3
 664 0058 FFF7FEFF 		bl	gpib_wait_for_line_to_unassert
 665 005c 0300     		movs	r3, r0
 666 005e 2370     		strb	r3, [r4]
 667 0060 00E0     		b	.L50
 668              	.L52:
 193:gpib.c        ****     
 669              		.loc 1 193 0
 670 0062 C046     		nop
 671              	.L50:
 206:gpib.c        **** 
 207:gpib.c        **** cleanup:    
 208:gpib.c        ****     // Stop transmitting and clear the data
 209:gpib.c        ****     gpib_unassert_line(DAV);
 672              		.loc 1 209 0
 673 0064 0520     		movs	r0, #5
 674 0066 FFF7FEFF 		bl	gpib_unassert_line
 210:gpib.c        ****     (*(reg32 *)DIO__DR) = 0xff;
 675              		.loc 1 210 0
 676 006a 064B     		ldr	r3, .L53
 677 006c FF22     		movs	r2, #255
 678 006e 1A60     		str	r2, [r3]
 211:gpib.c        **** 
 212:gpib.c        ****     // Unassert anyway...
 213:gpib.c        ****     gpib_unassert_line(EOI);
 679              		.loc 1 213 0
 680 0070 0620     		movs	r0, #6
 681 0072 FFF7FEFF 		bl	gpib_unassert_line
 214:gpib.c        ****     
 215:gpib.c        ****     return ok;
 682              		.loc 1 215 0
 683 0076 0F23     		movs	r3, #15
 684 0078 FB18     		adds	r3, r7, r3
 685 007a 1B78     		ldrb	r3, [r3]
 216:gpib.c        ****  }
 686              		.loc 1 216 0
 687 007c 1800     		movs	r0, r3
 688 007e BD46     		mov	sp, r7
 689 0080 05B0     		add	sp, sp, #20
 690              		@ sp needed
 691 0082 90BD     		pop	{r4, r7, pc}
 692              	.L54:
 693              		.align	2
 694              	.L53:
 695 0084 00020440 		.word	1074004480
ARM GAS  C:\Users\essele\AppData\Local\Temp\cclqzyvT.s 			page 17


 696              		.cfi_endproc
 697              	.LFE45:
 698              		.size	gpib_send_byte, .-gpib_send_byte
 699              		.section	.text.gpib_receive_byte,"ax",%progbits
 700              		.align	2
 701              		.global	gpib_receive_byte
 702              		.code	16
 703              		.thumb_func
 704              		.type	gpib_receive_byte, %function
 705              	gpib_receive_byte:
 706              	.LFB46:
 217:gpib.c        **** 
 218:gpib.c        **** /**
 219:gpib.c        ****  * Read a character from the GPIB bus, return 0 if we got a timeout
 220:gpib.c        ****  * or 1 on success.
 221:gpib.c        ****  */
 222:gpib.c        **** int gpib_receive_byte(uint8_t *byte, int *eoi) {
 707              		.loc 1 222 0
 708              		.cfi_startproc
 709              		@ args = 0, pretend = 0, frame = 16
 710              		@ frame_needed = 1, uses_anonymous_args = 0
 711 0000 80B5     		push	{r7, lr}
 712              		.cfi_def_cfa_offset 8
 713              		.cfi_offset 7, -8
 714              		.cfi_offset 14, -4
 715 0002 84B0     		sub	sp, sp, #16
 716              		.cfi_def_cfa_offset 24
 717 0004 00AF     		add	r7, sp, #0
 718              		.cfi_def_cfa_register 7
 719 0006 7860     		str	r0, [r7, #4]
 720 0008 3960     		str	r1, [r7]
 223:gpib.c        ****     int ok;
 224:gpib.c        ****     
 225:gpib.c        ****     gpib_assert_line(NDAC);
 721              		.loc 1 225 0
 722 000a 0320     		movs	r0, #3
 723 000c FFF7FEFF 		bl	gpib_assert_line
 226:gpib.c        ****     
 227:gpib.c        ****     /*
 228:gpib.c        ****     // Prepare to receive...
 229:gpib.c        ****     gpib_assert_line(NRFD);
 230:gpib.c        ****     
 231:gpib.c        ****     // Why do they unassert ATN if it's set??
 232:gpib.c        ****     */
 233:gpib.c        ****     
 234:gpib.c        ****     // Signal our readiness... (should alreadt be done)
 235:gpib.c        ****     gpib_unassert_line(NRFD);
 724              		.loc 1 235 0
 725 0010 0420     		movs	r0, #4
 726 0012 FFF7FEFF 		bl	gpib_unassert_line
 236:gpib.c        ****     
 237:gpib.c        ****     
 238:gpib.c        ****     // Wait for data to be available...
 239:gpib.c        ****     ok = gpib_wait_for_line_to_assert(DAV);
 727              		.loc 1 239 0
 728 0016 0520     		movs	r0, #5
 729 0018 FFF7FEFF 		bl	gpib_wait_for_line_to_assert
ARM GAS  C:\Users\essele\AppData\Local\Temp\cclqzyvT.s 			page 18


 730 001c 0300     		movs	r3, r0
 731 001e FB60     		str	r3, [r7, #12]
 240:gpib.c        ****     if (!ok) {
 732              		.loc 1 240 0
 733 0020 FB68     		ldr	r3, [r7, #12]
 734 0022 002B     		cmp	r3, #0
 735 0024 07D1     		bne	.L56
 241:gpib.c        ****         gpib_unassert_line(NRFD);
 736              		.loc 1 241 0
 737 0026 0420     		movs	r0, #4
 738 0028 FFF7FEFF 		bl	gpib_unassert_line
 242:gpib.c        ****         gpib_unassert_line(NDAC);
 739              		.loc 1 242 0
 740 002c 0320     		movs	r0, #3
 741 002e FFF7FEFF 		bl	gpib_unassert_line
 243:gpib.c        ****         return 0;
 742              		.loc 1 243 0
 743 0032 0023     		movs	r3, #0
 744 0034 26E0     		b	.L57
 745              	.L56:
 244:gpib.c        ****     }
 245:gpib.c        ****     // Not ready for more data at this point
 246:gpib.c        ****     gpib_assert_line(NRFD);
 746              		.loc 1 246 0
 747 0036 0420     		movs	r0, #4
 748 0038 FFF7FEFF 		bl	gpib_assert_line
 247:gpib.c        ****     
 248:gpib.c        ****     // Read the data...
 249:gpib.c        ****     *byte = ~(*(reg32 *)DIO__PS);
 749              		.loc 1 249 0
 750 003c 134B     		ldr	r3, .L59
 751 003e 1B68     		ldr	r3, [r3]
 752 0040 DBB2     		uxtb	r3, r3
 753 0042 DB43     		mvns	r3, r3
 754 0044 DAB2     		uxtb	r2, r3
 755 0046 7B68     		ldr	r3, [r7, #4]
 756 0048 1A70     		strb	r2, [r3]
 250:gpib.c        ****     *eoi = gpib_read_line(EOI);
 757              		.loc 1 250 0
 758 004a 0620     		movs	r0, #6
 759 004c FFF7FEFF 		bl	gpib_read_line
 760 0050 0300     		movs	r3, r0
 761 0052 1A00     		movs	r2, r3
 762 0054 3B68     		ldr	r3, [r7]
 763 0056 1A60     		str	r2, [r3]
 251:gpib.c        ****     
 252:gpib.c        ****     // If byte is NL (10 decimal) then it's the same as EOI
 253:gpib.c        ****     if (*byte == 10) {
 764              		.loc 1 253 0
 765 0058 7B68     		ldr	r3, [r7, #4]
 766 005a 1B78     		ldrb	r3, [r3]
 767 005c 0A2B     		cmp	r3, #10
 768 005e 02D1     		bne	.L58
 254:gpib.c        ****         *eoi = true;    // TODO
 769              		.loc 1 254 0
 770 0060 3B68     		ldr	r3, [r7]
 771 0062 0122     		movs	r2, #1
ARM GAS  C:\Users\essele\AppData\Local\Temp\cclqzyvT.s 			page 19


 772 0064 1A60     		str	r2, [r3]
 773              	.L58:
 255:gpib.c        ****     }
 256:gpib.c        ****     
 257:gpib.c        ****     
 258:gpib.c        ****     // We've read it...
 259:gpib.c        ****     gpib_unassert_line(NDAC);
 774              		.loc 1 259 0
 775 0066 0320     		movs	r0, #3
 776 0068 FFF7FEFF 		bl	gpib_unassert_line
 260:gpib.c        ****  //   gpib_settle();                  // why would we do this?
 261:gpib.c        ****     
 262:gpib.c        ****     // Wait for the talker to finish this byte
 263:gpib.c        ****     ok = gpib_wait_for_line_to_unassert(DAV);    
 777              		.loc 1 263 0
 778 006c 0520     		movs	r0, #5
 779 006e FFF7FEFF 		bl	gpib_wait_for_line_to_unassert
 780 0072 0300     		movs	r3, r0
 781 0074 FB60     		str	r3, [r7, #12]
 264:gpib.c        **** 
 265:gpib.c        **** //cleanup:
 266:gpib.c        ****     gpib_assert_line(NDAC);
 782              		.loc 1 266 0
 783 0076 0320     		movs	r0, #3
 784 0078 FFF7FEFF 		bl	gpib_assert_line
 267:gpib.c        ****     gpib_unassert_line(NRFD);   // we are still ready for data
 785              		.loc 1 267 0
 786 007c 0420     		movs	r0, #4
 787 007e FFF7FEFF 		bl	gpib_unassert_line
 268:gpib.c        ****  
 269:gpib.c        ****     //gpib_settle();
 270:gpib.c        ****     
 271:gpib.c        ****     return ok;
 788              		.loc 1 271 0
 789 0082 FB68     		ldr	r3, [r7, #12]
 790              	.L57:
 272:gpib.c        **** }
 791              		.loc 1 272 0
 792 0084 1800     		movs	r0, r3
 793 0086 BD46     		mov	sp, r7
 794 0088 04B0     		add	sp, sp, #16
 795              		@ sp needed
 796 008a 80BD     		pop	{r7, pc}
 797              	.L60:
 798              		.align	2
 799              	.L59:
 800 008c 04020440 		.word	1074004484
 801              		.cfi_endproc
 802              	.LFE46:
 803              		.size	gpib_receive_byte, .-gpib_receive_byte
 804              		.section	.text.gpib_interface_clear,"ax",%progbits
 805              		.align	2
 806              		.global	gpib_interface_clear
 807              		.code	16
 808              		.thumb_func
 809              		.type	gpib_interface_clear, %function
 810              	gpib_interface_clear:
ARM GAS  C:\Users\essele\AppData\Local\Temp\cclqzyvT.s 			page 20


 811              	.LFB47:
 273:gpib.c        **** 
 274:gpib.c        **** void gpib_interface_clear() {
 812              		.loc 1 274 0
 813              		.cfi_startproc
 814              		@ args = 0, pretend = 0, frame = 0
 815              		@ frame_needed = 1, uses_anonymous_args = 0
 816 0000 80B5     		push	{r7, lr}
 817              		.cfi_def_cfa_offset 8
 818              		.cfi_offset 7, -8
 819              		.cfi_offset 14, -4
 820 0002 00AF     		add	r7, sp, #0
 821              		.cfi_def_cfa_register 7
 275:gpib.c        ****     gpib_assert_line(IFC);
 822              		.loc 1 275 0
 823 0004 0220     		movs	r0, #2
 824 0006 FFF7FEFF 		bl	gpib_assert_line
 276:gpib.c        ****     CyDelayUs(150);
 825              		.loc 1 276 0
 826 000a 9620     		movs	r0, #150
 827 000c FFF7FEFF 		bl	CyDelayUs
 277:gpib.c        ****     gpib_unassert_line(IFC);
 828              		.loc 1 277 0
 829 0010 0220     		movs	r0, #2
 830 0012 FFF7FEFF 		bl	gpib_unassert_line
 278:gpib.c        ****     CyDelayUs(150);                 // do we need to delay afterwards?
 831              		.loc 1 278 0
 832 0016 9620     		movs	r0, #150
 833 0018 FFF7FEFF 		bl	CyDelayUs
 279:gpib.c        **** }
 834              		.loc 1 279 0
 835 001c C046     		nop
 836 001e BD46     		mov	sp, r7
 837              		@ sp needed
 838 0020 80BD     		pop	{r7, pc}
 839              		.cfi_endproc
 840              	.LFE47:
 841              		.size	gpib_interface_clear, .-gpib_interface_clear
 842 0022 C046     		.section	.text.gpib_LAD,"ax",%progbits
 843              		.align	2
 844              		.global	gpib_LAD
 845              		.code	16
 846              		.thumb_func
 847              		.type	gpib_LAD, %function
 848              	gpib_LAD:
 849              	.LFB48:
 280:gpib.c        **** 
 281:gpib.c        **** void gpib_LAD(uint8_t address) {
 850              		.loc 1 281 0
 851              		.cfi_startproc
 852              		@ args = 0, pretend = 0, frame = 8
 853              		@ frame_needed = 1, uses_anonymous_args = 0
 854 0000 80B5     		push	{r7, lr}
 855              		.cfi_def_cfa_offset 8
 856              		.cfi_offset 7, -8
 857              		.cfi_offset 14, -4
 858 0002 82B0     		sub	sp, sp, #8
ARM GAS  C:\Users\essele\AppData\Local\Temp\cclqzyvT.s 			page 21


 859              		.cfi_def_cfa_offset 16
 860 0004 00AF     		add	r7, sp, #0
 861              		.cfi_def_cfa_register 7
 862 0006 0200     		movs	r2, r0
 863 0008 FB1D     		adds	r3, r7, #7
 864 000a 1A70     		strb	r2, [r3]
 282:gpib.c        ****     gpib_send_byte(0x20 + address, false);
 865              		.loc 1 282 0
 866 000c FB1D     		adds	r3, r7, #7
 867 000e 1B78     		ldrb	r3, [r3]
 868 0010 2033     		adds	r3, r3, #32
 869 0012 DBB2     		uxtb	r3, r3
 870 0014 0021     		movs	r1, #0
 871 0016 1800     		movs	r0, r3
 872 0018 FFF7FEFF 		bl	gpib_send_byte
 283:gpib.c        **** }
 873              		.loc 1 283 0
 874 001c C046     		nop
 875 001e BD46     		mov	sp, r7
 876 0020 02B0     		add	sp, sp, #8
 877              		@ sp needed
 878 0022 80BD     		pop	{r7, pc}
 879              		.cfi_endproc
 880              	.LFE48:
 881              		.size	gpib_LAD, .-gpib_LAD
 882              		.section	.text.gpib_TAD,"ax",%progbits
 883              		.align	2
 884              		.global	gpib_TAD
 885              		.code	16
 886              		.thumb_func
 887              		.type	gpib_TAD, %function
 888              	gpib_TAD:
 889              	.LFB49:
 284:gpib.c        **** 
 285:gpib.c        **** void gpib_TAD(uint8_t address) {
 890              		.loc 1 285 0
 891              		.cfi_startproc
 892              		@ args = 0, pretend = 0, frame = 8
 893              		@ frame_needed = 1, uses_anonymous_args = 0
 894 0000 80B5     		push	{r7, lr}
 895              		.cfi_def_cfa_offset 8
 896              		.cfi_offset 7, -8
 897              		.cfi_offset 14, -4
 898 0002 82B0     		sub	sp, sp, #8
 899              		.cfi_def_cfa_offset 16
 900 0004 00AF     		add	r7, sp, #0
 901              		.cfi_def_cfa_register 7
 902 0006 0200     		movs	r2, r0
 903 0008 FB1D     		adds	r3, r7, #7
 904 000a 1A70     		strb	r2, [r3]
 286:gpib.c        ****     gpib_send_byte(0x40 + address, false);
 905              		.loc 1 286 0
 906 000c FB1D     		adds	r3, r7, #7
 907 000e 1B78     		ldrb	r3, [r3]
 908 0010 4033     		adds	r3, r3, #64
 909 0012 DBB2     		uxtb	r3, r3
 910 0014 0021     		movs	r1, #0
ARM GAS  C:\Users\essele\AppData\Local\Temp\cclqzyvT.s 			page 22


 911 0016 1800     		movs	r0, r3
 912 0018 FFF7FEFF 		bl	gpib_send_byte
 287:gpib.c        **** }
 913              		.loc 1 287 0
 914 001c C046     		nop
 915 001e BD46     		mov	sp, r7
 916 0020 02B0     		add	sp, sp, #8
 917              		@ sp needed
 918 0022 80BD     		pop	{r7, pc}
 919              		.cfi_endproc
 920              	.LFE49:
 921              		.size	gpib_TAD, .-gpib_TAD
 922              		.section	.text.gpib_UNL,"ax",%progbits
 923              		.align	2
 924              		.global	gpib_UNL
 925              		.code	16
 926              		.thumb_func
 927              		.type	gpib_UNL, %function
 928              	gpib_UNL:
 929              	.LFB50:
 288:gpib.c        **** 
 289:gpib.c        **** void gpib_UNL() {
 930              		.loc 1 289 0
 931              		.cfi_startproc
 932              		@ args = 0, pretend = 0, frame = 0
 933              		@ frame_needed = 1, uses_anonymous_args = 0
 934 0000 80B5     		push	{r7, lr}
 935              		.cfi_def_cfa_offset 8
 936              		.cfi_offset 7, -8
 937              		.cfi_offset 14, -4
 938 0002 00AF     		add	r7, sp, #0
 939              		.cfi_def_cfa_register 7
 290:gpib.c        ****     gpib_LAD(31);
 940              		.loc 1 290 0
 941 0004 1F20     		movs	r0, #31
 942 0006 FFF7FEFF 		bl	gpib_LAD
 291:gpib.c        **** }
 943              		.loc 1 291 0
 944 000a C046     		nop
 945 000c BD46     		mov	sp, r7
 946              		@ sp needed
 947 000e 80BD     		pop	{r7, pc}
 948              		.cfi_endproc
 949              	.LFE50:
 950              		.size	gpib_UNL, .-gpib_UNL
 951              		.section	.text.gpib_UNT,"ax",%progbits
 952              		.align	2
 953              		.global	gpib_UNT
 954              		.code	16
 955              		.thumb_func
 956              		.type	gpib_UNT, %function
 957              	gpib_UNT:
 958              	.LFB51:
 292:gpib.c        **** 
 293:gpib.c        **** void gpib_UNT() {
 959              		.loc 1 293 0
 960              		.cfi_startproc
ARM GAS  C:\Users\essele\AppData\Local\Temp\cclqzyvT.s 			page 23


 961              		@ args = 0, pretend = 0, frame = 0
 962              		@ frame_needed = 1, uses_anonymous_args = 0
 963 0000 80B5     		push	{r7, lr}
 964              		.cfi_def_cfa_offset 8
 965              		.cfi_offset 7, -8
 966              		.cfi_offset 14, -4
 967 0002 00AF     		add	r7, sp, #0
 968              		.cfi_def_cfa_register 7
 294:gpib.c        ****     gpib_TAD(31);
 969              		.loc 1 294 0
 970 0004 1F20     		movs	r0, #31
 971 0006 FFF7FEFF 		bl	gpib_TAD
 295:gpib.c        **** }
 972              		.loc 1 295 0
 973 000a C046     		nop
 974 000c BD46     		mov	sp, r7
 975              		@ sp needed
 976 000e 80BD     		pop	{r7, pc}
 977              		.cfi_endproc
 978              	.LFE51:
 979              		.size	gpib_UNT, .-gpib_UNT
 980              		.section	.text.gpib_send_SDC,"ax",%progbits
 981              		.align	2
 982              		.global	gpib_send_SDC
 983              		.code	16
 984              		.thumb_func
 985              		.type	gpib_send_SDC, %function
 986              	gpib_send_SDC:
 987              	.LFB52:
 296:gpib.c        **** 
 297:gpib.c        **** // TODO: this all needs to be tidied and parameterised ... horrible!
 298:gpib.c        **** void gpib_send_SDC() {
 988              		.loc 1 298 0
 989              		.cfi_startproc
 990              		@ args = 0, pretend = 0, frame = 0
 991              		@ frame_needed = 1, uses_anonymous_args = 0
 992 0000 80B5     		push	{r7, lr}
 993              		.cfi_def_cfa_offset 8
 994              		.cfi_offset 7, -8
 995              		.cfi_offset 14, -4
 996 0002 00AF     		add	r7, sp, #0
 997              		.cfi_def_cfa_register 7
 299:gpib.c        ****     gpib_assert_line(ATN);
 998              		.loc 1 299 0
 999 0004 0020     		movs	r0, #0
 1000 0006 FFF7FEFF 		bl	gpib_assert_line
 300:gpib.c        ****     gpib_settle();                  // do we need this?
 1001              		.loc 1 300 0
 1002 000a FFF7FEFF 		bl	gpib_settle
 301:gpib.c        ****     gpib_send_byte(0x04, false);
 1003              		.loc 1 301 0
 1004 000e 0021     		movs	r1, #0
 1005 0010 0420     		movs	r0, #4
 1006 0012 FFF7FEFF 		bl	gpib_send_byte
 302:gpib.c        ****     gpib_unassert_line(ATN);
 1007              		.loc 1 302 0
 1008 0016 0020     		movs	r0, #0
ARM GAS  C:\Users\essele\AppData\Local\Temp\cclqzyvT.s 			page 24


 1009 0018 FFF7FEFF 		bl	gpib_unassert_line
 303:gpib.c        ****     gpib_settle();                  // do we need this?
 1010              		.loc 1 303 0
 1011 001c FFF7FEFF 		bl	gpib_settle
 304:gpib.c        **** }
 1012              		.loc 1 304 0
 1013 0020 C046     		nop
 1014 0022 BD46     		mov	sp, r7
 1015              		@ sp needed
 1016 0024 80BD     		pop	{r7, pc}
 1017              		.cfi_endproc
 1018              	.LFE52:
 1019              		.size	gpib_send_SDC, .-gpib_send_SDC
 1020 0026 C046     		.section	.text.gpib_send_LLO,"ax",%progbits
 1021              		.align	2
 1022              		.global	gpib_send_LLO
 1023              		.code	16
 1024              		.thumb_func
 1025              		.type	gpib_send_LLO, %function
 1026              	gpib_send_LLO:
 1027              	.LFB53:
 305:gpib.c        **** void gpib_send_LLO() {
 1028              		.loc 1 305 0
 1029              		.cfi_startproc
 1030              		@ args = 0, pretend = 0, frame = 0
 1031              		@ frame_needed = 1, uses_anonymous_args = 0
 1032 0000 80B5     		push	{r7, lr}
 1033              		.cfi_def_cfa_offset 8
 1034              		.cfi_offset 7, -8
 1035              		.cfi_offset 14, -4
 1036 0002 00AF     		add	r7, sp, #0
 1037              		.cfi_def_cfa_register 7
 306:gpib.c        ****     gpib_assert_line(ATN);
 1038              		.loc 1 306 0
 1039 0004 0020     		movs	r0, #0
 1040 0006 FFF7FEFF 		bl	gpib_assert_line
 307:gpib.c        ****     gpib_settle();                  // do we need this?
 1041              		.loc 1 307 0
 1042 000a FFF7FEFF 		bl	gpib_settle
 308:gpib.c        ****     gpib_send_byte(0x11, false);
 1043              		.loc 1 308 0
 1044 000e 0021     		movs	r1, #0
 1045 0010 1120     		movs	r0, #17
 1046 0012 FFF7FEFF 		bl	gpib_send_byte
 309:gpib.c        ****     gpib_unassert_line(ATN);
 1047              		.loc 1 309 0
 1048 0016 0020     		movs	r0, #0
 1049 0018 FFF7FEFF 		bl	gpib_unassert_line
 310:gpib.c        ****     gpib_settle();                  // do we need this?
 1050              		.loc 1 310 0
 1051 001c FFF7FEFF 		bl	gpib_settle
 311:gpib.c        **** }
 1052              		.loc 1 311 0
 1053 0020 C046     		nop
 1054 0022 BD46     		mov	sp, r7
 1055              		@ sp needed
 1056 0024 80BD     		pop	{r7, pc}
ARM GAS  C:\Users\essele\AppData\Local\Temp\cclqzyvT.s 			page 25


 1057              		.cfi_endproc
 1058              	.LFE53:
 1059              		.size	gpib_send_LLO, .-gpib_send_LLO
 1060 0026 C046     		.section	.text.gpib_send_GTL,"ax",%progbits
 1061              		.align	2
 1062              		.global	gpib_send_GTL
 1063              		.code	16
 1064              		.thumb_func
 1065              		.type	gpib_send_GTL, %function
 1066              	gpib_send_GTL:
 1067              	.LFB54:
 312:gpib.c        **** // need REN unasserted for this one...
 313:gpib.c        **** void gpib_send_GTL() {
 1068              		.loc 1 313 0
 1069              		.cfi_startproc
 1070              		@ args = 0, pretend = 0, frame = 0
 1071              		@ frame_needed = 1, uses_anonymous_args = 0
 1072 0000 80B5     		push	{r7, lr}
 1073              		.cfi_def_cfa_offset 8
 1074              		.cfi_offset 7, -8
 1075              		.cfi_offset 14, -4
 1076 0002 00AF     		add	r7, sp, #0
 1077              		.cfi_def_cfa_register 7
 314:gpib.c        ****     gpib_unassert_line(REN);
 1078              		.loc 1 314 0
 1079 0004 0720     		movs	r0, #7
 1080 0006 FFF7FEFF 		bl	gpib_unassert_line
 315:gpib.c        ****     gpib_assert_line(ATN);
 1081              		.loc 1 315 0
 1082 000a 0020     		movs	r0, #0
 1083 000c FFF7FEFF 		bl	gpib_assert_line
 316:gpib.c        ****     gpib_settle();                  // do we need this?
 1084              		.loc 1 316 0
 1085 0010 FFF7FEFF 		bl	gpib_settle
 317:gpib.c        ****     gpib_send_byte(0x01, false);
 1086              		.loc 1 317 0
 1087 0014 0021     		movs	r1, #0
 1088 0016 0120     		movs	r0, #1
 1089 0018 FFF7FEFF 		bl	gpib_send_byte
 318:gpib.c        ****     gpib_unassert_line(ATN);
 1090              		.loc 1 318 0
 1091 001c 0020     		movs	r0, #0
 1092 001e FFF7FEFF 		bl	gpib_unassert_line
 319:gpib.c        ****     gpib_settle();                  // do we need this?
 1093              		.loc 1 319 0
 1094 0022 FFF7FEFF 		bl	gpib_settle
 320:gpib.c        **** }
 1095              		.loc 1 320 0
 1096 0026 C046     		nop
 1097 0028 BD46     		mov	sp, r7
 1098              		@ sp needed
 1099 002a 80BD     		pop	{r7, pc}
 1100              		.cfi_endproc
 1101              	.LFE54:
 1102              		.size	gpib_send_GTL, .-gpib_send_GTL
 1103              		.section	.text.gpib_address_listener,"ax",%progbits
 1104              		.align	2
ARM GAS  C:\Users\essele\AppData\Local\Temp\cclqzyvT.s 			page 26


 1105              		.global	gpib_address_listener
 1106              		.code	16
 1107              		.thumb_func
 1108              		.type	gpib_address_listener, %function
 1109              	gpib_address_listener:
 1110              	.LFB55:
 321:gpib.c        **** 
 322:gpib.c        **** void gpib_address_listener(uint8_t address) {
 1111              		.loc 1 322 0
 1112              		.cfi_startproc
 1113              		@ args = 0, pretend = 0, frame = 8
 1114              		@ frame_needed = 1, uses_anonymous_args = 0
 1115 0000 80B5     		push	{r7, lr}
 1116              		.cfi_def_cfa_offset 8
 1117              		.cfi_offset 7, -8
 1118              		.cfi_offset 14, -4
 1119 0002 82B0     		sub	sp, sp, #8
 1120              		.cfi_def_cfa_offset 16
 1121 0004 00AF     		add	r7, sp, #0
 1122              		.cfi_def_cfa_register 7
 1123 0006 0200     		movs	r2, r0
 1124 0008 FB1D     		adds	r3, r7, #7
 1125 000a 1A70     		strb	r2, [r3]
 323:gpib.c        ****     
 324:gpib.c        ****     if (listening == address) {
 1126              		.loc 1 324 0
 1127 000c FB1D     		adds	r3, r7, #7
 1128 000e 1A78     		ldrb	r2, [r3]
 1129 0010 1A4B     		ldr	r3, .L73
 1130 0012 1B68     		ldr	r3, [r3]
 1131 0014 9A42     		cmp	r2, r3
 1132 0016 2CD0     		beq	.L72
 325:gpib.c        ****         return;
 326:gpib.c        ****     }
 327:gpib.c        ****     
 328:gpib.c        ****     // Need to enable "REMOTE" so devices will enter remote mode
 329:gpib.c        ****     // TODO: this should probably be an option??
 330:gpib.c        ****     // TODO: do we need to undo this for a talker??
 331:gpib.c        ****     
 332:gpib.c        ****     gpib_unassert_line(NRFD);
 1133              		.loc 1 332 0
 1134 0018 0420     		movs	r0, #4
 1135 001a FFF7FEFF 		bl	gpib_unassert_line
 333:gpib.c        ****     gpib_unassert_line(NDAC);
 1136              		.loc 1 333 0
 1137 001e 0320     		movs	r0, #3
 1138 0020 FFF7FEFF 		bl	gpib_unassert_line
 334:gpib.c        ****     
 335:gpib.c        ****     gpib_assert_line(REN);
 1139              		.loc 1 335 0
 1140 0024 0720     		movs	r0, #7
 1141 0026 FFF7FEFF 		bl	gpib_assert_line
 336:gpib.c        ****     gpib_settle();                  // do we need this?
 1142              		.loc 1 336 0
 1143 002a FFF7FEFF 		bl	gpib_settle
 337:gpib.c        **** 
 338:gpib.c        ****     gpib_assert_line(ATN);
ARM GAS  C:\Users\essele\AppData\Local\Temp\cclqzyvT.s 			page 27


 1144              		.loc 1 338 0
 1145 002e 0020     		movs	r0, #0
 1146 0030 FFF7FEFF 		bl	gpib_assert_line
 339:gpib.c        ****     gpib_settle();                  // do we need this?
 1147              		.loc 1 339 0
 1148 0034 FFF7FEFF 		bl	gpib_settle
 340:gpib.c        ****     
 341:gpib.c        ****     gpib_UNL();     // stop everyone listening
 1149              		.loc 1 341 0
 1150 0038 FFF7FEFF 		bl	gpib_UNL
 342:gpib.c        ****     gpib_UNT();     // stop everyone talking
 1151              		.loc 1 342 0
 1152 003c FFF7FEFF 		bl	gpib_UNT
 343:gpib.c        ****     gpib_LAD(address);
 1153              		.loc 1 343 0
 1154 0040 FB1D     		adds	r3, r7, #7
 1155 0042 1B78     		ldrb	r3, [r3]
 1156 0044 1800     		movs	r0, r3
 1157 0046 FFF7FEFF 		bl	gpib_LAD
 344:gpib.c        ****     gpib_TAD(my_address);
 1158              		.loc 1 344 0
 1159 004a 0D4B     		ldr	r3, .L73+4
 1160 004c 1B78     		ldrb	r3, [r3]
 1161 004e 1800     		movs	r0, r3
 1162 0050 FFF7FEFF 		bl	gpib_TAD
 345:gpib.c        ****     
 346:gpib.c        ****     gpib_unassert_line(ATN);
 1163              		.loc 1 346 0
 1164 0054 0020     		movs	r0, #0
 1165 0056 FFF7FEFF 		bl	gpib_unassert_line
 347:gpib.c        ****     gpib_settle();              // do we need this?
 1166              		.loc 1 347 0
 1167 005a FFF7FEFF 		bl	gpib_settle
 348:gpib.c        ****     
 349:gpib.c        ****     listening = address;
 1168              		.loc 1 349 0
 1169 005e FB1D     		adds	r3, r7, #7
 1170 0060 1A78     		ldrb	r2, [r3]
 1171 0062 064B     		ldr	r3, .L73
 1172 0064 1A60     		str	r2, [r3]
 350:gpib.c        ****     talking = my_address;
 1173              		.loc 1 350 0
 1174 0066 064B     		ldr	r3, .L73+4
 1175 0068 1B78     		ldrb	r3, [r3]
 1176 006a 1A00     		movs	r2, r3
 1177 006c 054B     		ldr	r3, .L73+8
 1178 006e 1A60     		str	r2, [r3]
 1179 0070 00E0     		b	.L69
 1180              	.L72:
 325:gpib.c        ****     }
 1181              		.loc 1 325 0
 1182 0072 C046     		nop
 1183              	.L69:
 351:gpib.c        **** }
 1184              		.loc 1 351 0
 1185 0074 BD46     		mov	sp, r7
 1186 0076 02B0     		add	sp, sp, #8
ARM GAS  C:\Users\essele\AppData\Local\Temp\cclqzyvT.s 			page 28


 1187              		@ sp needed
 1188 0078 80BD     		pop	{r7, pc}
 1189              	.L74:
 1190 007a C046     		.align	2
 1191              	.L73:
 1192 007c 00000000 		.word	listening
 1193 0080 00000000 		.word	my_address
 1194 0084 00000000 		.word	talking
 1195              		.cfi_endproc
 1196              	.LFE55:
 1197              		.size	gpib_address_listener, .-gpib_address_listener
 1198              		.section	.text.gpib_address_talker,"ax",%progbits
 1199              		.align	2
 1200              		.global	gpib_address_talker
 1201              		.code	16
 1202              		.thumb_func
 1203              		.type	gpib_address_talker, %function
 1204              	gpib_address_talker:
 1205              	.LFB56:
 352:gpib.c        **** 
 353:gpib.c        **** void gpib_address_talker(uint8_t address) {
 1206              		.loc 1 353 0
 1207              		.cfi_startproc
 1208              		@ args = 0, pretend = 0, frame = 8
 1209              		@ frame_needed = 1, uses_anonymous_args = 0
 1210 0000 80B5     		push	{r7, lr}
 1211              		.cfi_def_cfa_offset 8
 1212              		.cfi_offset 7, -8
 1213              		.cfi_offset 14, -4
 1214 0002 82B0     		sub	sp, sp, #8
 1215              		.cfi_def_cfa_offset 16
 1216 0004 00AF     		add	r7, sp, #0
 1217              		.cfi_def_cfa_register 7
 1218 0006 0200     		movs	r2, r0
 1219 0008 FB1D     		adds	r3, r7, #7
 1220 000a 1A70     		strb	r2, [r3]
 354:gpib.c        **** 
 355:gpib.c        ****     if (talking == address) {
 1221              		.loc 1 355 0
 1222 000c FB1D     		adds	r3, r7, #7
 1223 000e 1A78     		ldrb	r2, [r3]
 1224 0010 1C4B     		ldr	r3, .L79
 1225 0012 1B68     		ldr	r3, [r3]
 1226 0014 9A42     		cmp	r2, r3
 1227 0016 30D0     		beq	.L78
 356:gpib.c        ****         return;
 357:gpib.c        ****     }
 358:gpib.c        ****     
 359:gpib.c        ****     // Make sure we are not asserting any handshake stuff...
 360:gpib.c        ****     gpib_unassert_line(NRFD);
 1228              		.loc 1 360 0
 1229 0018 0420     		movs	r0, #4
 1230 001a FFF7FEFF 		bl	gpib_unassert_line
 361:gpib.c        ****     gpib_unassert_line(NDAC);
 1231              		.loc 1 361 0
 1232 001e 0320     		movs	r0, #3
 1233 0020 FFF7FEFF 		bl	gpib_unassert_line
ARM GAS  C:\Users\essele\AppData\Local\Temp\cclqzyvT.s 			page 29


 362:gpib.c        ****  
 363:gpib.c        ****     // 
 364:gpib.c        ****     gpib_assert_line(ATN);
 1234              		.loc 1 364 0
 1235 0024 0020     		movs	r0, #0
 1236 0026 FFF7FEFF 		bl	gpib_assert_line
 365:gpib.c        ****     gpib_settle();                  // do we need this?
 1237              		.loc 1 365 0
 1238 002a FFF7FEFF 		bl	gpib_settle
 366:gpib.c        ****     
 367:gpib.c        ****     gpib_UNL();     // stop everyone listening
 1239              		.loc 1 367 0
 1240 002e FFF7FEFF 		bl	gpib_UNL
 368:gpib.c        ****     gpib_UNT();     // stop everyone talking
 1241              		.loc 1 368 0
 1242 0032 FFF7FEFF 		bl	gpib_UNT
 369:gpib.c        ****     gpib_LAD(my_address);
 1243              		.loc 1 369 0
 1244 0036 144B     		ldr	r3, .L79+4
 1245 0038 1B78     		ldrb	r3, [r3]
 1246 003a 1800     		movs	r0, r3
 1247 003c FFF7FEFF 		bl	gpib_LAD
 370:gpib.c        ****     gpib_TAD(address);
 1248              		.loc 1 370 0
 1249 0040 FB1D     		adds	r3, r7, #7
 1250 0042 1B78     		ldrb	r3, [r3]
 1251 0044 1800     		movs	r0, r3
 1252 0046 FFF7FEFF 		bl	gpib_TAD
 371:gpib.c        ****     
 372:gpib.c        ****     gpib_unassert_line(ATN);
 1253              		.loc 1 372 0
 1254 004a 0020     		movs	r0, #0
 1255 004c FFF7FEFF 		bl	gpib_unassert_line
 373:gpib.c        ****     gpib_settle();              // do we need this?
 1256              		.loc 1 373 0
 1257 0050 FFF7FEFF 		bl	gpib_settle
 374:gpib.c        ****     
 375:gpib.c        ****     // Prepare to receive... should NDAC be earlier to avoid both high errors
 376:gpib.c        ****     gpib_assert_line(NRFD);
 1258              		.loc 1 376 0
 1259 0054 0420     		movs	r0, #4
 1260 0056 FFF7FEFF 		bl	gpib_assert_line
 377:gpib.c        ****     gpib_assert_line(NDAC);
 1261              		.loc 1 377 0
 1262 005a 0320     		movs	r0, #3
 1263 005c FFF7FEFF 		bl	gpib_assert_line
 378:gpib.c        ****     
 379:gpib.c        ****     // Signal our readiness...
 380:gpib.c        ****     gpib_unassert_line(NRFD);
 1264              		.loc 1 380 0
 1265 0060 0420     		movs	r0, #4
 1266 0062 FFF7FEFF 		bl	gpib_unassert_line
 381:gpib.c        ****     
 382:gpib.c        ****     talking = address;
 1267              		.loc 1 382 0
 1268 0066 FB1D     		adds	r3, r7, #7
 1269 0068 1A78     		ldrb	r2, [r3]
ARM GAS  C:\Users\essele\AppData\Local\Temp\cclqzyvT.s 			page 30


 1270 006a 064B     		ldr	r3, .L79
 1271 006c 1A60     		str	r2, [r3]
 383:gpib.c        ****     listening = my_address;
 1272              		.loc 1 383 0
 1273 006e 064B     		ldr	r3, .L79+4
 1274 0070 1B78     		ldrb	r3, [r3]
 1275 0072 1A00     		movs	r2, r3
 1276 0074 054B     		ldr	r3, .L79+8
 1277 0076 1A60     		str	r2, [r3]
 1278 0078 00E0     		b	.L75
 1279              	.L78:
 356:gpib.c        ****     }
 1280              		.loc 1 356 0
 1281 007a C046     		nop
 1282              	.L75:
 384:gpib.c        **** }
 1283              		.loc 1 384 0
 1284 007c BD46     		mov	sp, r7
 1285 007e 02B0     		add	sp, sp, #8
 1286              		@ sp needed
 1287 0080 80BD     		pop	{r7, pc}
 1288              	.L80:
 1289 0082 C046     		.align	2
 1290              	.L79:
 1291 0084 00000000 		.word	talking
 1292 0088 00000000 		.word	my_address
 1293 008c 00000000 		.word	listening
 1294              		.cfi_endproc
 1295              	.LFE56:
 1296              		.size	gpib_address_talker, .-gpib_address_talker
 1297              		.section	.text.gpib_talking,"ax",%progbits
 1298              		.align	2
 1299              		.global	gpib_talking
 1300              		.code	16
 1301              		.thumb_func
 1302              		.type	gpib_talking, %function
 1303              	gpib_talking:
 1304              	.LFB57:
 385:gpib.c        **** 
 386:gpib.c        **** /**
 387:gpib.c        ****  * See if the talker has put some data on the bus...
 388:gpib.c        ****  */
 389:gpib.c        **** // TODO: get rid of bool
 390:gpib.c        **** bool gpib_talking() {
 1305              		.loc 1 390 0
 1306              		.cfi_startproc
 1307              		@ args = 0, pretend = 0, frame = 0
 1308              		@ frame_needed = 1, uses_anonymous_args = 0
 1309 0000 80B5     		push	{r7, lr}
 1310              		.cfi_def_cfa_offset 8
 1311              		.cfi_offset 7, -8
 1312              		.cfi_offset 14, -4
 1313 0002 00AF     		add	r7, sp, #0
 1314              		.cfi_def_cfa_register 7
 391:gpib.c        ****     return gpib_read_line(DAV);
 1315              		.loc 1 391 0
 1316 0004 0520     		movs	r0, #5
ARM GAS  C:\Users\essele\AppData\Local\Temp\cclqzyvT.s 			page 31


 1317 0006 FFF7FEFF 		bl	gpib_read_line
 1318 000a 0300     		movs	r3, r0
 392:gpib.c        **** }
 1319              		.loc 1 392 0
 1320 000c 1800     		movs	r0, r3
 1321 000e BD46     		mov	sp, r7
 1322              		@ sp needed
 1323 0010 80BD     		pop	{r7, pc}
 1324              		.cfi_endproc
 1325              	.LFE57:
 1326              		.size	gpib_talking, .-gpib_talking
 1327 0012 C046     		.section	.text.gpib_send,"ax",%progbits
 1328              		.align	2
 1329              		.global	gpib_send
 1330              		.code	16
 1331              		.thumb_func
 1332              		.type	gpib_send, %function
 1333              	gpib_send:
 1334              	.LFB58:
 393:gpib.c        **** 
 394:gpib.c        **** /**
 395:gpib.c        ****  * Send a buffer over the GPIB interface, do the right thing with EO
 396:gpib.c        ****  * unless we have it disabled.
 397:gpib.c        ****  */
 398:gpib.c        **** // TODO: error checking and return
 399:gpib.c        **** // TODO: should separate the address listener and the send, so we can send
 400:gpib.c        **** //       multiple chunks??
 401:gpib.c        **** void gpib_send(uint8_t address, const uint8_t *buf, int len) {
 1335              		.loc 1 401 0
 1336              		.cfi_startproc
 1337              		@ args = 0, pretend = 0, frame = 24
 1338              		@ frame_needed = 1, uses_anonymous_args = 0
 1339 0000 80B5     		push	{r7, lr}
 1340              		.cfi_def_cfa_offset 8
 1341              		.cfi_offset 7, -8
 1342              		.cfi_offset 14, -4
 1343 0002 86B0     		sub	sp, sp, #24
 1344              		.cfi_def_cfa_offset 32
 1345 0004 00AF     		add	r7, sp, #0
 1346              		.cfi_def_cfa_register 7
 1347 0006 B960     		str	r1, [r7, #8]
 1348 0008 7A60     		str	r2, [r7, #4]
 1349 000a 0F23     		movs	r3, #15
 1350 000c FB18     		adds	r3, r7, r3
 1351 000e 021C     		adds	r2, r0, #0
 1352 0010 1A70     		strb	r2, [r3]
 402:gpib.c        ****     int eoipos = (settings.eoi ? len-1 : -1);
 1353              		.loc 1 402 0
 1354 0012 154B     		ldr	r3, .L88
 1355 0014 5B89     		ldrh	r3, [r3, #10]
 1356 0016 002B     		cmp	r3, #0
 1357 0018 02D0     		beq	.L84
 1358              		.loc 1 402 0 is_stmt 0 discriminator 1
 1359 001a 7B68     		ldr	r3, [r7, #4]
 1360 001c 013B     		subs	r3, r3, #1
 1361 001e 01E0     		b	.L85
 1362              	.L84:
ARM GAS  C:\Users\essele\AppData\Local\Temp\cclqzyvT.s 			page 32


 1363              		.loc 1 402 0 discriminator 2
 1364 0020 0123     		movs	r3, #1
 1365 0022 5B42     		rsbs	r3, r3, #0
 1366              	.L85:
 1367              		.loc 1 402 0 discriminator 4
 1368 0024 3B61     		str	r3, [r7, #16]
 403:gpib.c        ****     
 404:gpib.c        ****     gpib_address_listener(address);
 1369              		.loc 1 404 0 is_stmt 1 discriminator 4
 1370 0026 0F23     		movs	r3, #15
 1371 0028 FB18     		adds	r3, r7, r3
 1372 002a 1B78     		ldrb	r3, [r3]
 1373 002c 1800     		movs	r0, r3
 1374 002e FFF7FEFF 		bl	gpib_address_listener
 1375              	.LBB2:
 405:gpib.c        ****     
 406:gpib.c        ****     for (int i=0; i < len; i++) {
 1376              		.loc 1 406 0 discriminator 4
 1377 0032 0023     		movs	r3, #0
 1378 0034 7B61     		str	r3, [r7, #20]
 1379 0036 0FE0     		b	.L86
 1380              	.L87:
 407:gpib.c        ****         gpib_send_byte(buf[i], (i == eoipos));
 1381              		.loc 1 407 0 discriminator 3
 1382 0038 7B69     		ldr	r3, [r7, #20]
 1383 003a BA68     		ldr	r2, [r7, #8]
 1384 003c D318     		adds	r3, r2, r3
 1385 003e 1878     		ldrb	r0, [r3]
 1386 0040 7A69     		ldr	r2, [r7, #20]
 1387 0042 3B69     		ldr	r3, [r7, #16]
 1388 0044 D31A     		subs	r3, r2, r3
 1389 0046 5A42     		rsbs	r2, r3, #0
 1390 0048 5341     		adcs	r3, r3, r2
 1391 004a DBB2     		uxtb	r3, r3
 1392 004c 1900     		movs	r1, r3
 1393 004e FFF7FEFF 		bl	gpib_send_byte
 406:gpib.c        ****         gpib_send_byte(buf[i], (i == eoipos));
 1394              		.loc 1 406 0 discriminator 3
 1395 0052 7B69     		ldr	r3, [r7, #20]
 1396 0054 0133     		adds	r3, r3, #1
 1397 0056 7B61     		str	r3, [r7, #20]
 1398              	.L86:
 406:gpib.c        ****         gpib_send_byte(buf[i], (i == eoipos));
 1399              		.loc 1 406 0 is_stmt 0 discriminator 1
 1400 0058 7A69     		ldr	r2, [r7, #20]
 1401 005a 7B68     		ldr	r3, [r7, #4]
 1402 005c 9A42     		cmp	r2, r3
 1403 005e EBDB     		blt	.L87
 1404              	.LBE2:
 408:gpib.c        ****     }
 409:gpib.c        **** }
 1405              		.loc 1 409 0 is_stmt 1
 1406 0060 C046     		nop
 1407 0062 BD46     		mov	sp, r7
 1408 0064 06B0     		add	sp, sp, #24
 1409              		@ sp needed
 1410 0066 80BD     		pop	{r7, pc}
ARM GAS  C:\Users\essele\AppData\Local\Temp\cclqzyvT.s 			page 33


 1411              	.L89:
 1412              		.align	2
 1413              	.L88:
 1414 0068 00000000 		.word	settings
 1415              		.cfi_endproc
 1416              	.LFE58:
 1417              		.size	gpib_send, .-gpib_send
 1418              		.section	.text.gpib_send_bytes,"ax",%progbits
 1419              		.align	2
 1420              		.global	gpib_send_bytes
 1421              		.code	16
 1422              		.thumb_func
 1423              		.type	gpib_send_bytes, %function
 1424              	gpib_send_bytes:
 1425              	.LFB59:
 410:gpib.c        **** void gpib_send_bytes(const uint8_t *buf, int len, int last) {
 1426              		.loc 1 410 0
 1427              		.cfi_startproc
 1428              		@ args = 0, pretend = 0, frame = 24
 1429              		@ frame_needed = 1, uses_anonymous_args = 0
 1430 0000 80B5     		push	{r7, lr}
 1431              		.cfi_def_cfa_offset 8
 1432              		.cfi_offset 7, -8
 1433              		.cfi_offset 14, -4
 1434 0002 86B0     		sub	sp, sp, #24
 1435              		.cfi_def_cfa_offset 32
 1436 0004 00AF     		add	r7, sp, #0
 1437              		.cfi_def_cfa_register 7
 1438 0006 F860     		str	r0, [r7, #12]
 1439 0008 B960     		str	r1, [r7, #8]
 1440 000a 7A60     		str	r2, [r7, #4]
 411:gpib.c        ****     int eoipos = (settings.eoi && last ? len-1 : -1);
 1441              		.loc 1 411 0
 1442 000c 134B     		ldr	r3, .L95
 1443 000e 5B89     		ldrh	r3, [r3, #10]
 1444 0010 002B     		cmp	r3, #0
 1445 0012 05D0     		beq	.L91
 1446              		.loc 1 411 0 is_stmt 0 discriminator 1
 1447 0014 7B68     		ldr	r3, [r7, #4]
 1448 0016 002B     		cmp	r3, #0
 1449 0018 02D0     		beq	.L91
 1450              		.loc 1 411 0 discriminator 3
 1451 001a BB68     		ldr	r3, [r7, #8]
 1452 001c 013B     		subs	r3, r3, #1
 1453 001e 01E0     		b	.L92
 1454              	.L91:
 1455              		.loc 1 411 0 discriminator 4
 1456 0020 0123     		movs	r3, #1
 1457 0022 5B42     		rsbs	r3, r3, #0
 1458              	.L92:
 1459              		.loc 1 411 0 discriminator 6
 1460 0024 3B61     		str	r3, [r7, #16]
 1461              	.LBB3:
 412:gpib.c        ****     
 413:gpib.c        ****     for (int i=0; i < len; i++) {
 1462              		.loc 1 413 0 is_stmt 1 discriminator 6
 1463 0026 0023     		movs	r3, #0
ARM GAS  C:\Users\essele\AppData\Local\Temp\cclqzyvT.s 			page 34


 1464 0028 7B61     		str	r3, [r7, #20]
 1465 002a 0FE0     		b	.L93
 1466              	.L94:
 414:gpib.c        ****         gpib_send_byte(buf[i], (i == eoipos));
 1467              		.loc 1 414 0 discriminator 3
 1468 002c 7B69     		ldr	r3, [r7, #20]
 1469 002e FA68     		ldr	r2, [r7, #12]
 1470 0030 D318     		adds	r3, r2, r3
 1471 0032 1878     		ldrb	r0, [r3]
 1472 0034 7A69     		ldr	r2, [r7, #20]
 1473 0036 3B69     		ldr	r3, [r7, #16]
 1474 0038 D31A     		subs	r3, r2, r3
 1475 003a 5A42     		rsbs	r2, r3, #0
 1476 003c 5341     		adcs	r3, r3, r2
 1477 003e DBB2     		uxtb	r3, r3
 1478 0040 1900     		movs	r1, r3
 1479 0042 FFF7FEFF 		bl	gpib_send_byte
 413:gpib.c        ****         gpib_send_byte(buf[i], (i == eoipos));
 1480              		.loc 1 413 0 discriminator 3
 1481 0046 7B69     		ldr	r3, [r7, #20]
 1482 0048 0133     		adds	r3, r3, #1
 1483 004a 7B61     		str	r3, [r7, #20]
 1484              	.L93:
 413:gpib.c        ****         gpib_send_byte(buf[i], (i == eoipos));
 1485              		.loc 1 413 0 is_stmt 0 discriminator 1
 1486 004c 7A69     		ldr	r2, [r7, #20]
 1487 004e BB68     		ldr	r3, [r7, #8]
 1488 0050 9A42     		cmp	r2, r3
 1489 0052 EBDB     		blt	.L94
 1490              	.LBE3:
 415:gpib.c        ****     }
 416:gpib.c        **** }
 1491              		.loc 1 416 0 is_stmt 1
 1492 0054 C046     		nop
 1493 0056 BD46     		mov	sp, r7
 1494 0058 06B0     		add	sp, sp, #24
 1495              		@ sp needed
 1496 005a 80BD     		pop	{r7, pc}
 1497              	.L96:
 1498              		.align	2
 1499              	.L95:
 1500 005c 00000000 		.word	settings
 1501              		.cfi_endproc
 1502              	.LFE59:
 1503              		.size	gpib_send_bytes, .-gpib_send_bytes
 1504              		.section	.text.gpib_read,"ax",%progbits
 1505              		.align	2
 1506              		.global	gpib_read
 1507              		.code	16
 1508              		.thumb_func
 1509              		.type	gpib_read, %function
 1510              	gpib_read:
 1511              	.LFB60:
 417:gpib.c        **** 
 418:gpib.c        **** /**
 419:gpib.c        ****  * Read from the GPIB interface, can use different end states:
 420:gpib.c        ****  *
ARM GAS  C:\Users\essele\AppData\Local\Temp\cclqzyvT.s 			page 35


 421:gpib.c        ****  * until = GPIB_TIMEOUT -- keep going until we get a timeout
 422:gpib.c        ****  * until = GPIB_EOI     -- wait for the EOI indication
 423:gpib.c        ****  * until = <char>       -- wait until we get <char>
 424:gpib.c        ****  *
 425:gpib.c        ****  * end = GPIB_TIMEOUT, or GPIB_ENDED, or GPIB_NOT_ENDED
 426:gpib.c        ****  * return = number of chars
 427:gpib.c        ****  *
 428:gpib.c        ****  */
 429:gpib.c        **** int gpib_read(int until, int *end) {
 1512              		.loc 1 429 0
 1513              		.cfi_startproc
 1514              		@ args = 0, pretend = 0, frame = 24
 1515              		@ frame_needed = 1, uses_anonymous_args = 0
 1516 0000 80B5     		push	{r7, lr}
 1517              		.cfi_def_cfa_offset 8
 1518              		.cfi_offset 7, -8
 1519              		.cfi_offset 14, -4
 1520 0002 86B0     		sub	sp, sp, #24
 1521              		.cfi_def_cfa_offset 32
 1522 0004 00AF     		add	r7, sp, #0
 1523              		.cfi_def_cfa_register 7
 1524 0006 7860     		str	r0, [r7, #4]
 1525 0008 3960     		str	r1, [r7]
 430:gpib.c        ****     int         i = 0;
 1526              		.loc 1 430 0
 1527 000a 0023     		movs	r3, #0
 1528 000c 7B61     		str	r3, [r7, #20]
 431:gpib.c        ****     int         eoi;
 432:gpib.c        ****     uint8_t     *buf;
 433:gpib.c        ****     
 434:gpib.c        ****     buf = gpib_buffer;
 1529              		.loc 1 434 0
 1530 000e 294B     		ldr	r3, .L107
 1531 0010 3B61     		str	r3, [r7, #16]
 435:gpib.c        ****     
 436:gpib.c        ****     while (i < (GPIB_BUF_SIZE-1)) {
 1532              		.loc 1 436 0
 1533 0012 44E0     		b	.L98
 1534              	.L105:
 437:gpib.c        ****         // First case is a potential timeout (no errors on read)
 438:gpib.c        ****         if (!gpib_receive_byte(buf, &eoi)) {
 1535              		.loc 1 438 0
 1536 0014 0C23     		movs	r3, #12
 1537 0016 FA18     		adds	r2, r7, r3
 1538 0018 3B69     		ldr	r3, [r7, #16]
 1539 001a 1100     		movs	r1, r2
 1540 001c 1800     		movs	r0, r3
 1541 001e FFF7FEFF 		bl	gpib_receive_byte
 1542 0022 031E     		subs	r3, r0, #0
 1543 0024 05D1     		bne	.L99
 439:gpib.c        ****             *end = GPIB_TIMEOUT;
 1544              		.loc 1 439 0
 1545 0026 3B68     		ldr	r3, [r7]
 1546 0028 0222     		movs	r2, #2
 1547 002a FF32     		adds	r2, r2, #255
 1548 002c 1A60     		str	r2, [r3]
 440:gpib.c        ****             return i;
ARM GAS  C:\Users\essele\AppData\Local\Temp\cclqzyvT.s 			page 36


 1549              		.loc 1 440 0
 1550 002e 7B69     		ldr	r3, [r7, #20]
 1551 0030 3CE0     		b	.L106
 1552              	.L99:
 441:gpib.c        ****         }
 442:gpib.c        ****                
 443:gpib.c        ****         // We assume is a valid character...
 444:gpib.c        ****         i++;
 1553              		.loc 1 444 0
 1554 0032 7B69     		ldr	r3, [r7, #20]
 1555 0034 0133     		adds	r3, r3, #1
 1556 0036 7B61     		str	r3, [r7, #20]
 445:gpib.c        **** 
 446:gpib.c        ****         // If we get an EOI then we might need to add an extra char and
 447:gpib.c        ****         // potentially end this read
 448:gpib.c        ****         if (eoi) {
 1557              		.loc 1 448 0
 1558 0038 FB68     		ldr	r3, [r7, #12]
 1559 003a 002B     		cmp	r3, #0
 1560 003c 18D0     		beq	.L101
 449:gpib.c        ****             if (settings.eot_enable) {
 1561              		.loc 1 449 0
 1562 003e 1E4B     		ldr	r3, .L107+4
 1563 0040 1B8A     		ldrh	r3, [r3, #16]
 1564 0042 002B     		cmp	r3, #0
 1565 0044 0AD0     		beq	.L102
 450:gpib.c        ****                 *++buf = settings.eot_char;
 1566              		.loc 1 450 0
 1567 0046 3B69     		ldr	r3, [r7, #16]
 1568 0048 0133     		adds	r3, r3, #1
 1569 004a 3B61     		str	r3, [r7, #16]
 1570 004c 1A4B     		ldr	r3, .L107+4
 1571 004e DB89     		ldrh	r3, [r3, #14]
 1572 0050 DAB2     		uxtb	r2, r3
 1573 0052 3B69     		ldr	r3, [r7, #16]
 1574 0054 1A70     		strb	r2, [r3]
 451:gpib.c        ****                 i++;
 1575              		.loc 1 451 0
 1576 0056 7B69     		ldr	r3, [r7, #20]
 1577 0058 0133     		adds	r3, r3, #1
 1578 005a 7B61     		str	r3, [r7, #20]
 1579              	.L102:
 452:gpib.c        ****             }
 453:gpib.c        ****             if (until == GPIB_EOI) {
 1580              		.loc 1 453 0
 1581 005c 7A68     		ldr	r2, [r7, #4]
 1582 005e 8023     		movs	r3, #128
 1583 0060 5B00     		lsls	r3, r3, #1
 1584 0062 9A42     		cmp	r2, r3
 1585 0064 04D1     		bne	.L101
 454:gpib.c        ****                 *end = GPIB_ENDED;
 1586              		.loc 1 454 0
 1587 0066 3B68     		ldr	r3, [r7]
 1588 0068 0122     		movs	r2, #1
 1589 006a 1A60     		str	r2, [r3]
 455:gpib.c        ****                 return i;
 1590              		.loc 1 455 0
ARM GAS  C:\Users\essele\AppData\Local\Temp\cclqzyvT.s 			page 37


 1591 006c 7B69     		ldr	r3, [r7, #20]
 1592 006e 1DE0     		b	.L106
 1593              	.L101:
 456:gpib.c        ****             }
 457:gpib.c        ****         }        
 458:gpib.c        ****         
 459:gpib.c        ****         // If we are only waiting for timeout, then loop...
 460:gpib.c        ****         if (until == GPIB_TIMEOUT) {    
 1594              		.loc 1 460 0
 1595 0070 7A68     		ldr	r2, [r7, #4]
 1596 0072 0223     		movs	r3, #2
 1597 0074 FF33     		adds	r3, r3, #255
 1598 0076 9A42     		cmp	r2, r3
 1599 0078 03D1     		bne	.L103
 461:gpib.c        ****             buf++;
 1600              		.loc 1 461 0
 1601 007a 3B69     		ldr	r3, [r7, #16]
 1602 007c 0133     		adds	r3, r3, #1
 1603 007e 3B61     		str	r3, [r7, #16]
 462:gpib.c        ****             continue;
 1604              		.loc 1 462 0
 1605 0080 0DE0     		b	.L98
 1606              	.L103:
 463:gpib.c        ****         }
 464:gpib.c        ****         
 465:gpib.c        ****         // If we match the given end char
 466:gpib.c        ****         if (until == *buf) {
 1607              		.loc 1 466 0
 1608 0082 3B69     		ldr	r3, [r7, #16]
 1609 0084 1B78     		ldrb	r3, [r3]
 1610 0086 1A00     		movs	r2, r3
 1611 0088 7B68     		ldr	r3, [r7, #4]
 1612 008a 9A42     		cmp	r2, r3
 1613 008c 04D1     		bne	.L104
 467:gpib.c        ****             *end = GPIB_ENDED;
 1614              		.loc 1 467 0
 1615 008e 3B68     		ldr	r3, [r7]
 1616 0090 0122     		movs	r2, #1
 1617 0092 1A60     		str	r2, [r3]
 468:gpib.c        ****             return i;
 1618              		.loc 1 468 0
 1619 0094 7B69     		ldr	r3, [r7, #20]
 1620 0096 09E0     		b	.L106
 1621              	.L104:
 469:gpib.c        ****         }     
 470:gpib.c        ****         buf++;
 1622              		.loc 1 470 0
 1623 0098 3B69     		ldr	r3, [r7, #16]
 1624 009a 0133     		adds	r3, r3, #1
 1625 009c 3B61     		str	r3, [r7, #16]
 1626              	.L98:
 436:gpib.c        ****         // First case is a potential timeout (no errors on read)
 1627              		.loc 1 436 0
 1628 009e 7B69     		ldr	r3, [r7, #20]
 1629 00a0 FE2B     		cmp	r3, #254
 1630 00a2 B7DD     		ble	.L105
 471:gpib.c        ****     }
ARM GAS  C:\Users\essele\AppData\Local\Temp\cclqzyvT.s 			page 38


 472:gpib.c        ****     *end = GPIB_NOT_ENDED;
 1631              		.loc 1 472 0
 1632 00a4 3B68     		ldr	r3, [r7]
 1633 00a6 0022     		movs	r2, #0
 1634 00a8 1A60     		str	r2, [r3]
 473:gpib.c        ****     return i;
 1635              		.loc 1 473 0
 1636 00aa 7B69     		ldr	r3, [r7, #20]
 1637              	.L106:
 474:gpib.c        **** }
 1638              		.loc 1 474 0 discriminator 1
 1639 00ac 1800     		movs	r0, r3
 1640 00ae BD46     		mov	sp, r7
 1641 00b0 06B0     		add	sp, sp, #24
 1642              		@ sp needed
 1643 00b2 80BD     		pop	{r7, pc}
 1644              	.L108:
 1645              		.align	2
 1646              	.L107:
 1647 00b4 00000000 		.word	gpib_buffer
 1648 00b8 00000000 		.word	settings
 1649              		.cfi_endproc
 1650              	.LFE60:
 1651              		.size	gpib_read, .-gpib_read
 1652              		.section	.text.gpib_read_bytes,"ax",%progbits
 1653              		.align	2
 1654              		.global	gpib_read_bytes
 1655              		.code	16
 1656              		.thumb_func
 1657              		.type	gpib_read_bytes, %function
 1658              	gpib_read_bytes:
 1659              	.LFB61:
 475:gpib.c        **** 
 476:gpib.c        **** /**
 477:gpib.c        ****  * Test routine ... assume EOI for now
 478:gpib.c        ****  */ 
 479:gpib.c        **** int gpib_read_bytes(uint8_t *dest, int maxlen, int *end) {
 1660              		.loc 1 479 0
 1661              		.cfi_startproc
 1662              		@ args = 0, pretend = 0, frame = 24
 1663              		@ frame_needed = 1, uses_anonymous_args = 0
 1664 0000 80B5     		push	{r7, lr}
 1665              		.cfi_def_cfa_offset 8
 1666              		.cfi_offset 7, -8
 1667              		.cfi_offset 14, -4
 1668 0002 86B0     		sub	sp, sp, #24
 1669              		.cfi_def_cfa_offset 32
 1670 0004 00AF     		add	r7, sp, #0
 1671              		.cfi_def_cfa_register 7
 1672 0006 F860     		str	r0, [r7, #12]
 1673 0008 B960     		str	r1, [r7, #8]
 1674 000a 7A60     		str	r2, [r7, #4]
 480:gpib.c        ****     int eoi;
 481:gpib.c        ****     int i = 0;
 1675              		.loc 1 481 0
 1676 000c 0023     		movs	r3, #0
 1677 000e 7B61     		str	r3, [r7, #20]
ARM GAS  C:\Users\essele\AppData\Local\Temp\cclqzyvT.s 			page 39


 482:gpib.c        ****     
 483:gpib.c        ****     while (i < maxlen) {
 1678              		.loc 1 483 0
 1679 0010 1BE0     		b	.L110
 1680              	.L113:
 484:gpib.c        ****         if (!gpib_receive_byte(dest++, &eoi)) {
 1681              		.loc 1 484 0
 1682 0012 FB68     		ldr	r3, [r7, #12]
 1683 0014 5A1C     		adds	r2, r3, #1
 1684 0016 FA60     		str	r2, [r7, #12]
 1685 0018 1022     		movs	r2, #16
 1686 001a BA18     		adds	r2, r7, r2
 1687 001c 1100     		movs	r1, r2
 1688 001e 1800     		movs	r0, r3
 1689 0020 FFF7FEFF 		bl	gpib_receive_byte
 1690 0024 031E     		subs	r3, r0, #0
 1691 0026 05D1     		bne	.L111
 485:gpib.c        ****             *end = GPIB_TIMEOUT;
 1692              		.loc 1 485 0
 1693 0028 7B68     		ldr	r3, [r7, #4]
 1694 002a 0222     		movs	r2, #2
 1695 002c FF32     		adds	r2, r2, #255
 1696 002e 1A60     		str	r2, [r3]
 486:gpib.c        ****             return i;
 1697              		.loc 1 486 0
 1698 0030 7B69     		ldr	r3, [r7, #20]
 1699 0032 12E0     		b	.L114
 1700              	.L111:
 487:gpib.c        ****         }
 488:gpib.c        ****         i++;
 1701              		.loc 1 488 0
 1702 0034 7B69     		ldr	r3, [r7, #20]
 1703 0036 0133     		adds	r3, r3, #1
 1704 0038 7B61     		str	r3, [r7, #20]
 489:gpib.c        ****         if (eoi) {
 1705              		.loc 1 489 0
 1706 003a 3B69     		ldr	r3, [r7, #16]
 1707 003c 002B     		cmp	r3, #0
 1708 003e 04D0     		beq	.L110
 490:gpib.c        ****             *end = GPIB_ENDED;
 1709              		.loc 1 490 0
 1710 0040 7B68     		ldr	r3, [r7, #4]
 1711 0042 0122     		movs	r2, #1
 1712 0044 1A60     		str	r2, [r3]
 491:gpib.c        ****             return i;
 1713              		.loc 1 491 0
 1714 0046 7B69     		ldr	r3, [r7, #20]
 1715 0048 07E0     		b	.L114
 1716              	.L110:
 483:gpib.c        ****         if (!gpib_receive_byte(dest++, &eoi)) {
 1717              		.loc 1 483 0
 1718 004a 7A69     		ldr	r2, [r7, #20]
 1719 004c BB68     		ldr	r3, [r7, #8]
 1720 004e 9A42     		cmp	r2, r3
 1721 0050 DFDB     		blt	.L113
 492:gpib.c        ****         }
 493:gpib.c        ****     }
ARM GAS  C:\Users\essele\AppData\Local\Temp\cclqzyvT.s 			page 40


 494:gpib.c        ****     *end = GPIB_NOT_ENDED;
 1722              		.loc 1 494 0
 1723 0052 7B68     		ldr	r3, [r7, #4]
 1724 0054 0022     		movs	r2, #0
 1725 0056 1A60     		str	r2, [r3]
 495:gpib.c        ****     return i;
 1726              		.loc 1 495 0
 1727 0058 7B69     		ldr	r3, [r7, #20]
 1728              	.L114:
 496:gpib.c        **** }
 1729              		.loc 1 496 0 discriminator 1
 1730 005a 1800     		movs	r0, r3
 1731 005c BD46     		mov	sp, r7
 1732 005e 06B0     		add	sp, sp, #24
 1733              		@ sp needed
 1734 0060 80BD     		pop	{r7, pc}
 1735              		.cfi_endproc
 1736              	.LFE61:
 1737              		.size	gpib_read_bytes, .-gpib_read_bytes
 1738 0062 C046     		.text
 1739              	.Letext0:
 1740              		.file 2 "c:\\program files (x86)\\cypress\\psoc creator\\4.2\\psoc creator\\import\\gnu\\arm\\5.4.
 1741              		.file 3 "c:\\program files (x86)\\cypress\\psoc creator\\4.2\\psoc creator\\import\\gnu\\arm\\5.4.
 1742              		.file 4 "Generated_Source\\PSoC4/cytypes.h"
 1743              		.file 5 "settings.h"
 1744              		.section	.debug_info,"",%progbits
 1745              	.Ldebug_info0:
 1746 0000 03070000 		.4byte	0x703
 1747 0004 0400     		.2byte	0x4
 1748 0006 00000000 		.4byte	.Ldebug_abbrev0
 1749 000a 04       		.byte	0x4
 1750 000b 01       		.uleb128 0x1
 1751 000c 7F010000 		.4byte	.LASF75
 1752 0010 0C       		.byte	0xc
 1753 0011 4C010000 		.4byte	.LASF76
 1754 0015 6D000000 		.4byte	.LASF77
 1755 0019 00000000 		.4byte	.Ldebug_ranges0+0
 1756 001d 00000000 		.4byte	0
 1757 0021 00000000 		.4byte	.Ldebug_line0
 1758 0025 02       		.uleb128 0x2
 1759 0026 01       		.byte	0x1
 1760 0027 06       		.byte	0x6
 1761 0028 57020000 		.4byte	.LASF0
 1762 002c 03       		.uleb128 0x3
 1763 002d 5C010000 		.4byte	.LASF3
 1764 0031 02       		.byte	0x2
 1765 0032 1D       		.byte	0x1d
 1766 0033 37000000 		.4byte	0x37
 1767 0037 02       		.uleb128 0x2
 1768 0038 01       		.byte	0x1
 1769 0039 08       		.byte	0x8
 1770 003a 19020000 		.4byte	.LASF1
 1771 003e 02       		.uleb128 0x2
 1772 003f 02       		.byte	0x2
 1773 0040 05       		.byte	0x5
 1774 0041 54000000 		.4byte	.LASF2
 1775 0045 03       		.uleb128 0x3
ARM GAS  C:\Users\essele\AppData\Local\Temp\cclqzyvT.s 			page 41


 1776 0046 CF000000 		.4byte	.LASF4
 1777 004a 02       		.byte	0x2
 1778 004b 2B       		.byte	0x2b
 1779 004c 50000000 		.4byte	0x50
 1780 0050 02       		.uleb128 0x2
 1781 0051 02       		.byte	0x2
 1782 0052 07       		.byte	0x7
 1783 0053 E8020000 		.4byte	.LASF5
 1784 0057 02       		.uleb128 0x2
 1785 0058 04       		.byte	0x4
 1786 0059 05       		.byte	0x5
 1787 005a 43010000 		.4byte	.LASF6
 1788 005e 03       		.uleb128 0x3
 1789 005f BB030000 		.4byte	.LASF7
 1790 0063 02       		.byte	0x2
 1791 0064 41       		.byte	0x41
 1792 0065 69000000 		.4byte	0x69
 1793 0069 02       		.uleb128 0x2
 1794 006a 04       		.byte	0x4
 1795 006b 07       		.byte	0x7
 1796 006c 8F030000 		.4byte	.LASF8
 1797 0070 02       		.uleb128 0x2
 1798 0071 08       		.byte	0x8
 1799 0072 05       		.byte	0x5
 1800 0073 1B010000 		.4byte	.LASF9
 1801 0077 02       		.uleb128 0x2
 1802 0078 08       		.byte	0x8
 1803 0079 07       		.byte	0x7
 1804 007a 63020000 		.4byte	.LASF10
 1805 007e 04       		.uleb128 0x4
 1806 007f 04       		.byte	0x4
 1807 0080 05       		.byte	0x5
 1808 0081 696E7400 		.ascii	"int\000"
 1809 0085 02       		.uleb128 0x2
 1810 0086 04       		.byte	0x4
 1811 0087 07       		.byte	0x7
 1812 0088 83020000 		.4byte	.LASF11
 1813 008c 03       		.uleb128 0x3
 1814 008d E4000000 		.4byte	.LASF12
 1815 0091 03       		.byte	0x3
 1816 0092 18       		.byte	0x18
 1817 0093 2C000000 		.4byte	0x2c
 1818 0097 03       		.uleb128 0x3
 1819 0098 90020000 		.4byte	.LASF13
 1820 009c 03       		.byte	0x3
 1821 009d 24       		.byte	0x24
 1822 009e 45000000 		.4byte	0x45
 1823 00a2 03       		.uleb128 0x3
 1824 00a3 7A020000 		.4byte	.LASF14
 1825 00a7 03       		.byte	0x3
 1826 00a8 30       		.byte	0x30
 1827 00a9 5E000000 		.4byte	0x5e
 1828 00ad 05       		.uleb128 0x5
 1829 00ae 88030000 		.4byte	.LASF15
 1830 00b2 04       		.byte	0x4
 1831 00b3 E601     		.2byte	0x1e6
 1832 00b5 69000000 		.4byte	0x69
ARM GAS  C:\Users\essele\AppData\Local\Temp\cclqzyvT.s 			page 42


 1833 00b9 02       		.uleb128 0x2
 1834 00ba 04       		.byte	0x4
 1835 00bb 04       		.byte	0x4
 1836 00bc 78030000 		.4byte	.LASF16
 1837 00c0 02       		.uleb128 0x2
 1838 00c1 08       		.byte	0x8
 1839 00c2 04       		.byte	0x4
 1840 00c3 A1030000 		.4byte	.LASF17
 1841 00c7 02       		.uleb128 0x2
 1842 00c8 01       		.byte	0x1
 1843 00c9 08       		.byte	0x8
 1844 00ca 21030000 		.4byte	.LASF18
 1845 00ce 05       		.uleb128 0x5
 1846 00cf D9020000 		.4byte	.LASF19
 1847 00d3 04       		.byte	0x4
 1848 00d4 9002     		.2byte	0x290
 1849 00d6 DA000000 		.4byte	0xda
 1850 00da 06       		.uleb128 0x6
 1851 00db AD000000 		.4byte	0xad
 1852 00df 02       		.uleb128 0x2
 1853 00e0 08       		.byte	0x8
 1854 00e1 04       		.byte	0x4
 1855 00e2 0D020000 		.4byte	.LASF20
 1856 00e6 02       		.uleb128 0x2
 1857 00e7 04       		.byte	0x4
 1858 00e8 07       		.byte	0x7
 1859 00e9 5E000000 		.4byte	.LASF21
 1860 00ed 07       		.uleb128 0x7
 1861 00ee 12010000 		.4byte	.LASF69
 1862 00f2 14       		.byte	0x14
 1863 00f3 05       		.byte	0x5
 1864 00f4 0D       		.byte	0xd
 1865 00f5 66010000 		.4byte	0x166
 1866 00f9 08       		.uleb128 0x8
 1867 00fa F5030000 		.4byte	.LASF22
 1868 00fe 05       		.byte	0x5
 1869 00ff 0E       		.byte	0xe
 1870 0100 A2000000 		.4byte	0xa2
 1871 0104 00       		.byte	0
 1872 0105 08       		.uleb128 0x8
 1873 0106 12000000 		.4byte	.LASF23
 1874 010a 05       		.byte	0x5
 1875 010b 0F       		.byte	0xf
 1876 010c 97000000 		.4byte	0x97
 1877 0110 04       		.byte	0x4
 1878 0111 08       		.uleb128 0x8
 1879 0112 40000000 		.4byte	.LASF24
 1880 0116 05       		.byte	0x5
 1881 0117 10       		.byte	0x10
 1882 0118 97000000 		.4byte	0x97
 1883 011c 06       		.byte	0x6
 1884 011d 08       		.uleb128 0x8
 1885 011e EC000000 		.4byte	.LASF25
 1886 0122 05       		.byte	0x5
 1887 0123 11       		.byte	0x11
 1888 0124 97000000 		.4byte	0x97
 1889 0128 08       		.byte	0x8
ARM GAS  C:\Users\essele\AppData\Local\Temp\cclqzyvT.s 			page 43


 1890 0129 09       		.uleb128 0x9
 1891 012a 656F6900 		.ascii	"eoi\000"
 1892 012e 05       		.byte	0x5
 1893 012f 12       		.byte	0x12
 1894 0130 97000000 		.4byte	0x97
 1895 0134 0A       		.byte	0xa
 1896 0135 09       		.uleb128 0x9
 1897 0136 656F7300 		.ascii	"eos\000"
 1898 013a 05       		.byte	0x5
 1899 013b 13       		.byte	0x13
 1900 013c 97000000 		.4byte	0x97
 1901 0140 0C       		.byte	0xc
 1902 0141 08       		.uleb128 0x8
 1903 0142 DF020000 		.4byte	.LASF26
 1904 0146 05       		.byte	0x5
 1905 0147 14       		.byte	0x14
 1906 0148 97000000 		.4byte	0x97
 1907 014c 0E       		.byte	0xe
 1908 014d 08       		.uleb128 0x8
 1909 014e FB020000 		.4byte	.LASF27
 1910 0152 05       		.byte	0x5
 1911 0153 15       		.byte	0x15
 1912 0154 97000000 		.4byte	0x97
 1913 0158 10       		.byte	0x10
 1914 0159 08       		.uleb128 0x8
 1915 015a 37010000 		.4byte	.LASF28
 1916 015e 05       		.byte	0x5
 1917 015f 16       		.byte	0x16
 1918 0160 97000000 		.4byte	0x97
 1919 0164 12       		.byte	0x12
 1920 0165 00       		.byte	0
 1921 0166 0A       		.uleb128 0xa
 1922 0167 01       		.byte	0x1
 1923 0168 37000000 		.4byte	0x37
 1924 016c 01       		.byte	0x1
 1925 016d 22       		.byte	0x22
 1926 016e A3010000 		.4byte	0x1a3
 1927 0172 0B       		.uleb128 0xb
 1928 0173 41544E00 		.ascii	"ATN\000"
 1929 0177 00       		.byte	0
 1930 0178 0B       		.uleb128 0xb
 1931 0179 53525100 		.ascii	"SRQ\000"
 1932 017d 01       		.byte	0x1
 1933 017e 0B       		.uleb128 0xb
 1934 017f 49464300 		.ascii	"IFC\000"
 1935 0183 02       		.byte	0x2
 1936 0184 0C       		.uleb128 0xc
 1937 0185 45040000 		.4byte	.LASF29
 1938 0189 03       		.byte	0x3
 1939 018a 0C       		.uleb128 0xc
 1940 018b 34030000 		.4byte	.LASF30
 1941 018f 04       		.byte	0x4
 1942 0190 0B       		.uleb128 0xb
 1943 0191 44415600 		.ascii	"DAV\000"
 1944 0195 05       		.byte	0x5
 1945 0196 0B       		.uleb128 0xb
 1946 0197 454F4900 		.ascii	"EOI\000"
ARM GAS  C:\Users\essele\AppData\Local\Temp\cclqzyvT.s 			page 44


 1947 019b 06       		.byte	0x6
 1948 019c 0B       		.uleb128 0xb
 1949 019d 52454E00 		.ascii	"REN\000"
 1950 01a1 07       		.byte	0x7
 1951 01a2 00       		.byte	0
 1952 01a3 03       		.uleb128 0x3
 1953 01a4 08000000 		.4byte	.LASF31
 1954 01a8 01       		.byte	0x1
 1955 01a9 23       		.byte	0x23
 1956 01aa 66010000 		.4byte	0x166
 1957 01ae 0D       		.uleb128 0xd
 1958 01af 30000000 		.4byte	.LASF41
 1959 01b3 01       		.byte	0x1
 1960 01b4 1A       		.byte	0x1a
 1961 01b5 C3010000 		.4byte	0x1c3
 1962 01b9 00000000 		.4byte	.LFB34
 1963 01bd 10000000 		.4byte	.LFE34-.LFB34
 1964 01c1 01       		.uleb128 0x1
 1965 01c2 9C       		.byte	0x9c
 1966 01c3 0E       		.uleb128 0xe
 1967 01c4 04       		.byte	0x4
 1968 01c5 8C000000 		.4byte	0x8c
 1969 01c9 0F       		.uleb128 0xf
 1970 01ca 48020000 		.4byte	.LASF32
 1971 01ce 01       		.byte	0x1
 1972 01cf 36       		.byte	0x36
 1973 01d0 00000000 		.4byte	.LFB35
 1974 01d4 0A000000 		.4byte	.LFE35-.LFB35
 1975 01d8 01       		.uleb128 0x1
 1976 01d9 9C       		.byte	0x9c
 1977 01da 10       		.uleb128 0x10
 1978 01db C3000000 		.4byte	.LASF33
 1979 01df 01       		.byte	0x1
 1980 01e0 3A       		.byte	0x3a
 1981 01e1 00000000 		.4byte	.LFB36
 1982 01e5 10000000 		.4byte	.LFE36-.LFB36
 1983 01e9 01       		.uleb128 0x1
 1984 01ea 9C       		.byte	0x9c
 1985 01eb 11       		.uleb128 0x11
 1986 01ec 56030000 		.4byte	.LASF34
 1987 01f0 01       		.byte	0x1
 1988 01f1 50       		.byte	0x50
 1989 01f2 00000000 		.4byte	.LFB37
 1990 01f6 28000000 		.4byte	.LFE37-.LFB37
 1991 01fa 01       		.uleb128 0x1
 1992 01fb 9C       		.byte	0x9c
 1993 01fc 0F020000 		.4byte	0x20f
 1994 0200 12       		.uleb128 0x12
 1995 0201 F5000000 		.4byte	.LASF36
 1996 0205 01       		.byte	0x1
 1997 0206 50       		.byte	0x50
 1998 0207 A3010000 		.4byte	0x1a3
 1999 020b 02       		.uleb128 0x2
 2000 020c 91       		.byte	0x91
 2001 020d 77       		.sleb128 -9
 2002 020e 00       		.byte	0
 2003 020f 11       		.uleb128 0x11
ARM GAS  C:\Users\essele\AppData\Local\Temp\cclqzyvT.s 			page 45


 2004 0210 A8030000 		.4byte	.LASF35
 2005 0214 01       		.byte	0x1
 2006 0215 57       		.byte	0x57
 2007 0216 00000000 		.4byte	.LFB38
 2008 021a 28000000 		.4byte	.LFE38-.LFB38
 2009 021e 01       		.uleb128 0x1
 2010 021f 9C       		.byte	0x9c
 2011 0220 33020000 		.4byte	0x233
 2012 0224 12       		.uleb128 0x12
 2013 0225 F5000000 		.4byte	.LASF36
 2014 0229 01       		.byte	0x1
 2015 022a 57       		.byte	0x57
 2016 022b A3010000 		.4byte	0x1a3
 2017 022f 02       		.uleb128 0x2
 2018 0230 91       		.byte	0x91
 2019 0231 77       		.sleb128 -9
 2020 0232 00       		.byte	0
 2021 0233 13       		.uleb128 0x13
 2022 0234 38040000 		.4byte	.LASF37
 2023 0238 01       		.byte	0x1
 2024 0239 5B       		.byte	0x5b
 2025 023a 97000000 		.4byte	0x97
 2026 023e 00000000 		.4byte	.LFB39
 2027 0242 40000000 		.4byte	.LFE39-.LFB39
 2028 0246 01       		.uleb128 0x1
 2029 0247 9C       		.byte	0x9c
 2030 0248 5A020000 		.4byte	0x25a
 2031 024c 14       		.uleb128 0x14
 2032 024d 726300   		.ascii	"rc\000"
 2033 0250 01       		.byte	0x1
 2034 0251 5C       		.byte	0x5c
 2035 0252 97000000 		.4byte	0x97
 2036 0256 02       		.uleb128 0x2
 2037 0257 91       		.byte	0x91
 2038 0258 76       		.sleb128 -10
 2039 0259 00       		.byte	0
 2040 025a 15       		.uleb128 0x15
 2041 025b 20040000 		.4byte	.LASF43
 2042 025f 01       		.byte	0x1
 2043 0260 65       		.byte	0x65
 2044 0261 8E020000 		.4byte	0x28e
 2045 0265 00000000 		.4byte	.LFB40
 2046 0269 34000000 		.4byte	.LFE40-.LFB40
 2047 026d 01       		.uleb128 0x1
 2048 026e 9C       		.byte	0x9c
 2049 026f 8E020000 		.4byte	0x28e
 2050 0273 12       		.uleb128 0x12
 2051 0274 F5000000 		.4byte	.LASF36
 2052 0278 01       		.byte	0x1
 2053 0279 65       		.byte	0x65
 2054 027a A3010000 		.4byte	0x1a3
 2055 027e 02       		.uleb128 0x2
 2056 027f 91       		.byte	0x91
 2057 0280 6F       		.sleb128 -17
 2058 0281 14       		.uleb128 0x14
 2059 0282 7600     		.ascii	"v\000"
 2060 0284 01       		.byte	0x1
ARM GAS  C:\Users\essele\AppData\Local\Temp\cclqzyvT.s 			page 46


 2061 0285 66       		.byte	0x66
 2062 0286 7E000000 		.4byte	0x7e
 2063 028a 02       		.uleb128 0x2
 2064 028b 91       		.byte	0x91
 2065 028c 74       		.sleb128 -12
 2066 028d 00       		.byte	0
 2067 028e 02       		.uleb128 0x2
 2068 028f 01       		.byte	0x1
 2069 0290 02       		.byte	0x2
 2070 0291 67030000 		.4byte	.LASF38
 2071 0295 16       		.uleb128 0x16
 2072 0296 FF030000 		.4byte	.LASF39
 2073 029a 01       		.byte	0x1
 2074 029b 74       		.byte	0x74
 2075 029c 7E000000 		.4byte	0x7e
 2076 02a0 00000000 		.4byte	.LFB41
 2077 02a4 8C000000 		.4byte	.LFE41-.LFB41
 2078 02a8 01       		.uleb128 0x1
 2079 02a9 9C       		.byte	0x9c
 2080 02aa D9020000 		.4byte	0x2d9
 2081 02ae 17       		.uleb128 0x17
 2082 02af DA000000 		.4byte	.LASF40
 2083 02b3 01       		.byte	0x1
 2084 02b4 76       		.byte	0x76
 2085 02b5 7E000000 		.4byte	0x7e
 2086 02b9 02       		.uleb128 0x2
 2087 02ba 91       		.byte	0x91
 2088 02bb 6C       		.sleb128 -20
 2089 02bc 14       		.uleb128 0x14
 2090 02bd 61746E00 		.ascii	"atn\000"
 2091 02c1 01       		.byte	0x1
 2092 02c2 78       		.byte	0x78
 2093 02c3 8E020000 		.4byte	0x28e
 2094 02c7 02       		.uleb128 0x2
 2095 02c8 91       		.byte	0x91
 2096 02c9 6B       		.sleb128 -21
 2097 02ca 14       		.uleb128 0x14
 2098 02cb 69666300 		.ascii	"ifc\000"
 2099 02cf 01       		.byte	0x1
 2100 02d0 79       		.byte	0x79
 2101 02d1 8E020000 		.4byte	0x28e
 2102 02d5 02       		.uleb128 0x2
 2103 02d6 91       		.byte	0x91
 2104 02d7 6A       		.sleb128 -22
 2105 02d8 00       		.byte	0
 2106 02d9 0D       		.uleb128 0xd
 2107 02da 04010000 		.4byte	.LASF42
 2108 02de 01       		.byte	0x1
 2109 02df 8E       		.byte	0x8e
 2110 02e0 7E000000 		.4byte	0x7e
 2111 02e4 00000000 		.4byte	.LFB42
 2112 02e8 14000000 		.4byte	.LFE42-.LFB42
 2113 02ec 01       		.uleb128 0x1
 2114 02ed 9C       		.byte	0x9c
 2115 02ee 18       		.uleb128 0x18
 2116 02ef CB030000 		.4byte	.LASF44
 2117 02f3 01       		.byte	0x1
ARM GAS  C:\Users\essele\AppData\Local\Temp\cclqzyvT.s 			page 47


 2118 02f4 95       		.byte	0x95
 2119 02f5 8E020000 		.4byte	0x28e
 2120 02f9 00000000 		.4byte	.LFB43
 2121 02fd 40000000 		.4byte	.LFE43-.LFB43
 2122 0301 01       		.uleb128 0x1
 2123 0302 9C       		.byte	0x9c
 2124 0303 16030000 		.4byte	0x316
 2125 0307 12       		.uleb128 0x12
 2126 0308 F5000000 		.4byte	.LASF36
 2127 030c 01       		.byte	0x1
 2128 030d 95       		.byte	0x95
 2129 030e A3010000 		.4byte	0x1a3
 2130 0312 02       		.uleb128 0x2
 2131 0313 91       		.byte	0x91
 2132 0314 77       		.sleb128 -9
 2133 0315 00       		.byte	0
 2134 0316 18       		.uleb128 0x18
 2135 0317 AE020000 		.4byte	.LASF45
 2136 031b 01       		.byte	0x1
 2137 031c A6       		.byte	0xa6
 2138 031d 8E020000 		.4byte	0x28e
 2139 0321 00000000 		.4byte	.LFB44
 2140 0325 4C000000 		.4byte	.LFE44-.LFB44
 2141 0329 01       		.uleb128 0x1
 2142 032a 9C       		.byte	0x9c
 2143 032b 3E030000 		.4byte	0x33e
 2144 032f 12       		.uleb128 0x12
 2145 0330 F5000000 		.4byte	.LASF36
 2146 0334 01       		.byte	0x1
 2147 0335 A6       		.byte	0xa6
 2148 0336 A3010000 		.4byte	0x1a3
 2149 033a 02       		.uleb128 0x2
 2150 033b 91       		.byte	0x91
 2151 033c 77       		.sleb128 -9
 2152 033d 00       		.byte	0
 2153 033e 18       		.uleb128 0x18
 2154 033f 39030000 		.4byte	.LASF46
 2155 0343 01       		.byte	0x1
 2156 0344 B8       		.byte	0xb8
 2157 0345 8E020000 		.4byte	0x28e
 2158 0349 00000000 		.4byte	.LFB45
 2159 034d 88000000 		.4byte	.LFE45-.LFB45
 2160 0351 01       		.uleb128 0x1
 2161 0352 9C       		.byte	0x9c
 2162 0353 8C030000 		.4byte	0x38c
 2163 0357 12       		.uleb128 0x12
 2164 0358 C6030000 		.4byte	.LASF47
 2165 035c 01       		.byte	0x1
 2166 035d B8       		.byte	0xb8
 2167 035e 8C000000 		.4byte	0x8c
 2168 0362 02       		.uleb128 0x2
 2169 0363 91       		.byte	0x91
 2170 0364 67       		.sleb128 -25
 2171 0365 12       		.uleb128 0x12
 2172 0366 D4020000 		.4byte	.LASF48
 2173 036a 01       		.byte	0x1
 2174 036b B8       		.byte	0xb8
ARM GAS  C:\Users\essele\AppData\Local\Temp\cclqzyvT.s 			page 48


 2175 036c 8E020000 		.4byte	0x28e
 2176 0370 02       		.uleb128 0x2
 2177 0371 91       		.byte	0x91
 2178 0372 66       		.sleb128 -26
 2179 0373 14       		.uleb128 0x14
 2180 0374 6F6B00   		.ascii	"ok\000"
 2181 0377 01       		.byte	0x1
 2182 0378 B9       		.byte	0xb9
 2183 0379 8E020000 		.4byte	0x28e
 2184 037d 02       		.uleb128 0x2
 2185 037e 91       		.byte	0x91
 2186 037f 6F       		.sleb128 -17
 2187 0380 19       		.uleb128 0x19
 2188 0381 27020000 		.4byte	.LASF78
 2189 0385 01       		.byte	0x1
 2190 0386 CF       		.byte	0xcf
 2191 0387 64000000 		.4byte	.L50
 2192 038b 00       		.byte	0
 2193 038c 18       		.uleb128 0x18
 2194 038d 06030000 		.4byte	.LASF49
 2195 0391 01       		.byte	0x1
 2196 0392 DE       		.byte	0xde
 2197 0393 7E000000 		.4byte	0x7e
 2198 0397 00000000 		.4byte	.LFB46
 2199 039b 90000000 		.4byte	.LFE46-.LFB46
 2200 039f 01       		.uleb128 0x1
 2201 03a0 9C       		.byte	0x9c
 2202 03a1 CF030000 		.4byte	0x3cf
 2203 03a5 12       		.uleb128 0x12
 2204 03a6 C6030000 		.4byte	.LASF47
 2205 03aa 01       		.byte	0x1
 2206 03ab DE       		.byte	0xde
 2207 03ac C3010000 		.4byte	0x1c3
 2208 03b0 02       		.uleb128 0x2
 2209 03b1 91       		.byte	0x91
 2210 03b2 6C       		.sleb128 -20
 2211 03b3 1A       		.uleb128 0x1a
 2212 03b4 656F6900 		.ascii	"eoi\000"
 2213 03b8 01       		.byte	0x1
 2214 03b9 DE       		.byte	0xde
 2215 03ba CF030000 		.4byte	0x3cf
 2216 03be 02       		.uleb128 0x2
 2217 03bf 91       		.byte	0x91
 2218 03c0 68       		.sleb128 -24
 2219 03c1 14       		.uleb128 0x14
 2220 03c2 6F6B00   		.ascii	"ok\000"
 2221 03c5 01       		.byte	0x1
 2222 03c6 DF       		.byte	0xdf
 2223 03c7 7E000000 		.4byte	0x7e
 2224 03cb 02       		.uleb128 0x2
 2225 03cc 91       		.byte	0x91
 2226 03cd 74       		.sleb128 -12
 2227 03ce 00       		.byte	0
 2228 03cf 0E       		.uleb128 0xe
 2229 03d0 04       		.byte	0x4
 2230 03d1 7E000000 		.4byte	0x7e
 2231 03d5 1B       		.uleb128 0x1b
ARM GAS  C:\Users\essele\AppData\Local\Temp\cclqzyvT.s 			page 49


 2232 03d6 AE000000 		.4byte	.LASF50
 2233 03da 01       		.byte	0x1
 2234 03db 1201     		.2byte	0x112
 2235 03dd 00000000 		.4byte	.LFB47
 2236 03e1 22000000 		.4byte	.LFE47-.LFB47
 2237 03e5 01       		.uleb128 0x1
 2238 03e6 9C       		.byte	0x9c
 2239 03e7 1C       		.uleb128 0x1c
 2240 03e8 53010000 		.4byte	.LASF51
 2241 03ec 01       		.byte	0x1
 2242 03ed 1901     		.2byte	0x119
 2243 03ef 00000000 		.4byte	.LFB48
 2244 03f3 24000000 		.4byte	.LFE48-.LFB48
 2245 03f7 01       		.uleb128 0x1
 2246 03f8 9C       		.byte	0x9c
 2247 03f9 0D040000 		.4byte	0x40d
 2248 03fd 1D       		.uleb128 0x1d
 2249 03fe 40000000 		.4byte	.LASF24
 2250 0402 01       		.byte	0x1
 2251 0403 1901     		.2byte	0x119
 2252 0405 8C000000 		.4byte	0x8c
 2253 0409 02       		.uleb128 0x2
 2254 040a 91       		.byte	0x91
 2255 040b 77       		.sleb128 -9
 2256 040c 00       		.byte	0
 2257 040d 1C       		.uleb128 0x1c
 2258 040e 3F020000 		.4byte	.LASF52
 2259 0412 01       		.byte	0x1
 2260 0413 1D01     		.2byte	0x11d
 2261 0415 00000000 		.4byte	.LFB49
 2262 0419 24000000 		.4byte	.LFE49-.LFB49
 2263 041d 01       		.uleb128 0x1
 2264 041e 9C       		.byte	0x9c
 2265 041f 33040000 		.4byte	0x433
 2266 0423 1D       		.uleb128 0x1d
 2267 0424 40000000 		.4byte	.LASF24
 2268 0428 01       		.byte	0x1
 2269 0429 1D01     		.2byte	0x11d
 2270 042b 8C000000 		.4byte	0x8c
 2271 042f 02       		.uleb128 0x2
 2272 0430 91       		.byte	0x91
 2273 0431 77       		.sleb128 -9
 2274 0432 00       		.byte	0
 2275 0433 1B       		.uleb128 0x1b
 2276 0434 18030000 		.4byte	.LASF53
 2277 0438 01       		.byte	0x1
 2278 0439 2101     		.2byte	0x121
 2279 043b 00000000 		.4byte	.LFB50
 2280 043f 10000000 		.4byte	.LFE50-.LFB50
 2281 0443 01       		.uleb128 0x1
 2282 0444 9C       		.byte	0x9c
 2283 0445 1B       		.uleb128 0x1b
 2284 0446 2F040000 		.4byte	.LASF54
 2285 044a 01       		.byte	0x1
 2286 044b 2501     		.2byte	0x125
 2287 044d 00000000 		.4byte	.LFB51
 2288 0451 10000000 		.4byte	.LFE51-.LFB51
ARM GAS  C:\Users\essele\AppData\Local\Temp\cclqzyvT.s 			page 50


 2289 0455 01       		.uleb128 0x1
 2290 0456 9C       		.byte	0x9c
 2291 0457 1B       		.uleb128 0x1b
 2292 0458 26030000 		.4byte	.LASF55
 2293 045c 01       		.byte	0x1
 2294 045d 2A01     		.2byte	0x12a
 2295 045f 00000000 		.4byte	.LFB52
 2296 0463 26000000 		.4byte	.LFE52-.LFB52
 2297 0467 01       		.uleb128 0x1
 2298 0468 9C       		.byte	0x9c
 2299 0469 1B       		.uleb128 0x1b
 2300 046a 48030000 		.4byte	.LASF56
 2301 046e 01       		.byte	0x1
 2302 046f 3101     		.2byte	0x131
 2303 0471 00000000 		.4byte	.LFB53
 2304 0475 26000000 		.4byte	.LFE53-.LFB53
 2305 0479 01       		.uleb128 0x1
 2306 047a 9C       		.byte	0x9c
 2307 047b 1B       		.uleb128 0x1b
 2308 047c 29010000 		.4byte	.LASF57
 2309 0480 01       		.byte	0x1
 2310 0481 3901     		.2byte	0x139
 2311 0483 00000000 		.4byte	.LFB54
 2312 0487 2C000000 		.4byte	.LFE54-.LFB54
 2313 048b 01       		.uleb128 0x1
 2314 048c 9C       		.byte	0x9c
 2315 048d 1C       		.uleb128 0x1c
 2316 048e 1A000000 		.4byte	.LASF58
 2317 0492 01       		.byte	0x1
 2318 0493 4201     		.2byte	0x142
 2319 0495 00000000 		.4byte	.LFB55
 2320 0499 88000000 		.4byte	.LFE55-.LFB55
 2321 049d 01       		.uleb128 0x1
 2322 049e 9C       		.byte	0x9c
 2323 049f B3040000 		.4byte	0x4b3
 2324 04a3 1D       		.uleb128 0x1d
 2325 04a4 40000000 		.4byte	.LASF24
 2326 04a8 01       		.byte	0x1
 2327 04a9 4201     		.2byte	0x142
 2328 04ab 8C000000 		.4byte	0x8c
 2329 04af 02       		.uleb128 0x2
 2330 04b0 91       		.byte	0x91
 2331 04b1 77       		.sleb128 -9
 2332 04b2 00       		.byte	0
 2333 04b3 1C       		.uleb128 0x1c
 2334 04b4 6B010000 		.4byte	.LASF59
 2335 04b8 01       		.byte	0x1
 2336 04b9 6101     		.2byte	0x161
 2337 04bb 00000000 		.4byte	.LFB56
 2338 04bf 90000000 		.4byte	.LFE56-.LFB56
 2339 04c3 01       		.uleb128 0x1
 2340 04c4 9C       		.byte	0x9c
 2341 04c5 D9040000 		.4byte	0x4d9
 2342 04c9 1D       		.uleb128 0x1d
 2343 04ca 40000000 		.4byte	.LASF24
 2344 04ce 01       		.byte	0x1
 2345 04cf 6101     		.2byte	0x161
ARM GAS  C:\Users\essele\AppData\Local\Temp\cclqzyvT.s 			page 51


 2346 04d1 8C000000 		.4byte	0x8c
 2347 04d5 02       		.uleb128 0x2
 2348 04d6 91       		.byte	0x91
 2349 04d7 77       		.sleb128 -9
 2350 04d8 00       		.byte	0
 2351 04d9 1E       		.uleb128 0x1e
 2352 04da E8030000 		.4byte	.LASF60
 2353 04de 01       		.byte	0x1
 2354 04df 8601     		.2byte	0x186
 2355 04e1 8E020000 		.4byte	0x28e
 2356 04e5 00000000 		.4byte	.LFB57
 2357 04e9 12000000 		.4byte	.LFE57-.LFB57
 2358 04ed 01       		.uleb128 0x1
 2359 04ee 9C       		.byte	0x9c
 2360 04ef 1C       		.uleb128 0x1c
 2361 04f0 FA000000 		.4byte	.LASF61
 2362 04f4 01       		.byte	0x1
 2363 04f5 9101     		.2byte	0x191
 2364 04f7 00000000 		.4byte	.LFB58
 2365 04fb 6C000000 		.4byte	.LFE58-.LFB58
 2366 04ff 01       		.uleb128 0x1
 2367 0500 9C       		.byte	0x9c
 2368 0501 59050000 		.4byte	0x559
 2369 0505 1D       		.uleb128 0x1d
 2370 0506 40000000 		.4byte	.LASF24
 2371 050a 01       		.byte	0x1
 2372 050b 9101     		.2byte	0x191
 2373 050d 8C000000 		.4byte	0x8c
 2374 0511 02       		.uleb128 0x2
 2375 0512 91       		.byte	0x91
 2376 0513 6F       		.sleb128 -17
 2377 0514 1F       		.uleb128 0x1f
 2378 0515 62756600 		.ascii	"buf\000"
 2379 0519 01       		.byte	0x1
 2380 051a 9101     		.2byte	0x191
 2381 051c 59050000 		.4byte	0x559
 2382 0520 02       		.uleb128 0x2
 2383 0521 91       		.byte	0x91
 2384 0522 68       		.sleb128 -24
 2385 0523 1F       		.uleb128 0x1f
 2386 0524 6C656E00 		.ascii	"len\000"
 2387 0528 01       		.byte	0x1
 2388 0529 9101     		.2byte	0x191
 2389 052b 7E000000 		.4byte	0x7e
 2390 052f 02       		.uleb128 0x2
 2391 0530 91       		.byte	0x91
 2392 0531 64       		.sleb128 -28
 2393 0532 20       		.uleb128 0x20
 2394 0533 19040000 		.4byte	.LASF62
 2395 0537 01       		.byte	0x1
 2396 0538 9201     		.2byte	0x192
 2397 053a 7E000000 		.4byte	0x7e
 2398 053e 02       		.uleb128 0x2
 2399 053f 91       		.byte	0x91
 2400 0540 70       		.sleb128 -16
 2401 0541 21       		.uleb128 0x21
 2402 0542 32000000 		.4byte	.LBB2
ARM GAS  C:\Users\essele\AppData\Local\Temp\cclqzyvT.s 			page 52


 2403 0546 2E000000 		.4byte	.LBE2-.LBB2
 2404 054a 22       		.uleb128 0x22
 2405 054b 6900     		.ascii	"i\000"
 2406 054d 01       		.byte	0x1
 2407 054e 9601     		.2byte	0x196
 2408 0550 7E000000 		.4byte	0x7e
 2409 0554 02       		.uleb128 0x2
 2410 0555 91       		.byte	0x91
 2411 0556 74       		.sleb128 -12
 2412 0557 00       		.byte	0
 2413 0558 00       		.byte	0
 2414 0559 0E       		.uleb128 0xe
 2415 055a 04       		.byte	0x4
 2416 055b 5F050000 		.4byte	0x55f
 2417 055f 23       		.uleb128 0x23
 2418 0560 8C000000 		.4byte	0x8c
 2419 0564 1C       		.uleb128 0x1c
 2420 0565 09040000 		.4byte	.LASF63
 2421 0569 01       		.byte	0x1
 2422 056a 9A01     		.2byte	0x19a
 2423 056c 00000000 		.4byte	.LFB59
 2424 0570 60000000 		.4byte	.LFE59-.LFB59
 2425 0574 01       		.uleb128 0x1
 2426 0575 9C       		.byte	0x9c
 2427 0576 CE050000 		.4byte	0x5ce
 2428 057a 1F       		.uleb128 0x1f
 2429 057b 62756600 		.ascii	"buf\000"
 2430 057f 01       		.byte	0x1
 2431 0580 9A01     		.2byte	0x19a
 2432 0582 59050000 		.4byte	0x559
 2433 0586 02       		.uleb128 0x2
 2434 0587 91       		.byte	0x91
 2435 0588 6C       		.sleb128 -20
 2436 0589 1F       		.uleb128 0x1f
 2437 058a 6C656E00 		.ascii	"len\000"
 2438 058e 01       		.byte	0x1
 2439 058f 9A01     		.2byte	0x19a
 2440 0591 7E000000 		.4byte	0x7e
 2441 0595 02       		.uleb128 0x2
 2442 0596 91       		.byte	0x91
 2443 0597 68       		.sleb128 -24
 2444 0598 1D       		.uleb128 0x1d
 2445 0599 D4020000 		.4byte	.LASF48
 2446 059d 01       		.byte	0x1
 2447 059e 9A01     		.2byte	0x19a
 2448 05a0 7E000000 		.4byte	0x7e
 2449 05a4 02       		.uleb128 0x2
 2450 05a5 91       		.byte	0x91
 2451 05a6 64       		.sleb128 -28
 2452 05a7 20       		.uleb128 0x20
 2453 05a8 19040000 		.4byte	.LASF62
 2454 05ac 01       		.byte	0x1
 2455 05ad 9B01     		.2byte	0x19b
 2456 05af 7E000000 		.4byte	0x7e
 2457 05b3 02       		.uleb128 0x2
 2458 05b4 91       		.byte	0x91
 2459 05b5 70       		.sleb128 -16
ARM GAS  C:\Users\essele\AppData\Local\Temp\cclqzyvT.s 			page 53


 2460 05b6 21       		.uleb128 0x21
 2461 05b7 26000000 		.4byte	.LBB3
 2462 05bb 2E000000 		.4byte	.LBE3-.LBB3
 2463 05bf 22       		.uleb128 0x22
 2464 05c0 6900     		.ascii	"i\000"
 2465 05c2 01       		.byte	0x1
 2466 05c3 9D01     		.2byte	0x19d
 2467 05c5 7E000000 		.4byte	0x7e
 2468 05c9 02       		.uleb128 0x2
 2469 05ca 91       		.byte	0x91
 2470 05cb 74       		.sleb128 -12
 2471 05cc 00       		.byte	0
 2472 05cd 00       		.byte	0
 2473 05ce 24       		.uleb128 0x24
 2474 05cf A4020000 		.4byte	.LASF64
 2475 05d3 01       		.byte	0x1
 2476 05d4 AD01     		.2byte	0x1ad
 2477 05d6 7E000000 		.4byte	0x7e
 2478 05da 00000000 		.4byte	.LFB60
 2479 05de BC000000 		.4byte	.LFE60-.LFB60
 2480 05e2 01       		.uleb128 0x1
 2481 05e3 9C       		.byte	0x9c
 2482 05e4 32060000 		.4byte	0x632
 2483 05e8 1D       		.uleb128 0x1d
 2484 05e9 67000000 		.4byte	.LASF65
 2485 05ed 01       		.byte	0x1
 2486 05ee AD01     		.2byte	0x1ad
 2487 05f0 7E000000 		.4byte	0x7e
 2488 05f4 02       		.uleb128 0x2
 2489 05f5 91       		.byte	0x91
 2490 05f6 64       		.sleb128 -28
 2491 05f7 1F       		.uleb128 0x1f
 2492 05f8 656E6400 		.ascii	"end\000"
 2493 05fc 01       		.byte	0x1
 2494 05fd AD01     		.2byte	0x1ad
 2495 05ff CF030000 		.4byte	0x3cf
 2496 0603 02       		.uleb128 0x2
 2497 0604 91       		.byte	0x91
 2498 0605 60       		.sleb128 -32
 2499 0606 22       		.uleb128 0x22
 2500 0607 6900     		.ascii	"i\000"
 2501 0609 01       		.byte	0x1
 2502 060a AE01     		.2byte	0x1ae
 2503 060c 7E000000 		.4byte	0x7e
 2504 0610 02       		.uleb128 0x2
 2505 0611 91       		.byte	0x91
 2506 0612 74       		.sleb128 -12
 2507 0613 22       		.uleb128 0x22
 2508 0614 656F6900 		.ascii	"eoi\000"
 2509 0618 01       		.byte	0x1
 2510 0619 AF01     		.2byte	0x1af
 2511 061b 7E000000 		.4byte	0x7e
 2512 061f 02       		.uleb128 0x2
 2513 0620 91       		.byte	0x91
 2514 0621 6C       		.sleb128 -20
 2515 0622 22       		.uleb128 0x22
 2516 0623 62756600 		.ascii	"buf\000"
ARM GAS  C:\Users\essele\AppData\Local\Temp\cclqzyvT.s 			page 54


 2517 0627 01       		.byte	0x1
 2518 0628 B001     		.2byte	0x1b0
 2519 062a C3010000 		.4byte	0x1c3
 2520 062e 02       		.uleb128 0x2
 2521 062f 91       		.byte	0x91
 2522 0630 70       		.sleb128 -16
 2523 0631 00       		.byte	0
 2524 0632 24       		.uleb128 0x24
 2525 0633 2F020000 		.4byte	.LASF66
 2526 0637 01       		.byte	0x1
 2527 0638 DF01     		.2byte	0x1df
 2528 063a 7E000000 		.4byte	0x7e
 2529 063e 00000000 		.4byte	.LFB61
 2530 0642 62000000 		.4byte	.LFE61-.LFB61
 2531 0646 01       		.uleb128 0x1
 2532 0647 9C       		.byte	0x9c
 2533 0648 96060000 		.4byte	0x696
 2534 064c 1D       		.uleb128 0x1d
 2535 064d 66010000 		.4byte	.LASF67
 2536 0651 01       		.byte	0x1
 2537 0652 DF01     		.2byte	0x1df
 2538 0654 C3010000 		.4byte	0x1c3
 2539 0658 02       		.uleb128 0x2
 2540 0659 91       		.byte	0x91
 2541 065a 6C       		.sleb128 -20
 2542 065b 1D       		.uleb128 0x1d
 2543 065c CD020000 		.4byte	.LASF68
 2544 0660 01       		.byte	0x1
 2545 0661 DF01     		.2byte	0x1df
 2546 0663 7E000000 		.4byte	0x7e
 2547 0667 02       		.uleb128 0x2
 2548 0668 91       		.byte	0x91
 2549 0669 68       		.sleb128 -24
 2550 066a 1F       		.uleb128 0x1f
 2551 066b 656E6400 		.ascii	"end\000"
 2552 066f 01       		.byte	0x1
 2553 0670 DF01     		.2byte	0x1df
 2554 0672 CF030000 		.4byte	0x3cf
 2555 0676 02       		.uleb128 0x2
 2556 0677 91       		.byte	0x91
 2557 0678 64       		.sleb128 -28
 2558 0679 22       		.uleb128 0x22
 2559 067a 656F6900 		.ascii	"eoi\000"
 2560 067e 01       		.byte	0x1
 2561 067f E001     		.2byte	0x1e0
 2562 0681 7E000000 		.4byte	0x7e
 2563 0685 02       		.uleb128 0x2
 2564 0686 91       		.byte	0x91
 2565 0687 70       		.sleb128 -16
 2566 0688 22       		.uleb128 0x22
 2567 0689 6900     		.ascii	"i\000"
 2568 068b 01       		.byte	0x1
 2569 068c E101     		.2byte	0x1e1
 2570 068e 7E000000 		.4byte	0x7e
 2571 0692 02       		.uleb128 0x2
 2572 0693 91       		.byte	0x91
 2573 0694 74       		.sleb128 -12
ARM GAS  C:\Users\essele\AppData\Local\Temp\cclqzyvT.s 			page 55


 2574 0695 00       		.byte	0
 2575 0696 25       		.uleb128 0x25
 2576 0697 12010000 		.4byte	.LASF69
 2577 069b 05       		.byte	0x5
 2578 069c 1A       		.byte	0x1a
 2579 069d ED000000 		.4byte	0xed
 2580 06a1 26       		.uleb128 0x26
 2581 06a2 8C000000 		.4byte	0x8c
 2582 06a6 B1060000 		.4byte	0x6b1
 2583 06aa 27       		.uleb128 0x27
 2584 06ab E6000000 		.4byte	0xe6
 2585 06af FF       		.byte	0xff
 2586 06b0 00       		.byte	0
 2587 06b1 28       		.uleb128 0x28
 2588 06b2 48000000 		.4byte	.LASF70
 2589 06b6 01       		.byte	0x1
 2590 06b7 18       		.byte	0x18
 2591 06b8 A1060000 		.4byte	0x6a1
 2592 06bc 05       		.uleb128 0x5
 2593 06bd 03       		.byte	0x3
 2594 06be 00000000 		.4byte	gpib_buffer
 2595 06c2 28       		.uleb128 0x28
 2596 06c3 99020000 		.4byte	.LASF71
 2597 06c7 01       		.byte	0x1
 2598 06c8 28       		.byte	0x28
 2599 06c9 8C000000 		.4byte	0x8c
 2600 06cd 05       		.uleb128 0x5
 2601 06ce 03       		.byte	0x3
 2602 06cf 00000000 		.4byte	my_address
 2603 06d3 28       		.uleb128 0x28
 2604 06d4 7E030000 		.4byte	.LASF72
 2605 06d8 01       		.byte	0x1
 2606 06d9 2E       		.byte	0x2e
 2607 06da 7E000000 		.4byte	0x7e
 2608 06de 05       		.uleb128 0x5
 2609 06df 03       		.byte	0x3
 2610 06e0 00000000 		.4byte	listening
 2611 06e4 28       		.uleb128 0x28
 2612 06e5 00000000 		.4byte	.LASF73
 2613 06e9 01       		.byte	0x1
 2614 06ea 2F       		.byte	0x2f
 2615 06eb 7E000000 		.4byte	0x7e
 2616 06ef 05       		.uleb128 0x5
 2617 06f0 03       		.byte	0x3
 2618 06f1 00000000 		.4byte	talking
 2619 06f5 28       		.uleb128 0x28
 2620 06f6 6D030000 		.4byte	.LASF74
 2621 06fa 01       		.byte	0x1
 2622 06fb 47       		.byte	0x47
 2623 06fc 7E000000 		.4byte	0x7e
 2624 0700 05       		.uleb128 0x5
 2625 0701 03       		.byte	0x3
 2626 0702 00000000 		.4byte	_gpib_mode
 2627 0706 00       		.byte	0
 2628              		.section	.debug_abbrev,"",%progbits
 2629              	.Ldebug_abbrev0:
 2630 0000 01       		.uleb128 0x1
ARM GAS  C:\Users\essele\AppData\Local\Temp\cclqzyvT.s 			page 56


 2631 0001 11       		.uleb128 0x11
 2632 0002 01       		.byte	0x1
 2633 0003 25       		.uleb128 0x25
 2634 0004 0E       		.uleb128 0xe
 2635 0005 13       		.uleb128 0x13
 2636 0006 0B       		.uleb128 0xb
 2637 0007 03       		.uleb128 0x3
 2638 0008 0E       		.uleb128 0xe
 2639 0009 1B       		.uleb128 0x1b
 2640 000a 0E       		.uleb128 0xe
 2641 000b 55       		.uleb128 0x55
 2642 000c 17       		.uleb128 0x17
 2643 000d 11       		.uleb128 0x11
 2644 000e 01       		.uleb128 0x1
 2645 000f 10       		.uleb128 0x10
 2646 0010 17       		.uleb128 0x17
 2647 0011 00       		.byte	0
 2648 0012 00       		.byte	0
 2649 0013 02       		.uleb128 0x2
 2650 0014 24       		.uleb128 0x24
 2651 0015 00       		.byte	0
 2652 0016 0B       		.uleb128 0xb
 2653 0017 0B       		.uleb128 0xb
 2654 0018 3E       		.uleb128 0x3e
 2655 0019 0B       		.uleb128 0xb
 2656 001a 03       		.uleb128 0x3
 2657 001b 0E       		.uleb128 0xe
 2658 001c 00       		.byte	0
 2659 001d 00       		.byte	0
 2660 001e 03       		.uleb128 0x3
 2661 001f 16       		.uleb128 0x16
 2662 0020 00       		.byte	0
 2663 0021 03       		.uleb128 0x3
 2664 0022 0E       		.uleb128 0xe
 2665 0023 3A       		.uleb128 0x3a
 2666 0024 0B       		.uleb128 0xb
 2667 0025 3B       		.uleb128 0x3b
 2668 0026 0B       		.uleb128 0xb
 2669 0027 49       		.uleb128 0x49
 2670 0028 13       		.uleb128 0x13
 2671 0029 00       		.byte	0
 2672 002a 00       		.byte	0
 2673 002b 04       		.uleb128 0x4
 2674 002c 24       		.uleb128 0x24
 2675 002d 00       		.byte	0
 2676 002e 0B       		.uleb128 0xb
 2677 002f 0B       		.uleb128 0xb
 2678 0030 3E       		.uleb128 0x3e
 2679 0031 0B       		.uleb128 0xb
 2680 0032 03       		.uleb128 0x3
 2681 0033 08       		.uleb128 0x8
 2682 0034 00       		.byte	0
 2683 0035 00       		.byte	0
 2684 0036 05       		.uleb128 0x5
 2685 0037 16       		.uleb128 0x16
 2686 0038 00       		.byte	0
 2687 0039 03       		.uleb128 0x3
ARM GAS  C:\Users\essele\AppData\Local\Temp\cclqzyvT.s 			page 57


 2688 003a 0E       		.uleb128 0xe
 2689 003b 3A       		.uleb128 0x3a
 2690 003c 0B       		.uleb128 0xb
 2691 003d 3B       		.uleb128 0x3b
 2692 003e 05       		.uleb128 0x5
 2693 003f 49       		.uleb128 0x49
 2694 0040 13       		.uleb128 0x13
 2695 0041 00       		.byte	0
 2696 0042 00       		.byte	0
 2697 0043 06       		.uleb128 0x6
 2698 0044 35       		.uleb128 0x35
 2699 0045 00       		.byte	0
 2700 0046 49       		.uleb128 0x49
 2701 0047 13       		.uleb128 0x13
 2702 0048 00       		.byte	0
 2703 0049 00       		.byte	0
 2704 004a 07       		.uleb128 0x7
 2705 004b 13       		.uleb128 0x13
 2706 004c 01       		.byte	0x1
 2707 004d 03       		.uleb128 0x3
 2708 004e 0E       		.uleb128 0xe
 2709 004f 0B       		.uleb128 0xb
 2710 0050 0B       		.uleb128 0xb
 2711 0051 3A       		.uleb128 0x3a
 2712 0052 0B       		.uleb128 0xb
 2713 0053 3B       		.uleb128 0x3b
 2714 0054 0B       		.uleb128 0xb
 2715 0055 01       		.uleb128 0x1
 2716 0056 13       		.uleb128 0x13
 2717 0057 00       		.byte	0
 2718 0058 00       		.byte	0
 2719 0059 08       		.uleb128 0x8
 2720 005a 0D       		.uleb128 0xd
 2721 005b 00       		.byte	0
 2722 005c 03       		.uleb128 0x3
 2723 005d 0E       		.uleb128 0xe
 2724 005e 3A       		.uleb128 0x3a
 2725 005f 0B       		.uleb128 0xb
 2726 0060 3B       		.uleb128 0x3b
 2727 0061 0B       		.uleb128 0xb
 2728 0062 49       		.uleb128 0x49
 2729 0063 13       		.uleb128 0x13
 2730 0064 38       		.uleb128 0x38
 2731 0065 0B       		.uleb128 0xb
 2732 0066 00       		.byte	0
 2733 0067 00       		.byte	0
 2734 0068 09       		.uleb128 0x9
 2735 0069 0D       		.uleb128 0xd
 2736 006a 00       		.byte	0
 2737 006b 03       		.uleb128 0x3
 2738 006c 08       		.uleb128 0x8
 2739 006d 3A       		.uleb128 0x3a
 2740 006e 0B       		.uleb128 0xb
 2741 006f 3B       		.uleb128 0x3b
 2742 0070 0B       		.uleb128 0xb
 2743 0071 49       		.uleb128 0x49
 2744 0072 13       		.uleb128 0x13
ARM GAS  C:\Users\essele\AppData\Local\Temp\cclqzyvT.s 			page 58


 2745 0073 38       		.uleb128 0x38
 2746 0074 0B       		.uleb128 0xb
 2747 0075 00       		.byte	0
 2748 0076 00       		.byte	0
 2749 0077 0A       		.uleb128 0xa
 2750 0078 04       		.uleb128 0x4
 2751 0079 01       		.byte	0x1
 2752 007a 0B       		.uleb128 0xb
 2753 007b 0B       		.uleb128 0xb
 2754 007c 49       		.uleb128 0x49
 2755 007d 13       		.uleb128 0x13
 2756 007e 3A       		.uleb128 0x3a
 2757 007f 0B       		.uleb128 0xb
 2758 0080 3B       		.uleb128 0x3b
 2759 0081 0B       		.uleb128 0xb
 2760 0082 01       		.uleb128 0x1
 2761 0083 13       		.uleb128 0x13
 2762 0084 00       		.byte	0
 2763 0085 00       		.byte	0
 2764 0086 0B       		.uleb128 0xb
 2765 0087 28       		.uleb128 0x28
 2766 0088 00       		.byte	0
 2767 0089 03       		.uleb128 0x3
 2768 008a 08       		.uleb128 0x8
 2769 008b 1C       		.uleb128 0x1c
 2770 008c 0B       		.uleb128 0xb
 2771 008d 00       		.byte	0
 2772 008e 00       		.byte	0
 2773 008f 0C       		.uleb128 0xc
 2774 0090 28       		.uleb128 0x28
 2775 0091 00       		.byte	0
 2776 0092 03       		.uleb128 0x3
 2777 0093 0E       		.uleb128 0xe
 2778 0094 1C       		.uleb128 0x1c
 2779 0095 0B       		.uleb128 0xb
 2780 0096 00       		.byte	0
 2781 0097 00       		.byte	0
 2782 0098 0D       		.uleb128 0xd
 2783 0099 2E       		.uleb128 0x2e
 2784 009a 00       		.byte	0
 2785 009b 3F       		.uleb128 0x3f
 2786 009c 19       		.uleb128 0x19
 2787 009d 03       		.uleb128 0x3
 2788 009e 0E       		.uleb128 0xe
 2789 009f 3A       		.uleb128 0x3a
 2790 00a0 0B       		.uleb128 0xb
 2791 00a1 3B       		.uleb128 0x3b
 2792 00a2 0B       		.uleb128 0xb
 2793 00a3 49       		.uleb128 0x49
 2794 00a4 13       		.uleb128 0x13
 2795 00a5 11       		.uleb128 0x11
 2796 00a6 01       		.uleb128 0x1
 2797 00a7 12       		.uleb128 0x12
 2798 00a8 06       		.uleb128 0x6
 2799 00a9 40       		.uleb128 0x40
 2800 00aa 18       		.uleb128 0x18
 2801 00ab 9742     		.uleb128 0x2117
ARM GAS  C:\Users\essele\AppData\Local\Temp\cclqzyvT.s 			page 59


 2802 00ad 19       		.uleb128 0x19
 2803 00ae 00       		.byte	0
 2804 00af 00       		.byte	0
 2805 00b0 0E       		.uleb128 0xe
 2806 00b1 0F       		.uleb128 0xf
 2807 00b2 00       		.byte	0
 2808 00b3 0B       		.uleb128 0xb
 2809 00b4 0B       		.uleb128 0xb
 2810 00b5 49       		.uleb128 0x49
 2811 00b6 13       		.uleb128 0x13
 2812 00b7 00       		.byte	0
 2813 00b8 00       		.byte	0
 2814 00b9 0F       		.uleb128 0xf
 2815 00ba 2E       		.uleb128 0x2e
 2816 00bb 00       		.byte	0
 2817 00bc 3F       		.uleb128 0x3f
 2818 00bd 19       		.uleb128 0x19
 2819 00be 03       		.uleb128 0x3
 2820 00bf 0E       		.uleb128 0xe
 2821 00c0 3A       		.uleb128 0x3a
 2822 00c1 0B       		.uleb128 0xb
 2823 00c2 3B       		.uleb128 0x3b
 2824 00c3 0B       		.uleb128 0xb
 2825 00c4 11       		.uleb128 0x11
 2826 00c5 01       		.uleb128 0x1
 2827 00c6 12       		.uleb128 0x12
 2828 00c7 06       		.uleb128 0x6
 2829 00c8 40       		.uleb128 0x40
 2830 00c9 18       		.uleb128 0x18
 2831 00ca 9742     		.uleb128 0x2117
 2832 00cc 19       		.uleb128 0x19
 2833 00cd 00       		.byte	0
 2834 00ce 00       		.byte	0
 2835 00cf 10       		.uleb128 0x10
 2836 00d0 2E       		.uleb128 0x2e
 2837 00d1 00       		.byte	0
 2838 00d2 3F       		.uleb128 0x3f
 2839 00d3 19       		.uleb128 0x19
 2840 00d4 03       		.uleb128 0x3
 2841 00d5 0E       		.uleb128 0xe
 2842 00d6 3A       		.uleb128 0x3a
 2843 00d7 0B       		.uleb128 0xb
 2844 00d8 3B       		.uleb128 0x3b
 2845 00d9 0B       		.uleb128 0xb
 2846 00da 11       		.uleb128 0x11
 2847 00db 01       		.uleb128 0x1
 2848 00dc 12       		.uleb128 0x12
 2849 00dd 06       		.uleb128 0x6
 2850 00de 40       		.uleb128 0x40
 2851 00df 18       		.uleb128 0x18
 2852 00e0 9642     		.uleb128 0x2116
 2853 00e2 19       		.uleb128 0x19
 2854 00e3 00       		.byte	0
 2855 00e4 00       		.byte	0
 2856 00e5 11       		.uleb128 0x11
 2857 00e6 2E       		.uleb128 0x2e
 2858 00e7 01       		.byte	0x1
ARM GAS  C:\Users\essele\AppData\Local\Temp\cclqzyvT.s 			page 60


 2859 00e8 3F       		.uleb128 0x3f
 2860 00e9 19       		.uleb128 0x19
 2861 00ea 03       		.uleb128 0x3
 2862 00eb 0E       		.uleb128 0xe
 2863 00ec 3A       		.uleb128 0x3a
 2864 00ed 0B       		.uleb128 0xb
 2865 00ee 3B       		.uleb128 0x3b
 2866 00ef 0B       		.uleb128 0xb
 2867 00f0 27       		.uleb128 0x27
 2868 00f1 19       		.uleb128 0x19
 2869 00f2 11       		.uleb128 0x11
 2870 00f3 01       		.uleb128 0x1
 2871 00f4 12       		.uleb128 0x12
 2872 00f5 06       		.uleb128 0x6
 2873 00f6 40       		.uleb128 0x40
 2874 00f7 18       		.uleb128 0x18
 2875 00f8 9742     		.uleb128 0x2117
 2876 00fa 19       		.uleb128 0x19
 2877 00fb 01       		.uleb128 0x1
 2878 00fc 13       		.uleb128 0x13
 2879 00fd 00       		.byte	0
 2880 00fe 00       		.byte	0
 2881 00ff 12       		.uleb128 0x12
 2882 0100 05       		.uleb128 0x5
 2883 0101 00       		.byte	0
 2884 0102 03       		.uleb128 0x3
 2885 0103 0E       		.uleb128 0xe
 2886 0104 3A       		.uleb128 0x3a
 2887 0105 0B       		.uleb128 0xb
 2888 0106 3B       		.uleb128 0x3b
 2889 0107 0B       		.uleb128 0xb
 2890 0108 49       		.uleb128 0x49
 2891 0109 13       		.uleb128 0x13
 2892 010a 02       		.uleb128 0x2
 2893 010b 18       		.uleb128 0x18
 2894 010c 00       		.byte	0
 2895 010d 00       		.byte	0
 2896 010e 13       		.uleb128 0x13
 2897 010f 2E       		.uleb128 0x2e
 2898 0110 01       		.byte	0x1
 2899 0111 3F       		.uleb128 0x3f
 2900 0112 19       		.uleb128 0x19
 2901 0113 03       		.uleb128 0x3
 2902 0114 0E       		.uleb128 0xe
 2903 0115 3A       		.uleb128 0x3a
 2904 0116 0B       		.uleb128 0xb
 2905 0117 3B       		.uleb128 0x3b
 2906 0118 0B       		.uleb128 0xb
 2907 0119 49       		.uleb128 0x49
 2908 011a 13       		.uleb128 0x13
 2909 011b 11       		.uleb128 0x11
 2910 011c 01       		.uleb128 0x1
 2911 011d 12       		.uleb128 0x12
 2912 011e 06       		.uleb128 0x6
 2913 011f 40       		.uleb128 0x40
 2914 0120 18       		.uleb128 0x18
 2915 0121 9742     		.uleb128 0x2117
ARM GAS  C:\Users\essele\AppData\Local\Temp\cclqzyvT.s 			page 61


 2916 0123 19       		.uleb128 0x19
 2917 0124 01       		.uleb128 0x1
 2918 0125 13       		.uleb128 0x13
 2919 0126 00       		.byte	0
 2920 0127 00       		.byte	0
 2921 0128 14       		.uleb128 0x14
 2922 0129 34       		.uleb128 0x34
 2923 012a 00       		.byte	0
 2924 012b 03       		.uleb128 0x3
 2925 012c 08       		.uleb128 0x8
 2926 012d 3A       		.uleb128 0x3a
 2927 012e 0B       		.uleb128 0xb
 2928 012f 3B       		.uleb128 0x3b
 2929 0130 0B       		.uleb128 0xb
 2930 0131 49       		.uleb128 0x49
 2931 0132 13       		.uleb128 0x13
 2932 0133 02       		.uleb128 0x2
 2933 0134 18       		.uleb128 0x18
 2934 0135 00       		.byte	0
 2935 0136 00       		.byte	0
 2936 0137 15       		.uleb128 0x15
 2937 0138 2E       		.uleb128 0x2e
 2938 0139 01       		.byte	0x1
 2939 013a 3F       		.uleb128 0x3f
 2940 013b 19       		.uleb128 0x19
 2941 013c 03       		.uleb128 0x3
 2942 013d 0E       		.uleb128 0xe
 2943 013e 3A       		.uleb128 0x3a
 2944 013f 0B       		.uleb128 0xb
 2945 0140 3B       		.uleb128 0x3b
 2946 0141 0B       		.uleb128 0xb
 2947 0142 27       		.uleb128 0x27
 2948 0143 19       		.uleb128 0x19
 2949 0144 49       		.uleb128 0x49
 2950 0145 13       		.uleb128 0x13
 2951 0146 11       		.uleb128 0x11
 2952 0147 01       		.uleb128 0x1
 2953 0148 12       		.uleb128 0x12
 2954 0149 06       		.uleb128 0x6
 2955 014a 40       		.uleb128 0x40
 2956 014b 18       		.uleb128 0x18
 2957 014c 9742     		.uleb128 0x2117
 2958 014e 19       		.uleb128 0x19
 2959 014f 01       		.uleb128 0x1
 2960 0150 13       		.uleb128 0x13
 2961 0151 00       		.byte	0
 2962 0152 00       		.byte	0
 2963 0153 16       		.uleb128 0x16
 2964 0154 2E       		.uleb128 0x2e
 2965 0155 01       		.byte	0x1
 2966 0156 3F       		.uleb128 0x3f
 2967 0157 19       		.uleb128 0x19
 2968 0158 03       		.uleb128 0x3
 2969 0159 0E       		.uleb128 0xe
 2970 015a 3A       		.uleb128 0x3a
 2971 015b 0B       		.uleb128 0xb
 2972 015c 3B       		.uleb128 0x3b
ARM GAS  C:\Users\essele\AppData\Local\Temp\cclqzyvT.s 			page 62


 2973 015d 0B       		.uleb128 0xb
 2974 015e 49       		.uleb128 0x49
 2975 015f 13       		.uleb128 0x13
 2976 0160 11       		.uleb128 0x11
 2977 0161 01       		.uleb128 0x1
 2978 0162 12       		.uleb128 0x12
 2979 0163 06       		.uleb128 0x6
 2980 0164 40       		.uleb128 0x40
 2981 0165 18       		.uleb128 0x18
 2982 0166 9642     		.uleb128 0x2116
 2983 0168 19       		.uleb128 0x19
 2984 0169 01       		.uleb128 0x1
 2985 016a 13       		.uleb128 0x13
 2986 016b 00       		.byte	0
 2987 016c 00       		.byte	0
 2988 016d 17       		.uleb128 0x17
 2989 016e 34       		.uleb128 0x34
 2990 016f 00       		.byte	0
 2991 0170 03       		.uleb128 0x3
 2992 0171 0E       		.uleb128 0xe
 2993 0172 3A       		.uleb128 0x3a
 2994 0173 0B       		.uleb128 0xb
 2995 0174 3B       		.uleb128 0x3b
 2996 0175 0B       		.uleb128 0xb
 2997 0176 49       		.uleb128 0x49
 2998 0177 13       		.uleb128 0x13
 2999 0178 02       		.uleb128 0x2
 3000 0179 18       		.uleb128 0x18
 3001 017a 00       		.byte	0
 3002 017b 00       		.byte	0
 3003 017c 18       		.uleb128 0x18
 3004 017d 2E       		.uleb128 0x2e
 3005 017e 01       		.byte	0x1
 3006 017f 3F       		.uleb128 0x3f
 3007 0180 19       		.uleb128 0x19
 3008 0181 03       		.uleb128 0x3
 3009 0182 0E       		.uleb128 0xe
 3010 0183 3A       		.uleb128 0x3a
 3011 0184 0B       		.uleb128 0xb
 3012 0185 3B       		.uleb128 0x3b
 3013 0186 0B       		.uleb128 0xb
 3014 0187 27       		.uleb128 0x27
 3015 0188 19       		.uleb128 0x19
 3016 0189 49       		.uleb128 0x49
 3017 018a 13       		.uleb128 0x13
 3018 018b 11       		.uleb128 0x11
 3019 018c 01       		.uleb128 0x1
 3020 018d 12       		.uleb128 0x12
 3021 018e 06       		.uleb128 0x6
 3022 018f 40       		.uleb128 0x40
 3023 0190 18       		.uleb128 0x18
 3024 0191 9642     		.uleb128 0x2116
 3025 0193 19       		.uleb128 0x19
 3026 0194 01       		.uleb128 0x1
 3027 0195 13       		.uleb128 0x13
 3028 0196 00       		.byte	0
 3029 0197 00       		.byte	0
ARM GAS  C:\Users\essele\AppData\Local\Temp\cclqzyvT.s 			page 63


 3030 0198 19       		.uleb128 0x19
 3031 0199 0A       		.uleb128 0xa
 3032 019a 00       		.byte	0
 3033 019b 03       		.uleb128 0x3
 3034 019c 0E       		.uleb128 0xe
 3035 019d 3A       		.uleb128 0x3a
 3036 019e 0B       		.uleb128 0xb
 3037 019f 3B       		.uleb128 0x3b
 3038 01a0 0B       		.uleb128 0xb
 3039 01a1 11       		.uleb128 0x11
 3040 01a2 01       		.uleb128 0x1
 3041 01a3 00       		.byte	0
 3042 01a4 00       		.byte	0
 3043 01a5 1A       		.uleb128 0x1a
 3044 01a6 05       		.uleb128 0x5
 3045 01a7 00       		.byte	0
 3046 01a8 03       		.uleb128 0x3
 3047 01a9 08       		.uleb128 0x8
 3048 01aa 3A       		.uleb128 0x3a
 3049 01ab 0B       		.uleb128 0xb
 3050 01ac 3B       		.uleb128 0x3b
 3051 01ad 0B       		.uleb128 0xb
 3052 01ae 49       		.uleb128 0x49
 3053 01af 13       		.uleb128 0x13
 3054 01b0 02       		.uleb128 0x2
 3055 01b1 18       		.uleb128 0x18
 3056 01b2 00       		.byte	0
 3057 01b3 00       		.byte	0
 3058 01b4 1B       		.uleb128 0x1b
 3059 01b5 2E       		.uleb128 0x2e
 3060 01b6 00       		.byte	0
 3061 01b7 3F       		.uleb128 0x3f
 3062 01b8 19       		.uleb128 0x19
 3063 01b9 03       		.uleb128 0x3
 3064 01ba 0E       		.uleb128 0xe
 3065 01bb 3A       		.uleb128 0x3a
 3066 01bc 0B       		.uleb128 0xb
 3067 01bd 3B       		.uleb128 0x3b
 3068 01be 05       		.uleb128 0x5
 3069 01bf 11       		.uleb128 0x11
 3070 01c0 01       		.uleb128 0x1
 3071 01c1 12       		.uleb128 0x12
 3072 01c2 06       		.uleb128 0x6
 3073 01c3 40       		.uleb128 0x40
 3074 01c4 18       		.uleb128 0x18
 3075 01c5 9642     		.uleb128 0x2116
 3076 01c7 19       		.uleb128 0x19
 3077 01c8 00       		.byte	0
 3078 01c9 00       		.byte	0
 3079 01ca 1C       		.uleb128 0x1c
 3080 01cb 2E       		.uleb128 0x2e
 3081 01cc 01       		.byte	0x1
 3082 01cd 3F       		.uleb128 0x3f
 3083 01ce 19       		.uleb128 0x19
 3084 01cf 03       		.uleb128 0x3
 3085 01d0 0E       		.uleb128 0xe
 3086 01d1 3A       		.uleb128 0x3a
ARM GAS  C:\Users\essele\AppData\Local\Temp\cclqzyvT.s 			page 64


 3087 01d2 0B       		.uleb128 0xb
 3088 01d3 3B       		.uleb128 0x3b
 3089 01d4 05       		.uleb128 0x5
 3090 01d5 27       		.uleb128 0x27
 3091 01d6 19       		.uleb128 0x19
 3092 01d7 11       		.uleb128 0x11
 3093 01d8 01       		.uleb128 0x1
 3094 01d9 12       		.uleb128 0x12
 3095 01da 06       		.uleb128 0x6
 3096 01db 40       		.uleb128 0x40
 3097 01dc 18       		.uleb128 0x18
 3098 01dd 9642     		.uleb128 0x2116
 3099 01df 19       		.uleb128 0x19
 3100 01e0 01       		.uleb128 0x1
 3101 01e1 13       		.uleb128 0x13
 3102 01e2 00       		.byte	0
 3103 01e3 00       		.byte	0
 3104 01e4 1D       		.uleb128 0x1d
 3105 01e5 05       		.uleb128 0x5
 3106 01e6 00       		.byte	0
 3107 01e7 03       		.uleb128 0x3
 3108 01e8 0E       		.uleb128 0xe
 3109 01e9 3A       		.uleb128 0x3a
 3110 01ea 0B       		.uleb128 0xb
 3111 01eb 3B       		.uleb128 0x3b
 3112 01ec 05       		.uleb128 0x5
 3113 01ed 49       		.uleb128 0x49
 3114 01ee 13       		.uleb128 0x13
 3115 01ef 02       		.uleb128 0x2
 3116 01f0 18       		.uleb128 0x18
 3117 01f1 00       		.byte	0
 3118 01f2 00       		.byte	0
 3119 01f3 1E       		.uleb128 0x1e
 3120 01f4 2E       		.uleb128 0x2e
 3121 01f5 00       		.byte	0
 3122 01f6 3F       		.uleb128 0x3f
 3123 01f7 19       		.uleb128 0x19
 3124 01f8 03       		.uleb128 0x3
 3125 01f9 0E       		.uleb128 0xe
 3126 01fa 3A       		.uleb128 0x3a
 3127 01fb 0B       		.uleb128 0xb
 3128 01fc 3B       		.uleb128 0x3b
 3129 01fd 05       		.uleb128 0x5
 3130 01fe 49       		.uleb128 0x49
 3131 01ff 13       		.uleb128 0x13
 3132 0200 11       		.uleb128 0x11
 3133 0201 01       		.uleb128 0x1
 3134 0202 12       		.uleb128 0x12
 3135 0203 06       		.uleb128 0x6
 3136 0204 40       		.uleb128 0x40
 3137 0205 18       		.uleb128 0x18
 3138 0206 9642     		.uleb128 0x2116
 3139 0208 19       		.uleb128 0x19
 3140 0209 00       		.byte	0
 3141 020a 00       		.byte	0
 3142 020b 1F       		.uleb128 0x1f
 3143 020c 05       		.uleb128 0x5
ARM GAS  C:\Users\essele\AppData\Local\Temp\cclqzyvT.s 			page 65


 3144 020d 00       		.byte	0
 3145 020e 03       		.uleb128 0x3
 3146 020f 08       		.uleb128 0x8
 3147 0210 3A       		.uleb128 0x3a
 3148 0211 0B       		.uleb128 0xb
 3149 0212 3B       		.uleb128 0x3b
 3150 0213 05       		.uleb128 0x5
 3151 0214 49       		.uleb128 0x49
 3152 0215 13       		.uleb128 0x13
 3153 0216 02       		.uleb128 0x2
 3154 0217 18       		.uleb128 0x18
 3155 0218 00       		.byte	0
 3156 0219 00       		.byte	0
 3157 021a 20       		.uleb128 0x20
 3158 021b 34       		.uleb128 0x34
 3159 021c 00       		.byte	0
 3160 021d 03       		.uleb128 0x3
 3161 021e 0E       		.uleb128 0xe
 3162 021f 3A       		.uleb128 0x3a
 3163 0220 0B       		.uleb128 0xb
 3164 0221 3B       		.uleb128 0x3b
 3165 0222 05       		.uleb128 0x5
 3166 0223 49       		.uleb128 0x49
 3167 0224 13       		.uleb128 0x13
 3168 0225 02       		.uleb128 0x2
 3169 0226 18       		.uleb128 0x18
 3170 0227 00       		.byte	0
 3171 0228 00       		.byte	0
 3172 0229 21       		.uleb128 0x21
 3173 022a 0B       		.uleb128 0xb
 3174 022b 01       		.byte	0x1
 3175 022c 11       		.uleb128 0x11
 3176 022d 01       		.uleb128 0x1
 3177 022e 12       		.uleb128 0x12
 3178 022f 06       		.uleb128 0x6
 3179 0230 00       		.byte	0
 3180 0231 00       		.byte	0
 3181 0232 22       		.uleb128 0x22
 3182 0233 34       		.uleb128 0x34
 3183 0234 00       		.byte	0
 3184 0235 03       		.uleb128 0x3
 3185 0236 08       		.uleb128 0x8
 3186 0237 3A       		.uleb128 0x3a
 3187 0238 0B       		.uleb128 0xb
 3188 0239 3B       		.uleb128 0x3b
 3189 023a 05       		.uleb128 0x5
 3190 023b 49       		.uleb128 0x49
 3191 023c 13       		.uleb128 0x13
 3192 023d 02       		.uleb128 0x2
 3193 023e 18       		.uleb128 0x18
 3194 023f 00       		.byte	0
 3195 0240 00       		.byte	0
 3196 0241 23       		.uleb128 0x23
 3197 0242 26       		.uleb128 0x26
 3198 0243 00       		.byte	0
 3199 0244 49       		.uleb128 0x49
 3200 0245 13       		.uleb128 0x13
ARM GAS  C:\Users\essele\AppData\Local\Temp\cclqzyvT.s 			page 66


 3201 0246 00       		.byte	0
 3202 0247 00       		.byte	0
 3203 0248 24       		.uleb128 0x24
 3204 0249 2E       		.uleb128 0x2e
 3205 024a 01       		.byte	0x1
 3206 024b 3F       		.uleb128 0x3f
 3207 024c 19       		.uleb128 0x19
 3208 024d 03       		.uleb128 0x3
 3209 024e 0E       		.uleb128 0xe
 3210 024f 3A       		.uleb128 0x3a
 3211 0250 0B       		.uleb128 0xb
 3212 0251 3B       		.uleb128 0x3b
 3213 0252 05       		.uleb128 0x5
 3214 0253 27       		.uleb128 0x27
 3215 0254 19       		.uleb128 0x19
 3216 0255 49       		.uleb128 0x49
 3217 0256 13       		.uleb128 0x13
 3218 0257 11       		.uleb128 0x11
 3219 0258 01       		.uleb128 0x1
 3220 0259 12       		.uleb128 0x12
 3221 025a 06       		.uleb128 0x6
 3222 025b 40       		.uleb128 0x40
 3223 025c 18       		.uleb128 0x18
 3224 025d 9642     		.uleb128 0x2116
 3225 025f 19       		.uleb128 0x19
 3226 0260 01       		.uleb128 0x1
 3227 0261 13       		.uleb128 0x13
 3228 0262 00       		.byte	0
 3229 0263 00       		.byte	0
 3230 0264 25       		.uleb128 0x25
 3231 0265 34       		.uleb128 0x34
 3232 0266 00       		.byte	0
 3233 0267 03       		.uleb128 0x3
 3234 0268 0E       		.uleb128 0xe
 3235 0269 3A       		.uleb128 0x3a
 3236 026a 0B       		.uleb128 0xb
 3237 026b 3B       		.uleb128 0x3b
 3238 026c 0B       		.uleb128 0xb
 3239 026d 49       		.uleb128 0x49
 3240 026e 13       		.uleb128 0x13
 3241 026f 3F       		.uleb128 0x3f
 3242 0270 19       		.uleb128 0x19
 3243 0271 3C       		.uleb128 0x3c
 3244 0272 19       		.uleb128 0x19
 3245 0273 00       		.byte	0
 3246 0274 00       		.byte	0
 3247 0275 26       		.uleb128 0x26
 3248 0276 01       		.uleb128 0x1
 3249 0277 01       		.byte	0x1
 3250 0278 49       		.uleb128 0x49
 3251 0279 13       		.uleb128 0x13
 3252 027a 01       		.uleb128 0x1
 3253 027b 13       		.uleb128 0x13
 3254 027c 00       		.byte	0
 3255 027d 00       		.byte	0
 3256 027e 27       		.uleb128 0x27
 3257 027f 21       		.uleb128 0x21
ARM GAS  C:\Users\essele\AppData\Local\Temp\cclqzyvT.s 			page 67


 3258 0280 00       		.byte	0
 3259 0281 49       		.uleb128 0x49
 3260 0282 13       		.uleb128 0x13
 3261 0283 2F       		.uleb128 0x2f
 3262 0284 0B       		.uleb128 0xb
 3263 0285 00       		.byte	0
 3264 0286 00       		.byte	0
 3265 0287 28       		.uleb128 0x28
 3266 0288 34       		.uleb128 0x34
 3267 0289 00       		.byte	0
 3268 028a 03       		.uleb128 0x3
 3269 028b 0E       		.uleb128 0xe
 3270 028c 3A       		.uleb128 0x3a
 3271 028d 0B       		.uleb128 0xb
 3272 028e 3B       		.uleb128 0x3b
 3273 028f 0B       		.uleb128 0xb
 3274 0290 49       		.uleb128 0x49
 3275 0291 13       		.uleb128 0x13
 3276 0292 3F       		.uleb128 0x3f
 3277 0293 19       		.uleb128 0x19
 3278 0294 02       		.uleb128 0x2
 3279 0295 18       		.uleb128 0x18
 3280 0296 00       		.byte	0
 3281 0297 00       		.byte	0
 3282 0298 00       		.byte	0
 3283              		.section	.debug_aranges,"",%progbits
 3284 0000 F4000000 		.4byte	0xf4
 3285 0004 0200     		.2byte	0x2
 3286 0006 00000000 		.4byte	.Ldebug_info0
 3287 000a 04       		.byte	0x4
 3288 000b 00       		.byte	0
 3289 000c 0000     		.2byte	0
 3290 000e 0000     		.2byte	0
 3291 0010 00000000 		.4byte	.LFB34
 3292 0014 10000000 		.4byte	.LFE34-.LFB34
 3293 0018 00000000 		.4byte	.LFB35
 3294 001c 0A000000 		.4byte	.LFE35-.LFB35
 3295 0020 00000000 		.4byte	.LFB36
 3296 0024 10000000 		.4byte	.LFE36-.LFB36
 3297 0028 00000000 		.4byte	.LFB37
 3298 002c 28000000 		.4byte	.LFE37-.LFB37
 3299 0030 00000000 		.4byte	.LFB38
 3300 0034 28000000 		.4byte	.LFE38-.LFB38
 3301 0038 00000000 		.4byte	.LFB39
 3302 003c 40000000 		.4byte	.LFE39-.LFB39
 3303 0040 00000000 		.4byte	.LFB40
 3304 0044 34000000 		.4byte	.LFE40-.LFB40
 3305 0048 00000000 		.4byte	.LFB41
 3306 004c 8C000000 		.4byte	.LFE41-.LFB41
 3307 0050 00000000 		.4byte	.LFB42
 3308 0054 14000000 		.4byte	.LFE42-.LFB42
 3309 0058 00000000 		.4byte	.LFB43
 3310 005c 40000000 		.4byte	.LFE43-.LFB43
 3311 0060 00000000 		.4byte	.LFB44
 3312 0064 4C000000 		.4byte	.LFE44-.LFB44
 3313 0068 00000000 		.4byte	.LFB45
 3314 006c 88000000 		.4byte	.LFE45-.LFB45
ARM GAS  C:\Users\essele\AppData\Local\Temp\cclqzyvT.s 			page 68


 3315 0070 00000000 		.4byte	.LFB46
 3316 0074 90000000 		.4byte	.LFE46-.LFB46
 3317 0078 00000000 		.4byte	.LFB47
 3318 007c 22000000 		.4byte	.LFE47-.LFB47
 3319 0080 00000000 		.4byte	.LFB48
 3320 0084 24000000 		.4byte	.LFE48-.LFB48
 3321 0088 00000000 		.4byte	.LFB49
 3322 008c 24000000 		.4byte	.LFE49-.LFB49
 3323 0090 00000000 		.4byte	.LFB50
 3324 0094 10000000 		.4byte	.LFE50-.LFB50
 3325 0098 00000000 		.4byte	.LFB51
 3326 009c 10000000 		.4byte	.LFE51-.LFB51
 3327 00a0 00000000 		.4byte	.LFB52
 3328 00a4 26000000 		.4byte	.LFE52-.LFB52
 3329 00a8 00000000 		.4byte	.LFB53
 3330 00ac 26000000 		.4byte	.LFE53-.LFB53
 3331 00b0 00000000 		.4byte	.LFB54
 3332 00b4 2C000000 		.4byte	.LFE54-.LFB54
 3333 00b8 00000000 		.4byte	.LFB55
 3334 00bc 88000000 		.4byte	.LFE55-.LFB55
 3335 00c0 00000000 		.4byte	.LFB56
 3336 00c4 90000000 		.4byte	.LFE56-.LFB56
 3337 00c8 00000000 		.4byte	.LFB57
 3338 00cc 12000000 		.4byte	.LFE57-.LFB57
 3339 00d0 00000000 		.4byte	.LFB58
 3340 00d4 6C000000 		.4byte	.LFE58-.LFB58
 3341 00d8 00000000 		.4byte	.LFB59
 3342 00dc 60000000 		.4byte	.LFE59-.LFB59
 3343 00e0 00000000 		.4byte	.LFB60
 3344 00e4 BC000000 		.4byte	.LFE60-.LFB60
 3345 00e8 00000000 		.4byte	.LFB61
 3346 00ec 62000000 		.4byte	.LFE61-.LFB61
 3347 00f0 00000000 		.4byte	0
 3348 00f4 00000000 		.4byte	0
 3349              		.section	.debug_ranges,"",%progbits
 3350              	.Ldebug_ranges0:
 3351 0000 00000000 		.4byte	.LFB34
 3352 0004 10000000 		.4byte	.LFE34
 3353 0008 00000000 		.4byte	.LFB35
 3354 000c 0A000000 		.4byte	.LFE35
 3355 0010 00000000 		.4byte	.LFB36
 3356 0014 10000000 		.4byte	.LFE36
 3357 0018 00000000 		.4byte	.LFB37
 3358 001c 28000000 		.4byte	.LFE37
 3359 0020 00000000 		.4byte	.LFB38
 3360 0024 28000000 		.4byte	.LFE38
 3361 0028 00000000 		.4byte	.LFB39
 3362 002c 40000000 		.4byte	.LFE39
 3363 0030 00000000 		.4byte	.LFB40
 3364 0034 34000000 		.4byte	.LFE40
 3365 0038 00000000 		.4byte	.LFB41
 3366 003c 8C000000 		.4byte	.LFE41
 3367 0040 00000000 		.4byte	.LFB42
 3368 0044 14000000 		.4byte	.LFE42
 3369 0048 00000000 		.4byte	.LFB43
 3370 004c 40000000 		.4byte	.LFE43
 3371 0050 00000000 		.4byte	.LFB44
ARM GAS  C:\Users\essele\AppData\Local\Temp\cclqzyvT.s 			page 69


 3372 0054 4C000000 		.4byte	.LFE44
 3373 0058 00000000 		.4byte	.LFB45
 3374 005c 88000000 		.4byte	.LFE45
 3375 0060 00000000 		.4byte	.LFB46
 3376 0064 90000000 		.4byte	.LFE46
 3377 0068 00000000 		.4byte	.LFB47
 3378 006c 22000000 		.4byte	.LFE47
 3379 0070 00000000 		.4byte	.LFB48
 3380 0074 24000000 		.4byte	.LFE48
 3381 0078 00000000 		.4byte	.LFB49
 3382 007c 24000000 		.4byte	.LFE49
 3383 0080 00000000 		.4byte	.LFB50
 3384 0084 10000000 		.4byte	.LFE50
 3385 0088 00000000 		.4byte	.LFB51
 3386 008c 10000000 		.4byte	.LFE51
 3387 0090 00000000 		.4byte	.LFB52
 3388 0094 26000000 		.4byte	.LFE52
 3389 0098 00000000 		.4byte	.LFB53
 3390 009c 26000000 		.4byte	.LFE53
 3391 00a0 00000000 		.4byte	.LFB54
 3392 00a4 2C000000 		.4byte	.LFE54
 3393 00a8 00000000 		.4byte	.LFB55
 3394 00ac 88000000 		.4byte	.LFE55
 3395 00b0 00000000 		.4byte	.LFB56
 3396 00b4 90000000 		.4byte	.LFE56
 3397 00b8 00000000 		.4byte	.LFB57
 3398 00bc 12000000 		.4byte	.LFE57
 3399 00c0 00000000 		.4byte	.LFB58
 3400 00c4 6C000000 		.4byte	.LFE58
 3401 00c8 00000000 		.4byte	.LFB59
 3402 00cc 60000000 		.4byte	.LFE59
 3403 00d0 00000000 		.4byte	.LFB60
 3404 00d4 BC000000 		.4byte	.LFE60
 3405 00d8 00000000 		.4byte	.LFB61
 3406 00dc 62000000 		.4byte	.LFE61
 3407 00e0 00000000 		.4byte	0
 3408 00e4 00000000 		.4byte	0
 3409              		.section	.debug_line,"",%progbits
 3410              	.Ldebug_line0:
 3411 0000 46040000 		.section	.debug_str,"MS",%progbits,1
 3411      02004C01 
 3411      00000201 
 3411      FB0E0D00 
 3411      01010101 
 3412              	.LASF73:
 3413 0000 74616C6B 		.ascii	"talking\000"
 3413      696E6700 
 3414              	.LASF31:
 3415 0008 67706962 		.ascii	"gpib_line\000"
 3415      5F6C696E 
 3415      6500
 3416              	.LASF23:
 3417 0012 76657273 		.ascii	"version\000"
 3417      696F6E00 
 3418              	.LASF58:
 3419 001a 67706962 		.ascii	"gpib_address_listener\000"
 3419      5F616464 
ARM GAS  C:\Users\essele\AppData\Local\Temp\cclqzyvT.s 			page 70


 3419      72657373 
 3419      5F6C6973 
 3419      74656E65 
 3420              	.LASF41:
 3421 0030 67706962 		.ascii	"gpib_get_buffer\000"
 3421      5F676574 
 3421      5F627566 
 3421      66657200 
 3422              	.LASF24:
 3423 0040 61646472 		.ascii	"address\000"
 3423      65737300 
 3424              	.LASF70:
 3425 0048 67706962 		.ascii	"gpib_buffer\000"
 3425      5F627566 
 3425      66657200 
 3426              	.LASF2:
 3427 0054 73686F72 		.ascii	"short int\000"
 3427      7420696E 
 3427      7400
 3428              	.LASF21:
 3429 005e 73697A65 		.ascii	"sizetype\000"
 3429      74797065 
 3429      00
 3430              	.LASF65:
 3431 0067 756E7469 		.ascii	"until\000"
 3431      6C00
 3432              	.LASF77:
 3433 006d 5C5C4D61 		.ascii	"\\\\Mac\\Home\\Documents\\dev\\yaugi\\GPIB USB Adap"
 3433      635C486F 
 3433      6D655C44 
 3433      6F63756D 
 3433      656E7473 
 3434 0099 7465725C 		.ascii	"ter\\GPIB USB 1.cydsn\000"
 3434      47504942 
 3434      20555342 
 3434      20312E63 
 3434      7964736E 
 3435              	.LASF50:
 3436 00ae 67706962 		.ascii	"gpib_interface_clear\000"
 3436      5F696E74 
 3436      65726661 
 3436      63655F63 
 3436      6C656172 
 3437              	.LASF33:
 3438 00c3 67706962 		.ascii	"gpib_settle\000"
 3438      5F736574 
 3438      746C6500 
 3439              	.LASF4:
 3440 00cf 5F5F7569 		.ascii	"__uint16_t\000"
 3440      6E743136 
 3440      5F7400
 3441              	.LASF40:
 3442 00da 6F6C645F 		.ascii	"old_state\000"
 3442      73746174 
 3442      6500
 3443              	.LASF12:
 3444 00e4 75696E74 		.ascii	"uint8_t\000"
ARM GAS  C:\Users\essele\AppData\Local\Temp\cclqzyvT.s 			page 71


 3444      385F7400 
 3445              	.LASF25:
 3446 00ec 6175746F 		.ascii	"autoread\000"
 3446      72656164 
 3446      00
 3447              	.LASF36:
 3448 00f5 6C696E65 		.ascii	"line\000"
 3448      00
 3449              	.LASF61:
 3450 00fa 67706962 		.ascii	"gpib_send\000"
 3450      5F73656E 
 3450      6400
 3451              	.LASF42:
 3452 0104 67706962 		.ascii	"gpib_get_mode\000"
 3452      5F676574 
 3452      5F6D6F64 
 3452      6500
 3453              	.LASF69:
 3454 0112 73657474 		.ascii	"settings\000"
 3454      696E6773 
 3454      00
 3455              	.LASF9:
 3456 011b 6C6F6E67 		.ascii	"long long int\000"
 3456      206C6F6E 
 3456      6720696E 
 3456      7400
 3457              	.LASF57:
 3458 0129 67706962 		.ascii	"gpib_send_GTL\000"
 3458      5F73656E 
 3458      645F4754 
 3458      4C00
 3459              	.LASF28:
 3460 0137 72656164 		.ascii	"read_tmo_ms\000"
 3460      5F746D6F 
 3460      5F6D7300 
 3461              	.LASF6:
 3462 0143 6C6F6E67 		.ascii	"long int\000"
 3462      20696E74 
 3462      00
 3463              	.LASF76:
 3464 014c 67706962 		.ascii	"gpib.c\000"
 3464      2E6300
 3465              	.LASF51:
 3466 0153 67706962 		.ascii	"gpib_LAD\000"
 3466      5F4C4144 
 3466      00
 3467              	.LASF3:
 3468 015c 5F5F7569 		.ascii	"__uint8_t\000"
 3468      6E74385F 
 3468      7400
 3469              	.LASF67:
 3470 0166 64657374 		.ascii	"dest\000"
 3470      00
 3471              	.LASF59:
 3472 016b 67706962 		.ascii	"gpib_address_talker\000"
 3472      5F616464 
 3472      72657373 
ARM GAS  C:\Users\essele\AppData\Local\Temp\cclqzyvT.s 			page 72


 3472      5F74616C 
 3472      6B657200 
 3473              	.LASF75:
 3474 017f 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 3474      43313120 
 3474      352E342E 
 3474      31203230 
 3474      31363036 
 3475 01b2 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m0 -mthumb -g -O"
 3475      20726576 
 3475      6973696F 
 3475      6E203233 
 3475      37373135 
 3476 01e5 30202D66 		.ascii	"0 -ffunction-sections -ffat-lto-objects\000"
 3476      66756E63 
 3476      74696F6E 
 3476      2D736563 
 3476      74696F6E 
 3477              	.LASF20:
 3478 020d 6C6F6E67 		.ascii	"long double\000"
 3478      20646F75 
 3478      626C6500 
 3479              	.LASF1:
 3480 0219 756E7369 		.ascii	"unsigned char\000"
 3480      676E6564 
 3480      20636861 
 3480      7200
 3481              	.LASF78:
 3482 0227 636C6561 		.ascii	"cleanup\000"
 3482      6E757000 
 3483              	.LASF66:
 3484 022f 67706962 		.ascii	"gpib_read_bytes\000"
 3484      5F726561 
 3484      645F6279 
 3484      74657300 
 3485              	.LASF52:
 3486 023f 67706962 		.ascii	"gpib_TAD\000"
 3486      5F544144 
 3486      00
 3487              	.LASF32:
 3488 0248 67706962 		.ascii	"gpib_init_pins\000"
 3488      5F696E69 
 3488      745F7069 
 3488      6E7300
 3489              	.LASF0:
 3490 0257 7369676E 		.ascii	"signed char\000"
 3490      65642063 
 3490      68617200 
 3491              	.LASF10:
 3492 0263 6C6F6E67 		.ascii	"long long unsigned int\000"
 3492      206C6F6E 
 3492      6720756E 
 3492      7369676E 
 3492      65642069 
 3493              	.LASF14:
 3494 027a 75696E74 		.ascii	"uint32_t\000"
 3494      33325F74 
ARM GAS  C:\Users\essele\AppData\Local\Temp\cclqzyvT.s 			page 73


 3494      00
 3495              	.LASF11:
 3496 0283 756E7369 		.ascii	"unsigned int\000"
 3496      676E6564 
 3496      20696E74 
 3496      00
 3497              	.LASF13:
 3498 0290 75696E74 		.ascii	"uint16_t\000"
 3498      31365F74 
 3498      00
 3499              	.LASF71:
 3500 0299 6D795F61 		.ascii	"my_address\000"
 3500      64647265 
 3500      737300
 3501              	.LASF64:
 3502 02a4 67706962 		.ascii	"gpib_read\000"
 3502      5F726561 
 3502      6400
 3503              	.LASF45:
 3504 02ae 67706962 		.ascii	"gpib_wait_for_line_to_unassert\000"
 3504      5F776169 
 3504      745F666F 
 3504      725F6C69 
 3504      6E655F74 
 3505              	.LASF68:
 3506 02cd 6D61786C 		.ascii	"maxlen\000"
 3506      656E00
 3507              	.LASF48:
 3508 02d4 6C617374 		.ascii	"last\000"
 3508      00
 3509              	.LASF19:
 3510 02d9 72656733 		.ascii	"reg32\000"
 3510      3200
 3511              	.LASF26:
 3512 02df 656F745F 		.ascii	"eot_char\000"
 3512      63686172 
 3512      00
 3513              	.LASF5:
 3514 02e8 73686F72 		.ascii	"short unsigned int\000"
 3514      7420756E 
 3514      7369676E 
 3514      65642069 
 3514      6E7400
 3515              	.LASF27:
 3516 02fb 656F745F 		.ascii	"eot_enable\000"
 3516      656E6162 
 3516      6C6500
 3517              	.LASF49:
 3518 0306 67706962 		.ascii	"gpib_receive_byte\000"
 3518      5F726563 
 3518      65697665 
 3518      5F627974 
 3518      6500
 3519              	.LASF53:
 3520 0318 67706962 		.ascii	"gpib_UNL\000"
 3520      5F554E4C 
 3520      00
ARM GAS  C:\Users\essele\AppData\Local\Temp\cclqzyvT.s 			page 74


 3521              	.LASF18:
 3522 0321 63686172 		.ascii	"char\000"
 3522      00
 3523              	.LASF55:
 3524 0326 67706962 		.ascii	"gpib_send_SDC\000"
 3524      5F73656E 
 3524      645F5344 
 3524      4300
 3525              	.LASF30:
 3526 0334 4E524644 		.ascii	"NRFD\000"
 3526      00
 3527              	.LASF46:
 3528 0339 67706962 		.ascii	"gpib_send_byte\000"
 3528      5F73656E 
 3528      645F6279 
 3528      746500
 3529              	.LASF56:
 3530 0348 67706962 		.ascii	"gpib_send_LLO\000"
 3530      5F73656E 
 3530      645F4C4C 
 3530      4F00
 3531              	.LASF34:
 3532 0356 67706962 		.ascii	"gpib_assert_line\000"
 3532      5F617373 
 3532      6572745F 
 3532      6C696E65 
 3532      00
 3533              	.LASF38:
 3534 0367 5F426F6F 		.ascii	"_Bool\000"
 3534      6C00
 3535              	.LASF74:
 3536 036d 5F677069 		.ascii	"_gpib_mode\000"
 3536      625F6D6F 
 3536      646500
 3537              	.LASF16:
 3538 0378 666C6F61 		.ascii	"float\000"
 3538      7400
 3539              	.LASF72:
 3540 037e 6C697374 		.ascii	"listening\000"
 3540      656E696E 
 3540      6700
 3541              	.LASF15:
 3542 0388 75696E74 		.ascii	"uint32\000"
 3542      333200
 3543              	.LASF8:
 3544 038f 6C6F6E67 		.ascii	"long unsigned int\000"
 3544      20756E73 
 3544      69676E65 
 3544      6420696E 
 3544      7400
 3545              	.LASF17:
 3546 03a1 646F7562 		.ascii	"double\000"
 3546      6C6500
 3547              	.LASF35:
 3548 03a8 67706962 		.ascii	"gpib_unassert_line\000"
 3548      5F756E61 
 3548      73736572 
ARM GAS  C:\Users\essele\AppData\Local\Temp\cclqzyvT.s 			page 75


 3548      745F6C69 
 3548      6E6500
 3549              	.LASF7:
 3550 03bb 5F5F7569 		.ascii	"__uint32_t\000"
 3550      6E743332 
 3550      5F7400
 3551              	.LASF47:
 3552 03c6 62797465 		.ascii	"byte\000"
 3552      00
 3553              	.LASF44:
 3554 03cb 67706962 		.ascii	"gpib_wait_for_line_to_assert\000"
 3554      5F776169 
 3554      745F666F 
 3554      725F6C69 
 3554      6E655F74 
 3555              	.LASF60:
 3556 03e8 67706962 		.ascii	"gpib_talking\000"
 3556      5F74616C 
 3556      6B696E67 
 3556      00
 3557              	.LASF22:
 3558 03f5 7369676E 		.ascii	"signature\000"
 3558      61747572 
 3558      6500
 3559              	.LASF39:
 3560 03ff 67706962 		.ascii	"gpib_poll\000"
 3560      5F706F6C 
 3560      6C00
 3561              	.LASF63:
 3562 0409 67706962 		.ascii	"gpib_send_bytes\000"
 3562      5F73656E 
 3562      645F6279 
 3562      74657300 
 3563              	.LASF62:
 3564 0419 656F6970 		.ascii	"eoipos\000"
 3564      6F7300
 3565              	.LASF43:
 3566 0420 67706962 		.ascii	"gpib_read_line\000"
 3566      5F726561 
 3566      645F6C69 
 3566      6E6500
 3567              	.LASF54:
 3568 042f 67706962 		.ascii	"gpib_UNT\000"
 3568      5F554E54 
 3568      00
 3569              	.LASF37:
 3570 0438 67706962 		.ascii	"gpib_readall\000"
 3570      5F726561 
 3570      64616C6C 
 3570      00
 3571              	.LASF29:
 3572 0445 4E444143 		.ascii	"NDAC\000"
 3572      00
 3573              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
