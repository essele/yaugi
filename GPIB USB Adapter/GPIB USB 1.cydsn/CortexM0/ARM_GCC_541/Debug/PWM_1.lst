ARM GAS  C:\Users\essele\AppData\Local\Temp\cc7wN8Yp.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m0
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 0
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"PWM_1.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.global	PWM_1_initVar
  20              		.bss
  21              		.type	PWM_1_initVar, %object
  22              		.size	PWM_1_initVar, 1
  23              	PWM_1_initVar:
  24 0000 00       		.space	1
  25              		.section	.text.PWM_1_Init,"ax",%progbits
  26              		.align	2
  27              		.global	PWM_1_Init
  28              		.code	16
  29              		.thumb_func
  30              		.type	PWM_1_Init, %function
  31              	PWM_1_Init:
  32              	.LFB1:
  33              		.file 1 "Generated_Source\\PSoC4\\PWM_1.c"
   1:Generated_Source\PSoC4/PWM_1.c **** /*******************************************************************************
   2:Generated_Source\PSoC4/PWM_1.c **** * File Name: PWM_1.c
   3:Generated_Source\PSoC4/PWM_1.c **** * Version 2.10
   4:Generated_Source\PSoC4/PWM_1.c **** *
   5:Generated_Source\PSoC4/PWM_1.c **** * Description:
   6:Generated_Source\PSoC4/PWM_1.c **** *  This file provides the source code to the API for the PWM_1
   7:Generated_Source\PSoC4/PWM_1.c **** *  component
   8:Generated_Source\PSoC4/PWM_1.c **** *
   9:Generated_Source\PSoC4/PWM_1.c **** * Note:
  10:Generated_Source\PSoC4/PWM_1.c **** *  None
  11:Generated_Source\PSoC4/PWM_1.c **** *
  12:Generated_Source\PSoC4/PWM_1.c **** ********************************************************************************
  13:Generated_Source\PSoC4/PWM_1.c **** * Copyright 2013-2015, Cypress Semiconductor Corporation.  All rights reserved.
  14:Generated_Source\PSoC4/PWM_1.c **** * You may use this file only in accordance with the license, terms, conditions,
  15:Generated_Source\PSoC4/PWM_1.c **** * disclaimers, and limitations in the end user license agreement accompanying
  16:Generated_Source\PSoC4/PWM_1.c **** * the software package with which this file was provided.
  17:Generated_Source\PSoC4/PWM_1.c **** *******************************************************************************/
  18:Generated_Source\PSoC4/PWM_1.c **** 
  19:Generated_Source\PSoC4/PWM_1.c **** #include "PWM_1.h"
  20:Generated_Source\PSoC4/PWM_1.c **** 
  21:Generated_Source\PSoC4/PWM_1.c **** uint8 PWM_1_initVar = 0u;
  22:Generated_Source\PSoC4/PWM_1.c **** 
  23:Generated_Source\PSoC4/PWM_1.c **** 
  24:Generated_Source\PSoC4/PWM_1.c **** /*******************************************************************************
ARM GAS  C:\Users\essele\AppData\Local\Temp\cc7wN8Yp.s 			page 2


  25:Generated_Source\PSoC4/PWM_1.c **** * Function Name: PWM_1_Init
  26:Generated_Source\PSoC4/PWM_1.c **** ********************************************************************************
  27:Generated_Source\PSoC4/PWM_1.c **** *
  28:Generated_Source\PSoC4/PWM_1.c **** * Summary:
  29:Generated_Source\PSoC4/PWM_1.c **** *  Initialize/Restore default PWM_1 configuration.
  30:Generated_Source\PSoC4/PWM_1.c **** *
  31:Generated_Source\PSoC4/PWM_1.c **** * Parameters:
  32:Generated_Source\PSoC4/PWM_1.c **** *  None
  33:Generated_Source\PSoC4/PWM_1.c **** *
  34:Generated_Source\PSoC4/PWM_1.c **** * Return:
  35:Generated_Source\PSoC4/PWM_1.c **** *  None
  36:Generated_Source\PSoC4/PWM_1.c **** *
  37:Generated_Source\PSoC4/PWM_1.c **** *******************************************************************************/
  38:Generated_Source\PSoC4/PWM_1.c **** void PWM_1_Init(void)
  39:Generated_Source\PSoC4/PWM_1.c **** {
  34              		.loc 1 39 0
  35              		.cfi_startproc
  36              		@ args = 0, pretend = 0, frame = 0
  37              		@ frame_needed = 1, uses_anonymous_args = 0
  38 0000 80B5     		push	{r7, lr}
  39              		.cfi_def_cfa_offset 8
  40              		.cfi_offset 7, -8
  41              		.cfi_offset 14, -4
  42 0002 00AF     		add	r7, sp, #0
  43              		.cfi_def_cfa_register 7
  40:Generated_Source\PSoC4/PWM_1.c **** 
  41:Generated_Source\PSoC4/PWM_1.c ****     /* Set values from customizer to CTRL */
  42:Generated_Source\PSoC4/PWM_1.c ****     #if (PWM_1__QUAD == PWM_1_CONFIG)
  43:Generated_Source\PSoC4/PWM_1.c ****         PWM_1_CONTROL_REG = PWM_1_CTRL_QUAD_BASE_CONFIG;
  44:Generated_Source\PSoC4/PWM_1.c ****         
  45:Generated_Source\PSoC4/PWM_1.c ****         /* Set values from customizer to CTRL1 */
  46:Generated_Source\PSoC4/PWM_1.c ****         PWM_1_TRIG_CONTROL1_REG  = PWM_1_QUAD_SIGNALS_MODES;
  47:Generated_Source\PSoC4/PWM_1.c **** 
  48:Generated_Source\PSoC4/PWM_1.c ****         /* Set values from customizer to INTR */
  49:Generated_Source\PSoC4/PWM_1.c ****         PWM_1_SetInterruptMode(PWM_1_QUAD_INTERRUPT_MASK);
  50:Generated_Source\PSoC4/PWM_1.c ****         
  51:Generated_Source\PSoC4/PWM_1.c ****          /* Set other values */
  52:Generated_Source\PSoC4/PWM_1.c ****         PWM_1_SetCounterMode(PWM_1_COUNT_DOWN);
  53:Generated_Source\PSoC4/PWM_1.c ****         PWM_1_WritePeriod(PWM_1_QUAD_PERIOD_INIT_VALUE);
  54:Generated_Source\PSoC4/PWM_1.c ****         PWM_1_WriteCounter(PWM_1_QUAD_PERIOD_INIT_VALUE);
  55:Generated_Source\PSoC4/PWM_1.c ****     #endif  /* (PWM_1__QUAD == PWM_1_CONFIG) */
  56:Generated_Source\PSoC4/PWM_1.c **** 
  57:Generated_Source\PSoC4/PWM_1.c ****     #if (PWM_1__TIMER == PWM_1_CONFIG)
  58:Generated_Source\PSoC4/PWM_1.c ****         PWM_1_CONTROL_REG = PWM_1_CTRL_TIMER_BASE_CONFIG;
  59:Generated_Source\PSoC4/PWM_1.c ****         
  60:Generated_Source\PSoC4/PWM_1.c ****         /* Set values from customizer to CTRL1 */
  61:Generated_Source\PSoC4/PWM_1.c ****         PWM_1_TRIG_CONTROL1_REG  = PWM_1_TIMER_SIGNALS_MODES;
  62:Generated_Source\PSoC4/PWM_1.c ****     
  63:Generated_Source\PSoC4/PWM_1.c ****         /* Set values from customizer to INTR */
  64:Generated_Source\PSoC4/PWM_1.c ****         PWM_1_SetInterruptMode(PWM_1_TC_INTERRUPT_MASK);
  65:Generated_Source\PSoC4/PWM_1.c ****         
  66:Generated_Source\PSoC4/PWM_1.c ****         /* Set other values from customizer */
  67:Generated_Source\PSoC4/PWM_1.c ****         PWM_1_WritePeriod(PWM_1_TC_PERIOD_VALUE );
  68:Generated_Source\PSoC4/PWM_1.c **** 
  69:Generated_Source\PSoC4/PWM_1.c ****         #if (PWM_1__COMPARE == PWM_1_TC_COMP_CAP_MODE)
  70:Generated_Source\PSoC4/PWM_1.c ****             PWM_1_WriteCompare(PWM_1_TC_COMPARE_VALUE);
  71:Generated_Source\PSoC4/PWM_1.c **** 
ARM GAS  C:\Users\essele\AppData\Local\Temp\cc7wN8Yp.s 			page 3


  72:Generated_Source\PSoC4/PWM_1.c ****             #if (1u == PWM_1_TC_COMPARE_SWAP)
  73:Generated_Source\PSoC4/PWM_1.c ****                 PWM_1_SetCompareSwap(1u);
  74:Generated_Source\PSoC4/PWM_1.c ****                 PWM_1_WriteCompareBuf(PWM_1_TC_COMPARE_BUF_VALUE);
  75:Generated_Source\PSoC4/PWM_1.c ****             #endif  /* (1u == PWM_1_TC_COMPARE_SWAP) */
  76:Generated_Source\PSoC4/PWM_1.c ****         #endif  /* (PWM_1__COMPARE == PWM_1_TC_COMP_CAP_MODE) */
  77:Generated_Source\PSoC4/PWM_1.c **** 
  78:Generated_Source\PSoC4/PWM_1.c ****         /* Initialize counter value */
  79:Generated_Source\PSoC4/PWM_1.c ****         #if (PWM_1_CY_TCPWM_V2 && PWM_1_TIMER_UPDOWN_CNT_USED && !PWM_1_CY_TCPWM_4000)
  80:Generated_Source\PSoC4/PWM_1.c ****             PWM_1_WriteCounter(1u);
  81:Generated_Source\PSoC4/PWM_1.c ****         #elif(PWM_1__COUNT_DOWN == PWM_1_TC_COUNTER_MODE)
  82:Generated_Source\PSoC4/PWM_1.c ****             PWM_1_WriteCounter(PWM_1_TC_PERIOD_VALUE);
  83:Generated_Source\PSoC4/PWM_1.c ****         #else
  84:Generated_Source\PSoC4/PWM_1.c ****             PWM_1_WriteCounter(0u);
  85:Generated_Source\PSoC4/PWM_1.c ****         #endif /* (PWM_1_CY_TCPWM_V2 && PWM_1_TIMER_UPDOWN_CNT_USED && !PWM_1_CY_TCPWM_4000) */
  86:Generated_Source\PSoC4/PWM_1.c ****     #endif  /* (PWM_1__TIMER == PWM_1_CONFIG) */
  87:Generated_Source\PSoC4/PWM_1.c **** 
  88:Generated_Source\PSoC4/PWM_1.c ****     #if (PWM_1__PWM_SEL == PWM_1_CONFIG)
  89:Generated_Source\PSoC4/PWM_1.c ****         PWM_1_CONTROL_REG = PWM_1_CTRL_PWM_BASE_CONFIG;
  44              		.loc 1 89 0
  45 0004 114B     		ldr	r3, .L2
  46 0006 8022     		movs	r2, #128
  47 0008 D204     		lsls	r2, r2, #19
  48 000a 1A60     		str	r2, [r3]
  90:Generated_Source\PSoC4/PWM_1.c **** 
  91:Generated_Source\PSoC4/PWM_1.c ****         #if (PWM_1__PWM_PR == PWM_1_PWM_MODE)
  92:Generated_Source\PSoC4/PWM_1.c ****             PWM_1_CONTROL_REG |= PWM_1_CTRL_PWM_RUN_MODE;
  93:Generated_Source\PSoC4/PWM_1.c ****             PWM_1_WriteCounter(PWM_1_PWM_PR_INIT_VALUE);
  94:Generated_Source\PSoC4/PWM_1.c ****         #else
  95:Generated_Source\PSoC4/PWM_1.c ****             PWM_1_CONTROL_REG |= PWM_1_CTRL_PWM_ALIGN | PWM_1_CTRL_PWM_KILL_EVENT;
  49              		.loc 1 95 0
  50 000c 0F4B     		ldr	r3, .L2
  51 000e 0F4A     		ldr	r2, .L2
  52 0010 1268     		ldr	r2, [r2]
  53 0012 1A60     		str	r2, [r3]
  96:Generated_Source\PSoC4/PWM_1.c ****             
  97:Generated_Source\PSoC4/PWM_1.c ****             /* Initialize counter value */
  98:Generated_Source\PSoC4/PWM_1.c ****             #if (PWM_1_CY_TCPWM_V2 && PWM_1_PWM_UPDOWN_CNT_USED && !PWM_1_CY_TCPWM_4000)
  99:Generated_Source\PSoC4/PWM_1.c ****                 PWM_1_WriteCounter(1u);
 100:Generated_Source\PSoC4/PWM_1.c ****             #elif (PWM_1__RIGHT == PWM_1_PWM_ALIGN)
 101:Generated_Source\PSoC4/PWM_1.c ****                 PWM_1_WriteCounter(PWM_1_PWM_PERIOD_VALUE);
 102:Generated_Source\PSoC4/PWM_1.c ****             #else 
 103:Generated_Source\PSoC4/PWM_1.c ****                 PWM_1_WriteCounter(0u);
  54              		.loc 1 103 0
  55 0014 0020     		movs	r0, #0
  56 0016 FFF7FEFF 		bl	PWM_1_WriteCounter
 104:Generated_Source\PSoC4/PWM_1.c ****             #endif  /* (PWM_1_CY_TCPWM_V2 && PWM_1_PWM_UPDOWN_CNT_USED && !PWM_1_CY_TCPWM_4000) */
 105:Generated_Source\PSoC4/PWM_1.c ****         #endif  /* (PWM_1__PWM_PR == PWM_1_PWM_MODE) */
 106:Generated_Source\PSoC4/PWM_1.c **** 
 107:Generated_Source\PSoC4/PWM_1.c ****         #if (PWM_1__PWM_DT == PWM_1_PWM_MODE)
 108:Generated_Source\PSoC4/PWM_1.c ****             PWM_1_CONTROL_REG |= PWM_1_CTRL_PWM_DEAD_TIME_CYCLE;
 109:Generated_Source\PSoC4/PWM_1.c ****         #endif  /* (PWM_1__PWM_DT == PWM_1_PWM_MODE) */
 110:Generated_Source\PSoC4/PWM_1.c **** 
 111:Generated_Source\PSoC4/PWM_1.c ****         #if (PWM_1__PWM == PWM_1_PWM_MODE)
 112:Generated_Source\PSoC4/PWM_1.c ****             PWM_1_CONTROL_REG |= PWM_1_CTRL_PWM_PRESCALER;
  57              		.loc 1 112 0
  58 001a 0C4B     		ldr	r3, .L2
  59 001c 0B4A     		ldr	r2, .L2
ARM GAS  C:\Users\essele\AppData\Local\Temp\cc7wN8Yp.s 			page 4


  60 001e 1268     		ldr	r2, [r2]
  61 0020 1A60     		str	r2, [r3]
 113:Generated_Source\PSoC4/PWM_1.c ****         #endif  /* (PWM_1__PWM == PWM_1_PWM_MODE) */
 114:Generated_Source\PSoC4/PWM_1.c **** 
 115:Generated_Source\PSoC4/PWM_1.c ****         /* Set values from customizer to CTRL1 */
 116:Generated_Source\PSoC4/PWM_1.c ****         PWM_1_TRIG_CONTROL1_REG  = PWM_1_PWM_SIGNALS_MODES;
  62              		.loc 1 116 0
  63 0022 0B4B     		ldr	r3, .L2+4
  64 0024 0C22     		movs	r2, #12
  65 0026 1A60     		str	r2, [r3]
 117:Generated_Source\PSoC4/PWM_1.c ****     
 118:Generated_Source\PSoC4/PWM_1.c ****         /* Set values from customizer to INTR */
 119:Generated_Source\PSoC4/PWM_1.c ****         PWM_1_SetInterruptMode(PWM_1_PWM_INTERRUPT_MASK);
  66              		.loc 1 119 0
  67 0028 0120     		movs	r0, #1
  68 002a FFF7FEFF 		bl	PWM_1_SetInterruptMode
 120:Generated_Source\PSoC4/PWM_1.c **** 
 121:Generated_Source\PSoC4/PWM_1.c ****         /* Set values from customizer to CTRL2 */
 122:Generated_Source\PSoC4/PWM_1.c ****         #if (PWM_1__PWM_PR == PWM_1_PWM_MODE)
 123:Generated_Source\PSoC4/PWM_1.c ****             PWM_1_TRIG_CONTROL2_REG =
 124:Generated_Source\PSoC4/PWM_1.c ****                     (PWM_1_CC_MATCH_NO_CHANGE    |
 125:Generated_Source\PSoC4/PWM_1.c ****                     PWM_1_OVERLOW_NO_CHANGE      |
 126:Generated_Source\PSoC4/PWM_1.c ****                     PWM_1_UNDERFLOW_NO_CHANGE);
 127:Generated_Source\PSoC4/PWM_1.c ****         #else
 128:Generated_Source\PSoC4/PWM_1.c ****             #if (PWM_1__LEFT == PWM_1_PWM_ALIGN)
 129:Generated_Source\PSoC4/PWM_1.c ****                 PWM_1_TRIG_CONTROL2_REG = PWM_1_PWM_MODE_LEFT;
  69              		.loc 1 129 0
  70 002e 094B     		ldr	r3, .L2+8
  71 0030 3122     		movs	r2, #49
  72 0032 1A60     		str	r2, [r3]
 130:Generated_Source\PSoC4/PWM_1.c ****             #endif  /* ( PWM_1_PWM_LEFT == PWM_1_PWM_ALIGN) */
 131:Generated_Source\PSoC4/PWM_1.c **** 
 132:Generated_Source\PSoC4/PWM_1.c ****             #if (PWM_1__RIGHT == PWM_1_PWM_ALIGN)
 133:Generated_Source\PSoC4/PWM_1.c ****                 PWM_1_TRIG_CONTROL2_REG = PWM_1_PWM_MODE_RIGHT;
 134:Generated_Source\PSoC4/PWM_1.c ****             #endif  /* ( PWM_1_PWM_RIGHT == PWM_1_PWM_ALIGN) */
 135:Generated_Source\PSoC4/PWM_1.c **** 
 136:Generated_Source\PSoC4/PWM_1.c ****             #if (PWM_1__CENTER == PWM_1_PWM_ALIGN)
 137:Generated_Source\PSoC4/PWM_1.c ****                 PWM_1_TRIG_CONTROL2_REG = PWM_1_PWM_MODE_CENTER;
 138:Generated_Source\PSoC4/PWM_1.c ****             #endif  /* ( PWM_1_PWM_CENTER == PWM_1_PWM_ALIGN) */
 139:Generated_Source\PSoC4/PWM_1.c **** 
 140:Generated_Source\PSoC4/PWM_1.c ****             #if (PWM_1__ASYMMETRIC == PWM_1_PWM_ALIGN)
 141:Generated_Source\PSoC4/PWM_1.c ****                 PWM_1_TRIG_CONTROL2_REG = PWM_1_PWM_MODE_ASYM;
 142:Generated_Source\PSoC4/PWM_1.c ****             #endif  /* (PWM_1__ASYMMETRIC == PWM_1_PWM_ALIGN) */
 143:Generated_Source\PSoC4/PWM_1.c ****         #endif  /* (PWM_1__PWM_PR == PWM_1_PWM_MODE) */
 144:Generated_Source\PSoC4/PWM_1.c **** 
 145:Generated_Source\PSoC4/PWM_1.c ****         /* Set other values from customizer */
 146:Generated_Source\PSoC4/PWM_1.c ****         PWM_1_WritePeriod(PWM_1_PWM_PERIOD_VALUE );
  73              		.loc 1 146 0
  74 0034 084B     		ldr	r3, .L2+12
  75 0036 1800     		movs	r0, r3
  76 0038 FFF7FEFF 		bl	PWM_1_WritePeriod
 147:Generated_Source\PSoC4/PWM_1.c ****         PWM_1_WriteCompare(PWM_1_PWM_COMPARE_VALUE);
  77              		.loc 1 147 0
  78 003c 8023     		movs	r3, #128
  79 003e 1B02     		lsls	r3, r3, #8
  80 0040 1800     		movs	r0, r3
  81 0042 FFF7FEFF 		bl	PWM_1_WriteCompare
ARM GAS  C:\Users\essele\AppData\Local\Temp\cc7wN8Yp.s 			page 5


 148:Generated_Source\PSoC4/PWM_1.c **** 
 149:Generated_Source\PSoC4/PWM_1.c ****         #if (1u == PWM_1_PWM_COMPARE_SWAP)
 150:Generated_Source\PSoC4/PWM_1.c ****             PWM_1_SetCompareSwap(1u);
 151:Generated_Source\PSoC4/PWM_1.c ****             PWM_1_WriteCompareBuf(PWM_1_PWM_COMPARE_BUF_VALUE);
 152:Generated_Source\PSoC4/PWM_1.c ****         #endif  /* (1u == PWM_1_PWM_COMPARE_SWAP) */
 153:Generated_Source\PSoC4/PWM_1.c **** 
 154:Generated_Source\PSoC4/PWM_1.c ****         #if (1u == PWM_1_PWM_PERIOD_SWAP)
 155:Generated_Source\PSoC4/PWM_1.c ****             PWM_1_SetPeriodSwap(1u);
 156:Generated_Source\PSoC4/PWM_1.c ****             PWM_1_WritePeriodBuf(PWM_1_PWM_PERIOD_BUF_VALUE);
 157:Generated_Source\PSoC4/PWM_1.c ****         #endif  /* (1u == PWM_1_PWM_PERIOD_SWAP) */
 158:Generated_Source\PSoC4/PWM_1.c ****     #endif  /* (PWM_1__PWM_SEL == PWM_1_CONFIG) */
 159:Generated_Source\PSoC4/PWM_1.c ****     
 160:Generated_Source\PSoC4/PWM_1.c **** }
  82              		.loc 1 160 0
  83 0046 C046     		nop
  84 0048 BD46     		mov	sp, r7
  85              		@ sp needed
  86 004a 80BD     		pop	{r7, pc}
  87              	.L3:
  88              		.align	2
  89              	.L2:
  90 004c 40012040 		.word	1075839296
  91 0050 64012040 		.word	1075839332
  92 0054 68012040 		.word	1075839336
  93 0058 FFFF0000 		.word	65535
  94              		.cfi_endproc
  95              	.LFE1:
  96              		.size	PWM_1_Init, .-PWM_1_Init
  97              		.section	.text.PWM_1_Enable,"ax",%progbits
  98              		.align	2
  99              		.global	PWM_1_Enable
 100              		.code	16
 101              		.thumb_func
 102              		.type	PWM_1_Enable, %function
 103              	PWM_1_Enable:
 104              	.LFB2:
 161:Generated_Source\PSoC4/PWM_1.c **** 
 162:Generated_Source\PSoC4/PWM_1.c **** 
 163:Generated_Source\PSoC4/PWM_1.c **** /*******************************************************************************
 164:Generated_Source\PSoC4/PWM_1.c **** * Function Name: PWM_1_Enable
 165:Generated_Source\PSoC4/PWM_1.c **** ********************************************************************************
 166:Generated_Source\PSoC4/PWM_1.c **** *
 167:Generated_Source\PSoC4/PWM_1.c **** * Summary:
 168:Generated_Source\PSoC4/PWM_1.c **** *  Enables the PWM_1.
 169:Generated_Source\PSoC4/PWM_1.c **** *
 170:Generated_Source\PSoC4/PWM_1.c **** * Parameters:
 171:Generated_Source\PSoC4/PWM_1.c **** *  None
 172:Generated_Source\PSoC4/PWM_1.c **** *
 173:Generated_Source\PSoC4/PWM_1.c **** * Return:
 174:Generated_Source\PSoC4/PWM_1.c **** *  None
 175:Generated_Source\PSoC4/PWM_1.c **** *
 176:Generated_Source\PSoC4/PWM_1.c **** *******************************************************************************/
 177:Generated_Source\PSoC4/PWM_1.c **** void PWM_1_Enable(void)
 178:Generated_Source\PSoC4/PWM_1.c **** {
 105              		.loc 1 178 0
 106              		.cfi_startproc
 107              		@ args = 0, pretend = 0, frame = 8
ARM GAS  C:\Users\essele\AppData\Local\Temp\cc7wN8Yp.s 			page 6


 108              		@ frame_needed = 1, uses_anonymous_args = 0
 109 0000 90B5     		push	{r4, r7, lr}
 110              		.cfi_def_cfa_offset 12
 111              		.cfi_offset 4, -12
 112              		.cfi_offset 7, -8
 113              		.cfi_offset 14, -4
 114 0002 83B0     		sub	sp, sp, #12
 115              		.cfi_def_cfa_offset 24
 116 0004 00AF     		add	r7, sp, #0
 117              		.cfi_def_cfa_register 7
 179:Generated_Source\PSoC4/PWM_1.c ****     uint8 enableInterrupts;
 180:Generated_Source\PSoC4/PWM_1.c **** 
 181:Generated_Source\PSoC4/PWM_1.c ****     enableInterrupts = CyEnterCriticalSection();
 118              		.loc 1 181 0
 119 0006 FC1D     		adds	r4, r7, #7
 120 0008 FFF7FEFF 		bl	CyEnterCriticalSection
 121 000c 0300     		movs	r3, r0
 122 000e 2370     		strb	r3, [r4]
 182:Generated_Source\PSoC4/PWM_1.c ****     PWM_1_BLOCK_CONTROL_REG |= PWM_1_MASK;
 123              		.loc 1 182 0
 124 0010 094B     		ldr	r3, .L5
 125 0012 094A     		ldr	r2, .L5
 126 0014 1268     		ldr	r2, [r2]
 127 0016 0221     		movs	r1, #2
 128 0018 0A43     		orrs	r2, r1
 129 001a 1A60     		str	r2, [r3]
 183:Generated_Source\PSoC4/PWM_1.c ****     CyExitCriticalSection(enableInterrupts);
 130              		.loc 1 183 0
 131 001c FB1D     		adds	r3, r7, #7
 132 001e 1B78     		ldrb	r3, [r3]
 133 0020 1800     		movs	r0, r3
 134 0022 FFF7FEFF 		bl	CyExitCriticalSection
 184:Generated_Source\PSoC4/PWM_1.c **** 
 185:Generated_Source\PSoC4/PWM_1.c ****     /* Start Timer or PWM if start input is absent */
 186:Generated_Source\PSoC4/PWM_1.c ****     #if (PWM_1__PWM_SEL == PWM_1_CONFIG)
 187:Generated_Source\PSoC4/PWM_1.c ****         #if (0u == PWM_1_PWM_START_SIGNAL_PRESENT)
 188:Generated_Source\PSoC4/PWM_1.c ****             PWM_1_TriggerCommand(PWM_1_MASK, PWM_1_CMD_START);
 135              		.loc 1 188 0
 136 0026 1821     		movs	r1, #24
 137 0028 0220     		movs	r0, #2
 138 002a FFF7FEFF 		bl	PWM_1_TriggerCommand
 189:Generated_Source\PSoC4/PWM_1.c ****         #endif /* (0u == PWM_1_PWM_START_SIGNAL_PRESENT) */
 190:Generated_Source\PSoC4/PWM_1.c ****     #endif /* (PWM_1__PWM_SEL == PWM_1_CONFIG) */
 191:Generated_Source\PSoC4/PWM_1.c **** 
 192:Generated_Source\PSoC4/PWM_1.c ****     #if (PWM_1__TIMER == PWM_1_CONFIG)
 193:Generated_Source\PSoC4/PWM_1.c ****         #if (0u == PWM_1_TC_START_SIGNAL_PRESENT)
 194:Generated_Source\PSoC4/PWM_1.c ****             PWM_1_TriggerCommand(PWM_1_MASK, PWM_1_CMD_START);
 195:Generated_Source\PSoC4/PWM_1.c ****         #endif /* (0u == PWM_1_TC_START_SIGNAL_PRESENT) */
 196:Generated_Source\PSoC4/PWM_1.c ****     #endif /* (PWM_1__TIMER == PWM_1_CONFIG) */
 197:Generated_Source\PSoC4/PWM_1.c ****     
 198:Generated_Source\PSoC4/PWM_1.c ****     #if (PWM_1__QUAD == PWM_1_CONFIG)
 199:Generated_Source\PSoC4/PWM_1.c ****         #if (0u != PWM_1_QUAD_AUTO_START)
 200:Generated_Source\PSoC4/PWM_1.c ****             PWM_1_TriggerCommand(PWM_1_MASK, PWM_1_CMD_RELOAD);
 201:Generated_Source\PSoC4/PWM_1.c ****         #endif /* (0u != PWM_1_QUAD_AUTO_START) */
 202:Generated_Source\PSoC4/PWM_1.c ****     #endif  /* (PWM_1__QUAD == PWM_1_CONFIG) */
 203:Generated_Source\PSoC4/PWM_1.c **** }
 139              		.loc 1 203 0
ARM GAS  C:\Users\essele\AppData\Local\Temp\cc7wN8Yp.s 			page 7


 140 002e C046     		nop
 141 0030 BD46     		mov	sp, r7
 142 0032 03B0     		add	sp, sp, #12
 143              		@ sp needed
 144 0034 90BD     		pop	{r4, r7, pc}
 145              	.L6:
 146 0036 C046     		.align	2
 147              	.L5:
 148 0038 00002040 		.word	1075838976
 149              		.cfi_endproc
 150              	.LFE2:
 151              		.size	PWM_1_Enable, .-PWM_1_Enable
 152              		.section	.text.PWM_1_Start,"ax",%progbits
 153              		.align	2
 154              		.global	PWM_1_Start
 155              		.code	16
 156              		.thumb_func
 157              		.type	PWM_1_Start, %function
 158              	PWM_1_Start:
 159              	.LFB3:
 204:Generated_Source\PSoC4/PWM_1.c **** 
 205:Generated_Source\PSoC4/PWM_1.c **** 
 206:Generated_Source\PSoC4/PWM_1.c **** /*******************************************************************************
 207:Generated_Source\PSoC4/PWM_1.c **** * Function Name: PWM_1_Start
 208:Generated_Source\PSoC4/PWM_1.c **** ********************************************************************************
 209:Generated_Source\PSoC4/PWM_1.c **** *
 210:Generated_Source\PSoC4/PWM_1.c **** * Summary:
 211:Generated_Source\PSoC4/PWM_1.c **** *  Initializes the PWM_1 with default customizer
 212:Generated_Source\PSoC4/PWM_1.c **** *  values when called the first time and enables the PWM_1.
 213:Generated_Source\PSoC4/PWM_1.c **** *  For subsequent calls the configuration is left unchanged and the component is
 214:Generated_Source\PSoC4/PWM_1.c **** *  just enabled.
 215:Generated_Source\PSoC4/PWM_1.c **** *
 216:Generated_Source\PSoC4/PWM_1.c **** * Parameters:
 217:Generated_Source\PSoC4/PWM_1.c **** *  None
 218:Generated_Source\PSoC4/PWM_1.c **** *
 219:Generated_Source\PSoC4/PWM_1.c **** * Return:
 220:Generated_Source\PSoC4/PWM_1.c **** *  None
 221:Generated_Source\PSoC4/PWM_1.c **** *
 222:Generated_Source\PSoC4/PWM_1.c **** * Global variables:
 223:Generated_Source\PSoC4/PWM_1.c **** *  PWM_1_initVar: global variable is used to indicate initial
 224:Generated_Source\PSoC4/PWM_1.c **** *  configuration of this component.  The variable is initialized to zero and set
 225:Generated_Source\PSoC4/PWM_1.c **** *  to 1 the first time PWM_1_Start() is called. This allows
 226:Generated_Source\PSoC4/PWM_1.c **** *  enabling/disabling a component without re-initialization in all subsequent
 227:Generated_Source\PSoC4/PWM_1.c **** *  calls to the PWM_1_Start() routine.
 228:Generated_Source\PSoC4/PWM_1.c **** *
 229:Generated_Source\PSoC4/PWM_1.c **** *******************************************************************************/
 230:Generated_Source\PSoC4/PWM_1.c **** void PWM_1_Start(void)
 231:Generated_Source\PSoC4/PWM_1.c **** {
 160              		.loc 1 231 0
 161              		.cfi_startproc
 162              		@ args = 0, pretend = 0, frame = 0
 163              		@ frame_needed = 1, uses_anonymous_args = 0
 164 0000 80B5     		push	{r7, lr}
 165              		.cfi_def_cfa_offset 8
 166              		.cfi_offset 7, -8
 167              		.cfi_offset 14, -4
 168 0002 00AF     		add	r7, sp, #0
ARM GAS  C:\Users\essele\AppData\Local\Temp\cc7wN8Yp.s 			page 8


 169              		.cfi_def_cfa_register 7
 232:Generated_Source\PSoC4/PWM_1.c ****     if (0u == PWM_1_initVar)
 170              		.loc 1 232 0
 171 0004 064B     		ldr	r3, .L9
 172 0006 1B78     		ldrb	r3, [r3]
 173 0008 002B     		cmp	r3, #0
 174 000a 04D1     		bne	.L8
 233:Generated_Source\PSoC4/PWM_1.c ****     {
 234:Generated_Source\PSoC4/PWM_1.c ****         PWM_1_Init();
 175              		.loc 1 234 0
 176 000c FFF7FEFF 		bl	PWM_1_Init
 235:Generated_Source\PSoC4/PWM_1.c ****         PWM_1_initVar = 1u;
 177              		.loc 1 235 0
 178 0010 034B     		ldr	r3, .L9
 179 0012 0122     		movs	r2, #1
 180 0014 1A70     		strb	r2, [r3]
 181              	.L8:
 236:Generated_Source\PSoC4/PWM_1.c ****     }
 237:Generated_Source\PSoC4/PWM_1.c **** 
 238:Generated_Source\PSoC4/PWM_1.c ****     PWM_1_Enable();
 182              		.loc 1 238 0
 183 0016 FFF7FEFF 		bl	PWM_1_Enable
 239:Generated_Source\PSoC4/PWM_1.c **** }
 184              		.loc 1 239 0
 185 001a C046     		nop
 186 001c BD46     		mov	sp, r7
 187              		@ sp needed
 188 001e 80BD     		pop	{r7, pc}
 189              	.L10:
 190              		.align	2
 191              	.L9:
 192 0020 00000000 		.word	PWM_1_initVar
 193              		.cfi_endproc
 194              	.LFE3:
 195              		.size	PWM_1_Start, .-PWM_1_Start
 196              		.section	.text.PWM_1_Stop,"ax",%progbits
 197              		.align	2
 198              		.global	PWM_1_Stop
 199              		.code	16
 200              		.thumb_func
 201              		.type	PWM_1_Stop, %function
 202              	PWM_1_Stop:
 203              	.LFB4:
 240:Generated_Source\PSoC4/PWM_1.c **** 
 241:Generated_Source\PSoC4/PWM_1.c **** 
 242:Generated_Source\PSoC4/PWM_1.c **** /*******************************************************************************
 243:Generated_Source\PSoC4/PWM_1.c **** * Function Name: PWM_1_Stop
 244:Generated_Source\PSoC4/PWM_1.c **** ********************************************************************************
 245:Generated_Source\PSoC4/PWM_1.c **** *
 246:Generated_Source\PSoC4/PWM_1.c **** * Summary:
 247:Generated_Source\PSoC4/PWM_1.c **** *  Disables the PWM_1.
 248:Generated_Source\PSoC4/PWM_1.c **** *
 249:Generated_Source\PSoC4/PWM_1.c **** * Parameters:
 250:Generated_Source\PSoC4/PWM_1.c **** *  None
 251:Generated_Source\PSoC4/PWM_1.c **** *
 252:Generated_Source\PSoC4/PWM_1.c **** * Return:
 253:Generated_Source\PSoC4/PWM_1.c **** *  None
ARM GAS  C:\Users\essele\AppData\Local\Temp\cc7wN8Yp.s 			page 9


 254:Generated_Source\PSoC4/PWM_1.c **** *
 255:Generated_Source\PSoC4/PWM_1.c **** *******************************************************************************/
 256:Generated_Source\PSoC4/PWM_1.c **** void PWM_1_Stop(void)
 257:Generated_Source\PSoC4/PWM_1.c **** {
 204              		.loc 1 257 0
 205              		.cfi_startproc
 206              		@ args = 0, pretend = 0, frame = 8
 207              		@ frame_needed = 1, uses_anonymous_args = 0
 208 0000 90B5     		push	{r4, r7, lr}
 209              		.cfi_def_cfa_offset 12
 210              		.cfi_offset 4, -12
 211              		.cfi_offset 7, -8
 212              		.cfi_offset 14, -4
 213 0002 83B0     		sub	sp, sp, #12
 214              		.cfi_def_cfa_offset 24
 215 0004 00AF     		add	r7, sp, #0
 216              		.cfi_def_cfa_register 7
 258:Generated_Source\PSoC4/PWM_1.c ****     uint8 enableInterrupts;
 259:Generated_Source\PSoC4/PWM_1.c **** 
 260:Generated_Source\PSoC4/PWM_1.c ****     enableInterrupts = CyEnterCriticalSection();
 217              		.loc 1 260 0
 218 0006 FC1D     		adds	r4, r7, #7
 219 0008 FFF7FEFF 		bl	CyEnterCriticalSection
 220 000c 0300     		movs	r3, r0
 221 000e 2370     		strb	r3, [r4]
 261:Generated_Source\PSoC4/PWM_1.c **** 
 262:Generated_Source\PSoC4/PWM_1.c ****     PWM_1_BLOCK_CONTROL_REG &= (uint32)~PWM_1_MASK;
 222              		.loc 1 262 0
 223 0010 074B     		ldr	r3, .L12
 224 0012 074A     		ldr	r2, .L12
 225 0014 1268     		ldr	r2, [r2]
 226 0016 0221     		movs	r1, #2
 227 0018 8A43     		bics	r2, r1
 228 001a 1A60     		str	r2, [r3]
 263:Generated_Source\PSoC4/PWM_1.c **** 
 264:Generated_Source\PSoC4/PWM_1.c ****     CyExitCriticalSection(enableInterrupts);
 229              		.loc 1 264 0
 230 001c FB1D     		adds	r3, r7, #7
 231 001e 1B78     		ldrb	r3, [r3]
 232 0020 1800     		movs	r0, r3
 233 0022 FFF7FEFF 		bl	CyExitCriticalSection
 265:Generated_Source\PSoC4/PWM_1.c **** }
 234              		.loc 1 265 0
 235 0026 C046     		nop
 236 0028 BD46     		mov	sp, r7
 237 002a 03B0     		add	sp, sp, #12
 238              		@ sp needed
 239 002c 90BD     		pop	{r4, r7, pc}
 240              	.L13:
 241 002e C046     		.align	2
 242              	.L12:
 243 0030 00002040 		.word	1075838976
 244              		.cfi_endproc
 245              	.LFE4:
 246              		.size	PWM_1_Stop, .-PWM_1_Stop
 247              		.section	.text.PWM_1_SetMode,"ax",%progbits
 248              		.align	2
ARM GAS  C:\Users\essele\AppData\Local\Temp\cc7wN8Yp.s 			page 10


 249              		.global	PWM_1_SetMode
 250              		.code	16
 251              		.thumb_func
 252              		.type	PWM_1_SetMode, %function
 253              	PWM_1_SetMode:
 254              	.LFB5:
 266:Generated_Source\PSoC4/PWM_1.c **** 
 267:Generated_Source\PSoC4/PWM_1.c **** 
 268:Generated_Source\PSoC4/PWM_1.c **** /*******************************************************************************
 269:Generated_Source\PSoC4/PWM_1.c **** * Function Name: PWM_1_SetMode
 270:Generated_Source\PSoC4/PWM_1.c **** ********************************************************************************
 271:Generated_Source\PSoC4/PWM_1.c **** *
 272:Generated_Source\PSoC4/PWM_1.c **** * Summary:
 273:Generated_Source\PSoC4/PWM_1.c **** *  Sets the operation mode of the PWM_1. This function is used when
 274:Generated_Source\PSoC4/PWM_1.c **** *  configured as a generic PWM_1 and the actual mode of operation is
 275:Generated_Source\PSoC4/PWM_1.c **** *  set at runtime. The mode must be set while the component is disabled.
 276:Generated_Source\PSoC4/PWM_1.c **** *
 277:Generated_Source\PSoC4/PWM_1.c **** * Parameters:
 278:Generated_Source\PSoC4/PWM_1.c **** *  mode: Mode for the PWM_1 to operate in
 279:Generated_Source\PSoC4/PWM_1.c **** *   Values:
 280:Generated_Source\PSoC4/PWM_1.c **** *   - PWM_1_MODE_TIMER_COMPARE - Timer / Counter with
 281:Generated_Source\PSoC4/PWM_1.c **** *                                                 compare capability
 282:Generated_Source\PSoC4/PWM_1.c **** *         - PWM_1_MODE_TIMER_CAPTURE - Timer / Counter with
 283:Generated_Source\PSoC4/PWM_1.c **** *                                                 capture capability
 284:Generated_Source\PSoC4/PWM_1.c **** *         - PWM_1_MODE_QUAD - Quadrature decoder
 285:Generated_Source\PSoC4/PWM_1.c **** *         - PWM_1_MODE_PWM - PWM
 286:Generated_Source\PSoC4/PWM_1.c **** *         - PWM_1_MODE_PWM_DT - PWM with dead time
 287:Generated_Source\PSoC4/PWM_1.c **** *         - PWM_1_MODE_PWM_PR - PWM with pseudo random capability
 288:Generated_Source\PSoC4/PWM_1.c **** *
 289:Generated_Source\PSoC4/PWM_1.c **** * Return:
 290:Generated_Source\PSoC4/PWM_1.c **** *  None
 291:Generated_Source\PSoC4/PWM_1.c **** *
 292:Generated_Source\PSoC4/PWM_1.c **** *******************************************************************************/
 293:Generated_Source\PSoC4/PWM_1.c **** void PWM_1_SetMode(uint32 mode)
 294:Generated_Source\PSoC4/PWM_1.c **** {
 255              		.loc 1 294 0
 256              		.cfi_startproc
 257              		@ args = 0, pretend = 0, frame = 16
 258              		@ frame_needed = 1, uses_anonymous_args = 0
 259 0000 90B5     		push	{r4, r7, lr}
 260              		.cfi_def_cfa_offset 12
 261              		.cfi_offset 4, -12
 262              		.cfi_offset 7, -8
 263              		.cfi_offset 14, -4
 264 0002 85B0     		sub	sp, sp, #20
 265              		.cfi_def_cfa_offset 32
 266 0004 00AF     		add	r7, sp, #0
 267              		.cfi_def_cfa_register 7
 268 0006 7860     		str	r0, [r7, #4]
 295:Generated_Source\PSoC4/PWM_1.c ****     uint8 enableInterrupts;
 296:Generated_Source\PSoC4/PWM_1.c **** 
 297:Generated_Source\PSoC4/PWM_1.c ****     enableInterrupts = CyEnterCriticalSection();
 269              		.loc 1 297 0
 270 0008 0F23     		movs	r3, #15
 271 000a FC18     		adds	r4, r7, r3
 272 000c FFF7FEFF 		bl	CyEnterCriticalSection
 273 0010 0300     		movs	r3, r0
ARM GAS  C:\Users\essele\AppData\Local\Temp\cc7wN8Yp.s 			page 11


 274 0012 2370     		strb	r3, [r4]
 298:Generated_Source\PSoC4/PWM_1.c **** 
 299:Generated_Source\PSoC4/PWM_1.c ****     PWM_1_CONTROL_REG &= (uint32)~PWM_1_MODE_MASK;
 275              		.loc 1 299 0
 276 0014 0A4B     		ldr	r3, .L15
 277 0016 0A4A     		ldr	r2, .L15
 278 0018 1268     		ldr	r2, [r2]
 279 001a 0A49     		ldr	r1, .L15+4
 280 001c 0A40     		ands	r2, r1
 281 001e 1A60     		str	r2, [r3]
 300:Generated_Source\PSoC4/PWM_1.c ****     PWM_1_CONTROL_REG |= mode;
 282              		.loc 1 300 0
 283 0020 074B     		ldr	r3, .L15
 284 0022 074A     		ldr	r2, .L15
 285 0024 1168     		ldr	r1, [r2]
 286 0026 7A68     		ldr	r2, [r7, #4]
 287 0028 0A43     		orrs	r2, r1
 288 002a 1A60     		str	r2, [r3]
 301:Generated_Source\PSoC4/PWM_1.c **** 
 302:Generated_Source\PSoC4/PWM_1.c ****     CyExitCriticalSection(enableInterrupts);
 289              		.loc 1 302 0
 290 002c 0F23     		movs	r3, #15
 291 002e FB18     		adds	r3, r7, r3
 292 0030 1B78     		ldrb	r3, [r3]
 293 0032 1800     		movs	r0, r3
 294 0034 FFF7FEFF 		bl	CyExitCriticalSection
 303:Generated_Source\PSoC4/PWM_1.c **** }
 295              		.loc 1 303 0
 296 0038 C046     		nop
 297 003a BD46     		mov	sp, r7
 298 003c 05B0     		add	sp, sp, #20
 299              		@ sp needed
 300 003e 90BD     		pop	{r4, r7, pc}
 301              	.L16:
 302              		.align	2
 303              	.L15:
 304 0040 40012040 		.word	1075839296
 305 0044 FFFFFFF8 		.word	-117440513
 306              		.cfi_endproc
 307              	.LFE5:
 308              		.size	PWM_1_SetMode, .-PWM_1_SetMode
 309              		.section	.text.PWM_1_SetQDMode,"ax",%progbits
 310              		.align	2
 311              		.global	PWM_1_SetQDMode
 312              		.code	16
 313              		.thumb_func
 314              		.type	PWM_1_SetQDMode, %function
 315              	PWM_1_SetQDMode:
 316              	.LFB6:
 304:Generated_Source\PSoC4/PWM_1.c **** 
 305:Generated_Source\PSoC4/PWM_1.c **** 
 306:Generated_Source\PSoC4/PWM_1.c **** /*******************************************************************************
 307:Generated_Source\PSoC4/PWM_1.c **** * Function Name: PWM_1_SetQDMode
 308:Generated_Source\PSoC4/PWM_1.c **** ********************************************************************************
 309:Generated_Source\PSoC4/PWM_1.c **** *
 310:Generated_Source\PSoC4/PWM_1.c **** * Summary:
 311:Generated_Source\PSoC4/PWM_1.c **** *  Sets the the Quadrature Decoder to one of the 3 supported modes.
ARM GAS  C:\Users\essele\AppData\Local\Temp\cc7wN8Yp.s 			page 12


 312:Generated_Source\PSoC4/PWM_1.c **** *  Its functionality is only applicable to Quadrature Decoder operation.
 313:Generated_Source\PSoC4/PWM_1.c **** *
 314:Generated_Source\PSoC4/PWM_1.c **** * Parameters:
 315:Generated_Source\PSoC4/PWM_1.c **** *  qdMode: Quadrature Decoder mode
 316:Generated_Source\PSoC4/PWM_1.c **** *   Values:
 317:Generated_Source\PSoC4/PWM_1.c **** *         - PWM_1_MODE_X1 - Counts on phi 1 rising
 318:Generated_Source\PSoC4/PWM_1.c **** *         - PWM_1_MODE_X2 - Counts on both edges of phi1 (2x faster)
 319:Generated_Source\PSoC4/PWM_1.c **** *         - PWM_1_MODE_X4 - Counts on both edges of phi1 and phi2
 320:Generated_Source\PSoC4/PWM_1.c **** *                                        (4x faster)
 321:Generated_Source\PSoC4/PWM_1.c **** *
 322:Generated_Source\PSoC4/PWM_1.c **** * Return:
 323:Generated_Source\PSoC4/PWM_1.c **** *  None
 324:Generated_Source\PSoC4/PWM_1.c **** *
 325:Generated_Source\PSoC4/PWM_1.c **** *******************************************************************************/
 326:Generated_Source\PSoC4/PWM_1.c **** void PWM_1_SetQDMode(uint32 qdMode)
 327:Generated_Source\PSoC4/PWM_1.c **** {
 317              		.loc 1 327 0
 318              		.cfi_startproc
 319              		@ args = 0, pretend = 0, frame = 16
 320              		@ frame_needed = 1, uses_anonymous_args = 0
 321 0000 90B5     		push	{r4, r7, lr}
 322              		.cfi_def_cfa_offset 12
 323              		.cfi_offset 4, -12
 324              		.cfi_offset 7, -8
 325              		.cfi_offset 14, -4
 326 0002 85B0     		sub	sp, sp, #20
 327              		.cfi_def_cfa_offset 32
 328 0004 00AF     		add	r7, sp, #0
 329              		.cfi_def_cfa_register 7
 330 0006 7860     		str	r0, [r7, #4]
 328:Generated_Source\PSoC4/PWM_1.c ****     uint8 enableInterrupts;
 329:Generated_Source\PSoC4/PWM_1.c **** 
 330:Generated_Source\PSoC4/PWM_1.c ****     enableInterrupts = CyEnterCriticalSection();
 331              		.loc 1 330 0
 332 0008 0F23     		movs	r3, #15
 333 000a FC18     		adds	r4, r7, r3
 334 000c FFF7FEFF 		bl	CyEnterCriticalSection
 335 0010 0300     		movs	r3, r0
 336 0012 2370     		strb	r3, [r4]
 331:Generated_Source\PSoC4/PWM_1.c **** 
 332:Generated_Source\PSoC4/PWM_1.c ****     PWM_1_CONTROL_REG &= (uint32)~PWM_1_QUAD_MODE_MASK;
 337              		.loc 1 332 0
 338 0014 0A4B     		ldr	r3, .L18
 339 0016 0A4A     		ldr	r2, .L18
 340 0018 1268     		ldr	r2, [r2]
 341 001a 0A49     		ldr	r1, .L18+4
 342 001c 0A40     		ands	r2, r1
 343 001e 1A60     		str	r2, [r3]
 333:Generated_Source\PSoC4/PWM_1.c ****     PWM_1_CONTROL_REG |= qdMode;
 344              		.loc 1 333 0
 345 0020 074B     		ldr	r3, .L18
 346 0022 074A     		ldr	r2, .L18
 347 0024 1168     		ldr	r1, [r2]
 348 0026 7A68     		ldr	r2, [r7, #4]
 349 0028 0A43     		orrs	r2, r1
 350 002a 1A60     		str	r2, [r3]
 334:Generated_Source\PSoC4/PWM_1.c **** 
ARM GAS  C:\Users\essele\AppData\Local\Temp\cc7wN8Yp.s 			page 13


 335:Generated_Source\PSoC4/PWM_1.c ****     CyExitCriticalSection(enableInterrupts);
 351              		.loc 1 335 0
 352 002c 0F23     		movs	r3, #15
 353 002e FB18     		adds	r3, r7, r3
 354 0030 1B78     		ldrb	r3, [r3]
 355 0032 1800     		movs	r0, r3
 356 0034 FFF7FEFF 		bl	CyExitCriticalSection
 336:Generated_Source\PSoC4/PWM_1.c **** }
 357              		.loc 1 336 0
 358 0038 C046     		nop
 359 003a BD46     		mov	sp, r7
 360 003c 05B0     		add	sp, sp, #20
 361              		@ sp needed
 362 003e 90BD     		pop	{r4, r7, pc}
 363              	.L19:
 364              		.align	2
 365              	.L18:
 366 0040 40012040 		.word	1075839296
 367 0044 FFFF8FFF 		.word	-7340033
 368              		.cfi_endproc
 369              	.LFE6:
 370              		.size	PWM_1_SetQDMode, .-PWM_1_SetQDMode
 371              		.section	.text.PWM_1_SetPrescaler,"ax",%progbits
 372              		.align	2
 373              		.global	PWM_1_SetPrescaler
 374              		.code	16
 375              		.thumb_func
 376              		.type	PWM_1_SetPrescaler, %function
 377              	PWM_1_SetPrescaler:
 378              	.LFB7:
 337:Generated_Source\PSoC4/PWM_1.c **** 
 338:Generated_Source\PSoC4/PWM_1.c **** 
 339:Generated_Source\PSoC4/PWM_1.c **** /*******************************************************************************
 340:Generated_Source\PSoC4/PWM_1.c **** * Function Name: PWM_1_SetPrescaler
 341:Generated_Source\PSoC4/PWM_1.c **** ********************************************************************************
 342:Generated_Source\PSoC4/PWM_1.c **** *
 343:Generated_Source\PSoC4/PWM_1.c **** * Summary:
 344:Generated_Source\PSoC4/PWM_1.c **** *  Sets the prescaler value that is applied to the clock input.  Not applicable
 345:Generated_Source\PSoC4/PWM_1.c **** *  to a PWM with the dead time mode or Quadrature Decoder mode.
 346:Generated_Source\PSoC4/PWM_1.c **** *
 347:Generated_Source\PSoC4/PWM_1.c **** * Parameters:
 348:Generated_Source\PSoC4/PWM_1.c **** *  prescaler: Prescaler divider value
 349:Generated_Source\PSoC4/PWM_1.c **** *   Values:
 350:Generated_Source\PSoC4/PWM_1.c **** *         - PWM_1_PRESCALE_DIVBY1    - Divide by 1 (no prescaling)
 351:Generated_Source\PSoC4/PWM_1.c **** *         - PWM_1_PRESCALE_DIVBY2    - Divide by 2
 352:Generated_Source\PSoC4/PWM_1.c **** *         - PWM_1_PRESCALE_DIVBY4    - Divide by 4
 353:Generated_Source\PSoC4/PWM_1.c **** *         - PWM_1_PRESCALE_DIVBY8    - Divide by 8
 354:Generated_Source\PSoC4/PWM_1.c **** *         - PWM_1_PRESCALE_DIVBY16   - Divide by 16
 355:Generated_Source\PSoC4/PWM_1.c **** *         - PWM_1_PRESCALE_DIVBY32   - Divide by 32
 356:Generated_Source\PSoC4/PWM_1.c **** *         - PWM_1_PRESCALE_DIVBY64   - Divide by 64
 357:Generated_Source\PSoC4/PWM_1.c **** *         - PWM_1_PRESCALE_DIVBY128  - Divide by 128
 358:Generated_Source\PSoC4/PWM_1.c **** *
 359:Generated_Source\PSoC4/PWM_1.c **** * Return:
 360:Generated_Source\PSoC4/PWM_1.c **** *  None
 361:Generated_Source\PSoC4/PWM_1.c **** *
 362:Generated_Source\PSoC4/PWM_1.c **** *******************************************************************************/
 363:Generated_Source\PSoC4/PWM_1.c **** void PWM_1_SetPrescaler(uint32 prescaler)
ARM GAS  C:\Users\essele\AppData\Local\Temp\cc7wN8Yp.s 			page 14


 364:Generated_Source\PSoC4/PWM_1.c **** {
 379              		.loc 1 364 0
 380              		.cfi_startproc
 381              		@ args = 0, pretend = 0, frame = 16
 382              		@ frame_needed = 1, uses_anonymous_args = 0
 383 0000 90B5     		push	{r4, r7, lr}
 384              		.cfi_def_cfa_offset 12
 385              		.cfi_offset 4, -12
 386              		.cfi_offset 7, -8
 387              		.cfi_offset 14, -4
 388 0002 85B0     		sub	sp, sp, #20
 389              		.cfi_def_cfa_offset 32
 390 0004 00AF     		add	r7, sp, #0
 391              		.cfi_def_cfa_register 7
 392 0006 7860     		str	r0, [r7, #4]
 365:Generated_Source\PSoC4/PWM_1.c ****     uint8 enableInterrupts;
 366:Generated_Source\PSoC4/PWM_1.c **** 
 367:Generated_Source\PSoC4/PWM_1.c ****     enableInterrupts = CyEnterCriticalSection();
 393              		.loc 1 367 0
 394 0008 0F23     		movs	r3, #15
 395 000a FC18     		adds	r4, r7, r3
 396 000c FFF7FEFF 		bl	CyEnterCriticalSection
 397 0010 0300     		movs	r3, r0
 398 0012 2370     		strb	r3, [r4]
 368:Generated_Source\PSoC4/PWM_1.c **** 
 369:Generated_Source\PSoC4/PWM_1.c ****     PWM_1_CONTROL_REG &= (uint32)~PWM_1_PRESCALER_MASK;
 399              		.loc 1 369 0
 400 0014 0A4B     		ldr	r3, .L21
 401 0016 0A4A     		ldr	r2, .L21
 402 0018 1268     		ldr	r2, [r2]
 403 001a 0A49     		ldr	r1, .L21+4
 404 001c 0A40     		ands	r2, r1
 405 001e 1A60     		str	r2, [r3]
 370:Generated_Source\PSoC4/PWM_1.c ****     PWM_1_CONTROL_REG |= prescaler;
 406              		.loc 1 370 0
 407 0020 074B     		ldr	r3, .L21
 408 0022 074A     		ldr	r2, .L21
 409 0024 1168     		ldr	r1, [r2]
 410 0026 7A68     		ldr	r2, [r7, #4]
 411 0028 0A43     		orrs	r2, r1
 412 002a 1A60     		str	r2, [r3]
 371:Generated_Source\PSoC4/PWM_1.c **** 
 372:Generated_Source\PSoC4/PWM_1.c ****     CyExitCriticalSection(enableInterrupts);
 413              		.loc 1 372 0
 414 002c 0F23     		movs	r3, #15
 415 002e FB18     		adds	r3, r7, r3
 416 0030 1B78     		ldrb	r3, [r3]
 417 0032 1800     		movs	r0, r3
 418 0034 FFF7FEFF 		bl	CyExitCriticalSection
 373:Generated_Source\PSoC4/PWM_1.c **** }
 419              		.loc 1 373 0
 420 0038 C046     		nop
 421 003a BD46     		mov	sp, r7
 422 003c 05B0     		add	sp, sp, #20
 423              		@ sp needed
 424 003e 90BD     		pop	{r4, r7, pc}
 425              	.L22:
ARM GAS  C:\Users\essele\AppData\Local\Temp\cc7wN8Yp.s 			page 15


 426              		.align	2
 427              	.L21:
 428 0040 40012040 		.word	1075839296
 429 0044 FF00FFFF 		.word	-65281
 430              		.cfi_endproc
 431              	.LFE7:
 432              		.size	PWM_1_SetPrescaler, .-PWM_1_SetPrescaler
 433              		.section	.text.PWM_1_SetOneShot,"ax",%progbits
 434              		.align	2
 435              		.global	PWM_1_SetOneShot
 436              		.code	16
 437              		.thumb_func
 438              		.type	PWM_1_SetOneShot, %function
 439              	PWM_1_SetOneShot:
 440              	.LFB8:
 374:Generated_Source\PSoC4/PWM_1.c **** 
 375:Generated_Source\PSoC4/PWM_1.c **** 
 376:Generated_Source\PSoC4/PWM_1.c **** /*******************************************************************************
 377:Generated_Source\PSoC4/PWM_1.c **** * Function Name: PWM_1_SetOneShot
 378:Generated_Source\PSoC4/PWM_1.c **** ********************************************************************************
 379:Generated_Source\PSoC4/PWM_1.c **** *
 380:Generated_Source\PSoC4/PWM_1.c **** * Summary:
 381:Generated_Source\PSoC4/PWM_1.c **** *  Writes the register that controls whether the PWM_1 runs
 382:Generated_Source\PSoC4/PWM_1.c **** *  continuously or stops when terminal count is reached.  By default the
 383:Generated_Source\PSoC4/PWM_1.c **** *  PWM_1 operates in the continuous mode.
 384:Generated_Source\PSoC4/PWM_1.c **** *
 385:Generated_Source\PSoC4/PWM_1.c **** * Parameters:
 386:Generated_Source\PSoC4/PWM_1.c **** *  oneShotEnable
 387:Generated_Source\PSoC4/PWM_1.c **** *   Values:
 388:Generated_Source\PSoC4/PWM_1.c **** *     - 0 - Continuous
 389:Generated_Source\PSoC4/PWM_1.c **** *     - 1 - Enable One Shot
 390:Generated_Source\PSoC4/PWM_1.c **** *
 391:Generated_Source\PSoC4/PWM_1.c **** * Return:
 392:Generated_Source\PSoC4/PWM_1.c **** *  None
 393:Generated_Source\PSoC4/PWM_1.c **** *
 394:Generated_Source\PSoC4/PWM_1.c **** *******************************************************************************/
 395:Generated_Source\PSoC4/PWM_1.c **** void PWM_1_SetOneShot(uint32 oneShotEnable)
 396:Generated_Source\PSoC4/PWM_1.c **** {
 441              		.loc 1 396 0
 442              		.cfi_startproc
 443              		@ args = 0, pretend = 0, frame = 16
 444              		@ frame_needed = 1, uses_anonymous_args = 0
 445 0000 90B5     		push	{r4, r7, lr}
 446              		.cfi_def_cfa_offset 12
 447              		.cfi_offset 4, -12
 448              		.cfi_offset 7, -8
 449              		.cfi_offset 14, -4
 450 0002 85B0     		sub	sp, sp, #20
 451              		.cfi_def_cfa_offset 32
 452 0004 00AF     		add	r7, sp, #0
 453              		.cfi_def_cfa_register 7
 454 0006 7860     		str	r0, [r7, #4]
 397:Generated_Source\PSoC4/PWM_1.c ****     uint8 enableInterrupts;
 398:Generated_Source\PSoC4/PWM_1.c **** 
 399:Generated_Source\PSoC4/PWM_1.c ****     enableInterrupts = CyEnterCriticalSection();
 455              		.loc 1 399 0
 456 0008 0F23     		movs	r3, #15
ARM GAS  C:\Users\essele\AppData\Local\Temp\cc7wN8Yp.s 			page 16


 457 000a FC18     		adds	r4, r7, r3
 458 000c FFF7FEFF 		bl	CyEnterCriticalSection
 459 0010 0300     		movs	r3, r0
 460 0012 2370     		strb	r3, [r4]
 400:Generated_Source\PSoC4/PWM_1.c **** 
 401:Generated_Source\PSoC4/PWM_1.c ****     PWM_1_CONTROL_REG &= (uint32)~PWM_1_ONESHOT_MASK;
 461              		.loc 1 401 0
 462 0014 0C4B     		ldr	r3, .L24
 463 0016 0C4A     		ldr	r2, .L24
 464 0018 1268     		ldr	r2, [r2]
 465 001a 0C49     		ldr	r1, .L24+4
 466 001c 0A40     		ands	r2, r1
 467 001e 1A60     		str	r2, [r3]
 402:Generated_Source\PSoC4/PWM_1.c ****     PWM_1_CONTROL_REG |= ((uint32)((oneShotEnable & PWM_1_1BIT_MASK) <<
 468              		.loc 1 402 0
 469 0020 094B     		ldr	r3, .L24
 470 0022 094A     		ldr	r2, .L24
 471 0024 1168     		ldr	r1, [r2]
 472 0026 7A68     		ldr	r2, [r7, #4]
 473 0028 9004     		lsls	r0, r2, #18
 474 002a 8022     		movs	r2, #128
 475 002c D202     		lsls	r2, r2, #11
 476 002e 0240     		ands	r2, r0
 477 0030 0A43     		orrs	r2, r1
 478 0032 1A60     		str	r2, [r3]
 403:Generated_Source\PSoC4/PWM_1.c ****                                                                PWM_1_ONESHOT_SHIFT));
 404:Generated_Source\PSoC4/PWM_1.c **** 
 405:Generated_Source\PSoC4/PWM_1.c ****     CyExitCriticalSection(enableInterrupts);
 479              		.loc 1 405 0
 480 0034 0F23     		movs	r3, #15
 481 0036 FB18     		adds	r3, r7, r3
 482 0038 1B78     		ldrb	r3, [r3]
 483 003a 1800     		movs	r0, r3
 484 003c FFF7FEFF 		bl	CyExitCriticalSection
 406:Generated_Source\PSoC4/PWM_1.c **** }
 485              		.loc 1 406 0
 486 0040 C046     		nop
 487 0042 BD46     		mov	sp, r7
 488 0044 05B0     		add	sp, sp, #20
 489              		@ sp needed
 490 0046 90BD     		pop	{r4, r7, pc}
 491              	.L25:
 492              		.align	2
 493              	.L24:
 494 0048 40012040 		.word	1075839296
 495 004c FFFFFBFF 		.word	-262145
 496              		.cfi_endproc
 497              	.LFE8:
 498              		.size	PWM_1_SetOneShot, .-PWM_1_SetOneShot
 499              		.section	.text.PWM_1_SetPWMMode,"ax",%progbits
 500              		.align	2
 501              		.global	PWM_1_SetPWMMode
 502              		.code	16
 503              		.thumb_func
 504              		.type	PWM_1_SetPWMMode, %function
 505              	PWM_1_SetPWMMode:
 506              	.LFB9:
ARM GAS  C:\Users\essele\AppData\Local\Temp\cc7wN8Yp.s 			page 17


 407:Generated_Source\PSoC4/PWM_1.c **** 
 408:Generated_Source\PSoC4/PWM_1.c **** 
 409:Generated_Source\PSoC4/PWM_1.c **** /*******************************************************************************
 410:Generated_Source\PSoC4/PWM_1.c **** * Function Name: PWM_1_SetPWMMode
 411:Generated_Source\PSoC4/PWM_1.c **** ********************************************************************************
 412:Generated_Source\PSoC4/PWM_1.c **** *
 413:Generated_Source\PSoC4/PWM_1.c **** * Summary:
 414:Generated_Source\PSoC4/PWM_1.c **** *  Writes the control register that determines what mode of operation the PWM
 415:Generated_Source\PSoC4/PWM_1.c **** *  output lines are driven in.  There is a setting for what to do on a
 416:Generated_Source\PSoC4/PWM_1.c **** *  comparison match (CC_MATCH), on an overflow (OVERFLOW) and on an underflow
 417:Generated_Source\PSoC4/PWM_1.c **** *  (UNDERFLOW).  The value for each of the three must be ORed together to form
 418:Generated_Source\PSoC4/PWM_1.c **** *  the mode.
 419:Generated_Source\PSoC4/PWM_1.c **** *
 420:Generated_Source\PSoC4/PWM_1.c **** * Parameters:
 421:Generated_Source\PSoC4/PWM_1.c **** *  modeMask: A combination of three mode settings.  Mask must include a value
 422:Generated_Source\PSoC4/PWM_1.c **** *  for each of the three or use one of the preconfigured PWM settings.
 423:Generated_Source\PSoC4/PWM_1.c **** *   Values:
 424:Generated_Source\PSoC4/PWM_1.c **** *     - CC_MATCH_SET        - Set on comparison match
 425:Generated_Source\PSoC4/PWM_1.c **** *     - CC_MATCH_CLEAR      - Clear on comparison match
 426:Generated_Source\PSoC4/PWM_1.c **** *     - CC_MATCH_INVERT     - Invert on comparison match
 427:Generated_Source\PSoC4/PWM_1.c **** *     - CC_MATCH_NO_CHANGE  - No change on comparison match
 428:Generated_Source\PSoC4/PWM_1.c **** *     - OVERLOW_SET         - Set on overflow
 429:Generated_Source\PSoC4/PWM_1.c **** *     - OVERLOW_CLEAR       - Clear on  overflow
 430:Generated_Source\PSoC4/PWM_1.c **** *     - OVERLOW_INVERT      - Invert on overflow
 431:Generated_Source\PSoC4/PWM_1.c **** *     - OVERLOW_NO_CHANGE   - No change on overflow
 432:Generated_Source\PSoC4/PWM_1.c **** *     - UNDERFLOW_SET       - Set on underflow
 433:Generated_Source\PSoC4/PWM_1.c **** *     - UNDERFLOW_CLEAR     - Clear on underflow
 434:Generated_Source\PSoC4/PWM_1.c **** *     - UNDERFLOW_INVERT    - Invert on underflow
 435:Generated_Source\PSoC4/PWM_1.c **** *     - UNDERFLOW_NO_CHANGE - No change on underflow
 436:Generated_Source\PSoC4/PWM_1.c **** *     - PWM_MODE_LEFT       - Setting for left aligned PWM.  Should be combined
 437:Generated_Source\PSoC4/PWM_1.c **** *                             with up counting mode
 438:Generated_Source\PSoC4/PWM_1.c **** *     - PWM_MODE_RIGHT      - Setting for right aligned PWM.  Should be combined
 439:Generated_Source\PSoC4/PWM_1.c **** *                             with down counting mode
 440:Generated_Source\PSoC4/PWM_1.c **** *     - PWM_MODE_CENTER     - Setting for center aligned PWM.  Should be
 441:Generated_Source\PSoC4/PWM_1.c **** *                             combined with up/down 0 mode
 442:Generated_Source\PSoC4/PWM_1.c **** *     - PWM_MODE_ASYM       - Setting for asymmetric PWM.  Should be combined
 443:Generated_Source\PSoC4/PWM_1.c **** *                             with up/down 1 mode
 444:Generated_Source\PSoC4/PWM_1.c **** *
 445:Generated_Source\PSoC4/PWM_1.c **** * Return:
 446:Generated_Source\PSoC4/PWM_1.c **** *  None
 447:Generated_Source\PSoC4/PWM_1.c **** *
 448:Generated_Source\PSoC4/PWM_1.c **** *******************************************************************************/
 449:Generated_Source\PSoC4/PWM_1.c **** void PWM_1_SetPWMMode(uint32 modeMask)
 450:Generated_Source\PSoC4/PWM_1.c **** {
 507              		.loc 1 450 0
 508              		.cfi_startproc
 509              		@ args = 0, pretend = 0, frame = 8
 510              		@ frame_needed = 1, uses_anonymous_args = 0
 511 0000 80B5     		push	{r7, lr}
 512              		.cfi_def_cfa_offset 8
 513              		.cfi_offset 7, -8
 514              		.cfi_offset 14, -4
 515 0002 82B0     		sub	sp, sp, #8
 516              		.cfi_def_cfa_offset 16
 517 0004 00AF     		add	r7, sp, #0
 518              		.cfi_def_cfa_register 7
 519 0006 7860     		str	r0, [r7, #4]
ARM GAS  C:\Users\essele\AppData\Local\Temp\cc7wN8Yp.s 			page 18


 451:Generated_Source\PSoC4/PWM_1.c ****     PWM_1_TRIG_CONTROL2_REG = (modeMask & PWM_1_6BIT_MASK);
 520              		.loc 1 451 0
 521 0008 044B     		ldr	r3, .L27
 522 000a 7A68     		ldr	r2, [r7, #4]
 523 000c 3F21     		movs	r1, #63
 524 000e 0A40     		ands	r2, r1
 525 0010 1A60     		str	r2, [r3]
 452:Generated_Source\PSoC4/PWM_1.c **** }
 526              		.loc 1 452 0
 527 0012 C046     		nop
 528 0014 BD46     		mov	sp, r7
 529 0016 02B0     		add	sp, sp, #8
 530              		@ sp needed
 531 0018 80BD     		pop	{r7, pc}
 532              	.L28:
 533 001a C046     		.align	2
 534              	.L27:
 535 001c 68012040 		.word	1075839336
 536              		.cfi_endproc
 537              	.LFE9:
 538              		.size	PWM_1_SetPWMMode, .-PWM_1_SetPWMMode
 539              		.section	.text.PWM_1_SetPWMSyncKill,"ax",%progbits
 540              		.align	2
 541              		.global	PWM_1_SetPWMSyncKill
 542              		.code	16
 543              		.thumb_func
 544              		.type	PWM_1_SetPWMSyncKill, %function
 545              	PWM_1_SetPWMSyncKill:
 546              	.LFB10:
 453:Generated_Source\PSoC4/PWM_1.c **** 
 454:Generated_Source\PSoC4/PWM_1.c **** 
 455:Generated_Source\PSoC4/PWM_1.c **** 
 456:Generated_Source\PSoC4/PWM_1.c **** /*******************************************************************************
 457:Generated_Source\PSoC4/PWM_1.c **** * Function Name: PWM_1_SetPWMSyncKill
 458:Generated_Source\PSoC4/PWM_1.c **** ********************************************************************************
 459:Generated_Source\PSoC4/PWM_1.c **** *
 460:Generated_Source\PSoC4/PWM_1.c **** * Summary:
 461:Generated_Source\PSoC4/PWM_1.c **** *  Writes the register that controls whether the PWM kill signal (stop input)
 462:Generated_Source\PSoC4/PWM_1.c **** *  causes asynchronous or synchronous kill operation.  By default the kill
 463:Generated_Source\PSoC4/PWM_1.c **** *  operation is asynchronous.  This functionality is only applicable to the PWM
 464:Generated_Source\PSoC4/PWM_1.c **** *  and PWM with dead time modes.
 465:Generated_Source\PSoC4/PWM_1.c **** *
 466:Generated_Source\PSoC4/PWM_1.c **** *  For Synchronous mode the kill signal disables both the line and line_n
 467:Generated_Source\PSoC4/PWM_1.c **** *  signals until the next terminal count.
 468:Generated_Source\PSoC4/PWM_1.c **** *
 469:Generated_Source\PSoC4/PWM_1.c **** *  For Asynchronous mode the kill signal disables both the line and line_n
 470:Generated_Source\PSoC4/PWM_1.c **** *  signals when the kill signal is present.  This mode should only be used
 471:Generated_Source\PSoC4/PWM_1.c **** *  when the kill signal (stop input) is configured in the pass through mode
 472:Generated_Source\PSoC4/PWM_1.c **** *  (Level sensitive signal).
 473:Generated_Source\PSoC4/PWM_1.c **** 
 474:Generated_Source\PSoC4/PWM_1.c **** *
 475:Generated_Source\PSoC4/PWM_1.c **** * Parameters:
 476:Generated_Source\PSoC4/PWM_1.c **** *  syncKillEnable
 477:Generated_Source\PSoC4/PWM_1.c **** *   Values:
 478:Generated_Source\PSoC4/PWM_1.c **** *     - 0 - Asynchronous
 479:Generated_Source\PSoC4/PWM_1.c **** *     - 1 - Synchronous
 480:Generated_Source\PSoC4/PWM_1.c **** *
ARM GAS  C:\Users\essele\AppData\Local\Temp\cc7wN8Yp.s 			page 19


 481:Generated_Source\PSoC4/PWM_1.c **** * Return:
 482:Generated_Source\PSoC4/PWM_1.c **** *  None
 483:Generated_Source\PSoC4/PWM_1.c **** *
 484:Generated_Source\PSoC4/PWM_1.c **** *******************************************************************************/
 485:Generated_Source\PSoC4/PWM_1.c **** void PWM_1_SetPWMSyncKill(uint32 syncKillEnable)
 486:Generated_Source\PSoC4/PWM_1.c **** {
 547              		.loc 1 486 0
 548              		.cfi_startproc
 549              		@ args = 0, pretend = 0, frame = 16
 550              		@ frame_needed = 1, uses_anonymous_args = 0
 551 0000 90B5     		push	{r4, r7, lr}
 552              		.cfi_def_cfa_offset 12
 553              		.cfi_offset 4, -12
 554              		.cfi_offset 7, -8
 555              		.cfi_offset 14, -4
 556 0002 85B0     		sub	sp, sp, #20
 557              		.cfi_def_cfa_offset 32
 558 0004 00AF     		add	r7, sp, #0
 559              		.cfi_def_cfa_register 7
 560 0006 7860     		str	r0, [r7, #4]
 487:Generated_Source\PSoC4/PWM_1.c ****     uint8 enableInterrupts;
 488:Generated_Source\PSoC4/PWM_1.c **** 
 489:Generated_Source\PSoC4/PWM_1.c ****     enableInterrupts = CyEnterCriticalSection();
 561              		.loc 1 489 0
 562 0008 0F23     		movs	r3, #15
 563 000a FC18     		adds	r4, r7, r3
 564 000c FFF7FEFF 		bl	CyEnterCriticalSection
 565 0010 0300     		movs	r3, r0
 566 0012 2370     		strb	r3, [r4]
 490:Generated_Source\PSoC4/PWM_1.c **** 
 491:Generated_Source\PSoC4/PWM_1.c ****     PWM_1_CONTROL_REG &= (uint32)~PWM_1_PWM_SYNC_KILL_MASK;
 567              		.loc 1 491 0
 568 0014 0C4B     		ldr	r3, .L30
 569 0016 0C4A     		ldr	r2, .L30
 570 0018 1268     		ldr	r2, [r2]
 571 001a 0421     		movs	r1, #4
 572 001c 8A43     		bics	r2, r1
 573 001e 1A60     		str	r2, [r3]
 492:Generated_Source\PSoC4/PWM_1.c ****     PWM_1_CONTROL_REG |= ((uint32)((syncKillEnable & PWM_1_1BIT_MASK)  <<
 574              		.loc 1 492 0
 575 0020 094B     		ldr	r3, .L30
 576 0022 094A     		ldr	r2, .L30
 577 0024 1168     		ldr	r1, [r2]
 578 0026 7A68     		ldr	r2, [r7, #4]
 579 0028 9200     		lsls	r2, r2, #2
 580 002a 0420     		movs	r0, #4
 581 002c 0240     		ands	r2, r0
 582 002e 0A43     		orrs	r2, r1
 583 0030 1A60     		str	r2, [r3]
 493:Generated_Source\PSoC4/PWM_1.c ****                                                PWM_1_PWM_SYNC_KILL_SHIFT));
 494:Generated_Source\PSoC4/PWM_1.c **** 
 495:Generated_Source\PSoC4/PWM_1.c ****     CyExitCriticalSection(enableInterrupts);
 584              		.loc 1 495 0
 585 0032 0F23     		movs	r3, #15
 586 0034 FB18     		adds	r3, r7, r3
 587 0036 1B78     		ldrb	r3, [r3]
 588 0038 1800     		movs	r0, r3
ARM GAS  C:\Users\essele\AppData\Local\Temp\cc7wN8Yp.s 			page 20


 589 003a FFF7FEFF 		bl	CyExitCriticalSection
 496:Generated_Source\PSoC4/PWM_1.c **** }
 590              		.loc 1 496 0
 591 003e C046     		nop
 592 0040 BD46     		mov	sp, r7
 593 0042 05B0     		add	sp, sp, #20
 594              		@ sp needed
 595 0044 90BD     		pop	{r4, r7, pc}
 596              	.L31:
 597 0046 C046     		.align	2
 598              	.L30:
 599 0048 40012040 		.word	1075839296
 600              		.cfi_endproc
 601              	.LFE10:
 602              		.size	PWM_1_SetPWMSyncKill, .-PWM_1_SetPWMSyncKill
 603              		.section	.text.PWM_1_SetPWMStopOnKill,"ax",%progbits
 604              		.align	2
 605              		.global	PWM_1_SetPWMStopOnKill
 606              		.code	16
 607              		.thumb_func
 608              		.type	PWM_1_SetPWMStopOnKill, %function
 609              	PWM_1_SetPWMStopOnKill:
 610              	.LFB11:
 497:Generated_Source\PSoC4/PWM_1.c **** 
 498:Generated_Source\PSoC4/PWM_1.c **** 
 499:Generated_Source\PSoC4/PWM_1.c **** /*******************************************************************************
 500:Generated_Source\PSoC4/PWM_1.c **** * Function Name: PWM_1_SetPWMStopOnKill
 501:Generated_Source\PSoC4/PWM_1.c **** ********************************************************************************
 502:Generated_Source\PSoC4/PWM_1.c **** *
 503:Generated_Source\PSoC4/PWM_1.c **** * Summary:
 504:Generated_Source\PSoC4/PWM_1.c **** *  Writes the register that controls whether the PWM kill signal (stop input)
 505:Generated_Source\PSoC4/PWM_1.c **** *  causes the PWM counter to stop.  By default the kill operation does not stop
 506:Generated_Source\PSoC4/PWM_1.c **** *  the counter.  This functionality is only applicable to the three PWM modes.
 507:Generated_Source\PSoC4/PWM_1.c **** *
 508:Generated_Source\PSoC4/PWM_1.c **** *
 509:Generated_Source\PSoC4/PWM_1.c **** * Parameters:
 510:Generated_Source\PSoC4/PWM_1.c **** *  stopOnKillEnable
 511:Generated_Source\PSoC4/PWM_1.c **** *   Values:
 512:Generated_Source\PSoC4/PWM_1.c **** *     - 0 - Don't stop
 513:Generated_Source\PSoC4/PWM_1.c **** *     - 1 - Stop
 514:Generated_Source\PSoC4/PWM_1.c **** *
 515:Generated_Source\PSoC4/PWM_1.c **** * Return:
 516:Generated_Source\PSoC4/PWM_1.c **** *  None
 517:Generated_Source\PSoC4/PWM_1.c **** *
 518:Generated_Source\PSoC4/PWM_1.c **** *******************************************************************************/
 519:Generated_Source\PSoC4/PWM_1.c **** void PWM_1_SetPWMStopOnKill(uint32 stopOnKillEnable)
 520:Generated_Source\PSoC4/PWM_1.c **** {
 611              		.loc 1 520 0
 612              		.cfi_startproc
 613              		@ args = 0, pretend = 0, frame = 16
 614              		@ frame_needed = 1, uses_anonymous_args = 0
 615 0000 90B5     		push	{r4, r7, lr}
 616              		.cfi_def_cfa_offset 12
 617              		.cfi_offset 4, -12
 618              		.cfi_offset 7, -8
 619              		.cfi_offset 14, -4
 620 0002 85B0     		sub	sp, sp, #20
ARM GAS  C:\Users\essele\AppData\Local\Temp\cc7wN8Yp.s 			page 21


 621              		.cfi_def_cfa_offset 32
 622 0004 00AF     		add	r7, sp, #0
 623              		.cfi_def_cfa_register 7
 624 0006 7860     		str	r0, [r7, #4]
 521:Generated_Source\PSoC4/PWM_1.c ****     uint8 enableInterrupts;
 522:Generated_Source\PSoC4/PWM_1.c **** 
 523:Generated_Source\PSoC4/PWM_1.c ****     enableInterrupts = CyEnterCriticalSection();
 625              		.loc 1 523 0
 626 0008 0F23     		movs	r3, #15
 627 000a FC18     		adds	r4, r7, r3
 628 000c FFF7FEFF 		bl	CyEnterCriticalSection
 629 0010 0300     		movs	r3, r0
 630 0012 2370     		strb	r3, [r4]
 524:Generated_Source\PSoC4/PWM_1.c **** 
 525:Generated_Source\PSoC4/PWM_1.c ****     PWM_1_CONTROL_REG &= (uint32)~PWM_1_PWM_STOP_KILL_MASK;
 631              		.loc 1 525 0
 632 0014 0C4B     		ldr	r3, .L33
 633 0016 0C4A     		ldr	r2, .L33
 634 0018 1268     		ldr	r2, [r2]
 635 001a 0821     		movs	r1, #8
 636 001c 8A43     		bics	r2, r1
 637 001e 1A60     		str	r2, [r3]
 526:Generated_Source\PSoC4/PWM_1.c ****     PWM_1_CONTROL_REG |= ((uint32)((stopOnKillEnable & PWM_1_1BIT_MASK)  <<
 638              		.loc 1 526 0
 639 0020 094B     		ldr	r3, .L33
 640 0022 094A     		ldr	r2, .L33
 641 0024 1168     		ldr	r1, [r2]
 642 0026 7A68     		ldr	r2, [r7, #4]
 643 0028 D200     		lsls	r2, r2, #3
 644 002a 0820     		movs	r0, #8
 645 002c 0240     		ands	r2, r0
 646 002e 0A43     		orrs	r2, r1
 647 0030 1A60     		str	r2, [r3]
 527:Generated_Source\PSoC4/PWM_1.c ****                                                          PWM_1_PWM_STOP_KILL_SHIFT));
 528:Generated_Source\PSoC4/PWM_1.c **** 
 529:Generated_Source\PSoC4/PWM_1.c ****     CyExitCriticalSection(enableInterrupts);
 648              		.loc 1 529 0
 649 0032 0F23     		movs	r3, #15
 650 0034 FB18     		adds	r3, r7, r3
 651 0036 1B78     		ldrb	r3, [r3]
 652 0038 1800     		movs	r0, r3
 653 003a FFF7FEFF 		bl	CyExitCriticalSection
 530:Generated_Source\PSoC4/PWM_1.c **** }
 654              		.loc 1 530 0
 655 003e C046     		nop
 656 0040 BD46     		mov	sp, r7
 657 0042 05B0     		add	sp, sp, #20
 658              		@ sp needed
 659 0044 90BD     		pop	{r4, r7, pc}
 660              	.L34:
 661 0046 C046     		.align	2
 662              	.L33:
 663 0048 40012040 		.word	1075839296
 664              		.cfi_endproc
 665              	.LFE11:
 666              		.size	PWM_1_SetPWMStopOnKill, .-PWM_1_SetPWMStopOnKill
 667              		.section	.text.PWM_1_SetPWMDeadTime,"ax",%progbits
ARM GAS  C:\Users\essele\AppData\Local\Temp\cc7wN8Yp.s 			page 22


 668              		.align	2
 669              		.global	PWM_1_SetPWMDeadTime
 670              		.code	16
 671              		.thumb_func
 672              		.type	PWM_1_SetPWMDeadTime, %function
 673              	PWM_1_SetPWMDeadTime:
 674              	.LFB12:
 531:Generated_Source\PSoC4/PWM_1.c **** 
 532:Generated_Source\PSoC4/PWM_1.c **** 
 533:Generated_Source\PSoC4/PWM_1.c **** /*******************************************************************************
 534:Generated_Source\PSoC4/PWM_1.c **** * Function Name: PWM_1_SetPWMDeadTime
 535:Generated_Source\PSoC4/PWM_1.c **** ********************************************************************************
 536:Generated_Source\PSoC4/PWM_1.c **** *
 537:Generated_Source\PSoC4/PWM_1.c **** * Summary:
 538:Generated_Source\PSoC4/PWM_1.c **** *  Writes the dead time control value.  This value delays the rising edge of
 539:Generated_Source\PSoC4/PWM_1.c **** *  both the line and line_n signals the designated number of cycles resulting
 540:Generated_Source\PSoC4/PWM_1.c **** *  in both signals being inactive for that many cycles.  This functionality is
 541:Generated_Source\PSoC4/PWM_1.c **** *  only applicable to the PWM in the dead time mode.
 542:Generated_Source\PSoC4/PWM_1.c **** 
 543:Generated_Source\PSoC4/PWM_1.c **** *
 544:Generated_Source\PSoC4/PWM_1.c **** * Parameters:
 545:Generated_Source\PSoC4/PWM_1.c **** *  Dead time to insert
 546:Generated_Source\PSoC4/PWM_1.c **** *   Values: 0 to 255
 547:Generated_Source\PSoC4/PWM_1.c **** *
 548:Generated_Source\PSoC4/PWM_1.c **** * Return:
 549:Generated_Source\PSoC4/PWM_1.c **** *  None
 550:Generated_Source\PSoC4/PWM_1.c **** *
 551:Generated_Source\PSoC4/PWM_1.c **** *******************************************************************************/
 552:Generated_Source\PSoC4/PWM_1.c **** void PWM_1_SetPWMDeadTime(uint32 deadTime)
 553:Generated_Source\PSoC4/PWM_1.c **** {
 675              		.loc 1 553 0
 676              		.cfi_startproc
 677              		@ args = 0, pretend = 0, frame = 16
 678              		@ frame_needed = 1, uses_anonymous_args = 0
 679 0000 90B5     		push	{r4, r7, lr}
 680              		.cfi_def_cfa_offset 12
 681              		.cfi_offset 4, -12
 682              		.cfi_offset 7, -8
 683              		.cfi_offset 14, -4
 684 0002 85B0     		sub	sp, sp, #20
 685              		.cfi_def_cfa_offset 32
 686 0004 00AF     		add	r7, sp, #0
 687              		.cfi_def_cfa_register 7
 688 0006 7860     		str	r0, [r7, #4]
 554:Generated_Source\PSoC4/PWM_1.c ****     uint8 enableInterrupts;
 555:Generated_Source\PSoC4/PWM_1.c **** 
 556:Generated_Source\PSoC4/PWM_1.c ****     enableInterrupts = CyEnterCriticalSection();
 689              		.loc 1 556 0
 690 0008 0F23     		movs	r3, #15
 691 000a FC18     		adds	r4, r7, r3
 692 000c FFF7FEFF 		bl	CyEnterCriticalSection
 693 0010 0300     		movs	r3, r0
 694 0012 2370     		strb	r3, [r4]
 557:Generated_Source\PSoC4/PWM_1.c **** 
 558:Generated_Source\PSoC4/PWM_1.c ****     PWM_1_CONTROL_REG &= (uint32)~PWM_1_PRESCALER_MASK;
 695              		.loc 1 558 0
 696 0014 0C4B     		ldr	r3, .L36
ARM GAS  C:\Users\essele\AppData\Local\Temp\cc7wN8Yp.s 			page 23


 697 0016 0C4A     		ldr	r2, .L36
 698 0018 1268     		ldr	r2, [r2]
 699 001a 0C49     		ldr	r1, .L36+4
 700 001c 0A40     		ands	r2, r1
 701 001e 1A60     		str	r2, [r3]
 559:Generated_Source\PSoC4/PWM_1.c ****     PWM_1_CONTROL_REG |= ((uint32)((deadTime & PWM_1_8BIT_MASK) <<
 702              		.loc 1 559 0
 703 0020 094B     		ldr	r3, .L36
 704 0022 094A     		ldr	r2, .L36
 705 0024 1168     		ldr	r1, [r2]
 706 0026 7A68     		ldr	r2, [r7, #4]
 707 0028 1202     		lsls	r2, r2, #8
 708 002a 1204     		lsls	r2, r2, #16
 709 002c 120C     		lsrs	r2, r2, #16
 710 002e 0A43     		orrs	r2, r1
 711 0030 1A60     		str	r2, [r3]
 560:Generated_Source\PSoC4/PWM_1.c ****                                                           PWM_1_PRESCALER_SHIFT));
 561:Generated_Source\PSoC4/PWM_1.c **** 
 562:Generated_Source\PSoC4/PWM_1.c ****     CyExitCriticalSection(enableInterrupts);
 712              		.loc 1 562 0
 713 0032 0F23     		movs	r3, #15
 714 0034 FB18     		adds	r3, r7, r3
 715 0036 1B78     		ldrb	r3, [r3]
 716 0038 1800     		movs	r0, r3
 717 003a FFF7FEFF 		bl	CyExitCriticalSection
 563:Generated_Source\PSoC4/PWM_1.c **** }
 718              		.loc 1 563 0
 719 003e C046     		nop
 720 0040 BD46     		mov	sp, r7
 721 0042 05B0     		add	sp, sp, #20
 722              		@ sp needed
 723 0044 90BD     		pop	{r4, r7, pc}
 724              	.L37:
 725 0046 C046     		.align	2
 726              	.L36:
 727 0048 40012040 		.word	1075839296
 728 004c FF00FFFF 		.word	-65281
 729              		.cfi_endproc
 730              	.LFE12:
 731              		.size	PWM_1_SetPWMDeadTime, .-PWM_1_SetPWMDeadTime
 732              		.section	.text.PWM_1_SetPWMInvert,"ax",%progbits
 733              		.align	2
 734              		.global	PWM_1_SetPWMInvert
 735              		.code	16
 736              		.thumb_func
 737              		.type	PWM_1_SetPWMInvert, %function
 738              	PWM_1_SetPWMInvert:
 739              	.LFB13:
 564:Generated_Source\PSoC4/PWM_1.c **** 
 565:Generated_Source\PSoC4/PWM_1.c **** 
 566:Generated_Source\PSoC4/PWM_1.c **** /*******************************************************************************
 567:Generated_Source\PSoC4/PWM_1.c **** * Function Name: PWM_1_SetPWMInvert
 568:Generated_Source\PSoC4/PWM_1.c **** ********************************************************************************
 569:Generated_Source\PSoC4/PWM_1.c **** *
 570:Generated_Source\PSoC4/PWM_1.c **** * Summary:
 571:Generated_Source\PSoC4/PWM_1.c **** *  Writes the bits that control whether the line and line_n outputs are
 572:Generated_Source\PSoC4/PWM_1.c **** *  inverted from their normal output values.  This functionality is only
ARM GAS  C:\Users\essele\AppData\Local\Temp\cc7wN8Yp.s 			page 24


 573:Generated_Source\PSoC4/PWM_1.c **** *  applicable to the three PWM modes.
 574:Generated_Source\PSoC4/PWM_1.c **** *
 575:Generated_Source\PSoC4/PWM_1.c **** * Parameters:
 576:Generated_Source\PSoC4/PWM_1.c **** *  mask: Mask of outputs to invert.
 577:Generated_Source\PSoC4/PWM_1.c **** *   Values:
 578:Generated_Source\PSoC4/PWM_1.c **** *         - PWM_1_INVERT_LINE   - Inverts the line output
 579:Generated_Source\PSoC4/PWM_1.c **** *         - PWM_1_INVERT_LINE_N - Inverts the line_n output
 580:Generated_Source\PSoC4/PWM_1.c **** *
 581:Generated_Source\PSoC4/PWM_1.c **** * Return:
 582:Generated_Source\PSoC4/PWM_1.c **** *  None
 583:Generated_Source\PSoC4/PWM_1.c **** *
 584:Generated_Source\PSoC4/PWM_1.c **** *******************************************************************************/
 585:Generated_Source\PSoC4/PWM_1.c **** void PWM_1_SetPWMInvert(uint32 mask)
 586:Generated_Source\PSoC4/PWM_1.c **** {
 740              		.loc 1 586 0
 741              		.cfi_startproc
 742              		@ args = 0, pretend = 0, frame = 16
 743              		@ frame_needed = 1, uses_anonymous_args = 0
 744 0000 90B5     		push	{r4, r7, lr}
 745              		.cfi_def_cfa_offset 12
 746              		.cfi_offset 4, -12
 747              		.cfi_offset 7, -8
 748              		.cfi_offset 14, -4
 749 0002 85B0     		sub	sp, sp, #20
 750              		.cfi_def_cfa_offset 32
 751 0004 00AF     		add	r7, sp, #0
 752              		.cfi_def_cfa_register 7
 753 0006 7860     		str	r0, [r7, #4]
 587:Generated_Source\PSoC4/PWM_1.c ****     uint8 enableInterrupts;
 588:Generated_Source\PSoC4/PWM_1.c **** 
 589:Generated_Source\PSoC4/PWM_1.c ****     enableInterrupts = CyEnterCriticalSection();
 754              		.loc 1 589 0
 755 0008 0F23     		movs	r3, #15
 756 000a FC18     		adds	r4, r7, r3
 757 000c FFF7FEFF 		bl	CyEnterCriticalSection
 758 0010 0300     		movs	r3, r0
 759 0012 2370     		strb	r3, [r4]
 590:Generated_Source\PSoC4/PWM_1.c **** 
 591:Generated_Source\PSoC4/PWM_1.c ****     PWM_1_CONTROL_REG &= (uint32)~PWM_1_INV_OUT_MASK;
 760              		.loc 1 591 0
 761 0014 0A4B     		ldr	r3, .L39
 762 0016 0A4A     		ldr	r2, .L39
 763 0018 1268     		ldr	r2, [r2]
 764 001a 0A49     		ldr	r1, .L39+4
 765 001c 0A40     		ands	r2, r1
 766 001e 1A60     		str	r2, [r3]
 592:Generated_Source\PSoC4/PWM_1.c ****     PWM_1_CONTROL_REG |= mask;
 767              		.loc 1 592 0
 768 0020 074B     		ldr	r3, .L39
 769 0022 074A     		ldr	r2, .L39
 770 0024 1168     		ldr	r1, [r2]
 771 0026 7A68     		ldr	r2, [r7, #4]
 772 0028 0A43     		orrs	r2, r1
 773 002a 1A60     		str	r2, [r3]
 593:Generated_Source\PSoC4/PWM_1.c **** 
 594:Generated_Source\PSoC4/PWM_1.c ****     CyExitCriticalSection(enableInterrupts);
 774              		.loc 1 594 0
ARM GAS  C:\Users\essele\AppData\Local\Temp\cc7wN8Yp.s 			page 25


 775 002c 0F23     		movs	r3, #15
 776 002e FB18     		adds	r3, r7, r3
 777 0030 1B78     		ldrb	r3, [r3]
 778 0032 1800     		movs	r0, r3
 779 0034 FFF7FEFF 		bl	CyExitCriticalSection
 595:Generated_Source\PSoC4/PWM_1.c **** }
 780              		.loc 1 595 0
 781 0038 C046     		nop
 782 003a BD46     		mov	sp, r7
 783 003c 05B0     		add	sp, sp, #20
 784              		@ sp needed
 785 003e 90BD     		pop	{r4, r7, pc}
 786              	.L40:
 787              		.align	2
 788              	.L39:
 789 0040 40012040 		.word	1075839296
 790 0044 FFFFCFFF 		.word	-3145729
 791              		.cfi_endproc
 792              	.LFE13:
 793              		.size	PWM_1_SetPWMInvert, .-PWM_1_SetPWMInvert
 794              		.section	.text.PWM_1_WriteCounter,"ax",%progbits
 795              		.align	2
 796              		.global	PWM_1_WriteCounter
 797              		.code	16
 798              		.thumb_func
 799              		.type	PWM_1_WriteCounter, %function
 800              	PWM_1_WriteCounter:
 801              	.LFB14:
 596:Generated_Source\PSoC4/PWM_1.c **** 
 597:Generated_Source\PSoC4/PWM_1.c **** 
 598:Generated_Source\PSoC4/PWM_1.c **** 
 599:Generated_Source\PSoC4/PWM_1.c **** /*******************************************************************************
 600:Generated_Source\PSoC4/PWM_1.c **** * Function Name: PWM_1_WriteCounter
 601:Generated_Source\PSoC4/PWM_1.c **** ********************************************************************************
 602:Generated_Source\PSoC4/PWM_1.c **** *
 603:Generated_Source\PSoC4/PWM_1.c **** * Summary:
 604:Generated_Source\PSoC4/PWM_1.c **** *  Writes a new 16bit counter value directly into the counter register, thus
 605:Generated_Source\PSoC4/PWM_1.c **** *  setting the counter (not the period) to the value written. It is not
 606:Generated_Source\PSoC4/PWM_1.c **** *  advised to write to this field when the counter is running.
 607:Generated_Source\PSoC4/PWM_1.c **** *
 608:Generated_Source\PSoC4/PWM_1.c **** * Parameters:
 609:Generated_Source\PSoC4/PWM_1.c **** *  count: value to write
 610:Generated_Source\PSoC4/PWM_1.c **** *
 611:Generated_Source\PSoC4/PWM_1.c **** * Return:
 612:Generated_Source\PSoC4/PWM_1.c **** *  None
 613:Generated_Source\PSoC4/PWM_1.c **** *
 614:Generated_Source\PSoC4/PWM_1.c **** *******************************************************************************/
 615:Generated_Source\PSoC4/PWM_1.c **** void PWM_1_WriteCounter(uint32 count)
 616:Generated_Source\PSoC4/PWM_1.c **** {
 802              		.loc 1 616 0
 803              		.cfi_startproc
 804              		@ args = 0, pretend = 0, frame = 8
 805              		@ frame_needed = 1, uses_anonymous_args = 0
 806 0000 80B5     		push	{r7, lr}
 807              		.cfi_def_cfa_offset 8
 808              		.cfi_offset 7, -8
 809              		.cfi_offset 14, -4
ARM GAS  C:\Users\essele\AppData\Local\Temp\cc7wN8Yp.s 			page 26


 810 0002 82B0     		sub	sp, sp, #8
 811              		.cfi_def_cfa_offset 16
 812 0004 00AF     		add	r7, sp, #0
 813              		.cfi_def_cfa_register 7
 814 0006 7860     		str	r0, [r7, #4]
 617:Generated_Source\PSoC4/PWM_1.c ****     PWM_1_COUNTER_REG = (count & PWM_1_16BIT_MASK);
 815              		.loc 1 617 0
 816 0008 044B     		ldr	r3, .L42
 817 000a 7A68     		ldr	r2, [r7, #4]
 818 000c 1204     		lsls	r2, r2, #16
 819 000e 120C     		lsrs	r2, r2, #16
 820 0010 1A60     		str	r2, [r3]
 618:Generated_Source\PSoC4/PWM_1.c **** }
 821              		.loc 1 618 0
 822 0012 C046     		nop
 823 0014 BD46     		mov	sp, r7
 824 0016 02B0     		add	sp, sp, #8
 825              		@ sp needed
 826 0018 80BD     		pop	{r7, pc}
 827              	.L43:
 828 001a C046     		.align	2
 829              	.L42:
 830 001c 48012040 		.word	1075839304
 831              		.cfi_endproc
 832              	.LFE14:
 833              		.size	PWM_1_WriteCounter, .-PWM_1_WriteCounter
 834              		.section	.text.PWM_1_ReadCounter,"ax",%progbits
 835              		.align	2
 836              		.global	PWM_1_ReadCounter
 837              		.code	16
 838              		.thumb_func
 839              		.type	PWM_1_ReadCounter, %function
 840              	PWM_1_ReadCounter:
 841              	.LFB15:
 619:Generated_Source\PSoC4/PWM_1.c **** 
 620:Generated_Source\PSoC4/PWM_1.c **** 
 621:Generated_Source\PSoC4/PWM_1.c **** /*******************************************************************************
 622:Generated_Source\PSoC4/PWM_1.c **** * Function Name: PWM_1_ReadCounter
 623:Generated_Source\PSoC4/PWM_1.c **** ********************************************************************************
 624:Generated_Source\PSoC4/PWM_1.c **** *
 625:Generated_Source\PSoC4/PWM_1.c **** * Summary:
 626:Generated_Source\PSoC4/PWM_1.c **** *  Reads the current counter value.
 627:Generated_Source\PSoC4/PWM_1.c **** *
 628:Generated_Source\PSoC4/PWM_1.c **** * Parameters:
 629:Generated_Source\PSoC4/PWM_1.c **** *  None
 630:Generated_Source\PSoC4/PWM_1.c **** *
 631:Generated_Source\PSoC4/PWM_1.c **** * Return:
 632:Generated_Source\PSoC4/PWM_1.c **** *  Current counter value
 633:Generated_Source\PSoC4/PWM_1.c **** *
 634:Generated_Source\PSoC4/PWM_1.c **** *******************************************************************************/
 635:Generated_Source\PSoC4/PWM_1.c **** uint32 PWM_1_ReadCounter(void)
 636:Generated_Source\PSoC4/PWM_1.c **** {
 842              		.loc 1 636 0
 843              		.cfi_startproc
 844              		@ args = 0, pretend = 0, frame = 0
 845              		@ frame_needed = 1, uses_anonymous_args = 0
 846 0000 80B5     		push	{r7, lr}
ARM GAS  C:\Users\essele\AppData\Local\Temp\cc7wN8Yp.s 			page 27


 847              		.cfi_def_cfa_offset 8
 848              		.cfi_offset 7, -8
 849              		.cfi_offset 14, -4
 850 0002 00AF     		add	r7, sp, #0
 851              		.cfi_def_cfa_register 7
 637:Generated_Source\PSoC4/PWM_1.c ****     return (PWM_1_COUNTER_REG & PWM_1_16BIT_MASK);
 852              		.loc 1 637 0
 853 0004 034B     		ldr	r3, .L46
 854 0006 1B68     		ldr	r3, [r3]
 855 0008 1B04     		lsls	r3, r3, #16
 856 000a 1B0C     		lsrs	r3, r3, #16
 638:Generated_Source\PSoC4/PWM_1.c **** }
 857              		.loc 1 638 0
 858 000c 1800     		movs	r0, r3
 859 000e BD46     		mov	sp, r7
 860              		@ sp needed
 861 0010 80BD     		pop	{r7, pc}
 862              	.L47:
 863 0012 C046     		.align	2
 864              	.L46:
 865 0014 48012040 		.word	1075839304
 866              		.cfi_endproc
 867              	.LFE15:
 868              		.size	PWM_1_ReadCounter, .-PWM_1_ReadCounter
 869              		.section	.text.PWM_1_SetCounterMode,"ax",%progbits
 870              		.align	2
 871              		.global	PWM_1_SetCounterMode
 872              		.code	16
 873              		.thumb_func
 874              		.type	PWM_1_SetCounterMode, %function
 875              	PWM_1_SetCounterMode:
 876              	.LFB16:
 639:Generated_Source\PSoC4/PWM_1.c **** 
 640:Generated_Source\PSoC4/PWM_1.c **** 
 641:Generated_Source\PSoC4/PWM_1.c **** /*******************************************************************************
 642:Generated_Source\PSoC4/PWM_1.c **** * Function Name: PWM_1_SetCounterMode
 643:Generated_Source\PSoC4/PWM_1.c **** ********************************************************************************
 644:Generated_Source\PSoC4/PWM_1.c **** *
 645:Generated_Source\PSoC4/PWM_1.c **** * Summary:
 646:Generated_Source\PSoC4/PWM_1.c **** *  Sets the counter mode.  Applicable to all modes except Quadrature Decoder
 647:Generated_Source\PSoC4/PWM_1.c **** *  and the PWM with a pseudo random output.
 648:Generated_Source\PSoC4/PWM_1.c **** *
 649:Generated_Source\PSoC4/PWM_1.c **** * Parameters:
 650:Generated_Source\PSoC4/PWM_1.c **** *  counterMode: Enumerated counter type values
 651:Generated_Source\PSoC4/PWM_1.c **** *   Values:
 652:Generated_Source\PSoC4/PWM_1.c **** *     - PWM_1_COUNT_UP       - Counts up
 653:Generated_Source\PSoC4/PWM_1.c **** *     - PWM_1_COUNT_DOWN     - Counts down
 654:Generated_Source\PSoC4/PWM_1.c **** *     - PWM_1_COUNT_UPDOWN0  - Counts up and down. Terminal count
 655:Generated_Source\PSoC4/PWM_1.c **** *                                         generated when counter reaches 0
 656:Generated_Source\PSoC4/PWM_1.c **** *     - PWM_1_COUNT_UPDOWN1  - Counts up and down. Terminal count
 657:Generated_Source\PSoC4/PWM_1.c **** *                                         generated both when counter reaches 0
 658:Generated_Source\PSoC4/PWM_1.c **** *                                         and period
 659:Generated_Source\PSoC4/PWM_1.c **** *
 660:Generated_Source\PSoC4/PWM_1.c **** * Return:
 661:Generated_Source\PSoC4/PWM_1.c **** *  None
 662:Generated_Source\PSoC4/PWM_1.c **** *
 663:Generated_Source\PSoC4/PWM_1.c **** *******************************************************************************/
ARM GAS  C:\Users\essele\AppData\Local\Temp\cc7wN8Yp.s 			page 28


 664:Generated_Source\PSoC4/PWM_1.c **** void PWM_1_SetCounterMode(uint32 counterMode)
 665:Generated_Source\PSoC4/PWM_1.c **** {
 877              		.loc 1 665 0
 878              		.cfi_startproc
 879              		@ args = 0, pretend = 0, frame = 16
 880              		@ frame_needed = 1, uses_anonymous_args = 0
 881 0000 90B5     		push	{r4, r7, lr}
 882              		.cfi_def_cfa_offset 12
 883              		.cfi_offset 4, -12
 884              		.cfi_offset 7, -8
 885              		.cfi_offset 14, -4
 886 0002 85B0     		sub	sp, sp, #20
 887              		.cfi_def_cfa_offset 32
 888 0004 00AF     		add	r7, sp, #0
 889              		.cfi_def_cfa_register 7
 890 0006 7860     		str	r0, [r7, #4]
 666:Generated_Source\PSoC4/PWM_1.c ****     uint8 enableInterrupts;
 667:Generated_Source\PSoC4/PWM_1.c **** 
 668:Generated_Source\PSoC4/PWM_1.c ****     enableInterrupts = CyEnterCriticalSection();
 891              		.loc 1 668 0
 892 0008 0F23     		movs	r3, #15
 893 000a FC18     		adds	r4, r7, r3
 894 000c FFF7FEFF 		bl	CyEnterCriticalSection
 895 0010 0300     		movs	r3, r0
 896 0012 2370     		strb	r3, [r4]
 669:Generated_Source\PSoC4/PWM_1.c **** 
 670:Generated_Source\PSoC4/PWM_1.c ****     PWM_1_CONTROL_REG &= (uint32)~PWM_1_UPDOWN_MASK;
 897              		.loc 1 670 0
 898 0014 0A4B     		ldr	r3, .L49
 899 0016 0A4A     		ldr	r2, .L49
 900 0018 1268     		ldr	r2, [r2]
 901 001a 0A49     		ldr	r1, .L49+4
 902 001c 0A40     		ands	r2, r1
 903 001e 1A60     		str	r2, [r3]
 671:Generated_Source\PSoC4/PWM_1.c ****     PWM_1_CONTROL_REG |= counterMode;
 904              		.loc 1 671 0
 905 0020 074B     		ldr	r3, .L49
 906 0022 074A     		ldr	r2, .L49
 907 0024 1168     		ldr	r1, [r2]
 908 0026 7A68     		ldr	r2, [r7, #4]
 909 0028 0A43     		orrs	r2, r1
 910 002a 1A60     		str	r2, [r3]
 672:Generated_Source\PSoC4/PWM_1.c **** 
 673:Generated_Source\PSoC4/PWM_1.c ****     CyExitCriticalSection(enableInterrupts);
 911              		.loc 1 673 0
 912 002c 0F23     		movs	r3, #15
 913 002e FB18     		adds	r3, r7, r3
 914 0030 1B78     		ldrb	r3, [r3]
 915 0032 1800     		movs	r0, r3
 916 0034 FFF7FEFF 		bl	CyExitCriticalSection
 674:Generated_Source\PSoC4/PWM_1.c **** }
 917              		.loc 1 674 0
 918 0038 C046     		nop
 919 003a BD46     		mov	sp, r7
 920 003c 05B0     		add	sp, sp, #20
 921              		@ sp needed
 922 003e 90BD     		pop	{r4, r7, pc}
ARM GAS  C:\Users\essele\AppData\Local\Temp\cc7wN8Yp.s 			page 29


 923              	.L50:
 924              		.align	2
 925              	.L49:
 926 0040 40012040 		.word	1075839296
 927 0044 FFFFFCFF 		.word	-196609
 928              		.cfi_endproc
 929              	.LFE16:
 930              		.size	PWM_1_SetCounterMode, .-PWM_1_SetCounterMode
 931              		.section	.text.PWM_1_WritePeriod,"ax",%progbits
 932              		.align	2
 933              		.global	PWM_1_WritePeriod
 934              		.code	16
 935              		.thumb_func
 936              		.type	PWM_1_WritePeriod, %function
 937              	PWM_1_WritePeriod:
 938              	.LFB17:
 675:Generated_Source\PSoC4/PWM_1.c **** 
 676:Generated_Source\PSoC4/PWM_1.c **** 
 677:Generated_Source\PSoC4/PWM_1.c **** /*******************************************************************************
 678:Generated_Source\PSoC4/PWM_1.c **** * Function Name: PWM_1_WritePeriod
 679:Generated_Source\PSoC4/PWM_1.c **** ********************************************************************************
 680:Generated_Source\PSoC4/PWM_1.c **** *
 681:Generated_Source\PSoC4/PWM_1.c **** * Summary:
 682:Generated_Source\PSoC4/PWM_1.c **** *  Writes the 16 bit period register with the new period value.
 683:Generated_Source\PSoC4/PWM_1.c **** *  To cause the counter to count for N cycles this register should be written
 684:Generated_Source\PSoC4/PWM_1.c **** *  with N-1 (counts from 0 to period inclusive).
 685:Generated_Source\PSoC4/PWM_1.c **** *
 686:Generated_Source\PSoC4/PWM_1.c **** * Parameters:
 687:Generated_Source\PSoC4/PWM_1.c **** *  period: Period value
 688:Generated_Source\PSoC4/PWM_1.c **** *
 689:Generated_Source\PSoC4/PWM_1.c **** * Return:
 690:Generated_Source\PSoC4/PWM_1.c **** *  None
 691:Generated_Source\PSoC4/PWM_1.c **** *
 692:Generated_Source\PSoC4/PWM_1.c **** *******************************************************************************/
 693:Generated_Source\PSoC4/PWM_1.c **** void PWM_1_WritePeriod(uint32 period)
 694:Generated_Source\PSoC4/PWM_1.c **** {
 939              		.loc 1 694 0
 940              		.cfi_startproc
 941              		@ args = 0, pretend = 0, frame = 8
 942              		@ frame_needed = 1, uses_anonymous_args = 0
 943 0000 80B5     		push	{r7, lr}
 944              		.cfi_def_cfa_offset 8
 945              		.cfi_offset 7, -8
 946              		.cfi_offset 14, -4
 947 0002 82B0     		sub	sp, sp, #8
 948              		.cfi_def_cfa_offset 16
 949 0004 00AF     		add	r7, sp, #0
 950              		.cfi_def_cfa_register 7
 951 0006 7860     		str	r0, [r7, #4]
 695:Generated_Source\PSoC4/PWM_1.c ****     PWM_1_PERIOD_REG = (period & PWM_1_16BIT_MASK);
 952              		.loc 1 695 0
 953 0008 044B     		ldr	r3, .L52
 954 000a 7A68     		ldr	r2, [r7, #4]
 955 000c 1204     		lsls	r2, r2, #16
 956 000e 120C     		lsrs	r2, r2, #16
 957 0010 1A60     		str	r2, [r3]
 696:Generated_Source\PSoC4/PWM_1.c **** }
ARM GAS  C:\Users\essele\AppData\Local\Temp\cc7wN8Yp.s 			page 30


 958              		.loc 1 696 0
 959 0012 C046     		nop
 960 0014 BD46     		mov	sp, r7
 961 0016 02B0     		add	sp, sp, #8
 962              		@ sp needed
 963 0018 80BD     		pop	{r7, pc}
 964              	.L53:
 965 001a C046     		.align	2
 966              	.L52:
 967 001c 54012040 		.word	1075839316
 968              		.cfi_endproc
 969              	.LFE17:
 970              		.size	PWM_1_WritePeriod, .-PWM_1_WritePeriod
 971              		.section	.text.PWM_1_ReadPeriod,"ax",%progbits
 972              		.align	2
 973              		.global	PWM_1_ReadPeriod
 974              		.code	16
 975              		.thumb_func
 976              		.type	PWM_1_ReadPeriod, %function
 977              	PWM_1_ReadPeriod:
 978              	.LFB18:
 697:Generated_Source\PSoC4/PWM_1.c **** 
 698:Generated_Source\PSoC4/PWM_1.c **** 
 699:Generated_Source\PSoC4/PWM_1.c **** /*******************************************************************************
 700:Generated_Source\PSoC4/PWM_1.c **** * Function Name: PWM_1_ReadPeriod
 701:Generated_Source\PSoC4/PWM_1.c **** ********************************************************************************
 702:Generated_Source\PSoC4/PWM_1.c **** *
 703:Generated_Source\PSoC4/PWM_1.c **** * Summary:
 704:Generated_Source\PSoC4/PWM_1.c **** *  Reads the 16 bit period register.
 705:Generated_Source\PSoC4/PWM_1.c **** *
 706:Generated_Source\PSoC4/PWM_1.c **** * Parameters:
 707:Generated_Source\PSoC4/PWM_1.c **** *  None
 708:Generated_Source\PSoC4/PWM_1.c **** *
 709:Generated_Source\PSoC4/PWM_1.c **** * Return:
 710:Generated_Source\PSoC4/PWM_1.c **** *  Period value
 711:Generated_Source\PSoC4/PWM_1.c **** *
 712:Generated_Source\PSoC4/PWM_1.c **** *******************************************************************************/
 713:Generated_Source\PSoC4/PWM_1.c **** uint32 PWM_1_ReadPeriod(void)
 714:Generated_Source\PSoC4/PWM_1.c **** {
 979              		.loc 1 714 0
 980              		.cfi_startproc
 981              		@ args = 0, pretend = 0, frame = 0
 982              		@ frame_needed = 1, uses_anonymous_args = 0
 983 0000 80B5     		push	{r7, lr}
 984              		.cfi_def_cfa_offset 8
 985              		.cfi_offset 7, -8
 986              		.cfi_offset 14, -4
 987 0002 00AF     		add	r7, sp, #0
 988              		.cfi_def_cfa_register 7
 715:Generated_Source\PSoC4/PWM_1.c ****     return (PWM_1_PERIOD_REG & PWM_1_16BIT_MASK);
 989              		.loc 1 715 0
 990 0004 034B     		ldr	r3, .L56
 991 0006 1B68     		ldr	r3, [r3]
 992 0008 1B04     		lsls	r3, r3, #16
 993 000a 1B0C     		lsrs	r3, r3, #16
 716:Generated_Source\PSoC4/PWM_1.c **** }
 994              		.loc 1 716 0
ARM GAS  C:\Users\essele\AppData\Local\Temp\cc7wN8Yp.s 			page 31


 995 000c 1800     		movs	r0, r3
 996 000e BD46     		mov	sp, r7
 997              		@ sp needed
 998 0010 80BD     		pop	{r7, pc}
 999              	.L57:
 1000 0012 C046     		.align	2
 1001              	.L56:
 1002 0014 54012040 		.word	1075839316
 1003              		.cfi_endproc
 1004              	.LFE18:
 1005              		.size	PWM_1_ReadPeriod, .-PWM_1_ReadPeriod
 1006              		.section	.text.PWM_1_SetCompareSwap,"ax",%progbits
 1007              		.align	2
 1008              		.global	PWM_1_SetCompareSwap
 1009              		.code	16
 1010              		.thumb_func
 1011              		.type	PWM_1_SetCompareSwap, %function
 1012              	PWM_1_SetCompareSwap:
 1013              	.LFB19:
 717:Generated_Source\PSoC4/PWM_1.c **** 
 718:Generated_Source\PSoC4/PWM_1.c **** 
 719:Generated_Source\PSoC4/PWM_1.c **** /*******************************************************************************
 720:Generated_Source\PSoC4/PWM_1.c **** * Function Name: PWM_1_SetCompareSwap
 721:Generated_Source\PSoC4/PWM_1.c **** ********************************************************************************
 722:Generated_Source\PSoC4/PWM_1.c **** *
 723:Generated_Source\PSoC4/PWM_1.c **** * Summary:
 724:Generated_Source\PSoC4/PWM_1.c **** *  Writes the register that controls whether the compare registers are
 725:Generated_Source\PSoC4/PWM_1.c **** *  swapped. When enabled in the Timer/Counter mode(without capture) the swap
 726:Generated_Source\PSoC4/PWM_1.c **** *  occurs at a TC event. In the PWM mode the swap occurs at the next TC event
 727:Generated_Source\PSoC4/PWM_1.c **** *  following a hardware switch event.
 728:Generated_Source\PSoC4/PWM_1.c **** *
 729:Generated_Source\PSoC4/PWM_1.c **** * Parameters:
 730:Generated_Source\PSoC4/PWM_1.c **** *  swapEnable
 731:Generated_Source\PSoC4/PWM_1.c **** *   Values:
 732:Generated_Source\PSoC4/PWM_1.c **** *     - 0 - Disable swap
 733:Generated_Source\PSoC4/PWM_1.c **** *     - 1 - Enable swap
 734:Generated_Source\PSoC4/PWM_1.c **** *
 735:Generated_Source\PSoC4/PWM_1.c **** * Return:
 736:Generated_Source\PSoC4/PWM_1.c **** *  None
 737:Generated_Source\PSoC4/PWM_1.c **** *
 738:Generated_Source\PSoC4/PWM_1.c **** *******************************************************************************/
 739:Generated_Source\PSoC4/PWM_1.c **** void PWM_1_SetCompareSwap(uint32 swapEnable)
 740:Generated_Source\PSoC4/PWM_1.c **** {
 1014              		.loc 1 740 0
 1015              		.cfi_startproc
 1016              		@ args = 0, pretend = 0, frame = 16
 1017              		@ frame_needed = 1, uses_anonymous_args = 0
 1018 0000 90B5     		push	{r4, r7, lr}
 1019              		.cfi_def_cfa_offset 12
 1020              		.cfi_offset 4, -12
 1021              		.cfi_offset 7, -8
 1022              		.cfi_offset 14, -4
 1023 0002 85B0     		sub	sp, sp, #20
 1024              		.cfi_def_cfa_offset 32
 1025 0004 00AF     		add	r7, sp, #0
 1026              		.cfi_def_cfa_register 7
 1027 0006 7860     		str	r0, [r7, #4]
ARM GAS  C:\Users\essele\AppData\Local\Temp\cc7wN8Yp.s 			page 32


 741:Generated_Source\PSoC4/PWM_1.c ****     uint8 enableInterrupts;
 742:Generated_Source\PSoC4/PWM_1.c **** 
 743:Generated_Source\PSoC4/PWM_1.c ****     enableInterrupts = CyEnterCriticalSection();
 1028              		.loc 1 743 0
 1029 0008 0F23     		movs	r3, #15
 1030 000a FC18     		adds	r4, r7, r3
 1031 000c FFF7FEFF 		bl	CyEnterCriticalSection
 1032 0010 0300     		movs	r3, r0
 1033 0012 2370     		strb	r3, [r4]
 744:Generated_Source\PSoC4/PWM_1.c **** 
 745:Generated_Source\PSoC4/PWM_1.c ****     PWM_1_CONTROL_REG &= (uint32)~PWM_1_RELOAD_CC_MASK;
 1034              		.loc 1 745 0
 1035 0014 0B4B     		ldr	r3, .L59
 1036 0016 0B4A     		ldr	r2, .L59
 1037 0018 1268     		ldr	r2, [r2]
 1038 001a 0121     		movs	r1, #1
 1039 001c 8A43     		bics	r2, r1
 1040 001e 1A60     		str	r2, [r3]
 746:Generated_Source\PSoC4/PWM_1.c ****     PWM_1_CONTROL_REG |= (swapEnable & PWM_1_1BIT_MASK);
 1041              		.loc 1 746 0
 1042 0020 084B     		ldr	r3, .L59
 1043 0022 084A     		ldr	r2, .L59
 1044 0024 1168     		ldr	r1, [r2]
 1045 0026 7A68     		ldr	r2, [r7, #4]
 1046 0028 0120     		movs	r0, #1
 1047 002a 0240     		ands	r2, r0
 1048 002c 0A43     		orrs	r2, r1
 1049 002e 1A60     		str	r2, [r3]
 747:Generated_Source\PSoC4/PWM_1.c **** 
 748:Generated_Source\PSoC4/PWM_1.c ****     CyExitCriticalSection(enableInterrupts);
 1050              		.loc 1 748 0
 1051 0030 0F23     		movs	r3, #15
 1052 0032 FB18     		adds	r3, r7, r3
 1053 0034 1B78     		ldrb	r3, [r3]
 1054 0036 1800     		movs	r0, r3
 1055 0038 FFF7FEFF 		bl	CyExitCriticalSection
 749:Generated_Source\PSoC4/PWM_1.c **** }
 1056              		.loc 1 749 0
 1057 003c C046     		nop
 1058 003e BD46     		mov	sp, r7
 1059 0040 05B0     		add	sp, sp, #20
 1060              		@ sp needed
 1061 0042 90BD     		pop	{r4, r7, pc}
 1062              	.L60:
 1063              		.align	2
 1064              	.L59:
 1065 0044 40012040 		.word	1075839296
 1066              		.cfi_endproc
 1067              	.LFE19:
 1068              		.size	PWM_1_SetCompareSwap, .-PWM_1_SetCompareSwap
 1069              		.section	.text.PWM_1_WritePeriodBuf,"ax",%progbits
 1070              		.align	2
 1071              		.global	PWM_1_WritePeriodBuf
 1072              		.code	16
 1073              		.thumb_func
 1074              		.type	PWM_1_WritePeriodBuf, %function
 1075              	PWM_1_WritePeriodBuf:
ARM GAS  C:\Users\essele\AppData\Local\Temp\cc7wN8Yp.s 			page 33


 1076              	.LFB20:
 750:Generated_Source\PSoC4/PWM_1.c **** 
 751:Generated_Source\PSoC4/PWM_1.c **** 
 752:Generated_Source\PSoC4/PWM_1.c **** /*******************************************************************************
 753:Generated_Source\PSoC4/PWM_1.c **** * Function Name: PWM_1_WritePeriodBuf
 754:Generated_Source\PSoC4/PWM_1.c **** ********************************************************************************
 755:Generated_Source\PSoC4/PWM_1.c **** *
 756:Generated_Source\PSoC4/PWM_1.c **** * Summary:
 757:Generated_Source\PSoC4/PWM_1.c **** *  Writes the 16 bit period buf register with the new period value.
 758:Generated_Source\PSoC4/PWM_1.c **** *
 759:Generated_Source\PSoC4/PWM_1.c **** * Parameters:
 760:Generated_Source\PSoC4/PWM_1.c **** *  periodBuf: Period value
 761:Generated_Source\PSoC4/PWM_1.c **** *
 762:Generated_Source\PSoC4/PWM_1.c **** * Return:
 763:Generated_Source\PSoC4/PWM_1.c **** *  None
 764:Generated_Source\PSoC4/PWM_1.c **** *
 765:Generated_Source\PSoC4/PWM_1.c **** *******************************************************************************/
 766:Generated_Source\PSoC4/PWM_1.c **** void PWM_1_WritePeriodBuf(uint32 periodBuf)
 767:Generated_Source\PSoC4/PWM_1.c **** {
 1077              		.loc 1 767 0
 1078              		.cfi_startproc
 1079              		@ args = 0, pretend = 0, frame = 8
 1080              		@ frame_needed = 1, uses_anonymous_args = 0
 1081 0000 80B5     		push	{r7, lr}
 1082              		.cfi_def_cfa_offset 8
 1083              		.cfi_offset 7, -8
 1084              		.cfi_offset 14, -4
 1085 0002 82B0     		sub	sp, sp, #8
 1086              		.cfi_def_cfa_offset 16
 1087 0004 00AF     		add	r7, sp, #0
 1088              		.cfi_def_cfa_register 7
 1089 0006 7860     		str	r0, [r7, #4]
 768:Generated_Source\PSoC4/PWM_1.c ****     PWM_1_PERIOD_BUF_REG = (periodBuf & PWM_1_16BIT_MASK);
 1090              		.loc 1 768 0
 1091 0008 044B     		ldr	r3, .L62
 1092 000a 7A68     		ldr	r2, [r7, #4]
 1093 000c 1204     		lsls	r2, r2, #16
 1094 000e 120C     		lsrs	r2, r2, #16
 1095 0010 1A60     		str	r2, [r3]
 769:Generated_Source\PSoC4/PWM_1.c **** }
 1096              		.loc 1 769 0
 1097 0012 C046     		nop
 1098 0014 BD46     		mov	sp, r7
 1099 0016 02B0     		add	sp, sp, #8
 1100              		@ sp needed
 1101 0018 80BD     		pop	{r7, pc}
 1102              	.L63:
 1103 001a C046     		.align	2
 1104              	.L62:
 1105 001c 58012040 		.word	1075839320
 1106              		.cfi_endproc
 1107              	.LFE20:
 1108              		.size	PWM_1_WritePeriodBuf, .-PWM_1_WritePeriodBuf
 1109              		.section	.text.PWM_1_ReadPeriodBuf,"ax",%progbits
 1110              		.align	2
 1111              		.global	PWM_1_ReadPeriodBuf
 1112              		.code	16
ARM GAS  C:\Users\essele\AppData\Local\Temp\cc7wN8Yp.s 			page 34


 1113              		.thumb_func
 1114              		.type	PWM_1_ReadPeriodBuf, %function
 1115              	PWM_1_ReadPeriodBuf:
 1116              	.LFB21:
 770:Generated_Source\PSoC4/PWM_1.c **** 
 771:Generated_Source\PSoC4/PWM_1.c **** 
 772:Generated_Source\PSoC4/PWM_1.c **** /*******************************************************************************
 773:Generated_Source\PSoC4/PWM_1.c **** * Function Name: PWM_1_ReadPeriodBuf
 774:Generated_Source\PSoC4/PWM_1.c **** ********************************************************************************
 775:Generated_Source\PSoC4/PWM_1.c **** *
 776:Generated_Source\PSoC4/PWM_1.c **** * Summary:
 777:Generated_Source\PSoC4/PWM_1.c **** *  Reads the 16 bit period buf register.
 778:Generated_Source\PSoC4/PWM_1.c **** *
 779:Generated_Source\PSoC4/PWM_1.c **** * Parameters:
 780:Generated_Source\PSoC4/PWM_1.c **** *  None
 781:Generated_Source\PSoC4/PWM_1.c **** *
 782:Generated_Source\PSoC4/PWM_1.c **** * Return:
 783:Generated_Source\PSoC4/PWM_1.c **** *  Period value
 784:Generated_Source\PSoC4/PWM_1.c **** *
 785:Generated_Source\PSoC4/PWM_1.c **** *******************************************************************************/
 786:Generated_Source\PSoC4/PWM_1.c **** uint32 PWM_1_ReadPeriodBuf(void)
 787:Generated_Source\PSoC4/PWM_1.c **** {
 1117              		.loc 1 787 0
 1118              		.cfi_startproc
 1119              		@ args = 0, pretend = 0, frame = 0
 1120              		@ frame_needed = 1, uses_anonymous_args = 0
 1121 0000 80B5     		push	{r7, lr}
 1122              		.cfi_def_cfa_offset 8
 1123              		.cfi_offset 7, -8
 1124              		.cfi_offset 14, -4
 1125 0002 00AF     		add	r7, sp, #0
 1126              		.cfi_def_cfa_register 7
 788:Generated_Source\PSoC4/PWM_1.c ****     return (PWM_1_PERIOD_BUF_REG & PWM_1_16BIT_MASK);
 1127              		.loc 1 788 0
 1128 0004 034B     		ldr	r3, .L66
 1129 0006 1B68     		ldr	r3, [r3]
 1130 0008 1B04     		lsls	r3, r3, #16
 1131 000a 1B0C     		lsrs	r3, r3, #16
 789:Generated_Source\PSoC4/PWM_1.c **** }
 1132              		.loc 1 789 0
 1133 000c 1800     		movs	r0, r3
 1134 000e BD46     		mov	sp, r7
 1135              		@ sp needed
 1136 0010 80BD     		pop	{r7, pc}
 1137              	.L67:
 1138 0012 C046     		.align	2
 1139              	.L66:
 1140 0014 58012040 		.word	1075839320
 1141              		.cfi_endproc
 1142              	.LFE21:
 1143              		.size	PWM_1_ReadPeriodBuf, .-PWM_1_ReadPeriodBuf
 1144              		.section	.text.PWM_1_SetPeriodSwap,"ax",%progbits
 1145              		.align	2
 1146              		.global	PWM_1_SetPeriodSwap
 1147              		.code	16
 1148              		.thumb_func
 1149              		.type	PWM_1_SetPeriodSwap, %function
ARM GAS  C:\Users\essele\AppData\Local\Temp\cc7wN8Yp.s 			page 35


 1150              	PWM_1_SetPeriodSwap:
 1151              	.LFB22:
 790:Generated_Source\PSoC4/PWM_1.c **** 
 791:Generated_Source\PSoC4/PWM_1.c **** 
 792:Generated_Source\PSoC4/PWM_1.c **** /*******************************************************************************
 793:Generated_Source\PSoC4/PWM_1.c **** * Function Name: PWM_1_SetPeriodSwap
 794:Generated_Source\PSoC4/PWM_1.c **** ********************************************************************************
 795:Generated_Source\PSoC4/PWM_1.c **** *
 796:Generated_Source\PSoC4/PWM_1.c **** * Summary:
 797:Generated_Source\PSoC4/PWM_1.c **** *  Writes the register that controls whether the period registers are
 798:Generated_Source\PSoC4/PWM_1.c **** *  swapped. When enabled in Timer/Counter mode the swap occurs at a TC event.
 799:Generated_Source\PSoC4/PWM_1.c **** *  In the PWM mode the swap occurs at the next TC event following a hardware
 800:Generated_Source\PSoC4/PWM_1.c **** *  switch event.
 801:Generated_Source\PSoC4/PWM_1.c **** *
 802:Generated_Source\PSoC4/PWM_1.c **** * Parameters:
 803:Generated_Source\PSoC4/PWM_1.c **** *  swapEnable
 804:Generated_Source\PSoC4/PWM_1.c **** *   Values:
 805:Generated_Source\PSoC4/PWM_1.c **** *     - 0 - Disable swap
 806:Generated_Source\PSoC4/PWM_1.c **** *     - 1 - Enable swap
 807:Generated_Source\PSoC4/PWM_1.c **** *
 808:Generated_Source\PSoC4/PWM_1.c **** * Return:
 809:Generated_Source\PSoC4/PWM_1.c **** *  None
 810:Generated_Source\PSoC4/PWM_1.c **** *
 811:Generated_Source\PSoC4/PWM_1.c **** *******************************************************************************/
 812:Generated_Source\PSoC4/PWM_1.c **** void PWM_1_SetPeriodSwap(uint32 swapEnable)
 813:Generated_Source\PSoC4/PWM_1.c **** {
 1152              		.loc 1 813 0
 1153              		.cfi_startproc
 1154              		@ args = 0, pretend = 0, frame = 16
 1155              		@ frame_needed = 1, uses_anonymous_args = 0
 1156 0000 90B5     		push	{r4, r7, lr}
 1157              		.cfi_def_cfa_offset 12
 1158              		.cfi_offset 4, -12
 1159              		.cfi_offset 7, -8
 1160              		.cfi_offset 14, -4
 1161 0002 85B0     		sub	sp, sp, #20
 1162              		.cfi_def_cfa_offset 32
 1163 0004 00AF     		add	r7, sp, #0
 1164              		.cfi_def_cfa_register 7
 1165 0006 7860     		str	r0, [r7, #4]
 814:Generated_Source\PSoC4/PWM_1.c ****     uint8 enableInterrupts;
 815:Generated_Source\PSoC4/PWM_1.c **** 
 816:Generated_Source\PSoC4/PWM_1.c ****     enableInterrupts = CyEnterCriticalSection();
 1166              		.loc 1 816 0
 1167 0008 0F23     		movs	r3, #15
 1168 000a FC18     		adds	r4, r7, r3
 1169 000c FFF7FEFF 		bl	CyEnterCriticalSection
 1170 0010 0300     		movs	r3, r0
 1171 0012 2370     		strb	r3, [r4]
 817:Generated_Source\PSoC4/PWM_1.c **** 
 818:Generated_Source\PSoC4/PWM_1.c ****     PWM_1_CONTROL_REG &= (uint32)~PWM_1_RELOAD_PERIOD_MASK;
 1172              		.loc 1 818 0
 1173 0014 0C4B     		ldr	r3, .L69
 1174 0016 0C4A     		ldr	r2, .L69
 1175 0018 1268     		ldr	r2, [r2]
 1176 001a 0221     		movs	r1, #2
 1177 001c 8A43     		bics	r2, r1
ARM GAS  C:\Users\essele\AppData\Local\Temp\cc7wN8Yp.s 			page 36


 1178 001e 1A60     		str	r2, [r3]
 819:Generated_Source\PSoC4/PWM_1.c ****     PWM_1_CONTROL_REG |= ((uint32)((swapEnable & PWM_1_1BIT_MASK) <<
 1179              		.loc 1 819 0
 1180 0020 094B     		ldr	r3, .L69
 1181 0022 094A     		ldr	r2, .L69
 1182 0024 1168     		ldr	r1, [r2]
 1183 0026 7A68     		ldr	r2, [r7, #4]
 1184 0028 5200     		lsls	r2, r2, #1
 1185 002a 0220     		movs	r0, #2
 1186 002c 0240     		ands	r2, r0
 1187 002e 0A43     		orrs	r2, r1
 1188 0030 1A60     		str	r2, [r3]
 820:Generated_Source\PSoC4/PWM_1.c ****                                                             PWM_1_RELOAD_PERIOD_SHIFT));
 821:Generated_Source\PSoC4/PWM_1.c **** 
 822:Generated_Source\PSoC4/PWM_1.c ****     CyExitCriticalSection(enableInterrupts);
 1189              		.loc 1 822 0
 1190 0032 0F23     		movs	r3, #15
 1191 0034 FB18     		adds	r3, r7, r3
 1192 0036 1B78     		ldrb	r3, [r3]
 1193 0038 1800     		movs	r0, r3
 1194 003a FFF7FEFF 		bl	CyExitCriticalSection
 823:Generated_Source\PSoC4/PWM_1.c **** }
 1195              		.loc 1 823 0
 1196 003e C046     		nop
 1197 0040 BD46     		mov	sp, r7
 1198 0042 05B0     		add	sp, sp, #20
 1199              		@ sp needed
 1200 0044 90BD     		pop	{r4, r7, pc}
 1201              	.L70:
 1202 0046 C046     		.align	2
 1203              	.L69:
 1204 0048 40012040 		.word	1075839296
 1205              		.cfi_endproc
 1206              	.LFE22:
 1207              		.size	PWM_1_SetPeriodSwap, .-PWM_1_SetPeriodSwap
 1208              		.section	.text.PWM_1_WriteCompare,"ax",%progbits
 1209              		.align	2
 1210              		.global	PWM_1_WriteCompare
 1211              		.code	16
 1212              		.thumb_func
 1213              		.type	PWM_1_WriteCompare, %function
 1214              	PWM_1_WriteCompare:
 1215              	.LFB23:
 824:Generated_Source\PSoC4/PWM_1.c **** 
 825:Generated_Source\PSoC4/PWM_1.c **** 
 826:Generated_Source\PSoC4/PWM_1.c **** /*******************************************************************************
 827:Generated_Source\PSoC4/PWM_1.c **** * Function Name: PWM_1_WriteCompare
 828:Generated_Source\PSoC4/PWM_1.c **** ********************************************************************************
 829:Generated_Source\PSoC4/PWM_1.c **** *
 830:Generated_Source\PSoC4/PWM_1.c **** * Summary:
 831:Generated_Source\PSoC4/PWM_1.c **** *  Writes the 16 bit compare register with the new compare value. Not
 832:Generated_Source\PSoC4/PWM_1.c **** *  applicable for Timer/Counter with Capture or in Quadrature Decoder modes.
 833:Generated_Source\PSoC4/PWM_1.c **** *
 834:Generated_Source\PSoC4/PWM_1.c **** * Parameters:
 835:Generated_Source\PSoC4/PWM_1.c **** *  compare: Compare value
 836:Generated_Source\PSoC4/PWM_1.c **** *
 837:Generated_Source\PSoC4/PWM_1.c **** * Return:
ARM GAS  C:\Users\essele\AppData\Local\Temp\cc7wN8Yp.s 			page 37


 838:Generated_Source\PSoC4/PWM_1.c **** *  None
 839:Generated_Source\PSoC4/PWM_1.c **** *
 840:Generated_Source\PSoC4/PWM_1.c **** * Note:
 841:Generated_Source\PSoC4/PWM_1.c **** *  It is not recommended to use the value equal to "0" or equal to 
 842:Generated_Source\PSoC4/PWM_1.c **** *  "period value" in Center or Asymmetric align PWM modes on the 
 843:Generated_Source\PSoC4/PWM_1.c **** *  PSoC 4100/PSoC 4200 devices.
 844:Generated_Source\PSoC4/PWM_1.c **** *  PSoC 4000 devices write the 16 bit compare register with the decremented 
 845:Generated_Source\PSoC4/PWM_1.c **** *  compare value in the Up counting mode (except 0x0u), and the incremented 
 846:Generated_Source\PSoC4/PWM_1.c **** *  compare value in the Down counting mode (except 0xFFFFu).
 847:Generated_Source\PSoC4/PWM_1.c **** *
 848:Generated_Source\PSoC4/PWM_1.c **** *******************************************************************************/
 849:Generated_Source\PSoC4/PWM_1.c **** void PWM_1_WriteCompare(uint32 compare)
 850:Generated_Source\PSoC4/PWM_1.c **** {
 1216              		.loc 1 850 0
 1217              		.cfi_startproc
 1218              		@ args = 0, pretend = 0, frame = 8
 1219              		@ frame_needed = 1, uses_anonymous_args = 0
 1220 0000 80B5     		push	{r7, lr}
 1221              		.cfi_def_cfa_offset 8
 1222              		.cfi_offset 7, -8
 1223              		.cfi_offset 14, -4
 1224 0002 82B0     		sub	sp, sp, #8
 1225              		.cfi_def_cfa_offset 16
 1226 0004 00AF     		add	r7, sp, #0
 1227              		.cfi_def_cfa_register 7
 1228 0006 7860     		str	r0, [r7, #4]
 851:Generated_Source\PSoC4/PWM_1.c ****     #if (PWM_1_CY_TCPWM_4000)
 852:Generated_Source\PSoC4/PWM_1.c ****         uint32 currentMode;
 853:Generated_Source\PSoC4/PWM_1.c ****     #endif /* (PWM_1_CY_TCPWM_4000) */
 854:Generated_Source\PSoC4/PWM_1.c **** 
 855:Generated_Source\PSoC4/PWM_1.c ****     #if (PWM_1_CY_TCPWM_4000)
 856:Generated_Source\PSoC4/PWM_1.c ****         currentMode = ((PWM_1_CONTROL_REG & PWM_1_UPDOWN_MASK) >> PWM_1_UPDOWN_SHIFT);
 857:Generated_Source\PSoC4/PWM_1.c **** 
 858:Generated_Source\PSoC4/PWM_1.c ****         if (((uint32)PWM_1__COUNT_DOWN == currentMode) && (0xFFFFu != compare))
 859:Generated_Source\PSoC4/PWM_1.c ****         {
 860:Generated_Source\PSoC4/PWM_1.c ****             compare++;
 861:Generated_Source\PSoC4/PWM_1.c ****         }
 862:Generated_Source\PSoC4/PWM_1.c ****         else if (((uint32)PWM_1__COUNT_UP == currentMode) && (0u != compare))
 863:Generated_Source\PSoC4/PWM_1.c ****         {
 864:Generated_Source\PSoC4/PWM_1.c ****             compare--;
 865:Generated_Source\PSoC4/PWM_1.c ****         }
 866:Generated_Source\PSoC4/PWM_1.c ****         else
 867:Generated_Source\PSoC4/PWM_1.c ****         {
 868:Generated_Source\PSoC4/PWM_1.c ****         }
 869:Generated_Source\PSoC4/PWM_1.c ****         
 870:Generated_Source\PSoC4/PWM_1.c ****     
 871:Generated_Source\PSoC4/PWM_1.c ****     #endif /* (PWM_1_CY_TCPWM_4000) */
 872:Generated_Source\PSoC4/PWM_1.c ****     
 873:Generated_Source\PSoC4/PWM_1.c ****     PWM_1_COMP_CAP_REG = (compare & PWM_1_16BIT_MASK);
 1229              		.loc 1 873 0
 1230 0008 044B     		ldr	r3, .L72
 1231 000a 7A68     		ldr	r2, [r7, #4]
 1232 000c 1204     		lsls	r2, r2, #16
 1233 000e 120C     		lsrs	r2, r2, #16
 1234 0010 1A60     		str	r2, [r3]
 874:Generated_Source\PSoC4/PWM_1.c **** }
 1235              		.loc 1 874 0
ARM GAS  C:\Users\essele\AppData\Local\Temp\cc7wN8Yp.s 			page 38


 1236 0012 C046     		nop
 1237 0014 BD46     		mov	sp, r7
 1238 0016 02B0     		add	sp, sp, #8
 1239              		@ sp needed
 1240 0018 80BD     		pop	{r7, pc}
 1241              	.L73:
 1242 001a C046     		.align	2
 1243              	.L72:
 1244 001c 4C012040 		.word	1075839308
 1245              		.cfi_endproc
 1246              	.LFE23:
 1247              		.size	PWM_1_WriteCompare, .-PWM_1_WriteCompare
 1248              		.section	.text.PWM_1_ReadCompare,"ax",%progbits
 1249              		.align	2
 1250              		.global	PWM_1_ReadCompare
 1251              		.code	16
 1252              		.thumb_func
 1253              		.type	PWM_1_ReadCompare, %function
 1254              	PWM_1_ReadCompare:
 1255              	.LFB24:
 875:Generated_Source\PSoC4/PWM_1.c **** 
 876:Generated_Source\PSoC4/PWM_1.c **** 
 877:Generated_Source\PSoC4/PWM_1.c **** /*******************************************************************************
 878:Generated_Source\PSoC4/PWM_1.c **** * Function Name: PWM_1_ReadCompare
 879:Generated_Source\PSoC4/PWM_1.c **** ********************************************************************************
 880:Generated_Source\PSoC4/PWM_1.c **** *
 881:Generated_Source\PSoC4/PWM_1.c **** * Summary:
 882:Generated_Source\PSoC4/PWM_1.c **** *  Reads the compare register. Not applicable for Timer/Counter with Capture
 883:Generated_Source\PSoC4/PWM_1.c **** *  or in Quadrature Decoder modes.
 884:Generated_Source\PSoC4/PWM_1.c **** *  PSoC 4000 devices read the incremented compare register value in the 
 885:Generated_Source\PSoC4/PWM_1.c **** *  Up counting mode (except 0xFFFFu), and the decremented value in the 
 886:Generated_Source\PSoC4/PWM_1.c **** *  Down counting mode (except 0x0u).
 887:Generated_Source\PSoC4/PWM_1.c **** *
 888:Generated_Source\PSoC4/PWM_1.c **** * Parameters:
 889:Generated_Source\PSoC4/PWM_1.c **** *  None
 890:Generated_Source\PSoC4/PWM_1.c **** *
 891:Generated_Source\PSoC4/PWM_1.c **** * Return:
 892:Generated_Source\PSoC4/PWM_1.c **** *  Compare value
 893:Generated_Source\PSoC4/PWM_1.c **** *
 894:Generated_Source\PSoC4/PWM_1.c **** * Note:
 895:Generated_Source\PSoC4/PWM_1.c **** *  PSoC 4000 devices read the incremented compare register value in the 
 896:Generated_Source\PSoC4/PWM_1.c **** *  Up counting mode (except 0xFFFFu), and the decremented value in the 
 897:Generated_Source\PSoC4/PWM_1.c **** *  Down counting mode (except 0x0u).
 898:Generated_Source\PSoC4/PWM_1.c **** *
 899:Generated_Source\PSoC4/PWM_1.c **** *******************************************************************************/
 900:Generated_Source\PSoC4/PWM_1.c **** uint32 PWM_1_ReadCompare(void)
 901:Generated_Source\PSoC4/PWM_1.c **** {
 1256              		.loc 1 901 0
 1257              		.cfi_startproc
 1258              		@ args = 0, pretend = 0, frame = 0
 1259              		@ frame_needed = 1, uses_anonymous_args = 0
 1260 0000 80B5     		push	{r7, lr}
 1261              		.cfi_def_cfa_offset 8
 1262              		.cfi_offset 7, -8
 1263              		.cfi_offset 14, -4
 1264 0002 00AF     		add	r7, sp, #0
 1265              		.cfi_def_cfa_register 7
ARM GAS  C:\Users\essele\AppData\Local\Temp\cc7wN8Yp.s 			page 39


 902:Generated_Source\PSoC4/PWM_1.c ****     #if (PWM_1_CY_TCPWM_4000)
 903:Generated_Source\PSoC4/PWM_1.c ****         uint32 currentMode;
 904:Generated_Source\PSoC4/PWM_1.c ****         uint32 regVal;
 905:Generated_Source\PSoC4/PWM_1.c ****     #endif /* (PWM_1_CY_TCPWM_4000) */
 906:Generated_Source\PSoC4/PWM_1.c **** 
 907:Generated_Source\PSoC4/PWM_1.c ****     #if (PWM_1_CY_TCPWM_4000)
 908:Generated_Source\PSoC4/PWM_1.c ****         currentMode = ((PWM_1_CONTROL_REG & PWM_1_UPDOWN_MASK) >> PWM_1_UPDOWN_SHIFT);
 909:Generated_Source\PSoC4/PWM_1.c ****         
 910:Generated_Source\PSoC4/PWM_1.c ****         regVal = PWM_1_COMP_CAP_REG;
 911:Generated_Source\PSoC4/PWM_1.c ****         
 912:Generated_Source\PSoC4/PWM_1.c ****         if (((uint32)PWM_1__COUNT_DOWN == currentMode) && (0u != regVal))
 913:Generated_Source\PSoC4/PWM_1.c ****         {
 914:Generated_Source\PSoC4/PWM_1.c ****             regVal--;
 915:Generated_Source\PSoC4/PWM_1.c ****         }
 916:Generated_Source\PSoC4/PWM_1.c ****         else if (((uint32)PWM_1__COUNT_UP == currentMode) && (0xFFFFu != regVal))
 917:Generated_Source\PSoC4/PWM_1.c ****         {
 918:Generated_Source\PSoC4/PWM_1.c ****             regVal++;
 919:Generated_Source\PSoC4/PWM_1.c ****         }
 920:Generated_Source\PSoC4/PWM_1.c ****         else
 921:Generated_Source\PSoC4/PWM_1.c ****         {
 922:Generated_Source\PSoC4/PWM_1.c ****         }
 923:Generated_Source\PSoC4/PWM_1.c **** 
 924:Generated_Source\PSoC4/PWM_1.c ****         return (regVal & PWM_1_16BIT_MASK);
 925:Generated_Source\PSoC4/PWM_1.c ****     #else
 926:Generated_Source\PSoC4/PWM_1.c ****         return (PWM_1_COMP_CAP_REG & PWM_1_16BIT_MASK);
 1266              		.loc 1 926 0
 1267 0004 034B     		ldr	r3, .L76
 1268 0006 1B68     		ldr	r3, [r3]
 1269 0008 1B04     		lsls	r3, r3, #16
 1270 000a 1B0C     		lsrs	r3, r3, #16
 927:Generated_Source\PSoC4/PWM_1.c ****     #endif /* (PWM_1_CY_TCPWM_4000) */
 928:Generated_Source\PSoC4/PWM_1.c **** }
 1271              		.loc 1 928 0
 1272 000c 1800     		movs	r0, r3
 1273 000e BD46     		mov	sp, r7
 1274              		@ sp needed
 1275 0010 80BD     		pop	{r7, pc}
 1276              	.L77:
 1277 0012 C046     		.align	2
 1278              	.L76:
 1279 0014 4C012040 		.word	1075839308
 1280              		.cfi_endproc
 1281              	.LFE24:
 1282              		.size	PWM_1_ReadCompare, .-PWM_1_ReadCompare
 1283              		.section	.text.PWM_1_WriteCompareBuf,"ax",%progbits
 1284              		.align	2
 1285              		.global	PWM_1_WriteCompareBuf
 1286              		.code	16
 1287              		.thumb_func
 1288              		.type	PWM_1_WriteCompareBuf, %function
 1289              	PWM_1_WriteCompareBuf:
 1290              	.LFB25:
 929:Generated_Source\PSoC4/PWM_1.c **** 
 930:Generated_Source\PSoC4/PWM_1.c **** 
 931:Generated_Source\PSoC4/PWM_1.c **** /*******************************************************************************
 932:Generated_Source\PSoC4/PWM_1.c **** * Function Name: PWM_1_WriteCompareBuf
 933:Generated_Source\PSoC4/PWM_1.c **** ********************************************************************************
ARM GAS  C:\Users\essele\AppData\Local\Temp\cc7wN8Yp.s 			page 40


 934:Generated_Source\PSoC4/PWM_1.c **** *
 935:Generated_Source\PSoC4/PWM_1.c **** * Summary:
 936:Generated_Source\PSoC4/PWM_1.c **** *  Writes the 16 bit compare buffer register with the new compare value. Not
 937:Generated_Source\PSoC4/PWM_1.c **** *  applicable for Timer/Counter with Capture or in Quadrature Decoder modes.
 938:Generated_Source\PSoC4/PWM_1.c **** *
 939:Generated_Source\PSoC4/PWM_1.c **** * Parameters:
 940:Generated_Source\PSoC4/PWM_1.c **** *  compareBuf: Compare value
 941:Generated_Source\PSoC4/PWM_1.c **** *
 942:Generated_Source\PSoC4/PWM_1.c **** * Return:
 943:Generated_Source\PSoC4/PWM_1.c **** *  None
 944:Generated_Source\PSoC4/PWM_1.c **** *
 945:Generated_Source\PSoC4/PWM_1.c **** * Note:
 946:Generated_Source\PSoC4/PWM_1.c **** *  It is not recommended to use the value equal to "0" or equal to 
 947:Generated_Source\PSoC4/PWM_1.c **** *  "period value" in Center or Asymmetric align PWM modes on the 
 948:Generated_Source\PSoC4/PWM_1.c **** *  PSoC 4100/PSoC 4200 devices.
 949:Generated_Source\PSoC4/PWM_1.c **** *  PSoC 4000 devices write the 16 bit compare register with the decremented 
 950:Generated_Source\PSoC4/PWM_1.c **** *  compare value in the Up counting mode (except 0x0u), and the incremented 
 951:Generated_Source\PSoC4/PWM_1.c **** *  compare value in the Down counting mode (except 0xFFFFu).
 952:Generated_Source\PSoC4/PWM_1.c **** *
 953:Generated_Source\PSoC4/PWM_1.c **** *******************************************************************************/
 954:Generated_Source\PSoC4/PWM_1.c **** void PWM_1_WriteCompareBuf(uint32 compareBuf)
 955:Generated_Source\PSoC4/PWM_1.c **** {
 1291              		.loc 1 955 0
 1292              		.cfi_startproc
 1293              		@ args = 0, pretend = 0, frame = 8
 1294              		@ frame_needed = 1, uses_anonymous_args = 0
 1295 0000 80B5     		push	{r7, lr}
 1296              		.cfi_def_cfa_offset 8
 1297              		.cfi_offset 7, -8
 1298              		.cfi_offset 14, -4
 1299 0002 82B0     		sub	sp, sp, #8
 1300              		.cfi_def_cfa_offset 16
 1301 0004 00AF     		add	r7, sp, #0
 1302              		.cfi_def_cfa_register 7
 1303 0006 7860     		str	r0, [r7, #4]
 956:Generated_Source\PSoC4/PWM_1.c ****     #if (PWM_1_CY_TCPWM_4000)
 957:Generated_Source\PSoC4/PWM_1.c ****         uint32 currentMode;
 958:Generated_Source\PSoC4/PWM_1.c ****     #endif /* (PWM_1_CY_TCPWM_4000) */
 959:Generated_Source\PSoC4/PWM_1.c **** 
 960:Generated_Source\PSoC4/PWM_1.c ****     #if (PWM_1_CY_TCPWM_4000)
 961:Generated_Source\PSoC4/PWM_1.c ****         currentMode = ((PWM_1_CONTROL_REG & PWM_1_UPDOWN_MASK) >> PWM_1_UPDOWN_SHIFT);
 962:Generated_Source\PSoC4/PWM_1.c **** 
 963:Generated_Source\PSoC4/PWM_1.c ****         if (((uint32)PWM_1__COUNT_DOWN == currentMode) && (0xFFFFu != compareBuf))
 964:Generated_Source\PSoC4/PWM_1.c ****         {
 965:Generated_Source\PSoC4/PWM_1.c ****             compareBuf++;
 966:Generated_Source\PSoC4/PWM_1.c ****         }
 967:Generated_Source\PSoC4/PWM_1.c ****         else if (((uint32)PWM_1__COUNT_UP == currentMode) && (0u != compareBuf))
 968:Generated_Source\PSoC4/PWM_1.c ****         {
 969:Generated_Source\PSoC4/PWM_1.c ****             compareBuf --;
 970:Generated_Source\PSoC4/PWM_1.c ****         }
 971:Generated_Source\PSoC4/PWM_1.c ****         else
 972:Generated_Source\PSoC4/PWM_1.c ****         {
 973:Generated_Source\PSoC4/PWM_1.c ****         }
 974:Generated_Source\PSoC4/PWM_1.c ****     #endif /* (PWM_1_CY_TCPWM_4000) */
 975:Generated_Source\PSoC4/PWM_1.c ****     
 976:Generated_Source\PSoC4/PWM_1.c ****     PWM_1_COMP_CAP_BUF_REG = (compareBuf & PWM_1_16BIT_MASK);
 1304              		.loc 1 976 0
ARM GAS  C:\Users\essele\AppData\Local\Temp\cc7wN8Yp.s 			page 41


 1305 0008 044B     		ldr	r3, .L79
 1306 000a 7A68     		ldr	r2, [r7, #4]
 1307 000c 1204     		lsls	r2, r2, #16
 1308 000e 120C     		lsrs	r2, r2, #16
 1309 0010 1A60     		str	r2, [r3]
 977:Generated_Source\PSoC4/PWM_1.c **** }
 1310              		.loc 1 977 0
 1311 0012 C046     		nop
 1312 0014 BD46     		mov	sp, r7
 1313 0016 02B0     		add	sp, sp, #8
 1314              		@ sp needed
 1315 0018 80BD     		pop	{r7, pc}
 1316              	.L80:
 1317 001a C046     		.align	2
 1318              	.L79:
 1319 001c 50012040 		.word	1075839312
 1320              		.cfi_endproc
 1321              	.LFE25:
 1322              		.size	PWM_1_WriteCompareBuf, .-PWM_1_WriteCompareBuf
 1323              		.section	.text.PWM_1_ReadCompareBuf,"ax",%progbits
 1324              		.align	2
 1325              		.global	PWM_1_ReadCompareBuf
 1326              		.code	16
 1327              		.thumb_func
 1328              		.type	PWM_1_ReadCompareBuf, %function
 1329              	PWM_1_ReadCompareBuf:
 1330              	.LFB26:
 978:Generated_Source\PSoC4/PWM_1.c **** 
 979:Generated_Source\PSoC4/PWM_1.c **** 
 980:Generated_Source\PSoC4/PWM_1.c **** /*******************************************************************************
 981:Generated_Source\PSoC4/PWM_1.c **** * Function Name: PWM_1_ReadCompareBuf
 982:Generated_Source\PSoC4/PWM_1.c **** ********************************************************************************
 983:Generated_Source\PSoC4/PWM_1.c **** *
 984:Generated_Source\PSoC4/PWM_1.c **** * Summary:
 985:Generated_Source\PSoC4/PWM_1.c **** *  Reads the compare buffer register. Not applicable for Timer/Counter with
 986:Generated_Source\PSoC4/PWM_1.c **** *  Capture or in Quadrature Decoder modes.
 987:Generated_Source\PSoC4/PWM_1.c **** *
 988:Generated_Source\PSoC4/PWM_1.c **** * Parameters:
 989:Generated_Source\PSoC4/PWM_1.c **** *  None
 990:Generated_Source\PSoC4/PWM_1.c **** *
 991:Generated_Source\PSoC4/PWM_1.c **** * Return:
 992:Generated_Source\PSoC4/PWM_1.c **** *  Compare buffer value
 993:Generated_Source\PSoC4/PWM_1.c **** *
 994:Generated_Source\PSoC4/PWM_1.c **** * Note:
 995:Generated_Source\PSoC4/PWM_1.c **** *  PSoC 4000 devices read the incremented compare register value in the 
 996:Generated_Source\PSoC4/PWM_1.c **** *  Up counting mode (except 0xFFFFu), and the decremented value in the 
 997:Generated_Source\PSoC4/PWM_1.c **** *  Down counting mode (except 0x0u).
 998:Generated_Source\PSoC4/PWM_1.c **** *
 999:Generated_Source\PSoC4/PWM_1.c **** *******************************************************************************/
1000:Generated_Source\PSoC4/PWM_1.c **** uint32 PWM_1_ReadCompareBuf(void)
1001:Generated_Source\PSoC4/PWM_1.c **** {
 1331              		.loc 1 1001 0
 1332              		.cfi_startproc
 1333              		@ args = 0, pretend = 0, frame = 0
 1334              		@ frame_needed = 1, uses_anonymous_args = 0
 1335 0000 80B5     		push	{r7, lr}
 1336              		.cfi_def_cfa_offset 8
ARM GAS  C:\Users\essele\AppData\Local\Temp\cc7wN8Yp.s 			page 42


 1337              		.cfi_offset 7, -8
 1338              		.cfi_offset 14, -4
 1339 0002 00AF     		add	r7, sp, #0
 1340              		.cfi_def_cfa_register 7
1002:Generated_Source\PSoC4/PWM_1.c ****     #if (PWM_1_CY_TCPWM_4000)
1003:Generated_Source\PSoC4/PWM_1.c ****         uint32 currentMode;
1004:Generated_Source\PSoC4/PWM_1.c ****         uint32 regVal;
1005:Generated_Source\PSoC4/PWM_1.c ****     #endif /* (PWM_1_CY_TCPWM_4000) */
1006:Generated_Source\PSoC4/PWM_1.c **** 
1007:Generated_Source\PSoC4/PWM_1.c ****     #if (PWM_1_CY_TCPWM_4000)
1008:Generated_Source\PSoC4/PWM_1.c ****         currentMode = ((PWM_1_CONTROL_REG & PWM_1_UPDOWN_MASK) >> PWM_1_UPDOWN_SHIFT);
1009:Generated_Source\PSoC4/PWM_1.c **** 
1010:Generated_Source\PSoC4/PWM_1.c ****         regVal = PWM_1_COMP_CAP_BUF_REG;
1011:Generated_Source\PSoC4/PWM_1.c ****         
1012:Generated_Source\PSoC4/PWM_1.c ****         if (((uint32)PWM_1__COUNT_DOWN == currentMode) && (0u != regVal))
1013:Generated_Source\PSoC4/PWM_1.c ****         {
1014:Generated_Source\PSoC4/PWM_1.c ****             regVal--;
1015:Generated_Source\PSoC4/PWM_1.c ****         }
1016:Generated_Source\PSoC4/PWM_1.c ****         else if (((uint32)PWM_1__COUNT_UP == currentMode) && (0xFFFFu != regVal))
1017:Generated_Source\PSoC4/PWM_1.c ****         {
1018:Generated_Source\PSoC4/PWM_1.c ****             regVal++;
1019:Generated_Source\PSoC4/PWM_1.c ****         }
1020:Generated_Source\PSoC4/PWM_1.c ****         else
1021:Generated_Source\PSoC4/PWM_1.c ****         {
1022:Generated_Source\PSoC4/PWM_1.c ****         }
1023:Generated_Source\PSoC4/PWM_1.c **** 
1024:Generated_Source\PSoC4/PWM_1.c ****         return (regVal & PWM_1_16BIT_MASK);
1025:Generated_Source\PSoC4/PWM_1.c ****     #else
1026:Generated_Source\PSoC4/PWM_1.c ****         return (PWM_1_COMP_CAP_BUF_REG & PWM_1_16BIT_MASK);
 1341              		.loc 1 1026 0
 1342 0004 034B     		ldr	r3, .L83
 1343 0006 1B68     		ldr	r3, [r3]
 1344 0008 1B04     		lsls	r3, r3, #16
 1345 000a 1B0C     		lsrs	r3, r3, #16
1027:Generated_Source\PSoC4/PWM_1.c ****     #endif /* (PWM_1_CY_TCPWM_4000) */
1028:Generated_Source\PSoC4/PWM_1.c **** }
 1346              		.loc 1 1028 0
 1347 000c 1800     		movs	r0, r3
 1348 000e BD46     		mov	sp, r7
 1349              		@ sp needed
 1350 0010 80BD     		pop	{r7, pc}
 1351              	.L84:
 1352 0012 C046     		.align	2
 1353              	.L83:
 1354 0014 50012040 		.word	1075839312
 1355              		.cfi_endproc
 1356              	.LFE26:
 1357              		.size	PWM_1_ReadCompareBuf, .-PWM_1_ReadCompareBuf
 1358              		.section	.text.PWM_1_ReadCapture,"ax",%progbits
 1359              		.align	2
 1360              		.global	PWM_1_ReadCapture
 1361              		.code	16
 1362              		.thumb_func
 1363              		.type	PWM_1_ReadCapture, %function
 1364              	PWM_1_ReadCapture:
 1365              	.LFB27:
1029:Generated_Source\PSoC4/PWM_1.c **** 
ARM GAS  C:\Users\essele\AppData\Local\Temp\cc7wN8Yp.s 			page 43


1030:Generated_Source\PSoC4/PWM_1.c **** 
1031:Generated_Source\PSoC4/PWM_1.c **** /*******************************************************************************
1032:Generated_Source\PSoC4/PWM_1.c **** * Function Name: PWM_1_ReadCapture
1033:Generated_Source\PSoC4/PWM_1.c **** ********************************************************************************
1034:Generated_Source\PSoC4/PWM_1.c **** *
1035:Generated_Source\PSoC4/PWM_1.c **** * Summary:
1036:Generated_Source\PSoC4/PWM_1.c **** *  Reads the captured counter value. This API is applicable only for
1037:Generated_Source\PSoC4/PWM_1.c **** *  Timer/Counter with the capture mode and Quadrature Decoder modes.
1038:Generated_Source\PSoC4/PWM_1.c **** *
1039:Generated_Source\PSoC4/PWM_1.c **** * Parameters:
1040:Generated_Source\PSoC4/PWM_1.c **** *  None
1041:Generated_Source\PSoC4/PWM_1.c **** *
1042:Generated_Source\PSoC4/PWM_1.c **** * Return:
1043:Generated_Source\PSoC4/PWM_1.c **** *  Capture value
1044:Generated_Source\PSoC4/PWM_1.c **** *
1045:Generated_Source\PSoC4/PWM_1.c **** *******************************************************************************/
1046:Generated_Source\PSoC4/PWM_1.c **** uint32 PWM_1_ReadCapture(void)
1047:Generated_Source\PSoC4/PWM_1.c **** {
 1366              		.loc 1 1047 0
 1367              		.cfi_startproc
 1368              		@ args = 0, pretend = 0, frame = 0
 1369              		@ frame_needed = 1, uses_anonymous_args = 0
 1370 0000 80B5     		push	{r7, lr}
 1371              		.cfi_def_cfa_offset 8
 1372              		.cfi_offset 7, -8
 1373              		.cfi_offset 14, -4
 1374 0002 00AF     		add	r7, sp, #0
 1375              		.cfi_def_cfa_register 7
1048:Generated_Source\PSoC4/PWM_1.c ****     return (PWM_1_COMP_CAP_REG & PWM_1_16BIT_MASK);
 1376              		.loc 1 1048 0
 1377 0004 034B     		ldr	r3, .L87
 1378 0006 1B68     		ldr	r3, [r3]
 1379 0008 1B04     		lsls	r3, r3, #16
 1380 000a 1B0C     		lsrs	r3, r3, #16
1049:Generated_Source\PSoC4/PWM_1.c **** }
 1381              		.loc 1 1049 0
 1382 000c 1800     		movs	r0, r3
 1383 000e BD46     		mov	sp, r7
 1384              		@ sp needed
 1385 0010 80BD     		pop	{r7, pc}
 1386              	.L88:
 1387 0012 C046     		.align	2
 1388              	.L87:
 1389 0014 4C012040 		.word	1075839308
 1390              		.cfi_endproc
 1391              	.LFE27:
 1392              		.size	PWM_1_ReadCapture, .-PWM_1_ReadCapture
 1393              		.section	.text.PWM_1_ReadCaptureBuf,"ax",%progbits
 1394              		.align	2
 1395              		.global	PWM_1_ReadCaptureBuf
 1396              		.code	16
 1397              		.thumb_func
 1398              		.type	PWM_1_ReadCaptureBuf, %function
 1399              	PWM_1_ReadCaptureBuf:
 1400              	.LFB28:
1050:Generated_Source\PSoC4/PWM_1.c **** 
1051:Generated_Source\PSoC4/PWM_1.c **** 
ARM GAS  C:\Users\essele\AppData\Local\Temp\cc7wN8Yp.s 			page 44


1052:Generated_Source\PSoC4/PWM_1.c **** /*******************************************************************************
1053:Generated_Source\PSoC4/PWM_1.c **** * Function Name: PWM_1_ReadCaptureBuf
1054:Generated_Source\PSoC4/PWM_1.c **** ********************************************************************************
1055:Generated_Source\PSoC4/PWM_1.c **** *
1056:Generated_Source\PSoC4/PWM_1.c **** * Summary:
1057:Generated_Source\PSoC4/PWM_1.c **** *  Reads the capture buffer register. This API is applicable only for
1058:Generated_Source\PSoC4/PWM_1.c **** *  Timer/Counter with the capture mode and Quadrature Decoder modes.
1059:Generated_Source\PSoC4/PWM_1.c **** *
1060:Generated_Source\PSoC4/PWM_1.c **** * Parameters:
1061:Generated_Source\PSoC4/PWM_1.c **** *  None
1062:Generated_Source\PSoC4/PWM_1.c **** *
1063:Generated_Source\PSoC4/PWM_1.c **** * Return:
1064:Generated_Source\PSoC4/PWM_1.c **** *  Capture buffer value
1065:Generated_Source\PSoC4/PWM_1.c **** *
1066:Generated_Source\PSoC4/PWM_1.c **** *******************************************************************************/
1067:Generated_Source\PSoC4/PWM_1.c **** uint32 PWM_1_ReadCaptureBuf(void)
1068:Generated_Source\PSoC4/PWM_1.c **** {
 1401              		.loc 1 1068 0
 1402              		.cfi_startproc
 1403              		@ args = 0, pretend = 0, frame = 0
 1404              		@ frame_needed = 1, uses_anonymous_args = 0
 1405 0000 80B5     		push	{r7, lr}
 1406              		.cfi_def_cfa_offset 8
 1407              		.cfi_offset 7, -8
 1408              		.cfi_offset 14, -4
 1409 0002 00AF     		add	r7, sp, #0
 1410              		.cfi_def_cfa_register 7
1069:Generated_Source\PSoC4/PWM_1.c ****     return (PWM_1_COMP_CAP_BUF_REG & PWM_1_16BIT_MASK);
 1411              		.loc 1 1069 0
 1412 0004 034B     		ldr	r3, .L91
 1413 0006 1B68     		ldr	r3, [r3]
 1414 0008 1B04     		lsls	r3, r3, #16
 1415 000a 1B0C     		lsrs	r3, r3, #16
1070:Generated_Source\PSoC4/PWM_1.c **** }
 1416              		.loc 1 1070 0
 1417 000c 1800     		movs	r0, r3
 1418 000e BD46     		mov	sp, r7
 1419              		@ sp needed
 1420 0010 80BD     		pop	{r7, pc}
 1421              	.L92:
 1422 0012 C046     		.align	2
 1423              	.L91:
 1424 0014 50012040 		.word	1075839312
 1425              		.cfi_endproc
 1426              	.LFE28:
 1427              		.size	PWM_1_ReadCaptureBuf, .-PWM_1_ReadCaptureBuf
 1428              		.section	.text.PWM_1_SetCaptureMode,"ax",%progbits
 1429              		.align	2
 1430              		.global	PWM_1_SetCaptureMode
 1431              		.code	16
 1432              		.thumb_func
 1433              		.type	PWM_1_SetCaptureMode, %function
 1434              	PWM_1_SetCaptureMode:
 1435              	.LFB29:
1071:Generated_Source\PSoC4/PWM_1.c **** 
1072:Generated_Source\PSoC4/PWM_1.c **** 
1073:Generated_Source\PSoC4/PWM_1.c **** /*******************************************************************************
ARM GAS  C:\Users\essele\AppData\Local\Temp\cc7wN8Yp.s 			page 45


1074:Generated_Source\PSoC4/PWM_1.c **** * Function Name: PWM_1_SetCaptureMode
1075:Generated_Source\PSoC4/PWM_1.c **** ********************************************************************************
1076:Generated_Source\PSoC4/PWM_1.c **** *
1077:Generated_Source\PSoC4/PWM_1.c **** * Summary:
1078:Generated_Source\PSoC4/PWM_1.c **** *  Sets the capture trigger mode. For PWM mode this is the switch input.
1079:Generated_Source\PSoC4/PWM_1.c **** *  This input is not applicable to the Timer/Counter without Capture and
1080:Generated_Source\PSoC4/PWM_1.c **** *  Quadrature Decoder modes.
1081:Generated_Source\PSoC4/PWM_1.c **** *
1082:Generated_Source\PSoC4/PWM_1.c **** * Parameters:
1083:Generated_Source\PSoC4/PWM_1.c **** *  triggerMode: Enumerated trigger mode value
1084:Generated_Source\PSoC4/PWM_1.c **** *   Values:
1085:Generated_Source\PSoC4/PWM_1.c **** *     - PWM_1_TRIG_LEVEL     - Level
1086:Generated_Source\PSoC4/PWM_1.c **** *     - PWM_1_TRIG_RISING    - Rising edge
1087:Generated_Source\PSoC4/PWM_1.c **** *     - PWM_1_TRIG_FALLING   - Falling edge
1088:Generated_Source\PSoC4/PWM_1.c **** *     - PWM_1_TRIG_BOTH      - Both rising and falling edge
1089:Generated_Source\PSoC4/PWM_1.c **** *
1090:Generated_Source\PSoC4/PWM_1.c **** * Return:
1091:Generated_Source\PSoC4/PWM_1.c **** *  None
1092:Generated_Source\PSoC4/PWM_1.c **** *
1093:Generated_Source\PSoC4/PWM_1.c **** *******************************************************************************/
1094:Generated_Source\PSoC4/PWM_1.c **** void PWM_1_SetCaptureMode(uint32 triggerMode)
1095:Generated_Source\PSoC4/PWM_1.c **** {
 1436              		.loc 1 1095 0
 1437              		.cfi_startproc
 1438              		@ args = 0, pretend = 0, frame = 16
 1439              		@ frame_needed = 1, uses_anonymous_args = 0
 1440 0000 90B5     		push	{r4, r7, lr}
 1441              		.cfi_def_cfa_offset 12
 1442              		.cfi_offset 4, -12
 1443              		.cfi_offset 7, -8
 1444              		.cfi_offset 14, -4
 1445 0002 85B0     		sub	sp, sp, #20
 1446              		.cfi_def_cfa_offset 32
 1447 0004 00AF     		add	r7, sp, #0
 1448              		.cfi_def_cfa_register 7
 1449 0006 7860     		str	r0, [r7, #4]
1096:Generated_Source\PSoC4/PWM_1.c ****     uint8 enableInterrupts;
1097:Generated_Source\PSoC4/PWM_1.c **** 
1098:Generated_Source\PSoC4/PWM_1.c ****     enableInterrupts = CyEnterCriticalSection();
 1450              		.loc 1 1098 0
 1451 0008 0F23     		movs	r3, #15
 1452 000a FC18     		adds	r4, r7, r3
 1453 000c FFF7FEFF 		bl	CyEnterCriticalSection
 1454 0010 0300     		movs	r3, r0
 1455 0012 2370     		strb	r3, [r4]
1099:Generated_Source\PSoC4/PWM_1.c **** 
1100:Generated_Source\PSoC4/PWM_1.c ****     PWM_1_TRIG_CONTROL1_REG &= (uint32)~PWM_1_CAPTURE_MASK;
 1456              		.loc 1 1100 0
 1457 0014 0A4B     		ldr	r3, .L94
 1458 0016 0A4A     		ldr	r2, .L94
 1459 0018 1268     		ldr	r2, [r2]
 1460 001a 0321     		movs	r1, #3
 1461 001c 8A43     		bics	r2, r1
 1462 001e 1A60     		str	r2, [r3]
1101:Generated_Source\PSoC4/PWM_1.c ****     PWM_1_TRIG_CONTROL1_REG |= triggerMode;
 1463              		.loc 1 1101 0
 1464 0020 074B     		ldr	r3, .L94
ARM GAS  C:\Users\essele\AppData\Local\Temp\cc7wN8Yp.s 			page 46


 1465 0022 074A     		ldr	r2, .L94
 1466 0024 1168     		ldr	r1, [r2]
 1467 0026 7A68     		ldr	r2, [r7, #4]
 1468 0028 0A43     		orrs	r2, r1
 1469 002a 1A60     		str	r2, [r3]
1102:Generated_Source\PSoC4/PWM_1.c **** 
1103:Generated_Source\PSoC4/PWM_1.c ****     CyExitCriticalSection(enableInterrupts);
 1470              		.loc 1 1103 0
 1471 002c 0F23     		movs	r3, #15
 1472 002e FB18     		adds	r3, r7, r3
 1473 0030 1B78     		ldrb	r3, [r3]
 1474 0032 1800     		movs	r0, r3
 1475 0034 FFF7FEFF 		bl	CyExitCriticalSection
1104:Generated_Source\PSoC4/PWM_1.c **** }
 1476              		.loc 1 1104 0
 1477 0038 C046     		nop
 1478 003a BD46     		mov	sp, r7
 1479 003c 05B0     		add	sp, sp, #20
 1480              		@ sp needed
 1481 003e 90BD     		pop	{r4, r7, pc}
 1482              	.L95:
 1483              		.align	2
 1484              	.L94:
 1485 0040 64012040 		.word	1075839332
 1486              		.cfi_endproc
 1487              	.LFE29:
 1488              		.size	PWM_1_SetCaptureMode, .-PWM_1_SetCaptureMode
 1489              		.section	.text.PWM_1_SetReloadMode,"ax",%progbits
 1490              		.align	2
 1491              		.global	PWM_1_SetReloadMode
 1492              		.code	16
 1493              		.thumb_func
 1494              		.type	PWM_1_SetReloadMode, %function
 1495              	PWM_1_SetReloadMode:
 1496              	.LFB30:
1105:Generated_Source\PSoC4/PWM_1.c **** 
1106:Generated_Source\PSoC4/PWM_1.c **** 
1107:Generated_Source\PSoC4/PWM_1.c **** /*******************************************************************************
1108:Generated_Source\PSoC4/PWM_1.c **** * Function Name: PWM_1_SetReloadMode
1109:Generated_Source\PSoC4/PWM_1.c **** ********************************************************************************
1110:Generated_Source\PSoC4/PWM_1.c **** *
1111:Generated_Source\PSoC4/PWM_1.c **** * Summary:
1112:Generated_Source\PSoC4/PWM_1.c **** *  Sets the reload trigger mode. For Quadrature Decoder mode this is the index
1113:Generated_Source\PSoC4/PWM_1.c **** *  input.
1114:Generated_Source\PSoC4/PWM_1.c **** *
1115:Generated_Source\PSoC4/PWM_1.c **** * Parameters:
1116:Generated_Source\PSoC4/PWM_1.c **** *  triggerMode: Enumerated trigger mode value
1117:Generated_Source\PSoC4/PWM_1.c **** *   Values:
1118:Generated_Source\PSoC4/PWM_1.c **** *     - PWM_1_TRIG_LEVEL     - Level
1119:Generated_Source\PSoC4/PWM_1.c **** *     - PWM_1_TRIG_RISING    - Rising edge
1120:Generated_Source\PSoC4/PWM_1.c **** *     - PWM_1_TRIG_FALLING   - Falling edge
1121:Generated_Source\PSoC4/PWM_1.c **** *     - PWM_1_TRIG_BOTH      - Both rising and falling edge
1122:Generated_Source\PSoC4/PWM_1.c **** *
1123:Generated_Source\PSoC4/PWM_1.c **** * Return:
1124:Generated_Source\PSoC4/PWM_1.c **** *  None
1125:Generated_Source\PSoC4/PWM_1.c **** *
1126:Generated_Source\PSoC4/PWM_1.c **** *******************************************************************************/
ARM GAS  C:\Users\essele\AppData\Local\Temp\cc7wN8Yp.s 			page 47


1127:Generated_Source\PSoC4/PWM_1.c **** void PWM_1_SetReloadMode(uint32 triggerMode)
1128:Generated_Source\PSoC4/PWM_1.c **** {
 1497              		.loc 1 1128 0
 1498              		.cfi_startproc
 1499              		@ args = 0, pretend = 0, frame = 16
 1500              		@ frame_needed = 1, uses_anonymous_args = 0
 1501 0000 90B5     		push	{r4, r7, lr}
 1502              		.cfi_def_cfa_offset 12
 1503              		.cfi_offset 4, -12
 1504              		.cfi_offset 7, -8
 1505              		.cfi_offset 14, -4
 1506 0002 85B0     		sub	sp, sp, #20
 1507              		.cfi_def_cfa_offset 32
 1508 0004 00AF     		add	r7, sp, #0
 1509              		.cfi_def_cfa_register 7
 1510 0006 7860     		str	r0, [r7, #4]
1129:Generated_Source\PSoC4/PWM_1.c ****     uint8 enableInterrupts;
1130:Generated_Source\PSoC4/PWM_1.c **** 
1131:Generated_Source\PSoC4/PWM_1.c ****     enableInterrupts = CyEnterCriticalSection();
 1511              		.loc 1 1131 0
 1512 0008 0F23     		movs	r3, #15
 1513 000a FC18     		adds	r4, r7, r3
 1514 000c FFF7FEFF 		bl	CyEnterCriticalSection
 1515 0010 0300     		movs	r3, r0
 1516 0012 2370     		strb	r3, [r4]
1132:Generated_Source\PSoC4/PWM_1.c **** 
1133:Generated_Source\PSoC4/PWM_1.c ****     PWM_1_TRIG_CONTROL1_REG &= (uint32)~PWM_1_RELOAD_MASK;
 1517              		.loc 1 1133 0
 1518 0014 0B4B     		ldr	r3, .L97
 1519 0016 0B4A     		ldr	r2, .L97
 1520 0018 1268     		ldr	r2, [r2]
 1521 001a 3021     		movs	r1, #48
 1522 001c 8A43     		bics	r2, r1
 1523 001e 1A60     		str	r2, [r3]
1134:Generated_Source\PSoC4/PWM_1.c ****     PWM_1_TRIG_CONTROL1_REG |= ((uint32)(triggerMode << PWM_1_RELOAD_SHIFT));
 1524              		.loc 1 1134 0
 1525 0020 084B     		ldr	r3, .L97
 1526 0022 084A     		ldr	r2, .L97
 1527 0024 1168     		ldr	r1, [r2]
 1528 0026 7A68     		ldr	r2, [r7, #4]
 1529 0028 1201     		lsls	r2, r2, #4
 1530 002a 0A43     		orrs	r2, r1
 1531 002c 1A60     		str	r2, [r3]
1135:Generated_Source\PSoC4/PWM_1.c **** 
1136:Generated_Source\PSoC4/PWM_1.c ****     CyExitCriticalSection(enableInterrupts);
 1532              		.loc 1 1136 0
 1533 002e 0F23     		movs	r3, #15
 1534 0030 FB18     		adds	r3, r7, r3
 1535 0032 1B78     		ldrb	r3, [r3]
 1536 0034 1800     		movs	r0, r3
 1537 0036 FFF7FEFF 		bl	CyExitCriticalSection
1137:Generated_Source\PSoC4/PWM_1.c **** }
 1538              		.loc 1 1137 0
 1539 003a C046     		nop
 1540 003c BD46     		mov	sp, r7
 1541 003e 05B0     		add	sp, sp, #20
 1542              		@ sp needed
ARM GAS  C:\Users\essele\AppData\Local\Temp\cc7wN8Yp.s 			page 48


 1543 0040 90BD     		pop	{r4, r7, pc}
 1544              	.L98:
 1545 0042 C046     		.align	2
 1546              	.L97:
 1547 0044 64012040 		.word	1075839332
 1548              		.cfi_endproc
 1549              	.LFE30:
 1550              		.size	PWM_1_SetReloadMode, .-PWM_1_SetReloadMode
 1551              		.section	.text.PWM_1_SetStartMode,"ax",%progbits
 1552              		.align	2
 1553              		.global	PWM_1_SetStartMode
 1554              		.code	16
 1555              		.thumb_func
 1556              		.type	PWM_1_SetStartMode, %function
 1557              	PWM_1_SetStartMode:
 1558              	.LFB31:
1138:Generated_Source\PSoC4/PWM_1.c **** 
1139:Generated_Source\PSoC4/PWM_1.c **** 
1140:Generated_Source\PSoC4/PWM_1.c **** /*******************************************************************************
1141:Generated_Source\PSoC4/PWM_1.c **** * Function Name: PWM_1_SetStartMode
1142:Generated_Source\PSoC4/PWM_1.c **** ********************************************************************************
1143:Generated_Source\PSoC4/PWM_1.c **** *
1144:Generated_Source\PSoC4/PWM_1.c **** * Summary:
1145:Generated_Source\PSoC4/PWM_1.c **** *  Sets the start trigger mode. For Quadrature Decoder mode this is the
1146:Generated_Source\PSoC4/PWM_1.c **** *  phiB input.
1147:Generated_Source\PSoC4/PWM_1.c **** *
1148:Generated_Source\PSoC4/PWM_1.c **** * Parameters:
1149:Generated_Source\PSoC4/PWM_1.c **** *  triggerMode: Enumerated trigger mode value
1150:Generated_Source\PSoC4/PWM_1.c **** *   Values:
1151:Generated_Source\PSoC4/PWM_1.c **** *     - PWM_1_TRIG_LEVEL     - Level
1152:Generated_Source\PSoC4/PWM_1.c **** *     - PWM_1_TRIG_RISING    - Rising edge
1153:Generated_Source\PSoC4/PWM_1.c **** *     - PWM_1_TRIG_FALLING   - Falling edge
1154:Generated_Source\PSoC4/PWM_1.c **** *     - PWM_1_TRIG_BOTH      - Both rising and falling edge
1155:Generated_Source\PSoC4/PWM_1.c **** *
1156:Generated_Source\PSoC4/PWM_1.c **** * Return:
1157:Generated_Source\PSoC4/PWM_1.c **** *  None
1158:Generated_Source\PSoC4/PWM_1.c **** *
1159:Generated_Source\PSoC4/PWM_1.c **** *******************************************************************************/
1160:Generated_Source\PSoC4/PWM_1.c **** void PWM_1_SetStartMode(uint32 triggerMode)
1161:Generated_Source\PSoC4/PWM_1.c **** {
 1559              		.loc 1 1161 0
 1560              		.cfi_startproc
 1561              		@ args = 0, pretend = 0, frame = 16
 1562              		@ frame_needed = 1, uses_anonymous_args = 0
 1563 0000 90B5     		push	{r4, r7, lr}
 1564              		.cfi_def_cfa_offset 12
 1565              		.cfi_offset 4, -12
 1566              		.cfi_offset 7, -8
 1567              		.cfi_offset 14, -4
 1568 0002 85B0     		sub	sp, sp, #20
 1569              		.cfi_def_cfa_offset 32
 1570 0004 00AF     		add	r7, sp, #0
 1571              		.cfi_def_cfa_register 7
 1572 0006 7860     		str	r0, [r7, #4]
1162:Generated_Source\PSoC4/PWM_1.c ****     uint8 enableInterrupts;
1163:Generated_Source\PSoC4/PWM_1.c **** 
1164:Generated_Source\PSoC4/PWM_1.c ****     enableInterrupts = CyEnterCriticalSection();
ARM GAS  C:\Users\essele\AppData\Local\Temp\cc7wN8Yp.s 			page 49


 1573              		.loc 1 1164 0
 1574 0008 0F23     		movs	r3, #15
 1575 000a FC18     		adds	r4, r7, r3
 1576 000c FFF7FEFF 		bl	CyEnterCriticalSection
 1577 0010 0300     		movs	r3, r0
 1578 0012 2370     		strb	r3, [r4]
1165:Generated_Source\PSoC4/PWM_1.c **** 
1166:Generated_Source\PSoC4/PWM_1.c ****     PWM_1_TRIG_CONTROL1_REG &= (uint32)~PWM_1_START_MASK;
 1579              		.loc 1 1166 0
 1580 0014 0B4B     		ldr	r3, .L100
 1581 0016 0B4A     		ldr	r2, .L100
 1582 0018 1268     		ldr	r2, [r2]
 1583 001a 0B49     		ldr	r1, .L100+4
 1584 001c 0A40     		ands	r2, r1
 1585 001e 1A60     		str	r2, [r3]
1167:Generated_Source\PSoC4/PWM_1.c ****     PWM_1_TRIG_CONTROL1_REG |= ((uint32)(triggerMode << PWM_1_START_SHIFT));
 1586              		.loc 1 1167 0
 1587 0020 084B     		ldr	r3, .L100
 1588 0022 084A     		ldr	r2, .L100
 1589 0024 1168     		ldr	r1, [r2]
 1590 0026 7A68     		ldr	r2, [r7, #4]
 1591 0028 1202     		lsls	r2, r2, #8
 1592 002a 0A43     		orrs	r2, r1
 1593 002c 1A60     		str	r2, [r3]
1168:Generated_Source\PSoC4/PWM_1.c **** 
1169:Generated_Source\PSoC4/PWM_1.c ****     CyExitCriticalSection(enableInterrupts);
 1594              		.loc 1 1169 0
 1595 002e 0F23     		movs	r3, #15
 1596 0030 FB18     		adds	r3, r7, r3
 1597 0032 1B78     		ldrb	r3, [r3]
 1598 0034 1800     		movs	r0, r3
 1599 0036 FFF7FEFF 		bl	CyExitCriticalSection
1170:Generated_Source\PSoC4/PWM_1.c **** }
 1600              		.loc 1 1170 0
 1601 003a C046     		nop
 1602 003c BD46     		mov	sp, r7
 1603 003e 05B0     		add	sp, sp, #20
 1604              		@ sp needed
 1605 0040 90BD     		pop	{r4, r7, pc}
 1606              	.L101:
 1607 0042 C046     		.align	2
 1608              	.L100:
 1609 0044 64012040 		.word	1075839332
 1610 0048 FFFCFFFF 		.word	-769
 1611              		.cfi_endproc
 1612              	.LFE31:
 1613              		.size	PWM_1_SetStartMode, .-PWM_1_SetStartMode
 1614              		.section	.text.PWM_1_SetStopMode,"ax",%progbits
 1615              		.align	2
 1616              		.global	PWM_1_SetStopMode
 1617              		.code	16
 1618              		.thumb_func
 1619              		.type	PWM_1_SetStopMode, %function
 1620              	PWM_1_SetStopMode:
 1621              	.LFB32:
1171:Generated_Source\PSoC4/PWM_1.c **** 
1172:Generated_Source\PSoC4/PWM_1.c **** 
ARM GAS  C:\Users\essele\AppData\Local\Temp\cc7wN8Yp.s 			page 50


1173:Generated_Source\PSoC4/PWM_1.c **** /*******************************************************************************
1174:Generated_Source\PSoC4/PWM_1.c **** * Function Name: PWM_1_SetStopMode
1175:Generated_Source\PSoC4/PWM_1.c **** ********************************************************************************
1176:Generated_Source\PSoC4/PWM_1.c **** *
1177:Generated_Source\PSoC4/PWM_1.c **** * Summary:
1178:Generated_Source\PSoC4/PWM_1.c **** *  Sets the stop trigger mode. For PWM mode this is the kill input.
1179:Generated_Source\PSoC4/PWM_1.c **** *
1180:Generated_Source\PSoC4/PWM_1.c **** * Parameters:
1181:Generated_Source\PSoC4/PWM_1.c **** *  triggerMode: Enumerated trigger mode value
1182:Generated_Source\PSoC4/PWM_1.c **** *   Values:
1183:Generated_Source\PSoC4/PWM_1.c **** *     - PWM_1_TRIG_LEVEL     - Level
1184:Generated_Source\PSoC4/PWM_1.c **** *     - PWM_1_TRIG_RISING    - Rising edge
1185:Generated_Source\PSoC4/PWM_1.c **** *     - PWM_1_TRIG_FALLING   - Falling edge
1186:Generated_Source\PSoC4/PWM_1.c **** *     - PWM_1_TRIG_BOTH      - Both rising and falling edge
1187:Generated_Source\PSoC4/PWM_1.c **** *
1188:Generated_Source\PSoC4/PWM_1.c **** * Return:
1189:Generated_Source\PSoC4/PWM_1.c **** *  None
1190:Generated_Source\PSoC4/PWM_1.c **** *
1191:Generated_Source\PSoC4/PWM_1.c **** *******************************************************************************/
1192:Generated_Source\PSoC4/PWM_1.c **** void PWM_1_SetStopMode(uint32 triggerMode)
1193:Generated_Source\PSoC4/PWM_1.c **** {
 1622              		.loc 1 1193 0
 1623              		.cfi_startproc
 1624              		@ args = 0, pretend = 0, frame = 16
 1625              		@ frame_needed = 1, uses_anonymous_args = 0
 1626 0000 90B5     		push	{r4, r7, lr}
 1627              		.cfi_def_cfa_offset 12
 1628              		.cfi_offset 4, -12
 1629              		.cfi_offset 7, -8
 1630              		.cfi_offset 14, -4
 1631 0002 85B0     		sub	sp, sp, #20
 1632              		.cfi_def_cfa_offset 32
 1633 0004 00AF     		add	r7, sp, #0
 1634              		.cfi_def_cfa_register 7
 1635 0006 7860     		str	r0, [r7, #4]
1194:Generated_Source\PSoC4/PWM_1.c ****     uint8 enableInterrupts;
1195:Generated_Source\PSoC4/PWM_1.c **** 
1196:Generated_Source\PSoC4/PWM_1.c ****     enableInterrupts = CyEnterCriticalSection();
 1636              		.loc 1 1196 0
 1637 0008 0F23     		movs	r3, #15
 1638 000a FC18     		adds	r4, r7, r3
 1639 000c FFF7FEFF 		bl	CyEnterCriticalSection
 1640 0010 0300     		movs	r3, r0
 1641 0012 2370     		strb	r3, [r4]
1197:Generated_Source\PSoC4/PWM_1.c **** 
1198:Generated_Source\PSoC4/PWM_1.c ****     PWM_1_TRIG_CONTROL1_REG &= (uint32)~PWM_1_STOP_MASK;
 1642              		.loc 1 1198 0
 1643 0014 0B4B     		ldr	r3, .L103
 1644 0016 0B4A     		ldr	r2, .L103
 1645 0018 1268     		ldr	r2, [r2]
 1646 001a C021     		movs	r1, #192
 1647 001c 8A43     		bics	r2, r1
 1648 001e 1A60     		str	r2, [r3]
1199:Generated_Source\PSoC4/PWM_1.c ****     PWM_1_TRIG_CONTROL1_REG |= ((uint32)(triggerMode << PWM_1_STOP_SHIFT));
 1649              		.loc 1 1199 0
 1650 0020 084B     		ldr	r3, .L103
 1651 0022 084A     		ldr	r2, .L103
ARM GAS  C:\Users\essele\AppData\Local\Temp\cc7wN8Yp.s 			page 51


 1652 0024 1168     		ldr	r1, [r2]
 1653 0026 7A68     		ldr	r2, [r7, #4]
 1654 0028 9201     		lsls	r2, r2, #6
 1655 002a 0A43     		orrs	r2, r1
 1656 002c 1A60     		str	r2, [r3]
1200:Generated_Source\PSoC4/PWM_1.c **** 
1201:Generated_Source\PSoC4/PWM_1.c ****     CyExitCriticalSection(enableInterrupts);
 1657              		.loc 1 1201 0
 1658 002e 0F23     		movs	r3, #15
 1659 0030 FB18     		adds	r3, r7, r3
 1660 0032 1B78     		ldrb	r3, [r3]
 1661 0034 1800     		movs	r0, r3
 1662 0036 FFF7FEFF 		bl	CyExitCriticalSection
1202:Generated_Source\PSoC4/PWM_1.c **** }
 1663              		.loc 1 1202 0
 1664 003a C046     		nop
 1665 003c BD46     		mov	sp, r7
 1666 003e 05B0     		add	sp, sp, #20
 1667              		@ sp needed
 1668 0040 90BD     		pop	{r4, r7, pc}
 1669              	.L104:
 1670 0042 C046     		.align	2
 1671              	.L103:
 1672 0044 64012040 		.word	1075839332
 1673              		.cfi_endproc
 1674              	.LFE32:
 1675              		.size	PWM_1_SetStopMode, .-PWM_1_SetStopMode
 1676              		.section	.text.PWM_1_SetCountMode,"ax",%progbits
 1677              		.align	2
 1678              		.global	PWM_1_SetCountMode
 1679              		.code	16
 1680              		.thumb_func
 1681              		.type	PWM_1_SetCountMode, %function
 1682              	PWM_1_SetCountMode:
 1683              	.LFB33:
1203:Generated_Source\PSoC4/PWM_1.c **** 
1204:Generated_Source\PSoC4/PWM_1.c **** 
1205:Generated_Source\PSoC4/PWM_1.c **** /*******************************************************************************
1206:Generated_Source\PSoC4/PWM_1.c **** * Function Name: PWM_1_SetCountMode
1207:Generated_Source\PSoC4/PWM_1.c **** ********************************************************************************
1208:Generated_Source\PSoC4/PWM_1.c **** *
1209:Generated_Source\PSoC4/PWM_1.c **** * Summary:
1210:Generated_Source\PSoC4/PWM_1.c **** *  Sets the count trigger mode. For Quadrature Decoder mode this is the phiA
1211:Generated_Source\PSoC4/PWM_1.c **** *  input.
1212:Generated_Source\PSoC4/PWM_1.c **** *
1213:Generated_Source\PSoC4/PWM_1.c **** * Parameters:
1214:Generated_Source\PSoC4/PWM_1.c **** *  triggerMode: Enumerated trigger mode value
1215:Generated_Source\PSoC4/PWM_1.c **** *   Values:
1216:Generated_Source\PSoC4/PWM_1.c **** *     - PWM_1_TRIG_LEVEL     - Level
1217:Generated_Source\PSoC4/PWM_1.c **** *     - PWM_1_TRIG_RISING    - Rising edge
1218:Generated_Source\PSoC4/PWM_1.c **** *     - PWM_1_TRIG_FALLING   - Falling edge
1219:Generated_Source\PSoC4/PWM_1.c **** *     - PWM_1_TRIG_BOTH      - Both rising and falling edge
1220:Generated_Source\PSoC4/PWM_1.c **** *
1221:Generated_Source\PSoC4/PWM_1.c **** * Return:
1222:Generated_Source\PSoC4/PWM_1.c **** *  None
1223:Generated_Source\PSoC4/PWM_1.c **** *
1224:Generated_Source\PSoC4/PWM_1.c **** *******************************************************************************/
ARM GAS  C:\Users\essele\AppData\Local\Temp\cc7wN8Yp.s 			page 52


1225:Generated_Source\PSoC4/PWM_1.c **** void PWM_1_SetCountMode(uint32 triggerMode)
1226:Generated_Source\PSoC4/PWM_1.c **** {
 1684              		.loc 1 1226 0
 1685              		.cfi_startproc
 1686              		@ args = 0, pretend = 0, frame = 16
 1687              		@ frame_needed = 1, uses_anonymous_args = 0
 1688 0000 90B5     		push	{r4, r7, lr}
 1689              		.cfi_def_cfa_offset 12
 1690              		.cfi_offset 4, -12
 1691              		.cfi_offset 7, -8
 1692              		.cfi_offset 14, -4
 1693 0002 85B0     		sub	sp, sp, #20
 1694              		.cfi_def_cfa_offset 32
 1695 0004 00AF     		add	r7, sp, #0
 1696              		.cfi_def_cfa_register 7
 1697 0006 7860     		str	r0, [r7, #4]
1227:Generated_Source\PSoC4/PWM_1.c ****     uint8 enableInterrupts;
1228:Generated_Source\PSoC4/PWM_1.c **** 
1229:Generated_Source\PSoC4/PWM_1.c ****     enableInterrupts = CyEnterCriticalSection();
 1698              		.loc 1 1229 0
 1699 0008 0F23     		movs	r3, #15
 1700 000a FC18     		adds	r4, r7, r3
 1701 000c FFF7FEFF 		bl	CyEnterCriticalSection
 1702 0010 0300     		movs	r3, r0
 1703 0012 2370     		strb	r3, [r4]
1230:Generated_Source\PSoC4/PWM_1.c **** 
1231:Generated_Source\PSoC4/PWM_1.c ****     PWM_1_TRIG_CONTROL1_REG &= (uint32)~PWM_1_COUNT_MASK;
 1704              		.loc 1 1231 0
 1705 0014 0B4B     		ldr	r3, .L106
 1706 0016 0B4A     		ldr	r2, .L106
 1707 0018 1268     		ldr	r2, [r2]
 1708 001a 0C21     		movs	r1, #12
 1709 001c 8A43     		bics	r2, r1
 1710 001e 1A60     		str	r2, [r3]
1232:Generated_Source\PSoC4/PWM_1.c ****     PWM_1_TRIG_CONTROL1_REG |= ((uint32)(triggerMode << PWM_1_COUNT_SHIFT));
 1711              		.loc 1 1232 0
 1712 0020 084B     		ldr	r3, .L106
 1713 0022 084A     		ldr	r2, .L106
 1714 0024 1168     		ldr	r1, [r2]
 1715 0026 7A68     		ldr	r2, [r7, #4]
 1716 0028 9200     		lsls	r2, r2, #2
 1717 002a 0A43     		orrs	r2, r1
 1718 002c 1A60     		str	r2, [r3]
1233:Generated_Source\PSoC4/PWM_1.c **** 
1234:Generated_Source\PSoC4/PWM_1.c ****     CyExitCriticalSection(enableInterrupts);
 1719              		.loc 1 1234 0
 1720 002e 0F23     		movs	r3, #15
 1721 0030 FB18     		adds	r3, r7, r3
 1722 0032 1B78     		ldrb	r3, [r3]
 1723 0034 1800     		movs	r0, r3
 1724 0036 FFF7FEFF 		bl	CyExitCriticalSection
1235:Generated_Source\PSoC4/PWM_1.c **** }
 1725              		.loc 1 1235 0
 1726 003a C046     		nop
 1727 003c BD46     		mov	sp, r7
 1728 003e 05B0     		add	sp, sp, #20
 1729              		@ sp needed
ARM GAS  C:\Users\essele\AppData\Local\Temp\cc7wN8Yp.s 			page 53


 1730 0040 90BD     		pop	{r4, r7, pc}
 1731              	.L107:
 1732 0042 C046     		.align	2
 1733              	.L106:
 1734 0044 64012040 		.word	1075839332
 1735              		.cfi_endproc
 1736              	.LFE33:
 1737              		.size	PWM_1_SetCountMode, .-PWM_1_SetCountMode
 1738              		.section	.text.PWM_1_TriggerCommand,"ax",%progbits
 1739              		.align	2
 1740              		.global	PWM_1_TriggerCommand
 1741              		.code	16
 1742              		.thumb_func
 1743              		.type	PWM_1_TriggerCommand, %function
 1744              	PWM_1_TriggerCommand:
 1745              	.LFB34:
1236:Generated_Source\PSoC4/PWM_1.c **** 
1237:Generated_Source\PSoC4/PWM_1.c **** 
1238:Generated_Source\PSoC4/PWM_1.c **** /*******************************************************************************
1239:Generated_Source\PSoC4/PWM_1.c **** * Function Name: PWM_1_TriggerCommand
1240:Generated_Source\PSoC4/PWM_1.c **** ********************************************************************************
1241:Generated_Source\PSoC4/PWM_1.c **** *
1242:Generated_Source\PSoC4/PWM_1.c **** * Summary:
1243:Generated_Source\PSoC4/PWM_1.c **** *  Triggers the designated command to occur on the designated TCPWM instances.
1244:Generated_Source\PSoC4/PWM_1.c **** *  The mask can be used to apply this command simultaneously to more than one
1245:Generated_Source\PSoC4/PWM_1.c **** *  instance.  This allows multiple TCPWM instances to be synchronized.
1246:Generated_Source\PSoC4/PWM_1.c **** *
1247:Generated_Source\PSoC4/PWM_1.c **** * Parameters:
1248:Generated_Source\PSoC4/PWM_1.c **** *  mask: A combination of mask bits for each instance of the TCPWM that the
1249:Generated_Source\PSoC4/PWM_1.c **** *        command should apply to.  This function from one instance can be used
1250:Generated_Source\PSoC4/PWM_1.c **** *        to apply the command to any of the instances in the design.
1251:Generated_Source\PSoC4/PWM_1.c **** *        The mask value for a specific instance is available with the MASK
1252:Generated_Source\PSoC4/PWM_1.c **** *        define.
1253:Generated_Source\PSoC4/PWM_1.c **** *  command: Enumerated command values. Capture command only applicable for
1254:Generated_Source\PSoC4/PWM_1.c **** *           Timer/Counter with Capture and PWM modes.
1255:Generated_Source\PSoC4/PWM_1.c **** *   Values:
1256:Generated_Source\PSoC4/PWM_1.c **** *     - PWM_1_CMD_CAPTURE    - Trigger Capture/Switch command
1257:Generated_Source\PSoC4/PWM_1.c **** *     - PWM_1_CMD_RELOAD     - Trigger Reload/Index command
1258:Generated_Source\PSoC4/PWM_1.c **** *     - PWM_1_CMD_STOP       - Trigger Stop/Kill command
1259:Generated_Source\PSoC4/PWM_1.c **** *     - PWM_1_CMD_START      - Trigger Start/phiB command
1260:Generated_Source\PSoC4/PWM_1.c **** *
1261:Generated_Source\PSoC4/PWM_1.c **** * Return:
1262:Generated_Source\PSoC4/PWM_1.c **** *  None
1263:Generated_Source\PSoC4/PWM_1.c **** *
1264:Generated_Source\PSoC4/PWM_1.c **** *******************************************************************************/
1265:Generated_Source\PSoC4/PWM_1.c **** void PWM_1_TriggerCommand(uint32 mask, uint32 command)
1266:Generated_Source\PSoC4/PWM_1.c **** {
 1746              		.loc 1 1266 0
 1747              		.cfi_startproc
 1748              		@ args = 0, pretend = 0, frame = 16
 1749              		@ frame_needed = 1, uses_anonymous_args = 0
 1750 0000 90B5     		push	{r4, r7, lr}
 1751              		.cfi_def_cfa_offset 12
 1752              		.cfi_offset 4, -12
 1753              		.cfi_offset 7, -8
 1754              		.cfi_offset 14, -4
 1755 0002 85B0     		sub	sp, sp, #20
ARM GAS  C:\Users\essele\AppData\Local\Temp\cc7wN8Yp.s 			page 54


 1756              		.cfi_def_cfa_offset 32
 1757 0004 00AF     		add	r7, sp, #0
 1758              		.cfi_def_cfa_register 7
 1759 0006 7860     		str	r0, [r7, #4]
 1760 0008 3960     		str	r1, [r7]
1267:Generated_Source\PSoC4/PWM_1.c ****     uint8 enableInterrupts;
1268:Generated_Source\PSoC4/PWM_1.c **** 
1269:Generated_Source\PSoC4/PWM_1.c ****     enableInterrupts = CyEnterCriticalSection();
 1761              		.loc 1 1269 0
 1762 000a 0F23     		movs	r3, #15
 1763 000c FC18     		adds	r4, r7, r3
 1764 000e FFF7FEFF 		bl	CyEnterCriticalSection
 1765 0012 0300     		movs	r3, r0
 1766 0014 2370     		strb	r3, [r4]
1270:Generated_Source\PSoC4/PWM_1.c **** 
1271:Generated_Source\PSoC4/PWM_1.c ****     PWM_1_COMMAND_REG = ((uint32)(mask << command));
 1767              		.loc 1 1271 0
 1768 0016 084B     		ldr	r3, .L109
 1769 0018 7968     		ldr	r1, [r7, #4]
 1770 001a 3A68     		ldr	r2, [r7]
 1771 001c 9140     		lsls	r1, r1, r2
 1772 001e 0A00     		movs	r2, r1
 1773 0020 1A60     		str	r2, [r3]
1272:Generated_Source\PSoC4/PWM_1.c **** 
1273:Generated_Source\PSoC4/PWM_1.c ****     CyExitCriticalSection(enableInterrupts);
 1774              		.loc 1 1273 0
 1775 0022 0F23     		movs	r3, #15
 1776 0024 FB18     		adds	r3, r7, r3
 1777 0026 1B78     		ldrb	r3, [r3]
 1778 0028 1800     		movs	r0, r3
 1779 002a FFF7FEFF 		bl	CyExitCriticalSection
1274:Generated_Source\PSoC4/PWM_1.c **** }
 1780              		.loc 1 1274 0
 1781 002e C046     		nop
 1782 0030 BD46     		mov	sp, r7
 1783 0032 05B0     		add	sp, sp, #20
 1784              		@ sp needed
 1785 0034 90BD     		pop	{r4, r7, pc}
 1786              	.L110:
 1787 0036 C046     		.align	2
 1788              	.L109:
 1789 0038 08002040 		.word	1075838984
 1790              		.cfi_endproc
 1791              	.LFE34:
 1792              		.size	PWM_1_TriggerCommand, .-PWM_1_TriggerCommand
 1793              		.section	.text.PWM_1_ReadStatus,"ax",%progbits
 1794              		.align	2
 1795              		.global	PWM_1_ReadStatus
 1796              		.code	16
 1797              		.thumb_func
 1798              		.type	PWM_1_ReadStatus, %function
 1799              	PWM_1_ReadStatus:
 1800              	.LFB35:
1275:Generated_Source\PSoC4/PWM_1.c **** 
1276:Generated_Source\PSoC4/PWM_1.c **** 
1277:Generated_Source\PSoC4/PWM_1.c **** /*******************************************************************************
1278:Generated_Source\PSoC4/PWM_1.c **** * Function Name: PWM_1_ReadStatus
ARM GAS  C:\Users\essele\AppData\Local\Temp\cc7wN8Yp.s 			page 55


1279:Generated_Source\PSoC4/PWM_1.c **** ********************************************************************************
1280:Generated_Source\PSoC4/PWM_1.c **** *
1281:Generated_Source\PSoC4/PWM_1.c **** * Summary:
1282:Generated_Source\PSoC4/PWM_1.c **** *  Reads the status of the PWM_1.
1283:Generated_Source\PSoC4/PWM_1.c **** *
1284:Generated_Source\PSoC4/PWM_1.c **** * Parameters:
1285:Generated_Source\PSoC4/PWM_1.c **** *  None
1286:Generated_Source\PSoC4/PWM_1.c **** *
1287:Generated_Source\PSoC4/PWM_1.c **** * Return:
1288:Generated_Source\PSoC4/PWM_1.c **** *  Status
1289:Generated_Source\PSoC4/PWM_1.c **** *   Values:
1290:Generated_Source\PSoC4/PWM_1.c **** *     - PWM_1_STATUS_DOWN    - Set if counting down
1291:Generated_Source\PSoC4/PWM_1.c **** *     - PWM_1_STATUS_RUNNING - Set if counter is running
1292:Generated_Source\PSoC4/PWM_1.c **** *
1293:Generated_Source\PSoC4/PWM_1.c **** *******************************************************************************/
1294:Generated_Source\PSoC4/PWM_1.c **** uint32 PWM_1_ReadStatus(void)
1295:Generated_Source\PSoC4/PWM_1.c **** {
 1801              		.loc 1 1295 0
 1802              		.cfi_startproc
 1803              		@ args = 0, pretend = 0, frame = 0
 1804              		@ frame_needed = 1, uses_anonymous_args = 0
 1805 0000 80B5     		push	{r7, lr}
 1806              		.cfi_def_cfa_offset 8
 1807              		.cfi_offset 7, -8
 1808              		.cfi_offset 14, -4
 1809 0002 00AF     		add	r7, sp, #0
 1810              		.cfi_def_cfa_register 7
1296:Generated_Source\PSoC4/PWM_1.c ****     return ((PWM_1_STATUS_REG >> PWM_1_RUNNING_STATUS_SHIFT) |
 1811              		.loc 1 1296 0
 1812 0004 054B     		ldr	r3, .L113
 1813 0006 1B68     		ldr	r3, [r3]
 1814 0008 9A0F     		lsrs	r2, r3, #30
1297:Generated_Source\PSoC4/PWM_1.c ****             (PWM_1_STATUS_REG & PWM_1_STATUS_DOWN));
 1815              		.loc 1 1297 0
 1816 000a 044B     		ldr	r3, .L113
 1817 000c 1B68     		ldr	r3, [r3]
 1818 000e 0121     		movs	r1, #1
 1819 0010 0B40     		ands	r3, r1
1296:Generated_Source\PSoC4/PWM_1.c ****     return ((PWM_1_STATUS_REG >> PWM_1_RUNNING_STATUS_SHIFT) |
 1820              		.loc 1 1296 0
 1821 0012 1343     		orrs	r3, r2
1298:Generated_Source\PSoC4/PWM_1.c **** }
 1822              		.loc 1 1298 0
 1823 0014 1800     		movs	r0, r3
 1824 0016 BD46     		mov	sp, r7
 1825              		@ sp needed
 1826 0018 80BD     		pop	{r7, pc}
 1827              	.L114:
 1828 001a C046     		.align	2
 1829              	.L113:
 1830 001c 44012040 		.word	1075839300
 1831              		.cfi_endproc
 1832              	.LFE35:
 1833              		.size	PWM_1_ReadStatus, .-PWM_1_ReadStatus
 1834              		.section	.text.PWM_1_SetInterruptMode,"ax",%progbits
 1835              		.align	2
 1836              		.global	PWM_1_SetInterruptMode
ARM GAS  C:\Users\essele\AppData\Local\Temp\cc7wN8Yp.s 			page 56


 1837              		.code	16
 1838              		.thumb_func
 1839              		.type	PWM_1_SetInterruptMode, %function
 1840              	PWM_1_SetInterruptMode:
 1841              	.LFB36:
1299:Generated_Source\PSoC4/PWM_1.c **** 
1300:Generated_Source\PSoC4/PWM_1.c **** 
1301:Generated_Source\PSoC4/PWM_1.c **** /*******************************************************************************
1302:Generated_Source\PSoC4/PWM_1.c **** * Function Name: PWM_1_SetInterruptMode
1303:Generated_Source\PSoC4/PWM_1.c **** ********************************************************************************
1304:Generated_Source\PSoC4/PWM_1.c **** *
1305:Generated_Source\PSoC4/PWM_1.c **** * Summary:
1306:Generated_Source\PSoC4/PWM_1.c **** *  Sets the interrupt mask to control which interrupt
1307:Generated_Source\PSoC4/PWM_1.c **** *  requests generate the interrupt signal.
1308:Generated_Source\PSoC4/PWM_1.c **** *
1309:Generated_Source\PSoC4/PWM_1.c **** * Parameters:
1310:Generated_Source\PSoC4/PWM_1.c **** *   interruptMask: Mask of bits to be enabled
1311:Generated_Source\PSoC4/PWM_1.c **** *   Values:
1312:Generated_Source\PSoC4/PWM_1.c **** *     - PWM_1_INTR_MASK_TC       - Terminal count mask
1313:Generated_Source\PSoC4/PWM_1.c **** *     - PWM_1_INTR_MASK_CC_MATCH - Compare count / capture mask
1314:Generated_Source\PSoC4/PWM_1.c **** *
1315:Generated_Source\PSoC4/PWM_1.c **** * Return:
1316:Generated_Source\PSoC4/PWM_1.c **** *  None
1317:Generated_Source\PSoC4/PWM_1.c **** *
1318:Generated_Source\PSoC4/PWM_1.c **** *******************************************************************************/
1319:Generated_Source\PSoC4/PWM_1.c **** void PWM_1_SetInterruptMode(uint32 interruptMask)
1320:Generated_Source\PSoC4/PWM_1.c **** {
 1842              		.loc 1 1320 0
 1843              		.cfi_startproc
 1844              		@ args = 0, pretend = 0, frame = 8
 1845              		@ frame_needed = 1, uses_anonymous_args = 0
 1846 0000 80B5     		push	{r7, lr}
 1847              		.cfi_def_cfa_offset 8
 1848              		.cfi_offset 7, -8
 1849              		.cfi_offset 14, -4
 1850 0002 82B0     		sub	sp, sp, #8
 1851              		.cfi_def_cfa_offset 16
 1852 0004 00AF     		add	r7, sp, #0
 1853              		.cfi_def_cfa_register 7
 1854 0006 7860     		str	r0, [r7, #4]
1321:Generated_Source\PSoC4/PWM_1.c ****     PWM_1_INTERRUPT_MASK_REG =  interruptMask;
 1855              		.loc 1 1321 0
 1856 0008 034B     		ldr	r3, .L116
 1857 000a 7A68     		ldr	r2, [r7, #4]
 1858 000c 1A60     		str	r2, [r3]
1322:Generated_Source\PSoC4/PWM_1.c **** }
 1859              		.loc 1 1322 0
 1860 000e C046     		nop
 1861 0010 BD46     		mov	sp, r7
 1862 0012 02B0     		add	sp, sp, #8
 1863              		@ sp needed
 1864 0014 80BD     		pop	{r7, pc}
 1865              	.L117:
 1866 0016 C046     		.align	2
 1867              	.L116:
 1868 0018 78012040 		.word	1075839352
 1869              		.cfi_endproc
ARM GAS  C:\Users\essele\AppData\Local\Temp\cc7wN8Yp.s 			page 57


 1870              	.LFE36:
 1871              		.size	PWM_1_SetInterruptMode, .-PWM_1_SetInterruptMode
 1872              		.section	.text.PWM_1_GetInterruptSourceMasked,"ax",%progbits
 1873              		.align	2
 1874              		.global	PWM_1_GetInterruptSourceMasked
 1875              		.code	16
 1876              		.thumb_func
 1877              		.type	PWM_1_GetInterruptSourceMasked, %function
 1878              	PWM_1_GetInterruptSourceMasked:
 1879              	.LFB37:
1323:Generated_Source\PSoC4/PWM_1.c **** 
1324:Generated_Source\PSoC4/PWM_1.c **** 
1325:Generated_Source\PSoC4/PWM_1.c **** /*******************************************************************************
1326:Generated_Source\PSoC4/PWM_1.c **** * Function Name: PWM_1_GetInterruptSourceMasked
1327:Generated_Source\PSoC4/PWM_1.c **** ********************************************************************************
1328:Generated_Source\PSoC4/PWM_1.c **** *
1329:Generated_Source\PSoC4/PWM_1.c **** * Summary:
1330:Generated_Source\PSoC4/PWM_1.c **** *  Gets the interrupt requests masked by the interrupt mask.
1331:Generated_Source\PSoC4/PWM_1.c **** *
1332:Generated_Source\PSoC4/PWM_1.c **** * Parameters:
1333:Generated_Source\PSoC4/PWM_1.c **** *   None
1334:Generated_Source\PSoC4/PWM_1.c **** *
1335:Generated_Source\PSoC4/PWM_1.c **** * Return:
1336:Generated_Source\PSoC4/PWM_1.c **** *  Masked interrupt source
1337:Generated_Source\PSoC4/PWM_1.c **** *   Values:
1338:Generated_Source\PSoC4/PWM_1.c **** *     - PWM_1_INTR_MASK_TC       - Terminal count mask
1339:Generated_Source\PSoC4/PWM_1.c **** *     - PWM_1_INTR_MASK_CC_MATCH - Compare count / capture mask
1340:Generated_Source\PSoC4/PWM_1.c **** *
1341:Generated_Source\PSoC4/PWM_1.c **** *******************************************************************************/
1342:Generated_Source\PSoC4/PWM_1.c **** uint32 PWM_1_GetInterruptSourceMasked(void)
1343:Generated_Source\PSoC4/PWM_1.c **** {
 1880              		.loc 1 1343 0
 1881              		.cfi_startproc
 1882              		@ args = 0, pretend = 0, frame = 0
 1883              		@ frame_needed = 1, uses_anonymous_args = 0
 1884 0000 80B5     		push	{r7, lr}
 1885              		.cfi_def_cfa_offset 8
 1886              		.cfi_offset 7, -8
 1887              		.cfi_offset 14, -4
 1888 0002 00AF     		add	r7, sp, #0
 1889              		.cfi_def_cfa_register 7
1344:Generated_Source\PSoC4/PWM_1.c ****     return (PWM_1_INTERRUPT_MASKED_REG);
 1890              		.loc 1 1344 0
 1891 0004 024B     		ldr	r3, .L120
 1892 0006 1B68     		ldr	r3, [r3]
1345:Generated_Source\PSoC4/PWM_1.c **** }
 1893              		.loc 1 1345 0
 1894 0008 1800     		movs	r0, r3
 1895 000a BD46     		mov	sp, r7
 1896              		@ sp needed
 1897 000c 80BD     		pop	{r7, pc}
 1898              	.L121:
 1899 000e C046     		.align	2
 1900              	.L120:
 1901 0010 7C012040 		.word	1075839356
 1902              		.cfi_endproc
 1903              	.LFE37:
ARM GAS  C:\Users\essele\AppData\Local\Temp\cc7wN8Yp.s 			page 58


 1904              		.size	PWM_1_GetInterruptSourceMasked, .-PWM_1_GetInterruptSourceMasked
 1905              		.section	.text.PWM_1_GetInterruptSource,"ax",%progbits
 1906              		.align	2
 1907              		.global	PWM_1_GetInterruptSource
 1908              		.code	16
 1909              		.thumb_func
 1910              		.type	PWM_1_GetInterruptSource, %function
 1911              	PWM_1_GetInterruptSource:
 1912              	.LFB38:
1346:Generated_Source\PSoC4/PWM_1.c **** 
1347:Generated_Source\PSoC4/PWM_1.c **** 
1348:Generated_Source\PSoC4/PWM_1.c **** /*******************************************************************************
1349:Generated_Source\PSoC4/PWM_1.c **** * Function Name: PWM_1_GetInterruptSource
1350:Generated_Source\PSoC4/PWM_1.c **** ********************************************************************************
1351:Generated_Source\PSoC4/PWM_1.c **** *
1352:Generated_Source\PSoC4/PWM_1.c **** * Summary:
1353:Generated_Source\PSoC4/PWM_1.c **** *  Gets the interrupt requests (without masking).
1354:Generated_Source\PSoC4/PWM_1.c **** *
1355:Generated_Source\PSoC4/PWM_1.c **** * Parameters:
1356:Generated_Source\PSoC4/PWM_1.c **** *  None
1357:Generated_Source\PSoC4/PWM_1.c **** *
1358:Generated_Source\PSoC4/PWM_1.c **** * Return:
1359:Generated_Source\PSoC4/PWM_1.c **** *  Interrupt request value
1360:Generated_Source\PSoC4/PWM_1.c **** *   Values:
1361:Generated_Source\PSoC4/PWM_1.c **** *     - PWM_1_INTR_MASK_TC       - Terminal count mask
1362:Generated_Source\PSoC4/PWM_1.c **** *     - PWM_1_INTR_MASK_CC_MATCH - Compare count / capture mask
1363:Generated_Source\PSoC4/PWM_1.c **** *
1364:Generated_Source\PSoC4/PWM_1.c **** *******************************************************************************/
1365:Generated_Source\PSoC4/PWM_1.c **** uint32 PWM_1_GetInterruptSource(void)
1366:Generated_Source\PSoC4/PWM_1.c **** {
 1913              		.loc 1 1366 0
 1914              		.cfi_startproc
 1915              		@ args = 0, pretend = 0, frame = 0
 1916              		@ frame_needed = 1, uses_anonymous_args = 0
 1917 0000 80B5     		push	{r7, lr}
 1918              		.cfi_def_cfa_offset 8
 1919              		.cfi_offset 7, -8
 1920              		.cfi_offset 14, -4
 1921 0002 00AF     		add	r7, sp, #0
 1922              		.cfi_def_cfa_register 7
1367:Generated_Source\PSoC4/PWM_1.c ****     return (PWM_1_INTERRUPT_REQ_REG);
 1923              		.loc 1 1367 0
 1924 0004 024B     		ldr	r3, .L124
 1925 0006 1B68     		ldr	r3, [r3]
1368:Generated_Source\PSoC4/PWM_1.c **** }
 1926              		.loc 1 1368 0
 1927 0008 1800     		movs	r0, r3
 1928 000a BD46     		mov	sp, r7
 1929              		@ sp needed
 1930 000c 80BD     		pop	{r7, pc}
 1931              	.L125:
 1932 000e C046     		.align	2
 1933              	.L124:
 1934 0010 70012040 		.word	1075839344
 1935              		.cfi_endproc
 1936              	.LFE38:
 1937              		.size	PWM_1_GetInterruptSource, .-PWM_1_GetInterruptSource
ARM GAS  C:\Users\essele\AppData\Local\Temp\cc7wN8Yp.s 			page 59


 1938              		.section	.text.PWM_1_ClearInterrupt,"ax",%progbits
 1939              		.align	2
 1940              		.global	PWM_1_ClearInterrupt
 1941              		.code	16
 1942              		.thumb_func
 1943              		.type	PWM_1_ClearInterrupt, %function
 1944              	PWM_1_ClearInterrupt:
 1945              	.LFB39:
1369:Generated_Source\PSoC4/PWM_1.c **** 
1370:Generated_Source\PSoC4/PWM_1.c **** 
1371:Generated_Source\PSoC4/PWM_1.c **** /*******************************************************************************
1372:Generated_Source\PSoC4/PWM_1.c **** * Function Name: PWM_1_ClearInterrupt
1373:Generated_Source\PSoC4/PWM_1.c **** ********************************************************************************
1374:Generated_Source\PSoC4/PWM_1.c **** *
1375:Generated_Source\PSoC4/PWM_1.c **** * Summary:
1376:Generated_Source\PSoC4/PWM_1.c **** *  Clears the interrupt request.
1377:Generated_Source\PSoC4/PWM_1.c **** *
1378:Generated_Source\PSoC4/PWM_1.c **** * Parameters:
1379:Generated_Source\PSoC4/PWM_1.c **** *   interruptMask: Mask of interrupts to clear
1380:Generated_Source\PSoC4/PWM_1.c **** *   Values:
1381:Generated_Source\PSoC4/PWM_1.c **** *     - PWM_1_INTR_MASK_TC       - Terminal count mask
1382:Generated_Source\PSoC4/PWM_1.c **** *     - PWM_1_INTR_MASK_CC_MATCH - Compare count / capture mask
1383:Generated_Source\PSoC4/PWM_1.c **** *
1384:Generated_Source\PSoC4/PWM_1.c **** * Return:
1385:Generated_Source\PSoC4/PWM_1.c **** *  None
1386:Generated_Source\PSoC4/PWM_1.c **** *
1387:Generated_Source\PSoC4/PWM_1.c **** *******************************************************************************/
1388:Generated_Source\PSoC4/PWM_1.c **** void PWM_1_ClearInterrupt(uint32 interruptMask)
1389:Generated_Source\PSoC4/PWM_1.c **** {
 1946              		.loc 1 1389 0
 1947              		.cfi_startproc
 1948              		@ args = 0, pretend = 0, frame = 8
 1949              		@ frame_needed = 1, uses_anonymous_args = 0
 1950 0000 80B5     		push	{r7, lr}
 1951              		.cfi_def_cfa_offset 8
 1952              		.cfi_offset 7, -8
 1953              		.cfi_offset 14, -4
 1954 0002 82B0     		sub	sp, sp, #8
 1955              		.cfi_def_cfa_offset 16
 1956 0004 00AF     		add	r7, sp, #0
 1957              		.cfi_def_cfa_register 7
 1958 0006 7860     		str	r0, [r7, #4]
1390:Generated_Source\PSoC4/PWM_1.c ****     PWM_1_INTERRUPT_REQ_REG = interruptMask;
 1959              		.loc 1 1390 0
 1960 0008 034B     		ldr	r3, .L127
 1961 000a 7A68     		ldr	r2, [r7, #4]
 1962 000c 1A60     		str	r2, [r3]
1391:Generated_Source\PSoC4/PWM_1.c **** }
 1963              		.loc 1 1391 0
 1964 000e C046     		nop
 1965 0010 BD46     		mov	sp, r7
 1966 0012 02B0     		add	sp, sp, #8
 1967              		@ sp needed
 1968 0014 80BD     		pop	{r7, pc}
 1969              	.L128:
 1970 0016 C046     		.align	2
 1971              	.L127:
ARM GAS  C:\Users\essele\AppData\Local\Temp\cc7wN8Yp.s 			page 60


 1972 0018 70012040 		.word	1075839344
 1973              		.cfi_endproc
 1974              	.LFE39:
 1975              		.size	PWM_1_ClearInterrupt, .-PWM_1_ClearInterrupt
 1976              		.section	.text.PWM_1_SetInterrupt,"ax",%progbits
 1977              		.align	2
 1978              		.global	PWM_1_SetInterrupt
 1979              		.code	16
 1980              		.thumb_func
 1981              		.type	PWM_1_SetInterrupt, %function
 1982              	PWM_1_SetInterrupt:
 1983              	.LFB40:
1392:Generated_Source\PSoC4/PWM_1.c **** 
1393:Generated_Source\PSoC4/PWM_1.c **** 
1394:Generated_Source\PSoC4/PWM_1.c **** /*******************************************************************************
1395:Generated_Source\PSoC4/PWM_1.c **** * Function Name: PWM_1_SetInterrupt
1396:Generated_Source\PSoC4/PWM_1.c **** ********************************************************************************
1397:Generated_Source\PSoC4/PWM_1.c **** *
1398:Generated_Source\PSoC4/PWM_1.c **** * Summary:
1399:Generated_Source\PSoC4/PWM_1.c **** *  Sets a software interrupt request.
1400:Generated_Source\PSoC4/PWM_1.c **** *
1401:Generated_Source\PSoC4/PWM_1.c **** * Parameters:
1402:Generated_Source\PSoC4/PWM_1.c **** *   interruptMask: Mask of interrupts to set
1403:Generated_Source\PSoC4/PWM_1.c **** *   Values:
1404:Generated_Source\PSoC4/PWM_1.c **** *     - PWM_1_INTR_MASK_TC       - Terminal count mask
1405:Generated_Source\PSoC4/PWM_1.c **** *     - PWM_1_INTR_MASK_CC_MATCH - Compare count / capture mask
1406:Generated_Source\PSoC4/PWM_1.c **** *
1407:Generated_Source\PSoC4/PWM_1.c **** * Return:
1408:Generated_Source\PSoC4/PWM_1.c **** *  None
1409:Generated_Source\PSoC4/PWM_1.c **** *
1410:Generated_Source\PSoC4/PWM_1.c **** *******************************************************************************/
1411:Generated_Source\PSoC4/PWM_1.c **** void PWM_1_SetInterrupt(uint32 interruptMask)
1412:Generated_Source\PSoC4/PWM_1.c **** {
 1984              		.loc 1 1412 0
 1985              		.cfi_startproc
 1986              		@ args = 0, pretend = 0, frame = 8
 1987              		@ frame_needed = 1, uses_anonymous_args = 0
 1988 0000 80B5     		push	{r7, lr}
 1989              		.cfi_def_cfa_offset 8
 1990              		.cfi_offset 7, -8
 1991              		.cfi_offset 14, -4
 1992 0002 82B0     		sub	sp, sp, #8
 1993              		.cfi_def_cfa_offset 16
 1994 0004 00AF     		add	r7, sp, #0
 1995              		.cfi_def_cfa_register 7
 1996 0006 7860     		str	r0, [r7, #4]
1413:Generated_Source\PSoC4/PWM_1.c ****     PWM_1_INTERRUPT_SET_REG = interruptMask;
 1997              		.loc 1 1413 0
 1998 0008 034B     		ldr	r3, .L130
 1999 000a 7A68     		ldr	r2, [r7, #4]
 2000 000c 1A60     		str	r2, [r3]
1414:Generated_Source\PSoC4/PWM_1.c **** }
 2001              		.loc 1 1414 0
 2002 000e C046     		nop
 2003 0010 BD46     		mov	sp, r7
 2004 0012 02B0     		add	sp, sp, #8
 2005              		@ sp needed
ARM GAS  C:\Users\essele\AppData\Local\Temp\cc7wN8Yp.s 			page 61


 2006 0014 80BD     		pop	{r7, pc}
 2007              	.L131:
 2008 0016 C046     		.align	2
 2009              	.L130:
 2010 0018 74012040 		.word	1075839348
 2011              		.cfi_endproc
 2012              	.LFE40:
 2013              		.size	PWM_1_SetInterrupt, .-PWM_1_SetInterrupt
 2014              		.text
 2015              	.Letext0:
 2016              		.file 2 "Generated_Source\\PSoC4\\cytypes.h"
 2017              		.section	.debug_info,"",%progbits
 2018              	.Ldebug_info0:
 2019 0000 F7060000 		.4byte	0x6f7
 2020 0004 0400     		.2byte	0x4
 2021 0006 00000000 		.4byte	.Ldebug_abbrev0
 2022 000a 04       		.byte	0x4
 2023 000b 01       		.uleb128 0x1
 2024 000c 02020000 		.4byte	.LASF77
 2025 0010 0C       		.byte	0xc
 2026 0011 51000000 		.4byte	.LASF78
 2027 0015 A9040000 		.4byte	.LASF79
 2028 0019 00000000 		.4byte	.Ldebug_ranges0+0
 2029 001d 00000000 		.4byte	0
 2030 0021 00000000 		.4byte	.Ldebug_line0
 2031 0025 02       		.uleb128 0x2
 2032 0026 01       		.byte	0x1
 2033 0027 06       		.byte	0x6
 2034 0028 D9000000 		.4byte	.LASF0
 2035 002c 02       		.uleb128 0x2
 2036 002d 01       		.byte	0x1
 2037 002e 08       		.byte	0x8
 2038 002f 77030000 		.4byte	.LASF1
 2039 0033 02       		.uleb128 0x2
 2040 0034 02       		.byte	0x2
 2041 0035 05       		.byte	0x5
 2042 0036 C0030000 		.4byte	.LASF2
 2043 003a 02       		.uleb128 0x2
 2044 003b 02       		.byte	0x2
 2045 003c 07       		.byte	0x7
 2046 003d C9010000 		.4byte	.LASF3
 2047 0041 02       		.uleb128 0x2
 2048 0042 04       		.byte	0x4
 2049 0043 05       		.byte	0x5
 2050 0044 0B010000 		.4byte	.LASF4
 2051 0048 02       		.uleb128 0x2
 2052 0049 04       		.byte	0x4
 2053 004a 07       		.byte	0x7
 2054 004b 8A010000 		.4byte	.LASF5
 2055 004f 02       		.uleb128 0x2
 2056 0050 08       		.byte	0x8
 2057 0051 05       		.byte	0x5
 2058 0052 CB000000 		.4byte	.LASF6
 2059 0056 02       		.uleb128 0x2
 2060 0057 08       		.byte	0x8
 2061 0058 07       		.byte	0x7
 2062 0059 77000000 		.4byte	.LASF7
ARM GAS  C:\Users\essele\AppData\Local\Temp\cc7wN8Yp.s 			page 62


 2063 005d 03       		.uleb128 0x3
 2064 005e 04       		.byte	0x4
 2065 005f 05       		.byte	0x5
 2066 0060 696E7400 		.ascii	"int\000"
 2067 0064 02       		.uleb128 0x2
 2068 0065 04       		.byte	0x4
 2069 0066 07       		.byte	0x7
 2070 0067 67010000 		.4byte	.LASF8
 2071 006b 04       		.uleb128 0x4
 2072 006c 14010000 		.4byte	.LASF9
 2073 0070 02       		.byte	0x2
 2074 0071 E401     		.2byte	0x1e4
 2075 0073 2C000000 		.4byte	0x2c
 2076 0077 04       		.uleb128 0x4
 2077 0078 46010000 		.4byte	.LASF10
 2078 007c 02       		.byte	0x2
 2079 007d E601     		.2byte	0x1e6
 2080 007f 48000000 		.4byte	0x48
 2081 0083 02       		.uleb128 0x2
 2082 0084 04       		.byte	0x4
 2083 0085 04       		.byte	0x4
 2084 0086 2D030000 		.4byte	.LASF11
 2085 008a 02       		.uleb128 0x2
 2086 008b 08       		.byte	0x8
 2087 008c 04       		.byte	0x4
 2088 008d 1A010000 		.4byte	.LASF12
 2089 0091 02       		.uleb128 0x2
 2090 0092 01       		.byte	0x1
 2091 0093 08       		.byte	0x8
 2092 0094 15040000 		.4byte	.LASF13
 2093 0098 04       		.uleb128 0x4
 2094 0099 90020000 		.4byte	.LASF14
 2095 009d 02       		.byte	0x2
 2096 009e 9002     		.2byte	0x290
 2097 00a0 A4000000 		.4byte	0xa4
 2098 00a4 05       		.uleb128 0x5
 2099 00a5 77000000 		.4byte	0x77
 2100 00a9 02       		.uleb128 0x2
 2101 00aa 08       		.byte	0x8
 2102 00ab 04       		.byte	0x4
 2103 00ac C9020000 		.4byte	.LASF15
 2104 00b0 02       		.uleb128 0x2
 2105 00b1 04       		.byte	0x4
 2106 00b2 07       		.byte	0x7
 2107 00b3 C0020000 		.4byte	.LASF16
 2108 00b7 06       		.uleb128 0x6
 2109 00b8 F7010000 		.4byte	.LASF17
 2110 00bc 01       		.byte	0x1
 2111 00bd 26       		.byte	0x26
 2112 00be 00000000 		.4byte	.LFB1
 2113 00c2 5C000000 		.4byte	.LFE1-.LFB1
 2114 00c6 01       		.uleb128 0x1
 2115 00c7 9C       		.byte	0x9c
 2116 00c8 07       		.uleb128 0x7
 2117 00c9 EA010000 		.4byte	.LASF19
 2118 00cd 01       		.byte	0x1
 2119 00ce B1       		.byte	0xb1
ARM GAS  C:\Users\essele\AppData\Local\Temp\cc7wN8Yp.s 			page 63


 2120 00cf 00000000 		.4byte	.LFB2
 2121 00d3 3C000000 		.4byte	.LFE2-.LFB2
 2122 00d7 01       		.uleb128 0x1
 2123 00d8 9C       		.byte	0x9c
 2124 00d9 EC000000 		.4byte	0xec
 2125 00dd 08       		.uleb128 0x8
 2126 00de EA040000 		.4byte	.LASF21
 2127 00e2 01       		.byte	0x1
 2128 00e3 B3       		.byte	0xb3
 2129 00e4 6B000000 		.4byte	0x6b
 2130 00e8 02       		.uleb128 0x2
 2131 00e9 91       		.byte	0x91
 2132 00ea 6F       		.sleb128 -17
 2133 00eb 00       		.byte	0
 2134 00ec 06       		.uleb128 0x6
 2135 00ed 89040000 		.4byte	.LASF18
 2136 00f1 01       		.byte	0x1
 2137 00f2 E6       		.byte	0xe6
 2138 00f3 00000000 		.4byte	.LFB3
 2139 00f7 24000000 		.4byte	.LFE3-.LFB3
 2140 00fb 01       		.uleb128 0x1
 2141 00fc 9C       		.byte	0x9c
 2142 00fd 09       		.uleb128 0x9
 2143 00fe 06000000 		.4byte	.LASF20
 2144 0102 01       		.byte	0x1
 2145 0103 0001     		.2byte	0x100
 2146 0105 00000000 		.4byte	.LFB4
 2147 0109 34000000 		.4byte	.LFE4-.LFB4
 2148 010d 01       		.uleb128 0x1
 2149 010e 9C       		.byte	0x9c
 2150 010f 23010000 		.4byte	0x123
 2151 0113 0A       		.uleb128 0xa
 2152 0114 EA040000 		.4byte	.LASF21
 2153 0118 01       		.byte	0x1
 2154 0119 0201     		.2byte	0x102
 2155 011b 6B000000 		.4byte	0x6b
 2156 011f 02       		.uleb128 0x2
 2157 0120 91       		.byte	0x91
 2158 0121 6F       		.sleb128 -17
 2159 0122 00       		.byte	0
 2160 0123 09       		.uleb128 0x9
 2161 0124 74010000 		.4byte	.LASF22
 2162 0128 01       		.byte	0x1
 2163 0129 2501     		.2byte	0x125
 2164 012b 00000000 		.4byte	.LFB5
 2165 012f 48000000 		.4byte	.LFE5-.LFB5
 2166 0133 01       		.uleb128 0x1
 2167 0134 9C       		.byte	0x9c
 2168 0135 58010000 		.4byte	0x158
 2169 0139 0B       		.uleb128 0xb
 2170 013a 1A040000 		.4byte	.LASF24
 2171 013e 01       		.byte	0x1
 2172 013f 2501     		.2byte	0x125
 2173 0141 77000000 		.4byte	0x77
 2174 0145 02       		.uleb128 0x2
 2175 0146 91       		.byte	0x91
 2176 0147 64       		.sleb128 -28
ARM GAS  C:\Users\essele\AppData\Local\Temp\cc7wN8Yp.s 			page 64


 2177 0148 0A       		.uleb128 0xa
 2178 0149 EA040000 		.4byte	.LASF21
 2179 014d 01       		.byte	0x1
 2180 014e 2701     		.2byte	0x127
 2181 0150 6B000000 		.4byte	0x6b
 2182 0154 02       		.uleb128 0x2
 2183 0155 91       		.byte	0x91
 2184 0156 6F       		.sleb128 -17
 2185 0157 00       		.byte	0
 2186 0158 09       		.uleb128 0x9
 2187 0159 3F050000 		.4byte	.LASF23
 2188 015d 01       		.byte	0x1
 2189 015e 4601     		.2byte	0x146
 2190 0160 00000000 		.4byte	.LFB6
 2191 0164 48000000 		.4byte	.LFE6-.LFB6
 2192 0168 01       		.uleb128 0x1
 2193 0169 9C       		.byte	0x9c
 2194 016a 8D010000 		.4byte	0x18d
 2195 016e 0B       		.uleb128 0xb
 2196 016f 8E000000 		.4byte	.LASF25
 2197 0173 01       		.byte	0x1
 2198 0174 4601     		.2byte	0x146
 2199 0176 77000000 		.4byte	0x77
 2200 017a 02       		.uleb128 0x2
 2201 017b 91       		.byte	0x91
 2202 017c 64       		.sleb128 -28
 2203 017d 0A       		.uleb128 0xa
 2204 017e EA040000 		.4byte	.LASF21
 2205 0182 01       		.byte	0x1
 2206 0183 4801     		.2byte	0x148
 2207 0185 6B000000 		.4byte	0x6b
 2208 0189 02       		.uleb128 0x2
 2209 018a 91       		.byte	0x91
 2210 018b 6F       		.sleb128 -17
 2211 018c 00       		.byte	0
 2212 018d 09       		.uleb128 0x9
 2213 018e 34040000 		.4byte	.LASF26
 2214 0192 01       		.byte	0x1
 2215 0193 6B01     		.2byte	0x16b
 2216 0195 00000000 		.4byte	.LFB7
 2217 0199 48000000 		.4byte	.LFE7-.LFB7
 2218 019d 01       		.uleb128 0x1
 2219 019e 9C       		.byte	0x9c
 2220 019f C2010000 		.4byte	0x1c2
 2221 01a3 0B       		.uleb128 0xb
 2222 01a4 33030000 		.4byte	.LASF27
 2223 01a8 01       		.byte	0x1
 2224 01a9 6B01     		.2byte	0x16b
 2225 01ab 77000000 		.4byte	0x77
 2226 01af 02       		.uleb128 0x2
 2227 01b0 91       		.byte	0x91
 2228 01b1 64       		.sleb128 -28
 2229 01b2 0A       		.uleb128 0xa
 2230 01b3 EA040000 		.4byte	.LASF21
 2231 01b7 01       		.byte	0x1
 2232 01b8 6D01     		.2byte	0x16d
 2233 01ba 6B000000 		.4byte	0x6b
ARM GAS  C:\Users\essele\AppData\Local\Temp\cc7wN8Yp.s 			page 65


 2234 01be 02       		.uleb128 0x2
 2235 01bf 91       		.byte	0x91
 2236 01c0 6F       		.sleb128 -17
 2237 01c1 00       		.byte	0
 2238 01c2 09       		.uleb128 0x9
 2239 01c3 95000000 		.4byte	.LASF28
 2240 01c7 01       		.byte	0x1
 2241 01c8 8B01     		.2byte	0x18b
 2242 01ca 00000000 		.4byte	.LFB8
 2243 01ce 50000000 		.4byte	.LFE8-.LFB8
 2244 01d2 01       		.uleb128 0x1
 2245 01d3 9C       		.byte	0x9c
 2246 01d4 F7010000 		.4byte	0x1f7
 2247 01d8 0B       		.uleb128 0xb
 2248 01d9 DC010000 		.4byte	.LASF29
 2249 01dd 01       		.byte	0x1
 2250 01de 8B01     		.2byte	0x18b
 2251 01e0 77000000 		.4byte	0x77
 2252 01e4 02       		.uleb128 0x2
 2253 01e5 91       		.byte	0x91
 2254 01e6 64       		.sleb128 -28
 2255 01e7 0A       		.uleb128 0xa
 2256 01e8 EA040000 		.4byte	.LASF21
 2257 01ec 01       		.byte	0x1
 2258 01ed 8D01     		.2byte	0x18d
 2259 01ef 6B000000 		.4byte	0x6b
 2260 01f3 02       		.uleb128 0x2
 2261 01f4 91       		.byte	0x91
 2262 01f5 6F       		.sleb128 -17
 2263 01f6 00       		.byte	0
 2264 01f7 0C       		.uleb128 0xc
 2265 01f8 DD020000 		.4byte	.LASF30
 2266 01fc 01       		.byte	0x1
 2267 01fd C101     		.2byte	0x1c1
 2268 01ff 00000000 		.4byte	.LFB9
 2269 0203 20000000 		.4byte	.LFE9-.LFB9
 2270 0207 01       		.uleb128 0x1
 2271 0208 9C       		.byte	0x9c
 2272 0209 1D020000 		.4byte	0x21d
 2273 020d 0B       		.uleb128 0xb
 2274 020e 9C010000 		.4byte	.LASF31
 2275 0212 01       		.byte	0x1
 2276 0213 C101     		.2byte	0x1c1
 2277 0215 77000000 		.4byte	0x77
 2278 0219 02       		.uleb128 0x2
 2279 021a 91       		.byte	0x91
 2280 021b 74       		.sleb128 -12
 2281 021c 00       		.byte	0
 2282 021d 09       		.uleb128 0x9
 2283 021e 9A030000 		.4byte	.LASF32
 2284 0222 01       		.byte	0x1
 2285 0223 E501     		.2byte	0x1e5
 2286 0225 00000000 		.4byte	.LFB10
 2287 0229 4C000000 		.4byte	.LFE10-.LFB10
 2288 022d 01       		.uleb128 0x1
 2289 022e 9C       		.byte	0x9c
 2290 022f 52020000 		.4byte	0x252
ARM GAS  C:\Users\essele\AppData\Local\Temp\cc7wN8Yp.s 			page 66


 2291 0233 0B       		.uleb128 0xb
 2292 0234 30050000 		.4byte	.LASF33
 2293 0238 01       		.byte	0x1
 2294 0239 E501     		.2byte	0x1e5
 2295 023b 77000000 		.4byte	0x77
 2296 023f 02       		.uleb128 0x2
 2297 0240 91       		.byte	0x91
 2298 0241 64       		.sleb128 -28
 2299 0242 0A       		.uleb128 0xa
 2300 0243 EA040000 		.4byte	.LASF21
 2301 0247 01       		.byte	0x1
 2302 0248 E701     		.2byte	0x1e7
 2303 024a 6B000000 		.4byte	0x6b
 2304 024e 02       		.uleb128 0x2
 2305 024f 91       		.byte	0x91
 2306 0250 6F       		.sleb128 -17
 2307 0251 00       		.byte	0
 2308 0252 09       		.uleb128 0x9
 2309 0253 A9020000 		.4byte	.LASF34
 2310 0257 01       		.byte	0x1
 2311 0258 0702     		.2byte	0x207
 2312 025a 00000000 		.4byte	.LFB11
 2313 025e 4C000000 		.4byte	.LFE11-.LFB11
 2314 0262 01       		.uleb128 0x1
 2315 0263 9C       		.byte	0x9c
 2316 0264 87020000 		.4byte	0x287
 2317 0268 0B       		.uleb128 0xb
 2318 0269 AF030000 		.4byte	.LASF35
 2319 026d 01       		.byte	0x1
 2320 026e 0702     		.2byte	0x207
 2321 0270 77000000 		.4byte	0x77
 2322 0274 02       		.uleb128 0x2
 2323 0275 91       		.byte	0x91
 2324 0276 64       		.sleb128 -28
 2325 0277 0A       		.uleb128 0xa
 2326 0278 EA040000 		.4byte	.LASF21
 2327 027c 01       		.byte	0x1
 2328 027d 0902     		.2byte	0x209
 2329 027f 6B000000 		.4byte	0x6b
 2330 0283 02       		.uleb128 0x2
 2331 0284 91       		.byte	0x91
 2332 0285 6F       		.sleb128 -17
 2333 0286 00       		.byte	0
 2334 0287 09       		.uleb128 0x9
 2335 0288 85030000 		.4byte	.LASF36
 2336 028c 01       		.byte	0x1
 2337 028d 2802     		.2byte	0x228
 2338 028f 00000000 		.4byte	.LFB12
 2339 0293 50000000 		.4byte	.LFE12-.LFB12
 2340 0297 01       		.uleb128 0x1
 2341 0298 9C       		.byte	0x9c
 2342 0299 BC020000 		.4byte	0x2bc
 2343 029d 0B       		.uleb128 0xb
 2344 029e 5E010000 		.4byte	.LASF37
 2345 02a2 01       		.byte	0x1
 2346 02a3 2802     		.2byte	0x228
 2347 02a5 77000000 		.4byte	0x77
ARM GAS  C:\Users\essele\AppData\Local\Temp\cc7wN8Yp.s 			page 67


 2348 02a9 02       		.uleb128 0x2
 2349 02aa 91       		.byte	0x91
 2350 02ab 64       		.sleb128 -28
 2351 02ac 0A       		.uleb128 0xa
 2352 02ad EA040000 		.4byte	.LASF21
 2353 02b1 01       		.byte	0x1
 2354 02b2 2A02     		.2byte	0x22a
 2355 02b4 6B000000 		.4byte	0x6b
 2356 02b8 02       		.uleb128 0x2
 2357 02b9 91       		.byte	0x91
 2358 02ba 6F       		.sleb128 -17
 2359 02bb 00       		.byte	0
 2360 02bc 09       		.uleb128 0x9
 2361 02bd 51030000 		.4byte	.LASF38
 2362 02c1 01       		.byte	0x1
 2363 02c2 4902     		.2byte	0x249
 2364 02c4 00000000 		.4byte	.LFB13
 2365 02c8 48000000 		.4byte	.LFE13-.LFB13
 2366 02cc 01       		.uleb128 0x1
 2367 02cd 9C       		.byte	0x9c
 2368 02ce F1020000 		.4byte	0x2f1
 2369 02d2 0B       		.uleb128 0xb
 2370 02d3 59010000 		.4byte	.LASF39
 2371 02d7 01       		.byte	0x1
 2372 02d8 4902     		.2byte	0x249
 2373 02da 77000000 		.4byte	0x77
 2374 02de 02       		.uleb128 0x2
 2375 02df 91       		.byte	0x91
 2376 02e0 64       		.sleb128 -28
 2377 02e1 0A       		.uleb128 0xa
 2378 02e2 EA040000 		.4byte	.LASF21
 2379 02e6 01       		.byte	0x1
 2380 02e7 4B02     		.2byte	0x24b
 2381 02e9 6B000000 		.4byte	0x6b
 2382 02ed 02       		.uleb128 0x2
 2383 02ee 91       		.byte	0x91
 2384 02ef 6F       		.sleb128 -17
 2385 02f0 00       		.byte	0
 2386 02f1 0C       		.uleb128 0xc
 2387 02f2 96020000 		.4byte	.LASF40
 2388 02f6 01       		.byte	0x1
 2389 02f7 6702     		.2byte	0x267
 2390 02f9 00000000 		.4byte	.LFB14
 2391 02fd 20000000 		.4byte	.LFE14-.LFB14
 2392 0301 01       		.uleb128 0x1
 2393 0302 9C       		.byte	0x9c
 2394 0303 17030000 		.4byte	0x317
 2395 0307 0B       		.uleb128 0xb
 2396 0308 00000000 		.4byte	.LASF41
 2397 030c 01       		.byte	0x1
 2398 030d 6702     		.2byte	0x267
 2399 030f 77000000 		.4byte	0x77
 2400 0313 02       		.uleb128 0x2
 2401 0314 91       		.byte	0x91
 2402 0315 74       		.sleb128 -12
 2403 0316 00       		.byte	0
 2404 0317 0D       		.uleb128 0xd
ARM GAS  C:\Users\essele\AppData\Local\Temp\cc7wN8Yp.s 			page 68


 2405 0318 21010000 		.4byte	.LASF46
 2406 031c 01       		.byte	0x1
 2407 031d 7B02     		.2byte	0x27b
 2408 031f 77000000 		.4byte	0x77
 2409 0323 00000000 		.4byte	.LFB15
 2410 0327 18000000 		.4byte	.LFE15-.LFB15
 2411 032b 01       		.uleb128 0x1
 2412 032c 9C       		.byte	0x9c
 2413 032d 09       		.uleb128 0x9
 2414 032e EE020000 		.4byte	.LASF42
 2415 0332 01       		.byte	0x1
 2416 0333 9802     		.2byte	0x298
 2417 0335 00000000 		.4byte	.LFB16
 2418 0339 48000000 		.4byte	.LFE16-.LFB16
 2419 033d 01       		.uleb128 0x1
 2420 033e 9C       		.byte	0x9c
 2421 033f 62030000 		.4byte	0x362
 2422 0343 0B       		.uleb128 0xb
 2423 0344 72040000 		.4byte	.LASF43
 2424 0348 01       		.byte	0x1
 2425 0349 9802     		.2byte	0x298
 2426 034b 77000000 		.4byte	0x77
 2427 034f 02       		.uleb128 0x2
 2428 0350 91       		.byte	0x91
 2429 0351 64       		.sleb128 -28
 2430 0352 0A       		.uleb128 0xa
 2431 0353 EA040000 		.4byte	.LASF21
 2432 0357 01       		.byte	0x1
 2433 0358 9A02     		.2byte	0x29a
 2434 035a 6B000000 		.4byte	0x6b
 2435 035e 02       		.uleb128 0x2
 2436 035f 91       		.byte	0x91
 2437 0360 6F       		.sleb128 -17
 2438 0361 00       		.byte	0
 2439 0362 0C       		.uleb128 0xc
 2440 0363 FB040000 		.4byte	.LASF44
 2441 0367 01       		.byte	0x1
 2442 0368 B502     		.2byte	0x2b5
 2443 036a 00000000 		.4byte	.LFB17
 2444 036e 20000000 		.4byte	.LFE17-.LFB17
 2445 0372 01       		.uleb128 0x1
 2446 0373 9C       		.byte	0x9c
 2447 0374 88030000 		.4byte	0x388
 2448 0378 0B       		.uleb128 0xb
 2449 0379 70000000 		.4byte	.LASF45
 2450 037d 01       		.byte	0x1
 2451 037e B502     		.2byte	0x2b5
 2452 0380 77000000 		.4byte	0x77
 2453 0384 02       		.uleb128 0x2
 2454 0385 91       		.byte	0x91
 2455 0386 74       		.sleb128 -12
 2456 0387 00       		.byte	0
 2457 0388 0D       		.uleb128 0xd
 2458 0389 A5010000 		.4byte	.LASF47
 2459 038d 01       		.byte	0x1
 2460 038e C902     		.2byte	0x2c9
 2461 0390 77000000 		.4byte	0x77
ARM GAS  C:\Users\essele\AppData\Local\Temp\cc7wN8Yp.s 			page 69


 2462 0394 00000000 		.4byte	.LFB18
 2463 0398 18000000 		.4byte	.LFE18-.LFB18
 2464 039c 01       		.uleb128 0x1
 2465 039d 9C       		.byte	0x9c
 2466 039e 09       		.uleb128 0x9
 2467 039f 18030000 		.4byte	.LASF48
 2468 03a3 01       		.byte	0x1
 2469 03a4 E302     		.2byte	0x2e3
 2470 03a6 00000000 		.4byte	.LFB19
 2471 03aa 48000000 		.4byte	.LFE19-.LFB19
 2472 03ae 01       		.uleb128 0x1
 2473 03af 9C       		.byte	0x9c
 2474 03b0 D3030000 		.4byte	0x3d3
 2475 03b4 0B       		.uleb128 0xb
 2476 03b5 4F050000 		.4byte	.LASF49
 2477 03b9 01       		.byte	0x1
 2478 03ba E302     		.2byte	0x2e3
 2479 03bc 77000000 		.4byte	0x77
 2480 03c0 02       		.uleb128 0x2
 2481 03c1 91       		.byte	0x91
 2482 03c2 64       		.sleb128 -28
 2483 03c3 0A       		.uleb128 0xa
 2484 03c4 EA040000 		.4byte	.LASF21
 2485 03c8 01       		.byte	0x1
 2486 03c9 E502     		.2byte	0x2e5
 2487 03cb 6B000000 		.4byte	0x6b
 2488 03cf 02       		.uleb128 0x2
 2489 03d0 91       		.byte	0x91
 2490 03d1 6F       		.sleb128 -17
 2491 03d2 00       		.byte	0
 2492 03d3 0C       		.uleb128 0xc
 2493 03d4 3C000000 		.4byte	.LASF50
 2494 03d8 01       		.byte	0x1
 2495 03d9 FE02     		.2byte	0x2fe
 2496 03db 00000000 		.4byte	.LFB20
 2497 03df 20000000 		.4byte	.LFE20-.LFB20
 2498 03e3 01       		.uleb128 0x1
 2499 03e4 9C       		.byte	0x9c
 2500 03e5 F9030000 		.4byte	0x3f9
 2501 03e9 0B       		.uleb128 0xb
 2502 03ea 5A050000 		.4byte	.LASF51
 2503 03ee 01       		.byte	0x1
 2504 03ef FE02     		.2byte	0x2fe
 2505 03f1 77000000 		.4byte	0x77
 2506 03f5 02       		.uleb128 0x2
 2507 03f6 91       		.byte	0x91
 2508 03f7 74       		.sleb128 -12
 2509 03f8 00       		.byte	0
 2510 03f9 0D       		.uleb128 0xd
 2511 03fa 3D030000 		.4byte	.LASF52
 2512 03fe 01       		.byte	0x1
 2513 03ff 1203     		.2byte	0x312
 2514 0401 77000000 		.4byte	0x77
 2515 0405 00000000 		.4byte	.LFB21
 2516 0409 18000000 		.4byte	.LFE21-.LFB21
 2517 040d 01       		.uleb128 0x1
 2518 040e 9C       		.byte	0x9c
ARM GAS  C:\Users\essele\AppData\Local\Temp\cc7wN8Yp.s 			page 70


 2519 040f 09       		.uleb128 0x9
 2520 0410 CA030000 		.4byte	.LASF53
 2521 0414 01       		.byte	0x1
 2522 0415 2C03     		.2byte	0x32c
 2523 0417 00000000 		.4byte	.LFB22
 2524 041b 4C000000 		.4byte	.LFE22-.LFB22
 2525 041f 01       		.uleb128 0x1
 2526 0420 9C       		.byte	0x9c
 2527 0421 44040000 		.4byte	0x444
 2528 0425 0B       		.uleb128 0xb
 2529 0426 4F050000 		.4byte	.LASF49
 2530 042a 01       		.byte	0x1
 2531 042b 2C03     		.2byte	0x32c
 2532 042d 77000000 		.4byte	0x77
 2533 0431 02       		.uleb128 0x2
 2534 0432 91       		.byte	0x91
 2535 0433 64       		.sleb128 -28
 2536 0434 0A       		.uleb128 0xa
 2537 0435 EA040000 		.4byte	.LASF21
 2538 0439 01       		.byte	0x1
 2539 043a 2E03     		.2byte	0x32e
 2540 043c 6B000000 		.4byte	0x6b
 2541 0440 02       		.uleb128 0x2
 2542 0441 91       		.byte	0x91
 2543 0442 6F       		.sleb128 -17
 2544 0443 00       		.byte	0
 2545 0444 0C       		.uleb128 0xc
 2546 0445 B6010000 		.4byte	.LASF54
 2547 0449 01       		.byte	0x1
 2548 044a 5103     		.2byte	0x351
 2549 044c 00000000 		.4byte	.LFB23
 2550 0450 20000000 		.4byte	.LFE23-.LFB23
 2551 0454 01       		.uleb128 0x1
 2552 0455 9C       		.byte	0x9c
 2553 0456 6A040000 		.4byte	0x46a
 2554 045a 0B       		.uleb128 0xb
 2555 045b D5020000 		.4byte	.LASF55
 2556 045f 01       		.byte	0x1
 2557 0460 5103     		.2byte	0x351
 2558 0462 77000000 		.4byte	0x77
 2559 0466 02       		.uleb128 0x2
 2560 0467 91       		.byte	0x91
 2561 0468 74       		.sleb128 -12
 2562 0469 00       		.byte	0
 2563 046a 0D       		.uleb128 0xd
 2564 046b A6000000 		.4byte	.LASF56
 2565 046f 01       		.byte	0x1
 2566 0470 8403     		.2byte	0x384
 2567 0472 77000000 		.4byte	0x77
 2568 0476 00000000 		.4byte	.LFB24
 2569 047a 18000000 		.4byte	.LFE24-.LFB24
 2570 047e 01       		.uleb128 0x1
 2571 047f 9C       		.byte	0x9c
 2572 0480 0C       		.uleb128 0xc
 2573 0481 5C040000 		.4byte	.LASF57
 2574 0485 01       		.byte	0x1
 2575 0486 BA03     		.2byte	0x3ba
ARM GAS  C:\Users\essele\AppData\Local\Temp\cc7wN8Yp.s 			page 71


 2576 0488 00000000 		.4byte	.LFB25
 2577 048c 20000000 		.4byte	.LFE25-.LFB25
 2578 0490 01       		.uleb128 0x1
 2579 0491 9C       		.byte	0x9c
 2580 0492 A6040000 		.4byte	0x4a6
 2581 0496 0B       		.uleb128 0xb
 2582 0497 7E040000 		.4byte	.LASF58
 2583 049b 01       		.byte	0x1
 2584 049c BA03     		.2byte	0x3ba
 2585 049e 77000000 		.4byte	0x77
 2586 04a2 02       		.uleb128 0x2
 2587 04a3 91       		.byte	0x91
 2588 04a4 74       		.sleb128 -12
 2589 04a5 00       		.byte	0
 2590 04a6 0D       		.uleb128 0xd
 2591 04a7 03030000 		.4byte	.LASF59
 2592 04ab 01       		.byte	0x1
 2593 04ac E803     		.2byte	0x3e8
 2594 04ae 77000000 		.4byte	0x77
 2595 04b2 00000000 		.4byte	.LFB26
 2596 04b6 18000000 		.4byte	.LFE26-.LFB26
 2597 04ba 01       		.uleb128 0x1
 2598 04bb 9C       		.byte	0x9c
 2599 04bc 0D       		.uleb128 0xd
 2600 04bd 11000000 		.4byte	.LASF60
 2601 04c1 01       		.byte	0x1
 2602 04c2 1604     		.2byte	0x416
 2603 04c4 77000000 		.4byte	0x77
 2604 04c8 00000000 		.4byte	.LFB27
 2605 04cc 18000000 		.4byte	.LFE27-.LFB27
 2606 04d0 01       		.uleb128 0x1
 2607 04d1 9C       		.byte	0x9c
 2608 04d2 0D       		.uleb128 0xd
 2609 04d3 E5000000 		.4byte	.LASF61
 2610 04d7 01       		.byte	0x1
 2611 04d8 2B04     		.2byte	0x42b
 2612 04da 77000000 		.4byte	0x77
 2613 04de 00000000 		.4byte	.LFB28
 2614 04e2 18000000 		.4byte	.LFE28-.LFB28
 2615 04e6 01       		.uleb128 0x1
 2616 04e7 9C       		.byte	0x9c
 2617 04e8 09       		.uleb128 0x9
 2618 04e9 0D050000 		.4byte	.LASF62
 2619 04ed 01       		.byte	0x1
 2620 04ee 4604     		.2byte	0x446
 2621 04f0 00000000 		.4byte	.LFB29
 2622 04f4 44000000 		.4byte	.LFE29-.LFB29
 2623 04f8 01       		.uleb128 0x1
 2624 04f9 9C       		.byte	0x9c
 2625 04fa 1D050000 		.4byte	0x51d
 2626 04fe 0B       		.uleb128 0xb
 2627 04ff 4D010000 		.4byte	.LASF63
 2628 0503 01       		.byte	0x1
 2629 0504 4604     		.2byte	0x446
 2630 0506 77000000 		.4byte	0x77
 2631 050a 02       		.uleb128 0x2
 2632 050b 91       		.byte	0x91
ARM GAS  C:\Users\essele\AppData\Local\Temp\cc7wN8Yp.s 			page 72


 2633 050c 64       		.sleb128 -28
 2634 050d 0A       		.uleb128 0xa
 2635 050e EA040000 		.4byte	.LASF21
 2636 0512 01       		.byte	0x1
 2637 0513 4804     		.2byte	0x448
 2638 0515 6B000000 		.4byte	0x6b
 2639 0519 02       		.uleb128 0x2
 2640 051a 91       		.byte	0x91
 2641 051b 6F       		.sleb128 -17
 2642 051c 00       		.byte	0
 2643 051d 09       		.uleb128 0x9
 2644 051e 95040000 		.4byte	.LASF64
 2645 0522 01       		.byte	0x1
 2646 0523 6704     		.2byte	0x467
 2647 0525 00000000 		.4byte	.LFB30
 2648 0529 48000000 		.4byte	.LFE30-.LFB30
 2649 052d 01       		.uleb128 0x1
 2650 052e 9C       		.byte	0x9c
 2651 052f 52050000 		.4byte	0x552
 2652 0533 0B       		.uleb128 0xb
 2653 0534 4D010000 		.4byte	.LASF63
 2654 0538 01       		.byte	0x1
 2655 0539 6704     		.2byte	0x467
 2656 053b 77000000 		.4byte	0x77
 2657 053f 02       		.uleb128 0x2
 2658 0540 91       		.byte	0x91
 2659 0541 64       		.sleb128 -28
 2660 0542 0A       		.uleb128 0xa
 2661 0543 EA040000 		.4byte	.LASF21
 2662 0547 01       		.byte	0x1
 2663 0548 6904     		.2byte	0x469
 2664 054a 6B000000 		.4byte	0x6b
 2665 054e 02       		.uleb128 0x2
 2666 054f 91       		.byte	0x91
 2667 0550 6F       		.sleb128 -17
 2668 0551 00       		.byte	0
 2669 0552 09       		.uleb128 0x9
 2670 0553 64030000 		.4byte	.LASF65
 2671 0557 01       		.byte	0x1
 2672 0558 8804     		.2byte	0x488
 2673 055a 00000000 		.4byte	.LFB31
 2674 055e 4C000000 		.4byte	.LFE31-.LFB31
 2675 0562 01       		.uleb128 0x1
 2676 0563 9C       		.byte	0x9c
 2677 0564 87050000 		.4byte	0x587
 2678 0568 0B       		.uleb128 0xb
 2679 0569 4D010000 		.4byte	.LASF63
 2680 056d 01       		.byte	0x1
 2681 056e 8804     		.2byte	0x488
 2682 0570 77000000 		.4byte	0x77
 2683 0574 02       		.uleb128 0x2
 2684 0575 91       		.byte	0x91
 2685 0576 64       		.sleb128 -28
 2686 0577 0A       		.uleb128 0xa
 2687 0578 EA040000 		.4byte	.LASF21
 2688 057c 01       		.byte	0x1
 2689 057d 8A04     		.2byte	0x48a
ARM GAS  C:\Users\essele\AppData\Local\Temp\cc7wN8Yp.s 			page 73


 2690 057f 6B000000 		.4byte	0x6b
 2691 0583 02       		.uleb128 0x2
 2692 0584 91       		.byte	0x91
 2693 0585 6F       		.sleb128 -17
 2694 0586 00       		.byte	0
 2695 0587 09       		.uleb128 0x9
 2696 0588 03040000 		.4byte	.LASF66
 2697 058c 01       		.byte	0x1
 2698 058d A804     		.2byte	0x4a8
 2699 058f 00000000 		.4byte	.LFB32
 2700 0593 48000000 		.4byte	.LFE32-.LFB32
 2701 0597 01       		.uleb128 0x1
 2702 0598 9C       		.byte	0x9c
 2703 0599 BC050000 		.4byte	0x5bc
 2704 059d 0B       		.uleb128 0xb
 2705 059e 4D010000 		.4byte	.LASF63
 2706 05a2 01       		.byte	0x1
 2707 05a3 A804     		.2byte	0x4a8
 2708 05a5 77000000 		.4byte	0x77
 2709 05a9 02       		.uleb128 0x2
 2710 05aa 91       		.byte	0x91
 2711 05ab 64       		.sleb128 -28
 2712 05ac 0A       		.uleb128 0xa
 2713 05ad EA040000 		.4byte	.LASF21
 2714 05b1 01       		.byte	0x1
 2715 05b2 AA04     		.2byte	0x4aa
 2716 05b4 6B000000 		.4byte	0x6b
 2717 05b8 02       		.uleb128 0x2
 2718 05b9 91       		.byte	0x91
 2719 05ba 6F       		.sleb128 -17
 2720 05bb 00       		.byte	0
 2721 05bc 09       		.uleb128 0x9
 2722 05bd 33010000 		.4byte	.LASF67
 2723 05c1 01       		.byte	0x1
 2724 05c2 C904     		.2byte	0x4c9
 2725 05c4 00000000 		.4byte	.LFB33
 2726 05c8 48000000 		.4byte	.LFE33-.LFB33
 2727 05cc 01       		.uleb128 0x1
 2728 05cd 9C       		.byte	0x9c
 2729 05ce F1050000 		.4byte	0x5f1
 2730 05d2 0B       		.uleb128 0xb
 2731 05d3 4D010000 		.4byte	.LASF63
 2732 05d7 01       		.byte	0x1
 2733 05d8 C904     		.2byte	0x4c9
 2734 05da 77000000 		.4byte	0x77
 2735 05de 02       		.uleb128 0x2
 2736 05df 91       		.byte	0x91
 2737 05e0 64       		.sleb128 -28
 2738 05e1 0A       		.uleb128 0xa
 2739 05e2 EA040000 		.4byte	.LASF21
 2740 05e6 01       		.byte	0x1
 2741 05e7 CB04     		.2byte	0x4cb
 2742 05e9 6B000000 		.4byte	0x6b
 2743 05ed 02       		.uleb128 0x2
 2744 05ee 91       		.byte	0x91
 2745 05ef 6F       		.sleb128 -17
 2746 05f0 00       		.byte	0
ARM GAS  C:\Users\essele\AppData\Local\Temp\cc7wN8Yp.s 			page 74


 2747 05f1 09       		.uleb128 0x9
 2748 05f2 1F040000 		.4byte	.LASF68
 2749 05f6 01       		.byte	0x1
 2750 05f7 F104     		.2byte	0x4f1
 2751 05f9 00000000 		.4byte	.LFB34
 2752 05fd 3C000000 		.4byte	.LFE34-.LFB34
 2753 0601 01       		.uleb128 0x1
 2754 0602 9C       		.byte	0x9c
 2755 0603 35060000 		.4byte	0x635
 2756 0607 0B       		.uleb128 0xb
 2757 0608 59010000 		.4byte	.LASF39
 2758 060c 01       		.byte	0x1
 2759 060d F104     		.2byte	0x4f1
 2760 060f 77000000 		.4byte	0x77
 2761 0613 02       		.uleb128 0x2
 2762 0614 91       		.byte	0x91
 2763 0615 64       		.sleb128 -28
 2764 0616 0B       		.uleb128 0xb
 2765 0617 82010000 		.4byte	.LASF69
 2766 061b 01       		.byte	0x1
 2767 061c F104     		.2byte	0x4f1
 2768 061e 77000000 		.4byte	0x77
 2769 0622 02       		.uleb128 0x2
 2770 0623 91       		.byte	0x91
 2771 0624 60       		.sleb128 -32
 2772 0625 0A       		.uleb128 0xa
 2773 0626 EA040000 		.4byte	.LASF21
 2774 062a 01       		.byte	0x1
 2775 062b F304     		.2byte	0x4f3
 2776 062d 6B000000 		.4byte	0x6b
 2777 0631 02       		.uleb128 0x2
 2778 0632 91       		.byte	0x91
 2779 0633 6F       		.sleb128 -17
 2780 0634 00       		.byte	0
 2781 0635 0D       		.uleb128 0xd
 2782 0636 FA000000 		.4byte	.LASF70
 2783 063a 01       		.byte	0x1
 2784 063b 0E05     		.2byte	0x50e
 2785 063d 77000000 		.4byte	0x77
 2786 0641 00000000 		.4byte	.LFB35
 2787 0645 20000000 		.4byte	.LFE35-.LFB35
 2788 0649 01       		.uleb128 0x1
 2789 064a 9C       		.byte	0x9c
 2790 064b 0C       		.uleb128 0xc
 2791 064c EC030000 		.4byte	.LASF71
 2792 0650 01       		.byte	0x1
 2793 0651 2705     		.2byte	0x527
 2794 0653 00000000 		.4byte	.LFB36
 2795 0657 1C000000 		.4byte	.LFE36-.LFB36
 2796 065b 01       		.uleb128 0x1
 2797 065c 9C       		.byte	0x9c
 2798 065d 71060000 		.4byte	0x671
 2799 0661 0B       		.uleb128 0xb
 2800 0662 DE030000 		.4byte	.LASF72
 2801 0666 01       		.byte	0x1
 2802 0667 2705     		.2byte	0x527
 2803 0669 77000000 		.4byte	0x77
ARM GAS  C:\Users\essele\AppData\Local\Temp\cc7wN8Yp.s 			page 75


 2804 066d 02       		.uleb128 0x2
 2805 066e 91       		.byte	0x91
 2806 066f 74       		.sleb128 -12
 2807 0670 00       		.byte	0
 2808 0671 0D       		.uleb128 0xd
 2809 0672 64050000 		.4byte	.LASF73
 2810 0676 01       		.byte	0x1
 2811 0677 3E05     		.2byte	0x53e
 2812 0679 77000000 		.4byte	0x77
 2813 067d 00000000 		.4byte	.LFB37
 2814 0681 14000000 		.4byte	.LFE37-.LFB37
 2815 0685 01       		.uleb128 0x1
 2816 0686 9C       		.byte	0x9c
 2817 0687 0D       		.uleb128 0xd
 2818 0688 23000000 		.4byte	.LASF74
 2819 068c 01       		.byte	0x1
 2820 068d 5505     		.2byte	0x555
 2821 068f 77000000 		.4byte	0x77
 2822 0693 00000000 		.4byte	.LFB38
 2823 0697 14000000 		.4byte	.LFE38-.LFB38
 2824 069b 01       		.uleb128 0x1
 2825 069c 9C       		.byte	0x9c
 2826 069d 0C       		.uleb128 0xc
 2827 069e 47040000 		.4byte	.LASF75
 2828 06a2 01       		.byte	0x1
 2829 06a3 6C05     		.2byte	0x56c
 2830 06a5 00000000 		.4byte	.LFB39
 2831 06a9 1C000000 		.4byte	.LFE39-.LFB39
 2832 06ad 01       		.uleb128 0x1
 2833 06ae 9C       		.byte	0x9c
 2834 06af C3060000 		.4byte	0x6c3
 2835 06b3 0B       		.uleb128 0xb
 2836 06b4 DE030000 		.4byte	.LASF72
 2837 06b8 01       		.byte	0x1
 2838 06b9 6C05     		.2byte	0x56c
 2839 06bb 77000000 		.4byte	0x77
 2840 06bf 02       		.uleb128 0x2
 2841 06c0 91       		.byte	0x91
 2842 06c1 74       		.sleb128 -12
 2843 06c2 00       		.byte	0
 2844 06c3 0C       		.uleb128 0xc
 2845 06c4 B8000000 		.4byte	.LASF76
 2846 06c8 01       		.byte	0x1
 2847 06c9 8305     		.2byte	0x583
 2848 06cb 00000000 		.4byte	.LFB40
 2849 06cf 1C000000 		.4byte	.LFE40-.LFB40
 2850 06d3 01       		.uleb128 0x1
 2851 06d4 9C       		.byte	0x9c
 2852 06d5 E9060000 		.4byte	0x6e9
 2853 06d9 0B       		.uleb128 0xb
 2854 06da DE030000 		.4byte	.LASF72
 2855 06de 01       		.byte	0x1
 2856 06df 8305     		.2byte	0x583
 2857 06e1 77000000 		.4byte	0x77
 2858 06e5 02       		.uleb128 0x2
 2859 06e6 91       		.byte	0x91
 2860 06e7 74       		.sleb128 -12
ARM GAS  C:\Users\essele\AppData\Local\Temp\cc7wN8Yp.s 			page 76


 2861 06e8 00       		.byte	0
 2862 06e9 0E       		.uleb128 0xe
 2863 06ea 22050000 		.4byte	.LASF80
 2864 06ee 01       		.byte	0x1
 2865 06ef 15       		.byte	0x15
 2866 06f0 6B000000 		.4byte	0x6b
 2867 06f4 05       		.uleb128 0x5
 2868 06f5 03       		.byte	0x3
 2869 06f6 00000000 		.4byte	PWM_1_initVar
 2870 06fa 00       		.byte	0
 2871              		.section	.debug_abbrev,"",%progbits
 2872              	.Ldebug_abbrev0:
 2873 0000 01       		.uleb128 0x1
 2874 0001 11       		.uleb128 0x11
 2875 0002 01       		.byte	0x1
 2876 0003 25       		.uleb128 0x25
 2877 0004 0E       		.uleb128 0xe
 2878 0005 13       		.uleb128 0x13
 2879 0006 0B       		.uleb128 0xb
 2880 0007 03       		.uleb128 0x3
 2881 0008 0E       		.uleb128 0xe
 2882 0009 1B       		.uleb128 0x1b
 2883 000a 0E       		.uleb128 0xe
 2884 000b 55       		.uleb128 0x55
 2885 000c 17       		.uleb128 0x17
 2886 000d 11       		.uleb128 0x11
 2887 000e 01       		.uleb128 0x1
 2888 000f 10       		.uleb128 0x10
 2889 0010 17       		.uleb128 0x17
 2890 0011 00       		.byte	0
 2891 0012 00       		.byte	0
 2892 0013 02       		.uleb128 0x2
 2893 0014 24       		.uleb128 0x24
 2894 0015 00       		.byte	0
 2895 0016 0B       		.uleb128 0xb
 2896 0017 0B       		.uleb128 0xb
 2897 0018 3E       		.uleb128 0x3e
 2898 0019 0B       		.uleb128 0xb
 2899 001a 03       		.uleb128 0x3
 2900 001b 0E       		.uleb128 0xe
 2901 001c 00       		.byte	0
 2902 001d 00       		.byte	0
 2903 001e 03       		.uleb128 0x3
 2904 001f 24       		.uleb128 0x24
 2905 0020 00       		.byte	0
 2906 0021 0B       		.uleb128 0xb
 2907 0022 0B       		.uleb128 0xb
 2908 0023 3E       		.uleb128 0x3e
 2909 0024 0B       		.uleb128 0xb
 2910 0025 03       		.uleb128 0x3
 2911 0026 08       		.uleb128 0x8
 2912 0027 00       		.byte	0
 2913 0028 00       		.byte	0
 2914 0029 04       		.uleb128 0x4
 2915 002a 16       		.uleb128 0x16
 2916 002b 00       		.byte	0
 2917 002c 03       		.uleb128 0x3
ARM GAS  C:\Users\essele\AppData\Local\Temp\cc7wN8Yp.s 			page 77


 2918 002d 0E       		.uleb128 0xe
 2919 002e 3A       		.uleb128 0x3a
 2920 002f 0B       		.uleb128 0xb
 2921 0030 3B       		.uleb128 0x3b
 2922 0031 05       		.uleb128 0x5
 2923 0032 49       		.uleb128 0x49
 2924 0033 13       		.uleb128 0x13
 2925 0034 00       		.byte	0
 2926 0035 00       		.byte	0
 2927 0036 05       		.uleb128 0x5
 2928 0037 35       		.uleb128 0x35
 2929 0038 00       		.byte	0
 2930 0039 49       		.uleb128 0x49
 2931 003a 13       		.uleb128 0x13
 2932 003b 00       		.byte	0
 2933 003c 00       		.byte	0
 2934 003d 06       		.uleb128 0x6
 2935 003e 2E       		.uleb128 0x2e
 2936 003f 00       		.byte	0
 2937 0040 3F       		.uleb128 0x3f
 2938 0041 19       		.uleb128 0x19
 2939 0042 03       		.uleb128 0x3
 2940 0043 0E       		.uleb128 0xe
 2941 0044 3A       		.uleb128 0x3a
 2942 0045 0B       		.uleb128 0xb
 2943 0046 3B       		.uleb128 0x3b
 2944 0047 0B       		.uleb128 0xb
 2945 0048 27       		.uleb128 0x27
 2946 0049 19       		.uleb128 0x19
 2947 004a 11       		.uleb128 0x11
 2948 004b 01       		.uleb128 0x1
 2949 004c 12       		.uleb128 0x12
 2950 004d 06       		.uleb128 0x6
 2951 004e 40       		.uleb128 0x40
 2952 004f 18       		.uleb128 0x18
 2953 0050 9642     		.uleb128 0x2116
 2954 0052 19       		.uleb128 0x19
 2955 0053 00       		.byte	0
 2956 0054 00       		.byte	0
 2957 0055 07       		.uleb128 0x7
 2958 0056 2E       		.uleb128 0x2e
 2959 0057 01       		.byte	0x1
 2960 0058 3F       		.uleb128 0x3f
 2961 0059 19       		.uleb128 0x19
 2962 005a 03       		.uleb128 0x3
 2963 005b 0E       		.uleb128 0xe
 2964 005c 3A       		.uleb128 0x3a
 2965 005d 0B       		.uleb128 0xb
 2966 005e 3B       		.uleb128 0x3b
 2967 005f 0B       		.uleb128 0xb
 2968 0060 27       		.uleb128 0x27
 2969 0061 19       		.uleb128 0x19
 2970 0062 11       		.uleb128 0x11
 2971 0063 01       		.uleb128 0x1
 2972 0064 12       		.uleb128 0x12
 2973 0065 06       		.uleb128 0x6
 2974 0066 40       		.uleb128 0x40
ARM GAS  C:\Users\essele\AppData\Local\Temp\cc7wN8Yp.s 			page 78


 2975 0067 18       		.uleb128 0x18
 2976 0068 9642     		.uleb128 0x2116
 2977 006a 19       		.uleb128 0x19
 2978 006b 01       		.uleb128 0x1
 2979 006c 13       		.uleb128 0x13
 2980 006d 00       		.byte	0
 2981 006e 00       		.byte	0
 2982 006f 08       		.uleb128 0x8
 2983 0070 34       		.uleb128 0x34
 2984 0071 00       		.byte	0
 2985 0072 03       		.uleb128 0x3
 2986 0073 0E       		.uleb128 0xe
 2987 0074 3A       		.uleb128 0x3a
 2988 0075 0B       		.uleb128 0xb
 2989 0076 3B       		.uleb128 0x3b
 2990 0077 0B       		.uleb128 0xb
 2991 0078 49       		.uleb128 0x49
 2992 0079 13       		.uleb128 0x13
 2993 007a 02       		.uleb128 0x2
 2994 007b 18       		.uleb128 0x18
 2995 007c 00       		.byte	0
 2996 007d 00       		.byte	0
 2997 007e 09       		.uleb128 0x9
 2998 007f 2E       		.uleb128 0x2e
 2999 0080 01       		.byte	0x1
 3000 0081 3F       		.uleb128 0x3f
 3001 0082 19       		.uleb128 0x19
 3002 0083 03       		.uleb128 0x3
 3003 0084 0E       		.uleb128 0xe
 3004 0085 3A       		.uleb128 0x3a
 3005 0086 0B       		.uleb128 0xb
 3006 0087 3B       		.uleb128 0x3b
 3007 0088 05       		.uleb128 0x5
 3008 0089 27       		.uleb128 0x27
 3009 008a 19       		.uleb128 0x19
 3010 008b 11       		.uleb128 0x11
 3011 008c 01       		.uleb128 0x1
 3012 008d 12       		.uleb128 0x12
 3013 008e 06       		.uleb128 0x6
 3014 008f 40       		.uleb128 0x40
 3015 0090 18       		.uleb128 0x18
 3016 0091 9642     		.uleb128 0x2116
 3017 0093 19       		.uleb128 0x19
 3018 0094 01       		.uleb128 0x1
 3019 0095 13       		.uleb128 0x13
 3020 0096 00       		.byte	0
 3021 0097 00       		.byte	0
 3022 0098 0A       		.uleb128 0xa
 3023 0099 34       		.uleb128 0x34
 3024 009a 00       		.byte	0
 3025 009b 03       		.uleb128 0x3
 3026 009c 0E       		.uleb128 0xe
 3027 009d 3A       		.uleb128 0x3a
 3028 009e 0B       		.uleb128 0xb
 3029 009f 3B       		.uleb128 0x3b
 3030 00a0 05       		.uleb128 0x5
 3031 00a1 49       		.uleb128 0x49
ARM GAS  C:\Users\essele\AppData\Local\Temp\cc7wN8Yp.s 			page 79


 3032 00a2 13       		.uleb128 0x13
 3033 00a3 02       		.uleb128 0x2
 3034 00a4 18       		.uleb128 0x18
 3035 00a5 00       		.byte	0
 3036 00a6 00       		.byte	0
 3037 00a7 0B       		.uleb128 0xb
 3038 00a8 05       		.uleb128 0x5
 3039 00a9 00       		.byte	0
 3040 00aa 03       		.uleb128 0x3
 3041 00ab 0E       		.uleb128 0xe
 3042 00ac 3A       		.uleb128 0x3a
 3043 00ad 0B       		.uleb128 0xb
 3044 00ae 3B       		.uleb128 0x3b
 3045 00af 05       		.uleb128 0x5
 3046 00b0 49       		.uleb128 0x49
 3047 00b1 13       		.uleb128 0x13
 3048 00b2 02       		.uleb128 0x2
 3049 00b3 18       		.uleb128 0x18
 3050 00b4 00       		.byte	0
 3051 00b5 00       		.byte	0
 3052 00b6 0C       		.uleb128 0xc
 3053 00b7 2E       		.uleb128 0x2e
 3054 00b8 01       		.byte	0x1
 3055 00b9 3F       		.uleb128 0x3f
 3056 00ba 19       		.uleb128 0x19
 3057 00bb 03       		.uleb128 0x3
 3058 00bc 0E       		.uleb128 0xe
 3059 00bd 3A       		.uleb128 0x3a
 3060 00be 0B       		.uleb128 0xb
 3061 00bf 3B       		.uleb128 0x3b
 3062 00c0 05       		.uleb128 0x5
 3063 00c1 27       		.uleb128 0x27
 3064 00c2 19       		.uleb128 0x19
 3065 00c3 11       		.uleb128 0x11
 3066 00c4 01       		.uleb128 0x1
 3067 00c5 12       		.uleb128 0x12
 3068 00c6 06       		.uleb128 0x6
 3069 00c7 40       		.uleb128 0x40
 3070 00c8 18       		.uleb128 0x18
 3071 00c9 9742     		.uleb128 0x2117
 3072 00cb 19       		.uleb128 0x19
 3073 00cc 01       		.uleb128 0x1
 3074 00cd 13       		.uleb128 0x13
 3075 00ce 00       		.byte	0
 3076 00cf 00       		.byte	0
 3077 00d0 0D       		.uleb128 0xd
 3078 00d1 2E       		.uleb128 0x2e
 3079 00d2 00       		.byte	0
 3080 00d3 3F       		.uleb128 0x3f
 3081 00d4 19       		.uleb128 0x19
 3082 00d5 03       		.uleb128 0x3
 3083 00d6 0E       		.uleb128 0xe
 3084 00d7 3A       		.uleb128 0x3a
 3085 00d8 0B       		.uleb128 0xb
 3086 00d9 3B       		.uleb128 0x3b
 3087 00da 05       		.uleb128 0x5
 3088 00db 27       		.uleb128 0x27
ARM GAS  C:\Users\essele\AppData\Local\Temp\cc7wN8Yp.s 			page 80


 3089 00dc 19       		.uleb128 0x19
 3090 00dd 49       		.uleb128 0x49
 3091 00de 13       		.uleb128 0x13
 3092 00df 11       		.uleb128 0x11
 3093 00e0 01       		.uleb128 0x1
 3094 00e1 12       		.uleb128 0x12
 3095 00e2 06       		.uleb128 0x6
 3096 00e3 40       		.uleb128 0x40
 3097 00e4 18       		.uleb128 0x18
 3098 00e5 9742     		.uleb128 0x2117
 3099 00e7 19       		.uleb128 0x19
 3100 00e8 00       		.byte	0
 3101 00e9 00       		.byte	0
 3102 00ea 0E       		.uleb128 0xe
 3103 00eb 34       		.uleb128 0x34
 3104 00ec 00       		.byte	0
 3105 00ed 03       		.uleb128 0x3
 3106 00ee 0E       		.uleb128 0xe
 3107 00ef 3A       		.uleb128 0x3a
 3108 00f0 0B       		.uleb128 0xb
 3109 00f1 3B       		.uleb128 0x3b
 3110 00f2 0B       		.uleb128 0xb
 3111 00f3 49       		.uleb128 0x49
 3112 00f4 13       		.uleb128 0x13
 3113 00f5 3F       		.uleb128 0x3f
 3114 00f6 19       		.uleb128 0x19
 3115 00f7 02       		.uleb128 0x2
 3116 00f8 18       		.uleb128 0x18
 3117 00f9 00       		.byte	0
 3118 00fa 00       		.byte	0
 3119 00fb 00       		.byte	0
 3120              		.section	.debug_aranges,"",%progbits
 3121 0000 54010000 		.4byte	0x154
 3122 0004 0200     		.2byte	0x2
 3123 0006 00000000 		.4byte	.Ldebug_info0
 3124 000a 04       		.byte	0x4
 3125 000b 00       		.byte	0
 3126 000c 0000     		.2byte	0
 3127 000e 0000     		.2byte	0
 3128 0010 00000000 		.4byte	.LFB1
 3129 0014 5C000000 		.4byte	.LFE1-.LFB1
 3130 0018 00000000 		.4byte	.LFB2
 3131 001c 3C000000 		.4byte	.LFE2-.LFB2
 3132 0020 00000000 		.4byte	.LFB3
 3133 0024 24000000 		.4byte	.LFE3-.LFB3
 3134 0028 00000000 		.4byte	.LFB4
 3135 002c 34000000 		.4byte	.LFE4-.LFB4
 3136 0030 00000000 		.4byte	.LFB5
 3137 0034 48000000 		.4byte	.LFE5-.LFB5
 3138 0038 00000000 		.4byte	.LFB6
 3139 003c 48000000 		.4byte	.LFE6-.LFB6
 3140 0040 00000000 		.4byte	.LFB7
 3141 0044 48000000 		.4byte	.LFE7-.LFB7
 3142 0048 00000000 		.4byte	.LFB8
 3143 004c 50000000 		.4byte	.LFE8-.LFB8
 3144 0050 00000000 		.4byte	.LFB9
 3145 0054 20000000 		.4byte	.LFE9-.LFB9
ARM GAS  C:\Users\essele\AppData\Local\Temp\cc7wN8Yp.s 			page 81


 3146 0058 00000000 		.4byte	.LFB10
 3147 005c 4C000000 		.4byte	.LFE10-.LFB10
 3148 0060 00000000 		.4byte	.LFB11
 3149 0064 4C000000 		.4byte	.LFE11-.LFB11
 3150 0068 00000000 		.4byte	.LFB12
 3151 006c 50000000 		.4byte	.LFE12-.LFB12
 3152 0070 00000000 		.4byte	.LFB13
 3153 0074 48000000 		.4byte	.LFE13-.LFB13
 3154 0078 00000000 		.4byte	.LFB14
 3155 007c 20000000 		.4byte	.LFE14-.LFB14
 3156 0080 00000000 		.4byte	.LFB15
 3157 0084 18000000 		.4byte	.LFE15-.LFB15
 3158 0088 00000000 		.4byte	.LFB16
 3159 008c 48000000 		.4byte	.LFE16-.LFB16
 3160 0090 00000000 		.4byte	.LFB17
 3161 0094 20000000 		.4byte	.LFE17-.LFB17
 3162 0098 00000000 		.4byte	.LFB18
 3163 009c 18000000 		.4byte	.LFE18-.LFB18
 3164 00a0 00000000 		.4byte	.LFB19
 3165 00a4 48000000 		.4byte	.LFE19-.LFB19
 3166 00a8 00000000 		.4byte	.LFB20
 3167 00ac 20000000 		.4byte	.LFE20-.LFB20
 3168 00b0 00000000 		.4byte	.LFB21
 3169 00b4 18000000 		.4byte	.LFE21-.LFB21
 3170 00b8 00000000 		.4byte	.LFB22
 3171 00bc 4C000000 		.4byte	.LFE22-.LFB22
 3172 00c0 00000000 		.4byte	.LFB23
 3173 00c4 20000000 		.4byte	.LFE23-.LFB23
 3174 00c8 00000000 		.4byte	.LFB24
 3175 00cc 18000000 		.4byte	.LFE24-.LFB24
 3176 00d0 00000000 		.4byte	.LFB25
 3177 00d4 20000000 		.4byte	.LFE25-.LFB25
 3178 00d8 00000000 		.4byte	.LFB26
 3179 00dc 18000000 		.4byte	.LFE26-.LFB26
 3180 00e0 00000000 		.4byte	.LFB27
 3181 00e4 18000000 		.4byte	.LFE27-.LFB27
 3182 00e8 00000000 		.4byte	.LFB28
 3183 00ec 18000000 		.4byte	.LFE28-.LFB28
 3184 00f0 00000000 		.4byte	.LFB29
 3185 00f4 44000000 		.4byte	.LFE29-.LFB29
 3186 00f8 00000000 		.4byte	.LFB30
 3187 00fc 48000000 		.4byte	.LFE30-.LFB30
 3188 0100 00000000 		.4byte	.LFB31
 3189 0104 4C000000 		.4byte	.LFE31-.LFB31
 3190 0108 00000000 		.4byte	.LFB32
 3191 010c 48000000 		.4byte	.LFE32-.LFB32
 3192 0110 00000000 		.4byte	.LFB33
 3193 0114 48000000 		.4byte	.LFE33-.LFB33
 3194 0118 00000000 		.4byte	.LFB34
 3195 011c 3C000000 		.4byte	.LFE34-.LFB34
 3196 0120 00000000 		.4byte	.LFB35
 3197 0124 20000000 		.4byte	.LFE35-.LFB35
 3198 0128 00000000 		.4byte	.LFB36
 3199 012c 1C000000 		.4byte	.LFE36-.LFB36
 3200 0130 00000000 		.4byte	.LFB37
 3201 0134 14000000 		.4byte	.LFE37-.LFB37
 3202 0138 00000000 		.4byte	.LFB38
ARM GAS  C:\Users\essele\AppData\Local\Temp\cc7wN8Yp.s 			page 82


 3203 013c 14000000 		.4byte	.LFE38-.LFB38
 3204 0140 00000000 		.4byte	.LFB39
 3205 0144 1C000000 		.4byte	.LFE39-.LFB39
 3206 0148 00000000 		.4byte	.LFB40
 3207 014c 1C000000 		.4byte	.LFE40-.LFB40
 3208 0150 00000000 		.4byte	0
 3209 0154 00000000 		.4byte	0
 3210              		.section	.debug_ranges,"",%progbits
 3211              	.Ldebug_ranges0:
 3212 0000 00000000 		.4byte	.LFB1
 3213 0004 5C000000 		.4byte	.LFE1
 3214 0008 00000000 		.4byte	.LFB2
 3215 000c 3C000000 		.4byte	.LFE2
 3216 0010 00000000 		.4byte	.LFB3
 3217 0014 24000000 		.4byte	.LFE3
 3218 0018 00000000 		.4byte	.LFB4
 3219 001c 34000000 		.4byte	.LFE4
 3220 0020 00000000 		.4byte	.LFB5
 3221 0024 48000000 		.4byte	.LFE5
 3222 0028 00000000 		.4byte	.LFB6
 3223 002c 48000000 		.4byte	.LFE6
 3224 0030 00000000 		.4byte	.LFB7
 3225 0034 48000000 		.4byte	.LFE7
 3226 0038 00000000 		.4byte	.LFB8
 3227 003c 50000000 		.4byte	.LFE8
 3228 0040 00000000 		.4byte	.LFB9
 3229 0044 20000000 		.4byte	.LFE9
 3230 0048 00000000 		.4byte	.LFB10
 3231 004c 4C000000 		.4byte	.LFE10
 3232 0050 00000000 		.4byte	.LFB11
 3233 0054 4C000000 		.4byte	.LFE11
 3234 0058 00000000 		.4byte	.LFB12
 3235 005c 50000000 		.4byte	.LFE12
 3236 0060 00000000 		.4byte	.LFB13
 3237 0064 48000000 		.4byte	.LFE13
 3238 0068 00000000 		.4byte	.LFB14
 3239 006c 20000000 		.4byte	.LFE14
 3240 0070 00000000 		.4byte	.LFB15
 3241 0074 18000000 		.4byte	.LFE15
 3242 0078 00000000 		.4byte	.LFB16
 3243 007c 48000000 		.4byte	.LFE16
 3244 0080 00000000 		.4byte	.LFB17
 3245 0084 20000000 		.4byte	.LFE17
 3246 0088 00000000 		.4byte	.LFB18
 3247 008c 18000000 		.4byte	.LFE18
 3248 0090 00000000 		.4byte	.LFB19
 3249 0094 48000000 		.4byte	.LFE19
 3250 0098 00000000 		.4byte	.LFB20
 3251 009c 20000000 		.4byte	.LFE20
 3252 00a0 00000000 		.4byte	.LFB21
 3253 00a4 18000000 		.4byte	.LFE21
 3254 00a8 00000000 		.4byte	.LFB22
 3255 00ac 4C000000 		.4byte	.LFE22
 3256 00b0 00000000 		.4byte	.LFB23
 3257 00b4 20000000 		.4byte	.LFE23
 3258 00b8 00000000 		.4byte	.LFB24
 3259 00bc 18000000 		.4byte	.LFE24
ARM GAS  C:\Users\essele\AppData\Local\Temp\cc7wN8Yp.s 			page 83


 3260 00c0 00000000 		.4byte	.LFB25
 3261 00c4 20000000 		.4byte	.LFE25
 3262 00c8 00000000 		.4byte	.LFB26
 3263 00cc 18000000 		.4byte	.LFE26
 3264 00d0 00000000 		.4byte	.LFB27
 3265 00d4 18000000 		.4byte	.LFE27
 3266 00d8 00000000 		.4byte	.LFB28
 3267 00dc 18000000 		.4byte	.LFE28
 3268 00e0 00000000 		.4byte	.LFB29
 3269 00e4 44000000 		.4byte	.LFE29
 3270 00e8 00000000 		.4byte	.LFB30
 3271 00ec 48000000 		.4byte	.LFE30
 3272 00f0 00000000 		.4byte	.LFB31
 3273 00f4 4C000000 		.4byte	.LFE31
 3274 00f8 00000000 		.4byte	.LFB32
 3275 00fc 48000000 		.4byte	.LFE32
 3276 0100 00000000 		.4byte	.LFB33
 3277 0104 48000000 		.4byte	.LFE33
 3278 0108 00000000 		.4byte	.LFB34
 3279 010c 3C000000 		.4byte	.LFE34
 3280 0110 00000000 		.4byte	.LFB35
 3281 0114 20000000 		.4byte	.LFE35
 3282 0118 00000000 		.4byte	.LFB36
 3283 011c 1C000000 		.4byte	.LFE36
 3284 0120 00000000 		.4byte	.LFB37
 3285 0124 14000000 		.4byte	.LFE37
 3286 0128 00000000 		.4byte	.LFB38
 3287 012c 14000000 		.4byte	.LFE38
 3288 0130 00000000 		.4byte	.LFB39
 3289 0134 1C000000 		.4byte	.LFE39
 3290 0138 00000000 		.4byte	.LFB40
 3291 013c 1C000000 		.4byte	.LFE40
 3292 0140 00000000 		.4byte	0
 3293 0144 00000000 		.4byte	0
 3294              		.section	.debug_line,"",%progbits
 3295              	.Ldebug_line0:
 3296 0000 6F030000 		.section	.debug_str,"MS",%progbits,1
 3296      02004200 
 3296      00000201 
 3296      FB0E0D00 
 3296      01010101 
 3297              	.LASF41:
 3298 0000 636F756E 		.ascii	"count\000"
 3298      7400
 3299              	.LASF20:
 3300 0006 50574D5F 		.ascii	"PWM_1_Stop\000"
 3300      315F5374 
 3300      6F7000
 3301              	.LASF60:
 3302 0011 50574D5F 		.ascii	"PWM_1_ReadCapture\000"
 3302      315F5265 
 3302      61644361 
 3302      70747572 
 3302      6500
 3303              	.LASF74:
 3304 0023 50574D5F 		.ascii	"PWM_1_GetInterruptSource\000"
 3304      315F4765 
ARM GAS  C:\Users\essele\AppData\Local\Temp\cc7wN8Yp.s 			page 84


 3304      74496E74 
 3304      65727275 
 3304      7074536F 
 3305              	.LASF50:
 3306 003c 50574D5F 		.ascii	"PWM_1_WritePeriodBuf\000"
 3306      315F5772 
 3306      69746550 
 3306      6572696F 
 3306      64427566 
 3307              	.LASF78:
 3308 0051 47656E65 		.ascii	"Generated_Source\\PSoC4\\PWM_1.c\000"
 3308      72617465 
 3308      645F536F 
 3308      75726365 
 3308      5C50536F 
 3309              	.LASF45:
 3310 0070 70657269 		.ascii	"period\000"
 3310      6F6400
 3311              	.LASF7:
 3312 0077 6C6F6E67 		.ascii	"long long unsigned int\000"
 3312      206C6F6E 
 3312      6720756E 
 3312      7369676E 
 3312      65642069 
 3313              	.LASF25:
 3314 008e 71644D6F 		.ascii	"qdMode\000"
 3314      646500
 3315              	.LASF28:
 3316 0095 50574D5F 		.ascii	"PWM_1_SetOneShot\000"
 3316      315F5365 
 3316      744F6E65 
 3316      53686F74 
 3316      00
 3317              	.LASF56:
 3318 00a6 50574D5F 		.ascii	"PWM_1_ReadCompare\000"
 3318      315F5265 
 3318      6164436F 
 3318      6D706172 
 3318      6500
 3319              	.LASF76:
 3320 00b8 50574D5F 		.ascii	"PWM_1_SetInterrupt\000"
 3320      315F5365 
 3320      74496E74 
 3320      65727275 
 3320      707400
 3321              	.LASF6:
 3322 00cb 6C6F6E67 		.ascii	"long long int\000"
 3322      206C6F6E 
 3322      6720696E 
 3322      7400
 3323              	.LASF0:
 3324 00d9 7369676E 		.ascii	"signed char\000"
 3324      65642063 
 3324      68617200 
 3325              	.LASF61:
 3326 00e5 50574D5F 		.ascii	"PWM_1_ReadCaptureBuf\000"
 3326      315F5265 
ARM GAS  C:\Users\essele\AppData\Local\Temp\cc7wN8Yp.s 			page 85


 3326      61644361 
 3326      70747572 
 3326      65427566 
 3327              	.LASF70:
 3328 00fa 50574D5F 		.ascii	"PWM_1_ReadStatus\000"
 3328      315F5265 
 3328      61645374 
 3328      61747573 
 3328      00
 3329              	.LASF4:
 3330 010b 6C6F6E67 		.ascii	"long int\000"
 3330      20696E74 
 3330      00
 3331              	.LASF9:
 3332 0114 75696E74 		.ascii	"uint8\000"
 3332      3800
 3333              	.LASF12:
 3334 011a 646F7562 		.ascii	"double\000"
 3334      6C6500
 3335              	.LASF46:
 3336 0121 50574D5F 		.ascii	"PWM_1_ReadCounter\000"
 3336      315F5265 
 3336      6164436F 
 3336      756E7465 
 3336      7200
 3337              	.LASF67:
 3338 0133 50574D5F 		.ascii	"PWM_1_SetCountMode\000"
 3338      315F5365 
 3338      74436F75 
 3338      6E744D6F 
 3338      646500
 3339              	.LASF10:
 3340 0146 75696E74 		.ascii	"uint32\000"
 3340      333200
 3341              	.LASF63:
 3342 014d 74726967 		.ascii	"triggerMode\000"
 3342      6765724D 
 3342      6F646500 
 3343              	.LASF39:
 3344 0159 6D61736B 		.ascii	"mask\000"
 3344      00
 3345              	.LASF37:
 3346 015e 64656164 		.ascii	"deadTime\000"
 3346      54696D65 
 3346      00
 3347              	.LASF8:
 3348 0167 756E7369 		.ascii	"unsigned int\000"
 3348      676E6564 
 3348      20696E74 
 3348      00
 3349              	.LASF22:
 3350 0174 50574D5F 		.ascii	"PWM_1_SetMode\000"
 3350      315F5365 
 3350      744D6F64 
 3350      6500
 3351              	.LASF69:
 3352 0182 636F6D6D 		.ascii	"command\000"
ARM GAS  C:\Users\essele\AppData\Local\Temp\cc7wN8Yp.s 			page 86


 3352      616E6400 
 3353              	.LASF5:
 3354 018a 6C6F6E67 		.ascii	"long unsigned int\000"
 3354      20756E73 
 3354      69676E65 
 3354      6420696E 
 3354      7400
 3355              	.LASF31:
 3356 019c 6D6F6465 		.ascii	"modeMask\000"
 3356      4D61736B 
 3356      00
 3357              	.LASF47:
 3358 01a5 50574D5F 		.ascii	"PWM_1_ReadPeriod\000"
 3358      315F5265 
 3358      61645065 
 3358      72696F64 
 3358      00
 3359              	.LASF54:
 3360 01b6 50574D5F 		.ascii	"PWM_1_WriteCompare\000"
 3360      315F5772 
 3360      69746543 
 3360      6F6D7061 
 3360      726500
 3361              	.LASF3:
 3362 01c9 73686F72 		.ascii	"short unsigned int\000"
 3362      7420756E 
 3362      7369676E 
 3362      65642069 
 3362      6E7400
 3363              	.LASF29:
 3364 01dc 6F6E6553 		.ascii	"oneShotEnable\000"
 3364      686F7445 
 3364      6E61626C 
 3364      6500
 3365              	.LASF19:
 3366 01ea 50574D5F 		.ascii	"PWM_1_Enable\000"
 3366      315F456E 
 3366      61626C65 
 3366      00
 3367              	.LASF17:
 3368 01f7 50574D5F 		.ascii	"PWM_1_Init\000"
 3368      315F496E 
 3368      697400
 3369              	.LASF77:
 3370 0202 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 3370      43313120 
 3370      352E342E 
 3370      31203230 
 3370      31363036 
 3371 0235 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m0 -mthumb -g -O"
 3371      20726576 
 3371      6973696F 
 3371      6E203233 
 3371      37373135 
 3372 0268 30202D66 		.ascii	"0 -ffunction-sections -ffat-lto-objects\000"
 3372      66756E63 
 3372      74696F6E 
ARM GAS  C:\Users\essele\AppData\Local\Temp\cc7wN8Yp.s 			page 87


 3372      2D736563 
 3372      74696F6E 
 3373              	.LASF14:
 3374 0290 72656733 		.ascii	"reg32\000"
 3374      3200
 3375              	.LASF40:
 3376 0296 50574D5F 		.ascii	"PWM_1_WriteCounter\000"
 3376      315F5772 
 3376      69746543 
 3376      6F756E74 
 3376      657200
 3377              	.LASF34:
 3378 02a9 50574D5F 		.ascii	"PWM_1_SetPWMStopOnKill\000"
 3378      315F5365 
 3378      7450574D 
 3378      53746F70 
 3378      4F6E4B69 
 3379              	.LASF16:
 3380 02c0 73697A65 		.ascii	"sizetype\000"
 3380      74797065 
 3380      00
 3381              	.LASF15:
 3382 02c9 6C6F6E67 		.ascii	"long double\000"
 3382      20646F75 
 3382      626C6500 
 3383              	.LASF55:
 3384 02d5 636F6D70 		.ascii	"compare\000"
 3384      61726500 
 3385              	.LASF30:
 3386 02dd 50574D5F 		.ascii	"PWM_1_SetPWMMode\000"
 3386      315F5365 
 3386      7450574D 
 3386      4D6F6465 
 3386      00
 3387              	.LASF42:
 3388 02ee 50574D5F 		.ascii	"PWM_1_SetCounterMode\000"
 3388      315F5365 
 3388      74436F75 
 3388      6E746572 
 3388      4D6F6465 
 3389              	.LASF59:
 3390 0303 50574D5F 		.ascii	"PWM_1_ReadCompareBuf\000"
 3390      315F5265 
 3390      6164436F 
 3390      6D706172 
 3390      65427566 
 3391              	.LASF48:
 3392 0318 50574D5F 		.ascii	"PWM_1_SetCompareSwap\000"
 3392      315F5365 
 3392      74436F6D 
 3392      70617265 
 3392      53776170 
 3393              	.LASF11:
 3394 032d 666C6F61 		.ascii	"float\000"
 3394      7400
 3395              	.LASF27:
 3396 0333 70726573 		.ascii	"prescaler\000"
ARM GAS  C:\Users\essele\AppData\Local\Temp\cc7wN8Yp.s 			page 88


 3396      63616C65 
 3396      7200
 3397              	.LASF52:
 3398 033d 50574D5F 		.ascii	"PWM_1_ReadPeriodBuf\000"
 3398      315F5265 
 3398      61645065 
 3398      72696F64 
 3398      42756600 
 3399              	.LASF38:
 3400 0351 50574D5F 		.ascii	"PWM_1_SetPWMInvert\000"
 3400      315F5365 
 3400      7450574D 
 3400      496E7665 
 3400      727400
 3401              	.LASF65:
 3402 0364 50574D5F 		.ascii	"PWM_1_SetStartMode\000"
 3402      315F5365 
 3402      74537461 
 3402      72744D6F 
 3402      646500
 3403              	.LASF1:
 3404 0377 756E7369 		.ascii	"unsigned char\000"
 3404      676E6564 
 3404      20636861 
 3404      7200
 3405              	.LASF36:
 3406 0385 50574D5F 		.ascii	"PWM_1_SetPWMDeadTime\000"
 3406      315F5365 
 3406      7450574D 
 3406      44656164 
 3406      54696D65 
 3407              	.LASF32:
 3408 039a 50574D5F 		.ascii	"PWM_1_SetPWMSyncKill\000"
 3408      315F5365 
 3408      7450574D 
 3408      53796E63 
 3408      4B696C6C 
 3409              	.LASF35:
 3410 03af 73746F70 		.ascii	"stopOnKillEnable\000"
 3410      4F6E4B69 
 3410      6C6C456E 
 3410      61626C65 
 3410      00
 3411              	.LASF2:
 3412 03c0 73686F72 		.ascii	"short int\000"
 3412      7420696E 
 3412      7400
 3413              	.LASF53:
 3414 03ca 50574D5F 		.ascii	"PWM_1_SetPeriodSwap\000"
 3414      315F5365 
 3414      74506572 
 3414      696F6453 
 3414      77617000 
 3415              	.LASF72:
 3416 03de 696E7465 		.ascii	"interruptMask\000"
 3416      72727570 
 3416      744D6173 
ARM GAS  C:\Users\essele\AppData\Local\Temp\cc7wN8Yp.s 			page 89


 3416      6B00
 3417              	.LASF71:
 3418 03ec 50574D5F 		.ascii	"PWM_1_SetInterruptMode\000"
 3418      315F5365 
 3418      74496E74 
 3418      65727275 
 3418      70744D6F 
 3419              	.LASF66:
 3420 0403 50574D5F 		.ascii	"PWM_1_SetStopMode\000"
 3420      315F5365 
 3420      7453746F 
 3420      704D6F64 
 3420      6500
 3421              	.LASF13:
 3422 0415 63686172 		.ascii	"char\000"
 3422      00
 3423              	.LASF24:
 3424 041a 6D6F6465 		.ascii	"mode\000"
 3424      00
 3425              	.LASF68:
 3426 041f 50574D5F 		.ascii	"PWM_1_TriggerCommand\000"
 3426      315F5472 
 3426      69676765 
 3426      72436F6D 
 3426      6D616E64 
 3427              	.LASF26:
 3428 0434 50574D5F 		.ascii	"PWM_1_SetPrescaler\000"
 3428      315F5365 
 3428      74507265 
 3428      7363616C 
 3428      657200
 3429              	.LASF75:
 3430 0447 50574D5F 		.ascii	"PWM_1_ClearInterrupt\000"
 3430      315F436C 
 3430      65617249 
 3430      6E746572 
 3430      72757074 
 3431              	.LASF57:
 3432 045c 50574D5F 		.ascii	"PWM_1_WriteCompareBuf\000"
 3432      315F5772 
 3432      69746543 
 3432      6F6D7061 
 3432      72654275 
 3433              	.LASF43:
 3434 0472 636F756E 		.ascii	"counterMode\000"
 3434      7465724D 
 3434      6F646500 
 3435              	.LASF58:
 3436 047e 636F6D70 		.ascii	"compareBuf\000"
 3436      61726542 
 3436      756600
 3437              	.LASF18:
 3438 0489 50574D5F 		.ascii	"PWM_1_Start\000"
 3438      315F5374 
 3438      61727400 
 3439              	.LASF64:
 3440 0495 50574D5F 		.ascii	"PWM_1_SetReloadMode\000"
ARM GAS  C:\Users\essele\AppData\Local\Temp\cc7wN8Yp.s 			page 90


 3440      315F5365 
 3440      7452656C 
 3440      6F61644D 
 3440      6F646500 
 3441              	.LASF79:
 3442 04a9 5C5C4D61 		.ascii	"\\\\Mac\\Home\\Documents\\dev\\yaugi\\GPIB USB Adap"
 3442      635C486F 
 3442      6D655C44 
 3442      6F63756D 
 3442      656E7473 
 3443 04d5 7465725C 		.ascii	"ter\\GPIB USB 1.cydsn\000"
 3443      47504942 
 3443      20555342 
 3443      20312E63 
 3443      7964736E 
 3444              	.LASF21:
 3445 04ea 656E6162 		.ascii	"enableInterrupts\000"
 3445      6C65496E 
 3445      74657272 
 3445      75707473 
 3445      00
 3446              	.LASF44:
 3447 04fb 50574D5F 		.ascii	"PWM_1_WritePeriod\000"
 3447      315F5772 
 3447      69746550 
 3447      6572696F 
 3447      6400
 3448              	.LASF62:
 3449 050d 50574D5F 		.ascii	"PWM_1_SetCaptureMode\000"
 3449      315F5365 
 3449      74436170 
 3449      74757265 
 3449      4D6F6465 
 3450              	.LASF80:
 3451 0522 50574D5F 		.ascii	"PWM_1_initVar\000"
 3451      315F696E 
 3451      69745661 
 3451      7200
 3452              	.LASF33:
 3453 0530 73796E63 		.ascii	"syncKillEnable\000"
 3453      4B696C6C 
 3453      456E6162 
 3453      6C6500
 3454              	.LASF23:
 3455 053f 50574D5F 		.ascii	"PWM_1_SetQDMode\000"
 3455      315F5365 
 3455      7451444D 
 3455      6F646500 
 3456              	.LASF49:
 3457 054f 73776170 		.ascii	"swapEnable\000"
 3457      456E6162 
 3457      6C6500
 3458              	.LASF51:
 3459 055a 70657269 		.ascii	"periodBuf\000"
 3459      6F644275 
 3459      6600
 3460              	.LASF73:
ARM GAS  C:\Users\essele\AppData\Local\Temp\cc7wN8Yp.s 			page 91


 3461 0564 50574D5F 		.ascii	"PWM_1_GetInterruptSourceMasked\000"
 3461      315F4765 
 3461      74496E74 
 3461      65727275 
 3461      7074536F 
 3462              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
